#+ Version....: T6-ERP-1.00.00 Build-000006
#+ 
#+ Filename...: adzi230
#+ Buildtype..: 應用t01樣板自動產生
#+ Memo.......:

{<point name="global.memo" />}
 
IMPORT os
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
{<Module define>}
 
#單頭 type 宣告
PRIVATE type type_g_dzch_m        RECORD
       dzch001 LIKE dzch_t.dzch001, 
   dzch002 LIKE dzch_t.dzch002, 
   dzchstus LIKE dzch_t.dzchstus, 
   dzchmodu LIKE dzch_t.dzchmodu, 
   modu_desc LIKE type_t.chr500, 
   dzchdate DATETIME YEAR TO SECOND, 
   dzchoriu LIKE dzch_t.dzchoriu, 
   oriu_desc LIKE type_t.chr500, 
   dzchorid LIKE dzch_t.dzchorid, 
   orid_desc LIKE type_t.chr500, 
   dzchuser LIKE dzch_t.dzchuser, 
   user_desc LIKE type_t.chr500, 
   dzchdept LIKE dzch_t.dzchdept, 
   dept_desc LIKE type_t.chr500, 
   dzchbuid DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_dzci_d        RECORD
       dzci002 LIKE dzci_t.dzci002, 
   dzci003 LIKE dzci_t.dzci003
       END RECORD

 
#模組變數(Module Variables)
DEFINE g_dzch_m          type_g_dzch_m
DEFINE g_dzch_m_t        type_g_dzch_m
 
DEFINE g_dzch001_t     LIKE dzch_t.dzch001

 
DEFINE g_dzci_d          DYNAMIC ARRAY OF type_g_dzci_d
DEFINE g_dzci_d_t        type_g_dzci_d

 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_dzch001 LIKE dzch_t.dzch001,
      b_dzch002 LIKE dzch_t.dzch002,
         rank           LIKE type_t.num10
      END RECORD 
      
#無單頭append欄位定義
#無單身append欄位定義
 
DEFINE g_wc                  STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_before_input_done   LIKE type_t.num5 
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
 
DEFINE g_wc_table1           STRING                        #第1個單身table所使用的g_wc

 
{</Module define>}
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#+ 作業開始
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point    
    
   #定義在其他link的程式則無效
   WHENEVER ERROR CALL cl_err_msg_log
 
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("adz","")
   
   #add-point:作業初始化
   {<point name="main.init"/>}
   #end add-point
 
   #LOCK CURSOR
   LET g_forupd_sql = "SELECT dzch001,dzch002,dzchstus,dzchmodu,'',dzchdate,dzchoriu,'',dzchorid,'',dzchuser,'',dzchdept,'',dzchbuid FROM dzch_t WHERE dzch001=? FOR UPDATE"
   LET g_forupd_sql = cl_forupd_sql(g_forupd_sql)
   DECLARE adzi230_cl CURSOR FROM g_forupd_sql   #cursor lock 
   
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_adzi230 WITH FORM cl_ap_formpath("adz",g_prog)
 
      #程式初始化
      CALL adzi230_init()
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #進入選單 Menu (='N')
      CALL adzi230_ui_dialog() 
 
      #畫面關閉
      CLOSE WINDOW w_adzi230
   END IF
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
    
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION adzi230_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL adzi230_default_search()
    
END FUNCTION
 
 
#+ 功能選單
PRIVATE FUNCTION adzi230_ui_dialog()
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   CALL adzi230_browser_fill("")
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   WHILE TRUE 
   
      CALL adzi230_browser_fill("")
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
         INPUT g_searchstr,g_searchcol FROM formonly.searchstr,formonly.cbo_searchcol
         
            BEFORE INPUT
            
         END INPUT
      
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
         
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
               
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL adzi230_fetch('') # reload data
               CALL cl_ui_set_browse_page_button(g_curr_diag,g_page_action,g_pagestart,g_browser_cnt)
               LET g_detail_idx = 1
               CALL adzi230_ui_detailshow() #Setting the current row 
      
               CALL adzi230_idx_chk()
               #NEXT FIELD dzci002
         
         END DISPLAY
        
         DISPLAY ARRAY g_dzci_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               CALL adzi230_idx_chk()
               
            BEFORE DISPLAY
               LET g_current_page = 1
               CALL adzi230_idx_chk()
               
            
               
         END DISPLAY
        

      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL adzi230_fetch('') # reload data
            END IF
            CALL cl_ui_set_browse_page_button(g_curr_diag,g_page_action,g_pagestart,g_browser_cnt)
            LET g_detail_idx = 1
            CALL adzi230_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL adzi230_idx_chk()
            
            #NEXT FIELD dzci002
      
         #add-point:ui_dialog段define
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
      
         #Browser用Action
      
         #一般搜尋
         ON ACTION searchdata
            #取得搜尋關鍵字
            INITIALIZE g_wc TO NULL
            INITIALIZE g_wc2 TO NULL
            INITIALIZE g_wc_table1 TO NULL

            LET g_searchstr = GET_FLDBUF(searchstr)
            IF NOT adzi230_browser_search("normal") THEN
               CONTINUE DIALOG
            END IF
            LET g_current_idx = 1
            IF g_browser.getLength() = 0 THEN
               CALL cl_err('',-100,1)
            END IF   
            LET g_action_choice = "searchdata"
            EXIT DIALOG
      
         #進階搜尋
         ON ACTION advancesearch    
         
         #升冪排序
         ON ACTION ascending
            INITIALIZE g_wc TO NULL
            INITIALIZE g_wc2 TO NULL
            LET g_order = "ASC"
            LET g_current_idx = 1
            LET g_searchstr = GET_FLDBUF(searchstr)
            
            IF NOT adzi230_browser_search("normal") THEN
               CONTINUE DIALOG
            END IF
            IF g_browser.getLength() = 0 THEN
               CALL cl_err('',-100,1)
            END IF   
            LET g_action_choice = "ASCENDING"
            EXIT DIALOG
       
         #降冪排序
         ON ACTION descending
            INITIALIZE g_wc TO NULL
            INITIALIZE g_wc2 TO NULL
            LET g_order = "DESC"
            LET g_current_idx = 1
            LET g_searchstr = GET_FLDBUF(searchstr)
            
            IF NOT adzi230_browser_search("normal") THEN
               CONTINUE DIALOG
            END IF
            IF g_browser.getLength() = 0 THEN
               CALL cl_err('',-100,1)
            END IF   
            LET g_action_choice = "DESCENDING"
            EXIT DIALOG
            
         ON ACTION statechange
            CALL adzi230_statechange()
            LET g_action_choice = "statechange"
            EXIT DIALOG
      
         #簽核
         ON ACTION signature
            MENU "" ATTRIBUTES( STYLE="popup", IMAGE="tb/authorize/terminate.png" )
               ON ACTION ef_sign
               ON ACTION stop_authflow
               ON ACTION add_auth
               ON ACTION revoke_auth
               ON ACTION approve
               ON ACTION unapprove
               ON ACTION auth_opinion
               ON ACTION auth_status
               ON ACTION auth_attach
               ON ACTION authflow_designer
            END MENU
          
         #ACTION表單列
         ON ACTION first
            CALL adzi230_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adzi230_idx_chk()
            
         ON ACTION previous
            CALL adzi230_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adzi230_idx_chk()
            
         ON ACTION jump
            CALL adzi230_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adzi230_idx_chk()
            
         ON ACTION next
            CALL adzi230_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adzi230_idx_chk()
            
         ON ACTION last
            CALL adzi230_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adzi230_idx_chk()
            
         ON ACTION close
            LET INT_FLAG=FALSE        
            LET g_action_choice = "exit"
            EXIT WHILE
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT WHILE
          
         ON ACTION bw_first               #page first 
            CALL adzi230_browser_fill("F") 
            CALL cl_ui_set_browse_page_button(g_curr_diag,g_page_action,g_pagestart,g_browser_cnt) 
            CALL adzi230_fetch('')
		 
         ON ACTION bw_prev                #page previous
            CALL adzi230_browser_fill("P") 
            CALL cl_ui_set_browse_page_button(g_curr_diag,g_page_action,g_pagestart,g_browser_cnt) 
            CALL adzi230_fetch('')
		 
         ON ACTION bw_next                #page next
            CALL adzi230_browser_fill("N") 
            CALL cl_ui_set_browse_page_button(g_curr_diag,g_page_action,g_pagestart,g_browser_cnt) 
            CALL adzi230_fetch('') 
		  
         ON ACTION bw_last                #page last 
            CALL adzi230_browser_fill("L") 
            CALL cl_ui_set_browse_page_button(g_curr_diag,g_page_action,g_pagestart,g_browser_cnt) 
            CALL adzi230_fetch('')
	  
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementImage("mainhidden","small/arr-r.png")
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementImage("mainhidden","small/arr-l.png")
               LET g_main_hidden = 1
            END IF
       
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_worksheet_hidden THEN
               CALL gfrm_curr.setElementHidden("worksheet",0)
               CALL gfrm_curr.setElementImage("worksheethidden","small/arr-l.png")
               LET g_worksheet_hidden = 0
               NEXT FIELD b_dzch001
            ELSE
               CALL gfrm_curr.setElementHidden("worksheet",1)
               CALL gfrm_curr.setElementImage("worksheethidden","small/arr-r.png")
               LET g_worksheet_hidden = 1
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("worksheet_detail",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("worksheet_detail",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
      
         


         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_chk_act_auth() THEN 
               CALL adzi230_delete()
            #add-point:ON ACTION delete
            {<point name="menu.delete" />}
            #END add-point

                EXIT DIALOG
            END IF



         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_chk_act_auth() THEN 
               CALL adzi230_insert()
            #add-point:ON ACTION insert
            {<point name="menu.insert" />}
            #END add-point

                EXIT DIALOG
            END IF



         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_chk_act_auth() THEN 
               CALL adzi230_modify()
            #add-point:ON ACTION modify
            {<point name="menu.modify" />}
            #END add-point

                EXIT DIALOG
            END IF



         ON ACTION query
            LET g_action_choice="query"
            IF cl_chk_act_auth() THEN 
               CALL adzi230_query()
            #add-point:ON ACTION query
            {<point name="menu.query" />}
            #END add-point

                EXIT DIALOG
            END IF



         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_chk_act_auth() THEN 
               CALL adzi230_reproduce()
            #add-point:ON ACTION reproduce
            {<point name="menu.reproduce" />}
            #END add-point

                EXIT DIALOG
            END IF

         
         #主選單用ACTION
         &include "main_menu.4gl"
         
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
   END WHILE	
	  
   CALL cl_set_act_visible("accept,cancel", TRUE)
   
END FUNCTION
 
#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION adzi230_browser_search(p_type)
   {<Local define>}
   DEFINE p_type LIKE type_t.chr10
   {</Local define>}
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY dzch001"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL adzi230_browser_fill("F")
   CALL ui.Interface.refresh()
   RETURN TRUE
 
END FUNCTION
 
 
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION adzi230_browser_fill(ps_page_action)
   {<Local define>}
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   {</Local define>}
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_dzch_m.* TO NULL
   CALL g_dzci_d.clear()        

   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "dzch001"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      RETURN
   END IF
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE dzch001 ",

                        " FROM dzch_t ",
                              " ",
                              " LEFT JOIN dzci_t ON dzch001 = dzci001 ",

                              " ",
                              " ",
                       " WHERE ",l_wc, " AND ", l_wc2
 
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE dzch001 ",

                        " FROM dzch_t ", 
                              " ",
                              " ",
                        "WHERE ",l_wc CLIPPED
 
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
 
   #LET g_page_action = ps_page_action          # Keep Action
   
   IF ps_page_action = "F" OR
      ps_page_action = "P"  OR
      ps_page_action = "N"  OR
      ps_page_action = "L"  THEN
      LET g_page_action = ps_page_action
   END IF
   
   CASE ps_page_action
      WHEN "F" 
         LET g_pagestart = 1
          
      WHEN "P"  
         LET g_pagestart = g_pagestart - 25
         IF g_pagestart < 1 THEN
            LET g_pagestart = 1
         END IF
          
      WHEN "N"  
         LET g_pagestart = g_pagestart + 25
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = g_browser_cnt - (g_browser_cnt mod 25) + 1
            WHILE g_pagestart > g_browser_cnt 
               LET g_pagestart = g_pagestart - 25
            END WHILE
         END IF
      
      WHEN "L"  
         LET g_pagestart = g_browser_cnt - (g_browser_cnt mod 25) + 1
         WHILE g_pagestart > g_browser_cnt 
            LET g_pagestart = g_pagestart - 25
         END WHILE
         
      WHEN '/'
         LET g_pagestart = g_jump
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = 1
         END IF
         
   END CASE
  
   #單身有輸入查詢條件且非null
   IF g_wc2 <> " 1=1" AND NOT cl_null(g_wc2) THEN 
      #依照dzch001,dzch002 Browser欄位定義(取代原本bs_sql功能)
      LET l_sql_rank = "SELECT DISTINCT dzchstus,dzch001,dzch002,DENSE_RANK() OVER(ORDER BY dzch001 ",g_order,") AS RANK ",
                        " FROM dzch_t ",
                              " ",
                              " LEFT JOIN dzci_t ON dzch001 = dzci001",

                              " ",
                              " ",
                       " ",
                       " WHERE  ",g_wc," AND ",g_wc2
   ELSE
      #單身無輸入資料
      LET l_sql_rank = "SELECT DISTINCT dzchstus,dzch001,dzch002,DENSE_RANK() OVER(ORDER BY dzch001 ",g_order,") AS RANK ",
                       " FROM dzch_t ",
                            "  ",
                            "  ",
                       " WHERE  ", g_wc
   END IF
   
   #定義翻頁CURSOR
   LET g_sql= "SELECT dzchstus,dzch001,dzch002,RANK FROM (",l_sql_rank,") WHERE ",
              " RANK>=",g_pagestart," AND RANK<",g_pagestart+25,
              " ORDER BY ",l_searchcol," ",g_order
                
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_dzch001,g_browser[g_cnt].b_dzch002,g_browser[g_cnt].rank   
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
      LET g_browser[g_cnt].b_statepic = cl_get_actipic(g_browser[g_cnt].b_statepic)
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err( '', 9035, 0 )
         EXIT FOREACH
      END IF
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
END FUNCTION
 
 
#+ 單頭資料重新顯示
PRIVATE FUNCTION adzi230_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_dzch_m.dzch001 = g_browser[g_current_idx].b_dzch001   

    SELECT UNIQUE dzch001,dzch002,dzchstus,dzchmodu,dzchdate,dzchoriu,dzchorid,dzchuser,dzchdept,dzchbuid
 INTO g_dzch_m.dzch001,g_dzch_m.dzch002,g_dzch_m.dzchstus,g_dzch_m.dzchmodu,g_dzch_m.dzchdate,g_dzch_m.dzchoriu,g_dzch_m.dzchorid,g_dzch_m.dzchuser,g_dzch_m.dzchdept,g_dzch_m.dzchbuid
 FROM dzch_t
 WHERE dzch001 = g_dzch_m.dzch001
   CALL adzi230_show()
   
END FUNCTION
 
 
#+ 單身資料重新顯示
PRIVATE FUNCTION adzi230_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      

   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
 
 
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION adzi230_ui_browser_refresh()
   {<Local define>}
   DEFINE l_i  LIKE type_t.num10
   {</Local define>}
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_dzch001 = g_dzch_m.dzch001 

         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
 
 
#+ QBE資料查詢
PRIVATE FUNCTION adzi230_construct()
 
   {<Local define>}
   DEFINE lc_qbe_sn   LIKE type_t.num10
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   {</Local define>}
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_dzch_m.* TO NULL
   CALL g_dzci_d.clear()        

   
   LET g_current_idx = 1
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc_table1 TO NULL

    
   LET g_qryparam.state = 'c'
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON dzch001,dzch002,dzchstus,dzchmodu,dzchdate,dzchoriu,dzchorid,dzchuser,dzchdept,dzchbuid
 
         BEFORE CONSTRUCT
            CALL cl_qbe_init()
            
         #----<<dzchmodu>>----
         ON ACTION controlp INFIELD dzchmodu
            CALL q_common('dzch_t','dzchmodu',TRUE,FALSE,g_dzch_m.dzchmodu) RETURNING ls_return
            DISPLAY ls_return TO dzchmodu
            NEXT FIELD dzchmodu
 
         #----<<dzchoriu>>----
         ON ACTION controlp INFIELD dzchoriu
            CALL q_common('dzch_t','dzchoriu',TRUE,FALSE,g_dzch_m.dzchoriu) RETURNING ls_return
            DISPLAY ls_return TO dzchoriu
            NEXT FIELD dzchoriu
 
         #----<<dzchuser>>----
         ON ACTION controlp INFIELD dzchuser
            CALL q_common('dzch_t','dzchuser',TRUE,FALSE,g_dzch_m.dzchuser) RETURNING ls_return
            DISPLAY ls_return TO dzchuser
            NEXT FIELD dzchuser
 
         #----<<dzchorid>>----
         ON ACTION controlp INFIELD dzchorid
            CALL q_common('dzch_t','dzchorid',TRUE,FALSE,g_dzch_m.dzchorid) RETURNING ls_return
            DISPLAY ls_return TO dzchorid
            NEXT FIELD dzchorid
 
         #----<<dzchdept>>----
         ON ACTION controlp INFIELD dzchdept
            CALL q_common('dzch_t','dzchdept',TRUE,FALSE,g_dzch_m.dzchdept) RETURNING ls_return
            DISPLAY ls_return TO dzchdept
            NEXT FIELD dzchdept
 
         #----<<dzchbuid>>----
         AFTER FIELD dzchbuid
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<dzchdate>>----
         AFTER FIELD dzchdate
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
            
         #---------------------------<  Master  >---------------------------
         #----<<dzch001>>----
         #Ctrlp:construct.c.dzch001
         ON ACTION controlp INFIELD dzch001
            #add-point:ON ACTION controlp INFIELD dzch001
            {<point name="construct.c.dzch001" />}
            #END add-point

         #----<<dzch002>>----
         #Ctrlp:construct.c.dzch002
         ON ACTION controlp INFIELD dzch002
            #add-point:ON ACTION controlp INFIELD dzch002
            {<point name="construct.c.dzch002" />}
            #END add-point

         #----<<dzchstus>>----
         #Ctrlp:construct.c.dzchstus
         ON ACTION controlp INFIELD dzchstus
            #add-point:ON ACTION controlp INFIELD dzchstus
            {<point name="construct.c.dzchstus" />}
            #END add-point

         #----<<dzchmodu>>----
         #----<<dzchdate>>----
         #----<<dzchoriu>>----
         #----<<dzchorid>>----
         #----<<dzchuser>>----
         #----<<dzchdept>>----
         #----<<dzchbuid>>----

         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc_table1 ON dzci002,dzci003
           FROM s_detail1[1].dzci002,s_detail1[1].dzci003
                      
         BEFORE CONSTRUCT
            CALL cl_qbe_display_condition(lc_qbe_sn)
         
       #---------------------<  Detail: page1  >---------------------
         #----<<dzci002>>----
         #Ctrlp:construct.c.dzci002
         ON ACTION controlp INFIELD dzci002
            #add-point:ON ACTION controlp INFIELD dzci002
            {<point name="construct.c.page1.dzci002" />}
            #END add-point

         #----<<dzci003>>----
         #Ctrlp:construct.c.dzci003
         ON ACTION controlp INFIELD dzci003
            #add-point:ON ACTION controlp INFIELD dzci003
            {<point name="construct.c.page1.dzci003" />}
            #END add-point

   
       
      END CONSTRUCT
      

      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      ON ACTION qbe_select     #條件查詢
         CALL cl_qbe_list() RETURNING lc_qbe_sn
         CALL cl_qbe_display_condition(lc_qbe_sn)
 
      ON ACTION qbe_save       #條件儲存
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc_table1

 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
 
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION adzi230_query()
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point    
   
   LET INT_FLAG = 0
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_dzci_d.clear()

   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   
   CALL adzi230_construct()
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      INITIALIZE g_dzch_m.* TO NULL
      LET g_wc = " 1=1"
      LET g_wc2 = " 1=1"
      RETURN
   END IF
 
   CALL adzi230_browser_fill("F")
         
   IF g_browser.getLength() = 0 THEN
      CALL cl_err('',-100,1)
   END IF   
 
END FUNCTION
 
 
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION adzi230_fetch(p_flag)
   {<Local define>}
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   {</Local define>}
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   #該樣板不需此段落CALL adzi230_browser_fill(p_flag)
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   #該樣板不需此段落CALL cl_navigator_setting( g_pagestart, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_dzch_m.dzch001 = g_browser[g_current_idx].b_dzch001

   
   #重讀DB,因TEMP有不被更新特性
    SELECT UNIQUE dzch001,dzch002,dzchstus,dzchmodu,dzchdate,dzchoriu,dzchorid,dzchuser,dzchdept,dzchbuid
 INTO g_dzch_m.dzch001,g_dzch_m.dzch002,g_dzch_m.dzchstus,g_dzch_m.dzchmodu,g_dzch_m.dzchdate,g_dzch_m.dzchoriu,g_dzch_m.dzchorid,g_dzch_m.dzchuser,g_dzch_m.dzchdept,g_dzch_m.dzchbuid
 FROM dzch_t
 WHERE dzch001 = g_dzch_m.dzch001
   IF SQLCA.sqlcode THEN
      CALL cl_err("dzch_t",SQLCA.sqlcode,1)
      INITIALIZE g_dzch_m.* TO NULL
      RETURN
   END IF
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      IF g_dzch_m.dzchstus = "Y" THEN
         CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
      ELSE
         CALL cl_set_act_visible("statechange,reproduce", TRUE)
         CALL cl_set_act_visible("modify,delete", FALSE)
      END IF
   END IF
   
   
   
   LET g_data_owner = g_dzch_m.dzchuser      
   LET g_data_group = g_dzch_m.dzchdept  
   
   #重新顯示   
   CALL adzi230_show()
 
END FUNCTION
 
 
#+ 資料新增
PRIVATE FUNCTION adzi230_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   CLEAR FORM                    #清畫面欄位內容
   CALL g_dzci_d.clear()    #清除陣列

 
   INITIALIZE g_dzch_m.* LIKE dzch_t.*             #DEFAULT 設定
   LET g_dzch001_t = NULL

 
   WHILE TRUE
      LET g_dzch_m.dzchuser = g_user
      LET g_dzch_m.dzchdept = g_dept
      LET g_dzch_m.dzchbuid = cl_get_current()
      LET g_dzch_m.dzchoriu = g_user 
      LET g_dzch_m.dzchorid = g_dept 
      LET g_dzch_m.dzchmodu = g_user
      LET g_dzch_m.dzchdate = cl_get_current()
      LET g_dzch_m.dzchstus = 'Y'
      CALL gfrm_curr.setElementImage("statechange", "authstatus/valid.png")
  
      
     
      #單頭預設值
      
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL adzi230_input("a")
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_dzch_m.* = g_dzch_m_t.*
         CALL adzi230_show()
         CALL cl_err('',9001,0)
         EXIT WHILE
      END IF
      
      CALL g_dzci_d.clear()

 
      LET g_rec_b = 0
      EXIT WHILE
        
   END WHILE
   
END FUNCTION
 
 
#+ 資料修改
PRIVATE FUNCTION adzi230_modify()
   {<Local define>}
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_dzch_m.dzch001 IS NULL

   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
    SELECT UNIQUE dzch001,dzch002,dzchstus,dzchmodu,dzchdate,dzchoriu,dzchorid,dzchuser,dzchdept,dzchbuid
 INTO g_dzch_m.dzch001,g_dzch_m.dzch002,g_dzch_m.dzchstus,g_dzch_m.dzchmodu,g_dzch_m.dzchdate,g_dzch_m.dzchoriu,g_dzch_m.dzchorid,g_dzch_m.dzchuser,g_dzch_m.dzchdept,g_dzch_m.dzchbuid
 FROM dzch_t
 WHERE dzch001 = g_dzch_m.dzch001
 
   ERROR ""
  
   LET g_dzch001_t = g_dzch_m.dzch001

   BEGIN WORK
   
   OPEN adzi230_cl USING g_dzch_m.dzch001

   IF STATUS THEN
      CALL cl_err("OPEN adzi230_cl:", STATUS, 1)
      CLOSE adzi230_cl
      ROLLBACK WORK
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH adzi230_cl INTO g_dzch_m.dzch001,g_dzch_m.dzch002,g_dzch_m.dzchstus,g_dzch_m.dzchmodu,g_dzch_m.modu_desc,g_dzch_m.dzchdate,g_dzch_m.dzchoriu,g_dzch_m.oriu_desc,g_dzch_m.dzchorid,g_dzch_m.orid_desc,g_dzch_m.dzchuser,g_dzch_m.user_desc,g_dzch_m.dzchdept,g_dzch_m.dept_desc,g_dzch_m.dzchbuid
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_dzch_m.dzch001,SQLCA.sqlcode,0)
      CLOSE adzi230_cl
      ROLLBACK WORK
      RETURN
   END IF
   
   
 
   CALL adzi230_show()
   WHILE TRUE
      LET g_dzch001_t = g_dzch_m.dzch001

      LET g_dzch_m.dzchmodu = g_user
      LET g_dzch_m.dzchdate = cl_get_current()
 
      CALL adzi230_input("u")     #欄位更改
 
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_dzch_m.* = g_dzch_m_t.*
         CALL adzi230_show()
         CALL cl_err('',9001,0)
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更
      IF g_dzch_m.dzch001 != g_dzch001_t 

      THEN
         BEGIN WORK
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update"/>}
         #end add-point
         
         #更新單身key值
         UPDATE dzci_t SET dzci001 = g_dzch_m.dzch001

          WHERE  dzci001 = g_dzch001_t

         IF SQLCA.sqlcode THEN
             CALL cl_err("",SQLCA.sqlcode,1) 
             ROLLBACK WORK
             CONTINUE WHILE
         END IF
         

         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #UPDATE 多語言table key值
         

         COMMIT WORK
      END IF
      
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   IF NOT cl_used_modified_record(g_dzch_m.dzch001,g_site) THEN 
      ROLLBACK WORK
   END IF
 
   CLOSE adzi230_cl
   COMMIT WORK
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_dzch_m.dzch001,'U')
 
END FUNCTION   
 
 
#+ 資料輸入
PRIVATE FUNCTION adzi230_input(p_cmd)
   {<Local define>}
   DEFINE  p_cmd           LIKE type_t.chr1
   DEFINE  l_cmd           LIKE type_t.chr1
   DEFINE  l_ac_t          LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n             LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt           LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw       LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert  LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete  LIKE type_t.num5                #可刪除否  
   DEFINE  l_count         LIKE type_t.num5
   DEFINE  l_i             LIKE type_t.num5
   DEFINE  l_insert        BOOLEAN
   DEFINE  ls_return       STRING
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point    
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   LET g_forupd_sql = "SELECT dzci002,dzci003 FROM dzci_t WHERE dzci001=? AND dzci002=? FOR UPDATE"
   LET g_forupd_sql = cl_forupd_sql(g_forupd_sql)
   DECLARE adzi230_bcl CURSOR FROM g_forupd_sql
   

 
   LET l_allow_insert = cl_detail_input_auth("insert")
   LET l_allow_delete = cl_detail_input_auth("delete")
   LET g_qryparam.state = 'i'
 
   DISPLAY BY NAME g_dzch_m.dzch001,g_dzch_m.dzch002,g_dzch_m.dzchstus,g_dzch_m.dzchmodu,g_dzch_m.dzchdate,g_dzch_m.dzchoriu,g_dzch_m.dzchorid,g_dzch_m.dzchuser,g_dzch_m.dzchdept,g_dzch_m.dzchbuid
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      #單頭段
      INPUT BY NAME g_dzch_m.dzch001,g_dzch_m.dzch002,g_dzch_m.dzchstus,g_dzch_m.dzchmodu,g_dzch_m.dzchdate,g_dzch_m.dzchoriu,g_dzch_m.dzchorid,g_dzch_m.dzchuser,g_dzch_m.dzchdept,g_dzch_m.dzchbuid 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION
         
     
         BEFORE INPUT
            
 
         #---------------------------<  Master  >---------------------------
         #----<<dzch001>>----
         BEFORE FIELD dzch001
            #add-point:BEFORE FIELD dzch001
            {<point name="input.b.dzch001" />}
            #END add-point

         AFTER FIELD dzch001
            #add-point:AFTER FIELD dzch001
            {<point name="input.a.dzch001" />}
            #END add-point

         ON CHANGE dzch001
            #add-point:ON CHANGE dzch001
            {<point name="input.g.dzch001" />}
            #END add-point

         #----<<dzch002>>----
         BEFORE FIELD dzch002
            #add-point:BEFORE FIELD dzch002
            {<point name="input.b.dzch002" />}
            #END add-point

         AFTER FIELD dzch002
            #add-point:AFTER FIELD dzch002
            {<point name="input.a.dzch002" />}
            #END add-point

         ON CHANGE dzch002
            #add-point:ON CHANGE dzch002
            {<point name="input.g.dzch002" />}
            #END add-point

         #----<<dzchstus>>----
         BEFORE FIELD dzchstus
            #add-point:BEFORE FIELD dzchstus
            {<point name="input.b.dzchstus" />}
            #END add-point

         AFTER FIELD dzchstus
            #add-point:AFTER FIELD dzchstus
            {<point name="input.a.dzchstus" />}
            #END add-point

         ON CHANGE dzchstus
            #add-point:ON CHANGE dzchstus
            {<point name="input.g.dzchstus" />}
            #END add-point

         #----<<dzchmodu>>----
         BEFORE FIELD dzchmodu
            #add-point:BEFORE FIELD dzchmodu
            {<point name="input.b.dzchmodu" />}
            #END add-point

         AFTER FIELD dzchmodu
            #add-point:AFTER FIELD dzchmodu
            {<point name="input.a.dzchmodu" />}
            #END add-point

         ON CHANGE dzchmodu
            #add-point:ON CHANGE dzchmodu
            {<point name="input.g.dzchmodu" />}
            #END add-point

         #----<<dzchdate>>----
         BEFORE FIELD dzchdate
            #add-point:BEFORE FIELD dzchdate
            {<point name="input.b.dzchdate" />}
            #END add-point

         AFTER FIELD dzchdate
            #add-point:AFTER FIELD dzchdate
            {<point name="input.a.dzchdate" />}
            #END add-point

         ON CHANGE dzchdate
            #add-point:ON CHANGE dzchdate
            {<point name="input.g.dzchdate" />}
            #END add-point

         #----<<dzchoriu>>----
         BEFORE FIELD dzchoriu
            #add-point:BEFORE FIELD dzchoriu
            {<point name="input.b.dzchoriu" />}
            #END add-point

         AFTER FIELD dzchoriu
            #add-point:AFTER FIELD dzchoriu
            {<point name="input.a.dzchoriu" />}
            #END add-point

         ON CHANGE dzchoriu
            #add-point:ON CHANGE dzchoriu
            {<point name="input.g.dzchoriu" />}
            #END add-point

         #----<<dzchorid>>----
         BEFORE FIELD dzchorid
            #add-point:BEFORE FIELD dzchorid
            {<point name="input.b.dzchorid" />}
            #END add-point

         AFTER FIELD dzchorid
            #add-point:AFTER FIELD dzchorid
            {<point name="input.a.dzchorid" />}
            #END add-point

         ON CHANGE dzchorid
            #add-point:ON CHANGE dzchorid
            {<point name="input.g.dzchorid" />}
            #END add-point

         #----<<dzchuser>>----
         BEFORE FIELD dzchuser
            #add-point:BEFORE FIELD dzchuser
            {<point name="input.b.dzchuser" />}
            #END add-point

         AFTER FIELD dzchuser
            #add-point:AFTER FIELD dzchuser
            {<point name="input.a.dzchuser" />}
            #END add-point

         ON CHANGE dzchuser
            #add-point:ON CHANGE dzchuser
            {<point name="input.g.dzchuser" />}
            #END add-point

         #----<<dzchdept>>----
         BEFORE FIELD dzchdept
            #add-point:BEFORE FIELD dzchdept
            {<point name="input.b.dzchdept" />}
            #END add-point

         AFTER FIELD dzchdept
            #add-point:AFTER FIELD dzchdept
            {<point name="input.a.dzchdept" />}
            #END add-point

         ON CHANGE dzchdept
            #add-point:ON CHANGE dzchdept
            {<point name="input.g.dzchdept" />}
            #END add-point

         #----<<dzchbuid>>----
         BEFORE FIELD dzchbuid
            #add-point:BEFORE FIELD dzchbuid
            {<point name="input.b.dzchbuid" />}
            #END add-point

         AFTER FIELD dzchbuid
            #add-point:AFTER FIELD dzchbuid
            {<point name="input.a.dzchbuid" />}
            #END add-point

         ON CHANGE dzchbuid
            #add-point:ON CHANGE dzchbuid
            {<point name="input.g.dzchbuid" />}
            #END add-point

 #欄位檢查
         #---------------------------<  Master  >---------------------------
         #----<<dzch001>>----
         #Ctrlp:input.c.dzch001
         ON ACTION controlp INFIELD dzch001
            #add-point:ON ACTION controlp INFIELD dzch001
            {<point name="input.c.dzch001" />}
            #END add-point

         #----<<dzch002>>----
         #Ctrlp:input.c.dzch002
         ON ACTION controlp INFIELD dzch002
            #add-point:ON ACTION controlp INFIELD dzch002
            {<point name="input.c.dzch002" />}
            #END add-point

         #----<<dzchstus>>----
         #Ctrlp:input.c.dzchstus
         ON ACTION controlp INFIELD dzchstus
            #add-point:ON ACTION controlp INFIELD dzchstus
            {<point name="input.c.dzchstus" />}
            #END add-point

         #----<<dzchmodu>>----
         #Ctrlp:input.c.dzchmodu
         ON ACTION controlp INFIELD dzchmodu
            #add-point:ON ACTION controlp INFIELD dzchmodu
            {<point name="input.c.dzchmodu" />}
            #END add-point

         #----<<dzchdate>>----
         #Ctrlp:input.c.dzchdate
         ON ACTION controlp INFIELD dzchdate
            #add-point:ON ACTION controlp INFIELD dzchdate
            {<point name="input.c.dzchdate" />}
            #END add-point

         #----<<dzchoriu>>----
         #Ctrlp:input.c.dzchoriu
         ON ACTION controlp INFIELD dzchoriu
            #add-point:ON ACTION controlp INFIELD dzchoriu
            {<point name="input.c.dzchoriu" />}
            #END add-point

         #----<<dzchorid>>----
         #Ctrlp:input.c.dzchorid
         ON ACTION controlp INFIELD dzchorid
            #add-point:ON ACTION controlp INFIELD dzchorid
            {<point name="input.c.dzchorid" />}
            #END add-point

         #----<<dzchuser>>----
         #Ctrlp:input.c.dzchuser
         ON ACTION controlp INFIELD dzchuser
            #add-point:ON ACTION controlp INFIELD dzchuser
            {<point name="input.c.dzchuser" />}
            #END add-point

         #----<<dzchdept>>----
         #Ctrlp:input.c.dzchdept
         ON ACTION controlp INFIELD dzchdept
            #add-point:ON ACTION controlp INFIELD dzchdept
            {<point name="input.c.dzchdept" />}
            #END add-point

         #----<<dzchbuid>>----
         #Ctrlp:input.c.dzchbuid
         ON ACTION controlp INFIELD dzchbuid
            #add-point:ON ACTION controlp INFIELD dzchbuid
            {<point name="input.c.dzchbuid" />}
            #END add-point

 #欄位開窗
			
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
                
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_dzch_m.dzch001             

 
            IF p_cmd <> 'u' THEN
               BEGIN WORK
               LET l_count = 1  
               
               SELECT COUNT(*) INTO l_count FROM dzch_t
                WHERE  dzch001 = g_dzch_m.dzch001

               IF l_count = 0 THEN
                  
                  #add-point:單頭新增前
                  {<point name="input.head.b_insert"/>}
                  #end add-point
                  
                  INSERT INTO dzch_t (dzch001,dzch002,dzchstus,dzchmodu,dzchdate,dzchoriu,dzchorid,dzchuser,dzchdept,dzchbuid)
                  VALUES (g_dzch_m.dzch001,g_dzch_m.dzch002,g_dzch_m.dzchstus,g_dzch_m.dzchmodu,g_dzch_m.dzchdate,g_dzch_m.dzchoriu,g_dzch_m.dzchorid,g_dzch_m.dzchuser,g_dzch_m.dzchdept,g_dzch_m.dzchbuid) # DISK WRITE
                  IF SQLCA.sqlcode THEN
                     CALL cl_err("g_dzch_m",SQLCA.sqlcode,1)  
                     CONTINUE DIALOG
                  END IF
                  
                  
                  COMMIT WORK
                  
                  LET p_cmd = 'u'
 
                  #add-point:單頭新增後
                  {<point name="input.head.a_insert"/>}
                  #end add-point
               ELSE
                  CALL cl_err( g_dzch_m.dzch001,'!', 0 )
                  ROLLBACK WORK
               END IF 
            ELSE
            
               #add-point:單頭修改前
               {<point name="input.head.b_update"/>}
               #end add-point
               
               UPDATE dzch_t SET (dzch001,dzch002,dzchstus,dzchmodu,dzchdate,dzchoriu,dzchorid,dzchuser,dzchdept,dzchbuid) = (g_dzch_m.dzch001,g_dzch_m.dzch002,g_dzch_m.dzchstus,g_dzch_m.dzchmodu,g_dzch_m.dzchdate,g_dzch_m.dzchoriu,g_dzch_m.dzchorid,g_dzch_m.dzchuser,g_dzch_m.dzchdept,g_dzch_m.dzchbuid)
                WHERE  dzch001 = g_dzch001_t

               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_dzch_m",SQLCA.sqlcode,1)  
                  ROLLBACK WORK
               ELSE
                  
                  
                  COMMIT WORK
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
               
            END IF
           #controlp
      END INPUT
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_dzci_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION
         
         
         BEFORE INPUT
            CALL adzi230_b_fill()
            LET g_rec_b = g_dzci_d.getLength()
         
         BEFORE ROW
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_n TO FORMONLY.idx
         
            BEGIN WORK
            OPEN adzi230_cl USING g_dzch_m.dzch001

            IF STATUS THEN
               CALL cl_err("OPEN adzi230_cl:", STATUS, 1)
               CLOSE adzi230_cl
               ROLLBACK WORK
               RETURN
            END IF
                   
            FETCH adzi230_cl INTO g_dzch_m.dzch001,g_dzch_m.dzch002,g_dzch_m.dzchstus,g_dzch_m.dzchmodu,g_dzch_m.modu_desc,g_dzch_m.dzchdate,g_dzch_m.dzchoriu,g_dzch_m.oriu_desc,g_dzch_m.dzchorid,g_dzch_m.orid_desc,g_dzch_m.dzchuser,g_dzch_m.user_desc,g_dzch_m.dzchdept,g_dzch_m.dept_desc,g_dzch_m.dzchbuid # 鎖住將被更改或取消的資料
            IF SQLCA.sqlcode THEN
               CALL cl_err(g_dzch_m.dzch001,SQLCA.sqlcode,0)
               CLOSE adzi230_cl
               ROLLBACK WORK
               RETURN
            END IF
            
            LET g_rec_b = g_dzci_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND NOT cl_null(g_dzci_d[l_ac].dzci002) 

            THEN
               LET l_cmd='u'
               LET g_dzci_d_t.* = g_dzci_d[l_ac].*  #BACKUP
               IF NOT adzi230_lock_b("dzci_t") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH adzi230_bcl INTO g_dzci_d[l_ac].dzci002,g_dzci_d[l_ac].dzci003
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_dzci_d_t.dzci002,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  CALL adzi230_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_dzci_d[l_ac].* TO NULL 
            

            LET g_dzci_d_t.* = g_dzci_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL adzi230_set_entry_b()
            CALL adzi230_set_no_entry_b()
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM dzci_t 
             WHERE  dzci001 = g_dzch_m.dzch001

               AND g_dzci_d[l_ac].dzci002 = dzci002

                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_dzch_m.dzch001
               LET gs_keys[2] = g_dzci_d[l_ac].dzci002
               CALL adzi230_insert_b('dzci_t',gs_keys)
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_dzci_d[l_ac].* TO NULL
               ROLLBACK WORK
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("dzci_t",SQLCA.sqlcode,1)  
               ROLLBACK WORK                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL adzi230_b_fill()
               #資料多語言用-增/改
               
               COMMIT WORK
               #add-point:input段-after_insert
               {<point name="input.body.a_insert"/>}
               #end add-point
               ERROR 'INSERT O.K'
               LET g_rec_b=g_rec_b+1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF NOT cl_null(g_dzci_d[l_ac].dzci002) 

               THEN
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete"/>}
               #end add-point        
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               DELETE FROM dzci_t
                WHERE  dzci001 = g_dzch_m.dzch001 AND

                      dzci002 = g_dzci_d_t.dzci002

               IF SQLCA.sqlcode THEN
                  CALL cl_err("dzci_t",SQLCA.sqlcode,1)
                  ROLLBACK WORK
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  COMMIT WORK
               END IF 
               CLOSE adzi230_bcl
               LET l_count = g_dzci_d.getLength()
            END IF 
            #add-point:單身刪除後
            {<point name="input.body.a_delete"/>}
            #end add-point
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_dzch_m.dzch001
               LET gs_keys[2] = g_dzci_d[l_ac].dzci002

              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL adzi230_delete_b('dzci_t',gs_keys)
 
         #---------------------<  Detail: page1  >---------------------
         #----<<dzci002>>----
         BEFORE FIELD dzci002
            #add-point:BEFORE FIELD dzci002
            {<point name="input.b.page1.dzci002" />}
            #END add-point

         AFTER FIELD dzci002
            #add-point:AFTER FIELD dzci002
            {<point name="input.a.page1.dzci002" />}
            #END add-point

         ON CHANGE dzci002
            #add-point:ON CHANGE dzci002
            {<point name="input.g.page1.dzci002" />}
            #END add-point

         #----<<dzci003>>----
         BEFORE FIELD dzci003
            #add-point:BEFORE FIELD dzci003
            {<point name="input.b.page1.dzci003" />}
            #END add-point

         AFTER FIELD dzci003
            #add-point:AFTER FIELD dzci003
            {<point name="input.a.page1.dzci003" />}
            #END add-point

         ON CHANGE dzci003
            #add-point:ON CHANGE dzci003
            {<point name="input.g.page1.dzci003" />}
            #END add-point


		 #---------------------<  Detail: page1  >---------------------
         #----<<dzci002>>----
         #Ctrlp:input.c.dzci002
         ON ACTION controlp INFIELD dzci002
            #add-point:ON ACTION controlp INFIELD dzci002
            {<point name="input.c.page1.dzci002" />}
            #END add-point

         #----<<dzci003>>----
         #Ctrlp:input.c.page1.dzci003
         ON ACTION controlp INFIELD dzci003
            #add-point:ON ACTION controlp INFIELD dzci003
            {<point name="input.c.page1.dzci003" />}
            #END add-point


 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_dzci_d[l_ac].* = g_dzci_d_t.*
               CLOSE adzi230_bcl
               ROLLBACK WORK
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_dzci_d[l_ac].dzci002,-263,1)
               LET g_dzci_d[l_ac].* = g_dzci_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update"/>}
               #end add-point
      
               UPDATE dzci_t SET (dzci001,dzci002,dzci003) = (g_dzch_m.dzch001,g_dzci_d[l_ac].dzci002,g_dzci_d[l_ac].dzci003)
                WHERE  dzci001 = g_dzch_m.dzch001 

                  AND dzci002 = g_dzci_d_t.dzci002 #項次   

               IF SQLCA.sqlcode THEN
                  CALL cl_err("dzci_t",SQLCA.sqlcode,1)   
                  LET g_dzci_d[l_ac].* = g_dzci_d_t.*
               ELSE
                                 INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_dzch_m.dzch001
               LET gs_keys_bak[1] = g_dzch001_t 
               LET gs_keys[2] = g_dzci_d[l_ac].dzci002
               LET gs_keys_bak[2] = g_dzci_d_t.dzci002
               CALL adzi230_update_b('dzci_t',gs_keys,gs_keys_bak)
                  #資料多語言用-增/改
                  
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            CALL adzi230_unlock_b("dzci_t")
            COMMIT WORK
            #其他table進行unlock
            
              
      END INPUT
      

   
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         CALL cl_set_head_visible("","AUTO")
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET g_action_choice="exit"
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET g_action_choice="exit"
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
 
 
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION adzi230_show()
   {<Local define>}
   DEFINE l_ac_t    LIKE type_t.num5
   DEFINE l_sql     STRING
   {</Local define>}
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   LET g_dzch_m_t.* = g_dzch_m.*      #保存單頭舊值
  
   DISPLAY BY NAME g_dzch_m.dzch001,g_dzch_m.dzch002,g_dzch_m.dzchstus,g_dzch_m.dzchmodu,g_dzch_m.modu_desc,g_dzch_m.dzchdate,g_dzch_m.dzchoriu,g_dzch_m.oriu_desc,g_dzch_m.dzchorid,g_dzch_m.orid_desc,g_dzch_m.dzchuser,g_dzch_m.user_desc,g_dzch_m.dzchdept,g_dzch_m.dept_desc,g_dzch_m.dzchbuid
    
   CASE g_dzch_m.dzchstus
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "authstatus/valid.png")
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "authstatus/void.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "authstatus/invalid.png")
   END CASE
  
   CALL adzi230_b_fill()                 #單身
     
   #帶出預設欄位之值
   LET g_dzch_m.modu_desc = cl_get_username(g_dzch_m.dzchmodu)
   LET g_dzch_m.oriu_desc = cl_get_username(g_dzch_m.dzchoriu)
   LET g_dzch_m.user_desc = cl_get_username(g_dzch_m.dzchuser)
   LET g_dzch_m.dept_desc = cl_get_deptname(g_dzch_m.dzchdept)
   LET g_dzch_m.orid_desc = cl_get_deptname(g_dzch_m.dzchorid)
 
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_dzci_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR

   
    
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
 
 
#+ 資料複製
PRIVATE FUNCTION adzi230_reproduce()
   {<Local define>}
   DEFINE l_newno     LIKE dzch_t.dzch001 
   DEFINE l_oldno     LIKE dzch_t.dzch001 

   DEFINE l_master    RECORD LIKE dzch_t.*
   DEFINE l_detail    RECORD LIKE dzci_t.*
   DEFINE l_cnt       LIKE type_t.num5
   {</Local define>}
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   IF g_dzch_m.dzch001 IS NULL

   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_before_input_done = FALSE
   CALL adzi230_set_entry('a')
   LET g_before_input_done = TRUE
 
   CALL cl_set_head_visible("","YES")
 
   INPUT l_newno   # FROM

    FROM dzch001 

      BEFORE INPUT
 
      AFTER FIELD dzch001 
         IF l_newno IS NULL THEN
            NEXT FIELD CURRENT
         END IF
         #add-point:AFTER FIELD dzch001
         {<point name="reproduce.a.dzch001" />}
         #end add-point
         

             
      AFTER INPUT
         #確定該key值是否有重複定義
         LET l_cnt = 0
         SELECT COUNT(*) INTO l_cnt FROM dzch_t 
          WHERE  dzch001 = l_newno

         IF l_cnt > 0 THEN
            CALL cl_err("Reproduce","std-00006",1)
            #NEXT FIELD dzch001 
         END IF
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE INPUT
   END INPUT
   
   IF INT_FLAG OR l_newno IS NULL THEN
      LET INT_FLAG = 0
      RETURN
   END IF
   
   BEGIN WORK
 
   SELECT * INTO l_master.* FROM dzch_t 
    WHERE  dzch001 = g_dzch_m.dzch001

   LET l_master.dzch001 = l_newno

   
   LET l_master.dzchuser = g_user
   LET l_master.dzchdept = g_dept
   LET l_master.dzchbuid = cl_get_current()
   LET l_master.dzchoriu = g_user 
   LET l_master.dzchorid = g_dept 
   LET l_master.dzchmodu = g_user
   LET l_master.dzchdate = cl_get_current()
   LET l_master.dzchstus = 'Y'
   
   #add-point:單頭複製前
   {<point name="reproduce.head.b_insert"/>}
   #end add-point
   
   INSERT INTO dzch_t VALUES (l_master.*) #複製單頭        
   IF SQLCA.sqlcode THEN
      CALL cl_err("dzch_t",SQLCA.sqlcode,1)
      ROLLBACK WORK
      RETURN
   END IF
   
   #add-point:單頭複製後
   {<point name="reproduce.head.a_insert"/>}
   #end add-point
   
   LET g_sql = "SELECT * FROM dzci_t WHERE  ",
               " dzci001 = '",g_dzch_m.dzch001,"'"

   DECLARE adzi230_reproduce CURSOR FROM g_sql
 
   FOREACH adzi230_reproduce INTO l_detail.*
      LET l_detail.dzci001 = l_newno

  
      #add-point:單身複製前
      {<point name="reproduce.body.b_insert"/>}
      #end add-point
      
      INSERT INTO dzci_t VALUES (l_detail.*) #複製單身
      IF SQLCA.sqlcode THEN
         CALL cl_err('Insert error!',SQLCA.sqlcode,1)
         ROLLBACK WORK
         RETURN
      END IF
 
      #add-point:單身複製後
      {<point name="reproduce.body.a_insert"/>}
      #end add-point
      
   END FOREACH
   
   COMMIT WORK
   ERROR 'ROW(',l_newno,') O.K'
   LET l_oldno = g_dzch_m.dzch001

   
   SELECT dzch001,dzch002,dzchstus,dzchmodu,dzchdate,dzchoriu,dzchorid,dzchuser,dzchdept,dzchbuid INTO g_dzch_m.dzch001,g_dzch_m.dzch002,g_dzch_m.dzchstus,g_dzch_m.dzchmodu,g_dzch_m.dzchdate,g_dzch_m.dzchoriu,g_dzch_m.dzchorid,g_dzch_m.dzchuser,g_dzch_m.dzchdept,g_dzch_m.dzchbuid FROM dzch_t 
    WHERE  dzch001 = l_newno

      
   CALL adzi230_show()
   LET g_dzch_m.dzch001 = l_oldno

   
   SELECT dzch001,dzch002,dzchstus,dzchmodu,dzchdate,dzchoriu,dzchorid,dzchuser,dzchdept,dzchbuid INTO g_dzch_m.dzch001,g_dzch_m.dzch002,g_dzch_m.dzchstus,g_dzch_m.dzchmodu,g_dzch_m.dzchdate,g_dzch_m.dzchoriu,g_dzch_m.dzchorid,g_dzch_m.dzchuser,g_dzch_m.dzchdept,g_dzch_m.dzchbuid FROM dzch_t 
    WHERE  dzch001 = g_dzch_m.dzch001

   CALL adzi230_show()
 
   DISPLAY BY NAME g_dzch_m.dzch001

   
END FUNCTION
 
#+ 資料刪除
PRIVATE FUNCTION adzi230_delete()
   {<Local define>}
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_dzch_m.dzch001 IS NULL

   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
    SELECT UNIQUE dzch001,dzch002,dzchstus,dzchmodu,dzchdate,dzchoriu,dzchorid,dzchuser,dzchdept,dzchbuid
 INTO g_dzch_m.dzch001,g_dzch_m.dzch002,g_dzch_m.dzchstus,g_dzch_m.dzchmodu,g_dzch_m.dzchdate,g_dzch_m.dzchoriu,g_dzch_m.dzchorid,g_dzch_m.dzchuser,g_dzch_m.dzchdept,g_dzch_m.dzchbuid
 FROM dzch_t
 WHERE dzch001 = g_dzch_m.dzch001
   BEGIN WORK
   
   
 
   OPEN adzi230_cl USING g_dzch_m.dzch001

   IF STATUS THEN
      CALL cl_err("OPEN adzi230_cl:", STATUS, 1)
      CLOSE adzi230_cl
      ROLLBACK WORK
      RETURN
   END IF
 
   FETCH adzi230_cl INTO g_dzch_m.dzch001,g_dzch_m.dzch002,g_dzch_m.dzchstus,g_dzch_m.dzchmodu,g_dzch_m.modu_desc,g_dzch_m.dzchdate,g_dzch_m.dzchoriu,g_dzch_m.oriu_desc,g_dzch_m.dzchorid,g_dzch_m.orid_desc,g_dzch_m.dzchuser,g_dzch_m.user_desc,g_dzch_m.dzchdept,g_dzch_m.dept_desc,g_dzch_m.dzchbuid              # 鎖住將被更改或取消的資料
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_dzch_m.dzch001,SQLCA.sqlcode,0)          #資料被他人LOCK
      ROLLBACK WORK
      RETURN
   END IF
 
   CALL adzi230_show()
 
   #IF NOT cl_ask_delete() THEN             #確認一下
   IF cl_ask_del_master() THEN              #確認一下
      INITIALIZE g_doc.* TO NULL         
      LET g_doc.column1 = "dzch001"       
      LET g_doc.value1 = g_dzch_m.dzch001     
      CALL cl_del_doc()   
      
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete"/>}
      #end add-point
  
      #資料備份
      LET g_dzch001_t = g_dzch_m.dzch001

      
      DELETE FROM dzch_t
       WHERE  dzch001 = g_dzch_m.dzch001

      
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_dzch_m.dzch001,SQLCA.sqlcode,0) 
         ROLLBACK WORK
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      
      
      #add-point:單身刪除前
      {<point name="delete.body.b_delete"/>}
      #end add-point
      
      DELETE FROM dzci_t
       WHERE  dzci001 = g_dzch_m.dzch001

 
      IF SQLCA.sqlcode THEN
         CALL cl_err("dzci_t",SQLCA.sqlcode,0) 
         ROLLBACK WORK
         RETURN
      END IF                                                           
                                                               

                                                               
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
      CLEAR FORM
      CALL g_dzci_d.clear() 

     
      CALL adzi230_ui_browser_refresh()  
      CALL adzi230_ui_headershow()  
      CALL adzi230_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL adzi230_fetch('P')
      ELSE
         LET g_wc = " 1=1"
         CALL adzi230_browser_fill("F")
      END IF
       
   END IF
 
   CLOSE adzi230_cl
   COMMIT WORK
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_dzch_m.dzch001,'D')
    
END FUNCTION
 
 
#+ 單身陣列填充
PRIVATE FUNCTION adzi230_b_fill()
   {<Local define>}
   DEFINE p_wc2      STRING
   {</Local define>}
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_dzci_d.clear()    #g_dzci_d 單頭及單身 

 
   LET g_sql = "SELECT dzci002,dzci003 FROM dzci_t",    
               "",
               " WHERE dzci001=?"
 
   IF NOT cl_null(g_wc_table1) THEN
      LET g_sql = g_sql CLIPPED, " AND ", g_wc_table1 CLIPPED
   END IF
 
   LET g_sql = g_sql, " ORDER BY dzci_t.dzci002"
 
   PREPARE adzi230_pb FROM g_sql
   DECLARE b_fill_cs CURSOR FOR adzi230_pb
 
   LET g_cnt = l_ac
   LET l_ac = 1
 
   OPEN b_fill_cs USING g_dzch_m.dzch001

                                            
   FOREACH b_fill_cs INTO g_dzci_d[l_ac].dzci002,g_dzci_d[l_ac].dzci003
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
     
      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         CALL cl_err( '', 9035, 0 )
         EXIT FOREACH
      END IF
      
   END FOREACH
   

   
   CALL g_dzci_d.deleteElement(g_dzci_d.getLength())

 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
END FUNCTION
 
 
#+ 單身db資料刪除
PRIVATE FUNCTION adzi230_before_delete()
   #add-point:before_delete段define
   {<point name="before_delete.define"/>}
   #end add-point 
   
   DELETE FROM dzci_t
    WHERE  dzci001 = g_dzch_m.dzch001 AND

          dzci002 = g_dzci_d_t.dzci002

   IF SQLCA.sqlcode THEN
      CALL cl_err("dzci_t",SQLCA.sqlcode,1)
      RETURN FALSE 
   END IF
 
   LET g_rec_b = g_rec_b-1
 
   RETURN TRUE
    
END FUNCTION
 
#+ 刪除單身後其他table連動
PRIVATE FUNCTION adzi230_delete_b(ps_table,ps_keys_bak)
   {<Local define>}
   DEFINE ps_table    STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "dzci_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND
      ps_table <> "dzci_t" THEN
      DELETE FROM dzci_t
       WHERE 
         dzci001 = ps_keys_bak[1] AND dzci002 = ps_keys_bak[2]
 
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
   END IF
   

   
END FUNCTION
 
#+ 新增單身後其他table連動
PRIVATE FUNCTION adzi230_insert_b(ps_table,ps_keys)
   {<Local define>}
   DEFINE ps_table    STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "dzci_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      INSERT INTO dzci_t
                  (
                   dzci001,
                   dzci002
                   ,dzci003) 
            VALUES(
                   ps_keys[1],ps_keys[2]
                   ,g_dzci_d[l_ac].dzci003)
      IF SQLCA.sqlcode THEN
         CALL cl_err("dzci_t",SQLCA.sqlcode,0)
      END IF
   END IF
   

   
END FUNCTION
 
    
#+ 修改單身後其他table連動
PRIVATE FUNCTION adzi230_update_b(ps_table,ps_keys,ps_keys_bak)
   {<Local define>}
   DEFINE ps_table         STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "dzci_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND
      ps_table <> "dzci_t" THEN
      UPDATE dzci_t 
         SET (dzci001,
              dzci002
              ,dzci003) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_dzci_d[l_ac].dzci003) 
         WHERE dzci001 = ps_keys_bak[1] AND dzci002 = ps_keys_bak[2]
 
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      ELSE
         
      END IF
      
   END IF
   

   
END FUNCTION
 
#+ 連動lock其他單身table資料
PRIVATE FUNCTION adzi230_lock_b(ps_table)
 
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   CALL adzi230_b_fill()
   
   #鎖定整組table
   #LET ls_group = ""
   #僅鎖定自身table
   LET ls_group = "dzci_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN adzi230_bcl USING 
                                       g_dzch_m.dzch001,g_dzci_d[l_ac].dzci002
                                       
      IF SQLCA.sqlcode THEN
         CALL cl_err("adzi230_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   
   END IF
                                    

   
   RETURN TRUE
 
END FUNCTION
 
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION adzi230_unlock_b(ps_table)
 
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      CLOSE adzi230_bcl
   END IF
   

 
END FUNCTION
 
 
#+ 單頭欄位開啟設定
PRIVATE FUNCTION adzi230_set_entry(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1  
   {</Local define>}
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' AND ( NOT g_before_input_done ) THEN
      CALL cl_set_comp_entry("dzch001",TRUE)
   END IF
   
END FUNCTION
 
 
#+ 單頭欄位關閉設定
PRIVATE FUNCTION adzi230_set_no_entry(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1   
   {</Local define>}
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' AND ( NOT g_before_input_done ) THEN
      CALL cl_set_comp_entry("dzch001",FALSE)
   END IF
   
END FUNCTION
 
 
#+ 單身欄位開啟設定
PRIVATE FUNCTION adzi230_set_entry_b()
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
END FUNCTION
 
 
#+ 單身欄位關閉設定
PRIVATE FUNCTION adzi230_set_no_entry_b()
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point     
END FUNCTION
 
 
#+ 外部參數搜尋, 施工中
PRIVATE FUNCTION adzi230_default_search()
   {<Local define>}
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   {</Local define>}
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " dzch001 = '", g_argv[1], "' AND "
   END IF
   

   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
   ELSE
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
 
 
#確認碼變更
PRIVATE FUNCTION adzi230_statechange()
   {<Local define>}
   DEFINE lc_state LIKE type_t.chr5
   {</Local define>}
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""
    
   IF g_dzch_m.dzch001 IS NULL

   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         CASE g_dzch_m.dzchstus
            WHEN "Y"
               HIDE OPTION "valid"
            WHEN "N"
               HIDE OPTION "void"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
         IF g_template_type <> "t" THEN
            HIDE OPTION "invalid"
         END IF
      ON ACTION valid
         LET lc_state = "Y"
         EXIT MENU
      ON ACTION void
         LET lc_state = "N"
         EXIT MENU
      ON ACTION invalid
         LET lc_state = "X"
         EXIT MENU
   END MENU
   
   IF (lc_state <> "Y" AND lc_state <> "N" AND lc_state <> "X" ) OR cl_null(lc_state) THEN
      RETURN
   END IF 
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point 
   
   UPDATE dzch_t SET dzchstus = lc_state 
    WHERE  dzch001 = g_dzch_m.dzch001

  
   IF SQLCA.sqlcode THEN
      CALL cl_err('',SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "authstatus/valid.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "authstatus/void.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "authstatus/invalid.png")
      END CASE
   END IF
   
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
   
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point 
 
END FUNCTION
 
 
#+ 確認碼變更
PRIVATE FUNCTION adzi230_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_dzci_d.getLength() THEN
         LET g_detail_idx = g_dzci_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_dzci_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_dzci_d.getLength() TO FORMONLY.cnt
   END IF
   

 
END FUNCTION
 
#+ cursor定義
PRIVATE FUNCTION adzi230_cursor_define()
   DEFINE ls_sql      STRING
   DEFINE ls_sql_cnt  STRING
 
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET ls_sql = " SELECT UNIQUE dzch001 ",

                   " FROM dzch_t ",
                          " ",
                          " LEFT JOIN dzci_t ON dzch001 = dzci001 ",

                          " ",
                          " ",
                   " WHERE ",g_wc, " AND ", g_wc2
      LET ls_sql_cnt = " SELECT COUNT(*) ",
                       " FROM dzch_t ",
                              " ",
                              " LEFT JOIN dzci_t ON dzch001 = dzci001 ",

                              " ",
                              " ",
                       " WHERE ",g_wc, " AND ", g_wc2
   ELSE
      #單身未輸入搜尋條件
      LET ls_sql = " SELECT UNIQUE dzch001 ",

                   " FROM dzch_t ", 
                         " ",
                         " ",
                   "WHERE ",g_wc CLIPPED
      LET ls_sql_cnt = " SELECT COUNT(*) ",
                       " FROM dzch_t ", 
                             " ",
                             " ",
                       "WHERE ",g_wc CLIPPED
   END IF
   
 
   PREPARE adzi230_prepare FROM ls_sql
   IF SQLCA.sqlcode THEN
      CALL cl_err('prepare:',SQLCA.sqlcode,0) 
   END IF
   DECLARE adzi230_cs SCROLL CURSOR WITH HOLD FOR adzi230_prepare
   
   PREPARE adzi230_prepare_cnt FROM ls_sql_cnt
   EXECUTE adzi230_prepare_cnt INTO g_browser_cnt
   
   
END FUNCTION
 
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION adzi230_cursor_fetch(p_flag)
   DEFINE p_flag   LIKE type_t.chr1
   DEFINE ls_msg   STRING
 
   CASE p_flag        #從 open cs 取得
      WHEN 'N' 
         FETCH NEXT     adzi230_cs INTO g_dzch_m.dzch001
      WHEN 'P' 
         FETCH PREVIOUS adzi230_cs INTO g_dzch_m.dzch001
      WHEN 'F' 
         FETCH FIRST    adzi230_cs INTO g_dzch_m.dzch001
      WHEN 'L' 
         FETCH LAST     adzi230_cs INTO g_dzch_m.dzch001
      WHEN '/'
         IF (NOT g_no_ask) THEN
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
 
            PROMPT ls_msg CLIPPED,': ' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl"
            END PROMPT
             
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE
            END IF
         END IF
         FETCH ABSOLUTE g_jump adzi230_cs INTO g_dzch_m.dzch001
         LET g_no_ask = FALSE
   END CASE
 
   IF SQLCA.sqlcode THEN
      CALL cl_err('',SQLCA.sqlcode,0)
      INITIALIZE g_dzch_m.* TO NULL
      RETURN
   ELSE
      CASE p_flag
         WHEN 'F' LET g_current_idx = 1
         WHEN 'P' LET g_current_idx = g_current_idx - 1
         WHEN 'N' LET g_current_idx = g_current_idx + 1
         WHEN 'L' LET g_current_idx = g_browser_cnt
         WHEN '/' LET g_current_idx = g_jump
      END CASE
 
      CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   END IF
 
   #重讀DB,因TEMP有不被更新特性
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("dzch_t",SQLCA.sqlcode,1)
   END IF
   
   CALL adzi230_show()                      # 重新顯示
    
END FUNCTION
   
#add-point:自定義元件(Function)
{<point name="other.function"/>}
#end add-point

