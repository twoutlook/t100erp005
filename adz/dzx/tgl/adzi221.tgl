#+ 程式版本......: T6 Version 1.00.00 Build-0003 at 12/12/13
#
#+ 程式代碼......: adzi221
#+ 設計人員......: henry
#樣板功能名稱: code_t01 雙檔有Browser
 
IMPORT os
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
{<Module define>}
 
#單頭 type 宣告
PRIVATE type type_g_dzca_m        RECORD
       dzca001 LIKE dzca_t.dzca001, 
   dzca002 LIKE dzca_t.dzca002, 
   dzca003 LIKE dzca_t.dzca003, 
   dzcastus LIKE dzca_t.dzcastus, 
   dzcamodu LIKE dzca_t.dzcamodu, 
   modu_desc LIKE type_t.chr500, 
   dzcadate DATETIME YEAR TO SECOND, 
   dzcaoriu LIKE dzca_t.dzcaoriu, 
   oriu_desc LIKE type_t.chr500, 
   dzcaorid LIKE dzca_t.dzcaorid, 
   orid_desc LIKE type_t.chr500, 
   dzcauser LIKE dzca_t.dzcauser, 
   user_desc LIKE type_t.chr500, 
   dzcadept LIKE dzca_t.dzcadept, 
   dept_desc LIKE type_t.chr500, 
   dzcabuid DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_dzcb_d        RECORD
       dzcb002 LIKE dzcb_t.dzcb002, 
   dzcb003 LIKE dzcb_t.dzcb003, 
   dzcb004 LIKE dzcb_t.dzcb004
       END RECORD

 
#模組變數(Module Variables)
DEFINE g_dzca_m          type_g_dzca_m
DEFINE g_dzca_m_t        type_g_dzca_m
 
DEFINE g_dzca001_t     LIKE dzca_t.dzca001

 
DEFINE g_dzcb_d          DYNAMIC ARRAY OF type_g_dzcb_d
DEFINE g_dzcb_d_t        type_g_dzcb_d

 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_dzca001 LIKE dzca_t.dzca001,
      b_dzca002 LIKE dzca_t.dzca002,
         rank           LIKE type_t.num10
      END RECORD 
      
#無單頭append欄位定義
#無單身append欄位定義
 
DEFINE g_wc                  STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_before_input_done   LIKE type_t.num5 
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
 
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
 
{</Module define>}
 
#add-point:自定義模組變數(Module Variable)
{<point name="module.variable"/>}
#END add-point
 
#+ 作業開始
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #END add-point    
    
   #定義在其他link的程式則無效
   WHENEVER ERROR CALL cl_err_msg_log
 
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("adz","")
   
   #add-point:作業初始化
   {<point name="main.init"/>}
   #END add-point
 
   #LOCK CURSOR
   LET g_forupd_sql = "SELECT dzca001,dzca002,dzca003,dzcastus,dzcamodu,'',dzcadate,dzcaoriu,'',dzcaorid,'',dzcauser,'',dzcadept,'',dzcabuid FROM dzca_t WHERE dzca001=? FOR UPDATE"
   LET g_forupd_sql = cl_forupd_sql(g_forupd_sql)
   DECLARE adzi221_cl CURSOR FROM g_forupd_sql   #cursor lock 
   
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #END add-point
 
   ELSE
   
      #畫面開啟 (identifier)
      OPEN WINDOW w_adzi221 WITH FORM cl_ap_formpath("adz",g_prog)
 
      #程式初始化
      CALL adzi221_init()
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #進入選單 Menu (='N')
      CALL adzi221_ui_dialog() 
 
      #畫面關閉
      CLOSE WINDOW w_adzi221
      
   END IF
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #END add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
    
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION adzi221_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #END add-point    
   
   LET g_wc = " 1=1"
   CALL adzi221_browser_fill("")
   
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #END add-point
    
END FUNCTION
 
 
#+ 選單功能實際執行處
PRIVATE FUNCTION adzi221_ui_dialog()
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #END add-point    
   
   WHILE TRUE
      CALL adzi221_bp()
        
      CASE g_action_choice
 
         

      WHEN "query"
         IF cl_chk_act_auth() THEN 
            CALL adzi221_query()
            #add-point:ON ACTION query
            {<point name="dialog.query" />}
            #END add-point

         END IF
      WHEN "modify"
         IF cl_chk_act_auth() THEN 
            CALL adzi221_modify()
            #add-point:ON ACTION modify
            {<point name="dialog.modify" />}
            #END add-point

         END IF
      WHEN "insert"
         IF cl_chk_act_auth() THEN 
            CALL adzi221_insert()
            #add-point:ON ACTION insert
            {<point name="dialog.insert" />}
            #END add-point

         END IF
      WHEN "delete"
         IF cl_chk_act_auth() THEN 
            CALL adzi221_delete()
            #add-point:ON ACTION delete
            {<point name="dialog.delete" />}
            #END add-point

         END IF
      WHEN "reproduce"
         IF cl_chk_act_auth() THEN 
            CALL adzi221_reproduce()
            #add-point:ON ACTION reproduce
            {<point name="dialog.reproduce" />}
            #END add-point

         END IF
         
         
 
         WHEN "exit"
            EXIT WHILE
 
         WHEN "bw_first"     
            CALL adzi221_browser_fill("first") 
            
         WHEN "bw_prev" 
            CALL adzi221_browser_fill("prev")
            
         WHEN "bw_next" 
            CALL adzi221_browser_fill("next")
            
         WHEN "bw_last"             
            CALL adzi221_browser_fill("last")
 
      END CASE
      
   END WHILE
   
END FUNCTION
 
 
#+ 功能選單
PRIVATE FUNCTION adzi221_bp()
   #add-point:bp段define
   {<point name="bp.define"/>}
   #END add-point  
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   CALL adzi221_browser_fill("dialog")
   
   DIALOG ATTRIBUTES(UNBUFFERED)
 
      INPUT g_searchstr,g_searchcol FROM formonly.searchstr,formonly.cbo_searchcol
 
         BEFORE INPUT
         
      END INPUT
 
      #左側瀏覽頁簽
      DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
      
         BEFORE ROW
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            CALL adzi221_fetch('') # reload data
            CALL cl_ui_set_browse_page_button(g_curr_diag,g_page_action,g_pagestart,g_browser_cnt)
            LET g_detail_idx = 1
            CALL adzi221_ui_detailshow() #Setting the current row 
            
      END DISPLAY
     
      DISPLAY ARRAY g_dzcb_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
      
         BEFORE ROW
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_ac = g_detail_idx
            DISPLAY g_detail_idx TO FORMONLY.idx
            CALL adzi221_ui_detailshow()
            
         
            
      END DISPLAY
     

 
      BEFORE DIALOG
         CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
         LET g_curr_diag = ui.DIALOG.getCurrent()         
         LET g_page = "first"
         LET g_current_sw = FALSE
         #回歸舊筆數位置 (回到當時異動的筆數)
         LET g_current_idx = DIALOG.getCurrentRow("s_browse")
         IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
            CALL DIALOG.setCurrentRow("s_browse",g_current_row)
            LET g_current_idx = g_current_row
         END IF
         LET g_current_row = g_current_idx #目前指標
         LET g_current_sw = TRUE
         
         IF g_current_idx > g_browser.getLength() THEN
            LEt g_current_idx = g_browser.getLength()
         END IF 
         
         #有資料才進行fetch
         IF g_current_idx <> 0 THEN
            CALL adzi221_fetch('') # reload data
         END IF
         CALL cl_ui_set_browse_page_button(g_curr_diag,g_page_action,g_pagestart,g_browser_cnt)
         LET g_detail_idx = 1
         CALL adzi221_ui_detailshow() #Setting the current row 
         
         #若無資料則關閉相關功能
         IF g_browser_cnt = 0 THEN
            CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
         ELSE
            CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
         END IF
         
         NEXT FIELD searchstr
       
      #Browser用Action
 
      #一般搜尋
      ON ACTION searchdata
         #取得搜尋關鍵字
         INITIALIZE g_wc TO NULL
         INITIALIZE g_wc2 TO NULL
         LET g_searchstr = GET_FLDBUF(searchstr)
         IF NOT adzi221_browser_search("normal") THEN
            CONTINUE DIALOG
         END IF
         LET g_current_idx = 1
         IF g_browser.getLength() = 0 THEN
            CALL cl_err('',-100,1)
         END IF   
         EXIT DIALOG
 
      #進階搜尋
      ON ACTION advancesearch    
      
      #升冪排序
      ON ACTION ASCENDING
         INITIALIZE g_wc TO NULL
         INITIALIZE g_wc2 TO NULL
         LET g_order = "ASC"
         LET g_current_idx = 1
         LET g_searchstr = GET_FLDBUF(searchstr)
         
         IF NOT adzi221_browser_search("normal") THEN
            CONTINUE DIALOG
         END IF
         IF g_browser.getLength() = 0 THEN
            CALL cl_err('',-100,1)
         END IF   
         EXIT DIALOG
    
      #降冪排序
      ON ACTION DESCENDING
         INITIALIZE g_wc TO NULL
         INITIALIZE g_wc2 TO NULL
         LET g_order = "DESC"
         LET g_current_idx = 1
         LET g_searchstr = GET_FLDBUF(searchstr)
         
         IF NOT adzi221_browser_search("normal") THEN
            CONTINUE DIALOG
         END IF
         IF g_browser.getLength() = 0 THEN
            CALL cl_err('',-100,1)
         END IF   
         EXIT DIALOG
         
      ON ACTION statechange
         CALL adzi221_statechange()
         EXIT DIALOG
 
      #簽核
      ON ACTION signature
         MENU "" ATTRIBUTES( STYLE="popup", IMAGE="tb/authorize/terminate.png" )
            ON ACTION ef_sign
            ON ACTION stop_authflow
            ON ACTION add_auth
            ON ACTION revoke_auth
            ON ACTION approve
            ON ACTION unapprove
            ON ACTION auth_opinion
            ON ACTION auth_status
            ON ACTION auth_attach
            ON ACTION authflow_designer
         END MENU
       
      #ACTION表單列
      ON ACTION first
         CALL adzi221_fetch('F')         
       
      ON ACTION previous
         CALL adzi221_fetch('P')
       
      ON ACTION jump
         CALL adzi221_fetch('/')
     
      ON ACTION next
         CALL adzi221_fetch('N')
      
      ON ACTION last
         CALL adzi221_fetch('L')
       
      ON ACTION close
         LET INT_FLAG=FALSE        
         LET g_action_choice = "exit"
         EXIT DIALOG     
       
      ON ACTION exit
         LET g_action_choice="exit"
         EXIT DIALOG
       
      ON ACTION bw_first               #page first 
         LET g_action_choice = "bw_first"   
         EXIT DIALOG
 
      ON ACTION bw_prev                #page previous
         LET g_action_choice = "bw_prev"     
         EXIT DIALOG
 
      ON ACTION bw_next                #page next
         LET g_action_choice = "bw_next"     
         EXIT DIALOG
       
      ON ACTION bw_last                #page last 
         LET g_action_choice = "bw_last"     
         EXIT DIALOG
 
      ON ACTION mainhidden       #主頁摺疊
         IF g_main_hidden THEN
            CALL gfrm_curr.setElementHidden("mainlayout",0)
            CALL gfrm_curr.setElementImage("mainhidden","small/arr-r.png")
            LET g_main_hidden = 0
         ELSE
            CALL gfrm_curr.setElementHidden("mainlayout",1)
            CALL gfrm_curr.setElementImage("mainhidden","small/arr-l.png")
            LET g_main_hidden = 1
         END IF
 
      ON ACTION worksheethidden   #瀏覽頁折疊
         IF g_worksheet_hidden THEN
            CALL gfrm_curr.setElementHidden("worksheet",0)
            CALL gfrm_curr.setElementImage("worksheethidden","small/arr-l.png")
            LET g_worksheet_hidden = 0
            NEXT FIELD b_dzca001
         ELSE
            CALL gfrm_curr.setElementHidden("worksheet",1)
            CALL gfrm_curr.setElementImage("worksheethidden","small/arr-r.png")
            LET g_worksheet_hidden = 1
         END IF
    
      ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("worksheet_detail",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("worksheet_detail",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      
      ON ACTION query
            LET g_action_choice="query"
            #add-point:ON ACTION query
            {<point name="menu.query" />}
            #END add-point
            EXIT DIALOG 

      ON ACTION modify
            LET g_action_choice="modify"
            #add-point:ON ACTION modify
            {<point name="menu.modify" />}
            #END add-point
            EXIT DIALOG 

      ON ACTION insert
            LET g_action_choice="insert"
            #add-point:ON ACTION insert
            {<point name="menu.insert" />}
            #END add-point
            EXIT DIALOG 

      ON ACTION delete
            LET g_action_choice="delete"
            #add-point:ON ACTION delete
            {<point name="menu.delete" />}
            #END add-point
            EXIT DIALOG 

      ON ACTION reproduce
            LET g_action_choice="reproduce"
            #add-point:ON ACTION reproduce
            {<point name="menu.reproduce" />}
            #END add-point
            EXIT DIALOG 

      
      #主選單用ACTION
      &include "main_menu.4gl"
      
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
         
   END DIALOG
   
   CALL cl_set_act_visible("accept,cancel", TRUE)
   
END FUNCTION
 
#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION adzi221_browser_search(p_type)
   {<Local define>}
   DEFINE p_type LIKE type_t.chr10
   {</Local define>}
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #END add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY dzca001"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   
   CALL adzi221_browser_fill("first")
   CALL ui.Interface.refresh()
   RETURN TRUE
 
END FUNCTION
 
 
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION adzi221_browser_fill(ps_page_action)
   {<Local define>}
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   {</Local define>}
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #END add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_dzca_m.* TO NULL
   CALL g_dzcb_d.clear()        

   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "dzca001"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      RETURN
   END IF
   
   IF g_wc2 <> " 1=1" OR NOT cl_null(g_wc2) THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE dzca001 ",

                      " FROM dzca_t,dzcb_t ",
                      " WHERE ",l_wc, " AND ", l_wc2, " AND dzca001 = dzcb001"    

   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE dzca001 ",

                      " FROM dzca_t WHERE ",l_wc CLIPPED
 
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
 
   #LET g_page_action = ps_page_action          # Keep Action
   
   IF ps_page_action = "first" OR
      ps_page_action = "prev"  OR
      ps_page_action = "next"  OR
      ps_page_action = "last"  THEN
      LET g_page_action = ps_page_action
   END IF
   
   CASE g_page_action
      WHEN "first" 
          LET g_pagestart = 1
          
      WHEN "prev"  
          LET g_pagestart = g_pagestart - 25
          IF g_pagestart < 1 THEN
              LET g_pagestart = 1
          END IF
          
      WHEN "next"  
         LET g_pagestart = g_pagestart + 25
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = g_browser_cnt - (g_browser_cnt mod 25) + 1
            WHILE g_pagestart > g_browser_cnt 
               LET g_pagestart = g_pagestart - 25
            END WHILE
         END IF
      
      WHEN "last"  
         LET g_pagestart = g_browser_cnt - (g_browser_cnt mod 25) + 1
         WHILE g_pagestart > g_browser_cnt 
            LET g_pagestart = g_pagestart - 25
         END WHILE
         
      WHEN "dialog"
      
      OTHERWISE
         LET g_pagestart = 1
          
   END CASE
  
   #單身有輸入查詢條件且非null
   IF g_wc2 <> " 1=1" AND NOT cl_null(g_wc2) THEN 
      #依照dzca001,dzca002 Browser欄位定義(取代原本bs_sql功能)
      LET l_sql_rank = "SELECT DISTINCT dzcastus,dzca001,dzca002,RANK() OVER(ORDER BY dzca001 ",g_order,") AS RANK ",
                       " FROM dzca_t INNER JOIN dzcb_t ON ",
                       " dzca001 = dzcb001 ",

                       " ",
                       " WHERE  dzca001 = dzcb001 AND ",g_wc," AND ",g_wc2
   ELSE
      #單身無輸入資料
      LET l_sql_rank = "SELECT DISTINCT dzcastus,dzca001,dzca002,RANK() OVER(ORDER BY dzca001 ",g_order,") AS RANK ",
                       " FROM dzca_t ",
                       " WHERE  ", g_wc
                       
   END IF
   
   #定義翻頁CURSOR
   LET g_sql= "SELECT dzcastus,dzca001,dzca002,RANK FROM (",l_sql_rank,") WHERE RANK>=",g_pagestart,
              " AND RANK<",g_pagestart+25,
              " ORDER BY ",l_searchcol," ",g_order
                
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_dzca001,g_browser[g_cnt].b_dzca002    
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      LET g_browser[g_cnt].b_statepic = cl_get_actipic(g_browser[g_cnt].b_statepic)
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err( '', 9035, 0 )
         EXIT FOREACH
      END IF
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
END FUNCTION
 
 
#+ 單頭資料重新顯示
PRIVATE FUNCTION adzi221_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #END add-point    
   
   LET g_dzca_m.dzca001 = g_browser[g_current_idx].b_dzca001   

    SELECT UNIQUE dzca001,dzca002,dzca003,dzcastus,dzcamodu,dzcadate,dzcaoriu,dzcaorid,dzcauser,dzcadept,dzcabuid
 INTO g_dzca_m.dzca001,g_dzca_m.dzca002,g_dzca_m.dzca003,g_dzca_m.dzcastus,g_dzca_m.dzcamodu,g_dzca_m.dzcadate,g_dzca_m.dzcaoriu,g_dzca_m.dzcaorid,g_dzca_m.dzcauser,g_dzca_m.dzcadept,g_dzca_m.dzcabuid
 FROM dzca_t
 WHERE dzca001 = g_dzca_m.dzca001
   CALL adzi221_show()
   
END FUNCTION
 
 
#+ 單身資料重新顯示
PRIVATE FUNCTION adzi221_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #END add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      

   END IF
   
END FUNCTION
 
 
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION adzi221_ui_browser_refresh()
   {<Local define>}
   DEFINE l_i  LIKE type_t.num10
   {</Local define>}
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #END add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_dzca001 = g_dzca_m.dzca001 

         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
 
 
#+ QBE資料查詢
PRIVATE FUNCTION adzi221_construct()
 
   {<Local define>}
   DEFINE lc_qbe_sn   LIKE type_t.num10
   {</Local define>}
   #add-point:cs段define
   {<point name="cs.define"/>}
   #END add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_dzca_m.* TO NULL
   CALL g_dzcb_d.clear()        

   
   LET g_current_idx = 1
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
    
   LET g_qryparam.state = 'c'
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON dzca001,dzca002,dzca003,dzcastus,dzcamodu,dzcadate,dzcaoriu,dzcaorid,dzcauser,dzcadept,dzcabuid
 
         BEFORE CONSTRUCT
            CALL cl_qbe_init()
         
        #---------------------------<  Master  >---------------------------
         #----<<dzca001>>----
         #Ctrlp:construct.c.dzca001
         ON ACTION controlp INFIELD dzca001
            #add-point:CONTROLP dzca001
            {<point name="construct.c.dzca001" />}
            #END add-point

         #----<<dzca002>>----
         #Ctrlp:construct.c.dzca002
         ON ACTION controlp INFIELD dzca002
            #add-point:CONTROLP dzca002
            {<point name="construct.c.dzca002" />}
            #END add-point

         #----<<dzca003>>----
         #Ctrlp:construct.c.dzca003
         ON ACTION controlp INFIELD dzca003
            #add-point:CONTROLP dzca003
            {<point name="construct.c.dzca003" />}
            #END add-point

         #----<<dzcastus>>----
         #Ctrlp:construct.c.dzcastus
         ON ACTION controlp INFIELD dzcastus
            #add-point:CONTROLP dzcastus
            {<point name="construct.c.dzcastus" />}
            #END add-point

         #----<<dzcamodu>>----
         #----<<dzcadate>>----
         #Ctrlp:construct.c.dzcadate
         ON ACTION controlp INFIELD dzcadate
            #add-point:CONTROLP dzcadate
            {<point name="construct.c.dzcadate" />}
            #END add-point

         #----<<dzcaoriu>>----
         #----<<dzcaorid>>----
         #----<<dzcauser>>----
         #----<<dzcadept>>----
         #----<<dzcabuid>>----
         #Ctrlp:construct.c.dzcabuid
         ON ACTION controlp INFIELD dzcabuid
            #add-point:CONTROLP dzcabuid
            {<point name="construct.c.dzcabuid" />}
            #END add-point


         
      END CONSTRUCT
 
      #單身可以混搭多頁簽xx
      CONSTRUCT g_wc2 ON dzcb002,dzcb003,dzcb004

         FROM s_detail1[1].dzcb002,s_detail1[1].dzcb003,s_detail1[1].dzcb004

                      
         BEFORE CONSTRUCT
            CALL cl_qbe_display_condition(lc_qbe_sn)
         
       #---------------------<  Detail: page     1  >---------------------
         #----<<dzcb002>>----
         #Ctrlp:construct.c.dzcb002
         ON ACTION controlp INFIELD dzcb002
            #add-point:CONTROLP dzcb002
            {<point name="construct.c.dzcb002" />}
            #END add-point

         #----<<dzcb003>>----
         #Ctrlp:construct.c.dzcb003
         ON ACTION controlp INFIELD dzcb003
            #add-point:CONTROLP dzcb003
            {<point name="construct.c.dzcb003" />}
            #END add-point

         #----<<dzcb004>>----
         #Ctrlp:construct.c.dzcb004
         ON ACTION controlp INFIELD dzcb004
            #add-point:CONTROLP dzcb004
            {<point name="construct.c.dzcb004" />}
            #END add-point



       
      END CONSTRUCT
      
      ON ACTION qbe_select     #條件查詢
         CALL cl_qbe_list() RETURNING lc_qbe_sn
         CALL cl_qbe_display_condition(lc_qbe_sn)
 
      ON ACTION qbe_save       #條件儲存
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
   END DIALOG
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
 
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION adzi221_query()
   #add-point:query段define
   {<point name="query.define"/>}
   #END add-point    
   
   LET INT_FLAG = 0
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   MESSAGE ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_dzcb_d.clear()
   CALL g_logc.clear() 

   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   
   CALL adzi221_construct()
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      INITIALIZE g_dzca_m.* TO NULL
      RETURN
   END IF
 
   CALL adzi221_browser_fill("first")
         
   IF g_browser.getLength() = 0 THEN
      CALL cl_err('',-100,1)
   END IF   
 
END FUNCTION
 
 
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION adzi221_fetch(p_flag)
   {<Local define>}
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   {</Local define>}
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #END add-point    
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,': ' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   DISPLAY g_detail_cnt TO FORMONLY.cnt
   LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   LET g_dzca_m.dzca001 = g_browser[g_current_idx].b_dzca001

   
   #重讀DB,因TEMP有不被更新特性
    SELECT UNIQUE dzca001,dzca002,dzca003,dzcastus,dzcamodu,dzcadate,dzcaoriu,dzcaorid,dzcauser,dzcadept,dzcabuid
 INTO g_dzca_m.dzca001,g_dzca_m.dzca002,g_dzca_m.dzca003,g_dzca_m.dzcastus,g_dzca_m.dzcamodu,g_dzca_m.dzcadate,g_dzca_m.dzcaoriu,g_dzca_m.dzcaorid,g_dzca_m.dzcauser,g_dzca_m.dzcadept,g_dzca_m.dzcabuid
 FROM dzca_t
 WHERE dzca001 = g_dzca_m.dzca001
   IF SQLCA.sqlcode THEN
       CALL cl_err3("sel","dzca_t","","",SQLCA.sqlcode,"","",1)
       INITIALIZE g_dzca_m.* TO NULL
       RETURN
   END IF
   
   LET g_data_owner = g_dzca_m.dzcauser      
   LET g_data_group = g_dzca_m.dzcadept  
   
   #重新顯示   
   CALL adzi221_show()
 
END FUNCTION
 
 
#+ 資料新增
PRIVATE FUNCTION adzi221_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #END add-point    
   
   CLEAR FORM                    #清畫面欄位內容
   CALL g_dzcb_d.clear()    #清除陣列

 
   INITIALIZE g_dzca_m.* LIKE dzca_t.*             #DEFAULT 設定
   LET g_dzca001_t = NULL

 
   WHILE TRUE
      LET g_dzca_m.dzcauser = g_user
      LET g_dzca_m.dzcadept = g_dept
      LET g_dzca_m.dzcabuid = cl_get_current()
      LET g_dzca_m.dzcaoriu = g_user 
      LET g_dzca_m.dzcaorid = g_dept 
      LET g_dzca_m.dzcamodu = g_user
      LET g_dzca_m.dzcadate = cl_get_current()
      LET g_dzca_m.dzcastus = 'Y'
      
     
      #單頭預設值
      
     
      CALL adzi221_input("a")
      
      IF INT_FLAG THEN
          LET INT_FLAG = 0
          LET g_dzca_m.* = g_dzca_m_t.*
          CALL adzi221_show()
          CALL cl_err('',9001,0)
          EXIT WHILE
      END IF
      
      CALL g_dzcb_d.clear()

 
      LET g_rec_b = 0
      EXIT WHILE
        
   END WHILE
   
END FUNCTION
 
 
#+ 資料修改
PRIVATE FUNCTION adzi221_modify()
   {<Local define>}
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:modify段define
   {<point name="modify.define"/>}
   #END add-point    
   
   IF cl_null(g_dzca_m.dzca001)

      THEN
      CALL cl_err('',-400,0)
      RETURN
   END IF
   
    SELECT UNIQUE dzca001,dzca002,dzca003,dzcastus,dzcamodu,dzcadate,dzcaoriu,dzcaorid,dzcauser,dzcadept,dzcabuid
 INTO g_dzca_m.dzca001,g_dzca_m.dzca002,g_dzca_m.dzca003,g_dzca_m.dzcastus,g_dzca_m.dzcamodu,g_dzca_m.dzcadate,g_dzca_m.dzcaoriu,g_dzca_m.dzcaorid,g_dzca_m.dzcauser,g_dzca_m.dzcadept,g_dzca_m.dzcabuid
 FROM dzca_t
 WHERE dzca001 = g_dzca_m.dzca001
 
   MESSAGE ""
  
   LET g_dzca001_t = g_dzca_m.dzca001

   BEGIN WORK
   
   OPEN adzi221_cl USING g_dzca_m.dzca001

   IF STATUS THEN
      CALL cl_err("OPEN adzi221_cl:", STATUS, 1)
      CLOSE adzi221_cl
      ROLLBACK WORK
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH adzi221_cl INTO g_dzca_m.dzca001,g_dzca_m.dzca002,g_dzca_m.dzca003,g_dzca_m.dzcastus,g_dzca_m.dzcamodu,g_dzca_m.dzcadate,g_dzca_m.dzcaoriu,g_dzca_m.dzcaorid,g_dzca_m.dzcauser,g_dzca_m.dzcadept,g_dzca_m.dzcabuid
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_dzca_m.dzca001,SQLCA.sqlcode,0)
      CLOSE adzi221_cl
      ROLLBACK WORK
      RETURN
   END IF
 
   CALL adzi221_show()
   WHILE TRUE
      LET g_dzca001_t = g_dzca_m.dzca001

      LET g_dzca_m.dzcamodu = g_user
      LET g_dzca_m.dzcadate = cl_get_current()
 
      CALL adzi221_input("u")     #欄位更改
 
      IF INT_FLAG THEN
          LET INT_FLAG = 0
          LET g_dzca_m.* = g_dzca_m_t.*
          CALL adzi221_show()
          CALL cl_err('',9001,0)
          EXIT WHILE
      END IF
      
      #若單頭key欄位有變更
      IF g_dzca_m.dzca001 != g_dzca001_t 

         THEN
         BEGIN WORK
         
         #add-point:單頭修改前
         {<point name="modify.head.b_key_update"/>}
         #END add-point
         
         #更新單頭key值
         UPDATE dzca_t SET dzca001 = g_dzca_m.dzca001

          WHERE  dzca001 = g_dzca001_t

          IF SQLCA.sqlcode THEN
             CALL cl_err3("upd","dzca_t",g_dzca001_t,"",SQLCA.sqlcode,"","",1) 
             ROLLBACK WORK
             CONTINUE WHILE
         END IF
         
         #add-point:單頭修改後
         {<point name="modify.head.a_key_update"/>}
         #END add-point
         
         #add-point:單身修改前
         {<point name="modify.body.b_key_update"/>}
         #END add-point
         
         #更新單身key值
         UPDATE dzcb_t SET dzcb001 = g_dzca_m.dzca001

          WHERE  dzcb001 = g_dzca001_t

         IF SQLCA.sqlcode THEN
             CALL cl_err3("upd","dzcb_t",g_dzca001_t,"",SQLCA.sqlcode,"","",1) 
             ROLLBACK WORK
             CONTINUE WHILE
         END IF
         
         #add-point:單身修改前
         {<point name="modify.body.a_key_update"/>}
         #END add-point
         
         #更新多table單身值

         
         COMMIT WORK
         
      END IF
      
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   IF NOT cl_used_modified_record(g_dzca_m.dzca001,g_site) THEN 
      ROLLBACK WORK
   END IF
 
   CLOSE adzi221_cl
   COMMIT WORK
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_dzca_m.dzca001,'U')
 
   CALL adzi221_b_fill("1=1")
   
END FUNCTION   
 
 
#+ 資料輸入
PRIVATE FUNCTION adzi221_input(p_cmd)
   {<Local define>}
   DEFINE  p_cmd           LIKE type_t.chr1
   DEFINE  l_ac_t          LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n             LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt           LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw       LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert  LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete  LIKE type_t.num5                #可刪除否  
   DEFINE  l_count         LIKE type_t.num5
   DEFINE  l_i             LIKE type_t.num5
   DEFINE  l_insert        BOOLEAN
   DEFINE l_var_keys       DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys     DYNAMIC ARRAY OF STRING
   DEFINE l_vars           DYNAMIC ARRAY OF STRING
   DEFINE l_fields         DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak   DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:input段define
   {<point name="input.define"/>}
   #END add-point    
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   LET g_forupd_sql = "SELECT dzcb002,dzcb003,dzcb004 FROM dzcb_t WHERE dzcb001=? AND dzcb002=? FOR UPDATE"
   LET g_forupd_sql = cl_forupd_sql(g_forupd_sql)
   DECLARE adzi221_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
 
   LET l_allow_insert = cl_detail_input_auth("insert")
   LET l_allow_delete = cl_detail_input_auth("delete")
   LET g_qryparam.state = 'i'
 
   DISPLAY BY NAME g_dzca_m.dzca001,g_dzca_m.dzca002,g_dzca_m.dzca003,g_dzca_m.dzcastus,g_dzca_m.dzcamodu,g_dzca_m.dzcadate,g_dzca_m.dzcaoriu,g_dzca_m.dzcaorid,g_dzca_m.dzcauser,g_dzca_m.dzcadept,g_dzca_m.dzcabuid
   
   DIALOG ATTRIBUTE(UNBUFFERED)
   
      #單頭段
      INPUT BY NAME g_dzca_m.dzca001,g_dzca_m.dzca002,g_dzca_m.dzca003,g_dzca_m.dzcastus,g_dzca_m.dzcamodu,g_dzca_m.dzcadate,g_dzca_m.dzcaoriu,g_dzca_m.dzcaorid,g_dzca_m.dzcauser,g_dzca_m.dzcadept,g_dzca_m.dzcabuid 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION
         
     
         BEFORE INPUT
            LET g_before_input_done = FALSE
            CALL adzi221_set_entry(p_cmd)
            CALL adzi221_set_no_entry(p_cmd)
            LET g_before_input_done = TRUE
          
            #---------------------------<  Master  >---------------------------
         #----<<dzca001>>----
         BEFORE FIELD dzca001
            #add-point:BEFORE FIELD dzca001
            {<point name="input.b.dzca001" />}
            #END add-point

         AFTER FIELD dzca001
            #add-point:AFTER FIELD dzca001
            {<point name="input.a.dzca001" />}
            #END add-point

         #Ctrlp:input.c.dzca001
         ON ACTION controlp INFIELD dzca001
            #add-point:CONTROLP dzca001
            {<point name="input.c.dzca001" />}
            #END add-point

         #----<<dzca002>>----
         BEFORE FIELD dzca002
            #add-point:BEFORE FIELD dzca002
            {<point name="input.b.dzca002" />}
            #END add-point

         AFTER FIELD dzca002
            #add-point:AFTER FIELD dzca002
            {<point name="input.a.dzca002" />}
            #END add-point

         #Ctrlp:input.c.dzca002
         ON ACTION controlp INFIELD dzca002
            #add-point:CONTROLP dzca002
            {<point name="input.c.dzca002" />}
            #END add-point

         #----<<dzca003>>----
         BEFORE FIELD dzca003
            #add-point:BEFORE FIELD dzca003
            {<point name="input.b.dzca003" />}
            #END add-point

         AFTER FIELD dzca003
            #add-point:AFTER FIELD dzca003
            {<point name="input.a.dzca003" />}
            #END add-point

         #Ctrlp:input.c.dzca003
         ON ACTION controlp INFIELD dzca003
            #add-point:CONTROLP dzca003
            {<point name="input.c.dzca003" />}
            #END add-point

         #----<<dzcastus>>----
         BEFORE FIELD dzcastus
            #add-point:BEFORE FIELD dzcastus
            {<point name="input.b.dzcastus" />}
            #END add-point

         AFTER FIELD dzcastus
            #add-point:AFTER FIELD dzcastus
            {<point name="input.a.dzcastus" />}
            #END add-point

         #Ctrlp:input.c.dzcastus
         ON ACTION controlp INFIELD dzcastus
            #add-point:CONTROLP dzcastus
            {<point name="input.c.dzcastus" />}
            #END add-point

         #----<<dzcamodu>>----
         BEFORE FIELD dzcamodu
            #add-point:BEFORE FIELD dzcamodu
            {<point name="input.b.dzcamodu" />}
            #END add-point

         AFTER FIELD dzcamodu
            #add-point:AFTER FIELD dzcamodu
            {<point name="input.a.dzcamodu" />}
            #END add-point

         #Ctrlp:input.c.dzcamodu
         ON ACTION controlp INFIELD dzcamodu
            #add-point:CONTROLP dzcamodu
            {<point name="input.c.dzcamodu" />}
            #END add-point

         #----<<dzcadate>>----
         BEFORE FIELD dzcadate
            #add-point:BEFORE FIELD dzcadate
            {<point name="input.b.dzcadate" />}
            #END add-point

         AFTER FIELD dzcadate
            #add-point:AFTER FIELD dzcadate
            {<point name="input.a.dzcadate" />}
            #END add-point

         #Ctrlp:input.c.dzcadate
         ON ACTION controlp INFIELD dzcadate
            #add-point:CONTROLP dzcadate
            {<point name="input.c.dzcadate" />}
            #END add-point

         #----<<dzcaoriu>>----
         BEFORE FIELD dzcaoriu
            #add-point:BEFORE FIELD dzcaoriu
            {<point name="input.b.dzcaoriu" />}
            #END add-point

         AFTER FIELD dzcaoriu
            #add-point:AFTER FIELD dzcaoriu
            {<point name="input.a.dzcaoriu" />}
            #END add-point

         #Ctrlp:input.c.dzcaoriu
         ON ACTION controlp INFIELD dzcaoriu
            #add-point:CONTROLP dzcaoriu
            {<point name="input.c.dzcaoriu" />}
            #END add-point

         #----<<dzcaorid>>----
         BEFORE FIELD dzcaorid
            #add-point:BEFORE FIELD dzcaorid
            {<point name="input.b.dzcaorid" />}
            #END add-point

         AFTER FIELD dzcaorid
            #add-point:AFTER FIELD dzcaorid
            {<point name="input.a.dzcaorid" />}
            #END add-point

         #Ctrlp:input.c.dzcaorid
         ON ACTION controlp INFIELD dzcaorid
            #add-point:CONTROLP dzcaorid
            {<point name="input.c.dzcaorid" />}
            #END add-point

         #----<<dzcauser>>----
         BEFORE FIELD dzcauser
            #add-point:BEFORE FIELD dzcauser
            {<point name="input.b.dzcauser" />}
            #END add-point

         AFTER FIELD dzcauser
            #add-point:AFTER FIELD dzcauser
            {<point name="input.a.dzcauser" />}
            #END add-point

         #Ctrlp:input.c.dzcauser
         ON ACTION controlp INFIELD dzcauser
            #add-point:CONTROLP dzcauser
            {<point name="input.c.dzcauser" />}
            #END add-point

         #----<<dzcadept>>----
         BEFORE FIELD dzcadept
            #add-point:BEFORE FIELD dzcadept
            {<point name="input.b.dzcadept" />}
            #END add-point

         AFTER FIELD dzcadept
            #add-point:AFTER FIELD dzcadept
            {<point name="input.a.dzcadept" />}
            #END add-point

         #Ctrlp:input.c.dzcadept
         ON ACTION controlp INFIELD dzcadept
            #add-point:CONTROLP dzcadept
            {<point name="input.c.dzcadept" />}
            #END add-point

         #----<<dzcabuid>>----
         BEFORE FIELD dzcabuid
            #add-point:BEFORE FIELD dzcabuid
            {<point name="input.b.dzcabuid" />}
            #END add-point

         AFTER FIELD dzcabuid
            #add-point:AFTER FIELD dzcabuid
            {<point name="input.a.dzcabuid" />}
            #END add-point

         #Ctrlp:input.c.dzcabuid
         ON ACTION controlp INFIELD dzcabuid
            #add-point:CONTROLP dzcabuid
            {<point name="input.c.dzcabuid" />}
            #END add-point

 #欄位檢查
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
                
            CALL cl_showmsg()
            DISPLAY BY NAME g_dzca_m.dzca001             

 
            IF p_cmd <> 'u' THEN
               BEGIN WORK
               LET l_count = 1  
               
               SELECT COUNT(*) INTO l_count FROM dzca_t
                WHERE  dzca001 = g_dzca_m.dzca001

               IF l_count = 0 THEN
                  
                  #add-point:單頭新增前
                  {<point name="insert.head.b_insert"/>}
                  #END add-point
                  
                  INSERT INTO dzca_t (dzca001,dzca002,dzca003,dzcastus,dzcamodu,dzcadate,dzcaoriu,dzcaorid,dzcauser,dzcadept,dzcabuid)
                  VALUES (g_dzca_m.dzca001,g_dzca_m.dzca002,g_dzca_m.dzca003,g_dzca_m.dzcastus,g_dzca_m.dzcamodu,g_dzca_m.dzcadate,g_dzca_m.dzcaoriu,g_dzca_m.dzcaorid,g_dzca_m.dzcauser,g_dzca_m.dzcadept,g_dzca_m.dzcabuid) # DISK WRITE
                  IF SQLCA.sqlcode THEN
                     CALL cl_err3("ins","g_dzca_m",g_dzca_m.dzca001,"",SQLCA.sqlcode,"","",1)  
                     CONTINUE DIALOG
                  END IF
                  COMMIT WORK
                  
                  #add-point:單頭新增後
                  {<point name="insert.head.a_insert"/>}
                  #END add-point
                  
               ELSE
                  CALL cl_err( g_dzca_m.dzca001,'!', 0 )
                  ROLLBACK WORK
               END IF 
            ELSE
            
               #add-point:單頭修改前
               {<point name="modify.head.b_update"/>}
               #END add-point
               
               UPDATE dzca_t SET (dzca001,dzca002,dzca003,dzcastus,dzcamodu,dzcadate,dzcaoriu,dzcaorid,dzcauser,dzcadept,dzcabuid) = (g_dzca_m.dzca001,g_dzca_m.dzca002,g_dzca_m.dzca003,g_dzca_m.dzcastus,g_dzca_m.dzcamodu,g_dzca_m.dzcadate,g_dzca_m.dzcaoriu,g_dzca_m.dzcaorid,g_dzca_m.dzcauser,g_dzca_m.dzcadept,g_dzca_m.dzcabuid)
                WHERE  dzca001 = g_dzca_m.dzca001

               IF SQLCA.sqlcode THEN
                  CALL cl_err3("ins","g_dzca_m",g_dzca_m.dzca001,"",SQLCA.sqlcode,"","",1)  
                  ROLLBACK WORK
               ELSE
                  COMMIT WORK
               END IF
               
               #add-point:單頭修改後
               {<point name="modify.head.a_update"/>}
               #END add-point
               
            END IF
           #controlp
      END INPUT
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_dzcb_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION
         
         
         BEFORE INPUT
            IF g_rec_b != 0 THEN
               CALL fgl_set_arr_curr(l_ac)
            END IF
            LET g_before_input_done = FALSE  
            LET g_before_input_done = TRUE
         
         BEFORE ROW
            LET l_insert = FALSE
            LET p_cmd = ''
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_n TO FORMONLY.idx
         
            BEGIN WORK
            OPEN adzi221_cl USING g_dzca_m.dzca001

            IF STATUS THEN
               CALL cl_err("OPEN adzi221_cl:", STATUS, 1)
               CLOSE adzi221_cl
               ROLLBACK WORK
               RETURN
            END IF
                   
            FETCH adzi221_cl INTO g_dzca_m.dzca001,g_dzca_m.dzca002,g_dzca_m.dzca003,g_dzca_m.dzcastus,g_dzca_m.dzcamodu,g_dzca_m.dzcadate,g_dzca_m.dzcaoriu,g_dzca_m.dzcaorid,g_dzca_m.dzcauser,g_dzca_m.dzcadept,g_dzca_m.dzcabuid # 鎖住將被更改或取消的資料
            IF SQLCA.sqlcode THEN
                  CALL cl_err(g_dzca_m.dzca001,SQLCA.sqlcode,0)
                  CLOSE adzi221_cl
                  ROLLBACK WORK
                  RETURN
            END IF
            
            IF g_rec_b >= l_ac 
               AND NOT cl_null(g_dzcb_d[l_ac].dzcb002) 

            THEN
               LET p_cmd='u'
               LET g_dzcb_d_t.* = g_dzcb_d[l_ac].*  #BACKUP
               OPEN adzi221_bcl USING g_dzca_m.dzca001,

                                                g_dzcb_d_t.dzcb002

               IF STATUS THEN
                  CALL cl_err("OPEN adzi221_bcl:", STATUS, 1)
                  LET l_lock_sw='Y'
               ELSE
                  FETCH adzi221_bcl INTO g_dzcb_d[l_ac].dzcb002,g_dzcb_d[l_ac].dzcb003,g_dzcb_d[l_ac].dzcb004
                  IF SQLCA.sqlcode THEN
                      CALL cl_err(g_dzcb_d_t.dzcb002,SQLCA.sqlcode,1)
                      LET l_lock_sw = "Y"
                  END IF
                  CALL adzi221_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET p_cmd='a'
            END IF
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET p_cmd = 'a'
            INITIALIZE g_dzcb_d[l_ac].* TO NULL 
            
            LET g_dzcb_d_t.* = g_dzcb_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL adzi221_set_entry_b()
            CALL adzi221_set_no_entry_b()
           
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM dzcb_t 
                WHERE  dzcb001 = g_dzca_m.dzca001

                AND g_dzcb_d[l_ac].dzcb002 = dzcb002

                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
            
               #add-point:單身新增前
               {<point name="insert.body.b_insert"/>}
               #END add-point
            
               INSERT INTO dzcb_t
                           (dzcb001,dzcb002,dzcb003,dzcb004

                           ) 
                     VALUES(g_dzca_m.dzca001,g_dzcb_d[l_ac].dzcb002,g_dzcb_d[l_ac].dzcb003,g_dzcb_d[l_ac].dzcb004

                           )
                           
                           
               #add-point:單身新增後
               {<point name="insert.body.a_insert"/>}
               #END add-point
               
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_dzcb_d[l_ac].* TO NULL
               ROLLBACK WORK
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err3("ins","dzcb_t",'',"",SQLCA.sqlcode,"","",1)  
               ROLLBACK WORK                    
               CANCEL INSERT
            ELSE
               COMMIT WORK
               MESSAGE 'INSERT O.K'
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF NOT cl_null(g_dzcb_d_t.dzcb002) 

               THEN
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               IF adzi221_before_delete() THEN
                  
                  COMMIT WORK
               ELSE 
                  ROLLBACK WORK
                  CANCEL DELETE   
               END IF 
               CLOSE adzi221_bcl
               LET l_count = g_dzcb_d.getLength()
            END IF 
              
         AFTER DELETE 
            CALL adzi221_delete_b(l_count) 
 
         #---------------------<  Detail: page     1  >---------------------
         #----<<dzcb002>>----
         BEFORE FIELD dzcb002
            #add-point:BEFORE FIELD dzcb002
            {<point name="input.b.dzcb002" />}
            #END add-point

         AFTER FIELD dzcb002
            #add-point:AFTER FIELD dzcb002
            {<point name="input.a.dzcb002" />}
            #END add-point

         #Ctrlp:input.c.dzcb002
         ON ACTION controlp INFIELD dzcb002
            #add-point:CONTROLP dzcb002
            {<point name="input.c.dzcb002" />}
            #END add-point

         #----<<dzcb003>>----
         BEFORE FIELD dzcb003
            #add-point:BEFORE FIELD dzcb003
            {<point name="input.b.dzcb003" />}
            #END add-point

         AFTER FIELD dzcb003
            #add-point:AFTER FIELD dzcb003
            {<point name="input.a.dzcb003" />}
            #END add-point

         #Ctrlp:input.c.dzcb003
         ON ACTION controlp INFIELD dzcb003
            #add-point:CONTROLP dzcb003
            {<point name="input.c.dzcb003" />}
            #END add-point

         #----<<dzcb004>>----
         BEFORE FIELD dzcb004
            #add-point:BEFORE FIELD dzcb004
            {<point name="input.b.dzcb004" />}
            #END add-point

         AFTER FIELD dzcb004
            #add-point:AFTER FIELD dzcb004
            {<point name="input.a.dzcb004" />}
            #END add-point

         #Ctrlp:input.c.dzcb004
         ON ACTION controlp INFIELD dzcb004
            #add-point:CONTROLP dzcb004
            {<point name="input.c.dzcb004" />}
            #END add-point


 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_dzcb_d[l_ac].* = g_dzcb_d_t.*
               CLOSE adzi221_bcl
               ROLLBACK WORK
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_dzcb_d[l_ac].dzcb002,-263,1)
               LET g_dzcb_d[l_ac].* = g_dzcb_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="modify.body.b_update"/>}
               #END add-point
      
               UPDATE dzcb_t SET (dzcb002,dzcb003,dzcb004) = (g_dzcb_d[l_ac].dzcb002,g_dzcb_d[l_ac].dzcb003,g_dzcb_d[l_ac].dzcb004)
                      WHERE  dzcb001 = g_dzca_m.dzca001 

                      AND dzcb002 = g_dzcb_d_t.dzcb002 #項次   

                      
               IF SQLCA.sqlcode THEN
                  CALL cl_err3("upd","dzcb_t",g_dzcb_d[l_ac].dzcb002,"",SQLCA.sqlcode,"","",1)   
                  LET g_dzcb_d[l_ac].* = g_dzcb_d_t.*
               ELSE
                  #資料多語言用-增/改
                  
               END IF
               
               #add-point:單身修改後
               {<point name="modify.body.a_update"/>}
               #END add-point
 
            END IF
            
         AFTER ROW
            CLOSE adzi221_bcl
            COMMIT WORK
            #其他table進行unlock
            
              
      END INPUT
      

   
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         CALL cl_set_head_visible("","AUTO")
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET g_action_choice="exit"
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET g_action_choice="exit"
         EXIT DIALOG
    
      ON ACTION historyinfo        #修改歷程功能
         IF NOT cl_null(g_dzca_m.dzca001) 

            THEN  
            CALL cl_used_filled_modify_history(g_dzca_m.dzca001,g_site) RETURNING g_logc
         END IF 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
END FUNCTION
 
 
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION adzi221_show()
   {<Local define>}
   DEFINE l_ac_t    LIKE type_t.num5
   DEFINE l_sql     STRING
   {</Local define>}
   #add-point:show段define
   {<point name="show.define"/>}
   #END add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #END add-point
   
   LET g_dzca_m_t.* = g_dzca_m.*      #保存單頭舊值
  
   DISPLAY BY NAME g_dzca_m.dzca001,g_dzca_m.dzca002,g_dzca_m.dzca003,g_dzca_m.dzcastus,g_dzca_m.dzcamodu,g_dzca_m.modu_desc,g_dzca_m.dzcadate,g_dzca_m.dzcaoriu,g_dzca_m.oriu_desc,g_dzca_m.dzcaorid,g_dzca_m.orid_desc,g_dzca_m.dzcauser,g_dzca_m.user_desc,g_dzca_m.dzcadept,g_dzca_m.dept_desc,g_dzca_m.dzcabuid
    
   CASE g_dzca_m.dzcastus
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "authstatus/valid.png")
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "authstatus/void.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "authstatus/invalid.png")
   END CASE
   
   CALL adzi221_b_fill(g_wc2)                 #單身
     
   #帶出預設欄位之值
   LET g_dzca_m.modu_desc = cl_get_username(g_dzca_m.dzcamodu)
   LET g_dzca_m.oriu_desc = cl_get_username(g_dzca_m.dzcaoriu)
   LET g_dzca_m.user_desc = cl_get_username(g_dzca_m.dzcauser)
   LET g_dzca_m.dept_desc = cl_get_deptname(g_dzca_m.dzcadept)
   LET g_dzca_m.orid_desc = cl_get_deptname(g_dzca_m.dzcaorid)
 
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
    
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_dzcb_d.getLength()
       
   END FOR

   
    
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #END add-point
   
END FUNCTION
 
 
#+ 資料複製
PRIVATE FUNCTION adzi221_reproduce()
   {<Local define>}
   DEFINE l_newno     LIKE dzca_t.dzca001 
   DEFINE l_oldno     LIKE dzca_t.dzca001 

   DEFINE l_master    RECORD LIKE dzca_t.*
   DEFINE l_detail    RECORD LIKE dzcb_t.*
   DEFINE l_cnt       LIKE type_t.num5
   {</Local define>}
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #END add-point   
 
   IF cl_null(g_dzca_m.dzca001) 

      THEN
      CALL cl_err('',-400,0)
      RETURN
   END IF
    
   LET g_before_input_done = FALSE
   CALL adzi221_set_entry('a')
   LET g_before_input_done = TRUE
 
   CALL cl_set_head_visible("","YES")
 
   INPUT l_newno   # FROM

    FROM dzca001 

      BEFORE INPUT
 
      AFTER FIELD dzca001 
         IF l_newno IS NULL THEN
            NEXT FIELD CURRENT
         END IF
         

            
      AFTER INPUT
         #確定該key值是否有重複定義
         LET l_cnt = 0
         SELECT COUNT(*) INTO l_cnt FROM dzca_t 
          WHERE  dzca001 = l_newno

         IF l_cnt > 0 THEN
            CALL cl_err("Reproduce","std-00006",1)
            #NEXT FIELD dzca001 
         END IF
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE INPUT
   END INPUT
   
   IF INT_FLAG OR l_newno IS NULL THEN
       LET INT_FLAG = 0
       RETURN
   END IF
   
   BEGIN WORK
 
   SELECT * INTO l_master.* FROM dzca_t 
      WHERE  dzca001 = g_dzca_m.dzca001

   LET l_master.dzca001 = l_newno

   
   LET l_master.dzcauser = g_user
   LET l_master.dzcadept = g_dept
   LET l_master.dzcabuid = cl_get_current()
   LET l_master.dzcaoriu = g_user 
   LET l_master.dzcaorid = g_dept 
   LET l_master.dzcamodu = g_user
   LET l_master.dzcadate = cl_get_current()
   LET l_master.dzcastus = 'Y'
   
   #add-point:單頭複製前
   {<point name="reproduce.head.b_insert"/>}
   #END add-point
   
   INSERT INTO dzca_t VALUES (l_master.*) #複製單頭        
   IF SQLCA.sqlcode THEN
      CALL cl_err3("ins","dzca_t",l_newno,"",SQLCA.sqlcode,"","",1)
      ROLLBACK WORK
      RETURN
   END IF
   
   #add-point:單頭複製後
   {<point name="reproduce.head.a_insert"/>}
   #END add-point
   
   LET g_sql = "SELECT * FROM dzcb_t WHERE  ",
               " dzcb001 = '",g_dzca_m.dzca001,"'"

   DECLARE adzi221_reproduce CURSOR FROM g_sql
 
   FOREACH adzi221_reproduce INTO l_detail.*
      LET l_detail.dzcb001 = l_newno
 
      #add-point:單身複製前
      {<point name="reproduce.body.b_insert"/>}
      #END add-point
      
      INSERT INTO dzcb_t VALUES (l_detail.*) #複製單身
      IF SQLCA.sqlcode THEN
         CALL cl_err('Insert error!',SQLCA.sqlcode,1)
         ROLLBACK WORK
         RETURN
      END IF
 
      #add-point:單身複製後
      {<point name="reproduce.body.a_insert"/>}
      #END add-point
      
   END FOREACH
   
   COMMIT WORK
   MESSAGE 'ROW(',l_newno,') O.K'
   LET l_oldno = g_dzca_m.dzca001

   
   SELECT dzca001,dzca002,dzca003,dzcastus,dzcamodu,dzcadate,dzcaoriu,dzcaorid,dzcauser,dzcadept,dzcabuid INTO g_dzca_m.dzca001,g_dzca_m.dzca002,g_dzca_m.dzca003,g_dzca_m.dzcastus,g_dzca_m.dzcamodu,g_dzca_m.dzcadate,g_dzca_m.dzcaoriu,g_dzca_m.dzcaorid,g_dzca_m.dzcauser,g_dzca_m.dzcadept,g_dzca_m.dzcabuid FROM dzca_t 
      WHERE  dzca001 = l_newno

      
   CALL adzi221_show()
   LET g_dzca_m.dzca001 = l_oldno

   
   SELECT dzca001,dzca002,dzca003,dzcastus,dzcamodu,dzcadate,dzcaoriu,dzcaorid,dzcauser,dzcadept,dzcabuid INTO g_dzca_m.dzca001,g_dzca_m.dzca002,g_dzca_m.dzca003,g_dzca_m.dzcastus,g_dzca_m.dzcamodu,g_dzca_m.dzcadate,g_dzca_m.dzcaoriu,g_dzca_m.dzcaorid,g_dzca_m.dzcauser,g_dzca_m.dzcadept,g_dzca_m.dzcabuid FROM dzca_t 
      WHERE  dzca001 = g_dzca_m.dzca001

   CALL adzi221_show()
 
   DISPLAY BY NAME g_dzca_m.dzca001

   
END FUNCTION
 
#+ 資料刪除
PRIVATE FUNCTION adzi221_delete()
   #add-point:delete段define
   {<point name="delete.define"/>}
   #END add-point     
   
   IF cl_null(g_dzca_m.dzca001) 

      THEN
      CALL cl_err("",-400,0)
      RETURN
   END IF
 
    SELECT UNIQUE dzca001,dzca002,dzca003,dzcastus,dzcamodu,dzcadate,dzcaoriu,dzcaorid,dzcauser,dzcadept,dzcabuid
 INTO g_dzca_m.dzca001,g_dzca_m.dzca002,g_dzca_m.dzca003,g_dzca_m.dzcastus,g_dzca_m.dzcamodu,g_dzca_m.dzcadate,g_dzca_m.dzcaoriu,g_dzca_m.dzcaorid,g_dzca_m.dzcauser,g_dzca_m.dzcadept,g_dzca_m.dzcabuid
 FROM dzca_t
 WHERE dzca001 = g_dzca_m.dzca001
   BEGIN WORK
 
   OPEN adzi221_cl USING g_dzca_m.dzca001

   IF STATUS THEN
      CALL cl_err("OPEN adzi221_cl:", STATUS, 1)
      CLOSE adzi221_cl
      ROLLBACK WORK
      RETURN
   END IF
 
   FETCH adzi221_cl INTO g_dzca_m.dzca001,g_dzca_m.dzca002,g_dzca_m.dzca003,g_dzca_m.dzcastus,g_dzca_m.dzcamodu,g_dzca_m.dzcadate,g_dzca_m.dzcaoriu,g_dzca_m.dzcaorid,g_dzca_m.dzcauser,g_dzca_m.dzcadept,g_dzca_m.dzcabuid              # 鎖住將被更改或取消的資料
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_dzca_m.dzca001,SQLCA.sqlcode,0)          #資料被他人LOCK
      ROLLBACK WORK
      RETURN
   END IF
 
   CALL adzi221_show()
 
   #IF NOT cl_ask_delete() THEN             #確認一下
   IF cl_ask_del_master() THEN              #確認一下
      INITIALIZE g_doc.* TO NULL         
      LET g_doc.column1 = "dzca001"       
      LET g_doc.value1 = g_dzca_m.dzca001     
      CALL cl_del_doc()   
      
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete"/>}
      #END add-point
      
      DELETE FROM dzca_t WHERE  dzca001 = g_dzca_m.dzca001
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #END add-point
      
      #add-point:單身刪除前
      {<point name="delete.body.b_delete"/>}
      #END add-point
      
      DELETE FROM dzcb_t WHERE  dzcb001 = g_dzca_m.dzca001

      
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #END add-point
      
      CLEAR FORM
      CALL g_dzcb_d.clear() 

     
      CALL adzi221_ui_browser_refresh()  
      CALL adzi221_ui_headershow()  
      CALL adzi221_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL adzi221_fetch('P')
      ELSE
         LET g_wc = " 1=1"
         CALL adzi221_browser_fill("first")
      END IF
       
   END IF
 
   CLOSE adzi221_cl
   COMMIT WORK
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_dzca_m.dzca001,'D')
    
END FUNCTION
 
 
#+ 單身陣列填充
PRIVATE FUNCTION adzi221_b_fill(p_wc2)
   {<Local define>}
   DEFINE p_wc2      STRING
   {</Local define>}
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #END add-point     
 
   CALL g_dzcb_d.clear()    #g_dzcb_d 單頭及單身 

 
   LET g_sql = "SELECT dzcb002,dzcb003,dzcb004 FROM dzcb_t WHERE dzcb001=?"   
 
   IF NOT cl_null(p_wc2) THEN
      LET g_sql=g_sql CLIPPED," AND ",p_wc2 CLIPPED
   END IF
 
   PREPARE adzi221_pb FROM g_sql
   DECLARE b_fill_cs CURSOR FOR adzi221_pb
 
   LET g_cnt = l_ac
   LET l_ac = 1
 
   OPEN b_fill_cs USING g_dzca_m.dzca001

                                            
   FOREACH b_fill_cs INTO g_dzcb_d[l_ac].dzcb002,g_dzcb_d[l_ac].dzcb003,g_dzcb_d[l_ac].dzcb004

      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
     

     
      #add-point:單身資料抓取
      {<point name="bfill.foreach"/>}
      #END add-point
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         CALL cl_err( '', 9035, 0 )
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   CALL g_dzcb_d.deleteElement(l_ac)

 
   LET g_rec_b=l_ac-1
   DISPLAY g_rec_b TO FORMONLY.cnt  
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
END FUNCTION
 
 
#+ 單身db資料刪除
PRIVATE FUNCTION adzi221_before_delete()
   #add-point:before_delete段define
   {<point name="before_delete.define"/>}
   #END add-point 
   
   DELETE FROM dzcb_t
    WHERE  dzcb001 = g_dzca_m.dzca001 AND

          dzcb002 = g_dzcb_d_t.dzcb002

   IF SQLCA.sqlcode THEN
      CALL cl_err3("del","dzcb_t",g_dzca_m.dzca001,'',SQLCA.sqlcode,"","",1)
      RETURN FALSE 
   END IF
 
   LET g_rec_b = g_rec_b-1
   DISPLAY g_rec_b TO FORMONLY.cnt
 
   RETURN TRUE
    
END FUNCTION
 
 
#+ 刪除單身db資料後畫面頁簽連動
PRIVATE FUNCTION adzi221_delete_b(p_total)
   {<Local define>}
   DEFINE p_total         LIKE type_t.num5
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #END add-point     
 
   BEGIN WORK
   

 
   IF p_total = g_dzcb_d.getLength() THEN
      
      CALL g_dzcb_d.deleteElement(l_ac)
   END IF 
   
   COMMIT WORK
   
END FUNCTION
 
 
#+ 單頭欄位開啟設定
PRIVATE FUNCTION adzi221_set_entry(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1  
   {</Local define>}
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #END add-point       
 
   IF p_cmd = 'a' AND ( NOT g_before_input_done ) THEN
      CALL cl_set_comp_entry("dzca001",TRUE)
   END IF
   
END FUNCTION
 
 
#+ 單頭欄位關閉設定
PRIVATE FUNCTION adzi221_set_no_entry(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1   
   {</Local define>}
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #END add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' AND ( NOT g_before_input_done ) THEN
      CALL cl_set_comp_entry("dzca001",FALSE)
   END IF
   
END FUNCTION
 
 
#+ 單身欄位開啟設定
PRIVATE FUNCTION adzi221_set_entry_b()
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #END add-point     
END FUNCTION
 
 
#+ 單身欄位關閉設定
PRIVATE FUNCTION adzi221_set_no_entry_b()
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #END add-point     
END FUNCTION
 
#確認碼變更
PRIVATE FUNCTION adzi221_statechange()
   {<Local define>}
   DEFINE lc_state LIKE type_t.chr5
   {</Local define>}
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #END add-point  
   
   MESSAGE ""
 
   IF cl_null(g_dzca_m.dzca001) THEN
      CALL cl_err('',-400,0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         CASE g_dzca_m.dzcastus
            WHEN "Y"
               HIDE OPTION "valid"
            WHEN "N"
               HIDE OPTION "void"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
         IF g_template_type <> "t" THEN
            HIDE OPTION "invalid"
         END IF
      ON ACTION valid
         LET lc_state = "Y"
         EXIT MENU
      ON ACTION void
         LET lc_state = "N"
         EXIT MENU
      ON ACTION invalid
         LET lc_state = "X"
         EXIT MENU
   END MENU
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #END add-point
   
   UPDATE dzca_t SET dzcastus = lc_state 
      WHERE  dzca001 = g_dzca_m.dzca001

  
   IF SQLCA.sqlcode THEN
      CALL cl_err('',SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "authstatus/valid.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "authstatus/void.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "authstatus/invalid.png")
      END CASE
   END IF
   
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #END add-point
 
END FUNCTION
 
   
#add-point:自定義元件(Function)
{<point name="other.function"/>}
#END add-point

