#+ Version..: T6-ERP-1.00.00 Build-000000
#+ 
#+ Filename...: adzi460
#+ Buildtype..: 應用 i01 樣板自動產生
#+ Memo.......: 
#+ 以上段落由子樣板a00產生


{<point name="global.memo" />}
 
IMPORT os
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
{<Module define>}
 
#單頭 type 宣告
PRIVATE TYPE type_g_dzdj_m RECORD
       dzdj001 LIKE dzdj_t.dzdj001, 
   dzdj002 LIKE dzdj_t.dzdj002, 
   dzdj003 LIKE dzdj_t.dzdj003, 
   dzdj006 LIKE dzdj_t.dzdj006, 
   dzdj007 LIKE dzdj_t.dzdj007, 
   dzdjstus LIKE dzdj_t.dzdjstus
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_dzdj_m        type_g_dzdj_m
DEFINE g_dzdj_m_t      type_g_dzdj_m                #備份舊值
DEFINE g_dzdj001_t   LIKE dzdj_t.dzdj001    #Key值備份

 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD                   #資料瀏覽之欄位  
         b_statepic     LIKE type_t.chr50,
            b_dzdj001 LIKE dzdj_t.dzdj001,
      b_dzdj002 LIKE dzdj_t.dzdj002,
      b_dzdj006 LIKE dzdj_t.dzdj006,
      b_dzdj007 LIKE dzdj_t.dzdj007
         #,rank           LIKE type_t.num10
      END RECORD 
          
#無單頭append欄位定義
 
DEFINE g_wc                  STRING                        #儲存 user 的查詢條件
DEFINE g_wc_t                STRING                        #儲存 user 的查詢條件
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
  
DEFINE g_sql                 STRING                        #組 sql 用 
DEFINE g_forupd_sql          STRING                        #SELECT ... FOR UPDATE  SQL    
DEFINE g_cnt                 LIKE type_t.num10              
DEFINE g_jump                LIKE type_t.num10             #查詢指定的筆數 
DEFINE g_no_ask              LIKE type_t.num5              #是否開啟指定筆視窗 
DEFINE g_rec_b               LIKE type_t.num5              #單身筆數                         
DEFINE l_ac                  LIKE type_t.num5              #目前處理的ARRAY CNT 
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog     
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_pagestart           LIKE type_t.num5              #page起始筆數
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ch                  base.Channel                  #外串程式用
DEFINE g_state               STRING
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
 
#快速搜尋用
DEFINE g_searchcol           STRING             #查詢欄位代碼
DEFINE g_searchstr           STRING             #查詢欄位字串
DEFINE g_order               STRING             #查詢排序模式
 
#Browser用
DEFINE g_current_idx         LIKE type_t.num5   #Browser 所在筆數(當下page)
DEFINE g_current_row         LIKE type_t.num5   #Browser 所在筆數(暫存用)
DEFINE g_current_cnt         LIKE type_t.num10  #Browser 總筆數(當下page)
DEFINE g_browser_idx         LIKE type_t.num5   #Browser 所在筆數(所有資料)
DEFINE g_browser_cnt         LIKE type_t.num5   #Browser 總筆數(所有資料)
DEFINE g_tmp_page            LIKE type_t.num5   
DEFINE g_row_index           LIKE type_t.num5
{</Module define>}
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#+ 此段落由子樣板a26產生
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   

   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("adz","")

   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   

   #LOCK CURSOR (identifier)
   LET g_forupd_sql = "SELECT dzdj001,dzdj002,dzdj003,dzdj006,dzdj007,dzdjstus FROM dzdj_t WHERE dzdj001=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.define_sql" mark="Y"/>}
   #end add-point
   LET g_forupd_sql = cl_forupd_sql(g_forupd_sql)                #轉換不同資料庫語法
   DECLARE adzi460_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR

   IF g_bgjob = "Y" THEN

      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point

   ELSE
   
      #畫面開啟 (identifier)
      OPEN WINDOW w_adzi460 WITH FORM cl_ap_formpath("adz",g_code)

      #程式初始化
      CALL adzi460_init()   
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #進入選單 Menu (="N")
      CALL adzi460_ui_dialog() 

      #畫面關閉
      CLOSE WINDOW w_adzi460
      
   END IF 
   
   CLOSE adzi460_cl
   
   

   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point

   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN


 
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION adzi460_init()
 
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point
   
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
      CALL cl_set_combo_scc_part('dzdjstus','13','N,X,Y')

   
 
   CALL adzi460_default_search()
 
END FUNCTION
 
 
#+ 選單功能實際執行處
PRIVATE FUNCTION adzi460_ui_dialog() 
 
   {<Local define>}
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_wc    LIKE type_t.chr200
   DEFINE li_idx   LIKE type_t.num5
   {</Local define>}
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   LET li_exit = FALSE
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   LET g_current_row = 0
   LET g_current_idx = 1
   
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   CALL gfrm_curr.setElementHidden("mainlayout",1)
   CALL gfrm_curr.setElementHidden("worksheet",0)
   LET g_main_hidden = 1
 
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   WHILE li_exit = FALSE
      
      CALL adzi460_browser_fill(g_wc,"")
      CALL lib_cl_dlg.cl_query_bef_disp()
      CALL lib_cl_dlg.cl_relate_bef_disp()
      CALL cl_notice()
      
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_dzdj001 = g_dzdj001_t

               THEN
               LET g_current_row = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
    
      IF g_main_hidden = 0 THEN
         MENU
            BEFORE MENU 
                  
               CALL cl_navigator_setting(g_current_idx, g_current_cnt)
               
               #還原為原本指定筆數
               IF g_current_row > 0 THEN
                  LET g_current_idx = g_current_row
               END IF
               
               #當每次點任一筆資料都會需要用到  
               IF g_browser_cnt > 0 THEN
                  CALL adzi460_fetch("")   
               END IF               
               
               #預設第一頁、下一頁、前一頁、最後一頁 page button 功能設定  
               CALL cl_ui_set_browse_page_button(g_curr_diag,g_page_action,g_pagestart,g_browser_cnt) 
      
         
            ON ACTION statechange
               CALL adzi460_statechange()
               LET g_action_choice="statechange"
               EXIT MENU
               
            ON ACTION first
               CALL adzi460_fetch("F") 
               LET g_current_row = g_current_idx
            
            ON ACTION next
               CALL adzi460_fetch("N")
               LET g_current_row = g_current_idx
            
            ON ACTION jump
               CALL adzi460_fetch("/")
               LET g_current_row = g_current_idx
            
            ON ACTION previous
               CALL adzi460_fetch("P")
               LET g_current_row = g_current_idx
            
            ON ACTION last 
               CALL adzi460_fetch("L")  
               #CALL cl_navigator_setting(g_current_idx, g_current_cnt)
               #CALL fgl_set_arr_curr(g_current_idx)
               LET g_current_row = g_current_idx
            
            ON ACTION exit
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT MENU 
            
            ON ACTION close
               LET li_exit = TRUE
               EXIT MENU
            
            ON ACTION mainhidden       #主頁摺疊
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  LET g_main_hidden = 1
               END IF
               EXIT MENU
               
            ON ACTION worksheethidden   #瀏覽頁折疊
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  LET g_main_hidden = 1
               END IF
               EXIT MENU
            
            #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            ON ACTION controls   
               IF g_header_hidden THEN
                  CALL gfrm_curr.setElementHidden("worksheet_detail",0)
                  CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
                  LET g_header_hidden = 0     #visible
               ELSE
                  CALL gfrm_curr.setElementHidden("worksheet_detail",1)
                  CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
                  LET g_header_hidden = 1     #hidden     
               END IF
            
            

         ON ACTION insert

            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN 
               CALL adzi460_insert()
               #add-point:ON ACTION insert
               {<point name="menu2.insert" />}
               #END add-point
                EXIT MENU
            END IF


         ON ACTION query

            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN 
               CALL adzi460_query()
               #add-point:ON ACTION query
               {<point name="menu2.query" />}
               #END add-point
            END IF


         ON ACTION reproduce

            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN 
               CALL adzi460_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu2.reproduce" />}
               #END add-point
                EXIT MENU
            END IF


         ON ACTION delete

            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN 
               CALL adzi460_delete()
               #add-point:ON ACTION delete
               {<point name="menu2.delete" />}
               #END add-point
            END IF


         ON ACTION modify

            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN 
               CALL adzi460_modify()
               #add-point:ON ACTION modify
               {<point name="menu2.modify" />}
               #END add-point
                EXIT MENU
            END IF


         ON ACTION output

            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN 
               #add-point:ON ACTION output
               {<point name="menu2.output" />}
               #END add-point
                EXIT MENU
            END IF

            
            #主選單用ACTION
            &include "main_menu.4gl"
            &include "relating_action.4gl"
            #交談指令共用ACTION
            &include "common_action.4gl"
            
         END MENU
      
      ELSE
      
         DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
           
            #左側瀏覽頁簽
            DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTE(COUNT=g_rec_b)
            
               BEFORE ROW
                  #回歸舊筆數位置 (回到當時異動的筆數)
                  LET g_current_idx = DIALOG.getCurrentRow("s_browse")
                  IF g_current_idx = 0 THEN
                     LET g_current_idx = 1
                  END IF
                  LET g_current_row = g_current_idx  #目前指標
                  LET g_current_sw = TRUE
                  CALL cl_show_fld_cont()     
                  
                  #當每次點任一筆資料都會需要用到               
                  CALL adzi460_fetch("")      
                  
                  #預設第一頁、下一頁、前一頁、最後一頁 page button 功能設定  
                  #CALL cl_ui_set_browse_page_button(g_curr_diag,g_page_action,g_pagestart,g_browser_cnt) 
            
               #該樣板不需此段落ON EXPAND (g_row_index)
               #該樣板不需此段落   #樹展開
               #該樣板不需此段落   CALL adzi460_browser_expand(g_row_index)
               #該樣板不需此段落   LET g_browser[g_row_index].b_isExp = 1
               
               ON COLLAPSE (g_row_index)
                  #樹關閉
            
            END DISPLAY
 
            SUBDIALOG lib_cl_dlg.dlg_qryplan
            SUBDIALOG lib_cl_dlg.dlg_relateapps
         
            #add-point:ui_dialog段define
            {<point name="ui_dialog.more_displayarray"/>}
            #end add-point
         
            BEFORE DIALOG
               CALL cl_navigator_setting(g_current_idx, g_current_cnt)
               LET g_curr_diag = ui.DIALOG.getCurrent()
               #LET g_page = "first" 
               #還原為原本指定筆數
               IF g_current_row > 1 THEN
                  #當刪除最後一筆資料時可能產生錯誤, 進行額外判斷
                  IF g_current_row > g_browser.getLength() THEN
                     LEt g_current_row = g_browser.getLength()
                  END IF 
                  LET g_current_idx = g_current_row
                  CALL DIALOG.setCurrentRow("s_browse",g_current_idx)
               END IF
               
               #當每次點任一筆資料都會需要用到  
               IF g_browser_cnt > 0 THEN
                  CALL adzi460_fetch("")   
               END IF               
               #預設第一頁、下一頁、前一頁、最後一頁 page button 功能設定  
               CALL cl_ui_set_browse_page_button(g_curr_diag,g_page_action,g_pagestart,g_browser_cnt) 
            
            AFTER DIALOG
               #add-point:ui_dialog段 after dialog
               {<point name="ui_dialog.after_dialog"/>}
               #end add-point
            
            ON ACTION statechange
               CALL adzi460_statechange()
               LET g_action_choice="statechange"
               EXIT DIALOG
         
            ON ACTION filter
               CALL adzi460_filter()
               EXIT DIALOG
 
            ON ACTION first
               CALL adzi460_fetch("F") 
               LET g_current_row = g_current_idx
            
            ON ACTION next
               CALL adzi460_fetch("N")
               LET g_current_row = g_current_idx
         
            ON ACTION jump
               CALL adzi460_fetch("/")
               LET g_current_row = g_current_idx
         
            ON ACTION previous
               CALL adzi460_fetch("P")
               LET g_current_row = g_current_idx
         
            ON ACTION last 
               CALL adzi460_fetch("L")  
               #CALL cl_navigator_setting(g_current_idx, g_current_cnt)
               #CALL fgl_set_arr_curr(g_current_idx)
               LET g_current_row = g_current_idx
         
            ON ACTION exit
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT DIALOG 
         
            ON ACTION close
               LET li_exit = TRUE
               EXIT DIALOG
         
            ON ACTION mainhidden       #主頁摺疊
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  LET g_main_hidden = 1
               END IF
               EXIT DIALOG
               
            ON ACTION worksheethidden   #瀏覽頁折疊
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  LET g_main_hidden = 1
               END IF
               EXIT DIALOG
         
            #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            ON ACTION controls   
               IF g_header_hidden THEN
                  CALL gfrm_curr.setElementHidden("worksheet_detail",0)
                  CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
                  LET g_header_hidden = 0     #visible
               ELSE
                  CALL gfrm_curr.setElementHidden("worksheet_detail",1)
                  CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
                  LET g_header_hidden = 1     #hidden     
               END IF
 
            

         ON ACTION insert

            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN 
               CALL adzi460_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
                EXIT DIALOG
            END IF


         ON ACTION query

            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN 
               CALL adzi460_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
            END IF


         ON ACTION reproduce

            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN 
               CALL adzi460_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
                EXIT DIALOG
            END IF


         ON ACTION delete

            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN 
               CALL adzi460_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
            END IF


         ON ACTION modify

            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN 
               CALL adzi460_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
                EXIT DIALOG
            END IF


         ON ACTION output

            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN 
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
                EXIT DIALOG
            END IF

 
            #主選單用ACTION
            &include "main_menu.4gl"
            
            #交談指令共用ACTION
            &include "common_action.4gl"
            
         END DIALOG 
      
      END IF
      
   END WHILE
 
END FUNCTION
 
 
#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION adzi460_browser_search(p_type)
 
   {<Local define>}
   DEFINE p_type      LIKE type_t.chr10
   DEFINE li_wc       STRING
   {</Local define>}
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point
     
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol="0" THEN
      CALL cl_err("searchcol:","std-00001",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET li_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET li_wc = li_wc.toLowerCase()
   ELSE
      LET li_wc = " 1=1 "
   END IF         
   
   LET li_wc = li_wc, " ORDER BY dzdj001"
   
   LET g_wc = li_wc
   
   CALL adzi460_browser_fill(li_wc,"F")
 
   RETURN TRUE
 
END FUNCTION
 
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION adzi460_browser_fill(p_wc,ps_page_action) 

   {<Local define>}
   DEFINE p_wc              STRING
   DEFINE ps_page_action    STRING
   DEFINE l_searchcol       STRING
   DEFINE l_sql             STRING
   DEFINE l_sql_rank        STRING
   {</Local define>}
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point
   
   CLEAR FORM
   INITIALIZE g_dzdj_m.* TO NULL
   INITIALIZE g_wc TO NULL
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET l_searchcol = "dzdj001"
   ELSE
      LET l_searchcol = g_searchcol
   END IF

   LET p_wc = p_wc.trim() #當查詢按下Q時 按下放棄 g_wc = "  " 所以要清掉空白
   IF cl_null(p_wc) THEN  #p_wc 查詢條件
      LET p_wc = " 1=1 " 
   END IF
   
   #add-point:browser_fill段wc控制
   {<point name="browser_fill.wc"/>}
   #end add-point

   LET g_sql = " SELECT COUNT(*) FROM dzdj_t ",
               "  ",
               "  ",
               " WHERE  ", 
               p_wc CLIPPED
                
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt
   FREE header_cnt_pre 
   
   #若超過最大顯示筆數
   IF g_browser_cnt > g_max_browse THEN
      CALL cl_err(g_browser_cnt,'9035',1)
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count
   DISPLAY g_browser_cnt TO FORMONLY.h_count
   
   LET g_wc = p_wc
   #LET g_page_action = ps_page_action          # Keep Action
   
   IF ps_page_action = "F" OR
      ps_page_action = "P"  OR
      ps_page_action = "N"  OR
      ps_page_action = "L"  THEN
      LET g_page_action = ps_page_action
   END IF

   CASE ps_page_action
      
      WHEN "F" 
         LET g_pagestart = 1
      
      WHEN "P"  
         LET g_pagestart = g_pagestart - g_max_browse
         IF g_pagestart < 1 THEN
            LET g_pagestart = 1
         END IF
      
      WHEN "N"  
         LET g_pagestart = g_pagestart + g_max_browse
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
            WHILE g_pagestart > g_browser_cnt 
               LET g_pagestart = g_pagestart - g_max_browse
            END WHILE
         END IF
      
      WHEN "L"  
         LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
         WHILE g_pagestart > g_browser_cnt 
            LET g_pagestart = g_pagestart - g_max_browse
         END WHILE
         
      WHEN '/'
         LET g_pagestart = g_jump
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = 1
            CALL cl_err(g_jump,'azz-998',0)
         END IF
         
      OTHERWISE
         
   END CASE
   
   LET l_sql_rank = "SELECT dzdjstus,dzdj001,dzdj002,dzdj006,dzdj007,RANK() OVER(ORDER BY dzdj001 ",

                    g_order,
                    ") AS RANK ",
                    " FROM dzdj_t ",
                    "  ",
                    "  ",
                    " WHERE  ", g_wc

   #定義翻頁CURSOR
   LET g_sql= " SELECT dzdjstus,dzdj001,dzdj002,dzdj006,dzdj007 FROM (",l_sql_rank,") ",
              "  WHERE RANK >= ", g_pagestart,
              "    AND RANK <  ", (g_pagestart + g_max_browse) , 
              "  ORDER BY ",l_searchcol," ",g_order
              
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre

   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_dzdj001,g_browser[g_cnt].b_dzdj002,g_browser[g_cnt].b_dzdj006,g_browser[g_cnt].b_dzdj007   #單身 ARRAY 填充
      IF SQLCA.sqlcode THEN
         CALL cl_err("foreach:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      
      
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
      
      LET g_browser[g_cnt].b_statepic = cl_get_actipic(g_browser[g_cnt].b_statepic)
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err("Max_Row:"||g_max_rec USING "<<<<<","std-00002",0)
         EXIT FOREACH
      END IF
   END FOREACH

   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
   #該樣板不需此段落LET g_header_cnt = g_browser_cnt
   LET g_rec_b = g_cnt - 1
   LET g_current_cnt = g_rec_b
   #該樣板不需此段落LET g_current_cnt = g_browser_cnt
   LET g_cnt = 0
   
   CALL adzi460_fetch("") 
   
   FREE browse_pre
   
END FUNCTION


 
#+ QBE資料查詢
PRIVATE FUNCTION adzi460_construct()
   {<Local define>}
   DEFINE ls_return      STRING
   DEFINE ls_result      STRING 
   {</Local define>}
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point
   
   CLEAR FORM
   INITIALIZE g_dzdj_m.* TO NULL
   INITIALIZE g_wc TO NULL
   LET g_current_row = 1
 
   LET g_qryparam.state = "c"
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      #螢幕上取條件
      CONSTRUCT BY NAME g_wc ON dzdj001,dzdj002,dzdj003,dzdj006,dzdj007,dzdjstus
      
         BEFORE CONSTRUCT                                    
            CALL cl_qbe_init()    
            #add-point:cs段more_construct
            {<point name="cs.before_construct"/>}
            #end add-point             
      
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生---
         ##----<<dzdj>>----
         ##ON ACTION controlp INFIELD dzdj
         ##   CALL q_common('dzdj_t','dzdj',TRUE,FALSE,g_dzdj_m.dzdj) RETURNING ls_return
         ##   DISPLAY ls_return TO dzdj
         ##   NEXT FIELD dzdj  
         #
         ##----<<dzdj>>----
         ##ON ACTION controlp INFIELD dzdj
         ##   CALL q_common('dzdj_t','dzdj',TRUE,FALSE,g_dzdj_m.dzdj) RETURNING ls_return
         ##   DISPLAY ls_return TO dzdj
         ##   NEXT FIELD dzdj
         #
         ##----<<dzdj>>----
         ##ON ACTION controlp INFIELD dzdj
         ##   CALL q_common('dzdj_t','dzdj',TRUE,FALSE,g_dzdj_m.dzdj) RETURNING ls_return
         ##   DISPLAY ls_return TO dzdj
         ##   NEXT FIELD dzdj
         #
         ##----<<dzdj>>----
         ##ON ACTION controlp INFIELD dzdj
         ##   CALL q_common('dzdj_t','dzdj',TRUE,FALSE,g_dzdj_m.dzdj) RETURNING ls_return
         ##   DISPLAY ls_return TO dzdj
         ##   NEXT FIELD dzdj
         #
         ##----<<dzdj>>----
         ##ON ACTION controlp INFIELD dzdj
         ##   CALL q_common('dzdj_t','dzdj',TRUE,FALSE,g_dzdj_m.dzdj) RETURNING ls_return
         ##   DISPLAY ls_return TO dzdj
         ##   NEXT FIELD dzdj
         #
         ##----<<dzdj>>----
         ##ON ACTION controlp INFIELD dzdj
         ##   CALL q_common('dzdj_t','dzdj',TRUE,FALSE,g_dzdj_m.dzdj) RETURNING ls_return
         ##   DISPLAY ls_return TO dzdj
         ##   NEXT FIELD dzdj
         #
         ##----<<dzdj>>----
         ##ON ACTION controlp INFIELD dzdj
         ##   CALL q_common('dzdj_t','dzdj',TRUE,FALSE,g_dzdj_m.dzdj) RETURNING ls_return
         ##   DISPLAY ls_return TO dzdj
         ##   NEXT FIELD dzdj
         
         ##----<<dzdj>>----
         #AFTER FIELD dzdj
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<dzdj>>----
         #AFTER FIELD dzdj
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<dzdj>>----
         #AFTER FIELD dzdj
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<dzdj>>----
         #AFTER FIELD dzdj
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)


      
         #一般欄位
         #---------------------------<  Master  >---------------------------
         #----<<dzdj001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dzdj001
            #add-point:BEFORE FIELD dzdj001
            {<point name="construct.b.dzdj001" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD dzdj001
            
            #add-point:AFTER FIELD dzdj001
            {<point name="construct.a.dzdj001" />}
            #END add-point
            

         #Ctrlp:construct.c.dzdj001
         ON ACTION controlp INFIELD dzdj001
            #add-point:ON ACTION controlp INFIELD dzdj001
            {<point name="construct.c.dzdj001" />}
            #END add-point

         #----<<dzdj002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dzdj002
            #add-point:BEFORE FIELD dzdj002
            {<point name="construct.b.dzdj002" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD dzdj002
            
            #add-point:AFTER FIELD dzdj002
            {<point name="construct.a.dzdj002" />}
            #END add-point
            

         #Ctrlp:construct.c.dzdj002
         ON ACTION controlp INFIELD dzdj002
            #add-point:ON ACTION controlp INFIELD dzdj002
            {<point name="construct.c.dzdj002" />}
            #END add-point

         #----<<dzdj003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dzdj003
            #add-point:BEFORE FIELD dzdj003
            {<point name="construct.b.dzdj003" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD dzdj003
            
            #add-point:AFTER FIELD dzdj003
            {<point name="construct.a.dzdj003" />}
            #END add-point
            

         #Ctrlp:construct.c.dzdj003
         ON ACTION controlp INFIELD dzdj003
            #add-point:ON ACTION controlp INFIELD dzdj003
            {<point name="construct.c.dzdj003" />}
            #END add-point

         #----<<dzdj006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dzdj006
            #add-point:BEFORE FIELD dzdj006
            {<point name="construct.b.dzdj006" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD dzdj006
            
            #add-point:AFTER FIELD dzdj006
            {<point name="construct.a.dzdj006" />}
            #END add-point
            

         #Ctrlp:construct.c.dzdj006
         ON ACTION controlp INFIELD dzdj006
            #add-point:ON ACTION controlp INFIELD dzdj006
            {<point name="construct.c.dzdj006" />}
            #END add-point

         #----<<dzdj007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dzdj007
            #add-point:BEFORE FIELD dzdj007
            {<point name="construct.b.dzdj007" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD dzdj007
            
            #add-point:AFTER FIELD dzdj007
            {<point name="construct.a.dzdj007" />}
            #END add-point
            

         #Ctrlp:construct.c.dzdj007
         ON ACTION controlp INFIELD dzdj007
            #add-point:ON ACTION controlp INFIELD dzdj007
            {<point name="construct.c.dzdj007" />}
            #END add-point

         #----<<dzdjstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dzdjstus
            #add-point:BEFORE FIELD dzdjstus
            {<point name="construct.b.dzdjstus" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD dzdjstus
            
            #add-point:AFTER FIELD dzdjstus
            {<point name="construct.a.dzdjstus" />}
            #END add-point
            

         #Ctrlp:construct.c.dzdjstus
         ON ACTION controlp INFIELD dzdjstus
            #add-point:ON ACTION controlp INFIELD dzdjstus
            {<point name="construct.c.dzdjstus" />}
            #END add-point


           
      END CONSTRUCT
  
      ON ACTION accept
         EXIT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
  
      #add-point:cs段more_construct
      {<point name="cs.more_construct"/>}
      #end add-point 
 
      #查詢CONSTRUCT共用ACTION
      &include "construct_action.4gl"
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
  
   #LET g_wc = g_wc CLIPPED,cl_get_extra_cond("", "")
 
END FUNCTION
 
 
#+ filter過濾功能
PRIVATE FUNCTION adzi460_filter()
   {<Local define>}
   {</Local define>}
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point    
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON dzdj001,dzdj002,dzdj006,dzdj007
                          FROM s_browse[1].b_dzdj001,s_browse[1].b_dzdj002,s_browse[1].b_dzdj006,s_browse[1].b_dzdj007
 
         BEFORE CONSTRUCT
            CALL cl_qbe_init()
               DISPLAY adzi460_filter_parser('dzdj001') TO s_browse[1].b_dzdj001
            DISPLAY adzi460_filter_parser('dzdj002') TO s_browse[1].b_dzdj002
            DISPLAY adzi460_filter_parser('dzdj006') TO s_browse[1].b_dzdj006
            DISPLAY adzi460_filter_parser('dzdj007') TO s_browse[1].b_dzdj007
 
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
 
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
END FUNCTION
 
#+ filter過濾功能
PRIVATE FUNCTION adzi460_filter_parser(ps_field)
   {<Local define>}
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   {</Local define>}
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
 
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION adzi460_query()
   {<Local define>}
   DEFINE ls_wc STRING
   {</Local define>}
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point
   
   LET INT_FLAG = 0
   LET ls_wc = g_wc
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL g_browser.clear() 
 
   IF g_worksheet_hidden THEN  #browser panel 單身折疊
      CALL gfrm_curr.setElementHidden("worksheet_vbox",0)
      CALL gfrm_curr.setElementImage("worksheethidden","worksheethidden-24.png")
      LET g_worksheet_hidden = 0
   END IF
   IF g_header_hidden THEN    #單頭折疊
      CALL gfrm_curr.setElementHidden("worksheet_detail",0)
      CALL gfrm_curr.setElementImage("controls","headerhidden-24")
      LET g_header_hidden = 0
   END IF
 
   INITIALIZE g_dzdj_m.* TO NULL
   ERROR ""
 
   DISPLAY " " TO FORMONLY.b_count
   DISPLAY " " TO FORMONLY.h_count
   CALL adzi460_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL adzi460_browser_fill(g_wc,"F")
      CALL adzi460_fetch("")
      RETURN
   ELSE
      LET g_current_row = 1
      LET g_current_cnt = 0
   END IF
   
   CALL adzi460_browser_fill(g_wc,"F")   # 移到第一頁
   
   #備份搜尋條件
   LET ls_wc = g_wc
   
   #第一層模糊搜尋
   IF g_browser.getLength() = 0 THEN
      LET g_wc = cl_wc_parser(ls_wc)
      CALL adzi460_browser_fill(g_wc,"F")
   END IF
   
   #第二層助記碼搜尋
   IF g_browser.getLength() = 0 THEN
 
      
      
      IF NOT cl_null(g_wc) THEN
         CALL adzi460_browser_fill(g_wc,"F")
      END IF
      
   END IF
   
   IF g_browser.getLength() = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL adzi460_fetch("F") 
   END IF
   
   LET g_wc_filter = ""
   
END FUNCTION
 
 
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION adzi460_fetch(p_fl)
 
   {<Local define>}
   DEFINE p_fl       LIKE type_t.chr1
   DEFINE ls_msg     STRING
   {</Local define>}
 
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point  
   
   CASE p_fl
      WHEN "F" LET g_current_idx = 1
      WHEN "P"
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN "N"
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN "L" 
         LET g_current_idx = g_header_cnt        
      WHEN "/"
         IF (NOT g_no_ask) THEN      
            CALL cl_getmsg("fetch", g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,": " FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl"
            END PROMPT
            
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF           
         END IF
         IF g_jump > 0 THEN
            LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE     
   END CASE
 
   #該樣板不需此段落IF g_browser[g_current_idx].b_expcode <> "1" THEN
   #該樣板不需此段落   INITIALIZE g_dzdj_m.* TO NULL
   #該樣板不需此段落   DISPLAY BY NAME g_dzdj_m.*
   #該樣板不需此段落   CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   #該樣板不需此段落   RETURN
   #該樣板不需此段落ELSE
   #該樣板不需此段落   CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   #該樣板不需此段落END IF
   
   #該樣板不需此段落CALL adzi460_browser_fill(g_wc,p_fl)
   
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   # 設定browse索引
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx)
 
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index        #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count        #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index        #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count        #總筆數
   
   #單頭筆數顯示
   #DISPLAY g_browser_idx TO FORMONLY.idx            #當下筆數
   #DISPLAY g_browser_cnt TO FORMONLY.cnt            #總筆數
   
   CALL cl_navigator_setting(g_browser_idx, g_current_cnt) 
   #該樣板不需此段落CALL cl_navigator_setting(g_browser_idx, g_browser_cnt )
 
   #代表沒有資料, 無需做後續資料撈取之動作
   IF g_current_idx = 0 THEN
      RETURN
   END IF
 
   LET g_dzdj_m.dzdj001 = g_browser[g_current_idx].b_dzdj001

                       
   #重讀DB,因TEMP有不被更新特性
    SELECT UNIQUE dzdj001,dzdj002,dzdj003,dzdj006,dzdj007,dzdjstus
 INTO g_dzdj_m.dzdj001,g_dzdj_m.dzdj002,g_dzdj_m.dzdj003,g_dzdj_m.dzdj006,g_dzdj_m.dzdj007,g_dzdj_m.dzdjstus
 FROM dzdj_t
 WHERE dzdj001 = g_dzdj_m.dzdj001
   IF SQLCA.sqlcode THEN
      CALL cl_err("dzdj_t",SQLCA.sqlcode,0)
      INITIALIZE g_dzdj_m.* TO NULL
      RETURN
   END IF
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #重新顯示
   CALL adzi460_show()
 
END FUNCTION
 
 
#+ 資料新增
PRIVATE FUNCTION adzi460_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   CLEAR FORM                    #清畫面欄位內容
 
   INITIALIZE g_dzdj_m.* LIKE dzdj_t.*             #DEFAULT 設定
 
   CALL s_transaction_begin()
   
   WHILE TRUE
      #六階樹狀給值
      #該樣板不需此段落LET  = g_browser[g_current_idx].b_dzdj001
      #該樣板不需此段落#LET  = g_browser[g_current_idx].b_
      #該樣板不需此段落#LET  = g_browser[g_current_idx].b_
      #該樣板不需此段落#LET  = g_browser[g_current_idx].b_
      #該樣板不需此段落#LET  = g_browser[g_current_idx].b_
      #該樣板不需此段落#LET  = g_browser[g_current_idx].b_
      
      #公用欄位給值
      #此段落由子樣板a14產生    
      #LET g_dzdj_m.dzdj = g_user
      #LET g_dzdj_m.dzdj = g_dept
      #LET g_dzdj_m.dzdj = g_user
      #LET g_dzdj_m.dzdj = g_dept 
      #LET g_dzdj_m.dzdj = cl_get_current()
      ##LET g_dzdj_m.dzdj = g_user
      ##LET g_dzdj_m.dzdj = cl_get_current()
      #LET g_dzdj_m.dzdjstus = "Y"


 
      #append欄位給值
      
     
      #一般欄位給值
      
 
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point   
     
      CALL adzi460_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_dzdj_m.* = g_dzdj_m_t.*
         CALL adzi460_show()
         CALL cl_err("",9001,0)
         EXIT WHILE
      END IF
 
      LET g_rec_b = 0
      EXIT WHILE
   END WHILE
   
   LET g_state = "Y"
   
   #該樣板不需此段落LET  = g_browser[g_current_idx].b_
   #該樣板不需此段落#LET  = g_browser[g_current_idx].b_
   #該樣板不需此段落#LET  = g_browser[g_current_idx].b_
   #該樣板不需此段落#LET  = g_browser[g_current_idx].b_
   #該樣板不需此段落#LET  = g_browser[g_current_idx].b_
   #該樣板不需此段落#LET  = g_browser[g_current_idx].b_
   
   LET g_wc = g_wc,  
              " OR ( ",
              " dzdj001 = '", g_dzdj_m.dzdj001 CLIPPED, "' "

              , ") "
 
END FUNCTION
 
 
#+ 資料修改
PRIVATE FUNCTION adzi460_modify()
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point
   
   IF g_dzdj_m.dzdj001 IS NULL

   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF 
   
    SELECT UNIQUE dzdj001,dzdj002,dzdj003,dzdj006,dzdj007,dzdjstus
 INTO g_dzdj_m.dzdj001,g_dzdj_m.dzdj002,g_dzdj_m.dzdj003,g_dzdj_m.dzdj006,g_dzdj_m.dzdj007,g_dzdj_m.dzdjstus
 FROM dzdj_t
 WHERE dzdj001 = g_dzdj_m.dzdj001
 
   ERROR ""
  
   LET g_dzdj001_t = g_dzdj_m.dzdj001

   
   CALL s_transaction_begin()
   
   OPEN adzi460_cl USING g_dzdj_m.dzdj001
   IF STATUS THEN
      CALL cl_err("OPEN adzi460_cl:", STATUS, 1)
      CLOSE adzi460_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH adzi460_cl INTO g_dzdj_m.dzdj001,g_dzdj_m.dzdj002,g_dzdj_m.dzdj003,g_dzdj_m.dzdj006,g_dzdj_m.dzdj007,g_dzdj_m.dzdjstus
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err("dzdj_t",SQLCA.sqlcode,0)
      CLOSE adzi460_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
 
   CALL adzi460_show()
   
   WHILE TRUE
      LET g_dzdj_m.dzdj001 = g_dzdj001_t

      
      #寫入修改者/修改日期資訊
      #LET g_dzdj_m.dzdj = g_user 
#LET g_dzdj_m.dzdj = cl_get_current()

      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
 
      CALL adzi460_input("u")     #欄位更改
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_dzdj_m.* = g_dzdj_m_t.*
         CALL adzi460_show()
         CALL cl_err("",9001,0)
         EXIT WHILE
      END IF
 
      EXIT WHILE
      
   END WHILE
 
   #修改歷程記錄
   IF NOT cl_used_modified_record(g_dzdj_m.dzdj001,g_site) THEN 
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE adzi460_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_dzdj_m.dzdj001,"U")
   
   LET g_worksheet_hidden = 0
   
END FUNCTION   
 
 
#+ 資料輸入
PRIVATE FUNCTION adzi460_input(p_cmd)
   {<Local define>}
   DEFINE p_cmd           LIKE type_t.chr1
   DEFINE l_ac_t          LIKE type_t.num5        #未取消的ARRAY CNT 
   DEFINE l_n             LIKE type_t.num5        #檢查重複用  
   DEFINE l_cnt           LIKE type_t.num5        #檢查重複用  
   DEFINE l_lock_sw       LIKE type_t.chr1        #單身鎖住否  
   DEFINE l_allow_insert  LIKE type_t.num5        #可新增否 
   DEFINE l_allow_delete  LIKE type_t.num5        #可刪除否  
   DEFINE l_count         LIKE type_t.num5
   DEFINE l_i             LIKE type_t.num5
   DEFINE l_insert        LIKE type_t.num5
   DEFINE ls_return       STRING
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   LET g_qryparam.state = "i"
   
   #控制key欄位可否輸入
   CALL adzi460_set_entry(p_cmd)
   CALL adzi460_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_dzdj_m.dzdj001,g_dzdj_m.dzdj002,g_dzdj_m.dzdj003,g_dzdj_m.dzdj006,g_dzdj_m.dzdj007,g_dzdj_m.dzdjstus
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      #單頭段
      INPUT BY NAME g_dzdj_m.dzdj001,g_dzdj_m.dzdj002,g_dzdj_m.dzdj003,g_dzdj_m.dzdj006,g_dzdj_m.dzdj007,g_dzdj_m.dzdjstus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         
         BEFORE INPUT
            #其他table資料備份(確定是否更改用)
            
          
         #---------------------------<  Master  >---------------------------
         #----<<dzdj001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dzdj001
            #add-point:BEFORE FIELD dzdj001
            {<point name="input.b.dzdj001" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD dzdj001
            
            #add-point:AFTER FIELD dzdj001
            {<point name="input.a.dzdj001" />}
            #END add-point
            

         #此段落由子樣板a04產生
         ON CHANGE dzdj001
            #add-point:ON CHANGE dzdj001
            {<point name="input.g.dzdj001" />}
            #END add-point

         #----<<dzdj002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dzdj002
            #add-point:BEFORE FIELD dzdj002
            {<point name="input.b.dzdj002" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD dzdj002
            
            #add-point:AFTER FIELD dzdj002
            {<point name="input.a.dzdj002" />}
            #END add-point
            

         #此段落由子樣板a04產生
         ON CHANGE dzdj002
            #add-point:ON CHANGE dzdj002
            {<point name="input.g.dzdj002" />}
            #END add-point

         #----<<dzdj003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dzdj003
            #add-point:BEFORE FIELD dzdj003
            {<point name="input.b.dzdj003" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD dzdj003
            
            #add-point:AFTER FIELD dzdj003
            {<point name="input.a.dzdj003" />}
            #END add-point
            

         #此段落由子樣板a04產生
         ON CHANGE dzdj003
            #add-point:ON CHANGE dzdj003
            {<point name="input.g.dzdj003" />}
            #END add-point

         #----<<dzdj006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dzdj006
            #add-point:BEFORE FIELD dzdj006
            {<point name="input.b.dzdj006" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD dzdj006
            
            #add-point:AFTER FIELD dzdj006
            {<point name="input.a.dzdj006" />}
            #END add-point
            

         #此段落由子樣板a04產生
         ON CHANGE dzdj006
            #add-point:ON CHANGE dzdj006
            {<point name="input.g.dzdj006" />}
            #END add-point

         #----<<dzdj007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dzdj007
            #add-point:BEFORE FIELD dzdj007
            {<point name="input.b.dzdj007" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD dzdj007
            
            #add-point:AFTER FIELD dzdj007
            {<point name="input.a.dzdj007" />}
            #END add-point
            

         #此段落由子樣板a04產生
         ON CHANGE dzdj007
            #add-point:ON CHANGE dzdj007
            {<point name="input.g.dzdj007" />}
            #END add-point

         #----<<dzdjstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dzdjstus
            #add-point:BEFORE FIELD dzdjstus
            {<point name="input.b.dzdjstus" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD dzdjstus
            
            #add-point:AFTER FIELD dzdjstus
            {<point name="input.a.dzdjstus" />}
            #END add-point
            

         #此段落由子樣板a04產生
         ON CHANGE dzdjstus
            #add-point:ON CHANGE dzdjstus
            {<point name="input.g.dzdjstus" />}
            #END add-point

 #欄位檢查
         #---------------------------<  Master  >---------------------------
         #----<<dzdj001>>----
         #Ctrlp:input.c.dzdj001
         ON ACTION controlp INFIELD dzdj001
            #add-point:ON ACTION controlp INFIELD dzdj001
            {<point name="input.c.dzdj001" />}
            #END add-point

         #----<<dzdj002>>----
         #Ctrlp:input.c.dzdj002
         ON ACTION controlp INFIELD dzdj002
            #add-point:ON ACTION controlp INFIELD dzdj002
            {<point name="input.c.dzdj002" />}
            #END add-point

         #----<<dzdj003>>----
         #Ctrlp:input.c.dzdj003
         ON ACTION controlp INFIELD dzdj003
            #add-point:ON ACTION controlp INFIELD dzdj003
            {<point name="input.c.dzdj003" />}
            #END add-point

         #----<<dzdj006>>----
         #Ctrlp:input.c.dzdj006
         ON ACTION controlp INFIELD dzdj006
            #add-point:ON ACTION controlp INFIELD dzdj006
            {<point name="input.c.dzdj006" />}
            #END add-point

         #----<<dzdj007>>----
         #Ctrlp:input.c.dzdj007
         ON ACTION controlp INFIELD dzdj007
            #add-point:ON ACTION controlp INFIELD dzdj007
            {<point name="input.c.dzdj007" />}
            #END add-point

         #----<<dzdjstus>>----
         #Ctrlp:input.c.dzdjstus
         ON ACTION controlp INFIELD dzdjstus
            #add-point:ON ACTION controlp INFIELD dzdjstus
            {<point name="input.c.dzdjstus" />}
            #END add-point

 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
                
            CALL cl_showmsg()   #錯誤訊息統整顯示
 
            IF p_cmd <> "u" THEN
               LET l_count = 1  
 
               SELECT COUNT(*) INTO l_count FROM dzdj_t
                WHERE  dzdj001 = g_dzdj_m.dzdj001

               IF l_count = 0 THEN
               
                  #add-point:單頭新增前
                  {<point name="input.head.b_insert" mark="Y"/>}
                  #end add-point
               
                  INSERT INTO dzdj_t (dzdj001,dzdj002,dzdj003,dzdj006,dzdj007,dzdjstus)
                  VALUES (g_dzdj_m.dzdj001,g_dzdj_m.dzdj002,g_dzdj_m.dzdj003,g_dzdj_m.dzdj006,g_dzdj_m.dzdj007,g_dzdj_m.dzdjstus) # DISK WRITE
                  
                  #add-point:單頭新增中
                  {<point name="input.head.m_insert"/>}
                  #end add-point
                  
                  IF SQLCA.sqlcode THEN
                     CALL cl_err("dzdj_t",SQLCA.sqlcode,1)  
                     CONTINUE DIALOG
                  END IF
                  
                  
                  
                  #資料多語言用-增/改
                  
                  
                  #add-point:單頭新增後
                  {<point name="input.head.a_insert"/>}
                  #end add-point
                  
                  CALL s_transaction_end('Y','0')
               ELSE
                  CALL cl_err( "g_dzdj_m.dzdj001", "std-00006", 0 )
                  CALL s_transaction_end('N','0')
               END IF 
            ELSE
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               UPDATE dzdj_t SET (dzdj001,dzdj002,dzdj003,dzdj006,dzdj007,dzdjstus) = (g_dzdj_m.dzdj001,g_dzdj_m.dzdj002,g_dzdj_m.dzdj003,g_dzdj_m.dzdj006,g_dzdj_m.dzdj007,g_dzdj_m.dzdjstus)
                WHERE  dzdj001 = g_dzdj001_t #

               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               IF SQLCA.sqlcode THEN
                  CALL cl_err("dzdj_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
               ELSE
               
                  
                  
                  #資料多語言用-增/改
                  
                  
                  #add-point:單頭修改後
                  {<point name="input.head.a_update"/>}
                  #end add-point
                  
                  CALL s_transaction_end('Y','0')
               END IF
            END IF
           #controlp
      END INPUT
          
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name, g_fld_name, g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         CALL cl_set_head_visible("","AUTO")
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET g_action_choice="exit"
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET g_action_choice="exit"
         EXIT DIALOG
   
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
 
#+ 資料複製
PRIVATE FUNCTION adzi460_reproduce()
   {<Local define>}
   DEFINE l_newno     LIKE dzdj_t.dzdj001 
   DEFINE l_oldno     LIKE dzdj_t.dzdj001 

   DEFINE l_master    RECORD LIKE dzdj_t.*
   DEFINE l_cnt       LIKE type_t.num5
   {</Local define>}
 
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_dzdj_m.dzdj001 IS NULL

   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   LET g_dzdj001_t = g_dzdj_m.dzdj001

    
   CALL adzi460_set_entry("a")
   CALL adzi460_set_no_entry("a")
 
   
   
   INPUT l_newno       # FROM 

   FROM dzdj001

        
      #add-point:複製段落開窗/欄位控管/自定義action
      {<point name="reproduce.action" />}
      #end add-point
        
      BEFORE INPUT
         #add-point:複製段落Before input
         {<point name="reproduce.before_input" />}
         #end add-point
      
      AFTER FIELD dzdj001
         IF l_newno IS NULL THEN
            NEXT FIELD CURRENT
         END IF
         #add-point:AFTER FIELD dzdj001
         {<point name="reproduce.a.dzdj001" />}
         #end add-point
         

 
      AFTER INPUT
         #若取消則直接結束
         IF INT_FLAG = 1 THEN
            LET INT_FLAG = 0
            RETURN
         END IF
      
         #確定該key值是否有重複定義
         IF g_dzdj_m.dzdj001 IS NULL  

         THEN
            NEXT FIELD dzdj001                                  
         END IF
         LET l_cnt = 0
         SELECT COUNT(*) INTO l_cnt FROM dzdj_t 
          WHERE  dzdj001 = l_newno

         IF l_cnt > 0 THEN
            CALL cl_err("Reproduce","std-00006",1) 
            NEXT FIELD dzdj001 
         END IF
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE INPUT
   END INPUT 
   
   IF INT_FLAG OR l_newno IS NULL THEN
      LET INT_FLAG = 0
      RETURN
   END IF
   
   CALL s_transaction_begin()
 
   SELECT * INTO l_master.* FROM dzdj_t 
    WHERE  dzdj001 = g_dzdj_m.dzdj001

   LET l_master.dzdj001 = l_newno

   
   #公用欄位給予預設值
   #此段落由子樣板a13產生
      #LET l_master.dzdj = g_user
      #LET l_master.dzdj = g_dept
      #LET l_master.dzdj = g_user
      #LET l_master.dzdj = g_dept 
      #LET l_master.dzdj = cl_get_current()
      ##LET l_master.dzdj = g_user
      ##LET l_master.dzdj = cl_get_current()
      #LET l_master.dzdjstus = "Y"


   
   #add-point:單頭複製前
   {<point name="reproduce.head.b_insert" mark="Y"/>}
   #end add-point
   
   INSERT INTO dzdj_t VALUES (l_master.*) #複製單頭  
   
   #add-point:單頭複製中
   {<point name="reproduce.head.m_insert"/>}
   #end add-point
   
   IF SQLCA.sqlcode THEN
      CALL s_transaction_end('N','0')
      CALL cl_err("dzdj_t",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單頭複製後
   {<point name="reproduce.head.a_insert"/>}
   #end add-point
   
   
   
   CALL s_transaction_end('Y','0')
   ERROR "ROW(",l_newno,") O.K"
   
   LET g_state = "Y"
   
   LET g_wc = g_wc,  
              " OR (",
              " dzdj001 = '", l_newno CLIPPED, "' "

              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
                   
END FUNCTION
 
 
#+ 單頭資料重新顯示 
PRIVATE FUNCTION adzi460_show()
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_dzdj_m_t.* = g_dzdj_m.*      #保存單頭舊值
   
   #在browser 移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()
   
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      ##LET g_dzdj_m.dzdj_desc = cl_get_username(g_dzdj_m.dzdj)
      ##LET g_dzdj_m.dzdj_desc = cl_get_deptname(g_dzdj_m.dzdj)
      ##LET g_dzdj_m.dzdj_desc = cl_get_username(g_dzdj_m.dzdj)
      ##LET g_dzdj_m.dzdj_desc = cl_get_deptname(g_dzdj_m.dzdj)
      ##LET g_dzdj_m.dzdj_desc = cl_get_username(g_dzdj_m.dzdj)
      ##LET g_dzdj_m.dzdj_desc = cl_get_deptname(g_dzdj_m.dzdj)
      ##LET g_dzdj_m.dzdj_desc = cl_get_deptname(g_dzdj_m.dzdj)
      


   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
 
   #將資料輸出到畫面上
   DISPLAY BY NAME g_dzdj_m.dzdj001,g_dzdj_m.dzdj002,g_dzdj_m.dzdj003,g_dzdj_m.dzdj006,g_dzdj_m.dzdj007,g_dzdj_m.dzdjstus
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_dzdj_m.dzdjstus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")

         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirm.png")


      END CASE


 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
 
END FUNCTION
 
 
#+ 資料刪除 
PRIVATE FUNCTION adzi460_delete()
   {<Local define>}
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point  
   
   IF g_dzdj_m.dzdj001 IS NULL

   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   CALL s_transaction_begin()
    
   LET g_dzdj001_t = g_dzdj_m.dzdj001

   
   
 
   OPEN adzi460_cl USING 
                           g_dzdj_m.dzdj001

   IF STATUS THEN
      CALL cl_err("OPEN adzi460_cl:", STATUS, 0)
      CLOSE adzi460_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   FETCH adzi460_cl INTO g_dzdj_m.dzdj001,g_dzdj_m.dzdj002,g_dzdj_m.dzdj003,g_dzdj_m.dzdj006,g_dzdj_m.dzdj007,g_dzdj_m.dzdjstus
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_dzdj_m.dzdj001,SQLCA.sqlcode,0)
      RETURN
   END IF
 
   CALL adzi460_show()
   IF cl_ask_delete() THEN
      INITIALIZE g_doc.* TO NULL
      LET g_doc.column1 = "dzdj001"
      LET g_doc.value1 = g_dzdj_m.dzdj001
      CALL cl_del_doc()
 
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point
 
      DELETE FROM dzdj_t 
       WHERE  dzdj001 = g_dzdj_m.dzdj001 

 
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("dzdj_t",SQLCA.sqlcode,0)
         CALL s_transaction_end('N','0')
      END IF
  
      
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
      
          
      
      CLEAR FORM
      CALL adzi460_ui_browser_refresh()
      IF g_browser_cnt > 0 THEN
         CALL adzi460_fetch("P")
      ELSE
         CALL adzi460_browser_fill(" 1=1 ","F")
      END IF
      
   END IF
 
   CLOSE adzi460_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_dzdj_m.dzdj001,"D")
 
END FUNCTION
 
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION adzi460_ui_browser_refresh()
   {<Local define>}
   DEFINE l_i  LIKE type_t.num10
   {</Local define>}
 
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point     
 
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_dzdj001 = g_dzdj_m.dzdj001 THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
       END IF
   END FOR
   
   DISPLAY g_header_cnt TO FORMONLY.b_count     #page count
   DISPLAY g_header_cnt TO FORMONLY.h_count     #page count
   LET g_browser_cnt = g_browser_cnt-1
   IF g_current_idx > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_idx = g_browser_cnt
   END IF
  
END FUNCTION
 
#+ 單頭欄位開啟設定
PRIVATE FUNCTION adzi460_set_entry(p_cmd)
 
   {<Local define>}
   DEFINE p_cmd LIKE type_t.chr1
   {</Local define>}
 
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point     
 
   IF p_cmd = "a" THEN
      CALL cl_set_comp_entry("dzdj001",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
 
 
#+ 單頭欄位關閉設定
PRIVATE FUNCTION adzi460_set_no_entry(p_cmd)
 
   {<Local define>}
   DEFINE p_cmd LIKE type_t.chr1
   {</Local define>}
 
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = "u" THEN
      CALL cl_set_comp_entry("dzdj001",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
 
#+ 外部參數搜尋, 施工中
PRIVATE FUNCTION adzi460_default_search()
   {<Local define>}
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   {</Local define>}
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " dzdj001 = '", g_argv[1], "' AND "
   END IF
   

   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
   ELSE
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
 
   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION adzi460_statechange()
   {<Local define>}
   DEFINE lc_state LIKE type_t.chr5
   {</Local define>}
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊

   IF g_dzdj_m.dzdj001 IS NULL

   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF

   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         CASE g_dzdj_m.dzdjstus
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "X"
               HIDE OPTION "void"

            WHEN "Y"
               HIDE OPTION "confirm"


         END CASE
         
      ON ACTION unconfirmed
         LET lc_state = "N"
         EXIT MENU
      ON ACTION void
         LET lc_state = "X"
         EXIT MENU

      ON ACTION confirm
         LET lc_state = "Y"
         EXIT MENU


   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "X"

      AND lc_state <> "Y"


      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE dzdj_t SET dzdjstus = lc_state 
    WHERE  dzdj001 = g_dzdj_m.dzdj001

  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")

         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirm.png")


      END CASE
   END IF

   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point

   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  

END FUNCTION


 
{<point name="other.function"/>}
 

