{<section id="adzi400.description" >}
#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000017
#+ 
#+ Filename...: adzi400
#+ Description: 
#+ Creator....: ()
#+ Modifier...: () -SD/PR-

{</section>}

{<section id="adzi400.global" >}
#應用 t01 樣板自動產生(Version:17)
{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_dzda_m        RECORD
       dzda001 LIKE dzda_t.dzda001, 
   dzda003 LIKE dzda_t.dzda003, 
   dzda002 LIKE dzda_t.dzda002, 
   dzda005 LIKE dzda_t.dzda005, 
   dzda006 LIKE dzda_t.dzda006, 
   dzda007 LIKE dzda_t.dzda007, 
   dzda008 LIKE dzda_t.dzda008, 
   dzda009 LIKE dzda_t.dzda009, 
   dzda010 LIKE dzda_t.dzda010, 
   dzdastus LIKE dzda_t.dzdastus, 
   dzdaownid LIKE dzda_t.dzdaownid, 
   dzdaownid_desc LIKE type_t.chr80, 
   dzdaowndp LIKE dzda_t.dzdaowndp, 
   dzdaowndp_desc LIKE type_t.chr80, 
   dzdacrtid LIKE dzda_t.dzdacrtid, 
   dzdacrtid_desc LIKE type_t.chr80, 
   dzdacrtdp LIKE dzda_t.dzdacrtdp, 
   dzdacrtdp_desc LIKE type_t.chr80, 
   dzdacrtdt LIKE dzda_t.dzdacrtdt, 
   dzdamodid LIKE dzda_t.dzdamodid, 
   dzdamodid_desc LIKE type_t.chr80, 
   dzdamoddt LIKE dzda_t.dzdamoddt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_dzdb_d        RECORD
       dzdb002 LIKE dzdb_t.dzdb002, 
   dzdb003 LIKE dzdb_t.dzdb003, 
   dzdb005 LIKE dzdb_t.dzdb005, 
   dzdbownid LIKE dzdb_t.dzdbownid, 
   dzdbownid_desc LIKE type_t.chr80, 
   dzdb007 LIKE dzdb_t.dzdb007
       END RECORD
PRIVATE TYPE type_g_dzdb2_d RECORD
       dzdb002 LIKE dzdb_t.dzdb002, 
   dzdb003 LIKE dzdb_t.dzdb003, 
   dzdb004 LIKE dzdb_t.dzdb004, 
   dzdb006 LIKE dzdb_t.dzdb006, 
   dzdbowndp LIKE dzdb_t.dzdbowndp, 
   dzdbowndp_desc LIKE type_t.chr80
       END RECORD
PRIVATE TYPE type_g_dzdb3_d RECORD
       dzdc002 LIKE dzdc_t.dzdc002, 
   dzdc003 LIKE dzdc_t.dzdc003
       END RECORD
PRIVATE TYPE type_g_dzdb4_d RECORD
       dzdd002 LIKE dzdd_t.dzdd002, 
   dzdd004 LIKE dzdd_t.dzdd004, 
   dzdd005 LIKE dzdd_t.dzdd005
       END RECORD
PRIVATE TYPE type_g_dzdb5_d RECORD
       dzdh001 LIKE dzdh_t.dzdh001, 
   dzdhownid LIKE dzdh_t.dzdhownid, 
   dzdhownid_desc LIKE type_t.chr80, 
   dzdh002 LIKE dzdh_t.dzdh002, 
   dzdhowndp LIKE dzdh_t.dzdhowndp, 
   dzdhowndp_desc LIKE type_t.chr80
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_dzda_m          type_g_dzda_m
DEFINE g_dzda_m_t        type_g_dzda_m
DEFINE g_dzda_m_o        type_g_dzda_m
 
   DEFINE g_dzda001_t LIKE dzda_t.dzda001
 
 
DEFINE g_dzdb_d          DYNAMIC ARRAY OF type_g_dzdb_d
DEFINE g_dzdb_d_t        type_g_dzdb_d
DEFINE g_dzdb_d_o        type_g_dzdb_d
DEFINE g_dzdb2_d   DYNAMIC ARRAY OF type_g_dzdb2_d
DEFINE g_dzdb2_d_t type_g_dzdb2_d
DEFINE g_dzdb2_d_o type_g_dzdb2_d
DEFINE g_dzdb3_d   DYNAMIC ARRAY OF type_g_dzdb3_d
DEFINE g_dzdb3_d_t type_g_dzdb3_d
DEFINE g_dzdb3_d_o type_g_dzdb3_d
DEFINE g_dzdb4_d   DYNAMIC ARRAY OF type_g_dzdb4_d
DEFINE g_dzdb4_d_t type_g_dzdb4_d
DEFINE g_dzdb4_d_o type_g_dzdb4_d
DEFINE g_dzdb5_d   DYNAMIC ARRAY OF type_g_dzdb5_d
DEFINE g_dzdb5_d_t type_g_dzdb5_d
DEFINE g_dzdb5_d_o type_g_dzdb5_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_dzda001 LIKE dzda_t.dzda001,
      b_dzda003 LIKE dzda_t.dzda003,
   b_dzdadept LIKE type_t.chr80
      END RECORD 
      
DEFINE g_browser_f  RECORD #資料瀏覽之欄位 
       b_statepic     LIKE type_t.chr50,
          b_dzda001 LIKE dzda_t.dzda001,
      b_dzda003 LIKE dzda_t.dzda003,
   b_dzdadept LIKE type_t.chr80
      END RECORD 
      
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
DEFINE g_wc2_table4   STRING
 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point

{</section>}

{<section id="adzi400.main" >}
#應用 a26 樣板自動產生(Version:3)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("adz","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT dzda001,dzda003,dzda002,dzda005,dzda006,dzda007,dzda008,dzda009,dzda010, 
       dzdastus,dzdaownid,'',dzdaowndp,'',dzdacrtid,'',dzdacrtdp,'',dzdacrtdt,dzdamodid,'',dzdamoddt", 
        
                      " FROM dzda_t",
                      " WHERE dzda001=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE adzi400_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.dzda001,t0.dzda003,t0.dzda002,t0.dzda005,t0.dzda006,t0.dzda007,t0.dzda008, 
       t0.dzda009,t0.dzda010,t0.dzdastus,t0.dzdaownid,t0.dzdaowndp,t0.dzdacrtid,t0.dzdacrtdp,t0.dzdacrtdt, 
       t0.dzdamodid,t0.dzdamoddt,t1.oofa011 ,t2.ooeal003 ,t3.oofa011 ,t4.ooeal003 ,t5.oofa011",
               " FROM dzda_t t0",
                              " LEFT JOIN oofa_t t1 ON t1.oofaent='"||g_enterprise||"' AND t1.oofa002='2' AND t1.oofa003=t0.dzdaownid  ",
               " LEFT JOIN ooeal_t t2 ON t2.ooealent='"||g_enterprise||"' AND t2.ooeal001=t0.dzdaowndp AND t2.ooeal002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t3 ON t3.oofaent='"||g_enterprise||"' AND t3.oofa002='2' AND t3.oofa003=t0.dzdacrtid  ",
               " LEFT JOIN ooeal_t t4 ON t4.ooealent='"||g_enterprise||"' AND t4.ooeal001=t0.dzdacrtdp AND t4.ooeal002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t5 ON t5.oofaent='"||g_enterprise||"' AND t5.oofa002='2' AND t5.oofa003=t0.dzdamodid  ",
 
               " WHERE  t0.dzda001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE adzi400_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_adzi400 WITH FORM cl_ap_formpath("adz",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL adzi400_init()   
 
      #進入選單 Menu (="N")
      CALL adzi400_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_adzi400
      
   END IF 
   
   CLOSE adzi400_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 

{</section>}

{<section id="adzi400.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION adzi400_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point    
   #add-point:init段define
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('dzdastus','0','')
 
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL adzi400_default_search()
    
END FUNCTION

{</section>}

{<section id="adzi400.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION adzi400_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:2)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL adzi400_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL adzi400_fetch('') # reload data
               LET l_ac = 1
               CALL adzi400_ui_detailshow() #Setting the current row 
         
               CALL adzi400_idx_chk()
               #NEXT FIELD dzdb002
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_dzdb_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL adzi400_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL adzi400_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_dzdb2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL adzi400_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL adzi400_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_dzdb3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL adzi400_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               
               #add-point:page3, before row動作
               {<point name="ui_dialog.body3.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               #顯示單身筆數
               CALL adzi400_idx_chk()
               #add-point:page3自定義行為
               {<point name="ui_dialog.body3.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為
            {<point name="ui_dialog.body3.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_dzdb4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL adzi400_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_detail_idx = l_ac
               
               #add-point:page4, before row動作
               {<point name="ui_dialog.body4.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_current_page = 4
               #顯示單身筆數
               CALL adzi400_idx_chk()
               #add-point:page4自定義行為
               {<point name="ui_dialog.body4.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_4)
            
         
            #add-point:page4自定義行為
            {<point name="ui_dialog.body4.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_dzdb5_d TO s_detail5.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL adzi400_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               LET g_detail_idx = l_ac
               
               #add-point:page5, before row動作
               {<point name="ui_dialog.body5.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               LET g_current_page = 5
               #顯示單身筆數
               CALL adzi400_idx_chk()
               #add-point:page5自定義行為
               {<point name="ui_dialog.body5.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_5)
            
         
            #add-point:page5自定義行為
            {<point name="ui_dialog.body5.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL adzi400_browser_fill("")
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL adzi400_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL adzi400_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL adzi400_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL adzi400_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL adzi400_set_act_visible()   
            CALL adzi400_set_act_no_visible()
            IF NOT (g_dzda_m.dzda001 IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " ",
                                  " dzda001 = '", g_dzda_m.dzda001, "' "
 
               #填到對應位置
               CALL adzi400_browser_fill("")
            END IF
         
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL adzi400_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL adzi400_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = "-100" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CLEAR FORM
               ELSE
                  CALL adzi400_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:2)
            #過濾瀏覽頁資料
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL adzi400_filter()
               EXIT DIALOG
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL adzi400_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adzi400_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL adzi400_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adzi400_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL adzi400_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adzi400_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL adzi400_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adzi400_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL adzi400_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL adzi400_idx_chk()
            
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_dzdb_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_dzdb2_d)
                  LET g_export_id[2]   = "s_detail2"
                  LET g_export_node[3] = base.typeInfo.create(g_dzdb3_d)
                  LET g_export_id[3]   = "s_detail3"
                  LET g_export_node[4] = base.typeInfo.create(g_dzdb4_d)
                  LET g_export_id[4]   = "s_detail4"
                  LET g_export_node[5] = base.typeInfo.create(g_dzdb5_d)
                  LET g_export_id[5]   = "s_detail5"
 
                  #add-point:ON ACTION exporttoexcel
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD dzdb002
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL adzi400_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL adzi400_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL adzi400_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL adzi400_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
               CALL g_curr_diag.setCurrentRow("s_detail3",1)
               CALL g_curr_diag.setCurrentRow("s_detail4",1)
               CALL g_curr_diag.setCurrentRow("s_detail5",1)
 
 
 
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL adzi400_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL adzi400_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               
            END IF
 
 
 
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL adzi400_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL adzi400_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL adzi400_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION

{</section>}

{<section id="adzi400.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION adzi400_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define" edit="s"/>}
   #end add-point   
   #add-point:browser_fill段define
   {<point name="browser_fill.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE dzda001 ",
                      " FROM dzda_t ",
                      " ",
                      " LEFT JOIN dzdb_t ON dzda001 = dzdb001 ", "  ",
                      #add-point:browser_fill段sql(dzdb_t1)
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
                      " LEFT JOIN dzdc_t ON dzda001 = dzdc001", "  ",
                      #add-point:browser_fill段sql(dzdc_t1)
                      {<point name="browser_fill.cnt.join.dzdc_t1"/>}
                      #end add-point
 
                      " LEFT JOIN dzdd_t ON dzda001 = dzdd001", "  ",
                      #add-point:browser_fill段sql(dzdd_t1)
                      {<point name="browser_fill.cnt.join.dzdd_t1"/>}
                      #end add-point
 
                      " LEFT JOIN dzdh_t ON dzda001 = dzdh003", "  ",
                      #add-point:browser_fill段sql(dzdh_t1)
                      {<point name="browser_fill.cnt.join.dzdh_t1"/>}
                      #end add-point
 
 
 
                      " ", 
                      " ", 
                      " WHERE   ",l_wc, " AND ", l_wc2, cl_sql_add_filter("dzda_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE dzda001 ",
                      " FROM dzda_t ", 
                      "  ",
                      "  ",
                      " WHERE  ",l_wc CLIPPED, cl_sql_add_filter("dzda_t")
   END IF
   
   #add-point:browser_fill,cnt wc
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   IF g_browser_cnt > g_max_rec THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_rec
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_dzda_m.* TO NULL
      CALL g_dzdb_d.clear()        
      CALL g_dzdb2_d.clear() 
      CALL g_dzdb3_d.clear() 
      CALL g_dzdb4_d.clear() 
      CALL g_dzdb5_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.dzda001,t0.dzda003 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   LET g_sql = " SELECT DISTINCT t0.dzdastus,t0.dzda001,t0.dzda003 ",
               " FROM dzda_t t0",
               "  ",
               "  LEFT JOIN dzdb_t ON dzda001 = dzdb001 ", "  ", 
               #add-point:browser_fill段sql(dzdb_t1)
               {<point name="browser_fill.join.dzdb_t1"/>}
               #end add-point
               "  LEFT JOIN dzdc_t ON dzda001 = dzdc001", "  ", 
               #add-point:browser_fill段sql(dzdc_t1)
               {<point name="browser_fill.join.dzdc_t1"/>}
               #end add-point
 
               "  LEFT JOIN dzdd_t ON dzda001 = dzdd001", "  ", 
               #add-point:browser_fill段sql(dzdd_t1)
               {<point name="browser_fill.join.dzdd_t1"/>}
               #end add-point
 
               "  LEFT JOIN dzdh_t ON dzda001 = dzdh003", "  ", 
               #add-point:browser_fill段sql(dzdh_t1)
               {<point name="browser_fill.join.dzdh_t1"/>}
               #end add-point
 
 
 
               "  ",
               
               " WHERE  ",l_wc," AND ",l_wc2, cl_sql_add_filter("dzda_t")
   #add-point:browser_fill,sql wc
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY dzda001 ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"dzda_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill段open cursor
   {<point name="browser_fill.open"/>}
   #end add-point
   
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_dzda001,g_browser[g_cnt].b_dzda003 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #應用 a24 樣板自動產生(Version:2)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN ""
            LET g_browser[g_cnt].b_statepic = "stus/16/.png"
 
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_dzda001) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION

{</section>}

{<section id="adzi400.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION adzi400_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_dzda_m.dzda001 = g_browser[g_current_idx].b_dzda001   
 
   EXECUTE adzi400_master_referesh USING g_dzda_m.dzda001 INTO g_dzda_m.dzda001,g_dzda_m.dzda003,g_dzda_m.dzda002, 
       g_dzda_m.dzda005,g_dzda_m.dzda006,g_dzda_m.dzda007,g_dzda_m.dzda008,g_dzda_m.dzda009,g_dzda_m.dzda010, 
       g_dzda_m.dzdastus,g_dzda_m.dzdaownid,g_dzda_m.dzdaowndp,g_dzda_m.dzdacrtid,g_dzda_m.dzdacrtdp, 
       g_dzda_m.dzdacrtdt,g_dzda_m.dzdamodid,g_dzda_m.dzdamoddt,g_dzda_m.dzdaownid_desc,g_dzda_m.dzdaowndp_desc, 
       g_dzda_m.dzdacrtid_desc,g_dzda_m.dzdacrtdp_desc,g_dzda_m.dzdamodid_desc
   CALL adzi400_show()
      
END FUNCTION

{</section>}

{<section id="adzi400.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION adzi400_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define_customerization" edit="c"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail5",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION

{</section>}

{<section id="adzi400.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION adzi400_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define" edit="s"/>}
   #end add-point    
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_dzda001 = g_dzda_m.dzda001 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION

{</section>}

{<section id="adzi400.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION adzi400_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define" edit="s"/>}
   #end add-point    
   #add-point:cs段define
   {<point name="cs.define_customerization" edit="c"/>}
   #end add-point    
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_dzda_m.* TO NULL
   CALL g_dzdb_d.clear()        
   CALL g_dzdb2_d.clear() 
   CALL g_dzdb3_d.clear() 
   CALL g_dzdb4_d.clear() 
   CALL g_dzdb5_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
   INITIALIZE g_wc2_table4 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON dzda001,dzda003,dzda002,dzda005,dzda006,dzda007,dzda008,dzda009,dzda010, 
          dzdastus,dzdaownid,dzdaowndp,dzdacrtid,dzdacrtdp,dzdacrtdt,dzdamodid,dzdamoddt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<dzdacrtdt>>----
         AFTER FIELD dzdacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<dzdamoddt>>----
         AFTER FIELD dzdamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<dzdacnfdt>>----
         
         #----<<dzdapstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzda001
            #add-point:BEFORE FIELD dzda001
            {<point name="construct.b.dzda001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzda001
            
            #add-point:AFTER FIELD dzda001
            {<point name="construct.a.dzda001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.dzda001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzda001
            #add-point:ON ACTION controlp INFIELD dzda001
            {<point name="construct.c.dzda001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzda003
            #add-point:BEFORE FIELD dzda003
            {<point name="construct.b.dzda003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzda003
            
            #add-point:AFTER FIELD dzda003
            {<point name="construct.a.dzda003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.dzda003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzda003
            #add-point:ON ACTION controlp INFIELD dzda003
            {<point name="construct.c.dzda003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzda002
            #add-point:BEFORE FIELD dzda002
            {<point name="construct.b.dzda002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzda002
            
            #add-point:AFTER FIELD dzda002
            {<point name="construct.a.dzda002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.dzda002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzda002
            #add-point:ON ACTION controlp INFIELD dzda002
            {<point name="construct.c.dzda002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzda005
            #add-point:BEFORE FIELD dzda005
            {<point name="construct.b.dzda005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzda005
            
            #add-point:AFTER FIELD dzda005
            {<point name="construct.a.dzda005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.dzda005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzda005
            #add-point:ON ACTION controlp INFIELD dzda005
            {<point name="construct.c.dzda005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzda006
            #add-point:BEFORE FIELD dzda006
            {<point name="construct.b.dzda006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzda006
            
            #add-point:AFTER FIELD dzda006
            {<point name="construct.a.dzda006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.dzda006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzda006
            #add-point:ON ACTION controlp INFIELD dzda006
            {<point name="construct.c.dzda006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzda007
            #add-point:BEFORE FIELD dzda007
            {<point name="construct.b.dzda007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzda007
            
            #add-point:AFTER FIELD dzda007
            {<point name="construct.a.dzda007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.dzda007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzda007
            #add-point:ON ACTION controlp INFIELD dzda007
            {<point name="construct.c.dzda007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzda008
            #add-point:BEFORE FIELD dzda008
            {<point name="construct.b.dzda008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzda008
            
            #add-point:AFTER FIELD dzda008
            {<point name="construct.a.dzda008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.dzda008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzda008
            #add-point:ON ACTION controlp INFIELD dzda008
            {<point name="construct.c.dzda008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzda009
            #add-point:BEFORE FIELD dzda009
            {<point name="construct.b.dzda009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzda009
            
            #add-point:AFTER FIELD dzda009
            {<point name="construct.a.dzda009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.dzda009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzda009
            #add-point:ON ACTION controlp INFIELD dzda009
            {<point name="construct.c.dzda009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzda010
            #add-point:BEFORE FIELD dzda010
            {<point name="construct.b.dzda010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzda010
            
            #add-point:AFTER FIELD dzda010
            {<point name="construct.a.dzda010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.dzda010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzda010
            #add-point:ON ACTION controlp INFIELD dzda010
            {<point name="construct.c.dzda010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdastus
            #add-point:BEFORE FIELD dzdastus
            {<point name="construct.b.dzdastus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdastus
            
            #add-point:AFTER FIELD dzdastus
            {<point name="construct.a.dzdastus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.dzdastus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdastus
            #add-point:ON ACTION controlp INFIELD dzdastus
            {<point name="construct.c.dzdastus" />}
            #END add-point
 
         #Ctrlp:construct.c.dzdaownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdaownid
            #add-point:ON ACTION controlp INFIELD dzdaownid
            {<point name="construct.c.dzdaownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdaownid
            #add-point:BEFORE FIELD dzdaownid
            {<point name="construct.b.dzdaownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdaownid
            
            #add-point:AFTER FIELD dzdaownid
            {<point name="construct.a.dzdaownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.dzdaowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdaowndp
            #add-point:ON ACTION controlp INFIELD dzdaowndp
            {<point name="construct.c.dzdaowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdaowndp
            #add-point:BEFORE FIELD dzdaowndp
            {<point name="construct.b.dzdaowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdaowndp
            
            #add-point:AFTER FIELD dzdaowndp
            {<point name="construct.a.dzdaowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.dzdacrtid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdacrtid
            #add-point:ON ACTION controlp INFIELD dzdacrtid
            {<point name="construct.c.dzdacrtid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdacrtid
            #add-point:BEFORE FIELD dzdacrtid
            {<point name="construct.b.dzdacrtid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdacrtid
            
            #add-point:AFTER FIELD dzdacrtid
            {<point name="construct.a.dzdacrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.dzdacrtdp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdacrtdp
            #add-point:ON ACTION controlp INFIELD dzdacrtdp
            {<point name="construct.c.dzdacrtdp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdacrtdp
            #add-point:BEFORE FIELD dzdacrtdp
            {<point name="construct.b.dzdacrtdp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdacrtdp
            
            #add-point:AFTER FIELD dzdacrtdp
            {<point name="construct.a.dzdacrtdp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdacrtdt
            #add-point:BEFORE FIELD dzdacrtdt
            {<point name="construct.b.dzdacrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.dzdamodid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdamodid
            #add-point:ON ACTION controlp INFIELD dzdamodid
            {<point name="construct.c.dzdamodid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdamodid
            #add-point:BEFORE FIELD dzdamodid
            {<point name="construct.b.dzdamodid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdamodid
            
            #add-point:AFTER FIELD dzdamodid
            {<point name="construct.a.dzdamodid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdamoddt
            #add-point:BEFORE FIELD dzdamoddt
            {<point name="construct.b.dzdamoddt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON dzdb002,dzdb003,dzdb005,dzdbownid,dzdb007,dzdb004,dzdb006,dzdbowndp
           FROM s_detail1[1].dzdb002,s_detail1[1].dzdb003,s_detail1[1].dzdb005,s_detail1[1].dzdbownid, 
               s_detail1[1].dzdb007,s_detail2[1].dzdb004,s_detail2[1].dzdb006,s_detail2[1].dzdbowndp 

                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<dzdbcrtdt>>----
 
         #----<<dzdbmoddt>>----
         
         #----<<dzdbcnfdt>>----
         
         #----<<dzdbpstdt>>----
 
 
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdb002
            #add-point:BEFORE FIELD dzdb002
            {<point name="construct.b.page1.dzdb002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdb002
            
            #add-point:AFTER FIELD dzdb002
            {<point name="construct.a.page1.dzdb002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.dzdb002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdb002
            #add-point:ON ACTION controlp INFIELD dzdb002
            {<point name="construct.c.page1.dzdb002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdb003
            #add-point:BEFORE FIELD dzdb003
            {<point name="construct.b.page1.dzdb003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdb003
            
            #add-point:AFTER FIELD dzdb003
            {<point name="construct.a.page1.dzdb003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.dzdb003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdb003
            #add-point:ON ACTION controlp INFIELD dzdb003
            {<point name="construct.c.page1.dzdb003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdb005
            #add-point:BEFORE FIELD dzdb005
            {<point name="construct.b.page1.dzdb005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdb005
            
            #add-point:AFTER FIELD dzdb005
            {<point name="construct.a.page1.dzdb005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.dzdb005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdb005
            #add-point:ON ACTION controlp INFIELD dzdb005
            {<point name="construct.c.page1.dzdb005" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.dzdbownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdbownid
            #add-point:ON ACTION controlp INFIELD dzdbownid
            {<point name="construct.c.page1.dzdbownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdbownid
            #add-point:BEFORE FIELD dzdbownid
            {<point name="construct.b.page1.dzdbownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdbownid
            
            #add-point:AFTER FIELD dzdbownid
            {<point name="construct.a.page1.dzdbownid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdb007
            #add-point:BEFORE FIELD dzdb007
            {<point name="construct.b.page1.dzdb007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdb007
            
            #add-point:AFTER FIELD dzdb007
            {<point name="construct.a.page1.dzdb007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.dzdb007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdb007
            #add-point:ON ACTION controlp INFIELD dzdb007
            {<point name="construct.c.page1.dzdb007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdb004
            #add-point:BEFORE FIELD dzdb004
            {<point name="construct.b.page2.dzdb004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdb004
            
            #add-point:AFTER FIELD dzdb004
            {<point name="construct.a.page2.dzdb004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.dzdb004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdb004
            #add-point:ON ACTION controlp INFIELD dzdb004
            {<point name="construct.c.page2.dzdb004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdb006
            #add-point:BEFORE FIELD dzdb006
            {<point name="construct.b.page2.dzdb006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdb006
            
            #add-point:AFTER FIELD dzdb006
            {<point name="construct.a.page2.dzdb006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.dzdb006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdb006
            #add-point:ON ACTION controlp INFIELD dzdb006
            {<point name="construct.c.page2.dzdb006" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.dzdbowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdbowndp
            #add-point:ON ACTION controlp INFIELD dzdbowndp
            {<point name="construct.c.page2.dzdbowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdbowndp
            #add-point:BEFORE FIELD dzdbowndp
            {<point name="construct.b.page2.dzdbowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdbowndp
            
            #add-point:AFTER FIELD dzdbowndp
            {<point name="construct.a.page2.dzdbowndp" />}
            #END add-point
            
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON dzdc002,dzdc003
           FROM s_detail3[1].dzdc002,s_detail3[1].dzdc003
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdc002
            #add-point:BEFORE FIELD dzdc002
            {<point name="construct.b.page3.dzdc002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdc002
            
            #add-point:AFTER FIELD dzdc002
            {<point name="construct.a.page3.dzdc002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.dzdc002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdc002
            #add-point:ON ACTION controlp INFIELD dzdc002
            {<point name="construct.c.page3.dzdc002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdc003
            #add-point:BEFORE FIELD dzdc003
            {<point name="construct.b.page3.dzdc003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdc003
            
            #add-point:AFTER FIELD dzdc003
            {<point name="construct.a.page3.dzdc003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.dzdc003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdc003
            #add-point:ON ACTION controlp INFIELD dzdc003
            {<point name="construct.c.page3.dzdc003" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON dzdd002,dzdd004,dzdd005
           FROM s_detail4[1].dzdd002,s_detail4[1].dzdd004,s_detail4[1].dzdd005
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body3.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdd002
            #add-point:BEFORE FIELD dzdd002
            {<point name="construct.b.page4.dzdd002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdd002
            
            #add-point:AFTER FIELD dzdd002
            {<point name="construct.a.page4.dzdd002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.dzdd002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdd002
            #add-point:ON ACTION controlp INFIELD dzdd002
            {<point name="construct.c.page4.dzdd002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdd004
            #add-point:BEFORE FIELD dzdd004
            {<point name="construct.b.page4.dzdd004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdd004
            
            #add-point:AFTER FIELD dzdd004
            {<point name="construct.a.page4.dzdd004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.dzdd004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdd004
            #add-point:ON ACTION controlp INFIELD dzdd004
            {<point name="construct.c.page4.dzdd004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdd005
            #add-point:BEFORE FIELD dzdd005
            {<point name="construct.b.page4.dzdd005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdd005
            
            #add-point:AFTER FIELD dzdd005
            {<point name="construct.a.page4.dzdd005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.dzdd005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdd005
            #add-point:ON ACTION controlp INFIELD dzdd005
            {<point name="construct.c.page4.dzdd005" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table4 ON dzdh001,dzdhownid,dzdh002,dzdhowndp
           FROM s_detail5[1].dzdh001,s_detail5[1].dzdhownid,s_detail5[1].dzdh002,s_detail5[1].dzdhowndp 

                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body4.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 4)
       #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<dzdhcrtdt>>----
 
         #----<<dzdhmoddt>>----
         
         #----<<dzdhcnfdt>>----
         
         #----<<dzdhpstdt>>----
 
 
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdh001
            #add-point:BEFORE FIELD dzdh001
            {<point name="construct.b.page5.dzdh001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdh001
            
            #add-point:AFTER FIELD dzdh001
            {<point name="construct.a.page5.dzdh001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page5.dzdh001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdh001
            #add-point:ON ACTION controlp INFIELD dzdh001
            {<point name="construct.c.page5.dzdh001" />}
            #END add-point
 
         #Ctrlp:construct.c.page5.dzdhownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdhownid
            #add-point:ON ACTION controlp INFIELD dzdhownid
            {<point name="construct.c.page5.dzdhownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdhownid
            #add-point:BEFORE FIELD dzdhownid
            {<point name="construct.b.page5.dzdhownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdhownid
            
            #add-point:AFTER FIELD dzdhownid
            {<point name="construct.a.page5.dzdhownid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdh002
            #add-point:BEFORE FIELD dzdh002
            {<point name="construct.b.page5.dzdh002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdh002
            
            #add-point:AFTER FIELD dzdh002
            {<point name="construct.a.page5.dzdh002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page5.dzdh002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdh002
            #add-point:ON ACTION controlp INFIELD dzdh002
            {<point name="construct.c.page5.dzdh002" />}
            #END add-point
 
         #Ctrlp:construct.c.page5.dzdhowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdhowndp
            #add-point:ON ACTION controlp INFIELD dzdhowndp
            {<point name="construct.c.page5.dzdhowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdhowndp
            #add-point:BEFORE FIELD dzdhowndp
            {<point name="construct.b.page5.dzdhowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdhowndp
            
            #add-point:AFTER FIELD dzdhowndp
            {<point name="construct.a.page5.dzdhowndp" />}
            #END add-point
            
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
   IF g_wc2_table4 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
   END IF
 
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION

{</section>}

{<section id="adzi400.filter" >}
#應用 a50 樣板自動產生(Version:4)
#+ filter過濾功能
PRIVATE FUNCTION adzi400_filter()
   #add-point:filter段define
   {<point name="filter.define" edit="s"/>}
   #end add-point   
   #add-point:filter段define
   {<point name="filter.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON dzda001,dzda003
                          FROM s_browse[1].b_dzda001,s_browse[1].b_dzda003
 
         BEFORE CONSTRUCT
               DISPLAY adzi400_filter_parser('dzda001') TO s_browse[1].b_dzda001
            DISPLAY adzi400_filter_parser('dzda003') TO s_browse[1].b_dzda003
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL adzi400_filter_show('dzda001')
   CALL adzi400_filter_show('dzda003')
 
END FUNCTION

{</section>}

{<section id="adzi400.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION adzi400_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define" edit="s"/>}
   #end add-point    
   #add-point:filter段define
   {<point name="filter_parser.define_customerization" edit="s"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION

{</section>}

{<section id="adzi400.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION adzi400_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = adzi400_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION

{</section>}

{<section id="adzi400.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION adzi400_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point   
   #add-point:query段define
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_dzdb_d.clear()
   CALL g_dzdb2_d.clear()
   CALL g_dzdb3_d.clear()
   CALL g_dzdb4_d.clear()
   CALL g_dzdb5_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL adzi400_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL adzi400_browser_fill("")
      CALL adzi400_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL adzi400_filter_show('dzda001')
   CALL adzi400_filter_show('dzda003')
   CALL adzi400_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL adzi400_fetch("F") 
      #顯示單身筆數
      CALL adzi400_idx_chk()
   END IF
 
END FUNCTION

{</section>}

{<section id="adzi400.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION adzi400_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define" edit="s"/>}
   #end add-point    
   #add-point:fetch段define
   {<point name="fetch.define_customerization" edit="c"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_dzda_m.dzda001 = g_browser[g_current_idx].b_dzda001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE adzi400_master_referesh USING g_dzda_m.dzda001 INTO g_dzda_m.dzda001,g_dzda_m.dzda003,g_dzda_m.dzda002, 
       g_dzda_m.dzda005,g_dzda_m.dzda006,g_dzda_m.dzda007,g_dzda_m.dzda008,g_dzda_m.dzda009,g_dzda_m.dzda010, 
       g_dzda_m.dzdastus,g_dzda_m.dzdaownid,g_dzda_m.dzdaowndp,g_dzda_m.dzdacrtid,g_dzda_m.dzdacrtdp, 
       g_dzda_m.dzdacrtdt,g_dzda_m.dzdamodid,g_dzda_m.dzdamoddt,g_dzda_m.dzdaownid_desc,g_dzda_m.dzdaowndp_desc, 
       g_dzda_m.dzdacrtid_desc,g_dzda_m.dzdacrtdp_desc,g_dzda_m.dzdamodid_desc
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "dzda_t" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      INITIALIZE g_dzda_m.* TO NULL
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL adzi400_set_act_visible()   
   CALL adzi400_set_act_no_visible()
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_dzda_m_t.* = g_dzda_m.*
   LET g_dzda_m_o.* = g_dzda_m.*
   
   LET g_data_owner = g_dzda_m.dzdaownid      
   LET g_data_dept  = g_dzda_m.dzdaowndp
   
   #重新顯示   
   CALL adzi400_show()
 
   
 
END FUNCTION

{</section>}

{<section id="adzi400.insert" >}
#+ 資料新增
PRIVATE FUNCTION adzi400_insert()
   #add-point:insert段define
   {<point name="insert.define" edit="s"/>}
   #end add-point    
   #add-point:insert段define
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_dzdb_d.clear()   
   CALL g_dzdb2_d.clear()  
   CALL g_dzdb3_d.clear()  
   CALL g_dzdb4_d.clear()  
   CALL g_dzdb5_d.clear()  
 
 
   INITIALIZE g_dzda_m.* LIKE dzda_t.*             #DEFAULT 設定
   
   LET g_dzda001_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_dzda_m.dzdaownid = g_user
      LET g_dzda_m.dzdaowndp = g_dept
      LET g_dzda_m.dzdacrtid = g_user
      LET g_dzda_m.dzdacrtdp = g_dept 
      LET g_dzda_m.dzdacrtdt = cl_get_current()
      LET g_dzda_m.dzdamodid = g_user
      LET g_dzda_m.dzdamoddt = cl_get_current()
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
      
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_dzda_m.dzdastus 
         WHEN ""
            CALL gfrm_curr.setElementImage("statechange", "stus/32/.png")
 
         
      END CASE
 
 
    
      CALL adzi400_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG AND NOT g_master_insert THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_dzda_m.* TO NULL
         INITIALIZE g_dzdb_d TO NULL
         INITIALIZE g_dzdb2_d TO NULL
         INITIALIZE g_dzdb3_d TO NULL
         INITIALIZE g_dzdb4_d TO NULL
         INITIALIZE g_dzdb5_d TO NULL
 
         #add-point:取消新增後
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL adzi400_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_dzdb_d.clear()
      #CALL g_dzdb2_d.clear()
      #CALL g_dzdb3_d.clear()
      #CALL g_dzdb4_d.clear()
      #CALL g_dzdb5_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL adzi400_set_act_visible()   
   CALL adzi400_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_dzda001_t = g_dzda_m.dzda001
 
   
   #組合新增資料的條件
   LET g_add_browse = " ",
                      " dzda001 = '", g_dzda_m.dzda001, "' "
 
                      
   #add-point:組合新增資料的條件後
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL adzi400_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE adzi400_cl
   
   CALL adzi400_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE adzi400_master_referesh USING g_dzda_m.dzda001 INTO g_dzda_m.dzda001,g_dzda_m.dzda003,g_dzda_m.dzda002, 
       g_dzda_m.dzda005,g_dzda_m.dzda006,g_dzda_m.dzda007,g_dzda_m.dzda008,g_dzda_m.dzda009,g_dzda_m.dzda010, 
       g_dzda_m.dzdastus,g_dzda_m.dzdaownid,g_dzda_m.dzdaowndp,g_dzda_m.dzdacrtid,g_dzda_m.dzdacrtdp, 
       g_dzda_m.dzdacrtdt,g_dzda_m.dzdamodid,g_dzda_m.dzdamoddt,g_dzda_m.dzdaownid_desc,g_dzda_m.dzdaowndp_desc, 
       g_dzda_m.dzdacrtid_desc,g_dzda_m.dzdacrtdp_desc,g_dzda_m.dzdamodid_desc
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_dzda_m.dzda001,g_dzda_m.dzda003,g_dzda_m.dzda002,g_dzda_m.dzda005,g_dzda_m.dzda006, 
       g_dzda_m.dzda007,g_dzda_m.dzda008,g_dzda_m.dzda009,g_dzda_m.dzda010,g_dzda_m.dzdastus,g_dzda_m.dzdaownid, 
       g_dzda_m.dzdaownid_desc,g_dzda_m.dzdaowndp,g_dzda_m.dzdaowndp_desc,g_dzda_m.dzdacrtid,g_dzda_m.dzdacrtid_desc, 
       g_dzda_m.dzdacrtdp,g_dzda_m.dzdacrtdp_desc,g_dzda_m.dzdacrtdt,g_dzda_m.dzdamodid,g_dzda_m.dzdamodid_desc, 
       g_dzda_m.dzdamoddt
   
   #add-point:新增結束後
   {<point name="insert.after"/>}
   #end add-point 
   
END FUNCTION

{</section>}

{<section id="adzi400.modify" >}
#+ 資料修改
PRIVATE FUNCTION adzi400_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
   DEFINE l_wc2_table3   STRING
 
   DEFINE l_wc2_table4   STRING
 
 
 
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point    
   #add-point:modify段define
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point    
   
   #保存單頭舊值
   LET g_dzda_m_t.* = g_dzda_m.*
   LET g_dzda_m_o.* = g_dzda_m.*
   
   IF g_dzda_m.dzda001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_dzda001_t = g_dzda_m.dzda001
 
   CALL s_transaction_begin()
   
   OPEN adzi400_cl USING g_dzda_m.dzda001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN adzi400_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE adzi400_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE adzi400_master_referesh USING g_dzda_m.dzda001 INTO g_dzda_m.dzda001,g_dzda_m.dzda003,g_dzda_m.dzda002, 
       g_dzda_m.dzda005,g_dzda_m.dzda006,g_dzda_m.dzda007,g_dzda_m.dzda008,g_dzda_m.dzda009,g_dzda_m.dzda010, 
       g_dzda_m.dzdastus,g_dzda_m.dzdaownid,g_dzda_m.dzdaowndp,g_dzda_m.dzdacrtid,g_dzda_m.dzdacrtdp, 
       g_dzda_m.dzdacrtdt,g_dzda_m.dzdamodid,g_dzda_m.dzdamoddt,g_dzda_m.dzdaownid_desc,g_dzda_m.dzdaowndp_desc, 
       g_dzda_m.dzdacrtid_desc,g_dzda_m.dzdacrtdp_desc,g_dzda_m.dzdamodid_desc
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
   #LET l_wc2_table3 = g_wc2_table3
   #LET l_wc2_table3 = " 1=1"
 
   #LET l_wc2_table4 = g_wc2_table4
   #LET l_wc2_table4 = " 1=1"
 
 
 
   
   CALL adzi400_show()
   #add-point:modify段show之後
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
   #LET  g_wc2_table3 = l_wc2_table3 
 
   #LET  g_wc2_table4 = l_wc2_table4 
 
 
 
    
   WHILE TRUE
      LET g_dzda001_t = g_dzda_m.dzda001
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_dzda_m.dzdamodid = g_user 
LET g_dzda_m.dzdamoddt = cl_get_current()
LET g_dzda_m.dzdamodid_desc = cl_get_username(g_dzda_m.dzdamodid)
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      CALL adzi400_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE dzda_t SET (dzdamodid,dzdamoddt) = (g_dzda_m.dzdamodid,g_dzda_m.dzdamoddt)
          WHERE  dzda001 = g_dzda001_t
 
      END IF
    
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_dzda_m.* = g_dzda_m_t.*
         CALL adzi400_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_dzda_m.dzda001 != g_dzda001_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE dzdb_t SET dzdb001 = g_dzda_m.dzda001
 
          WHERE  dzdb001 = g_dzda001_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "dzdb_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "dzdb_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         UPDATE dzdc_t
            SET dzdc001 = g_dzda_m.dzda001
 
          WHERE 
                dzdc001 = g_dzda001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "dzdc_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "dzdc_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update3" mark="Y"/>}
         #end add-point
         UPDATE dzdd_t
            SET dzdd001 = g_dzda_m.dzda001
 
          WHERE 
                dzdd001 = g_dzda001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update3"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "dzdd_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "dzdd_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update3"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update4" mark="Y"/>}
         #end add-point
         UPDATE dzdh_t
            SET dzdh003 = g_dzda_m.dzda001
 
          WHERE 
                dzdh003 = g_dzda001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update4"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "dzdh_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "dzdh_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update4"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL adzi400_set_act_visible()   
   CALL adzi400_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " ",
                      " dzda001 = '", g_dzda_m.dzda001, "' "
 
   #填到對應位置
   CALL adzi400_browser_fill("")
 
   CLOSE adzi400_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_dzda_m.dzda001,'U')
 
END FUNCTION   

{</section>}

{<section id="adzi400.input" >}
#+ 資料輸入
PRIVATE FUNCTION adzi400_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define
   {<point name="input.define" edit="s"/>}
   #end add-point  
   #add-point:input段define
   {<point name="input.define_customerization" edit="c"/>}
   #end add-point  
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_dzda_m.dzda001,g_dzda_m.dzda003,g_dzda_m.dzda002,g_dzda_m.dzda005,g_dzda_m.dzda006, 
       g_dzda_m.dzda007,g_dzda_m.dzda008,g_dzda_m.dzda009,g_dzda_m.dzda010,g_dzda_m.dzdastus,g_dzda_m.dzdaownid, 
       g_dzda_m.dzdaownid_desc,g_dzda_m.dzdaowndp,g_dzda_m.dzdaowndp_desc,g_dzda_m.dzdacrtid,g_dzda_m.dzdacrtid_desc, 
       g_dzda_m.dzdacrtdp,g_dzda_m.dzdacrtdp_desc,g_dzda_m.dzdacrtdt,g_dzda_m.dzdamodid,g_dzda_m.dzdamodid_desc, 
       g_dzda_m.dzdamoddt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT dzdb002,dzdb003,dzdb005,dzdbownid,dzdb007,dzdb002,dzdb003,dzdb004,dzdb006, 
       dzdbowndp FROM dzdb_t WHERE dzdb001=? AND dzdb002=? AND dzdb003=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE adzi400_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT dzdc002,dzdc003 FROM dzdc_t WHERE dzdc001=? AND dzdc002=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE adzi400_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql3" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT dzdd002,dzdd004,dzdd005 FROM dzdd_t WHERE dzdd001=? AND dzdd002=? FOR  
       UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql3"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE adzi400_bcl3 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql4" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT dzdh001,dzdhownid,dzdh002,dzdhowndp FROM dzdh_t WHERE dzdh001=? AND dzdh002=?  
       AND dzdh003=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql4"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE adzi400_bcl4 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL adzi400_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL adzi400_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_dzda_m.dzda001,g_dzda_m.dzda003,g_dzda_m.dzda002,g_dzda_m.dzda005,g_dzda_m.dzda006, 
       g_dzda_m.dzda007,g_dzda_m.dzda008,g_dzda_m.dzda009,g_dzda_m.dzda010,g_dzda_m.dzdastus
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

{</section>}

{<section id="adzi400.input.head" >}
      #單頭段
      INPUT BY NAME g_dzda_m.dzda001,g_dzda_m.dzda003,g_dzda_m.dzda002,g_dzda_m.dzda005,g_dzda_m.dzda006, 
          g_dzda_m.dzda007,g_dzda_m.dzda008,g_dzda_m.dzda009,g_dzda_m.dzda010,g_dzda_m.dzdastus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN adzi400_cl USING g_dzda_m.dzda001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN adzi400_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE adzi400_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            CALL adzi400_set_entry(p_cmd)
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL adzi400_set_no_entry(p_cmd)
    
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzda001
            #add-point:BEFORE FIELD dzda001
            {<point name="input.b.dzda001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzda001
            
            #add-point:AFTER FIELD dzda001
            {<point name="input.a.dzda001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE dzda001
            #add-point:ON CHANGE dzda001
            {<point name="input.g.dzda001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzda003
            #add-point:BEFORE FIELD dzda003
            {<point name="input.b.dzda003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzda003
            
            #add-point:AFTER FIELD dzda003
            {<point name="input.a.dzda003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE dzda003
            #add-point:ON CHANGE dzda003
            {<point name="input.g.dzda003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzda002
            #add-point:BEFORE FIELD dzda002
            {<point name="input.b.dzda002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzda002
            
            #add-point:AFTER FIELD dzda002
            {<point name="input.a.dzda002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE dzda002
            #add-point:ON CHANGE dzda002
            {<point name="input.g.dzda002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzda005
            #add-point:BEFORE FIELD dzda005
            {<point name="input.b.dzda005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzda005
            
            #add-point:AFTER FIELD dzda005
            {<point name="input.a.dzda005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE dzda005
            #add-point:ON CHANGE dzda005
            {<point name="input.g.dzda005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzda006
            #add-point:BEFORE FIELD dzda006
            {<point name="input.b.dzda006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzda006
            
            #add-point:AFTER FIELD dzda006
            {<point name="input.a.dzda006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE dzda006
            #add-point:ON CHANGE dzda006
            {<point name="input.g.dzda006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzda007
            #add-point:BEFORE FIELD dzda007
            {<point name="input.b.dzda007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzda007
            
            #add-point:AFTER FIELD dzda007
            {<point name="input.a.dzda007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE dzda007
            #add-point:ON CHANGE dzda007
            {<point name="input.g.dzda007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzda008
            #add-point:BEFORE FIELD dzda008
            {<point name="input.b.dzda008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzda008
            
            #add-point:AFTER FIELD dzda008
            {<point name="input.a.dzda008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE dzda008
            #add-point:ON CHANGE dzda008
            {<point name="input.g.dzda008" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzda009
            #add-point:BEFORE FIELD dzda009
            {<point name="input.b.dzda009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzda009
            
            #add-point:AFTER FIELD dzda009
            {<point name="input.a.dzda009" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE dzda009
            #add-point:ON CHANGE dzda009
            {<point name="input.g.dzda009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzda010
            #add-point:BEFORE FIELD dzda010
            {<point name="input.b.dzda010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzda010
            
            #add-point:AFTER FIELD dzda010
            {<point name="input.a.dzda010" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE dzda010
            #add-point:ON CHANGE dzda010
            {<point name="input.g.dzda010" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdastus
            #add-point:BEFORE FIELD dzdastus
            {<point name="input.b.dzdastus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdastus
            
            #add-point:AFTER FIELD dzdastus
            {<point name="input.a.dzdastus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE dzdastus
            #add-point:ON CHANGE dzdastus
            {<point name="input.g.dzdastus" />}
            #END add-point 
 
 #欄位檢查
                  #Ctrlp:input.c.dzda001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzda001
            #add-point:ON ACTION controlp INFIELD dzda001
            {<point name="input.c.dzda001" />}
            #END add-point
 
         #Ctrlp:input.c.dzda003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzda003
            #add-point:ON ACTION controlp INFIELD dzda003
            {<point name="input.c.dzda003" />}
            #END add-point
 
         #Ctrlp:input.c.dzda002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzda002
            #add-point:ON ACTION controlp INFIELD dzda002
            {<point name="input.c.dzda002" />}
            #END add-point
 
         #Ctrlp:input.c.dzda005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzda005
            #add-point:ON ACTION controlp INFIELD dzda005
            {<point name="input.c.dzda005" />}
            #END add-point
 
         #Ctrlp:input.c.dzda006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzda006
            #add-point:ON ACTION controlp INFIELD dzda006
            {<point name="input.c.dzda006" />}
            #END add-point
 
         #Ctrlp:input.c.dzda007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzda007
            #add-point:ON ACTION controlp INFIELD dzda007
            {<point name="input.c.dzda007" />}
            #END add-point
 
         #Ctrlp:input.c.dzda008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzda008
            #add-point:ON ACTION controlp INFIELD dzda008
            {<point name="input.c.dzda008" />}
            #END add-point
 
         #Ctrlp:input.c.dzda009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzda009
            #add-point:ON ACTION controlp INFIELD dzda009
            {<point name="input.c.dzda009" />}
            #END add-point
 
         #Ctrlp:input.c.dzda010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzda010
            #add-point:ON ACTION controlp INFIELD dzda010
            {<point name="input.c.dzda010" />}
            #END add-point
 
         #Ctrlp:input.c.dzdastus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdastus
            #add-point:ON ACTION controlp INFIELD dzdastus
            {<point name="input.c.dzdastus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_dzda_m.dzda001
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO dzda_t (dzda001,dzda003,dzda002,dzda005,dzda006,dzda007,dzda008,dzda009,dzda010, 
                   dzdastus,dzdaownid,dzdaowndp,dzdacrtid,dzdacrtdp,dzdacrtdt,dzdamodid,dzdamoddt)
               VALUES (g_dzda_m.dzda001,g_dzda_m.dzda003,g_dzda_m.dzda002,g_dzda_m.dzda005,g_dzda_m.dzda006, 
                   g_dzda_m.dzda007,g_dzda_m.dzda008,g_dzda_m.dzda009,g_dzda_m.dzda010,g_dzda_m.dzdastus, 
                   g_dzda_m.dzdaownid,g_dzda_m.dzdaowndp,g_dzda_m.dzdacrtid,g_dzda_m.dzdacrtdp,g_dzda_m.dzdacrtdt, 
                   g_dzda_m.dzdamodid,g_dzda_m.dzdamoddt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_dzda_m" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL adzi400_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL adzi400_b_fill()
               END IF
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE dzda_t SET (dzda001,dzda003,dzda002,dzda005,dzda006,dzda007,dzda008,dzda009,dzda010, 
                   dzdastus,dzdaownid,dzdaowndp,dzdacrtid,dzdacrtdp,dzdacrtdt,dzdamodid,dzdamoddt) = (g_dzda_m.dzda001, 
                   g_dzda_m.dzda003,g_dzda_m.dzda002,g_dzda_m.dzda005,g_dzda_m.dzda006,g_dzda_m.dzda007, 
                   g_dzda_m.dzda008,g_dzda_m.dzda009,g_dzda_m.dzda010,g_dzda_m.dzdastus,g_dzda_m.dzdaownid, 
                   g_dzda_m.dzdaowndp,g_dzda_m.dzdacrtid,g_dzda_m.dzdacrtdp,g_dzda_m.dzdacrtdt,g_dzda_m.dzdamodid, 
                   g_dzda_m.dzdamoddt)
                WHERE  dzda001 = g_dzda001_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "dzda_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_dzda_m_t)
               LET g_log2 = util.JSON.stringify(g_dzda_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_dzda001_t = g_dzda_m.dzda001
 
            
      END INPUT
   

{</section>}

{<section id="adzi400.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_dzdb_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_dzdb_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL adzi400_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_dzdb_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN adzi400_cl USING g_dzda_m.dzda001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN adzi400_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE adzi400_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_dzdb_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_dzdb_d[l_ac].dzdb002 IS NOT NULL
               AND g_dzdb_d[l_ac].dzdb003 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_dzdb_d_t.* = g_dzdb_d[l_ac].*  #BACKUP
               LET g_dzdb_d_o.* = g_dzdb_d[l_ac].*  #BACKUP
               CALL adzi400_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL adzi400_set_no_entry_b(l_cmd)
               IF NOT adzi400_lock_b("dzdb_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH adzi400_bcl INTO g_dzdb_d[l_ac].dzdb002,g_dzdb_d[l_ac].dzdb003,g_dzdb_d[l_ac].dzdb005, 
                      g_dzdb_d[l_ac].dzdbownid,g_dzdb_d[l_ac].dzdb007,g_dzdb2_d[l_ac].dzdb002,g_dzdb2_d[l_ac].dzdb003, 
                      g_dzdb2_d[l_ac].dzdb004,g_dzdb2_d[l_ac].dzdb006,g_dzdb2_d[l_ac].dzdbowndp
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_dzdb_d_t.dzdb002 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL adzi400_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_dzdb_d[l_ac].* TO NULL 
            INITIALIZE g_dzdb_d_t.* TO NULL 
            INITIALIZE g_dzdb_d_o.* TO NULL 
            #公用欄位給值(單身)
            #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_dzdb_d[l_ac].dzdbownid = g_user
      LET g_dzdb2_d[l_ac].dzdbowndp = g_dept
 
 
            #自定義預設值
            
            #add-point:modify段before備份
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_dzdb_d_t.* = g_dzdb_d[l_ac].*     #新輸入資料
            LET g_dzdb_d_o.* = g_dzdb_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL adzi400_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL adzi400_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_dzdb_d[li_reproduce_target].* = g_dzdb_d[li_reproduce].*
               LET g_dzdb2_d[li_reproduce_target].* = g_dzdb2_d[li_reproduce].*
 
               LET g_dzdb_d[li_reproduce_target].dzdb002 = NULL
               LET g_dzdb_d[li_reproduce_target].dzdb003 = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM dzdb_t 
             WHERE  dzdb001 = g_dzda_m.dzda001
 
               AND dzdb002 = g_dzdb_d[l_ac].dzdb002
               AND dzdb003 = g_dzdb_d[l_ac].dzdb003
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_dzda_m.dzda001
               LET gs_keys[2] = g_dzdb_d[g_detail_idx].dzdb002
               LET gs_keys[3] = g_dzdb_d[g_detail_idx].dzdb003
               CALL adzi400_insert_b('dzdb_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_dzdb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "dzdb_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL adzi400_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d)
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_dzda_m.dzda001
 
               LET gs_keys[gs_keys.getLength()+1] = g_dzdb_d[g_detail_idx].dzdb002
               LET gs_keys[gs_keys.getLength()+1] = g_dzdb_d[g_detail_idx].dzdb003
 
            
               #刪除同層單身
               IF NOT adzi400_delete_b('dzdb_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE adzi400_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT adzi400_key_delete_b(gs_keys,'dzdb_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE adzi400_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               CALL s_transaction_end('Y','0')
               CLOSE adzi400_bcl
               
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_dzdb_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_dzdb_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdb002
            #add-point:BEFORE FIELD dzdb002
            {<point name="input.b.page1.dzdb002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdb002
            
            #add-point:AFTER FIELD dzdb002
            {<point name="input.a.page1.dzdb002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE dzdb002
            #add-point:ON CHANGE dzdb002
            {<point name="input.g.page1.dzdb002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdb003
            #add-point:BEFORE FIELD dzdb003
            {<point name="input.b.page1.dzdb003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdb003
            
            #add-point:AFTER FIELD dzdb003
            {<point name="input.a.page1.dzdb003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE dzdb003
            #add-point:ON CHANGE dzdb003
            {<point name="input.g.page1.dzdb003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdb005
            #add-point:BEFORE FIELD dzdb005
            {<point name="input.b.page1.dzdb005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdb005
            
            #add-point:AFTER FIELD dzdb005
            {<point name="input.a.page1.dzdb005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE dzdb005
            #add-point:ON CHANGE dzdb005
            {<point name="input.g.page1.dzdb005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdb007
            #add-point:BEFORE FIELD dzdb007
            {<point name="input.b.page1.dzdb007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdb007
            
            #add-point:AFTER FIELD dzdb007
            {<point name="input.a.page1.dzdb007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE dzdb007
            #add-point:ON CHANGE dzdb007
            {<point name="input.g.page1.dzdb007" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.dzdb002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdb002
            #add-point:ON ACTION controlp INFIELD dzdb002
            {<point name="input.c.page1.dzdb002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dzdb003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdb003
            #add-point:ON ACTION controlp INFIELD dzdb003
            {<point name="input.c.page1.dzdb003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dzdb005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdb005
            #add-point:ON ACTION controlp INFIELD dzdb005
            {<point name="input.c.page1.dzdb005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.dzdb007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdb007
            #add-point:ON ACTION controlp INFIELD dzdb007
            {<point name="input.c.page1.dzdb007" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_dzdb_d[l_ac].* = g_dzdb_d_t.*
               CLOSE adzi400_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_dzdb_d[l_ac].dzdb002 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_dzdb_d[l_ac].* = g_dzdb_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
      
               UPDATE dzdb_t SET (dzdb001,dzdb002,dzdb003,dzdb005,dzdbownid,dzdb007,dzdb004,dzdb006, 
                   dzdbowndp) = (g_dzda_m.dzda001,g_dzdb_d[l_ac].dzdb002,g_dzdb_d[l_ac].dzdb003,g_dzdb_d[l_ac].dzdb005, 
                   g_dzdb_d[l_ac].dzdbownid,g_dzdb_d[l_ac].dzdb007,g_dzdb2_d[l_ac].dzdb004,g_dzdb2_d[l_ac].dzdb006, 
                   g_dzdb2_d[l_ac].dzdbowndp)
                WHERE  dzdb001 = g_dzda_m.dzda001 
 
                  AND dzdb002 = g_dzdb_d_t.dzdb002 #項次   
                  AND dzdb003 = g_dzdb_d_t.dzdb003  
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "dzdb_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_dzdb_d[l_ac].* = g_dzdb_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "dzdb_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_dzdb_d[l_ac].* = g_dzdb_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_dzda_m.dzda001
               LET gs_keys_bak[1] = g_dzda001_t
               LET gs_keys[2] = g_dzdb_d[g_detail_idx].dzdb002
               LET gs_keys_bak[2] = g_dzdb_d_t.dzdb002
               LET gs_keys[3] = g_dzdb_d[g_detail_idx].dzdb003
               LET gs_keys_bak[3] = g_dzdb_d_t.dzdb003
               CALL adzi400_update_b('dzdb_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
 
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_dzdb_d[g_detail_idx].dzdb002 = g_dzdb_d_t.dzdb002 
                  AND g_dzdb_d[g_detail_idx].dzdb003 = g_dzdb_d_t.dzdb003 
 
                  ) THEN
                  LET gs_keys[01] = g_dzda_m.dzda001
 
                  LET gs_keys[gs_keys.getLength()+1] = g_dzdb_d_t.dzdb002
                  LET gs_keys[gs_keys.getLength()+1] = g_dzdb_d_t.dzdb003
 
                  CALL adzi400_key_update_b(gs_keys,'dzdb_t')
               END IF
               
               #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_dzda_m),util.JSON.stringify(g_dzdb_d_t)
               LET g_log2 = util.JSON.stringify(g_dzda_m),util.JSON.stringify(g_dzdb_d[l_ac])
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL adzi400_unlock_b("dzdb_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_dzdb_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_dzdb_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_dzdb2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = FALSE, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body2.before_input2"/>}
            #end add-point
            
            CALL adzi400_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_dzdb2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            LET g_insert = 'Y' 
            NEXT FIELD dzdb002
 
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_dzdb2_d[l_ac].* TO NULL 
            INITIALIZE g_dzdb2_d_t.* TO NULL 
            INITIALIZE g_dzdb2_d_o.* TO NULL 
            #公用欄位給值(單身2)
            #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_dzdb_d[l_ac].dzdbownid = g_user
      LET g_dzdb2_d[l_ac].dzdbowndp = g_dept
 
 
            #自定義預設值(單身2)
            
            #add-point:modify段before備份
            {<point name="input.body2.insert.before_bak"/>}
            #end add-point
            LET g_dzdb2_d_t.* = g_dzdb2_d[l_ac].*     #新輸入資料
            LET g_dzdb2_d_o.* = g_dzdb2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL adzi400_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL adzi400_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_dzdb_d[li_reproduce_target].* = g_dzdb_d[li_reproduce].*
               LET g_dzdb2_d[li_reproduce_target].* = g_dzdb2_d[li_reproduce].*
 
               LET g_dzdb2_d[li_reproduce_target].dzdb002 = NULL
               LET g_dzdb2_d[li_reproduce_target].dzdb003 = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN adzi400_cl USING g_dzda_m.dzda001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN adzi400_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE adzi400_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_dzdb2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_dzdb2_d[l_ac].dzdb002 IS NOT NULL
               AND g_dzdb2_d[l_ac].dzdb003 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_dzdb2_d_t.* = g_dzdb2_d[l_ac].*  #BACKUP
               LET g_dzdb2_d_o.* = g_dzdb2_d[l_ac].*  #BACKUP
               CALL adzi400_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL adzi400_set_no_entry_b(l_cmd)
               IF NOT adzi400_lock_b("dzdb_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH adzi400_bcl INTO g_dzdb_d[l_ac].dzdb002,g_dzdb_d[l_ac].dzdb003,g_dzdb_d[l_ac].dzdb005, 
                      g_dzdb_d[l_ac].dzdbownid,g_dzdb_d[l_ac].dzdb007,g_dzdb2_d[l_ac].dzdb002,g_dzdb2_d[l_ac].dzdb003, 
                      g_dzdb2_d[l_ac].dzdb004,g_dzdb2_d[l_ac].dzdb006,g_dzdb2_d[l_ac].dzdbowndp
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL adzi400_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body2.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_dzda_m.dzda001
               LET gs_keys[gs_keys.getLength()+1] = g_dzdb2_d[g_detail_idx].dzdb002
               LET gs_keys[gs_keys.getLength()+1] = g_dzdb2_d[g_detail_idx].dzdb003
            
               #刪除同層單身
               IF NOT adzi400_delete_b('dzdb_t',gs_keys,"'2'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE adzi400_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT adzi400_key_delete_b(gs_keys,'dzdb_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE adzi400_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               CALL s_transaction_end('Y','0')
               CLOSE adzi400_bcl
               
                  
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point    
               LET g_rec_b = g_rec_b-1
               
               #add-point:單身2刪除後
               {<point name="input.body2.a_delete"/>}
               #end add-point
               LET l_count = g_dzdb_d.getLength()
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_dzda_m.dzda001
               LET gs_keys[2] = g_dzdb2_d[g_detail_idx].dzdb002
               LET gs_keys[3] = g_dzdb2_d[g_detail_idx].dzdb003
 
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body2.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_dzdb2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM dzdb_t 
             WHERE  dzdb001 = g_dzda_m.dzda001
               AND dzdb002 = g_dzdb2_d[l_ac].dzdb002
               AND dzdb003 = g_dzdb2_d[l_ac].dzdb003
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_dzda_m.dzda001
               LET gs_keys[2] = g_dzdb2_d[g_detail_idx].dzdb002
               LET gs_keys[3] = g_dzdb2_d[g_detail_idx].dzdb003
               CALL adzi400_insert_b('dzdb_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_dzdb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "dzdb_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL adzi400_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_dzdb2_d[l_ac].* = g_dzdb2_d_t.*
               CLOSE adzi400_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_dzdb2_d[l_ac].* = g_dzdb2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               UPDATE dzdb_t SET (dzdb001,dzdb002,dzdb003,dzdb005,dzdbownid,dzdb007,dzdb004,dzdb006, 
                   dzdbowndp) = (g_dzda_m.dzda001,g_dzdb_d[l_ac].dzdb002,g_dzdb_d[l_ac].dzdb003,g_dzdb_d[l_ac].dzdb005, 
                   g_dzdb_d[l_ac].dzdbownid,g_dzdb_d[l_ac].dzdb007,g_dzdb2_d[l_ac].dzdb004,g_dzdb2_d[l_ac].dzdb006, 
                   g_dzdb2_d[l_ac].dzdbowndp) #自訂欄位頁簽
                WHERE  dzdb001 = g_dzda_m.dzda001
                  AND dzdb002 = g_dzdb2_d_t.dzdb002 #項次 
                  AND dzdb003 = g_dzdb2_d_t.dzdb003
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "dzdb_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_dzdb2_d[l_ac].* = g_dzdb2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "dzdb_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_dzdb2_d[l_ac].* = g_dzdb2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_dzda_m.dzda001
               LET gs_keys_bak[1] = g_dzda001_t
               LET gs_keys[2] = g_dzdb2_d[g_detail_idx].dzdb002
               LET gs_keys_bak[2] = g_dzdb2_d_t.dzdb002
               LET gs_keys[3] = g_dzdb2_d[g_detail_idx].dzdb003
               LET gs_keys_bak[3] = g_dzdb2_d_t.dzdb003
               CALL adzi400_update_b('dzdb_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_dzdb2_d[g_detail_idx].dzdb002 = g_dzdb2_d_t.dzdb002 
                  AND g_dzdb2_d[g_detail_idx].dzdb003 = g_dzdb2_d_t.dzdb003 
                  ) THEN
                  LET gs_keys[01] = g_dzda_m.dzda001
                  LET gs_keys[gs_keys.getLength()+1] = g_dzdb2_d_t.dzdb002
                  LET gs_keys[gs_keys.getLength()+1] = g_dzdb2_d_t.dzdb003
                  CALL adzi400_key_update_b(gs_keys,'dzdb_t')
               END IF
               
               #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_dzda_m),util.JSON.stringify(g_dzdb2_d_t)
               LET g_log2 = util.JSON.stringify(g_dzda_m),util.JSON.stringify(g_dzdb2_d[l_ac])
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdb004
            #add-point:BEFORE FIELD dzdb004
            {<point name="input.b.page2.dzdb004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdb004
            
            #add-point:AFTER FIELD dzdb004
            {<point name="input.a.page2.dzdb004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE dzdb004
            #add-point:ON CHANGE dzdb004
            {<point name="input.g.page2.dzdb004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdb006
            #add-point:BEFORE FIELD dzdb006
            {<point name="input.b.page2.dzdb006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdb006
            
            #add-point:AFTER FIELD dzdb006
            {<point name="input.a.page2.dzdb006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE dzdb006
            #add-point:ON CHANGE dzdb006
            {<point name="input.g.page2.dzdb006" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page2.dzdb004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdb004
            #add-point:ON ACTION controlp INFIELD dzdb004
            {<point name="input.c.page2.dzdb004" />}
            #END add-point
 
         #Ctrlp:input.c.page2.dzdb006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdb006
            #add-point:ON ACTION controlp INFIELD dzdb006
            {<point name="input.c.page2.dzdb006" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_dzdb2_d[l_ac].* = g_dzdb2_d_t.*
               END IF
               CLOSE adzi400_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL adzi400_unlock_b("dzdb_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_dzdb2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_dzdb2_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_dzdb3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_3)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body3.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_dzdb3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL adzi400_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_dzdb3_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body3.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_dzdb3_d[l_ac].* TO NULL 
            INITIALIZE g_dzdb3_d_t.* TO NULL 
            INITIALIZE g_dzdb3_d_o.* TO NULL 
            #公用欄位給值(單身3)
            
            #自定義預設值(單身3)
            
            #add-point:modify段before備份
            {<point name="input.body3.insert.before_bak"/>}
            #end add-point
            LET g_dzdb3_d_t.* = g_dzdb3_d[l_ac].*     #新輸入資料
            LET g_dzdb3_d_o.* = g_dzdb3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL adzi400_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body3.insert.after_set_entry_b"/>}
            #end add-point
            CALL adzi400_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_dzdb3_d[li_reproduce_target].* = g_dzdb3_d[li_reproduce].*
 
               LET g_dzdb3_d[li_reproduce_target].dzdc002 = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body3.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body3.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN adzi400_cl USING g_dzda_m.dzda001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN adzi400_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE adzi400_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_dzdb3_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_dzdb3_d[l_ac].dzdc002 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_dzdb3_d_t.* = g_dzdb3_d[l_ac].*  #BACKUP
               LET g_dzdb3_d_o.* = g_dzdb3_d[l_ac].*  #BACKUP
               CALL adzi400_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body3.after_set_entry_b"/>}
               #end add-point  
               CALL adzi400_set_no_entry_b(l_cmd)
               IF NOT adzi400_lock_b("dzdc_t","'3'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH adzi400_bcl2 INTO g_dzdb3_d[l_ac].dzdc002,g_dzdb3_d[l_ac].dzdc003
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL adzi400_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body3.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body3.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前
               {<point name="input.body3.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_dzda_m.dzda001
               LET gs_keys[gs_keys.getLength()+1] = g_dzdb3_d[g_detail_idx].dzdc002
            
               #刪除同層單身
               IF NOT adzi400_delete_b('dzdc_t',gs_keys,"'3'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE adzi400_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT adzi400_key_delete_b(gs_keys,'dzdc_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE adzi400_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               CALL s_transaction_end('Y','0')
               CLOSE adzi400_bcl
               
                  
               #add-point:單身3刪除中
               {<point name="input.body3.m_delete"/>}
               #end add-point    
               LET g_rec_b = g_rec_b-1
               
               #add-point:單身3刪除後
               {<point name="input.body3.a_delete"/>}
               #end add-point
               LET l_count = g_dzdb_d.getLength()
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_dzda_m.dzda001
               LET gs_keys[2] = g_dzdb3_d[g_detail_idx].dzdc002
 
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body3.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_dzdb3_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身3新增前
            {<point name="input.body3.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM dzdc_t 
             WHERE  dzdc001 = g_dzda_m.dzda001
               AND dzdc002 = g_dzdb3_d[l_ac].dzdc002
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前
               {<point name="input.body3.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_dzda_m.dzda001
               LET gs_keys[2] = g_dzdb3_d[g_detail_idx].dzdc002
               CALL adzi400_insert_b('dzdc_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3
               {<point name="input.body3.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_dzdb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "dzdc_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL adzi400_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body3.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_dzdb3_d[l_ac].* = g_dzdb3_d_t.*
               CLOSE adzi400_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_dzdb3_d[l_ac].* = g_dzdb3_d_t.*
            ELSE
               #add-point:單身page3修改前
               {<point name="input.body3.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身3)
               
               
               UPDATE dzdc_t SET (dzdc001,dzdc002,dzdc003) = (g_dzda_m.dzda001,g_dzdb3_d[l_ac].dzdc002, 
                   g_dzdb3_d[l_ac].dzdc003) #自訂欄位頁簽
                WHERE  dzdc001 = g_dzda_m.dzda001
                  AND dzdc002 = g_dzdb3_d_t.dzdc002 #項次 
                  
               #add-point:單身page3修改中
               {<point name="input.body3.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "dzdc_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_dzdb3_d[l_ac].* = g_dzdb3_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "dzdc_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_dzdb3_d[l_ac].* = g_dzdb3_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_dzda_m.dzda001
               LET gs_keys_bak[1] = g_dzda001_t
               LET gs_keys[2] = g_dzdb3_d[g_detail_idx].dzdc002
               LET gs_keys_bak[2] = g_dzdb3_d_t.dzdc002
               CALL adzi400_update_b('dzdc_t',gs_keys,gs_keys_bak,"'3'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_dzdb3_d[g_detail_idx].dzdc002 = g_dzdb3_d_t.dzdc002 
                  ) THEN
                  LET gs_keys[01] = g_dzda_m.dzda001
                  LET gs_keys[gs_keys.getLength()+1] = g_dzdb3_d_t.dzdc002
                  CALL adzi400_key_update_b(gs_keys,'dzdc_t')
               END IF
               
               #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_dzda_m),util.JSON.stringify(g_dzdb3_d_t)
               LET g_log2 = util.JSON.stringify(g_dzda_m),util.JSON.stringify(g_dzdb3_d[l_ac])
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page3修改後
               {<point name="input.body3.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdc002
            #add-point:BEFORE FIELD dzdc002
            {<point name="input.b.page3.dzdc002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdc002
            
            #add-point:AFTER FIELD dzdc002
            {<point name="input.a.page3.dzdc002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE dzdc002
            #add-point:ON CHANGE dzdc002
            {<point name="input.g.page3.dzdc002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdc003
            #add-point:BEFORE FIELD dzdc003
            {<point name="input.b.page3.dzdc003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdc003
            
            #add-point:AFTER FIELD dzdc003
            {<point name="input.a.page3.dzdc003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE dzdc003
            #add-point:ON CHANGE dzdc003
            {<point name="input.g.page3.dzdc003" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page3.dzdc002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdc002
            #add-point:ON ACTION controlp INFIELD dzdc002
            {<point name="input.c.page3.dzdc002" />}
            #END add-point
 
         #Ctrlp:input.c.page3.dzdc003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdc003
            #add-point:ON ACTION controlp INFIELD dzdc003
            {<point name="input.c.page3.dzdc003" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page3 after_row
            {<point name="input.body3.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_dzdb3_d[l_ac].* = g_dzdb3_d_t.*
               END IF
               CLOSE adzi400_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL adzi400_unlock_b("dzdc_t","'3'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page3 after_row2
            {<point name="input.body3.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body3.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_dzdb3_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_dzdb3_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_dzdb4_d FROM s_detail4.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_4)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body4.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_dzdb4_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL adzi400_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_dzdb4_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body4.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_dzdb4_d[l_ac].* TO NULL 
            INITIALIZE g_dzdb4_d_t.* TO NULL 
            INITIALIZE g_dzdb4_d_o.* TO NULL 
            #公用欄位給值(單身4)
            
            #自定義預設值(單身4)
            
            #add-point:modify段before備份
            {<point name="input.body4.insert.before_bak"/>}
            #end add-point
            LET g_dzdb4_d_t.* = g_dzdb4_d[l_ac].*     #新輸入資料
            LET g_dzdb4_d_o.* = g_dzdb4_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL adzi400_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body4.insert.after_set_entry_b"/>}
            #end add-point
            CALL adzi400_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_dzdb4_d[li_reproduce_target].* = g_dzdb4_d[li_reproduce].*
 
               LET g_dzdb4_d[li_reproduce_target].dzdd002 = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body4.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body4.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN adzi400_cl USING g_dzda_m.dzda001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN adzi400_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE adzi400_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_dzdb4_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_dzdb4_d[l_ac].dzdd002 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_dzdb4_d_t.* = g_dzdb4_d[l_ac].*  #BACKUP
               LET g_dzdb4_d_o.* = g_dzdb4_d[l_ac].*  #BACKUP
               CALL adzi400_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body4.after_set_entry_b"/>}
               #end add-point  
               CALL adzi400_set_no_entry_b(l_cmd)
               IF NOT adzi400_lock_b("dzdd_t","'4'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH adzi400_bcl3 INTO g_dzdb4_d[l_ac].dzdd002,g_dzdb4_d[l_ac].dzdd004,g_dzdb4_d[l_ac].dzdd005 

                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL adzi400_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body4.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body4.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身4刪除前
               {<point name="input.body4.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_dzda_m.dzda001
               LET gs_keys[gs_keys.getLength()+1] = g_dzdb4_d[g_detail_idx].dzdd002
            
               #刪除同層單身
               IF NOT adzi400_delete_b('dzdd_t',gs_keys,"'4'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE adzi400_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT adzi400_key_delete_b(gs_keys,'dzdd_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE adzi400_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               CALL s_transaction_end('Y','0')
               CLOSE adzi400_bcl
               
                  
               #add-point:單身4刪除中
               {<point name="input.body4.m_delete"/>}
               #end add-point    
               LET g_rec_b = g_rec_b-1
               
               #add-point:單身4刪除後
               {<point name="input.body4.a_delete"/>}
               #end add-point
               LET l_count = g_dzdb_d.getLength()
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_dzda_m.dzda001
               LET gs_keys[2] = g_dzdb4_d[g_detail_idx].dzdd002
 
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body4.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_dzdb4_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身4新增前
            {<point name="input.body4.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM dzdd_t 
             WHERE  dzdd001 = g_dzda_m.dzda001
               AND dzdd002 = g_dzdb4_d[l_ac].dzdd002
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身4新增前
               {<point name="input.body4.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_dzda_m.dzda001
               LET gs_keys[2] = g_dzdb4_d[g_detail_idx].dzdd002
               CALL adzi400_insert_b('dzdd_t',gs_keys,"'4'")
                           
               #add-point:單身新增後4
               {<point name="input.body4.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_dzdb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "dzdd_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL adzi400_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body4.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_dzdb4_d[l_ac].* = g_dzdb4_d_t.*
               CLOSE adzi400_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_dzdb4_d[l_ac].* = g_dzdb4_d_t.*
            ELSE
               #add-point:單身page4修改前
               {<point name="input.body4.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身4)
               
               
               UPDATE dzdd_t SET (dzdd001,dzdd002,dzdd004,dzdd005) = (g_dzda_m.dzda001,g_dzdb4_d[l_ac].dzdd002, 
                   g_dzdb4_d[l_ac].dzdd004,g_dzdb4_d[l_ac].dzdd005) #自訂欄位頁簽
                WHERE  dzdd001 = g_dzda_m.dzda001
                  AND dzdd002 = g_dzdb4_d_t.dzdd002 #項次 
                  
               #add-point:單身page4修改中
               {<point name="input.body4.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "dzdd_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_dzdb4_d[l_ac].* = g_dzdb4_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "dzdd_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_dzdb4_d[l_ac].* = g_dzdb4_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_dzda_m.dzda001
               LET gs_keys_bak[1] = g_dzda001_t
               LET gs_keys[2] = g_dzdb4_d[g_detail_idx].dzdd002
               LET gs_keys_bak[2] = g_dzdb4_d_t.dzdd002
               CALL adzi400_update_b('dzdd_t',gs_keys,gs_keys_bak,"'4'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_dzdb4_d[g_detail_idx].dzdd002 = g_dzdb4_d_t.dzdd002 
                  ) THEN
                  LET gs_keys[01] = g_dzda_m.dzda001
                  LET gs_keys[gs_keys.getLength()+1] = g_dzdb4_d_t.dzdd002
                  CALL adzi400_key_update_b(gs_keys,'dzdd_t')
               END IF
               
               #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_dzda_m),util.JSON.stringify(g_dzdb4_d_t)
               LET g_log2 = util.JSON.stringify(g_dzda_m),util.JSON.stringify(g_dzdb4_d[l_ac])
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page4修改後
               {<point name="input.body4.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdd002
            #add-point:BEFORE FIELD dzdd002
            {<point name="input.b.page4.dzdd002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdd002
            
            #add-point:AFTER FIELD dzdd002
            {<point name="input.a.page4.dzdd002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE dzdd002
            #add-point:ON CHANGE dzdd002
            {<point name="input.g.page4.dzdd002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdd004
            #add-point:BEFORE FIELD dzdd004
            {<point name="input.b.page4.dzdd004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdd004
            
            #add-point:AFTER FIELD dzdd004
            {<point name="input.a.page4.dzdd004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE dzdd004
            #add-point:ON CHANGE dzdd004
            {<point name="input.g.page4.dzdd004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdd005
            #add-point:BEFORE FIELD dzdd005
            {<point name="input.b.page4.dzdd005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdd005
            
            #add-point:AFTER FIELD dzdd005
            {<point name="input.a.page4.dzdd005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE dzdd005
            #add-point:ON CHANGE dzdd005
            {<point name="input.g.page4.dzdd005" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page4.dzdd002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdd002
            #add-point:ON ACTION controlp INFIELD dzdd002
            {<point name="input.c.page4.dzdd002" />}
            #END add-point
 
         #Ctrlp:input.c.page4.dzdd004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdd004
            #add-point:ON ACTION controlp INFIELD dzdd004
            {<point name="input.c.page4.dzdd004" />}
            #END add-point
 
         #Ctrlp:input.c.page4.dzdd005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdd005
            #add-point:ON ACTION controlp INFIELD dzdd005
            {<point name="input.c.page4.dzdd005" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page4 after_row
            {<point name="input.body4.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_dzdb4_d[l_ac].* = g_dzdb4_d_t.*
               END IF
               CLOSE adzi400_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL adzi400_unlock_b("dzdd_t","'4'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page4 after_row2
            {<point name="input.body4.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body4.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_dzdb4_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_dzdb4_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_dzdb5_d FROM s_detail5.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_5)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body5.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_dzdb5_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL adzi400_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_dzdb5_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body5.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_dzdb5_d[l_ac].* TO NULL 
            INITIALIZE g_dzdb5_d_t.* TO NULL 
            INITIALIZE g_dzdb5_d_o.* TO NULL 
            #公用欄位給值(單身5)
            #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_dzdb5_d[l_ac].dzdhownid = g_user
      LET g_dzdb5_d[l_ac].dzdhowndp = g_dept
 
 
            #自定義預設值(單身5)
            
            #add-point:modify段before備份
            {<point name="input.body5.insert.before_bak"/>}
            #end add-point
            LET g_dzdb5_d_t.* = g_dzdb5_d[l_ac].*     #新輸入資料
            LET g_dzdb5_d_o.* = g_dzdb5_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL adzi400_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body5.insert.after_set_entry_b"/>}
            #end add-point
            CALL adzi400_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_dzdb5_d[li_reproduce_target].* = g_dzdb5_d[li_reproduce].*
 
               LET g_dzdb5_d[li_reproduce_target].dzdh001 = NULL
               LET g_dzdb5_d[li_reproduce_target].dzdh002 = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body5.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body5.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN adzi400_cl USING g_dzda_m.dzda001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN adzi400_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE adzi400_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_dzdb5_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_dzdb5_d[l_ac].dzdh001 IS NOT NULL
               AND g_dzdb5_d[l_ac].dzdh002 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_dzdb5_d_t.* = g_dzdb5_d[l_ac].*  #BACKUP
               LET g_dzdb5_d_o.* = g_dzdb5_d[l_ac].*  #BACKUP
               CALL adzi400_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body5.after_set_entry_b"/>}
               #end add-point  
               CALL adzi400_set_no_entry_b(l_cmd)
               IF NOT adzi400_lock_b("dzdh_t","'5'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH adzi400_bcl4 INTO g_dzdb5_d[l_ac].dzdh001,g_dzdb5_d[l_ac].dzdhownid,g_dzdb5_d[l_ac].dzdh002, 
                      g_dzdb5_d[l_ac].dzdhowndp
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL adzi400_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body5.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body5.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身5刪除前
               {<point name="input.body5.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_dzda_m.dzda001
               LET gs_keys[gs_keys.getLength()+1] = g_dzdb5_d[g_detail_idx].dzdh001
               LET gs_keys[gs_keys.getLength()+1] = g_dzdb5_d[g_detail_idx].dzdh002
            
               #刪除同層單身
               IF NOT adzi400_delete_b('dzdh_t',gs_keys,"'5'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE adzi400_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT adzi400_key_delete_b(gs_keys,'dzdh_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE adzi400_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               CALL s_transaction_end('Y','0')
               CLOSE adzi400_bcl
               
                  
               #add-point:單身5刪除中
               {<point name="input.body5.m_delete"/>}
               #end add-point    
               LET g_rec_b = g_rec_b-1
               
               #add-point:單身5刪除後
               {<point name="input.body5.a_delete"/>}
               #end add-point
               LET l_count = g_dzdb_d.getLength()
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_dzda_m.dzda001
               LET gs_keys[2] = g_dzdb5_d[g_detail_idx].dzdh001
               LET gs_keys[3] = g_dzdb5_d[g_detail_idx].dzdh002
 
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body5.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_dzdb5_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身5新增前
            {<point name="input.body5.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM dzdh_t 
             WHERE  dzdh003 = g_dzda_m.dzda001
               AND dzdh001 = g_dzdb5_d[l_ac].dzdh001
               AND dzdh002 = g_dzdb5_d[l_ac].dzdh002
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身5新增前
               {<point name="input.body5.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_dzda_m.dzda001
               LET gs_keys[2] = g_dzdb5_d[g_detail_idx].dzdh001
               LET gs_keys[3] = g_dzdb5_d[g_detail_idx].dzdh002
               CALL adzi400_insert_b('dzdh_t',gs_keys,"'5'")
                           
               #add-point:單身新增後5
               {<point name="input.body5.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_dzdb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "dzdh_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL adzi400_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body5.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_dzdb5_d[l_ac].* = g_dzdb5_d_t.*
               CLOSE adzi400_bcl4
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_dzdb5_d[l_ac].* = g_dzdb5_d_t.*
            ELSE
               #add-point:單身page5修改前
               {<point name="input.body5.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身5)
               
               UPDATE dzdh_t SET (dzdh003,dzdh001,dzdhownid,dzdh002,dzdhowndp) = (g_dzda_m.dzda001,g_dzdb5_d[l_ac].dzdh001, 
                   g_dzdb5_d[l_ac].dzdhownid,g_dzdb5_d[l_ac].dzdh002,g_dzdb5_d[l_ac].dzdhowndp) #自訂欄位頁簽 

                WHERE  dzdh003 = g_dzda_m.dzda001
                  AND dzdh001 = g_dzdb5_d_t.dzdh001 #項次 
                  AND dzdh002 = g_dzdb5_d_t.dzdh002
                  
               #add-point:單身page5修改中
               {<point name="input.body5.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "dzdh_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_dzdb5_d[l_ac].* = g_dzdb5_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "dzdh_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_dzdb5_d[l_ac].* = g_dzdb5_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_dzda_m.dzda001
               LET gs_keys_bak[1] = g_dzda001_t
               LET gs_keys[2] = g_dzdb5_d[g_detail_idx].dzdh001
               LET gs_keys_bak[2] = g_dzdb5_d_t.dzdh001
               LET gs_keys[3] = g_dzdb5_d[g_detail_idx].dzdh002
               LET gs_keys_bak[3] = g_dzdb5_d_t.dzdh002
               CALL adzi400_update_b('dzdh_t',gs_keys,gs_keys_bak,"'5'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_dzdb5_d[g_detail_idx].dzdh001 = g_dzdb5_d_t.dzdh001 
                  AND g_dzdb5_d[g_detail_idx].dzdh002 = g_dzdb5_d_t.dzdh002 
                  ) THEN
                  LET gs_keys[01] = g_dzda_m.dzda001
                  LET gs_keys[gs_keys.getLength()+1] = g_dzdb5_d_t.dzdh001
                  LET gs_keys[gs_keys.getLength()+1] = g_dzdb5_d_t.dzdh002
                  CALL adzi400_key_update_b(gs_keys,'dzdh_t')
               END IF
               
               #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_dzda_m),util.JSON.stringify(g_dzdb5_d_t)
               LET g_log2 = util.JSON.stringify(g_dzda_m),util.JSON.stringify(g_dzdb5_d[l_ac])
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page5修改後
               {<point name="input.body5.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdh001
            #add-point:BEFORE FIELD dzdh001
            {<point name="input.b.page5.dzdh001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdh001
            
            #add-point:AFTER FIELD dzdh001
            {<point name="input.a.page5.dzdh001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE dzdh001
            #add-point:ON CHANGE dzdh001
            {<point name="input.g.page5.dzdh001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD dzdh002
            #add-point:BEFORE FIELD dzdh002
            {<point name="input.b.page5.dzdh002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD dzdh002
            
            #add-point:AFTER FIELD dzdh002
            {<point name="input.a.page5.dzdh002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE dzdh002
            #add-point:ON CHANGE dzdh002
            {<point name="input.g.page5.dzdh002" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page5.dzdh001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdh001
            #add-point:ON ACTION controlp INFIELD dzdh001
            {<point name="input.c.page5.dzdh001" />}
            #END add-point
 
         #Ctrlp:input.c.page5.dzdh002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD dzdh002
            #add-point:ON ACTION controlp INFIELD dzdh002
            {<point name="input.c.page5.dzdh002" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page5 after_row
            {<point name="input.body5.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_dzdb5_d[l_ac].* = g_dzdb5_d_t.*
               END IF
               CLOSE adzi400_bcl4
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL adzi400_unlock_b("dzdh_t","'5'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page5 after_row2
            {<point name="input.body5.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body5.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_dzdb5_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_dzdb5_d.getLength()+1
 
      END INPUT
 
      
 
 
 

{</section>}

{<section id="adzi400.input.other" >}
      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
         CALL DIALOG.setCurrentRow("s_detail2",g_detail_idx)
         CALL DIALOG.setCurrentRow("s_detail3",g_detail_idx)
         CALL DIALOG.setCurrentRow("s_detail4",g_detail_idx)
         CALL DIALOG.setCurrentRow("s_detail5",g_detail_idx)
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD dzda001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD dzdb002
               WHEN "s_detail2"
                  NEXT FIELD dzdb002_2
               WHEN "s_detail3"
                  NEXT FIELD dzdc002
               WHEN "s_detail4"
                  NEXT FIELD dzdd002
               WHEN "s_detail5"
                  NEXT FIELD dzdh001
 
               #add-point:input段modify_detail 
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION

{</section>}

{<section id="adzi400.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION adzi400_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define" edit="s"/>}
   #end add-point  
   #add-point:show段define
   {<point name="show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL adzi400_b_fill() #單身填充
      CALL adzi400_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:3)
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:2)
   CALL adzi400_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_dzda_m.dzda001,g_dzda_m.dzda003,g_dzda_m.dzda002,g_dzda_m.dzda005,g_dzda_m.dzda006, 
       g_dzda_m.dzda007,g_dzda_m.dzda008,g_dzda_m.dzda009,g_dzda_m.dzda010,g_dzda_m.dzdastus,g_dzda_m.dzdaownid, 
       g_dzda_m.dzdaownid_desc,g_dzda_m.dzdaowndp,g_dzda_m.dzdaowndp_desc,g_dzda_m.dzdacrtid,g_dzda_m.dzdacrtid_desc, 
       g_dzda_m.dzdacrtdp,g_dzda_m.dzdacrtdp_desc,g_dzda_m.dzdacrtdt,g_dzda_m.dzdamodid,g_dzda_m.dzdamodid_desc, 
       g_dzda_m.dzdamoddt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_dzda_m.dzdastus 
         WHEN ""
            CALL gfrm_curr.setElementImage("statechange", "stus/32/.png")
 
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_dzdb_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_dzdb2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_dzdb3_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body3.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_dzdb4_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body4.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_dzdb5_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body5.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL adzi400_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="adzi400.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION adzi400_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define" edit="s"/>}
   #end add-point  
   #add-point:detail_show段define
   {<point name="detail_show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="adzi400.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION adzi400_reproduce()
   DEFINE l_newno     LIKE dzda_t.dzda001 
   DEFINE l_oldno     LIKE dzda_t.dzda001 
 
   DEFINE l_master    RECORD LIKE dzda_t.*
   DEFINE l_detail    RECORD LIKE dzdb_t.*
   DEFINE l_detail2    RECORD LIKE dzdc_t.*
 
   DEFINE l_detail3    RECORD LIKE dzdd_t.*
 
   DEFINE l_detail4    RECORD LIKE dzdh_t.*
 
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define" edit="s"/>}
   #end add-point   
   #add-point:reproduce段define
   {<point name="reproduce.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_dzda_m.dzda001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_dzda001_t = g_dzda_m.dzda001
 
    
   LET g_dzda_m.dzda001 = ""
 
    
   CALL adzi400_set_entry('a')
   CALL adzi400_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_dzda_m.dzdaownid = g_user
      LET g_dzda_m.dzdaowndp = g_dept
      LET g_dzda_m.dzdacrtid = g_user
      LET g_dzda_m.dzdacrtdp = g_dept 
      LET g_dzda_m.dzdacrtdt = cl_get_current()
      LET g_dzda_m.dzdamodid = g_user
      LET g_dzda_m.dzdamoddt = cl_get_current()
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_dzda_m.dzdastus 
         WHEN ""
            CALL gfrm_curr.setElementImage("statechange", "stus/32/.png")
 
         
      END CASE
 
 
   
   #清空key欄位的desc
   
   
   CALL adzi400_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_dzda_m.* TO NULL
      INITIALIZE g_dzdb_d TO NULL
      INITIALIZE g_dzdb2_d TO NULL
      INITIALIZE g_dzdb3_d TO NULL
      INITIALIZE g_dzdb4_d TO NULL
      INITIALIZE g_dzdb5_d TO NULL
 
      #add-point:複製取消後
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL adzi400_show()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL adzi400_set_act_visible()   
   CALL adzi400_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_dzda001_t = g_dzda_m.dzda001
 
   
   #組合新增資料的條件
   LET g_add_browse = " ",
                      " dzda001 = '", g_dzda_m.dzda001, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL adzi400_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL adzi400_idx_chk()
   
END FUNCTION

{</section>}

{<section id="adzi400.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION adzi400_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE dzdb_t.*
   DEFINE l_detail2    RECORD LIKE dzdc_t.*
 
   DEFINE l_detail3    RECORD LIKE dzdd_t.*
 
   DEFINE l_detail4    RECORD LIKE dzdh_t.*
 
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define" edit="s"/>}
   #end add-point    
   #add-point:delete段define
   {<point name="detail_reproduce.define_customerization" edit="c"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE adzi400_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE adzi400_detail AS ",
                "SELECT * FROM dzdb_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO adzi400_detail SELECT * FROM dzdb_t 
                                         WHERE  dzdb001 = g_dzda001_t
 
   
   #將key修正為調整後   
   UPDATE adzi400_detail 
      #更新key欄位
      SET dzdb001 = g_dzda_m.dzda001
 
      #更新共用欄位
      #應用 a13 樣板自動產生(Version:3)
       , dzdbownid = g_user 
       , dzdbowndp = g_dept
 
#應用 a13 樣板自動產生(Version:3)
       , dzdhownid = g_user 
       , dzdhowndp = g_dept
 
 
 
   #add-point:單身修改前
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO dzdb_t SELECT * FROM adzi400_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE adzi400_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE adzi400_detail AS ",
      "SELECT * FROM dzdc_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO adzi400_detail SELECT * FROM dzdc_t
                                         WHERE  dzdc001 = g_dzda001_t
 
 
   #將key修正為調整後   
   UPDATE adzi400_detail SET dzdc001 = g_dzda_m.dzda001
 
  
   #將資料塞回原table   
   INSERT INTO dzdc_t SELECT * FROM adzi400_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE adzi400_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table3.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE adzi400_detail AS ",
      "SELECT * FROM dzdd_t "
   PREPARE repro_tbl3 FROM ls_sql
   EXECUTE repro_tbl3
   FREE repro_tbl3
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO adzi400_detail SELECT * FROM dzdd_t
                                         WHERE  dzdd001 = g_dzda001_t
 
 
   #將key修正為調整後   
   UPDATE adzi400_detail SET dzdd001 = g_dzda_m.dzda001
 
  
   #將資料塞回原table   
   INSERT INTO dzdd_t SELECT * FROM adzi400_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table3.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE adzi400_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table3.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table4.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE adzi400_detail AS ",
      "SELECT * FROM dzdh_t "
   PREPARE repro_tbl4 FROM ls_sql
   EXECUTE repro_tbl4
   FREE repro_tbl4
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO adzi400_detail SELECT * FROM dzdh_t
                                         WHERE  dzdh003 = g_dzda001_t
 
 
   #將key修正為調整後   
   UPDATE adzi400_detail SET dzdh003 = g_dzda_m.dzda001
 
  
   #將資料塞回原table   
   INSERT INTO dzdh_t SELECT * FROM adzi400_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table4.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE adzi400_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table4.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_dzda001_t = g_dzda_m.dzda001
 
   
END FUNCTION

{</section>}

{<section id="adzi400.delete" >}
#+ 資料刪除
PRIVATE FUNCTION adzi400_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define" edit="s"/>}
   #end add-point     
   #add-point:delete段define
   {<point name="delete.define_customerization" edit="c"/>}
   #end add-point     
   
   IF g_dzda_m.dzda001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN adzi400_cl USING g_dzda_m.dzda001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN adzi400_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE adzi400_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE adzi400_master_referesh USING g_dzda_m.dzda001 INTO g_dzda_m.dzda001,g_dzda_m.dzda003,g_dzda_m.dzda002, 
       g_dzda_m.dzda005,g_dzda_m.dzda006,g_dzda_m.dzda007,g_dzda_m.dzda008,g_dzda_m.dzda009,g_dzda_m.dzda010, 
       g_dzda_m.dzdastus,g_dzda_m.dzdaownid,g_dzda_m.dzdaowndp,g_dzda_m.dzdacrtid,g_dzda_m.dzdacrtdp, 
       g_dzda_m.dzdacrtdt,g_dzda_m.dzdamodid,g_dzda_m.dzdamoddt,g_dzda_m.dzdaownid_desc,g_dzda_m.dzdaowndp_desc, 
       g_dzda_m.dzdacrtid_desc,g_dzda_m.dzdacrtdp_desc,g_dzda_m.dzdamodid_desc
   
   CALL adzi400_show()
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL adzi400_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
  
  
      #資料備份
      LET g_dzda001_t = g_dzda_m.dzda001
 
 
      DELETE FROM dzda_t
       WHERE  dzda001 = g_dzda_m.dzda001
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_dzda_m.dzda001 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM dzdb_t
       WHERE  dzdb001 = g_dzda_m.dzda001
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "dzdb_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM dzdc_t
       WHERE 
             dzdc001 = g_dzda_m.dzda001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "dzdb_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete3" mark="Y"/>}
      #end add-point
      DELETE FROM dzdd_t
       WHERE 
             dzdd001 = g_dzda_m.dzda001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "dzdc_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete3"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete4" mark="Y"/>}
      #end add-point
      DELETE FROM dzdh_t
       WHERE 
             dzdh003 = g_dzda_m.dzda001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete4"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "dzdd_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete4"/>}
      #end add-point
 
 
 
 
                                                               
      CLEAR FORM
      CALL g_dzdb_d.clear() 
      CALL g_dzdb2_d.clear()       
      CALL g_dzdb3_d.clear()       
      CALL g_dzdb4_d.clear()       
      CALL g_dzdb5_d.clear()       
 
     
      CALL adzi400_ui_browser_refresh()  
      #CALL adzi400_ui_headershow()  
      #CALL adzi400_ui_detailshow()
      
      IF g_browser_cnt > 0 THEN 
         #CALL adzi400_browser_fill("")
         CALL adzi400_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
 
      #add-point:多語言刪除
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
 
      
 
      
 
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE adzi400_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_dzda_m.dzda001,'D')
    
END FUNCTION

{</section>}

{<section id="adzi400.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION adzi400_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define" edit="s"/>}
   #end add-point     
   #add-point:b_fill段define
   {<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point     
   
   CALL g_dzdb_d.clear()    #g_dzdb_d 單頭及單身 
   CALL g_dzdb2_d.clear()
   CALL g_dzdb3_d.clear()
   CALL g_dzdb4_d.clear()
   CALL g_dzdb5_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF adzi400_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE dzdb002,dzdb003,dzdb005,dzdbownid,dzdb007,dzdb002,dzdb003,dzdb004, 
             dzdb006,dzdbowndp ,t1.oofa011 ,t2.ooeal003 FROM dzdb_t",   
                     " INNER JOIN dzda_t ON dzda001 = dzdb001 ",
 
                     #"",
                     
                     "",
                                    " LEFT JOIN oofa_t t1 ON t1.oofaent='"||g_enterprise||"' AND t1.oofa002='2' AND t1.oofa003=dzdbownid  ",
               " LEFT JOIN ooeal_t t2 ON t2.ooealent='"||g_enterprise||"' AND t2.ooeal001=dzdbowndp AND t2.ooeal002='"||g_dlang||"' ",
 
                     " WHERE dzdb001=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY dzdb_t.dzdb002,dzdb_t.dzdb003"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE adzi400_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR adzi400_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_dzda_m.dzda001
                                               
      FOREACH b_fill_cs INTO g_dzdb_d[l_ac].dzdb002,g_dzdb_d[l_ac].dzdb003,g_dzdb_d[l_ac].dzdb005,g_dzdb_d[l_ac].dzdbownid, 
          g_dzdb_d[l_ac].dzdb007,g_dzdb2_d[l_ac].dzdb002,g_dzdb2_d[l_ac].dzdb003,g_dzdb2_d[l_ac].dzdb004, 
          g_dzdb2_d[l_ac].dzdb006,g_dzdb2_d[l_ac].dzdbowndp,g_dzdb_d[l_ac].dzdbownid_desc,g_dzdb2_d[l_ac].dzdbowndp_desc 

         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
   #判斷是否填充
   IF adzi400_fill_chk(2) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE dzdc002,dzdc003  FROM dzdc_t",   
                     " INNER JOIN dzda_t ON dzda001 = dzdc001 ",
 
                     "",
                     
                     
                     " WHERE dzdc001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body2.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY dzdc_t.dzdc002"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql2"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE adzi400_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR adzi400_pb2
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_dzda_m.dzda001
                                               
      FOREACH b_fill_cs2 INTO g_dzdb3_d[l_ac].dzdc002,g_dzdb3_d[l_ac].dzdc003
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF adzi400_fill_chk(3) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE dzdd002,dzdd004,dzdd005  FROM dzdd_t",   
                     " INNER JOIN dzda_t ON dzda001 = dzdd001 ",
 
                     "",
                     
                     
                     " WHERE dzdd001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body3.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table3) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY dzdd_t.dzdd002"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql3"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE adzi400_pb3 FROM g_sql
         DECLARE b_fill_cs3 CURSOR FOR adzi400_pb3
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs3 USING g_dzda_m.dzda001
                                               
      FOREACH b_fill_cs3 INTO g_dzdb4_d[l_ac].dzdd002,g_dzdb4_d[l_ac].dzdd004,g_dzdb4_d[l_ac].dzdd005 

         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill3.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF adzi400_fill_chk(4) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE dzdh001,dzdhownid,dzdh002,dzdhowndp ,t3.oofa011 ,t4.ooeal003 FROM dzdh_t", 
                
                     " INNER JOIN dzda_t ON dzda001 = dzdh003 ",
 
                     "",
                     
                                    " LEFT JOIN oofa_t t3 ON t3.oofaent='"||g_enterprise||"' AND t3.oofa002='2' AND t3.oofa003=dzdhownid  ",
               " LEFT JOIN ooeal_t t4 ON t4.ooealent='"||g_enterprise||"' AND t4.ooeal001=dzdhowndp AND t4.ooeal002='"||g_dlang||"' ",
 
                     " WHERE dzdh003=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body4.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table4) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table4 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY dzdh_t.dzdh001,dzdh_t.dzdh002"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql4"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE adzi400_pb4 FROM g_sql
         DECLARE b_fill_cs4 CURSOR FOR adzi400_pb4
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs4 USING g_dzda_m.dzda001
                                               
      FOREACH b_fill_cs4 INTO g_dzdb5_d[l_ac].dzdh001,g_dzdb5_d[l_ac].dzdhownid,g_dzdb5_d[l_ac].dzdh002, 
          g_dzdb5_d[l_ac].dzdhowndp,g_dzdb5_d[l_ac].dzdhownid_desc,g_dzdb5_d[l_ac].dzdhowndp_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill4.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_dzdb_d.deleteElement(g_dzdb_d.getLength())
   CALL g_dzdb2_d.deleteElement(g_dzdb2_d.getLength())
   CALL g_dzdb3_d.deleteElement(g_dzdb3_d.getLength())
   CALL g_dzdb4_d.deleteElement(g_dzdb4_d.getLength())
   CALL g_dzdb5_d.deleteElement(g_dzdb5_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE adzi400_pb
   FREE adzi400_pb2
 
   FREE adzi400_pb3
 
   FREE adzi400_pb4
 
 
   CALL cl_ap_performance_next_end()
   
END FUNCTION

{</section>}

{<section id="adzi400.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION adzi400_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num5
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point     
 
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM dzdb_t
       WHERE 
         dzdb001 = ps_keys_bak[1] AND dzdb002 = ps_keys_bak[2] AND dzdb003 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      IF ps_page <> "'1'" THEN 
         CALL g_dzdb_d.deleteElement(li_idx) 
      END IF 
      IF ps_page <> "'2'" THEN 
         CALL g_dzdb2_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM dzdc_t
       WHERE 
             dzdc001 = ps_keys_bak[1] AND dzdc002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "dzdc_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_dzdb3_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete3" mark="Y"/>}
      #end add-point    
      DELETE FROM dzdd_t
       WHERE 
             dzdd001 = ps_keys_bak[1] AND dzdd002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete3"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "dzdd_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_dzdb4_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete3"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete4" mark="Y"/>}
      #end add-point    
      DELETE FROM dzdh_t
       WHERE 
             dzdh003 = ps_keys_bak[1] AND dzdh001 = ps_keys_bak[2] AND dzdh002 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete4"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "dzdh_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'5'" THEN 
         CALL g_dzdb5_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete4"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION

{</section>}

{<section id="adzi400.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION adzi400_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num5
   #add-point:insert_b段define
   {<point name="insert_b.define" edit="s"/>}
   #end add-point     
   #add-point:insert_b段define
   {<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point     
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO dzdb_t
                  (
                   dzdb001,
                   dzdb002,dzdb003
                   ,dzdb005,dzdbownid,dzdb007,dzdb004,dzdb006,dzdbowndp) 
            VALUES(
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_dzdb_d[g_detail_idx].dzdb005,g_dzdb_d[g_detail_idx].dzdbownid,g_dzdb_d[g_detail_idx].dzdb007, 
                       g_dzdb2_d[g_detail_idx].dzdb004,g_dzdb2_d[g_detail_idx].dzdb006,g_dzdb2_d[g_detail_idx].dzdbowndp) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "dzdb_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_dzdb_d.insertElement(li_idx) 
      END IF 
      IF ps_page <> "'2'" THEN 
         CALL g_dzdb2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO dzdc_t
                  (
                   dzdc001,
                   dzdc002
                   ,dzdc003) 
            VALUES(
                   ps_keys[1],ps_keys[2]
                   ,g_dzdb3_d[g_detail_idx].dzdc003)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "dzdc_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_dzdb3_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert3" mark="Y"/>}
      #end add-point 
      INSERT INTO dzdd_t
                  (
                   dzdd001,
                   dzdd002
                   ,dzdd004,dzdd005) 
            VALUES(
                   ps_keys[1],ps_keys[2]
                   ,g_dzdb4_d[g_detail_idx].dzdd004,g_dzdb4_d[g_detail_idx].dzdd005)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "dzdd_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_dzdb4_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert3"/>}
      #end add-point
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert4" mark="Y"/>}
      #end add-point 
      INSERT INTO dzdh_t
                  (
                   dzdh003,
                   dzdh001,dzdh002
                   ,dzdhownid,dzdhowndp) 
            VALUES(
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_dzdb5_d[g_detail_idx].dzdhownid,g_dzdb5_d[g_detail_idx].dzdhowndp)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert4"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "dzdh_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'5'" THEN 
         CALL g_dzdb5_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert4"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION

{</section>}

{<section id="adzi400.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION adzi400_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define" edit="s"/>}
   #end add-point   
   #add-point:update_b段define
   {<point name="update_b.define_customerization" edit="c"/>}
   #end add-point   
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "dzdb_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE dzdb_t 
         SET (dzdb001,
              dzdb002,dzdb003
              ,dzdb005,dzdbownid,dzdb007,dzdb004,dzdb006,dzdbowndp) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_dzdb_d[g_detail_idx].dzdb005,g_dzdb_d[g_detail_idx].dzdbownid,g_dzdb_d[g_detail_idx].dzdb007, 
                  g_dzdb2_d[g_detail_idx].dzdb004,g_dzdb2_d[g_detail_idx].dzdb006,g_dzdb2_d[g_detail_idx].dzdbowndp)  

         WHERE  dzdb001 = ps_keys_bak[1] AND dzdb002 = ps_keys_bak[2] AND dzdb003 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "dzdb_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "dzdb_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "dzdc_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point     
      UPDATE dzdc_t 
         SET (dzdc001,
              dzdc002
              ,dzdc003) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_dzdb3_d[g_detail_idx].dzdc003) 
         WHERE  dzdc001 = ps_keys_bak[1] AND dzdc002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "dzdc_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "dzdc_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "dzdd_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update3" mark="Y"/>}
      #end add-point     
      UPDATE dzdd_t 
         SET (dzdd001,
              dzdd002
              ,dzdd004,dzdd005) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_dzdb4_d[g_detail_idx].dzdd004,g_dzdb4_d[g_detail_idx].dzdd005) 
         WHERE  dzdd001 = ps_keys_bak[1] AND dzdd002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update3"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "dzdd_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "dzdd_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update3"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "dzdh_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update4" mark="Y"/>}
      #end add-point     
      UPDATE dzdh_t 
         SET (dzdh003,
              dzdh001,dzdh002
              ,dzdhownid,dzdhowndp) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_dzdb5_d[g_detail_idx].dzdhownid,g_dzdb5_d[g_detail_idx].dzdhowndp) 
         WHERE  dzdh003 = ps_keys_bak[1] AND dzdh001 = ps_keys_bak[2] AND dzdh002 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update4"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "dzdh_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "dzdh_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update4"/>}
      #end add-point  
   END IF
 
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="adzi400.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION adzi400_key_update_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:update_b段define
   {<point name="key_update_b.define" edit="s"/>}
   #end add-point
   #add-point:update_b段define
   {<point name="key_update_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
END FUNCTION

{</section>}

{<section id="adzi400.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION adzi400_key_delete_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define
   {<point name="key_delete_b.define" edit="s"/>}
   #end add-point
   #add-point:delete_b段define
   {<point name="key_delete_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION

{</section>}

{<section id="adzi400.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION adzi400_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point   
    
   #先刷新資料
   #CALL adzi400_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1','2',"
   #僅鎖定自身table
   LET ls_group = "dzdb_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN adzi400_bcl USING 
                                       g_dzda_m.dzda001,g_dzdb_d[g_detail_idx].dzdb002,g_dzdb_d[g_detail_idx].dzdb003  
                                               
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "adzi400_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "dzdc_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN adzi400_bcl2 USING 
                                             g_dzda_m.dzda001,g_dzdb3_d[g_detail_idx].dzdc002
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "adzi400_bcl2" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'4',"
   #僅鎖定自身table
   LET ls_group = "dzdd_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN adzi400_bcl3 USING 
                                             g_dzda_m.dzda001,g_dzdb4_d[g_detail_idx].dzdd002
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "adzi400_bcl3" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'5',"
   #僅鎖定自身table
   LET ls_group = "dzdh_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN adzi400_bcl4 USING 
                                             g_dzda_m.dzda001,g_dzdb5_d[g_detail_idx].dzdh001,g_dzdb5_d[g_detail_idx].dzdh002 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "adzi400_bcl4" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION

{</section>}

{<section id="adzi400.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION adzi400_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point  
    
   LET ls_group = "'1','2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE adzi400_bcl
   END IF
   
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE adzi400_bcl2
   END IF
 
   LET ls_group = "'4',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE adzi400_bcl3
   END IF
 
   LET ls_group = "'5',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE adzi400_bcl4
   END IF
 
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION

{</section>}

{<section id="adzi400.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION adzi400_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define" edit="s"/>}
   #end add-point       
   #add-point:set_entry段define
   {<point name="set_entry.define_customerization" edit="c"/>}
   #end add-point       
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("dzda001",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="adzi400.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION adzi400_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define" edit="s"/>}
   #end add-point     
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define_customerization" edit="c"/>}
   #end add-point     
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("dzda001",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("",FALSE)
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="adzi400.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION adzi400_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define" edit="s"/>}
   #end add-point     
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point     
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION

{</section>}

{<section id="adzi400.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION adzi400_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point    
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point    
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION

{</section>}

{<section id="adzi400.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION adzi400_set_act_visible()
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible段
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="adzi400.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION adzi400_set_act_no_visible()
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible段
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="adzi400.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION adzi400_set_act_visible_b()
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible_b段
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="adzi400.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION adzi400_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="adzi400.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION adzi400_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point  
   #add-point:default_search段define
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " dzda001 = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION

{</section>}

{<section id="adzi400.state_change" >}
   #應用 a09 樣板自動產生(Version:4)
#+ 確認碼變更 
PRIVATE FUNCTION adzi400_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define" edit="s"/>}
   #end add-point  
   #add-point:statechange段define
   {<point name="statechange.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_dzda_m.dzda001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_dzda_m.dzdastus
            WHEN ""
               HIDE OPTION ""
 
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION 
         IF cl_auth_chk_act("") THEN
            LET lc_state = ""
            #add-point:action控制
            {<point name="statechange."/>}
            #end add-point
         END IF
         EXIT MENU
 
    
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "" 
 
      ) OR 
	  g_dzda_m.dzdastus = lc_state OR cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_dzda_m.dzdamodid = g_user
   LET g_dzda_m.dzdamoddt = cl_get_current()
   LET g_dzda_m.dzdastus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE dzda_t 
      SET (dzdastus,dzdamodid,dzdamoddt) 
        = (g_dzda_m.dzdastus,g_dzda_m.dzdamodid,g_dzda_m.dzdamoddt)     
    WHERE  dzda001 = g_dzda_m.dzda001
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN ""
            CALL gfrm_curr.setElementImage("statechange", "stus/32/.png")
 
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE adzi400_master_referesh USING g_dzda_m.dzda001 INTO g_dzda_m.dzda001,g_dzda_m.dzda003, 
          g_dzda_m.dzda002,g_dzda_m.dzda005,g_dzda_m.dzda006,g_dzda_m.dzda007,g_dzda_m.dzda008,g_dzda_m.dzda009, 
          g_dzda_m.dzda010,g_dzda_m.dzdastus,g_dzda_m.dzdaownid,g_dzda_m.dzdaowndp,g_dzda_m.dzdacrtid, 
          g_dzda_m.dzdacrtdp,g_dzda_m.dzdacrtdt,g_dzda_m.dzdamodid,g_dzda_m.dzdamoddt,g_dzda_m.dzdaownid_desc, 
          g_dzda_m.dzdaowndp_desc,g_dzda_m.dzdacrtid_desc,g_dzda_m.dzdacrtdp_desc,g_dzda_m.dzdamodid_desc 

	  
	  #將資料顯示到畫面上
	  DISPLAY BY NAME g_dzda_m.dzda001,g_dzda_m.dzda003,g_dzda_m.dzda002,g_dzda_m.dzda005,g_dzda_m.dzda006, 
    g_dzda_m.dzda007,g_dzda_m.dzda008,g_dzda_m.dzda009,g_dzda_m.dzda010,g_dzda_m.dzdastus,g_dzda_m.dzdaownid, 
    g_dzda_m.dzdaownid_desc,g_dzda_m.dzdaowndp,g_dzda_m.dzdaowndp_desc,g_dzda_m.dzdacrtid,g_dzda_m.dzdacrtid_desc, 
    g_dzda_m.dzdacrtdp,g_dzda_m.dzdacrtdp_desc,g_dzda_m.dzdacrtdt,g_dzda_m.dzdamodid,g_dzda_m.dzdamodid_desc, 
    g_dzda_m.dzdamoddt
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 

{</section>}

{<section id="adzi400.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION adzi400_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define" edit="s"/>}
   #end add-point  
   #add-point:idx_chk段define
   {<point name="idx_chk.define_customerization" edit="c"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_dzdb_d.getLength() THEN
         LET g_detail_idx = g_dzdb_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_dzdb_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_dzdb_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_dzdb2_d.getLength() THEN
         LET g_detail_idx = g_dzdb2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_dzdb2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_dzdb2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_dzdb3_d.getLength() THEN
         LET g_detail_idx = g_dzdb3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_dzdb3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_dzdb3_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 4 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail4")
      IF g_detail_idx > g_dzdb4_d.getLength() THEN
         LET g_detail_idx = g_dzdb4_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_dzdb4_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_dzdb4_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 5 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail5")
      IF g_detail_idx > g_dzdb5_d.getLength() THEN
         LET g_detail_idx = g_dzdb5_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_dzdb5_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_dzdb5_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="adzi400.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION adzi400_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define" edit="s"/>}
   #end add-point
   #add-point:b_fill2段define
   {<point name="b_fill2.define_customerization" edit="c"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL adzi400_detail_show()
   
END FUNCTION

{</section>}

{<section id="adzi400.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION adzi400_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define" edit="s"/>}
   #end add-point
   #add-point:fill_chk段define
   {<point name="fill_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1')  AND 
      (cl_null(g_wc2_table4) OR g_wc2_table4.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION

{</section>}

{<section id="adzi400.signature" >}
   

{</section>}

{<section id="adzi400.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION adzi400_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_dzda_m.dzda001
   LET g_pk_array[1].column = 'dzda001'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 

{</section>}

{<section id="adzi400.other_dialog" readonly="Y" >}
   

{</section>}

{<section id="adzi400.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

