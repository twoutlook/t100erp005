#+ Version..: T100-ERP-1.00.00(版次:1) Build-000
#+ 
#+ Filename...: sadzp188_gen4rp.4gl 
#+ Description: 報表樣板產生程式
#+ Modifier...: No.150616-00029#1 15/06/16 Cynthia  純英數字串不寫入多語言檔(gzge_t)
#+ Modifier...: No.150901-00021#1 15/09/01 Cynthia  將adz中,使用到cl_gr跟cl_xg的FUNCTION獨立出來, 降低關聯性
#+ Modifier...: No.151123-00005#2 15/11/24 Cynthia  x_imaal_t_imaal003此類欄位別名先將說明寫入多語言檔(gzge_t)
#+ Modifier...: No.151208-00023#1 15/12/09 Cynthia  調整從gztz_t抓取table名時，要排除備份檔(rebuil)
#+ Modifier...: No.160608-00012#1 16/06/08 Cynthia  T100 Light架構調整
#+ Modifier...: No.160629-00012#1 16/06/29 Cynthia  1.報表樣板多語言功能
#                                                   2.禁用字詞錯誤訊息彙總

IMPORT os
IMPORT security 

SCHEMA ds

GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"

CONSTANT HGAP = "0.1"
#CONSTANT VGAP = "0.05"
CONSTANT MAXLENGTH = "6.0"
CONSTANT CHARWIDTH = "0.2"

DEFINE g_dzgg001            LIKE dzgg_t.dzgg001 #報表元件代號
DEFINE g_dzgg002            LIKE dzgg_t.dzgg002 #版次
DEFINE g_gzza001            LIKE gzza_t.gzza001 #參考程式來源
DEFINE g_dzgg017            LIKE dzgg_t.dzgg017 #識別碼
DEFINE g_cust_flag          LIKE type_t.chr1    #客製否

DEFINE g_4rpid              LIKE gzgd_t.gzgd000 
DEFINE g_dzgg               RECORD LIKE dzgg_t.*
DEFINE g_node_sub_c         om.DomNode
DEFINE g_node_Masters       om.DomNode
DEFINE g_node_Master_c      om.DomNode
DEFINE g_node_Master_c1     om.DomNode
DEFINE g_node_Master_c2     om.DomNode
DEFINE g_node_DetailH_c     om.DomNode
DEFINE g_node_Detail_c      om.DomNode
DEFINE g_node_Label         om.DomNode
DEFINE g_node_Value_rtl     om.DomNode
DEFINE g_node_Value         om.DomNode
DEFINE g_node_Dec_rtl       om.DomNode
DEFINE g_node_Dec           om.DomNode
DEFINE g_node_NumFmt        om.DomNode
DEFINE g_node_subrep        om.DomNode
DEFINE g_node_COLDEF        om.DomNode
DEFINE g_node_Head_Col      om.DomNode
DEFINE g_node_Body_ValueCol om.DomNode
DEFINE g_node_Body_DecCol   om.DomNode
DEFINE g_node_Date_rtl      om.DomNode

DEFINE g_content_width      LIKE type_t.num15_3  #紙張扣除左右邊界後的寬度
DEFINE g_paper_width        LIKE gzgi_t.gzgi004  #紙張寬度
DEFINE g_paper_length       LIKE gzgi_t.gzgi005  #紙張高度
DEFINE g_paper_unit         STRING               #紙張單位
DEFINE g_langs              DYNAMIC ARRAY OF LIKE gzzy_t.gzzy001
DEFINE g_erpid              STRING               #160608-00012#1 add

#產生時統一產生繁體中文樣板，再展成簡體中文
PUBLIC FUNCTION sadzp188_gen4rp(p_rep_code,p_prog_ver,p_ref_prog,p_dzgg017)
   DEFINE p_rep_code        LIKE dzgg_t.dzgg001 #報表元件代號
   DEFINE p_prog_ver        LIKE dzgg_t.dzgg002 #版次
   DEFINE p_ref_prog        LIKE gzza_t.gzza001 #參考程式來源 
   DEFINE p_dzgg017         LIKE dzgg_t.dzgg017 #識別碼
   DEFINE l_logpath         STRING   #log   
   DEFINE l_now_str         STRING   #log
   DEFINE l_4rppath         STRING   #產生後的4rp檔路徑
   DEFINE l_4rppath_w       STRING   #產生後的4rp檔路徑(掛載至報表主機)
   DEFINE l_4rpdir          STRING  
   DEFINE l_4rpdir_w        STRING  
   DEFINE l_rootnode        om.DomNode
   DEFINE l_node_list       om.NodeList
   DEFINE l_curnode         om.DomNode
   DEFINE l_curnode_name    STRING
   DEFINE i,l_i             INTEGER 
   DEFINE l_str             STRING
   DEFINE l_modul           LIKE gzza_t.gzza003
   DEFINE l_cmd             STRING
   DEFINE l_result          BOOLEAN
   DEFINE l_gzde002         LIKE gzde_t.gzde002 #歸屬模組
   DEFINE l_success         LIKE type_t.num5
   DEFINE l_lbl_msg         STRING    #141224 add  
   DEFINE l_type            STRING
   DEFINE l_msg             STRING 
 
   LET g_rep_code = p_rep_code
   LET g_dzgg001  = p_rep_code 
   LET g_dzgg002  = p_prog_ver
   LET g_gzza001  = p_ref_prog
   LET g_dzgg017  = p_dzgg017
   IF g_dzgg017 = 's' THEN 
      LET g_cust_flag = "s"
   ELSE 
      LET g_cust_flag = "c"
   END IF    

   LET g_erpid = NVL(FGL_GETENV("ERPID"),"T100ERP")                        #160608-00012#1 add
   
   SELECT gzde002 INTO l_modul FROM gzde_t t WHERE gzde001= g_dzgg001
#   LET l_4rpdir = cl_gr_get_4rpdir(g_dzgg001,g_cust_flag,"zh_TW","L")     #150901-00021#1 mark 
   LET l_4rpdir = cl_rpt_get_4rpdir(g_dzgg001,g_cust_flag,"zh_TW","L")     #150901-00021#1 add
   LET l_4rppath = os.Path.join(l_4rpdir,g_dzgg001 CLIPPED ||".4rp")
    
#   LET l_4rpdir_w = cl_gr_get_4rpdir(g_dzgg001,g_cust_flag,"zh_TW","M")   #150901-00021#1 mark 
   LET l_4rpdir_w = cl_rpt_get_4rpdir(g_dzgg001,g_cust_flag,"zh_TW","M")   #150901-00021#1 add
   LET l_4rppath_w = os.Path.join(l_4rpdir_w,g_dzgg001 CLIPPED||".4rp") 
   #DISPLAY "l_4rppath_w:",l_4rppath_w 
 
   #判斷檔案是否存在,存在的話需先備份
   IF os.Path.exists(l_4rppath) THEN
      CALL os.Path.copy(l_4rppath, l_4rppath || ".bak") RETURNING l_result 
      CALL os.Path.chrwx(l_4rppath||".bak",511) RETURNING l_result 
   END IF

   #取得語言列表
#   CALL cl_gr_lang_list() RETURNING g_langs   #150901-00021#1 mark
   CALL cl_rpt_lang_list() RETURNING g_langs   #150901-00021#1 add
   
   #將資料寫入GR報表樣板主檔(gzgd_t)
   CALL sadzp188_gen4rp_gzgd()
    
   #如果有輸入參考程式,需處理多語言資料
   IF g_gzza001 IS NOT NULL THEN
      CALL sadzp188_gen4rp_get_uilang()
   END IF 
   
   #將自訂義欄位說明寫入gzge_t 
   CALL sadzp188_gen4rp_get_combolang()

   #將組合欄位資料寫入gzge_t
   CALL sadzp188_gen4rp_get_combilang()   #151123-00005#2 add  
         
   #讀取基本4rp template檔
   CALL sadzp188_gen4rp_base4rp() RETURNING l_rootnode
    
   #讀取sliced template檔中的node 
   CALL sadzp188_gen4rp_sliced()

   #處理GROUP節點
   CALL sadzp188_gen4rp_group(l_rootnode)

   #處理子報表
   CALL sadzp188_gen4rp_subrep(l_rootnode,l_4rpdir,l_4rpdir_w)     

   #處理單頭
   CALL sadzp188_gen4rp_Master(l_rootnode) 

   #處理單身
   CASE g_dzgg.dzgg015
      WHEN 'Y'
         CALL sadzp188_gen4rp_DetailTable(l_rootnode)   #單身表格化
      OTHERWISE
         CALL sadzp188_gen4rp_Detail(l_rootnode)        #標準單身
   END CASE
    
   CALL l_rootnode.writeXml(l_4rppath)

   #修改權限
   CALL os.Path.chrwx(l_4rppath,511) RETURNING l_result
   DISPLAY "INFO: 產生4RP檔案成功，路徑為 ",l_4rppath

   IF g_erpid = "T100ERP" THEN                     #160608-00012#1 add
      #複製至掛載目錄,判斷檔案是否存在,存在的話需先備份
      IF os.Path.exists(l_4rppath_w) THEN
         CALL os.Path.copy(l_4rppath_w, l_4rppath_w || ".bak") RETURNING l_result 
         CALL os.Path.chrwx(l_4rppath_w||".bak",511) RETURNING l_result 
      END IF
      DISPLAY "l_4rppath_w:",l_4rppath_w 
      #判斷路徑是否存在(掛載是否成功)
      IF os.Path.exists(l_4rpdir_w) THEN
         CALL os.Path.copy(l_4rppath, l_4rppath_w) RETURNING l_result 
         CALL os.Path.chrwx(l_4rppath_w,511) RETURNING l_result    
      ELSE
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'adz-00271'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()
       
         #連線失敗寫入log檔
         CALL sadzp188_gen4rp_logfile(l_4rppath_w) 
      END IF 
   END IF                                          #160608-00012#1 add
   
   #將繁體中文展成其他語言
   #SELECT gzde002 INTO l_gzde002 FROM gzde_t WHERE gzde001 = p_rep_code
   #取得模組別
   LET l_type = sadzp060_2_chk_spec_type(p_rep_code)
   IF l_type="N" THEN
      LET l_msg = "ERROR:程式",p_rep_code,"找不到類別,請確認是否已經註冊"
      DISPLAY "E",l_msg
      RETURN FALSE
   END IF

   LET l_gzde002 = sadzp062_1_find_module(p_rep_code, l_type)
   LET l_gzde002 = DOWNSHIFT(l_gzde002)   

   FOR l_i = 1 TO g_langs.getLength()   
      IF g_langs[l_i] != "zh_TW" THEN
         CALL sadzp188_multilang_4rp_gen("",l_gzde002,p_rep_code,p_rep_code,"zh_TW",g_langs[l_i],"Y") RETURNING l_success,l_lbl_msg
      END IF   
   END FOR  

   #150327 add(s)
   #登入語言是簡中的話，需轉成繁中，因為mdl檔都是繁中，故作此轉換
   #160629-00012#1 add   #各語系也需這樣轉換
   IF g_lang != "zh_TW" THEN            #160629-00012#1 add
#   IF g_lang = "zh_CN" THEN            #160629-00012#1 mark
      CALL sadzp188_multilang_4rp_gen("",l_gzde002,p_rep_code,p_rep_code,g_lang,"zh_TW","Y") RETURNING l_success,l_lbl_msg
   END IF
   #150327 add(e)
END FUNCTION

#讀取基本4rp template檔
PRIVATE FUNCTION sadzp188_gen4rp_base4rp()
   DEFINE l_rootnode         om.DomNode
   DEFINE l_doc              om.DomDocument
   DEFINE l_node_list        om.NodeList
   DEFINE l_curnode          om.DomNode
   DEFINE l_tmppath          STRING   #template路徑
   DEFINE l_margin_str       STRING   #上下左右邊界共用
   DEFINE l_str              STRING
   DEFINE l_unit             STRING   #單位
  
   #將template欄位屬性讀入陣列
   CASE g_dzgg.dzgg015
      WHEN 'Y'
         LET l_tmppath = os.Path.join(FGL_GETENV("ERP") CLIPPED,"mdl"),os.Path.separator(),"4rp_02.template" #標準單身
      OTHERWISE
         LET l_tmppath = os.Path.join(FGL_GETENV("ERP") CLIPPED,"mdl"),os.Path.separator(),"4rp_01.template" #單身表格化
   END CASE    
    
   LET l_doc = om.DomDocument.createFromXmlFile(l_tmppath)

   #INITIALIZE g_dzgg.* TO NULL  #140409 改到adzp188_gen4rp_gzgd撈資料
   #SELECT * INTO g_dzgg.* FROM dzgg_t WHERE dzgg001 = g_dzgg001 AND dzgg002 = g_dzgg002 AND dzgg003 = g_dzgg001
   IF l_doc IS NOT NULL THEN
      LET l_rootnode = l_doc.getDocumentElement()
      #SELECT * INTO g_dzgg.* FROM dzgg_t WHERE dzgg001 = g_dzgg001 AND dzgg002 = g_dzgg002 AND dzgg003 = g_dzgg001
       
      #設定紙張長寬及邊界
      #取得紙張大小、紙張寬度、高度、單位  #紙張方向?
      CALL sadzp188_gen4rp_get_paper_size(g_dzgg.dzgg008)
          
      CASE UPSHIFT(g_dzgg.dzgg014)
         WHEN "C"  LET l_unit = "cm"
         WHEN "I"  LET l_unit = "inch" 
         OTHERWISE LET l_unit = "cm"  #單位預設為公分
      END CASE

      LET l_node_list = l_rootnode.selectByTagName("report:Settings")
      IF l_node_list.getLength() >= 1 THEN
         LET l_curnode = l_node_list.item(1)
         #紙張方向為直向
         IF UPSHIFT(g_dzgg.dzgg009) = "P" THEN
            LET  l_str = g_paper_width USING "##&.&&"
            LET  l_str = l_str.trim(),g_paper_unit
            CALL l_curnode.removeAttribute("RWPageWidth")
            CALL l_curnode.setAttribute("RWPageWidth",l_str)
            LET  l_str = g_paper_length USING "##&.&&"
            LET  l_str = l_str.trim(),g_paper_unit
            CALL l_curnode.removeAttribute("RWPageLength")
            CALL l_curnode.setAttribute("RWPageLength",l_str)
         ELSE #紙張方向為橫向
            LET  l_str = g_paper_length USING "##&.&&"
            LET  l_str = l_str.trim(),g_paper_unit
            CALL l_curnode.removeAttribute("RWPageWidth")
            CALL l_curnode.setAttribute("RWPageWidth",l_str)
            LET  l_str = g_paper_width USING "##&.&&"
            LET  l_str = l_str.trim(),g_paper_unit
            CALL l_curnode.removeAttribute("RWPageLength")
            CALL l_curnode.setAttribute("RWPageLength",l_str)
         END IF
         LET  l_margin_str = g_dzgg.dzgg012 USING "##&.&&"
         LET  l_margin_str = l_margin_str.trim(),l_unit
         CALL l_curnode.removeAttribute("RWLeftMargin")
         CALL l_curnode.setAttribute("RWLeftMargin",l_margin_str)
         LET  l_margin_str = g_dzgg.dzgg010 USING "##&.&&"
         LET  l_margin_str = l_margin_str.trim(),l_unit
         CALL l_curnode.removeAttribute("RWTopMargin")
         CALL l_curnode.setAttribute("RWTopMargin",l_margin_str)
         LET  l_margin_str = g_dzgg.dzgg013 USING "##&.&&"
         LET  l_margin_str = l_margin_str.trim(),l_unit
         CALL l_curnode.removeAttribute("RWRightMargin")
         CALL l_curnode.setAttribute("RWRightMargin",l_margin_str)
         LET  l_margin_str = g_dzgg.dzgg011 USING "##&.&&"
         LET  l_margin_str = l_margin_str.trim(),l_unit
         CALL l_curnode.removeAttribute("RWBottomMargin")
         CALL l_curnode.setAttribute("RWBottomMargin",l_margin_str)
      END IF 

      #設定報表名稱及rdd名稱
      LET l_node_list = l_rootnode.selectByTagName("report:Data")
      IF l_node_list.getLength() >= 1 THEN
         LET l_curnode = l_node_list.item(1)
         CALL l_curnode.removeAttribute("RWDataLocation")
         CALL l_curnode.setAttribute("RWDataLocation",g_dzgg001||".rdd")
         CALL l_curnode.removeAttribute("RWFglReportName")
         CALL l_curnode.setAttribute("RWFglReportName",g_dzgg001||"_rep")
      END IF
   END IF  #l_doc IS NOT NULL

   RETURN l_rootnode
END FUNCTION

################################################################################
# Descriptions...: Group
# Memo...........: 
# Usage..........: CALL sadzp188_gen4rp_group(p_rootnode) 
# Input parameter: p_rootnode
# ...............: 
# Return code....: 
# Date & Author..: 2014/02/25 By Cynthia
# Modify.........:
################################################################################
PRIVATE FUNCTION sadzp188_gen4rp_group(p_rootnode)
   DEFINE p_rootnode         om.DomNode 
   DEFINE l_node_list        om.NodeList
   DEFINE l_curnode          om.DomNode
   DEFINE l_parent           om.DomNode
   DEFINE l_parname          STRING
   DEFINE l_curnode_name     STRING
   DEFINE l_group1           LIKE dzge_t.dzge006   #GROUP1的欄位代號
   DEFINE l_group2           LIKE dzge_t.dzge006   #GROUP2的欄位代號
   DEFINE i                  INTEGER
  
   #GROUP 設定
   SELECT dzge006 INTO l_group1 FROM dzge_t
    WHERE dzge001 = g_dzgg001   #報表元件代號
      AND dzge002 = g_dzgg002   #版次
      AND dzge003 = "2"         #印出的才是Group 
      AND dzge004 = 1           #順序
      AND dzge009 = g_dzgg017   #識別標示

   SELECT dzge006 INTO l_group2 FROM dzge_t
    WHERE dzge001 = g_dzgg001   #報表元件代號
      AND dzge002 = g_dzgg002   #版次
      AND dzge003 = "2"         #印出的才是Group 
      AND dzge004 = 2           #順序
      AND dzge009 = g_dzgg017   #識別標示
       
   LET l_node_list = p_rootnode.selectByTagName("rtl:match")
   IF l_node_list.getLength() >= 1 THEN
      FOR i=1 TO l_node_list.getLength() 
         LET l_curnode = l_node_list.item(i)
         LET l_parent = l_curnode.getParent()
         LET l_parname = l_parent.getAttribute("name")
         LET l_curnode_name = l_curnode.getAttribute("nameConstraint")
          
         #Group1
         IF l_parname = "Report" AND l_curnode_name = "Group" THEN
            CALL l_curnode.removeAttribute("name")
            CALL l_curnode.setAttribute("name","Group "||l_group1)
         END IF
              
         IF l_parname = "ReportHeaders" AND l_curnode_name = "BeforeGroup" THEN
            CALL l_curnode.removeAttribute("name")
            CALL l_curnode.setAttribute("name","BeforeGroup "||l_group1)
         END IF

         #判斷是否為單身表格化
         IF g_dzgg.dzgg015 = "Y" THEN
            IF l_parname = "DetailBody" AND l_curnode_name = "Group" THEN
               CALL l_curnode.removeAttribute("name")
               CALL l_curnode.setAttribute("name","Group "||l_group1)
            END IF
         ELSE
            IF l_parname = "Page Root" AND l_curnode_name = "Group" THEN
               CALL l_curnode.removeAttribute("name")
               CALL l_curnode.setAttribute("name","Group "||l_group1)
            END IF                       
         END IF
           
         IF l_parname = "Page Root" AND l_curnode_name = "AfterGroup" THEN
            CALL l_curnode.removeAttribute("name")
            CALL l_curnode.setAttribute("name","AfterGroup "||l_group2)
         END IF
      END FOR
   END IF  

END FUNCTION

################################################################################
# Descriptions...: 單頭 
# Memo...........: 
# Usage..........: CALL sadzp188_gen4rp_Master(p_rootnode)
# Input parameter: p_rootnode 
# ...............: 
# Return code....: 
# Date & Author..: 2014/02/25 By Cynthia
# Modify.........:
################################################################################
PRIVATE FUNCTION sadzp188_gen4rp_Master(p_rootnode)
   DEFINE p_rootnode         om.DomNode
   DEFINE l_node_list        om.NodeList
   DEFINE l_node_list1       om.NodeList
   DEFINE l_curnode          om.DomNode
   DEFINE l_curnode1         om.DomNode
   DEFINE l_tmpnode          om.DomNode
   DEFINE l_tmpnode1         om.DomNode
   DEFINE l_masternode       om.DomNode
   DEFINE l_masternode2      om.DomNode
   DEFINE l_parent           om.DomNode
   DEFINE l_child            om.DomNode
   DEFINE l_dzgh             DYNAMIC ARRAY OF RECORD
          dzgh008            LIKE dzgh_t.dzgh008,  #單頭順序   ex:Master01_01,Master01_02
          dzgh007            LIKE dzgh_t.dzgh007,  #欄位編號
          dzgh010            LIKE dzgh_t.dzgh010,  #欄位別名
          gzge003            LIKE gzge_t.gzge003   #欄位說明
          END RECORD 
   DEFINE l_curnode_name     STRING
   DEFINE l_curnode_name1    STRING
   DEFINE l_str              STRING 
   DEFINE l_sql              STRING 
   DEFINE i,j                INTEGER
   DEFINE li_cnt             LIKE type_t.num5
   DEFINE l_master_cnt       LIKE type_t.num5      #Master容器個數
   DEFINE l_lblwidth         LIKE type_t.num15_3   #欄位寬度
   DEFINE l_pos              DYNAMIC ARRAY OF LIKE type_t.num15_3
   DEFINE l_master_width     LIKE type_t.num15_3   #單頭區塊寬度
   DEFINE l_master1_width    LIKE type_t.num15_3   #單頭1區塊寬度  #140902 單頭區塊調整 add
   DEFINE l_typestr          STRING
   DEFINE l_val_str          STRING
   DEFINE l_lbl_str          STRING
   DEFINE l_rtl_str          STRING
   DEFINE l_date_rtl_str     STRING 
   DEFINE l_unit             STRING
   DEFINE l_numfmt           STRING                #GR 數值格式
   DEFINE l_numfmt_x         LIKE gzgg_t.gzgg008   #XG 數值格式
   DEFINE l_numfmt_str       STRING 
   DEFINE l_node_Head_rtl    om.DomNode
    
   LET l_node_list = p_rootnode.selectByTagName("LAYOUTNODE")

   #取得紙張扣除左右邊界後的寬度
   #紙張單位和紙張邊界單位相等
   IF UPSHIFT(g_dzgg.dzgg009) = "P" THEN #紙張為直向
      LET g_content_width = g_paper_width - g_dzgg.dzgg012 - g_dzgg.dzgg013
      #如果單位是英吋,轉成公分
      IF g_paper_unit.toUpperCase() = "I" THEN
         LET g_content_width = g_content_width*2.54
      END IF  
   ELSE  #紙張為橫向
      LET g_content_width = g_paper_length - g_dzgg.dzgg012 - g_dzgg.dzgg013
      #如果單位是英吋,轉成公分
      IF g_paper_unit.toUpperCase() = "I" THEN
         LET g_content_width = g_content_width*2.54
      END IF  
   END IF   

   LET l_unit = "cm"  #預設為cm
     
   IF l_node_list.getLength() >= 1 THEN
      FOR i=1 TO l_node_list.getLength() 
         LET l_curnode = l_node_list.item(i)
         LET l_curnode_name = l_curnode.getAttribute("name")
         IF l_curnode_name = "RHMasters"  THEN
            LET li_cnt = 1
 
            IF g_dzgg.dzgg004 >= 1 THEN  #單頭區塊個數不為0,建立Masters
               #計算單頭區塊寬度(單頭區塊小於2:使用max/區塊個數;單頭區塊超過3:第一個區塊固定7cm,其餘區塊均分剩餘寬度)
               IF g_dzgg.dzgg004 <= 2 THEN  #140902 add
                  LET l_master_width = g_content_width / g_dzgg.dzgg004
                  LET l_master1_width = l_master_width
               ELSE
                  LET l_master_width = (g_content_width - 7) / (g_dzgg.dzgg004 - 1)
                  LET l_master1_width = 7                 
               END IF
               #LET l_master_width = g_content_width / g_dzgg.dzgg004  #140902 mark
                                    
               LET l_sql = "SELECT dzgh008,dzgh007,dzgh010", 
                           " FROM dzgh_t ",
                           " WHERE dzgh001 = '",g_dzgg001,"'",
                           "   AND dzgh002 = '",g_dzgg002,"'",
                           #"   AND dzgh003 = '",g_dzgg003,"'",
                           "   AND dzgh003 = '",g_dzgg001,"'",
                           "   AND dzgh005 = '1'",  #區塊類別，單頭為1
                           "   AND dzgh012 = '",g_dzgg017,"'",
                           "   AND dzgh006 = ?",
                           " ORDER BY dzgh008"
               PREPARE dzgh_master_prepare FROM l_sql
               DECLARE dzgh_master_cur CURSOR FOR dzgh_master_prepare   

               #建立Master容器個數(例:Master01)
               FOR l_master_cnt = 1 TO g_dzgg.dzgg004
                  CALL sadzp188_gen4rp_tagnum(g_node_Master_c1,"RHMaster",l_master_cnt,'') RETURNING g_node_Master_c1
                  IF l_master_cnt = 1 THEN
                     LET l_str = l_master1_width
                  ELSE
                     LET l_str = l_master_width
                  END IF   
                  LET l_str = l_str.trim(),"cm"
                  CALL g_node_Master_c1.setAttribute("width",l_str)
                  LET l_str = g_node_Master_c1.toString()
                  LET l_masternode = l_curnode.parse(l_str)
                    
                  #先產生"欄位說明及欄位"的容器(例:Master01_01)，將欄位及欄位說明填入Master容器 
                  FOREACH dzgh_master_cur USING l_master_cnt INTO l_dzgh[li_cnt].dzgh008,l_dzgh[li_cnt].dzgh007,l_dzgh[li_cnt].dzgh010      #140408 add                     
                     CALL sadzp188_gen4rp_tagnum(g_node_Master_c2,"RHMaster",l_master_cnt,l_dzgh[li_cnt].dzgh008) RETURNING g_node_Master_c2
                     IF g_dzgg.dzgg015 = 'Y' THEN
                        CALL g_node_Master_c2.removeAttribute("marginRightWidth")
                        CALL g_node_Master_c2.setAttribute("marginLeftWidth","0.1cm")
                     END IF
                        
                     LET l_str = g_node_Master_c2.toString()
                     LET l_masternode2 = l_masternode.parse(l_str)                         
        
                     CALL sadzp188_gen4rp_get_field_label(l_dzgh[li_cnt].dzgh007,g_lang,g_4rpid) RETURNING l_dzgh[li_cnt].gzge003 #取出欄位說明

                     #create欄位說明
                     CALL sadzp188_gen4rp_get_lbllen(l_dzgh[li_cnt].gzge003)  RETURNING l_lblwidth
                     LET l_str = l_dzgh[li_cnt].dzgh010   
                     LET l_str = "sr1.",l_str.trim(),"RH_Label"
                     CALL g_node_Label.setAttribute("name",l_str)
                     LET l_str = l_lblwidth
                     LET l_str = l_str.trim(),l_unit
                     CALL g_node_Label.setAttribute("width",l_str)
                     LET l_str =  l_dzgh[li_cnt].gzge003 CLIPPED
                     LET l_str = l_str,":"
                     CALL g_node_Label.setAttribute("text",l_str )
            
                     #LET l_str = l_pos[l_dzgh[li_cnt].dzgh008]
                     #LET l_str = l_str.trim(),l_unit
                     #CALL g_node_Label.setAttribute("y",l_str)
                         
                     LET l_str = g_node_Label.toString()
                     LET l_tmpnode = l_masternode2.parse(l_str)

                     #取得欄位資料型態
                     CALL sadzp188_gen4rp_get_type(g_rep_code,l_dzgh[li_cnt].dzgh007,l_dzgh[li_cnt].dzgh010) RETURNING l_typestr, l_numfmt, l_numfmt_x

                     #create欄位資料
                     CASE l_typestr
                        WHEN "FGLNumeric"
                           LET l_str = l_dzgh[li_cnt].dzgh010
                           LET l_str = "sr1.",l_str.trim() 
                           CALL g_node_Dec_rtl.setAttribute("name",l_str) 
                           LET l_rtl_str = g_node_Dec_rtl.toString()
                         
                           LET l_str = l_dzgh[li_cnt].dzgh010
                           LET l_str = l_str.trim()
                           LET l_str = "sr1.",l_str,"RH_Value"
                      
                           CALL g_node_Dec.setAttribute("name",l_str)
                           LET l_str = "{{sr1.",l_dzgh[li_cnt].dzgh010,"}}"
                           CALL g_node_Dec.setAttribute("value",l_str)

                           LET l_lblwidth = 2  #單頭欄位寬度寫死
                           LET l_str = l_lblwidth
                           LET l_str = l_str.trim()
                           LET l_str = l_str,l_unit
                           CALL g_node_Dec.setAttribute("width",l_str) 

                           #判斷數值欄位是否需要加format
                           #IF NOT cl_null(l_numfmt) THEN
                           IF NOT cl_null(l_numfmt) AND l_numfmt <> "DATE" THEN  
                              LET l_str = "{{",l_numfmt,"}}"
                              CALL g_node_Dec.setAttribute("format",l_str)

                              CALL g_node_NumFmt.setAttribute("name",l_numfmt)
                              LET l_numfmt_str = g_node_NumFmt.toString()
                           END IF
                                 
                           LET l_val_str = g_node_Dec.toString()
                           CALL g_node_Dec.removeAttribute("format")                               
                    
                        OTHERWISE #"FGLString" 
                           LET l_str = l_dzgh[li_cnt].dzgh010
                           LET l_str = "sr1.",l_str.trim() 
                           CALL g_node_Value_rtl.setAttribute("name",l_str) 
                           LET l_rtl_str = g_node_Value_rtl.toString()
                              
                           LET l_str = l_dzgh[li_cnt].dzgh010
                           LET l_str = l_str.trim()
                           LET l_str = "sr1.",l_str,"RH_Value"
                     
                           CALL g_node_Value.setAttribute("name",l_str)
                           LET l_str = "{{sr1.",l_dzgh[li_cnt].dzgh010,"}}"
                           CALL g_node_Value.setAttribute("text",l_str)
 
                           LET l_lblwidth = 2  #欄位寬度先寫死
                           LET l_str = l_lblwidth
                           LET l_str = l_str.trim(),l_unit
                           CALL g_node_Value.setAttribute("width",l_str) 
                                                                  
                           #判斷是否為日期格式，是的話需要加format及rtl
                           IF l_numfmt = "DATE" THEN
                              LET l_str = "{{sr1.",l_dzgh[li_cnt].dzgh010 CLIPPED,".isoValue.trim().isEmpty()?\"\":Date.fromIsoValue(sr1.",l_dzgh[li_cnt].dzgh010 CLIPPED,".isoValue).format(g_date_fmt)}}"
                              CALL g_node_Value.setAttribute("text",l_str)
                                    
                              CALL g_node_Date_rtl.setAttribute("name","g_date_fmt")
                              LET l_date_rtl_str  = g_node_Date_rtl.toString()
                           END IF                                 
                           LET l_val_str = g_node_Value.toString()                                  
                     END CASE      

                     #加入數值格式rtl       
                     IF NOT cl_null(l_numfmt) AND l_numfmt <> "DATE" THEN 
                        LET l_tmpnode = l_masternode2.parse(l_numfmt_str)
                     ELSE 
                        IF l_numfmt = "DATE" THEN
                           LET l_tmpnode = l_masternode2.parse(l_date_rtl_str)
                        END IF
                     END IF
                     LET l_tmpnode = l_masternode2.parse(l_rtl_str)
                     LET l_tmpnode = l_masternode2.parse(l_val_str)
                     LET li_cnt = li_cnt + 1
                  END FOREACH  
               END FOR  #FOR l_master_cnt = 1 TO g_dzgg.dzgg004
               LET li_cnt = li_cnt - 1 
            ELSE
               #刪除Master
               LET l_parent = l_curnode.getParent()
               CALL l_parent.removeChild(l_curnode)
            END IF #g_dzgg.dzgg004 >= 1
         END IF #l_curnode_name = "Masters"
      END FOR
   END IF

   LET l_node_list = p_rootnode.selectByTagName("LAYOUTNODE")
   IF l_node_list.getLength() >= 1 THEN
      FOR i=1 TO l_node_list.getLength()         
         LET l_curnode = l_node_list.item(i)
         LET l_curnode_name = l_curnode.getAttribute("name")
         IF l_curnode_name = "RHMasters"  THEN    
            LET l_tmpnode = l_curnode
            
            LET l_str = l_tmpnode.toString()
            LET l_str = cl_replace_str(l_str, "RH", "PH")
         END IF 
      END FOR
   END IF  

   LET l_node_list = p_rootnode.selectByTagName("LAYOUTNODE")
   IF l_node_list.getLength() >= 1 THEN
      FOR i=1 TO l_node_list.getLength()
         LET l_curnode = l_node_list.item(i)
         LET l_curnode_name = l_curnode.getAttribute("name")
         IF l_curnode_name = "PageHeaders"  THEN
            LET l_tmpnode = l_curnode.parse(l_str)
         END IF
         
      END FOR
   END IF

   LET l_node_list = p_rootnode.selectByTagName("LAYOUTNODE")
   IF l_node_list.getLength() >= 1 THEN
      FOR i=1 TO l_node_list.getLength()
         LET l_curnode = l_node_list.item(i)
         LET l_curnode_name = l_curnode.getAttribute("name")

         #IF l_curnode_name = "PHDetailHeaders" THEN
         #   LET l_parent = l_curnode.getParent()   
         #   LET l_node_Head_rtl = g_node_Date_rtl
         #   CALL l_node_Head_rtl.setAttribute("name","g_grPageHeader.head_loc")
         #   CALL l_node_Head_rtl.setAttribute("expectedLocation","expectedAhead") 
         #   LET l_rtl_str = l_node_Head_rtl.toString()

         #   LET l_tmpnode = l_parent.parse(l_rtl_str)
         #   LET l_tmpnode = l_parent.getLastChild()
         #   CALL l_parent.insertBefore(l_tmpnode,l_curnode)               
         #END IF 
         
         IF l_curnode_name = "PageHeader" OR l_curnode_name = "PHMasters" THEN
            LET l_parent = l_curnode.getParent()   
            LET l_node_Head_rtl = g_node_Date_rtl
            CALL l_node_Head_rtl.setAttribute("name","g_grPageHeader.head_loc")
            CALL l_node_Head_rtl.setAttribute("expectedLocation","expectedBefore") 
            LET l_rtl_str = l_node_Head_rtl.toString()

            LET l_tmpnode = l_parent.parse(l_rtl_str)
            LET l_tmpnode = l_parent.getLastChild()
            CALL l_parent.insertBefore(l_tmpnode,l_curnode)               

            CALL l_curnode.setAttribute("rtl:condition","g_grPageHeader.head_loc==\"1\"") 
         END IF 
         
      END FOR
   END IF

   CLOSE dzgh_master_cur
   FREE dzgh_master_cur
   FREE dzgh_master_prepare
END FUNCTION

################################################################################
# Descriptions...: 標準單身 
# Memo...........: 
# Usage..........: CALL sadzp188_gen4rp_Detail(p_rootnode)
# Input parameter: p_rootnode 
# ...............: 
# Return code....: 
# Date & Author..: 2014/02/26 By Cynthia
# Modify.........:
################################################################################
PRIVATE FUNCTION sadzp188_gen4rp_Detail(p_rootnode)
   DEFINE p_rootnode         om.DomNode
   DEFINE l_node_list        om.NodeList
   DEFINE l_curnode          om.DomNode
   DEFINE l_subnode          om.DomNode
   DEFINE l_subnode1         om.DomNode
   DEFINE l_tmpnode          om.DomNode
   DEFINE l_detailnode       om.DomNode
   DEFINE l_dzgh             DYNAMIC ARRAY OF RECORD
          dzgh007            LIKE dzgh_t.dzgh007,  #欄位編號
          dzgh008            LIKE dzgh_t.dzgh008,  #區塊順序   ex:Master01,Master02
          dzgh010            LIKE dzgh_t.dzgh010,  #欄位別名
          gzge003            LIKE gzge_t.gzge003,  #欄位說明
          lblwidth           LIKE type_t.num15_3   #欄位說明寬度
          END RECORD 
   DEFINE l_dzgh006          LIKE dzgh_t.dzgh006   #所屬區塊編號 ex:單頭1,單頭2
   DEFINE l_subname          STRING
   DEFINE l_curnode_name     STRING
   DEFINE l_str              STRING 
   DEFINE l_sql              STRING 
   DEFINE i                  INTEGER
   DEFINE li_cnt             LIKE type_t.num5
   DEFINE l_cnt_child        LIKE type_t.num5
   DEFINE l_val_str          STRING
   DEFINE l_date_rtl_str     STRING  
   DEFINE l_lbl_str          STRING
   DEFINE l_rtl_str          STRING
   DEFINE l_typestr          STRING
   DEFINE l_unit             STRING                #單位
   DEFINE l_numfmt           STRING                #數值格式 
   DEFINE l_numfmt_x         LIKE gzgg_t.gzgg008   #XG 數值格式
   DEFINE l_numfmt_str       STRING
   DEFINE l_parent           om.DomNode
   DEFINE l_node_Head_rtl    om.DomNode
   
   LET l_unit = "cm"  #預設為cm

   SELECT MAX(dzgh006) INTO l_cnt_child FROM dzgh_t     #取得單身行數 
    WHERE dzgh001 = g_dzgg001 AND dzgh002 = g_dzgg002 AND dzgh003 = g_dzgg001 AND dzgh005 = '2'

   #置換子報表的merge
   #<COL name="Detail_subrep02_Col" colspan="0"> colspan應該填=(N-1)
   LET l_node_list = p_rootnode.selectByTagName("COL")
   IF l_node_list.getLength() >= 1 THEN  
      FOR i=1 TO l_node_list.getLength() 
         LET l_curnode = l_node_list.item(i)
         LET l_curnode_name = l_curnode.getAttribute("name")

         IF l_curnode_name = "Detail_subrep02_Col" OR l_curnode_name = "Detail_subrep03_Col" THEN
            CALL l_curnode.removeAttribute("colspan")             
            CALL l_curnode.setAttribute("colspan",l_cnt_child -1)           
         END IF
      END FOR
   END IF   
           
   LET l_sql = "SELECT UNIQUE dzgh006 FROM dzgh_t t",
               " WHERE dzgh001 = '",g_dzgg001,"'",
               "   AND dzgh002 = '",g_dzgg002,"'",
               "   AND dzgh003 = '",g_dzgg001,"'",
               "   AND dzgh012 = '",g_dzgg017,"'",
               "   AND dzgh005 = '2'",  #區塊類別，單身為2
               " ORDER BY dzgh006"
   PREPARE detailcnt_prepare FROM l_sql
   DECLARE detailcnt_cursor CURSOR FOR detailcnt_prepare
                     
   LET l_sql = "SELECT dzgh007,dzgh008,dzgh010",
               " FROM dzgh_t ",
               " WHERE dzgh001 = '",g_dzgg001,"'",
               "   AND dzgh002 = '",g_dzgg002,"'",
               "   AND dzgh003 = '",g_dzgg001,"'",
               "   AND dzgh012 = '",g_dzgg017,"'",
               "   AND dzgh005 = '2'",  #區塊類別，單身為2
               "   AND dzgh006 = ?",
               " ORDER BY dzgh008"
   PREPARE dzgh_detail_prepare FROM l_sql
   DECLARE dzgh_detail_cur CURSOR FOR dzgh_detail_prepare     
          
   LET l_node_list = p_rootnode.selectByTagName("LAYOUTNODE")
   IF l_node_list.getLength() >= 1 THEN  
      FOR i=1 TO l_node_list.getLength() 
         LET l_curnode = l_node_list.item(i)
         LET l_curnode_name = l_curnode.getAttribute("name")

         #DetailHeader 
         IF l_curnode_name = "RHDetailHeaders"  THEN
            LET li_cnt = 1
            #建立DetailHeader容器個數
            FOREACH detailcnt_cursor INTO l_dzgh006
               CALL sadzp188_gen4rp_tagnum(g_node_DetailH_c,"RHDetailHeader",l_dzgh006,'') RETURNING g_node_DetailH_c
               LET l_str = g_node_DetailH_c.toString()
               LET l_detailnode = l_curnode.parse(l_str)
                        
               #將欄位說明填入DetailHeader容器 
               FOREACH dzgh_detail_cur USING l_dzgh006 INTO l_dzgh[li_cnt].dzgh007,l_dzgh[li_cnt].dzgh008,l_dzgh[li_cnt].dzgh010
                  CALL sadzp188_gen4rp_get_field_label(l_dzgh[li_cnt].dzgh007,g_lang,g_4rpid) RETURNING l_dzgh[li_cnt].gzge003 #取出欄位說明
                  #create欄位說明
                  CALL sadzp188_gen4rp_get_lbllen(l_dzgh[li_cnt].gzge003)  RETURNING l_dzgh[li_cnt].lblwidth
                  LET l_str = l_dzgh[li_cnt].dzgh010
                  LET l_str = "sr1.",l_str.trim(),"RH_Label"
                  CALL g_node_Label.setAttribute("name",l_str)
                  LET l_dzgh[li_cnt].lblwidth= l_dzgh[li_cnt].lblwidth+2
                  LET l_str = l_dzgh[li_cnt].lblwidth
                  LET l_str = l_str.trim(),l_unit
                  CALL g_node_Label.setAttribute("width",l_str)
                  CALL g_node_Label.setAttribute("text",l_dzgh[li_cnt].gzge003 )
                  CALL g_node_Label.removeAttribute("y")
                           
                  LET l_str = g_node_Label.toString()
                  LET l_tmpnode = l_detailnode.parse(l_str)
                  LET li_cnt = li_cnt + 1
               END FOREACH
            END FOREACH 
            LET li_cnt = li_cnt - 1  
         END IF #l_curnode_name = "DetailHeaders"
      END FOR
   END IF #l_node_list.getLength() >= 1

   LET l_node_list = p_rootnode.selectByTagName("MINIPAGE")
   IF l_node_list.getLength() >= 1 THEN  
      FOR i=1 TO l_node_list.getLength() 
         LET l_curnode = l_node_list.item(i)
         LET l_curnode_name = l_curnode.getAttribute("name")

         SELECT MAX(dzgh006) INTO l_cnt_child FROM dzgh_t     #取得單身行數 
          WHERE dzgh001 = g_dzgg001 AND dzgh002 = g_dzgg002 AND dzgh003 = g_dzgg001 AND dzgh005 = '2'
              
         #Details
         IF l_curnode_name = "Details"  THEN
            LET li_cnt = l_curnode.getChildCount()
            IF li_cnt>0 THEN
               LET l_subnode = l_curnode.getLastChild()
               LET l_subname = l_subnode.getAttribute("name")
               IF l_subname = "subrep03" THEN
                  CALL l_curnode.removeChild(l_subnode)  #先將subrep03的node存入l_subnode,並刪除
               END IF
            END IF
            LET li_cnt = 1
            #建立Details容器個數
            FOREACH detailcnt_cursor INTO l_dzgh006
               CALL sadzp188_gen4rp_tagnum(g_node_Detail_c,"Detail",l_dzgh006,'') RETURNING g_node_Detail_c
               LET l_str = g_node_Detail_c.toString()
               LET l_detailnode = l_curnode.parse(l_str)
                   
               #將欄位資料填入Details容器 
               FOREACH dzgh_detail_cur USING l_dzgh006 INTO l_dzgh[li_cnt].dzgh007,l_dzgh[li_cnt].dzgh008,l_dzgh[li_cnt].dzgh010
                  CALL sadzp188_gen4rp_get_field_label(l_dzgh[li_cnt].dzgh007,g_lang,g_4rpid) RETURNING l_dzgh[li_cnt].gzge003 #取出欄位說明
                  #create欄位資料
                  #取得欄位資料型態
                  CALL sadzp188_gen4rp_get_type(g_rep_code,l_dzgh[li_cnt].dzgh007,l_dzgh[li_cnt].dzgh010) RETURNING l_typestr, l_numfmt, l_numfmt_x

                  CASE l_typestr
                     WHEN "FGLNumeric"
                        LET l_str = l_dzgh[li_cnt].dzgh010 
                        LET l_str = "sr1.",l_str.trim()
                        CALL g_node_Dec_rtl.setAttribute("name",l_str) 
                        LET l_rtl_str = g_node_Dec_rtl.toString()
                                   
                        LET l_str = l_dzgh[li_cnt].dzgh010 
                        LET l_str = l_str.trim()
                        LET l_str = "sr1.",l_str,"_Value"
                        CALL g_node_Dec.setAttribute("name",l_str)
                        LET l_str = "{{sr1.",l_dzgh[li_cnt].dzgh010,"}}" 
                        CALL g_node_Dec.setAttribute("value",l_str)
                        CALL g_node_Dec.removeAttribute("y")
                             
                        #判斷數值欄位是否需要加format
                        IF NOT cl_null(l_numfmt) AND l_numfmt <> "DATE" THEN
                           LET l_str = "{{",l_numfmt,"}}"
                           CALL g_node_Dec.setAttribute("format",l_str)

                           CALL g_node_NumFmt.setAttribute("name",l_numfmt)
                           LET l_numfmt_str = g_node_NumFmt.toString()
                        END IF
                        LET l_str = l_dzgh[li_cnt].lblwidth
                        LET l_str = l_str.trim(),l_unit
                        CALL g_node_Dec.setAttribute("width",l_str)
                        LET l_val_str = g_node_Dec.toString()   
                        CALL g_node_Dec.removeAttribute("format")
                                                     
                     OTHERWISE #"FGLString"
                        LET l_str = l_dzgh[li_cnt].dzgh010
                        LET l_str = "sr1.",l_str.trim()
                        CALL g_node_Value_rtl.setAttribute("name",l_str) 
                        LET l_rtl_str = g_node_Value_rtl.toString()

                        LET l_str = l_dzgh[li_cnt].dzgh010
                        LET l_str = l_str.trim()
                        LET l_str = "sr1.",l_str,"_Value"
                        CALL g_node_Value.setAttribute("name",l_str)
                        LET l_str = "{{sr1.",l_dzgh[li_cnt].dzgh010,"}}" 
                        CALL g_node_Value.setAttribute("text",l_str)
                        CALL g_node_Value.removeAttribute("y")
 
                        LET l_str = l_dzgh[li_cnt].lblwidth
                        LET l_str = l_str.trim()
                        LET l_str = l_str,"cm"
                        CALL g_node_Value.setAttribute("width",l_str)
                                                                    
                        #判斷是否為日期格式，是的話需要加format及rtl
                        IF l_numfmt = "DATE" THEN
                           LET l_str = "{{sr1.",l_dzgh[li_cnt].dzgh010 CLIPPED,".isoValue.trim().isEmpty()?\"\":Date.fromIsoValue(sr1.",l_dzgh[li_cnt].dzgh010 CLIPPED,".isoValue).format(g_date_fmt)}}"
                           CALL g_node_Value.setAttribute("text",l_str)
                                     
                           CALL g_node_Date_rtl.setAttribute("name","g_date_fmt")
                           LET l_date_rtl_str  = g_node_Date_rtl.toString()
                        END IF                                                           
                        LET l_val_str = g_node_Value.toString()                                  
                  END CASE
                                  
                  #加入數值格式rtl       
                  IF NOT cl_null(l_numfmt) AND l_numfmt <> "DATE" THEN 
                     LET l_tmpnode = l_detailnode.parse(l_numfmt_str)
                  ELSE IF l_numfmt = "DATE" THEN
                          LET l_date_rtl_str  = g_node_Value_rtl.toString() 
                       END IF 
                  END IF
                                  
                  LET l_tmpnode = l_detailnode.parse(l_rtl_str)
                  LET l_tmpnode = l_detailnode.parse(l_val_str)
                  LET li_cnt = li_cnt + 1
               END FOREACH
            END FOREACH 
            LET li_cnt = li_cnt - 1  
            #將subrep03的node再寫入
            IF l_subname = "subrep03" THEN
               CALL l_curnode.appendChild(l_subnode)               
            END IF
         END IF #l_curnode_name = "Details"
              
      END FOR
   END IF #l_node_list.getLength() >= 1
     
     
   LET l_node_list = p_rootnode.selectByTagName("LAYOUTNODE")
   IF l_node_list.getLength() >= 1 THEN
      FOR i=1 TO l_node_list.getLength()         
         LET l_curnode = l_node_list.item(i)
         LET l_curnode_name = l_curnode.getAttribute("name")
         IF l_curnode_name = "RHDetailHeaders"  THEN    
            LET l_tmpnode = l_curnode
            LET l_str = l_tmpnode.toString()
            LET l_str = cl_replace_str(l_str, "RH", "PH")
         END IF 
      END FOR
   END IF 
   
   LET l_node_list = p_rootnode.selectByTagName("LAYOUTNODE")
   IF l_node_list.getLength() >= 1 THEN
      FOR i=1 TO l_node_list.getLength() 
         LET l_curnode = l_node_list.item(i)
         LET l_curnode_name = l_curnode.getAttribute("name")
         IF l_curnode_name = "PageHeaders"  THEN   
            LET l_tmpnode = l_curnode.parse(l_str) 
         END IF 
      END FOR
   END IF 

   LET l_node_list = p_rootnode.selectByTagName("LAYOUTNODE")
   IF l_node_list.getLength() >= 1 THEN
      FOR i=1 TO l_node_list.getLength()
         LET l_curnode = l_node_list.item(i)
         LET l_curnode_name = l_curnode.getAttribute("name")

         IF l_curnode_name = "PHDetailHeaders" THEN
            LET l_parent = l_curnode.getParent()   
            LET l_node_Head_rtl = g_node_Date_rtl
            CALL l_node_Head_rtl.setAttribute("name","g_grPageHeader.head_loc")
            CALL l_node_Head_rtl.setAttribute("expectedLocation","expectedAhead") 
            LET l_rtl_str = l_node_Head_rtl.toString()

            LET l_tmpnode = l_parent.parse(l_rtl_str)
            LET l_tmpnode = l_parent.getLastChild()
            CALL l_parent.insertBefore(l_tmpnode,l_curnode)               
         END IF          
      END FOR
   END IF
      
   LET l_node_list = p_rootnode.selectByTagName("MINIPAGE")
   IF l_node_list.getLength() >= 1 THEN
      FOR i=1 TO l_node_list.getLength() 
         LET l_curnode = l_node_list.item(i)
         LET l_curnode_name = l_curnode.getAttribute("name")
         IF l_curnode_name = "subrep03"  THEN   
            LET l_parent = l_curnode.getParent()   
            LET l_rtl_str = "<rtl:input-variable name=\"l_subrep03_show\" type=\"FGLString\" expectedLocation=\"expectedWayAhead\"/>"

            LET l_tmpnode = l_parent.parse(l_rtl_str)
            LET l_tmpnode = l_parent.getLastChild()
            CALL l_parent.insertBefore(l_tmpnode,l_curnode)  
         END IF 
      END FOR
   END IF 

   CLOSE detailcnt_cursor
   FREE detailcnt_cursor
   FREE detailcnt_prepare

   CLOSE dzgh_detail_cur
   FREE dzgh_detail_cur
   FREE dzgh_detail_prepare
END FUNCTION

################################################################################
# Descriptions...: 單身表格化 
# Memo...........: 
# Usage..........: CALL sadzp188_gen4rp_DetailTable(p_rootnode)
# Input parameter: p_rootnode 
# Return code....: 
# Date & Author..: 2014/04/30 By Cynthia
# Modify.........:
################################################################################
PRIVATE FUNCTION sadzp188_gen4rp_DetailTable(p_rootnode)
   DEFINE p_rootnode           om.DomNode
   DEFINE l_node_list          om.NodeList
   DEFINE l_node_list2         om.NodeList
   DEFINE l_node_Body_DecCol   om.DomNode
   DEFINE l_node_Body_ValueCol om.DomNode
   DEFINE l_curnode            om.DomNode
   DEFINE l_child              om.DomNode
   DEFINE l_node_numfmt        om.DomNode  
   DEFINE l_subnode            om.DomNode
   DEFINE l_tmpnode            om.DomNode
   DEFINE l_detailnode         om.DomNode
   DEFINE l_parent             om.DomNode
   DEFINE l_dzgh               DYNAMIC ARRAY OF RECORD
          dzgh007              LIKE dzgh_t.dzgh007,  #欄位編號
          dzgh008              LIKE dzgh_t.dzgh008,  #區塊順序    ex:Master01,Master02
          dzgh010              LIKE dzgh_t.dzgh010,  #欄位別名
          gzge003              LIKE gzge_t.gzge003,  #欄位說明
          lblwidth             LIKE type_t.num15_3   #欄位說明寬度
          END RECORD 
   DEFINE l_parname            STRING
   DEFINE l_chiname            STRING
   DEFINE l_subname            STRING
   DEFINE l_curnode_name       STRING
   DEFINE l_pos                DYNAMIC ARRAY OF LIKE type_t.num15_3 
   DEFINE l_str                STRING 
   DEFINE l_sql                STRING 
   DEFINE i                    INTEGER
   DEFINE li_cnt               LIKE type_t.num5
   DEFINE li_chi_cnt           LIKE type_t.num5
   DEFINE li_col_cnt           LIKE type_t.num5
   DEFINE l_tmp_cnt            LIKE type_t.num5
   DEFINE l_cnt_child          LIKE type_t.num5
   DEFINE l_val_str            STRING
   DEFINE l_lbl_str            STRING
   DEFINE l_rtl_str            STRING
   DEFINE l_typestr            STRING                #欄位型態 數值或字串
   DEFINE l_unit               STRING
   DEFINE l_numfmt             STRING
   DEFINE l_numfmt_x           LIKE gzgg_t.gzgg008   #XG 數值格式
   DEFINE l_numfmt_str         STRING 
   DEFINE l_colspan            LIKE type_t.num5
  
  
   LET l_unit = "cm"  #預設為cm
   LET l_sql = "SELECT dzgh007,dzgh008,dzgh010",
               " FROM dzgh_t ",
               " WHERE dzgh001 = '",g_dzgg001,"'",
               "   AND dzgh002 = '",g_dzgg002,"'",
               "   AND dzgh003 = '",g_dzgg001,"'",
               "   AND dzgh012 = '",g_dzgg017,"'",
               "   AND dzgh005 = '2'",  #區塊類別，單頭為2
               #"   AND dzgh006 = ?",  #單身只會有一行 mark
               "   AND dzgh006 = 1 ",
               " ORDER BY dzgh008"
   PREPARE dzgh_detail_table_prepare FROM l_sql
   DECLARE dzgh_detail_table_cur CURSOR FOR dzgh_detail_table_prepare                 

   #取得Col個數
   SELECT MAX(dzgh008) INTO l_cnt_child FROM dzgh_t     
    WHERE dzgh001 = g_dzgg001 AND dzgh002 = g_dzgg002 AND dzgh003 = g_dzgg001 AND dzgh005 = '2' AND dzgh006 = 1 AND dzgh012 = g_dzgg017
          
   #根據dzgh008編號建立Table Colunm數
   LET l_node_list = p_rootnode.selectByTagName("COLDEFS")
   IF l_node_list.getLength() >= 1 THEN  
      FOR i=1 TO l_node_list.getLength()
         LET l_curnode = l_node_list.item(i)
         LET l_curnode_name = l_curnode.getAttribute("name")
         IF l_curnode_name = "DetailColdefs" THEN
            CALL g_node_COLDEF.setAttribute("pWidth","1") 
            LET l_str = g_node_COLDEF.toString()
            FOR l_tmp_cnt =  1 TO l_cnt_child
               LET l_tmpnode = l_curnode.parse(l_str)
            END FOR                     
         END IF
      END FOR   
   END IF

#140909   
   #根據dzgh008編號修改子報表Merge Cell的屬性
   LET l_node_list = p_rootnode.selectByTagName("COL")
   IF l_node_list.getLength() >= 1 THEN  
      FOR i=1 TO l_node_list.getLength()
         LET l_curnode = l_node_list.item(i)
         LET l_curnode_name = l_curnode.getAttribute("name")
         LET l_colspan = l_cnt_child - 1
         IF l_curnode_name = "Detail_subrep02_Col" OR l_curnode_name = "Detail_subrep03_Col" THEN
            CALL l_curnode.setAttribute("colspan",l_colspan)                    
         END IF
      END FOR   
   END IF
   
   #建立單身表格
   LET l_node_list = p_rootnode.selectByTagName("ROW")
   IF l_node_list.getLength() >= 1 THEN
      FOR i=1 TO l_node_list.getLength() 
         LET l_curnode = l_node_list.item(i)
         LET l_curnode_name = l_curnode.getAttribute("name")

         #建立單身表格的Head
         IF l_curnode_name = "DetailHead01" THEN  
            LET li_cnt = 1
            FOREACH dzgh_detail_table_cur INTO l_dzgh[li_cnt].dzgh007,l_dzgh[li_cnt].dzgh008,l_dzgh[li_cnt].dzgh010  
               FOR li_col_cnt = 1 TO li_cnt
                  #變更Head的流水號
                  CALL sadzp188_gen4rp_tagnum(g_node_Head_Col,"DetailHead01_Col",l_dzgh[li_cnt].dzgh008,'') RETURNING g_node_Head_Col
                           
                  #create欄位說明
                  CALL sadzp188_gen4rp_get_field_label(l_dzgh[li_cnt].dzgh007,g_lang,g_4rpid) RETURNING l_dzgh[li_cnt].gzge003 #取出欄位說明
                  LET l_str = l_dzgh[li_cnt].dzgh010 
                  LET l_str = "sr1.",l_str.trim(),"_Label"
                  LET l_child = g_node_Head_Col.getChildByIndex(1)
                  CALL l_child.setAttribute("name",l_str)
                  CALL l_child.setAttribute("text",l_dzgh[li_cnt].gzge003 ) 

                  LET l_str = g_node_Head_Col.toString()
                  LET l_tmpnode = l_curnode.parse(l_str)
                  #LET li_cnt = li_cnt + 1
               END FOR    
            END FOREACH
         END IF #建立單身表格的Head

         #建立單身表格的Body
         IF l_curnode_name = "Detail01" THEN
            LET li_cnt = 1
            FOREACH dzgh_detail_table_cur INTO l_dzgh[li_cnt].dzgh007,l_dzgh[li_cnt].dzgh008,l_dzgh[li_cnt].dzgh010
               CALL sadzp188_gen4rp_get_field_label(l_dzgh[li_cnt].dzgh007,g_lang,g_4rpid) RETURNING l_dzgh[li_cnt].gzge003 #取出欄位說明
               #取得欄位資料型態
               CALL sadzp188_gen4rp_get_type(g_rep_code,l_dzgh[li_cnt].dzgh007,l_dzgh[li_cnt].dzgh010) RETURNING l_typestr, l_numfmt, l_numfmt_x
               #create欄位資料

               CASE l_typestr
                  WHEN "FGLNumeric"
                     LET l_node_Body_DecCol = g_node_Body_DecCol
                     #變更Body的流水號
                     CALL sadzp188_gen4rp_tagnum(l_node_Body_DecCol,"Detail01_Col",l_dzgh[li_cnt].dzgh008,'') RETURNING l_node_Body_DecCol                                  

                     #修改rtl標籤
                     LET l_child = l_node_Body_DecCol.getChildByIndex(2) 
                     LET l_str = l_dzgh[li_cnt].dzgh010
                     LET l_str = l_str.trim()
                     LET l_str = "sr1.",l_str                             
                     CALL l_child.setAttribute("name",l_str) 

                     #修改DECIMALFORMATBOX 
                     LET l_child = l_node_Body_DecCol.getChildByIndex(3)
                     LET l_str = l_str,"_Value"
                     CALL l_child.setAttribute("name",l_str)
                                  
                     LET l_str = "{{sr1.",l_dzgh[li_cnt].dzgh010,"}}"       
                     CALL l_child.setAttribute("value",l_str)
 
                     #判斷數值欄位是否需要加format及數值格式rtl
                     IF NOT cl_null(l_numfmt) AND l_numfmt <> "DATE" THEN
                        LET l_str = "{{",l_numfmt,"}}"
                        CALL l_child.setAttribute("format",l_str)

                        LET l_child = l_node_Body_DecCol.getChildByIndex(1)                         
                        CALL l_child.setAttribute("name",l_numfmt)
                     ELSE
                        LET l_child = l_node_Body_DecCol.getChildByIndex(1)
                        CALL l_child.setAttribute("name",g_grNumFmt.N202)
                     END IF                            

                     CALL l_node_Body_DecCol.removeAttribute("format")
                     LET l_val_str = l_node_Body_DecCol.toString()
                                  
                     OTHERWISE #"FGLString"
                        LET l_node_Body_ValueCol = g_node_Body_ValueCol
                        #變更Body的流水號
                        CALL sadzp188_gen4rp_tagnum(l_node_Body_ValueCol,"Detail01_Col",l_dzgh[li_cnt].dzgh008,'') RETURNING l_node_Body_ValueCol                            
                        #修改rtl標籤 
                        LET l_child = l_node_Body_ValueCol.getChildByIndex(2)
                        LET l_str = l_dzgh[li_cnt].dzgh010
                        LET l_str = l_str.trim()
                        LET l_str = "sr1.",l_str                             
                        CALL l_child.setAttribute("name",l_str)
 
                        #修改WORDWRAPBOX
                        LET l_child = l_node_Body_ValueCol.getChildByIndex(3)
                        LET l_str = l_str,"_Value"
                        CALL l_child.setAttribute("name",l_str)

                        LET l_str = "{{sr1.",l_dzgh[li_cnt].dzgh010,"}}"
                        CALL l_child.setAttribute("text",l_str)
                                 
                        #判斷是否為日期格式，是的話需要加format及rtl
                        IF l_numfmt = "DATE" THEN
                           LET l_str = "{{sr1.",l_dzgh[li_cnt].dzgh010 CLIPPED,".isoValue.trim().isEmpty()?\"\":Date.fromIsoValue(sr1.",l_dzgh[li_cnt].dzgh010 CLIPPED,".isoValue).format(g_date_fmt)}}"
                           CALL l_child.setAttribute("text",l_str)
                                     
                           LET l_child = l_node_Body_ValueCol.getChildByIndex(1)
                           CALL l_child.setAttribute("name","g_date_fmt")                                  
                        END IF 
                        LET l_val_str = l_node_Body_ValueCol.toString()
                        CALL l_node_Body_ValueCol.removeAttribute("format")                                  
                        LET l_val_str = l_node_Body_ValueCol.toString()                                  
               END CASE
                                                          
               LET l_tmpnode = l_curnode.parse(l_val_str)
               LET li_cnt = li_cnt + 1
            END FOREACH
         END IF   #建立單身表格的Body             
      END FOR #FOR i=1 TO l_node_list.getLength()
   END IF #l_node_list ROW

   CLOSE dzgh_detail_table_cur
   FREE dzgh_detail_table_cur
   FREE dzgh_detail_table_prepare   
END FUNCTION

################################################################################
# Descriptions...: 處理子報表節點 
# Memo...........: 
# Usage..........: CALL sadzp188_gen4rp_subrep(p_rootnode,p_4rpdir,p_4rpdir_w)  
# Input parameter: p_rootnode
# ...............: p_4rpdir
# ...............: p_4rpdir_w
# Return code....: 
# Date & Author..: 2014/02/12 By Cynthia
# Modify.........:
################################################################################
PRIVATE FUNCTION sadzp188_gen4rp_subrep(p_rootnode,p_4rpdir,p_4rpdir_w)
   DEFINE p_rootnode        om.DomNode
   DEFINE p_4rpdir          STRING
   DEFINE p_4rpdir_w        STRING
   DEFINE l_node_list       om.NodeList
   DEFINE l_subnode         om.DomNode
   DEFINE l_curnode         om.DomNode
   DEFINE l_parent          om.DomNode
   DEFINE l_child           om.DomNode
   DEFINE l_nodename        STRING
   DEFINE l_parname         STRING
   DEFINE i                 INTEGER
   DEFINE l_str             STRING
   DEFINE l_str_c           STRING
   DEFINE l_ooff103_L       STRING 
   DEFINE l_unit            STRING
   DEFINE l_buf             base.StringBuffer
   DEFINE l_margin_str      STRING   #上下左右邊界共用
   DEFINE l_sub4rppath      STRING   #產生後的4rp檔LINUX路徑
   DEFINE l_sub4rppath_w    STRING   #產生後的4rp檔WINDOWS路徑
   DEFINE l_cmd             STRING
   DEFINE l_result          BOOLEAN
   DEFINE l_lblwidth        LIKE type_t.num15_3

   #每份報表都要埋4個備註子報表  
   LET l_node_list = p_rootnode.selectByTagName("rtl:call-report")
   IF l_node_list.getLength() >= 1 THEN
      FOR i=1 TO l_node_list.getLength()
         LET l_curnode = l_node_list.item(i) 
         LET l_str = l_curnode.getAttribute("name")
         LET l_buf = base.StringBuffer.create()
         CALL l_buf.append(l_str)
         CALL l_buf.replace("{key}",g_dzgg.dzgg003||"-"||g_dzgg.dzgg003,1)
         LET l_str = l_buf.toString()
         CALL l_curnode.setAttribute("name",l_str)

         LET l_str = l_curnode.getAttribute("url")
         LET l_buf = base.StringBuffer.create()
         CALL l_buf.append(l_str)
         CALL l_buf.replace("{key}",g_dzgg.dzgg003,1)
         LET l_str = l_buf.toString()
         CALL l_curnode.setAttribute("url",l_str)
      END FOR 
   END IF  #l_node_list.getLength() >= 1

   CASE g_dzgg.dzgg004
      WHEN "C"  LET l_unit = "cm"
      WHEN "I"  LET l_unit = "inch" 
      OTHERWISE LET l_unit = "cm"  #單位預設為公分
   END CASE
        
   CALL sadzp188_gen4rp_get_field_label("ooff013",g_lang,g_4rpid) RETURNING l_ooff103_L #取出欄位說明
   LET l_ooff103_L = l_ooff103_L,":"
   CALL sadzp188_gen4rp_get_lbllen("ooff013")  RETURNING l_lblwidth #取得欄位寬度
   LET l_lblwidth = l_lblwidth+0.1
        
   FOR i = 1 TO 4
      LET l_node_list = g_node_subrep.selectByTagName("report:Settings")
      IF l_node_list.getLength() >= 1 THEN
         LET l_curnode = l_node_list.item(1)
         LET  l_str = g_paper_width USING "##&.&&"
         LET  l_str = l_str.trim(),g_paper_unit
         CALL l_curnode.removeAttribute("RWPageWidth")
         CALL l_curnode.setAttribute("RWPageWidth",l_str)
         LET  l_str = g_paper_length USING "##&.&&" 
         LET  l_str = l_str.trim(),g_paper_unit
         CALL l_curnode.removeAttribute("RWPageLength")
         CALL l_curnode.setAttribute("RWPageLength",l_str)
         LET  l_margin_str = g_dzgg.dzgg012 USING "##&.&&"
         LET  l_margin_str = l_margin_str.trim(),l_unit
         CALL l_curnode.removeAttribute("RWLeftMargin")
         CALL l_curnode.setAttribute("RWLeftMargin",l_margin_str)
         LET  l_margin_str = g_dzgg.dzgg010 USING "##&.&&"
         LET  l_margin_str = l_margin_str.trim(),l_unit
         CALL l_curnode.removeAttribute("RWTopMargin")
         CALL l_curnode.setAttribute("RWTopMargin",l_margin_str)
         LET  l_margin_str = g_dzgg.dzgg013 USING "##&.&&"
         LET  l_margin_str = l_margin_str.trim(),l_unit
         CALL l_curnode.removeAttribute("RWRightMargin")
         CALL l_curnode.setAttribute("RWRightMargin",l_margin_str)
         LET  l_margin_str = g_dzgg.dzgg011 USING "##&.&&"
         LET  l_margin_str = l_margin_str.trim(),l_unit
         CALL l_curnode.removeAttribute("RWBottomMargin")
         CALL l_curnode.setAttribute("RWBottomMargin",l_margin_str)
      END IF 
      
      #設定報表名稱及rdd名稱
      LET l_node_list = g_node_subrep.selectByTagName("report:Data")
      IF l_node_list.getLength() >= 1 THEN
         LET l_curnode = l_node_list.item(1)
         CALL l_curnode.removeAttribute("RWDataLocation")
         CALL l_curnode.setAttribute("RWDataLocation",g_dzgg001||".rdd")
         CALL l_curnode.removeAttribute("RWFglReportName")
         CALL l_curnode.setAttribute("RWFglReportName",g_dzgg001||"_subrep0"||i)
      END IF 

      LET l_str = "sr2.ooff013"  
      #設定rtl
      LET l_node_list = g_node_subrep.selectByTagName("rtl:input-variable")
      IF l_node_list.getLength() >= 1 THEN
         LET l_curnode = l_node_list.item(1)
         CALL l_curnode.removeAttribute("name")
         CALL l_curnode.setAttribute("name",l_str)
      END IF 

      #設定WORDWRAPBOX
      LET l_node_list = g_node_subrep.selectByTagName("WORDWRAPBOX")
      IF l_node_list.getLength() >= 1 THEN
         #欄位說明
         LET l_curnode = l_node_list.item(1)
         LET l_str_c = l_str,"_Label"
         CALL l_curnode.removeAttribute("name")
         CALL l_curnode.setAttribute("name",l_str_c)
               
         CALL l_curnode.removeAttribute("text")
         CALL l_curnode.setAttribute("text",l_ooff103_L)               

         LET l_str_c =  l_lblwidth
         LET l_str_c = l_str_c.trim(),"cm"
         CALL l_curnode.setAttribute("width",l_str_c)
               
         #欄位資料
         LET l_curnode = l_node_list.item(2)
         LET l_str_c = l_str,"_Value"
         CALL l_curnode.removeAttribute("name")
         CALL l_curnode.setAttribute("name",l_str_c)

         LET l_str = "{{",l_str,"}}"
         CALL l_curnode.removeAttribute("text")
         CALL l_curnode.setAttribute("text",l_str)               
      END IF 

      #寫成檔案
      LET l_str = i
      LET l_str = g_dzgg001 CLIPPED,"_subrep0",l_str.trim(),".4rp"  #子報表檔案名稱
      LET l_sub4rppath = os.Path.join(p_4rpdir,l_str)
      LET l_sub4rppath_w = os.Path.join(p_4rpdir_w,l_str)
        
      #判斷檔案是否存在,存在的話需先備份
      IF os.Path.exists(l_sub4rppath) THEN
         CALL os.Path.copy(l_sub4rppath, l_sub4rppath || ".bak") RETURNING l_result
         CALL os.Path.chrwx(l_sub4rppath||".bak",511) RETURNING l_result 
      END IF

      CALL g_node_subrep.writeXml(l_sub4rppath)
 
      #修改權限
      CALL os.Path.chrwx(l_sub4rppath,511) RETURNING l_result

      IF g_erpid = "T100ERP" THEN             #160608-00012#1 add
         #複製至掛載目錄,判斷檔案是否存在,存在的話需先備份
         IF os.Path.exists(l_sub4rppath_w) THEN
            CALL os.Path.copy(l_sub4rppath_w, l_sub4rppath_w || ".bak") RETURNING l_result
            CALL os.Path.chrwx(l_sub4rppath_w||".bak",511) RETURNING l_result
         END IF
         #判斷路徑是否存在(掛載是否成功)
         IF os.Path.exists(p_4rpdir_w) THEN
            CALL os.Path.copy(l_sub4rppath, l_sub4rppath_w) RETURNING l_result
            CALL os.Path.chrwx(l_sub4rppath_w,511) RETURNING l_result
         END IF
     END IF                                   #160608-00012#1 add
   END FOR  
   
END FUNCTION

################################################################################
# Descriptions...: 擷取sliced中的node 
# Memo...........: 
# Usage..........: CALL sadzp188_gen4rp_sliced() 
# Input parameter:
# ...............: 
# Return code....: 
# Date & Author..: 2014/02/24 By Cynthia
# Modify.........:
################################################################################
PRIVATE FUNCTION sadzp188_gen4rp_sliced()
   DEFINE l_sliced_tmppath   STRING   #template路徑
   DEFINE l_sliced_doc       om.DomDocument
   DEFINE l_sliced_node      om.DomNode
   DEFINE l_sliced_node_list om.NodeList
   DEFINE l_curnode          om.DomNode
   DEFINE l_child_nod        om.DomNode
   DEFINE l_child_name       STRING
   DEFINE i                  INTEGER 

   LET l_sliced_tmppath = os.Path.join(FGL_GETENV("ERP") CLIPPED,"mdl"),os.Path.separator(),"4rp_01_sliced.template"
   LET l_sliced_doc = om.DomDocument.createFromXmlFile(l_sliced_tmppath)

   IF l_sliced_doc IS NOT NULL THEN
      LET l_sliced_node = l_sliced_doc.getDocumentElement()
      LET l_sliced_node_list = l_sliced_node.selectByTagName("Sliced")
      IF l_sliced_node_list.getLength() >= 1 THEN
         FOR i=1 TO l_sliced_node_list.getLength()
            LET l_sliced_node = l_sliced_node_list.item(i)
            LET l_child_name = l_sliced_node.getAttribute("name")
            
            #子報表容器
            IF l_child_name = "sub_c" THEN
               LET g_node_sub_c = l_sliced_node.getFirstChild()  
            END IF 

            #單頭區塊  #先保留 不需要才刪除
            IF l_child_name = "Masters" THEN
               LET g_node_Masters = l_sliced_node.getFirstChild()  
            END IF 

            #單頭容器
            IF l_child_name = "Master_c" THEN 
               LET g_node_Master_c = l_sliced_node.getFirstChild()
            END IF 

            #單頭容器
            IF l_child_name = "Master_c1" THEN 
               LET g_node_Master_c1 = l_sliced_node.getFirstChild()
            END IF 
            
            #單頭容器
            IF l_child_name = "Master_c2" THEN 
               LET g_node_Master_c2 = l_sliced_node.getFirstChild()
            END IF 
            
            #單身說明容器
            IF l_child_name = "DetailH_c" THEN
               LET g_node_DetailH_c = l_sliced_node.getFirstChild() 
            END IF 

            #單身容器
            IF l_child_name = "Detail_c" THEN
               LET g_node_Detail_c = l_sliced_node.getFirstChild() 
            END IF 

            #說明欄位
            IF l_child_name = "Label" THEN
               LET g_node_Label = l_sliced_node.getFirstChild()  
            END IF 

            #日期格式rtl
            IF l_child_name = "Date_rtl" THEN
               LET g_node_Date_rtl = l_sliced_node.getFirstChild() 
            END IF 
            
            #文字欄位rtl
            IF l_child_name = "Value_rtl" THEN
               LET g_node_Value_rtl = l_sliced_node.getFirstChild() 
            END IF 

            #文字欄位
            IF l_child_name = "Value" THEN
               LET g_node_Value = l_sliced_node.getFirstChild()  
            END IF 

            #數值欄位rtl
            IF l_child_name = "Dec_rtl" THEN
               LET g_node_Dec_rtl = l_sliced_node.getFirstChild() 
            END IF 

            #數值欄位
            IF l_child_name = "Dec" THEN
               LET g_node_Dec = l_sliced_node.getFirstChild()  
            END IF 
            
            #數值格式rtl
            IF l_child_name = "NumFmt" THEN
               LET g_node_NumFmt = l_sliced_node.getFirstChild()  
            END IF 

            #表格COLDEF
            IF l_child_name = "COLDEF" THEN
               LET g_node_COLDEF = l_sliced_node.getFirstChild()  
            END IF 
            
            #表格Head
            IF l_child_name = "Head_Col" THEN
               LET g_node_Head_Col = l_sliced_node.getFirstChild()  
            END IF 

            #表格Body文字欄位
            IF l_child_name = "Body_ValueCol" THEN
               LET g_node_Body_ValueCol = l_sliced_node.getFirstChild()  
            END IF 

            #表格Body數值欄位
            IF l_child_name = "Body_DecCol" THEN
               LET g_node_Body_DecCol = l_sliced_node.getFirstChild()  
            END IF             
            #子報表
            IF l_child_name = "subrep" THEN
               LET g_node_subrep = l_sliced_node.getFirstChild()  
            END IF 

         END FOR
      END IF
    END IF #IF l_sliced_doc IS NOT NULL

END FUNCTION


################################################################################
# Descriptions...: 取得紙張格式的寬、高、單位 
# Memo...........: 
# Usage..........: CALL sadzp188_gen4rp_get_paper_size() 
# Input parameter: p_papername
# ...............: 
# Return code....: 
# Date & Author..: 2014/02/24 By Cynthia
# Modify.........:
################################################################################
PRIVATE FUNCTION sadzp188_gen4rp_get_paper_size(p_papername)
   DEFINE p_papername  LIKE gzgi_t.gzgi001
   DEFINE l_unit       LIKE gzgi_t.gzgi006
   DEFINE l_count      LIKE type_t.num5

   SELECT COUNT(*) INTO l_count
     FROM gzgi_t WHERE gzgi001=p_papername

   IF l_count = 1 THEN
      SELECT gzgi004,gzgi005,gzgi006 INTO g_paper_width,g_paper_length,l_unit 
        FROM gzgi_t WHERE gzgi001=p_papername
   ELSE 
      DISPLAY "請在紙張格式基本資料檔(gzgi_t)中建立資料"
      IF p_papername = "A3" THEN
         LET g_paper_width = 42.00
         LET g_paper_length = 29.70
         LET l_unit = "cm"
      ELSE
         #預設紙張為A4直向
         LET g_paper_width = 21.00
         LET g_paper_length = 29.70
         LET l_unit = "cm"
      END IF

   END IF

   IF UPSHIFT(l_unit)="I" THEN
      LET g_paper_unit = "inch"
   ELSE   
      LET g_paper_unit = "cm"
   END IF

   #RETURN l_width,l_height,l_unit
END FUNCTION

################################################################################
# Descriptions...: 取得欄位說明 
# Memo...........: 
# Usage..........: CALL sadzp188_gen4rp_get_field_label(p_dzgh007,p_lang,p_gzgd000) 
# Input parameter: p_dzgh007
# ...............: 
# Return code....: l_gzge003
# Date & Author..: 2014/02/24 By Cynthia
# Modify.........:
################################################################################
PUBLIC FUNCTION sadzp188_gen4rp_get_field_label(p_dzgh007,p_lang,p_gzgd000) 
   DEFINE p_dzgh007          LIKE dzgh_t.dzgh007  #欄位編號
   DEFINE p_lang             LIKE gzzy_t.gzzy001  #語言別
   DEFINE p_gzgd000          LIKE gzgd_t.gzgd000
   DEFINE r_gzge003          LIKE gzge_t.gzge003  #欄位說明
   DEFINE l_str              STRING
   #160629-00012#1 add(s)
   DEFINE l_sql              STRING
   DEFINE l_gzge003_tw       LIKE gzge_t.gzge003
   DEFINE la_gzzy     RECORD
                             gzzy001 LIKE gzzy_t.gzzy001, #語言別
                             gzozcol LIKE type_t.chr10    #語言別欄位
                      END RECORD
   #160629-00012#1 add(e)
   
   LET r_gzge003 = ""
   LET l_str = p_dzgh007
   LET l_str = l_str.subString(1,2)

   #取得組合欄位的欄位說明    
#   IF l_str = "l_" THEN
#      SELECT dzgd005 INTO l_gzge003 FROM dzgd_t
#       WHERE dzgd001 = g_dzgg001
#         AND dzgd002 = g_dzgg002
#         AND dzgd003 = p_dzgh007
#         AND dzgd008 = g_dzgg017           
#   ELSE  #非組合欄位的欄位說明    
      SELECT gzge003 INTO r_gzge003 FROM gzge_t
#       WHERE gzge000 = g_4rpid
       WHERE gzge000 = p_gzgd000
         AND gzge001 = p_dzgh007
         AND gzge002 = p_lang
         AND gzgestus = "Y"

      #取得系統標準說明    
      IF cl_null(r_gzge003) THEN
         SELECT gzge003 INTO r_gzge003 FROM gzge_t
          WHERE gzge000 = "standard"
            AND gzge001 = p_dzgh007
            AND gzge002 = p_lang
            AND gzgestus = "Y"
      END IF           

      #如果"報表樣板多語言記錄檔"中沒有資料，需至"資料表欄位多語言檔"中讀取
      IF cl_null(r_gzge003) THEN
         SELECT dzebl003 INTO r_gzge003 FROM dzebl_t
          WHERE dzebl001 = p_dzgh007
            AND dzebl002 = p_lang
      END IF  
#   END IF #l_str = "l_"

   #160629-00012#1 add(s)
   #如果以上說明都取不到就到字典檔取
   #取出語言種類與項目,除了繁體中文取其他語言別
   IF p_lang != "zh_TW" AND cl_null(r_gzge003) THEN
      CASE p_lang
         WHEN "en_US" LET la_gzzy.gzozcol = "gzoz001"
         WHEN "zh_CN" LET la_gzzy.gzozcol = "gzoz002"
         WHEN "ja_JP" LET la_gzzy.gzozcol = "gzoz003"
         WHEN "vi_VN" LET la_gzzy.gzozcol = "gzoz004"
         WHEN "th_TH" LET la_gzzy.gzozcol = "gzoz005"
      END CASE
      
      #取多語言檔繁體中文說明
      SELECT gzge003 INTO l_gzge003_tw FROM gzge_t
       WHERE gzge000 = p_gzgd000 AND gzge001 = p_dzgh007
         AND gzge002 = p_lang    AND gzgestus = "Y"
      #至"資料表欄位多語言檔"中讀取繁體中文說明
      IF cl_null(l_gzge003_tw) THEN
         SELECT dzebl003 INTO l_gzge003_tw FROM dzebl_t
          WHERE dzebl001 = p_dzgh007
            AND dzebl002 = p_lang
      END IF

      LET l_sql = "SELECT ",la_gzzy.gzozcol CLIPPED,
                  "  FROM gzoz_t WHERE gzoz000= '",l_gzge003_tw CLIPPED,"' "
      PREPARE get_gzzy_pre FROM l_sql
      EXECUTE get_gzzy_pre INTO r_gzge003
   END IF
   #160629-00012#1 add(e)
   
   RETURN r_gzge003
END FUNCTION

#取得欄位的寬度、資料型別、數字型別的格式字串
PUBLIC FUNCTION sadzp188_gen4rp_get_fldattr(p_datatype,p_length)
   DEFINE p_datatype   LIKE type_t.chr20
   DEFINE p_length     LIKE type_t.chr20
   DEFINE l_fldlen     LIKE type_t.num15_3
   DEFINE l_typestr    STRING
   DEFINE l_format     STRING
   DEFINE l_prec       LIKE type_t.num10
   DEFINE l_scal       LIKE type_t.num10
   DEFINE l_strbuf     base.StringBuffer
   DEFINE l_i          LIKE type_t.num10
   DEFINE l_strtok     base.StringTokenizer
   DEFINE l_datatype   LIKE type_t.chr20

   LET l_datatype = UPSHIFT(p_datatype)
   INITIALIZE l_format TO NULL
   CASE
      WHEN l_datatype = "DATETIME" OR l_datatype = "DATE"
         LET l_fldlen = 10 * CHARWIDTH
         LET l_typestr = "FGLString"
      WHEN l_datatype = "SMALLINT" OR l_datatype = "INT" OR l_datatype = "INTEGER"
           OR l_datatype = "BIGINT" OR l_datatype = "TINYINT"
         LET l_prec = p_length
         LET l_strbuf = base.StringBuffer.create()
         FOR l_i = l_prec TO 2 STEP -1
            CALL l_strbuf.append("-")
            IF l_i > 1 AND (l_i MOD 3 = 1) THEN
               CALL l_strbuf.append(",")
            END IF
         END FOR
         CALL l_strbuf.append("&")
         LET l_format = l_strbuf.toString()
         LET l_fldlen = l_prec * CHARWIDTH / 2
         LET l_typestr = "FGLNumeric"
      WHEN l_datatype = "NUMBER" OR l_datatype = "DECIMAL" OR l_datatype = "MONEY"
           OR l_datatype = "FLOAT" OR l_datatype = "SMALLFLOAT"
         LET l_strtok = base.StringTokenizer.create(p_length,",")
         IF l_strtok.hasMoreTokens() THEN
            LET l_prec = l_strtok.nextToken()
         END IF
         IF l_strtok.hasMoreTokens() THEN
            LET l_scal = l_strtok.nextToken()
         END IF
         LET l_strbuf = base.StringBuffer.create()
         FOR l_i = l_prec TO 2 STEP -1
            CALL l_strbuf.append("-")
            IF l_i > 1 AND (l_i MOD 3 = 1) THEN
               CALL l_strbuf.append(",")
            END IF
         END FOR
         CALL l_strbuf.append("&")
         IF l_scal > 0 THEN
            CALL l_strbuf.append(".")
         END IF
         FOR l_i = 1 TO l_scal
            CALL l_strbuf.append("&")
         END FOR
         LET l_format = l_strbuf.toString()
         LET l_fldlen = (l_prec + l_scal + 1)/2* CHARWIDTH
         LET l_typestr = "FGLNumeric"
      OTHERWISE
         LET l_prec = p_length
         LET l_fldlen = l_prec * CHARWIDTH
         LET l_typestr = "FGLString"
   END CASE

   RETURN l_fldlen,l_typestr,l_format
END FUNCTION

#取得欄位長度
PRIVATE FUNCTION sadzp188_gen4rp_get_lbllen(p_label)
   DEFINE p_label  STRING
   DEFINE l_lbllen LIKE type_t.num15_3

   LET l_lbllen = FGL_WIDTH(p_label) * CHARWIDTH

   IF l_lbllen > MAXLENGTH THEN
      LET l_lbllen = MAXLENGTH
   END IF
   RETURN l_lbllen    
END FUNCTION

#產生tag流水號
PRIVATE FUNCTION sadzp188_gen4rp_tagnum(p_node,p_tagname,p_tagnum1,p_tagnum2)
   DEFINE p_node     om.DomNode
   DEFINE p_tagname  STRING
   DEFINE p_tagnum1  LIKE dzgh_t.dzgh006
   DEFINE p_tagnum2  LIKE dzgh_t.dzgh008
   DEFINE l_num      LIKE type_t.num5   #tag流水號
   DEFINE l_str1     STRING
   DEFINE l_str2     STRING
    
   IF p_tagnum2 IS NULL THEN
      LET l_str1 = p_tagnum1
      LET l_str1 = l_str1.trim()
      IF p_tagnum1 < 10 THEN
         LET l_str1 = p_tagname,"0",l_str1
      ELSE
         LET l_str1 = p_tagname,l_str1
      END IF
      CALL p_node.setAttribute("name",l_str1)
   ELSE
      LET l_str1 = p_tagnum1
      LET l_str2 = p_tagnum2

      LET l_str1 = l_str1.trim()
      LET l_str2 = l_str2.trim()
      IF p_tagnum1 < 10 THEN
         LET l_str1 = p_tagname,"0",l_str1
      ELSE
         LET l_str1 = p_tagname,l_str1
      END IF
        
      IF p_tagnum2 < 10 THEN
         LET l_str2 = "0",l_str2
      ELSE
         LET l_str2 = l_str2
      END IF

      LET l_str1 = l_str1,"_",l_str2
      CALL p_node.setAttribute("name",l_str1)        
   END IF
   RETURN p_node
END FUNCTION

################################################################################
# Descriptions...: 將參考程式維護的UI多語言資料寫入gzge_t 
# Memo...........: 
# Usage..........: CALL sadzp188_gen4rp_get_uilang()
# Input parameter: 
# ...............: 
# Return code....: 
# Date & Author..: 2014/04/08 By Cynthia
# Modify.........:
################################################################################
PRIVATE FUNCTION sadzp188_gen4rp_get_uilang()
   DEFINE l_gzge      RECORD LIKE gzge_t.*
   DEFINE l_gzzd      DYNAMIC ARRAY OF RECORD
          gzzd003     LIKE gzzd_t.gzzd003,   #待轉標籤
          gzzd005     LIKE gzzd_t.gzzd005   #轉換標籤文字
          END RECORD 
   DEFINE l_sql       STRING   
   DEFINE li_cnt      LIKE type_t.num5
   DEFINE li_cnt_r    LIKE type_t.num5
   DEFINE li_cnt_f    LIKE type_t.num5   #gzge中是否已存在欄位
   DEFINE l_dzgh007   DYNAMIC ARRAY OF LIKE dzgh_t.dzgh007
   DEFINE l_dzgd      DYNAMIC ARRAY OF RECORD
          dzgd003     LIKE dzgd_t.dzgd003,  #報表變數代號
          dzgd005     LIKE dzgd_t.dzgd005   #自訂欄位說明
          END RECORD
   DEFINE l_gzgd000   LIKE gzgd_t.gzgd000        
   DEFINE l_i         INTEGER
   
   LET l_i = 1 
   FOR l_i = 1 TO g_langs.getLength()
      #UI畫面有維護欄位說明時，寫入gzge_t  
      #azzi902已針對多語言進行處理                              #160616-00020 add
      LET l_sql = "SELECT gzzd003,gzzd005 FROM gzzd_t ",
                  " WHERE gzzd001 = '",g_gzza001,"'",
#                  "   AND gzzd002 = '",g_lang,"'",
                  "   AND gzzd002 = '",g_langs[l_i],"'",
                  "   AND gzzdstus = 'Y'"
      PREPARE uilang_prepare FROM l_sql
      DECLARE uilang_cursor CURSOR FOR uilang_prepare

      LET l_sql = "SELECT dzgh007 FROM dzgh_t ",
                  " WHERE dzgh001 = '",g_dzgg001,"'",
                  "   AND dzgh002 = '",g_dzgg002,"'",
                  "   AND dzgh003 = '",g_dzgg001,"'",
                  "   AND dzgh012 = '",g_dzgg017,"'"
      PREPARE dzgh_prepare FROM l_sql
      DECLARE dzgh_cursor CURSOR FOR dzgh_prepare
    
      #LET li_cnt = 1
      LET li_cnt_r = 1 
      FOREACH dzgh_cursor INTO l_dzgh007[li_cnt_r] 
         LET li_cnt = 1 
         FOREACH uilang_cursor INTO l_gzzd[li_cnt].gzzd003,l_gzzd[li_cnt].gzzd005
            LET l_gzzd[li_cnt].gzzd003 = cl_replace_str(l_gzzd[li_cnt].gzzd003, "lbl_", "")
            #如果UI有維護,需INSERT到gzge_t
            IF l_dzgh007[li_cnt_r] =  l_gzzd[li_cnt].gzzd003 THEN
#               SELECT gzgd000 INTO g_4rpid FROM gzgd_t 
               SELECT gzgd000 INTO l_gzgd000 FROM gzgd_t 
                WHERE gzgd001 = g_dzgg001 AND gzgd002 = g_dzgg.dzgg003 AND gzgd003 = g_cust_flag AND gzgd004 = 'default' AND gzgd005 = 'default'  AND gzgd007 NOT LIKE '%_sub%'
             
               LET l_gzge.gzgestus = 'Y'
#               LET l_gzge.gzge000 = g_4rpid
               LET l_gzge.gzge000 = l_gzgd000
               LET l_gzge.gzge001 = l_dzgh007[li_cnt_r]   #報表欄位代碼
#               LET l_gzge.gzge002 = g_lang
               LET l_gzge.gzge002 = g_langs[l_i]
               LET l_gzge.gzge003 = l_gzzd[li_cnt].gzzd005 #說明
               LET l_gzge.gzgeownid = g_user
               LET l_gzge.gzgeowndp = g_dept
               LET l_gzge.gzgecrtid = g_user
               LET l_gzge.gzgecrtdp = g_dept
               LET l_gzge.gzgecrtdt = cl_get_current()
               LET l_gzge.gzgemodid = ''
               LET l_gzge.gzgemoddt = ''
              
               SELECT COUNT(gzge001) INTO li_cnt_f FROM gzge_t 
#                WHERE gzge000 = g_4rpid AND gzge001 = l_dzgh007[li_cnt_r] AND gzge002 = g_lang
#                WHERE gzge000 = g_4rpid AND gzge001 = l_dzgh007[li_cnt_r] AND gzge002 = g_langs[l_i]
                WHERE gzge000 = l_gzgd000 AND gzge001 = l_dzgh007[li_cnt_r] AND gzge002 = g_langs[l_i]
               IF li_cnt_f = 0 THEN  #沒有資料才寫入
                  INSERT INTO gzge_t VALUES l_gzge.*
               END IF  #li_cnt_f = 0
            END IF #UI中有轉換
         END FOREACH 
         LET li_cnt = li_cnt + 1
      END FOREACH
   END FOR #l_i = 1 TO g_langs.getLength()

   CLOSE uilang_cursor
   FREE uilang_cursor
   FREE uilang_prepare

   CLOSE dzgh_cursor
   FREE dzgh_cursor
   FREE dzgh_prepare
END FUNCTION

################################################################################
# Descriptions...: 將自訂義欄位說明寫入gzge_t 
# Memo...........: 
# Usage..........: CALL sadzp188_gen4rp_get_combolang()
# Input parameter: 
# ...............: 
# Return code....: 
# Date & Author..: 2014/04/08 By Cynthia
# Modify.........:
################################################################################
PRIVATE FUNCTION sadzp188_gen4rp_get_combolang()
   DEFINE l_gzge             RECORD LIKE gzge_t.*
   DEFINE l_gzzd             DYNAMIC ARRAY OF RECORD
          gzzd003            LIKE gzzd_t.gzzd003,   #待轉標籤
          gzzd005            LIKE gzzd_t.gzzd005   #轉換標籤文字
          END RECORD 
   DEFINE l_sql              STRING   
   DEFINE li_cnt             LIKE type_t.num5
   DEFINE li_cnt_r           LIKE type_t.num5
   DEFINE li_cnt_f           LIKE type_t.num5   #gzge中是否已存在欄位
   DEFINE l_dzgh007          DYNAMIC ARRAY OF LIKE dzgh_t.dzgh007
   DEFINE l_dzgd             DYNAMIC ARRAY OF RECORD
          dzgd003            LIKE dzgd_t.dzgd003,  #報表變數代號
          dzgd005            LIKE dzgd_t.dzgd005   #自訂欄位說明
          END RECORD  
   DEFINE l_date             DATETIME YEAR TO SECOND       
   DEFINE l_i                INTEGER
   DEFINE l_flag             LIKE type_t.chr1   #150616-00029#1 add
   DEFINE l_str              STRING             #150616-00029#1 add

   CALL cl_err_collect_init()     #錯誤訊息彙總   #160629-00012#1-2 add
   LET l_i = 1 
   FOR l_i = 1 TO g_langs.getLength()
      #設計階段有維護組合欄位的欄位說明時，寫入gzge_t
      LET l_sql = "SELECT dzgd003, dzgd005 FROM dzgd_t ",
                  " WHERE dzgd001 = '",g_dzgg001,"'",
                  "   AND dzgd002 = '",g_dzgg002,"'",
                  "   AND dzgd008 = '",g_dzgg017,"'",
                  "   AND dzgd003 LIKE 'l_%'"  
      PREPARE dzgd_combo_prepare FROM l_sql
      DECLARE dzgd_combo_cursor CURSOR FOR dzgd_combo_prepare
   
      LET li_cnt_r = 1 
      FOREACH dzgd_combo_cursor INTO l_dzgd[li_cnt_r].* 
         #150616-00029#1 add(s)
         LET l_str = l_dzgd[li_cnt_r].dzgd005 CLIPPED
         LET l_flag = sadzp188_gen4rp_str_chk(l_str)
         IF l_flag = "N" THEN
         #150616-00029#1 add(e)
            IF g_langs[l_i] = "zh_CN" AND g_langs[l_i] != g_lang THEN
               LET l_dzgd[li_cnt_r].dzgd005 = cl_trans_code_tw_cn("zh_CN",l_dzgd[li_cnt_r].dzgd005)
            END IF

            IF g_langs[l_i] = "zh_TW" AND g_langs[l_i] != g_lang THEN
               LET l_dzgd[li_cnt_r].dzgd005 = cl_trans_code_tw_cn("zh_TW",l_dzgd[li_cnt_r].dzgd005)
            END IF
         
            SELECT COUNT(gzge001) INTO li_cnt_f FROM gzge_t 
#             WHERE gzge000 = g_4rpid AND gzge001 = l_dzgd[li_cnt_r].dzgd003 AND gzge002 = g_lang 
             WHERE gzge000 = g_4rpid AND gzge001 = l_dzgd[li_cnt_r].dzgd003 AND gzge002 = g_langs[l_i] 
         
            IF li_cnt_f = 0 THEN  #沒有資料才寫入
               LET l_gzge.gzgestus = 'Y'
               LET l_gzge.gzge000 = g_4rpid
               LET l_gzge.gzge001 = l_dzgd[li_cnt_r].dzgd003   #報表欄位代碼
#               LET l_gzge.gzge002 = g_lang
               LET l_gzge.gzge002 = g_langs[l_i]
               LET l_gzge.gzge003 = l_dzgd[li_cnt_r].dzgd005   #說明
               LET l_gzge.gzgeownid = g_user
               LET l_gzge.gzgeowndp = g_dept
               LET l_gzge.gzgecrtid = g_user
               LET l_gzge.gzgecrtdp = g_dept
               LET l_gzge.gzgecrtdt = cl_get_current()
               LET l_gzge.gzgemodid = ''
               LET l_gzge.gzgemoddt = ''              

               INSERT INTO gzge_t VALUES l_gzge.*
            ELSE 
               LET l_date = cl_get_current() 
               UPDATE gzge_t SET (gzge003,gzgemodid,gzgemoddt) = (l_dzgd[li_cnt_r].dzgd005,g_user,l_date)
                WHERE gzge000 = g_4rpid
                  AND gzge001 = l_dzgd[li_cnt_r].dzgd003
#                  AND gzge002 = g_lang            
                  AND gzge002 = g_langs[l_i]
            END IF  #li_cnt_f = 0
             #LET li_cnt = li_cnt + 1
         END IF   #150616-00029#1 add
      END FOREACH
   END FOR
   CALL cl_err_collect_show()     #160629-00012#1-2 #顯示彙總錯誤訊息

   CLOSE dzgd_combo_cursor
   FREE dzgd_combo_cursor
   FREE dzgd_combo_prepare  
END FUNCTION

################################################################################
# Descriptions...: 產生樣板資料(gzgd_t) 
# Memo...........: 
# Usage..........: CALL sadzp188_gen4rp_gzgd()
# Input parameter: 
# ...............: 
# Return code....: 
# Date & Author..: 2014/04/08 By Cynthia
# Modify.........:
################################################################################
PRIVATE FUNCTION sadzp188_gen4rp_gzgd()
   DEFINE l_gzgd000   LIKE gzgd_t.gzgd000  #報表樣板ID
   DEFINE l_gzgd007   LIKE gzgd_t.gzgd007  #樣板名稱
   DEFINE l_gzgd008   LIKE gzgd_t.gzgd008  #預設樣板 
   DEFINE l_cnt       LIKE type_t.num5
   DEFINE i           LIKE type_t.num5
   DEFINE l_lang_cnt  LIKE type_t.num5
   DEFINE l_cnt1      LIKE type_t.num5
   DEFINE l_4rpcnt    LIKE type_t.num5 
   DEFINE l_date      DATETIME YEAR TO SECOND
   DEFINE l_str       STRING
   DEFINE l_sql       STRING
   DEFINE l_gzgdl     DYNAMIC ARRAY OF RECORD 
          gzgdl001     LIKE gzgdl_t.gzgdl001,
          gzgdl002     LIKE gzgdl_t.gzgdl002
          END RECORD   

   #取出報表元件設計時的資料
   INITIALIZE g_dzgg.* TO NULL
   SELECT * INTO g_dzgg.* FROM dzgg_t WHERE dzgg001 = g_dzgg001 AND dzgg002 = g_dzgg002 AND dzgg003 = g_dzgg001 AND dzgg017 = g_dzgg017

   CALL s_transaction_begin()
   
   #放棄預設底稿資訊,需刪除gzgd_t中的資料 
   IF g_gzza001 IS NOT NULL THEN
      DELETE FROM gzgd_t WHERE gzgd001 = g_dzgg001 AND gzgd002 = g_dzgg001 AND gzgd003 = g_cust_flag AND gzgd004 = 'default' AND gzgd005 = 'default'
   END IF

   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "gzgd_t"
      LET g_errparam.popup = FALSE
      CALL cl_err()
      CALL s_transaction_end('N','0')
   END IF
      
   #檢查該筆資料是否已存在
   SELECT COUNT(*) INTO l_cnt FROM gzgd_t 
    WHERE gzgd001 = g_dzgg001 AND gzgd002 = g_dzgg001 AND gzgd003 = g_cust_flag AND gzgd004 = 'default' AND gzgd005 = 'default' #140612 二次開發

   LET l_date = cl_get_current()
     
   #gzgd_t中有資料,需刪掉重建(包含gzgd_t,gzgdl_t,gzge_t)
   IF l_cnt > 0 THEN 
      LET l_sql = "SELECT gzgd000 FROM gzgd_t ",
                  " WHERE gzgd001 ='",g_dzgg001 CLIPPED,"' AND gzgd002 = '",g_dzgg001 CLIPPED,"' AND gzgd003 = '",g_cust_flag CLIPPED,
                  "' AND gzgd004 = 'default' AND gzgd005 = 'default'"
      PREPARE gzgd000_pre FROM l_sql
      DECLARE gzgd000_cur CURSOR FOR gzgd000_pre
      FOREACH gzgd000_cur INTO l_gzgd000
         DELETE FROM gzgd_t WHERE gzgd000 = l_gzgd000
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "gzgd_t"
            LET g_errparam.popup = FALSE
            CALL cl_err()
            CALL s_transaction_end('N','0')
         END IF
            
         DELETE FROM gzgdl_t WHERE gzgdl000 = l_gzgd000
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "gzgdl_t"
            LET g_errparam.popup = FALSE
            CALL cl_err()
            CALL s_transaction_end('N','0')
         END IF
            
         DELETE FROM gzge_t WHERE gzge000 = l_gzgd000
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "gzge_t"
            LET g_errparam.popup = FALSE
            CALL cl_err()
            CALL s_transaction_end('N','0')
         END IF            
      END FOREACH        
   END IF 
      
   #gzgd_t中沒資料,需寫入   
   LET l_4rpcnt = 5  #5筆資料(1主報表+4備註子報表)
   FOR i = 1 TO l_4rpcnt
      LET l_gzgd007 = g_dzgg001 CLIPPED
      CALL security.RandomGenerator.CreateUUIDString() RETURNING l_gzgd000
      IF i = 1 THEN
         LET l_gzgd008 = "Y"
         LET g_4rpid = l_gzgd000
         ##將組合欄位資料寫入gzge_t
         #CALL sadzp188_gen4rp_get_combolang()                 
      ELSE
         #LET g_4rpid = l_gzgd000       
         LET l_cnt = i-1 
         LET l_str = l_cnt
         LET l_str = l_str.trim() 
         LET l_gzgd007 = l_gzgd007,"_subrep0",l_str
      END IF

      INSERT INTO gzgd_t(gzgdstus,gzgd000,gzgd001,gzgd002,gzgd003,gzgd004,gzgd005,gzgd006,gzgd007,gzgd008,gzgd009,gzgd010,
                         gzgd011,gzgd012,gzgd013,gzgd014,gzgdownid,gzgdowndp,gzgdcrtid,gzgdcrtdp,gzgdcrtdt,gzgdmodid,gzgdmoddt) 
                  VALUES('Y',l_gzgd000,g_dzgg001,g_dzgg001,g_cust_flag,'default','default',i,l_gzgd007,'Y',g_dzgg.dzgg006,'1',
                         '','N','','1',g_user,g_dept,g_user,g_dept,l_date,'','')

      #同時須寫入"報表樣板說明多語言檔(GR+XtraGrid)gzgdl_t"
      DECLARE gzgdl000 SCROLL CURSOR FOR 
      SELECT gzgdl001,gzgdl002 FROM gzgdl_t WHERE gzgdl000='default'
      LET l_lang_cnt = 1 
      CALL l_gzgdl.clear()
      FOREACH gzgdl000 INTO l_gzgdl[l_lang_cnt].*
         LET l_lang_cnt=l_lang_cnt+1
      END FOREACH
      CALL l_gzgdl.deleteElement(l_lang_cnt)
      LET l_lang_cnt=l_lang_cnt-1 
      LET l_cnt1=l_lang_cnt
      FOR l_lang_cnt=1 TO  l_cnt1
         INSERT INTO gzgdl_t(gzgdl000,gzgdl001,gzgdl002) 
                     VALUES (l_gzgd000,l_gzgdl[l_lang_cnt].gzgdl001,l_gzgdl[l_lang_cnt].gzgdl002)
      END FOR 
   END FOR
   
   CALL s_transaction_end('Y','0')
   #將組合欄位資料寫入gzge_t
   #CALL sadzp188_gen4rp_get_combolang()

   CLOSE gzgd000_cur
   FREE gzgd000_cur
   FREE gzgd000_pre

   CLOSE gzgdl000
   FREE gzgdl000
END FUNCTION

#與報表主機的連線失敗時,需寫入log檔
PRIVATE FUNCTION sadzp188_gen4rp_logfile(p_4rppath_w)
   DEFINE p_4rppath_w STRING
   DEFINE l_file      STRING,
          l_s         STRING,
          l_cmd       STRING,
          i           SMALLINT
   DEFINE channel     base.Channel

   LET l_file = os.Path.join(FGL_GETENV("TEMPDIR"),"grConnection.log")
   LET channel = base.Channel.create()

   CALL channel.openFile(l_file,  "a")
   IF STATUS = 0 THEN
      CALL channel.setDelimiter("")
      #紀錄傳入的 XML 字串
      LET l_s = "#--------------------------- (", cl_get_current(), ") ----------------------------#"
      CALL channel.write(l_s)
      LET l_s = "Program:",g_prog, " , User:",g_user, " , 4rppath:",p_4rppath_w
      CALL channel.write(l_s)
      CALL channel.close()

      IF os.Path.chrwx(l_file CLIPPED,438) THEN END IF
   END IF           

END FUNCTION


################################################################################
# Descriptions...: 取得欄位資料型態及預設的數值格式 
# Memo...........: 
# Usage..........: CALL sadzp188_gen4rp_get_type(ps_mfield,ps_mfield_as) RETURNING l_typestr, l_numfmt 
# Input parameter: ps_prog  報表元件代碼
#                  ps_mfield 欄位代碼
#                  ps_mfield_as 帶別名的欄位代碼 
# ...............: 
# Return code....: 
# Date & Author..: 2014/05/28 By Cynthia
# Modify.........:
################################################################################
PUBLIC FUNCTION sadzp188_gen4rp_get_type(ps_prog,ps_mfield, ps_mfield_as)
   DEFINE ps_prog         LIKE gzde_t.gzde001 
   DEFINE ps_mfield       LIKE dzgd_t.dzgd003 
   DEFINE ps_mfield_as    LIKE dzgd_t.dzgd003
   DEFINE l_gztz001       LIKE gztz_t.gztz001
   DEFINE l_gzde003       LIKE gzde_t.gzde003  
   DEFINE l_dzeb006       LIKE dzeb_t.dzeb006
   DEFINE l_datatype      LIKE gztd_t.gztd003
   DEFINE l_length        LIKE gztd_t.gztd008
   DEFINE l_fldlen        LIKE type_t.num15_3
   DEFINE l_typestr       STRING               #欄位型態 數值或字串
   DEFINE l_format        STRING
   DEFINE l_numfmt        STRING               #數值格式/日期格式
   DEFINE l_numfmt_x      LIKE gzgg_t.gzgg008  #XG 數值格式
   DEFINE l_numfmt_x_1    STRING               #XG 數值格式
   DEFINE l_str           STRING               
   DEFINE l_str1          STRING               
   DEFINE l_dzgd004       LIKE dzgd_t.dzgd004  
   DEFINE l_pos_s         LIKE type_t.num5     
   DEFINE l_pos_e         LIKE type_t.num5     

   LET g_rep_code = ps_prog

   IF cl_null(ps_mfield_as) THEN 
      LET ps_mfield_as = ps_mfield
   END IF 

#   CALL cl_gr_rep_type() RETURNING l_gzde003   #150901-00021#1 mark
   CALL cl_rpt_rep_type() RETURNING l_gzde003   #150901-00021#1 add

   #自訂欄位
   LET l_str = ps_mfield
   LET l_str = l_str.subString(1,2)
   IF l_str = "l_" THEN
      #取得自訂欄位的參考型態欄位及table
      SELECT dzgd004 INTO l_dzgd004 FROM dzgd_t
       WHERE dzgd001 = g_dzgg001
         AND dzgd002 = g_dzgg002
         AND dzgd003 = ps_mfield
         AND dzgd008 = g_dzgg017

      IF NOT cl_null(l_dzgd004) THEN
         LET l_str1 = l_dzgd004
         LET ps_mfield = l_str1.subString(l_str1.getIndexOf(".",1)+1,l_str1.getLength())
         LET l_gztz001 = l_str1.subString(1,l_str1.getIndexOf(".",1)-1)
      END IF
   ELSE
      SELECT gztz001 INTO l_gztz001 FROM gztz_t WHERE gztz002 = ps_mfield
         AND gztz001 NOT LIKE '%rebuil'    #151208-00023#1 add
      LET ps_mfield_as = ps_mfield  
   END IF

   #SELECT gztz001 INTO l_gztz001 FROM gztz_t WHERE gztz002 = ps_mfield  #140901 mark                       #取得table名稱
   IF NOT cl_null(l_dzgd004) THEN   
#      CALL cl_xg_get_column_info('ds',l_gztz001,ps_mfield) RETURNING l_datatype,l_length   #150901-00021#1 mark    
      CALL cl_rpt_get_column_info('ds',l_gztz001,ps_mfield) RETURNING l_datatype,l_length   #150901-00021#1 add    
   ELSE
#      CALL cl_xg_get_column_info('ds',l_gztz001,ps_mfield_as) RETURNING l_datatype,l_length   #150901-00021#1 mark    
      CALL cl_rpt_get_column_info('ds',l_gztz001,ps_mfield_as) RETURNING l_datatype,l_length   #150901-00021#1 add    
   END IF
   CALL sadzp188_gen4rp_get_fldattr(l_datatype,l_length) RETURNING l_fldlen,l_typestr,l_format

   #判斷數值欄位是否需要加format
   IF l_typestr = "FGLNumeric" THEN #AND sadzp188_tab_chk_field_property(ps_mfield,'N') THEN #150330 mark,否則type_t無法判斷
#      CALL cl_gr_rep_type() RETURNING l_gzde003   #150901-00021#1 mark 
      CALL cl_rpt_rep_type() RETURNING l_gzde003   #150901-00021#1 add
      #根據azzi090中的報表數值格式給值
      SELECT dzeb006 INTO l_dzeb006 FROM dzeb_t
       LEFT JOIN gztz_t ON gztz001 = dzeb001 AND gztz002 = dzeb002
       WHERE dzeb002 = ps_mfield

#      CALL cl_gr_get_numfmt(l_dzeb006,l_gzde003,"") RETURNING l_numfmt,l_numfmt_x_1   #150901-00021#1 mark
      CALL cl_rpt_get_numfmt(l_dzeb006,l_gzde003,"") RETURNING l_numfmt,l_numfmt_x_1   #150901-00021#1 add
      LET l_numfmt_x = l_numfmt_x_1

      IF cl_null(l_numfmt) THEN
         LET l_numfmt = "g_grNumFmt.default"
      END IF    
   ELSE
      IF UPSHIFT(l_datatype) = "DATETIME" OR UPSHIFT(l_datatype) = "DATE" THEN
         LET l_numfmt = "DATE"
      ELSE
         LET l_numfmt = ""
      END IF

      LET l_numfmt_x = ""
   END IF

   RETURN l_typestr, l_numfmt,l_numfmt_x 

END FUNCTION


################################################################################
# Descriptions...: 複製4rp
# Memo...........: 
# Usage..........: CALL sadzp188_gen4rp_copy() 
# Input parameter: p_
# ...............: 
# Return code....: 
# Date & Author..: 2015/01/16 By Cynthia
# Modify.........:
################################################################################
PUBLIC FUNCTION sadzp188_gen4rp_copy(p_gzgd001_o,p_gzgd001_n,p_gzgd003_o,p_gzgd003_n)
   DEFINE p_gzgd001_o        LIKE gzgd_t.gzgd001   #來源報表元件代號
   DEFINE p_gzgd001_n        LIKE gzgd_t.gzgd001   #目的報表元件代號
   DEFINE p_gzgd003_o        LIKE gzgd_t.gzgd003   #來源客製標示
   DEFINE p_gzgd003_n        LIKE gzgd_t.gzgd003   #來源客製標示

#   DEFINE p_gzgd000_o        LIKE gzgd_t.gzgd000   #來源報表樣板ID
   DEFINE l_type             STRING
   DEFINE l_module_o         LIKE gzza_t.gzza003   #來源模組
   DEFINE l_module_n         LIKE gzza_t.gzza003   #目的模組   
   DEFINE l_msg              STRING
   DEFINE l_gzgd_o              RECORD
          gzgd002            LIKE gzgd_t.gzgd002,  #樣板代號 
          gzgd003            LIKE gzgd_t.gzgd003,  #客製
          gzgd004            LIKE gzgd_t.gzgd004,  #角色 
          gzgd005            LIKE gzgd_t.gzgd005   #使用者    
          END RECORD
   DEFINE l_gzgd_n              RECORD
          gzgd002            LIKE gzgd_t.gzgd002,  #樣板代號 
          gzgd003            LIKE gzgd_t.gzgd003   #客製           
          END RECORD
   DEFINE l_dir_o            STRING                #來源檔目錄路徑
   DEFINE l_dir_n            STRING                #目的檔目錄路徑
   DEFINE l_wdir_o           STRING                #來源檔MOUNT目錄路徑
   DEFINE l_wdir_n           STRING                #目的檔MOUNT目錄路徑
   DEFINE l_path_o           STRING                #來源檔路徑
   DEFINE l_path_n           STRING                #目的檔路徑
   DEFINE l_wpath_o          STRING                #來源檔MOUNT路徑
   DEFINE l_wpath_n          STRING                #目的檔MOUNT路徑
   DEFINE l_i,l_j            LIKE type_t.num5
   DEFINE l_rpt_cnt          LIKE type_t.num5   
   DEFINE l_langs            DYNAMIC ARRAY OF LIKE gzzy_t.gzzy001
   DEFINE l_sql              STRING
   DEFINE l_gzgd007_o        LIKE gzgd_t.gzgd007   #來源檔樣板名稱
   DEFINE l_gzgd007_n        LIKE gzgd_t.gzgd007   #目的檔樣板名稱
   DEFINE l_prog_new         STRING   #存複製新檔名的陣列
   DEFINE l_str_l            STRING

   ###取得來源模組別(s)   
   LET l_type = sadzp060_2_chk_spec_type(p_gzgd001_o)
   IF l_type="N" THEN
      LET l_msg = "ERROR:程式",p_gzgd001_o,"找不到類別,請確認是否已經註冊"
      DISPLAY "E",l_msg
      RETURN FALSE
   END IF

   LET l_module_o = sadzp062_1_find_module(p_gzgd001_o, l_type)
   LET l_module_o = DOWNSHIFT(l_module_o)
   IF cl_null(l_module_o) THEN
      LET l_msg = "ERROR:程式",p_gzgd001_o,"找不到模組,請確認是否已經註冊"
      DISPLAY "E",l_msg
      RETURN FALSE
   END IF
   ###取得來源模組別(e)   

   ###取得目的模組別(s)
   LET l_type = sadzp060_2_chk_spec_type(p_gzgd001_n)
   IF l_type="N" THEN
      LET l_msg = "ERROR:程式",p_gzgd001_n,"找不到類別,請確認是否已經註冊"
      DISPLAY "E",l_msg
      RETURN FALSE
   END IF

   LET l_module_n = sadzp062_1_find_module(p_gzgd001_n, l_type)
   LET l_module_n = DOWNSHIFT(l_module_n)
   IF cl_null(l_module_n) THEN
      LET l_msg = "ERROR:程式",p_gzgd001_n,"找不到模組,請確認是否已經註冊"
      DISPLAY "E",l_msg
      RETURN FALSE
   END IF
   ###取得目的模組別(e)

   #複製gzgd_t
   CALL sadzp188_gen4rp_copy_gzgd(p_gzgd001_o,p_gzgd001_n,p_gzgd003_o,p_gzgd003_n)
   
   LET l_sql = "SELECT gzgd007 FROM gzgd_t WHERE gzgd001 = '",p_gzgd001_o CLIPPED,"'",
               " AND gzgd002 = '",p_gzgd001_o CLIPPED,"' AND gzgd003 = '",p_gzgd003_o CLIPPED,"'",
               " AND gzgd004 = 'default' AND gzgd005 = 'default' AND gzgd007 NOT LIKE '%_subrep%' " 
   DECLARE sadzp188_gen4rp_gzgd007_cs CURSOR FROM l_sql            

   LET l_dir_o = os.Path.join(FGL_GETENV(UPSHIFT(l_module_o)), "4rp")
   LET l_dir_n = os.Path.join(FGL_GETENV(UPSHIFT(l_module_n)), "4rp")
   
   IF os.path.chrwx(l_dir_o,511) THEN END IF #開來源資料夾權限
   
   CALL l_langs.clear()
#   CALL cl_gr_lang_list() RETURNING l_langs   #150901-00021#1 mark 
   CALL cl_rpt_lang_list() RETURNING l_langs   #150901-00021#1 add
   
   FOR l_i= 1 TO l_langs.getLength() # 依語系，複製檔案
#      LET l_dir_o = cl_gr_get_4rpdir(p_gzgd001_o,l_gzgd_o.gzgd003,l_langs[l_i],"L")   #150901-00021#1 mark
      LET l_dir_o = cl_rpt_get_4rpdir(p_gzgd001_o,l_gzgd_o.gzgd003,l_langs[l_i],"L")   #150901-00021#1 add
      #LET l_wpath_o = cl_gr_get_4rpdir(p_gzgd001_o,l_gzgd_o.gzgd003,l_langs[l_i],"M")
#      LET l_dir_n = cl_gr_get_4rpdir(p_gzgd001_n,l_gzgd_n.gzgd003,l_langs[l_i],"L")   #150901-00021#1 mark
#      LET l_wdir_n = cl_gr_get_4rpdir(p_gzgd001_n,l_gzgd_n.gzgd003,l_langs[l_i],"M")  #150901-00021#1 mark
      LET l_dir_n = cl_rpt_get_4rpdir(p_gzgd001_n,l_gzgd_n.gzgd003,l_langs[l_i],"L")   #150901-00021#1 add
      LET l_wdir_n = cl_rpt_get_4rpdir(p_gzgd001_n,l_gzgd_n.gzgd003,l_langs[l_i],"M")  #150901-00021#1 add

      FOREACH sadzp188_gen4rp_gzgd007_cs INTO l_gzgd007_o
         LET l_gzgd007_n = cl_replace_str(l_gzgd007_o, p_gzgd001_o, p_gzgd001_n)
         LET l_path_o = os.Path.join(l_dir_o,l_gzgd007_o CLIPPED||".4rp")
         LET l_path_n = os.Path.join(l_dir_n,l_gzgd007_n CLIPPED||".4rp")
         LET l_wpath_n = os.Path.join(l_wdir_n,l_gzgd007_n CLIPPED||".4rp")

         IF os.path.exists(l_path_o) THEN #來源資料夾的語系是否存在
            IF os.Path.exists(l_path_n) THEN
               IF l_path_n <> l_path_o THEN
                  IF os.Path.delete(l_path_n) THEN END IF #刪除舊檔
                  IF os.Path.delete(l_wpath_n) THEN END IF #刪除舊檔
               END IF  
            END IF
  
            IF os.Path.copy(l_path_o,l_path_n) THEN END IF #複製檔案
            LET l_prog_new = l_gzgd007_n,".4rp" #存新的主報表
            #更改4rp中檔名部分
            CALL sadzp188_gen4rp_write(l_path_n,l_gzgd007_n,l_gzgd007_o,p_gzgd001_o,p_gzgd001_n)
            IF g_erpid = "T100ERP" THEN             #160608-00012#1 add
               IF os.Path.copy(l_path_n,l_wpath_n) THEN END IF #複製檔案至報表主機
            END IF                                  #160608-00012#1 add

            SELECT COUNT(gzgd007) INTO l_rpt_cnt FROM gzgd_t  #計算子報表數
             WHERE gzgd001 = p_gzgd001_o AND gzgd002 = p_gzgd001_o AND gzgd003 = p_gzgd003_o
               AND gzgd004 = 'default' AND gzgd005 = 'default' AND gzgd007 LIKE '%_subrep%' 
            
            #子報表的複製
            IF l_rpt_cnt > 0 THEN #有才需要複製
               FOR l_j=1 TO l_rpt_cnt
                  LET l_str_l = l_j USING "&&"  #子報表的01表現
                  LET l_path_o = os.Path.join(l_dir_o,l_gzgd007_o CLIPPED||"_subrep"||l_str_l||".4rp")
                  LET l_path_n = os.Path.join(l_dir_n,l_gzgd007_n CLIPPED||"_subrep"||l_str_l||".4rp")
                  LET l_wpath_n = os.Path.join(l_wdir_n,l_gzgd007_n CLIPPED||"_subrep"||l_str_l||".4rp")
                  
                  IF os.Path.exists(l_path_o) THEN   #判斷檔案是否存在
                     IF os.Path.exists(l_path_n) THEN
                        IF l_path_n <> l_path_o THEN
                           IF os.Path.delete(l_path_n) THEN END IF
                           IF os.Path.delete(l_wpath_n) THEN END IF
                        END IF
                     END IF
                    
                     IF os.Path.copy(l_path_o,l_path_n) THEN
                        CALL sadzp188_gen4rp_write(l_path_n,l_gzgd007_n,l_gzgd007_o,p_gzgd001_o,p_gzgd001_n)
                     END IF
                     IF g_erpid = "T100ERP" THEN             #160608-00012#1 add
                        IF os.Path.copy(l_path_n,l_wpath_n) THEN END IF #複製檔案至報表主機
                     END IF                                  #160608-00012#1 add
                  ELSE
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'azz-00695'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()                  
                  END IF                  
               END FOR
            END IF
         ELSE
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'azz-00695'
            LET g_errparam.extend = ''
            LET g_errparam.popup = TRUE
            CALL cl_err()
         END IF
      END FOREACH
   END FOR
      
END FUNCTION

#更改4rp中檔名部分
PRIVATE FUNCTION sadzp188_gen4rp_write(p_path_n,p_gzgd007_n,p_gzgd007_o,p_gzgd001_o,p_gzgd001_n)
   DEFINE p_path_n         STRING               #目的檔案路徑
   DEFINE p_gzgd007_n      LIKE gzgd_t.gzgd007  #目的檔檔名
   DEFINE p_gzgd007_o      LIKE gzgd_t.gzgd007  #來源檔檔名 
   DEFINE p_gzgd001_n      LIKE gzgd_t.gzgd001  #新報表元件代號
   DEFINE p_gzgd001_o      LIKE gzgd_t.gzgd001  #舊報表元件代號 
   DEFINE lc_chin          base.Channel
   DEFINE lc_chout         base.Channel
   DEFINE l_i              LIKE type_t.num5 
   DEFINE l_j              LIKE type_t.num5 
   DEFINE l_cmd            STRING
   DEFINE l_read_str       STRING
   DEFINE lr_prog          DYNAMIC ARRAY OF STRING  
   
   #讀檔
   IF os.path.chrwx(p_path_n,511) THEN END IF #開來源資料夾權限 
   LET l_cmd = p_path_n     
   DISPLAY l_cmd
   LET lc_chin = base.Channel.create()        #create new 物件
   CALL lc_chin.openFile(l_cmd,"r")           #開啟檔案
   LET l_i = 1

   WHILE TRUE   
      LET l_read_str = lc_chin.readLine() #整行讀入
      IF l_read_str.getIndexOf("call-report",1) > 0 THEN  #子報表部分要用gzgd007取代
         LET l_read_str = cl_replace_str(l_read_str, p_gzgd007_o, p_gzgd007_n)  #取代檔名
         #如果有g01_01這類的樣板，需再置換報表元件代號
         LET l_read_str = cl_replace_str(l_read_str, p_gzgd001_o, p_gzgd001_n)  #取代檔名
      ELSE 
         LET l_read_str = cl_replace_str(l_read_str, p_gzgd001_o, p_gzgd001_n)  #取代檔名
      END IF 
      LET lr_prog[l_i] = l_read_str #讀取資料後存入tmp中
      IF lc_chin.isEof() THEN EXIT WHILE END IF     #判斷是否為最後         
      LET l_i = l_i + 1
   END WHILE
   CALL lc_chin.close()  

   #寫檔	 
   LET lc_chout = base.Channel.create()
   CALL lc_chout.openFile(l_cmd,"w")
      
   FOR l_j = 1 TO lr_prog.getLength()
      CALL lc_chout.writeLine(lr_prog[l_j])
   END FOR	 
   CALL lc_chout.close()
     
END FUNCTION 

#複製gzgd_t
PRIVATE FUNCTION sadzp188_gen4rp_copy_gzgd(p_gzgd001_o,p_gzgd001_n,p_gzgd003_o,p_gzgd003_n)
   DEFINE p_gzgd001_o        LIKE gzgd_t.gzgd001   #來源報表元件代號
   DEFINE p_gzgd001_n        LIKE gzgd_t.gzgd001   #目的報表元件代號
   DEFINE p_gzgd003_o        LIKE gzgd_t.gzgd003   #來源客製標示
   DEFINE p_gzgd003_n        LIKE gzgd_t.gzgd003   #來源客製標示

   DEFINE l_gzgd000          LIKE gzgd_t.gzgd000
   DEFINE l_gzgd000_t        LIKE gzgd_t.gzgd000
   DEFINE l_gzgd000_r        DYNAMIC ARRAY OF LIKE gzgd_t.gzgd000
   DEFINE l_gzgd006          LIKE gzgd_t.gzgd006 
   DEFINE l_gzgd007          LIKE gzgd_t.gzgd007
   DEFINE ld_date            DATETIME YEAR TO SECOND
   DEFINE ls_sql             STRING
   DEFINE l_str              STRING
   DEFINE l_cnt,l_i          LIKE type_t.num5
   DEFINE l_cnt_1,l_j        LIKE type_t.num5
   DEFINE l_gzgd             DYNAMIC ARRAY OF RECORD LIKE gzgd_t.* #GR報表樣板主檔 
   DEFINE l_gzgdl_cnt        LIKE type_t.num5
   DEFINE l_gzgdl_cnt_1      LIKE type_t.num5 
   DEFINE l_gzgdl         DYNAMIC ARRAY OF RECORD  
            gzgdl000         LIKE gzgdl_t.gzgdl000,
            gzgdl001         LIKE gzgdl_t.gzgdl001,
            gzgdl002         LIKE gzgdl_t.gzgdl002
                        END RECORD
   DEFINE lb_result          BOOLEAN   

   LET ld_date = cl_get_current()
   LET l_cnt = 0
   SELECT COUNT(gzgd000) INTO l_cnt FROM gzgd_t
    WHERE gzgdstus = 'Y'    
      AND gzgd001 = p_gzgd001_n
      AND gzgd002 = p_gzgd001_n
      AND gzgd003 = p_gzgd003_n
      AND gzgd004 = 'default'
      AND gzgd005 = 'default'

   #若有資料存在，先刪掉再新增   
   IF l_cnt > 0 THEN
      LET ls_sql = "SELECT gzgd000 FROM gzgd_t WHERE gzgdstus = 'Y' ",
                   " AND gzgd001 = '",p_gzgd001_n CLIPPED, "' AND gzgd002 = '",p_gzgd001_n,"' ",
                   " AND gzgd003 = '",p_gzgd003_n CLIPPED,"' ",
                   " AND gzgd004 = 'default' AND gzgd005 = 'default' " 
      DECLARE sadzp188_del_gzgdl_cs CURSOR FROM ls_sql 
      LET l_i = 1
      CALL l_gzgdl.clear()
      FOREACH sadzp188_del_gzgdl_cs INTO l_gzgd000_r[l_i]
         DELETE FROM gzgdl_t WHERE gzgdl000 = l_gzgd000_r[l_i]
         LET l_i = l_i +1
      END FOREACH
      
      DELETE FROM gzgd_t
       WHERE gzgdstus = 'Y'    
         AND gzgd001 = p_gzgd001_n
         AND gzgd002 = p_gzgd001_n
         AND gzgd003 = p_gzgd003_n
         AND gzgd004 = 'default'
         AND gzgd005 = 'default'
   END IF
   
   LET ls_sql = "SELECT * FROM gzgd_t WHERE gzgdstus = 'Y' ",
                " AND gzgd001 = '",p_gzgd001_o CLIPPED,"' AND gzgd002 = '",p_gzgd001_o,"' ",
                " AND gzgd003 = '",p_gzgd003_o CLIPPED,"' ",
                " AND gzgd004 = 'default' AND gzgd005 = 'default' "           
   DECLARE sadzp188_get_gzgd_cs CURSOR FROM ls_sql
   LET l_i = 1
   CALL l_gzgd.clear()
   LET l_gzgd000 =''
   FOREACH sadzp188_get_gzgd_cs INTO l_gzgd[l_i].*
      CALL security.RandomGenerator.CreateUUIDString() RETURNING l_gzgd000
      LET l_gzgd000_t = ''
      LET l_gzgd000_t = l_gzgd[l_i].gzgd000
      LET l_gzgd[l_i].gzgd000 = l_gzgd000
      
      LET l_str = l_gzgd[l_i].gzgd007 CLIPPED
      LET l_str = cl_replace_str(l_str,p_gzgd001_o CLIPPED,p_gzgd001_n CLIPPED)
      LET l_gzgd[l_i].gzgd007 = l_str CLIPPED

      LET l_gzgd[l_i].gzgd001 = p_gzgd001_n 
      LET l_str = l_gzgd[l_i].gzgd002 CLIPPED
      LET l_str = cl_replace_str(l_str,p_gzgd001_o CLIPPED,p_gzgd001_n CLIPPED)
      LET l_gzgd[l_i].gzgd002 = l_str CLIPPED
      
      LET l_gzgd[l_i].gzgd003 = p_gzgd003_n 
      LET l_gzgd[l_i].gzgdownid = g_user
      LET l_gzgd[l_i].gzgdowndp = g_dept
      LET l_gzgd[l_i].gzgdcrtid = g_user
      LET l_gzgd[l_i].gzgdcrtdp = g_dept
      LET l_gzgd[l_i].gzgdcrtdt = ld_date
      INSERT INTO gzgd_t VALUES(l_gzgd[l_i].*) 
      IF STATUS THEN
         #CALL cl_err('copy insert dzgg:',STATUS,1)
         DISPLAY "copy insert gzgd" 
         #ROLLBACK WORK         #140620 mark
         #RETURN FALSE          #140620 mark                
         LET lb_result = FALSE  #140620 add
         #GOTO _return           #140620 add
         RETURN
      END IF 
      
      LET l_gzgdl_cnt = 0          
      SELECT COUNT(*) INTO l_gzgdl_cnt FROM gzgdl_t WHERE gzgdl000 = l_gzgd000
      IF l_gzgdl_cnt = 0 THEN 
         LET l_gzgdl_cnt = 0
         SELECT COUNT(*) INTO l_gzgdl_cnt_1 FROM gzgdl_t WHERE gzgdl000 = l_gzgd000_t
         IF l_gzgdl_cnt_1 > 0 THEN  #有值才複製
            #抓出舊的gzgdl值
            LET ls_sql = "SELECT gzgdl000,gzgdl001,gzgdl002",
                         "  FROM gzgdl_t",
                         " WHERE gzgdl000 = '",l_gzgd000_t,"'",
                         " ORDER BY gzgdl000"
            PREPARE p_gzgdl_pb FROM ls_sql
            DECLARE gzgdl_curs CURSOR FOR p_gzgdl_pb
            CALL l_gzgdl.clear()
           
            LET l_cnt_1 = 1                              
            FOREACH gzgdl_curs INTO l_gzgdl[l_cnt_1].*                      
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = STATUS
                  LET g_errparam.extend = 'FOREACH gzgdl:'
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  EXIT FOREACH
               END IF
               LET l_cnt_1 = l_cnt_1 + 1
            END FOREACH
            CALL l_gzgdl.deleteElement(l_cnt_1)
            FOR l_j= 1 TO l_gzgdl.getLength()
               INSERT INTO gzgdl_t VALUES (l_gzgd000,l_gzgdl[l_j].gzgdl001,l_gzgdl[l_j].gzgdl002)
            END  FOR 
         END IF   #IF l_gzgdl_cnt>0 THEN 第二個
      END IF  
   END FOREACH
   
END FUNCTION

################################################################################
# Descriptions...: 判斷字串是否為純英數
# Memo...........:
# Usage..........: CALL sadzp188_multilang_4rp_str_chk(p_str)
#                  RETURNING r_flag
# Input parameter: p_str         传入参数变量说明1
#                :               传入参数变量说明2
# Return code....: r_flag        回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 2015/6/16 By Cynthia #150616-00029#1 add
# Modify.........:
################################################################################
PUBLIC FUNCTION sadzp188_gen4rp_str_chk(p_str)
   DEFINE p_str           STRING
   DEFINE l_n             LIKE type_t.num10
   DEFINE l_prt           LIKE type_t.chr1
   DEFINE r_flag          LIKE type_t.chr1

   LET r_flag = "Y"
   LET p_str = cl_replace_str(p_str, " ", "") 
   LET p_str = p_str.toLowerCase()
   
   FOR l_n = 1 TO p_str.getLength()
      LET l_prt = p_str.getCharAt(l_n)
      #IF l_prt NOT MATCHES "*[a-z]*" AND l_prt NOT MATCHES "[0123456789]" AND l_prt NOT MATCHES "[/.()-]" THEN   #160308 mark
      IF l_prt NOT MATCHES "*[a-z]*" AND l_prt NOT MATCHES "*[A-Z]*" AND l_prt NOT MATCHES "[0123456789]" AND l_prt NOT MATCHES "[/.()-{}_|]" THEN
         LET r_flag = "N"
      END IF
   END FOR   

   RETURN r_flag
END FUNCTION

################################################################################
# Descriptions...: 將組合欄位說明寫入gzge_t 
# Memo...........: #151123-00005#2 add 
# Usage..........: CALL sadzp188_gen4rp_get_combilang()
# Input parameter: 
# ...............: 
# Return code....: 
# Date & Author..: 2015/11/24 By Cynthia
# Modify.........:
################################################################################
PRIVATE FUNCTION sadzp188_gen4rp_get_combilang()
   DEFINE l_gzge             RECORD LIKE gzge_t.*
   DEFINE l_gzzd             DYNAMIC ARRAY OF RECORD
          gzzd003            LIKE gzzd_t.gzzd003,   #待轉標籤
          gzzd005            LIKE gzzd_t.gzzd005   #轉換標籤文字
          END RECORD 
   DEFINE l_sql              STRING   
   DEFINE li_cnt             LIKE type_t.num5
   DEFINE li_cnt_r           LIKE type_t.num5
   DEFINE li_cnt_f           LIKE type_t.num5   #gzge中是否已存在欄位
   DEFINE l_dzgh007          DYNAMIC ARRAY OF LIKE dzgh_t.dzgh007
   DEFINE l_dzgh             DYNAMIC ARRAY OF RECORD
          dzgh007            LIKE dzgh_t.dzgh007,  #報表變數代號
          dzgh010            LIKE dzgh_t.dzgh010,  #欄位別名
          gzge003            LIKE gzge_t.gzge003   #欄位說明 
          END RECORD  
   DEFINE l_date             DATETIME YEAR TO SECOND       
   DEFINE l_i                INTEGER
   
   LET l_i = 1 
   FOR l_i = 1 TO g_langs.getLength()
      #設計階段有維護組合欄位的欄位說明時，寫入gzge_t
      LET l_sql = "SELECT dzgh007,dzgh010 FROM dzgh_t ",
                  " WHERE dzgh001 = '",g_dzgg001,"'",
                  "   AND dzgh002 = '",g_dzgg002,"'",
                  "   AND dzgh003 = '",g_dzgg001,"'",
                  "   AND dzgh012 = '",g_dzgg017,"'"
      PREPARE dzgh_prepare1 FROM l_sql
      DECLARE dzgh_cursor1 CURSOR FOR dzgh_prepare1
   
      LET li_cnt_r = 1 
      FOREACH dzgh_cursor1 INTO l_dzgh[li_cnt_r].* 
         IF l_dzgh[li_cnt_r].dzgh007 != l_dzgh[li_cnt_r].dzgh010 THEN
            #取得r.t的欄位說明
            SELECT dzebl003 INTO l_dzgh[li_cnt_r].gzge003 FROM dzebl_t
             WHERE dzebl001 = l_dzgh[li_cnt_r].dzgh007
               AND dzebl002 = g_langs[l_i]
      
            SELECT COUNT(gzge001) INTO li_cnt_f FROM gzge_t 
             WHERE gzge000 = g_4rpid AND gzge001 = l_dzgh[li_cnt_r].dzgh010 AND gzge002 = g_langs[l_i] 
      
            IF li_cnt_f = 0 THEN  #沒有資料才寫入
               LET l_gzge.gzgestus = 'Y'
               LET l_gzge.gzge000 = g_4rpid
               LET l_gzge.gzge001 = l_dzgh[li_cnt_r].dzgh010   #報表欄位代碼
               LET l_gzge.gzge002 = g_langs[l_i]
               LET l_gzge.gzge003 = l_dzgh[li_cnt_r].gzge003   #說明
               LET l_gzge.gzgeownid = g_user
               LET l_gzge.gzgeowndp = g_dept
               LET l_gzge.gzgecrtid = g_user
               LET l_gzge.gzgecrtdp = g_dept
               LET l_gzge.gzgecrtdt = cl_get_current()
               LET l_gzge.gzgemodid = ''
               LET l_gzge.gzgemoddt = ''              

               INSERT INTO gzge_t VALUES l_gzge.*
            ELSE 
               LET l_date = cl_get_current() 
               UPDATE gzge_t SET (gzge003,gzgemodid,gzgemoddt) = (l_dzgh[li_cnt_r].gzge003,g_user,l_date)
                WHERE gzge000 = g_4rpid
                  AND gzge001 = l_dzgh[li_cnt_r].dzgh010
                  AND gzge002 = g_langs[l_i]
            END IF  #li_cnt_f = 0
         END IF   
      END FOREACH
   END FOR

   CLOSE dzgh_cursor1
   FREE dzgh_cursor1
   FREE dzgh_prepare1
END FUNCTION

