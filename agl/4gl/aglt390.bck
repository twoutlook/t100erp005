#該程式未解開Section, 採用最新樣板產出!
{<section id="aglt390.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0008(2015-05-26 17:20:40), PR版次:0008(2017-01-12 18:09:51)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000374
#+ Filename...: aglt390
#+ Description: 年底結轉常用傳票維護作業
#+ Creator....: 02298(2013-12-10 11:14:57)
#+ Modifier...: 02599 -SD/PR- 08729
 
{</section>}
 
{<section id="aglt390.global" >}
#應用 t01 樣板自動產生(Version:79)
#add-point:填寫註解說明 name="global.memo" 
#150827-00036#7   2015/09/15 BY 02291    添加“是否是子系统科目”字段，如果打勾后在总账凭证输入时不能选该类科目
#151125-00001#2   2015/11/30 BY catmoon  作廢前詢問「是否執行作廢？」
#151130-00015#2   2015/12/21 BY taozf    判断 是否可以更改單據日期 設定開放單據日期修改
#160321-00016#30  2016/03/28 BY Jessy    修正azzi920重複定義之錯誤訊息
#160318-00005#18  2016/03/29 BY 07675    將重複內容的錯誤訊息置換為公用錯誤訊息
#160518-00075#27  2016/08/25 BY 02114    AGL,作業開啟時,只依azzi850可執行作業否管制，不卡帳套權限，會造成作業無法執行。 查詢及維護時才檢核帳權限。
#160913-00017#3   2016/09/21 By 07900    AGL模组调整交易客商开窗
#161021-00037#3   2016/10/24 By 06821    組織類型與職能開窗調整
#161111-00049#4   2016/11/12 By 01531    调整问题6(用到agli130摘要设置的作业如aglt310）
#161104-00046#11  2017/01/12 By 08729    單別預設值;資料依照單別user dept權限過濾單號
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_glal_m        RECORD
       glalld LIKE glal_t.glalld, 
   glalld_desc LIKE type_t.chr80, 
   glalcomp LIKE glal_t.glalcomp, 
   glalcomp_desc LIKE type_t.chr80, 
   glaa001 LIKE type_t.chr10, 
   glal001 LIKE glal_t.glal001, 
   glaldocno LIKE glal_t.glaldocno, 
   glaldocdt LIKE glal_t.glaldocdt, 
   glal002 LIKE glal_t.glal002, 
   glal002_desc LIKE type_t.chr80, 
   glal003 LIKE glal_t.glal003, 
   glal006 LIKE glal_t.glal006, 
   glal007 LIKE glal_t.glal007, 
   glalstus LIKE glal_t.glalstus, 
   glalownid LIKE glal_t.glalownid, 
   glalownid_desc LIKE type_t.chr80, 
   glalowndp LIKE glal_t.glalowndp, 
   glalowndp_desc LIKE type_t.chr80, 
   glalcrtid LIKE glal_t.glalcrtid, 
   glalcrtid_desc LIKE type_t.chr80, 
   glalcrtdp LIKE glal_t.glalcrtdp, 
   glalcrtdp_desc LIKE type_t.chr80, 
   glalcrtdt LIKE glal_t.glalcrtdt, 
   glalmodid LIKE glal_t.glalmodid, 
   glalmodid_desc LIKE type_t.chr80, 
   glalmoddt LIKE glal_t.glalmoddt, 
   glalcnfid LIKE glal_t.glalcnfid, 
   glalcnfid_desc LIKE type_t.chr80, 
   glalcnfdt LIKE glal_t.glalcnfdt, 
   glam007 LIKE glam_t.glam007, 
   glam007_desc LIKE type_t.chr80, 
   glam008 LIKE glam_t.glam008, 
   glam008_desc LIKE type_t.chr80, 
   glam009 LIKE glam_t.glam009, 
   glam009_desc LIKE type_t.chr80, 
   glam010 LIKE glam_t.glam010, 
   glam010_desc LIKE type_t.chr80, 
   glam011 LIKE glam_t.glam011, 
   glam011_desc LIKE type_t.chr80, 
   glam012 LIKE glam_t.glam012, 
   glam012_desc LIKE type_t.chr80, 
   glam013 LIKE glam_t.glam013, 
   glam013_desc LIKE type_t.chr80, 
   glam014 LIKE glam_t.glam014, 
   glam014_desc LIKE type_t.chr80, 
   glam051 LIKE glam_t.glam051, 
   glam052 LIKE glam_t.glam052, 
   glam052_desc LIKE type_t.chr80, 
   glam053 LIKE glam_t.glam053, 
   glam053_desc LIKE type_t.chr80, 
   glam015 LIKE glam_t.glam015, 
   glam015_desc LIKE type_t.chr80, 
   glam017 LIKE glam_t.glam017, 
   glam017_desc LIKE type_t.chr80, 
   glam018 LIKE glam_t.glam018, 
   glam018_desc LIKE type_t.chr80
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_glam_d        RECORD
       glamseq LIKE glam_t.glamseq, 
   glamcomp LIKE glam_t.glamcomp, 
   glam001 LIKE glam_t.glam001, 
   glam002 LIKE glam_t.glam002, 
   lc_subject LIKE type_t.chr200, 
   glam003 LIKE glam_t.glam003, 
   glam004 LIKE glam_t.glam004, 
   edit2 LIKE type_t.chr500
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_glalld LIKE glal_t.glalld,
      b_glaldocno LIKE glal_t.glaldocno,
      b_glal002 LIKE glal_t.glal002,
   b_glal002_desc LIKE type_t.chr80,
      b_glal003 LIKE glal_t.glal003
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE g_glalld              LIKE glal_t.glalld
DEFINE g_bookno              LIKE glal_t.glalld
DEFINE g_glaacomp            LIKE glaa_t.glaacomp
DEFINE g_glaa001             LIKE glaa_t.glaa001
DEFINE g_glaa002             LIKE glaa_t.glaa002
DEFINE g_glaa003             LIKE glaa_t.glaa003
DEFINE g_glaa004             LIKE glaa_t.glaa004
DEFINE g_glaa013             LIKE glaa_t.glaa013
DEFINE g_glaa024             LIKE glaa_t.glaa024	
DEFINE g_glaa113             LIKE glaa_t.glaa113
DEFINE g_msg                 LIKE type_t.chr200
DEFINE g_wc1                 STRING
DEFINE g_user_dept_wc        STRING      #161104-00046#11
DEFINE g_user_dept_wc_q      STRING      #161104-00046#11
DEFINE g_user_slip_wc        STRING      #161104-00046#11
#end add-point
       
#模組變數(Module Variables)
DEFINE g_glal_m          type_g_glal_m
DEFINE g_glal_m_t        type_g_glal_m
DEFINE g_glal_m_o        type_g_glal_m
DEFINE g_glal_m_mask_o   type_g_glal_m #轉換遮罩前資料
DEFINE g_glal_m_mask_n   type_g_glal_m #轉換遮罩後資料
 
   DEFINE g_glalld_t LIKE glal_t.glalld
DEFINE g_glaldocno_t LIKE glal_t.glaldocno
 
 
DEFINE g_glam_d          DYNAMIC ARRAY OF type_g_glam_d
DEFINE g_glam_d_t        type_g_glam_d
DEFINE g_glam_d_o        type_g_glam_d
DEFINE g_glam_d_mask_o   DYNAMIC ARRAY OF type_g_glam_d #轉換遮罩前資料
DEFINE g_glam_d_mask_n   DYNAMIC ARRAY OF type_g_glam_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="aglt390.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("agl","")
 
   #add-point:作業初始化 name="main.init"
   #161104-00046#11-----s
   #建立與單頭array相同的temptable
   CALL s_aooi200def_create('','g_glal_m','','','','','','')RETURNING g_sub_success
   
   #單別控制組
   LET g_user_dept_wc = ''
   CALL s_fin_get_user_dept_control('glalcomp','','glalent','glaldocno') RETURNING g_user_dept_wc
   #開窗使用
   LET g_user_dept_wc_q = g_user_dept_wc
   
   CALL s_control_get_docno_sql(g_user,g_dept) RETURNING g_sub_success,g_user_slip_wc  
   #161104-00046#11-----e
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT glalld,'',glalcomp,'','',glal001,glaldocno,glaldocdt,glal002,'',glal003, 
       glal006,glal007,glalstus,glalownid,'',glalowndp,'',glalcrtid,'',glalcrtdp,'',glalcrtdt,glalmodid, 
       '',glalmoddt,glalcnfid,'',glalcnfdt,'','','','','','','','','','','','','','','','','','','', 
       '','','','','','','',''", 
                      " FROM glal_t",
                      " WHERE glalent= ? AND glalld=? AND glaldocno=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aglt390_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.glalld,t0.glalcomp,t0.glal001,t0.glaldocno,t0.glaldocdt,t0.glal002, 
       t0.glal003,t0.glal006,t0.glal007,t0.glalstus,t0.glalownid,t0.glalowndp,t0.glalcrtid,t0.glalcrtdp, 
       t0.glalcrtdt,t0.glalmodid,t0.glalmoddt,t0.glalcnfid,t0.glalcnfdt,t1.ooag011 ,t2.ooefl003 ,t3.ooag011 , 
       t4.ooefl003 ,t5.ooag011 ,t6.ooag011",
               " FROM glal_t t0",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent="||g_enterprise||" AND t1.ooag001=t0.glalownid  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=t0.glalowndp AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent="||g_enterprise||" AND t3.ooag001=t0.glalcrtid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent="||g_enterprise||" AND t4.ooefl001=t0.glalcrtdp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent="||g_enterprise||" AND t5.ooag001=t0.glalmodid  ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent="||g_enterprise||" AND t6.ooag001=t0.glalcnfid  ",
 
               " WHERE t0.glalent = " ||g_enterprise|| " AND t0.glalld = ? AND t0.glaldocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE aglt390_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aglt390 WITH FORM cl_ap_formpath("agl",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aglt390_init()   
 
      #進入選單 Menu (="N")
      CALL aglt390_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aglt390
      
   END IF 
   
   CLOSE aglt390_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="aglt390.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aglt390_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   DEFINE l_success    LIKE type_t.num5
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('glalstus','13','N,Y,X')
 
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1',","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   #获取账别
   CALL s_ld_bookno()  RETURNING l_success,g_glalld
   IF l_success = FALSE THEN
      RETURN 
   END IF 
   
   #160518-00075#27--mark--str--lujh
   #CALL s_ld_chk_authorization(g_user,g_glalld) RETURNING l_success
   #IF l_success = FALSE THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code = 'axr-00022'
   #   LET g_errparam.extend = g_glalld
   #   LET g_errparam.popup = TRUE
   #   CALL cl_err()
   #
   #   RETURN 
   #END IF
   #160518-00075#27--mark--end--lujh
   
   #依据对应的主账套编码，抓取对应法人，币别，汇率参照编号，会计科目参照编号,单据别,年底结转单别
   SELECT glaacomp,glaa001,glaa002,glaa003,glaa004,glaa013,glaa024,glaa113 
    INTO g_glaacomp,g_glaa001,g_glaa002,g_glaa003,g_glaa004,g_glaa013,g_glaa024,g_glaa113
     FROM glaa_t
    WHERE glaaent = g_enterprise
      AND glaald = g_glalld
   #end add-point
   
   #初始化搜尋條件
   CALL aglt390_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="aglt390.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION aglt390_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL aglt390_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_glal_m.* TO NULL
         CALL g_glam_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL aglt390_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL aglt390_fetch('') # reload data
               LET l_ac = 1
               CALL aglt390_ui_detailshow() #Setting the current row 
         
               CALL aglt390_idx_chk()
               #NEXT FIELD glamseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_glam_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL aglt390_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               CALL aglt390_b_detail()
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL aglt390_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL aglt390_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL aglt390_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL aglt390_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL aglt390_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL aglt390_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL aglt390_set_act_visible()   
            CALL aglt390_set_act_no_visible()
            IF NOT (g_glal_m.glalld IS NULL
              OR g_glal_m.glaldocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " glalent = " ||g_enterprise|| " AND",
                                  " glalld = '", g_glal_m.glalld, "' "
                                  ," AND glaldocno = '", g_glal_m.glaldocno, "' "
 
               #填到對應位置
               CALL aglt390_browser_fill("")
            END IF
         
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "glal_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "glam_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL aglt390_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "glal_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "glam_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL aglt390_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code = "-100" 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL aglt390_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               
               #end add-point
               CALL aglt390_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL aglt390_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aglt390_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL aglt390_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aglt390_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL aglt390_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aglt390_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL aglt390_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aglt390_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL aglt390_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aglt390_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_glam_d)
                  LET g_export_id[1]   = "s_detail1"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD glamseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION addi_summary
            LET g_action_choice="addi_summary"
            IF cl_auth_chk_act("addi_summary") THEN
               
               #add-point:ON ACTION addi_summary name="menu.addi_summary"
               CALL cl_cmdrun("agli090 '"||g_glal_m.glalld||"' '"||g_glal_m.glal001||"' '"||g_glal_m.glaldocno||"'") 
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aglt390_modify()
               #add-point:ON ACTION modify name="menu.modify"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aglt390_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION amt_source_acc
            LET g_action_choice="amt_source_acc"
            IF cl_auth_chk_act("amt_source_acc") THEN
               
               #add-point:ON ACTION amt_source_acc name="menu.amt_source_acc"
               IF cl_null(g_glal_m.glaldocno) THEN
                  EXIT DIALOG
               END IF
               CALL aglt390_01(g_glal_m.glaldocno,g_glal_m.glalld,g_glal_m.glaldocdt,'u','aglt390')
               RETURNING g_success          {#ADP版次:1#}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aglt390_delete()
               #add-point:ON ACTION delete name="menu.delete"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aglt390_insert()
               #add-point:ON ACTION insert name="menu.insert"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               
               #END add-point
               &include "erp/agl/aglt390_rep.4gl"
               #add-point:ON ACTION output.after name="menu.after_output"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION quickprint
            LET g_action_choice="quickprint"
            IF cl_auth_chk_act("quickprint") THEN
               
               #add-point:ON ACTION quickprint name="menu.quickprint"
               
               #END add-point
               &include "erp/agl/aglt390_rep.4gl"
               #add-point:ON ACTION quickprint.after name="menu.after_quickprint"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL aglt390_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aglt390_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
 
 
 
 
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION exchange_ld
            LET g_action_choice="exchange_ld"
            IF cl_auth_chk_act("exchange_ld") THEN
               
               #add-point:ON ACTION exchange_ld name="menu.exchange_ld"
               CALL aglt310_01(g_glal_m.glalld) RETURNING g_bookno
               LET g_glalld = g_bookno
               #依据对应的主账套编码，抓取对应法人,币别,汇率参照编号，会计科目参照编号,关账日期,单别,年底结转单别
               SELECT glaacomp,glaa001,glaa002,glaa003,glaa004,glaa013,glaa024,glaa113 
                 INTO g_glaacomp,g_glaa001,g_glaa002,g_glaa003,g_glaa004,g_glaa013,g_glaa024,g_glaa113
                 FROM glaa_t
                WHERE glaaent = g_enterprise
                  AND glaald = g_glalld 
                
                IF cl_null(g_wc) THEN
                   LET g_wc = '1=1'
                END IF 
                LET g_wc1 = '1=1'
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_aglt360_01
            LET g_action_choice="open_aglt360_01"
            IF cl_auth_chk_act("open_aglt360_01") THEN
               
               #add-point:ON ACTION open_aglt360_01 name="menu.open_aglt360_01"
               CALL aglt390_fix_acc()
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION prog_glam015
            LET g_action_choice="prog_glam015"
            IF cl_auth_chk_act("prog_glam015") THEN
               
               #add-point:ON ACTION prog_glam015 name="menu.prog_glam015"
               
               IF NOT cl_null(g_glal_m.glam015) THEN
                  CALL cl_user_contact("aooi130", "ooag_t", "ooag002", "ooag001",g_glal_m.glam015)
               END IF


               #END add-point
               
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL aglt390_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aglt390_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aglt390_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow(g_glal_m.glaldocdt)
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
 
      #(ver:79) ---add start---
      #add-point:ui_dialog段 after dialog name="ui_dialog.exit_dialog"
      
      #end add-point
      #(ver:79) --- add end ---
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
 
{</section>}
 
{<section id="aglt390.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION aglt390_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
 
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
#   IF cl_null(g_wc) THEN 
#      LET g_wc = " glal001 = '4' AND glalld = '",g_glalld,"'"
#   ELSE
#      LET g_wc = g_wc," AND glal001 = '4' AND glalld = '",g_glalld,"'"
#   END IF 
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   LET l_wc = l_wc," AND glal001 = '4' AND glalld = '",g_glalld,"'"
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT glalld,glaldocno ",
                      " FROM glal_t ",
                      " ",
                      " LEFT JOIN glam_t ON glament = glalent AND glalld = glamld AND glaldocno = glamdocno ", "  ",
                      #add-point:browser_fill段sql(glam_t1) name="browser_fill.cnt.join.}"
                      
                      #end add-point
 
 
                      " ", 
                      " ", 
 
 
                      " WHERE glalent = " ||g_enterprise|| " AND glament = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("glal_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT glalld,glaldocno ",
                      " FROM glal_t ", 
                      "  ",
                      "  ",
                      " WHERE glalent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("glal_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code = 9035 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_glal_m.* TO NULL
      CALL g_glam_d.clear()        
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.glalld,t0.glaldocno,t0.glal002,t0.glal003 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.glalstus,t0.glalld,t0.glaldocno,t0.glal002,t0.glal003,t1.oocql004 ", 
 
                  " FROM glal_t t0",
                  "  ",
                  "  LEFT JOIN glam_t ON glament = glalent AND glalld = glamld AND glaldocno = glamdocno ", "  ", 
                  #add-point:browser_fill段sql(glam_t1) name="browser_fill.join.glam_t1"
                  
                  #end add-point
 
 
                  " ", 
 
 
                                 " LEFT JOIN oocql_t t1 ON t1.oocqlent="||g_enterprise||" AND t1.oocql001='3004' AND t1.oocql002=t0.glal002 AND t1.oocql003='"||g_dlang||"' ",
 
                  " WHERE t0.glalent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("glal_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.glalstus,t0.glalld,t0.glaldocno,t0.glal002,t0.glal003,t1.oocql004 ", 
 
                  " FROM glal_t t0",
                  "  ",
                                 " LEFT JOIN oocql_t t1 ON t1.oocqlent="||g_enterprise||" AND t1.oocql001='3004' AND t1.oocql002=t0.glal002 AND t1.oocql003='"||g_dlang||"' ",
 
                  " WHERE t0.glalent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("glal_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   
   #end add-point
   LET g_sql = g_sql, " ORDER BY glalld,glaldocno ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"glal_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_glalld,g_browser[g_cnt].b_glaldocno, 
          g_browser[g_cnt].b_glal002,g_browser[g_cnt].b_glal003,g_browser[g_cnt].b_glal002_desc
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         
         #end add-point
      
         #遮罩相關處理
         CALL aglt390_browser_mask()
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_glalld) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
 
END FUNCTION
 
{</section>}
 
{<section id="aglt390.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION aglt390_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_glal_m.glalld = g_browser[g_current_idx].b_glalld   
   LET g_glal_m.glaldocno = g_browser[g_current_idx].b_glaldocno   
 
   EXECUTE aglt390_master_referesh USING g_glal_m.glalld,g_glal_m.glaldocno INTO g_glal_m.glalld,g_glal_m.glalcomp, 
       g_glal_m.glal001,g_glal_m.glaldocno,g_glal_m.glaldocdt,g_glal_m.glal002,g_glal_m.glal003,g_glal_m.glal006, 
       g_glal_m.glal007,g_glal_m.glalstus,g_glal_m.glalownid,g_glal_m.glalowndp,g_glal_m.glalcrtid,g_glal_m.glalcrtdp, 
       g_glal_m.glalcrtdt,g_glal_m.glalmodid,g_glal_m.glalmoddt,g_glal_m.glalcnfid,g_glal_m.glalcnfdt, 
       g_glal_m.glalownid_desc,g_glal_m.glalowndp_desc,g_glal_m.glalcrtid_desc,g_glal_m.glalcrtdp_desc, 
       g_glal_m.glalmodid_desc,g_glal_m.glalcnfid_desc
   
   CALL aglt390_glal_t_mask()
   CALL aglt390_show()
      
END FUNCTION
 
{</section>}
 
{<section id="aglt390.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION aglt390_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="aglt390.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aglt390_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_glalld = g_glal_m.glalld 
         AND g_browser[l_i].b_glaldocno = g_glal_m.glaldocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="aglt390.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION aglt390_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_glal_m.* TO NULL
   CALL g_glam_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON glalld,glalcomp,glal001,glaldocno,glaldocdt,glal002,glal003,glal006, 
          glal007,glalstus,glalownid,glalowndp,glalcrtid,glalcrtdp,glalcrtdt,glalmodid,glalmoddt,glalcnfid, 
          glalcnfdt,glam007,glam007_desc,glam008,glam008_desc,glam009,glam009_desc,glam010,glam010_desc, 
          glam011,glam011_desc,glam012,glam012_desc,glam013,glam013_desc,glam014,glam014_desc,glam051, 
          glam052,glam052_desc,glam053,glam053_desc,glam015,glam015_desc,glam017,glam017_desc,glam018, 
          glam018_desc
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            DISPLAY g_glalld TO glalld               #帐别
            DISPLAY g_glaacomp TO glalcomp           #法人 
            DISPLAY g_glaa001 TO glaa001             #币别
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<glalcrtdt>>----
         AFTER FIELD glalcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<glalmoddt>>----
         AFTER FIELD glalmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<glalcnfdt>>----
         AFTER FIELD glalcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<glalpstdt>>----
 
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.glalld
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glalld
            #add-point:ON ACTION controlp INFIELD glalld name="construct.c.glalld"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = g_user
			LET g_qryparam.arg2 = g_dept
            CALL q_authorised_ld()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glalld  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO glalld #帳別(套)編號 

            NEXT FIELD glalld                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glalld
            #add-point:BEFORE FIELD glalld name="construct.b.glalld"
            NEXT FIELD glaldocno
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glalld
            
            #add-point:AFTER FIELD glalld name="construct.a.glalld"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glalcomp
            #add-point:BEFORE FIELD glalcomp name="construct.b.glalcomp"
            NEXT FIELD glaldocno
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glalcomp
            
            #add-point:AFTER FIELD glalcomp name="construct.a.glalcomp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.glalcomp
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glalcomp
            #add-point:ON ACTION controlp INFIELD glalcomp name="construct.c.glalcomp"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glal001
            #add-point:BEFORE FIELD glal001 name="construct.b.glal001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glal001
            
            #add-point:AFTER FIELD glal001 name="construct.a.glal001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.glal001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glal001
            #add-point:ON ACTION controlp INFIELD glal001 name="construct.c.glal001"
            
            #END add-point
 
 
         #Ctrlp:construct.c.glaldocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glaldocno
            #add-point:ON ACTION controlp INFIELD glaldocno name="construct.c.glaldocno"
            #此段落由子樣板a08產生
            #開窗c段
			 #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.where = " glal001 = '4' AND glalld = '",g_glalld,"'"
			   #161104-00046#11-----s
            #單別權限控管
            IF NOT cl_null(g_user_dept_wc_q) AND NOT g_user_dept_wc_q = ' 1=1'  THEN
               LET g_qryparam.where = g_qryparam.where, " AND ",g_user_dept_wc_q CLIPPED
            END IF
            #161104-00046#11-----e
            CALL q_glaldocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glaldocno  #顯示到畫面上
            LET g_qryparam.where = ''
            NEXT FIELD glaldocno                     #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glaldocno
            #add-point:BEFORE FIELD glaldocno name="construct.b.glaldocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glaldocno
            
            #add-point:AFTER FIELD glaldocno name="construct.a.glaldocno"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glaldocdt
            #add-point:BEFORE FIELD glaldocdt name="construct.b.glaldocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glaldocdt
            
            #add-point:AFTER FIELD glaldocdt name="construct.a.glaldocdt"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.glaldocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glaldocdt
            #add-point:ON ACTION controlp INFIELD glaldocdt name="construct.c.glaldocdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.glal002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glal002
            #add-point:ON ACTION controlp INFIELD glal002 name="construct.c.glal002"
            #此段落由子樣板a08產生
             #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = "3004"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glal002  #顯示到畫面上

            NEXT FIELD glal002                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glal002
            #add-point:BEFORE FIELD glal002 name="construct.b.glal002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glal002
            
            #add-point:AFTER FIELD glal002 name="construct.a.glal002"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glal003
            #add-point:BEFORE FIELD glal003 name="construct.b.glal003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glal003
            
            #add-point:AFTER FIELD glal003 name="construct.a.glal003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.glal003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glal003
            #add-point:ON ACTION controlp INFIELD glal003 name="construct.c.glal003"
            
            #END add-point
 
 
         #Ctrlp:construct.c.glal006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glal006
            #add-point:ON ACTION controlp INFIELD glal006 name="construct.c.glal006"
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   SELECT glaa024 INTO g_glaa024 FROM glaa_t WHERE glaaent = g_enterprise AND glaald = g_glalld
			   LET g_qryparam.where = "ooba001 = '",g_glaa024,"' AND oobx003 = 'aglt310'"
            CALL q_ooba002_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glal006  #顯示到畫面上

            NEXT FIELD glal006                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glal006
            #add-point:BEFORE FIELD glal006 name="construct.b.glal006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glal006
            
            #add-point:AFTER FIELD glal006 name="construct.a.glal006"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glal007
            #add-point:BEFORE FIELD glal007 name="construct.b.glal007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glal007
            
            #add-point:AFTER FIELD glal007 name="construct.a.glal007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.glal007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glal007
            #add-point:ON ACTION controlp INFIELD glal007 name="construct.c.glal007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glalstus
            #add-point:BEFORE FIELD glalstus name="construct.b.glalstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glalstus
            
            #add-point:AFTER FIELD glalstus name="construct.a.glalstus"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.glalstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glalstus
            #add-point:ON ACTION controlp INFIELD glalstus name="construct.c.glalstus"
            
            #END add-point
 
 
         #Ctrlp:construct.c.glalownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glalownid
            #add-point:ON ACTION controlp INFIELD glalownid name="construct.c.glalownid"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glalownid  #顯示到畫面上

            NEXT FIELD glalownid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glalownid
            #add-point:BEFORE FIELD glalownid name="construct.b.glalownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glalownid
            
            #add-point:AFTER FIELD glalownid name="construct.a.glalownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.glalowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glalowndp
            #add-point:ON ACTION controlp INFIELD glalowndp name="construct.c.glalowndp"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glalowndp  #顯示到畫面上

            NEXT FIELD glalowndp                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glalowndp
            #add-point:BEFORE FIELD glalowndp name="construct.b.glalowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glalowndp
            
            #add-point:AFTER FIELD glalowndp name="construct.a.glalowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.glalcrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glalcrtid
            #add-point:ON ACTION controlp INFIELD glalcrtid name="construct.c.glalcrtid"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glalcrtid  #顯示到畫面上

            NEXT FIELD glalcrtid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glalcrtid
            #add-point:BEFORE FIELD glalcrtid name="construct.b.glalcrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glalcrtid
            
            #add-point:AFTER FIELD glalcrtid name="construct.a.glalcrtid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.glalcrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glalcrtdp
            #add-point:ON ACTION controlp INFIELD glalcrtdp name="construct.c.glalcrtdp"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glalcrtdp  #顯示到畫面上

            NEXT FIELD glalcrtdp                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glalcrtdp
            #add-point:BEFORE FIELD glalcrtdp name="construct.b.glalcrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glalcrtdp
            
            #add-point:AFTER FIELD glalcrtdp name="construct.a.glalcrtdp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glalcrtdt
            #add-point:BEFORE FIELD glalcrtdt name="construct.b.glalcrtdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.glalmodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glalmodid
            #add-point:ON ACTION controlp INFIELD glalmodid name="construct.c.glalmodid"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glalmodid  #顯示到畫面上

            NEXT FIELD glalmodid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glalmodid
            #add-point:BEFORE FIELD glalmodid name="construct.b.glalmodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glalmodid
            
            #add-point:AFTER FIELD glalmodid name="construct.a.glalmodid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glalmoddt
            #add-point:BEFORE FIELD glalmoddt name="construct.b.glalmoddt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.glalcnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glalcnfid
            #add-point:ON ACTION controlp INFIELD glalcnfid name="construct.c.glalcnfid"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glalcnfid  #顯示到畫面上

            NEXT FIELD glalcnfid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glalcnfid
            #add-point:BEFORE FIELD glalcnfid name="construct.b.glalcnfid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glalcnfid
            
            #add-point:AFTER FIELD glalcnfid name="construct.a.glalcnfid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glalcnfdt
            #add-point:BEFORE FIELD glalcnfdt name="construct.b.glalcnfdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.glam007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glam007
            #add-point:ON ACTION controlp INFIELD glam007 name="construct.c.glam007"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where =" ooef201 = 'Y'" #161021-00037#3 add
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glam007  #顯示到畫面上
            NEXT FIELD glam007                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glam007
            #add-point:BEFORE FIELD glam007 name="construct.b.glam007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glam007
            
            #add-point:AFTER FIELD glam007 name="construct.a.glam007"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glam007_desc
            #add-point:BEFORE FIELD glam007_desc name="construct.b.glam007_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glam007_desc
            
            #add-point:AFTER FIELD glam007_desc name="construct.a.glam007_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.glam007_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glam007_desc
            #add-point:ON ACTION controlp INFIELD glam007_desc name="construct.c.glam007_desc"
            
            #END add-point
 
 
         #Ctrlp:construct.c.glam008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glam008
            #add-point:ON ACTION controlp INFIELD glam008 name="construct.c.glam008"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = "ooegstus='Y'"
            CALL q_ooeg001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glam008  #顯示到畫面上
            NEXT FIELD glam008                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glam008
            #add-point:BEFORE FIELD glam008 name="construct.b.glam008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glam008
            
            #add-point:AFTER FIELD glam008 name="construct.a.glam008"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glam008_desc
            #add-point:BEFORE FIELD glam008_desc name="construct.b.glam008_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glam008_desc
            
            #add-point:AFTER FIELD glam008_desc name="construct.a.glam008_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.glam008_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glam008_desc
            #add-point:ON ACTION controlp INFIELD glam008_desc name="construct.c.glam008_desc"
            
            #END add-point
 
 
         #Ctrlp:construct.c.glam009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glam009
            #add-point:ON ACTION controlp INFIELD glam009 name="construct.c.glam009"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = "ooegstus='Y' AND ooeg003 IN ('1','2','3')"
            CALL q_ooeg001_4()                          #呼叫開窗
            DISPLAY g_qryparam.return1 TO glam009  #顯示到畫面上
            NEXT FIELD glam009                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glam009
            #add-point:BEFORE FIELD glam009 name="construct.b.glam009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glam009
            
            #add-point:AFTER FIELD glam009 name="construct.a.glam009"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glam009_desc
            #add-point:BEFORE FIELD glam009_desc name="construct.b.glam009_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glam009_desc
            
            #add-point:AFTER FIELD glam009_desc name="construct.a.glam009_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.glam009_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glam009_desc
            #add-point:ON ACTION controlp INFIELD glam009_desc name="construct.c.glam009_desc"
            
            #END add-point
 
 
         #Ctrlp:construct.c.glam010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glam010
            #add-point:ON ACTION controlp INFIELD glam010 name="construct.c.glam010"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002_287()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glam010  #顯示到畫面上
            NEXT FIELD glam010                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glam010
            #add-point:BEFORE FIELD glam010 name="construct.b.glam010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glam010
            
            #add-point:AFTER FIELD glam010 name="construct.a.glam010"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glam010_desc
            #add-point:BEFORE FIELD glam010_desc name="construct.b.glam010_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glam010_desc
            
            #add-point:AFTER FIELD glam010_desc name="construct.a.glam010_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.glam010_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glam010_desc
            #add-point:ON ACTION controlp INFIELD glam010_desc name="construct.c.glam010_desc"
            
            #END add-point
 
 
         #Ctrlp:construct.c.glam011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glam011
            #add-point:ON ACTION controlp INFIELD glam011 name="construct.c.glam011"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_25()      #160913-00017#3  add
            #CALL q_pmaa001()        #160913-00017#3  mark               #呼叫開窗
            DISPLAY g_qryparam.return1 TO glam011  #顯示到畫面上
            NEXT FIELD glam011                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glam011
            #add-point:BEFORE FIELD glam011 name="construct.b.glam011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glam011
            
            #add-point:AFTER FIELD glam011 name="construct.a.glam011"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glam011_desc
            #add-point:BEFORE FIELD glam011_desc name="construct.b.glam011_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glam011_desc
            
            #add-point:AFTER FIELD glam011_desc name="construct.a.glam011_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.glam011_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glam011_desc
            #add-point:ON ACTION controlp INFIELD glam011_desc name="construct.c.glam011_desc"
            
            #END add-point
 
 
         #Ctrlp:construct.c.glam012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glam012
            #add-point:ON ACTION controlp INFIELD glam012 name="construct.c.glam012"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_25()      #160913-00017#3  add
            #CALL q_pmaa001()        #160913-00017#3  mark               #呼叫開窗
            DISPLAY g_qryparam.return1 TO glam012  #顯示到畫面上
            NEXT FIELD glam012                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glam012
            #add-point:BEFORE FIELD glam012 name="construct.b.glam012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glam012
            
            #add-point:AFTER FIELD glam012 name="construct.a.glam012"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glam012_desc
            #add-point:BEFORE FIELD glam012_desc name="construct.b.glam012_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glam012_desc
            
            #add-point:AFTER FIELD glam012_desc name="construct.a.glam012_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.glam012_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glam012_desc
            #add-point:ON ACTION controlp INFIELD glam012_desc name="construct.c.glam012_desc"
            
            #END add-point
 
 
         #Ctrlp:construct.c.glam013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glam013
            #add-point:ON ACTION controlp INFIELD glam013 name="construct.c.glam013"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002_281()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glam013  #顯示到畫面上
            NEXT FIELD glam013                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glam013
            #add-point:BEFORE FIELD glam013 name="construct.b.glam013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glam013
            
            #add-point:AFTER FIELD glam013 name="construct.a.glam013"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glam013_desc
            #add-point:BEFORE FIELD glam013_desc name="construct.b.glam013_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glam013_desc
            
            #add-point:AFTER FIELD glam013_desc name="construct.a.glam013_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.glam013_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glam013_desc
            #add-point:ON ACTION controlp INFIELD glam013_desc name="construct.c.glam013_desc"
            
            #END add-point
 
 
         #Ctrlp:construct.c.glam014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glam014
            #add-point:ON ACTION controlp INFIELD glam014 name="construct.c.glam014"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_rtax001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glam014  #顯示到畫面上
            NEXT FIELD glam014                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glam014
            #add-point:BEFORE FIELD glam014 name="construct.b.glam014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glam014
            
            #add-point:AFTER FIELD glam014 name="construct.a.glam014"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glam014_desc
            #add-point:BEFORE FIELD glam014_desc name="construct.b.glam014_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glam014_desc
            
            #add-point:AFTER FIELD glam014_desc name="construct.a.glam014_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.glam014_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glam014_desc
            #add-point:ON ACTION controlp INFIELD glam014_desc name="construct.c.glam014_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glam051
            #add-point:BEFORE FIELD glam051 name="construct.b.glam051"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glam051
            
            #add-point:AFTER FIELD glam051 name="construct.a.glam051"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.glam051
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glam051
            #add-point:ON ACTION controlp INFIELD glam051 name="construct.c.glam051"
            
            #END add-point
 
 
         #Ctrlp:construct.c.glam052
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glam052
            #add-point:ON ACTION controlp INFIELD glam052 name="construct.c.glam052"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " oojdstus='Y' " 
            CALL q_oojd001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glam052  #顯示到畫面上
            NEXT FIELD glam052                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glam052
            #add-point:BEFORE FIELD glam052 name="construct.b.glam052"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glam052
            
            #add-point:AFTER FIELD glam052 name="construct.a.glam052"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glam052_desc
            #add-point:BEFORE FIELD glam052_desc name="construct.b.glam052_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glam052_desc
            
            #add-point:AFTER FIELD glam052_desc name="construct.a.glam052_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.glam052_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glam052_desc
            #add-point:ON ACTION controlp INFIELD glam052_desc name="construct.c.glam052_desc"
            
            #END add-point
 
 
         #Ctrlp:construct.c.glam053
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glam053
            #add-point:ON ACTION controlp INFIELD glam053 name="construct.c.glam053"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002_2002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glam053  #顯示到畫面上
            NEXT FIELD glam053                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glam053
            #add-point:BEFORE FIELD glam053 name="construct.b.glam053"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glam053
            
            #add-point:AFTER FIELD glam053 name="construct.a.glam053"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glam053_desc
            #add-point:BEFORE FIELD glam053_desc name="construct.b.glam053_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glam053_desc
            
            #add-point:AFTER FIELD glam053_desc name="construct.a.glam053_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.glam053_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glam053_desc
            #add-point:ON ACTION controlp INFIELD glam053_desc name="construct.c.glam053_desc"
            
            #END add-point
 
 
         #Ctrlp:construct.c.glam015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glam015
            #add-point:ON ACTION controlp INFIELD glam015 name="construct.c.glam015"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001_8()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glam015  #顯示到畫面上
            NEXT FIELD glam015                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glam015
            #add-point:BEFORE FIELD glam015 name="construct.b.glam015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glam015
            
            #add-point:AFTER FIELD glam015 name="construct.a.glam015"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glam015_desc
            #add-point:BEFORE FIELD glam015_desc name="construct.b.glam015_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glam015_desc
            
            #add-point:AFTER FIELD glam015_desc name="construct.a.glam015_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.glam015_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glam015_desc
            #add-point:ON ACTION controlp INFIELD glam015_desc name="construct.c.glam015_desc"
            
            #END add-point
 
 
         #Ctrlp:construct.c.glam017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glam017
            #add-point:ON ACTION controlp INFIELD glam017 name="construct.c.glam017"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_pjba001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glam017  #顯示到畫面上
            NEXT FIELD glam017                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glam017
            #add-point:BEFORE FIELD glam017 name="construct.b.glam017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glam017
            
            #add-point:AFTER FIELD glam017 name="construct.a.glam017"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glam017_desc
            #add-point:BEFORE FIELD glam017_desc name="construct.b.glam017_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glam017_desc
            
            #add-point:AFTER FIELD glam017_desc name="construct.a.glam017_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.glam017_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glam017_desc
            #add-point:ON ACTION controlp INFIELD glam017_desc name="construct.c.glam017_desc"
            
            #END add-point
 
 
         #Ctrlp:construct.c.glam018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glam018
            #add-point:ON ACTION controlp INFIELD glam018 name="construct.c.glam018"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = "pjbb012='1' "
            CALL q_pjbb002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glam018  #顯示到畫面上
            NEXT FIELD glam018                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glam018
            #add-point:BEFORE FIELD glam018 name="construct.b.glam018"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glam018
            
            #add-point:AFTER FIELD glam018 name="construct.a.glam018"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glam018_desc
            #add-point:BEFORE FIELD glam018_desc name="construct.b.glam018_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glam018_desc
            
            #add-point:AFTER FIELD glam018_desc name="construct.a.glam018_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.glam018_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glam018_desc
            #add-point:ON ACTION controlp INFIELD glam018_desc name="construct.c.glam018_desc"
            
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON glamseq,glamcomp,glam001,glam002,lc_subject,glam003,glam004
           FROM s_detail1[1].glamseq,s_detail1[1].glamcomp,s_detail1[1].glam001,s_detail1[1].glam002, 
               s_detail1[1].lc_subject,s_detail1[1].glam003,s_detail1[1].glam004
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glamseq
            #add-point:BEFORE FIELD glamseq name="construct.b.page1.glamseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glamseq
            
            #add-point:AFTER FIELD glamseq name="construct.a.page1.glamseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.glamseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glamseq
            #add-point:ON ACTION controlp INFIELD glamseq name="construct.c.page1.glamseq"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glamcomp
            #add-point:BEFORE FIELD glamcomp name="construct.b.page1.glamcomp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glamcomp
            
            #add-point:AFTER FIELD glamcomp name="construct.a.page1.glamcomp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.glamcomp
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glamcomp
            #add-point:ON ACTION controlp INFIELD glamcomp name="construct.c.page1.glamcomp"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.glam001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glam001
            #add-point:ON ACTION controlp INFIELD glam001 name="construct.c.page1.glam001"
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE

#            LET g_qryparam.default1 = g_glam_d[l_ac].glam001             #給予default值  #161111-00049#4 mark
            LET g_qryparam.where = "( oocq004 = '",g_glaacomp,"' OR oocq004 IS NULL )"   #161111-00049#4 add
            #給予arg
            CALL q_oocq002_2()                                #呼叫開窗

#            LET g_glam_d[l_ac].glam001 = g_qryparam.return1              #將開窗取得的值回傳到變數 #161111-00049#4 mark

#            DISPLAY g_glam_d[l_ac].glam001 TO glam001              #顯示到畫面上  #161111-00049#4 mark
            DISPLAY g_qryparam.return1 TO glam001  #顯示到畫面上 #161111-00049#4 add
            LET g_qryparam.where = ""                           #161111-00049#4 add
            NEXT FIELD glam001                          #返回原欄位

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glam001
            #add-point:BEFORE FIELD glam001 name="construct.b.page1.glam001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glam001
            
            #add-point:AFTER FIELD glam001 name="construct.a.page1.glam001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.glam002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glam002
            #add-point:ON ACTION controlp INFIELD glam002 name="construct.c.page1.glam002"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL aglt310_04()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glam002  #顯示到畫面上

            NEXT FIELD glam002                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glam002
            #add-point:BEFORE FIELD glam002 name="construct.b.page1.glam002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glam002
            
            #add-point:AFTER FIELD glam002 name="construct.a.page1.glam002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.lc_subject
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD lc_subject
            #add-point:ON ACTION controlp INFIELD lc_subject name="construct.c.page1.lc_subject"
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   #151117-00009#1--add--str--
			   LET g_qryparam.where = "glac001 = '",g_glaa004,"' AND  glac003 <>'1' AND glac006 = '1'",
                                   " AND glac002 IN (SELECT glad001 FROM glad_t ",
                                   "                  WHERE gladent=",g_enterprise," AND gladld='",g_glalld,"'",
                                   "                    AND glad035='N' AND gladstus='Y' )"
            #151117-00009#1--add--end
            CALL aglt310_04()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO lc_subject  #顯示到畫面上

            NEXT FIELD lc_subject                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD lc_subject
            #add-point:BEFORE FIELD lc_subject name="construct.b.page1.lc_subject"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD lc_subject
            
            #add-point:AFTER FIELD lc_subject name="construct.a.page1.lc_subject"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glam003
            #add-point:BEFORE FIELD glam003 name="construct.b.page1.glam003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glam003
            
            #add-point:AFTER FIELD glam003 name="construct.a.page1.glam003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.glam003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glam003
            #add-point:ON ACTION controlp INFIELD glam003 name="construct.c.page1.glam003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glam004
            #add-point:BEFORE FIELD glam004 name="construct.b.page1.glam004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glam004
            
            #add-point:AFTER FIELD glam004 name="construct.a.page1.glam004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.glam004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glam004
            #add-point:ON ACTION controlp INFIELD glam004 name="construct.c.page1.glam004"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
           LET g_glam_d[1].glamseq = ""
             DISPLAY ARRAY g_glam_d TO s_detail1.*
             BEFORE DISPLAY
                 EXIT DISPLAY
             END DISPLAY 
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "glal_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "glam_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   #单头条件备份
   LET g_wc1 = g_wc 
   #单身
   IF NOT cl_null(g_wc2) AND g_wc2 <>" 1=1" THEN
      LET g_wc2 = cl_replace_str(g_wc2,"lc_subject","glam002")
      LET g_wc2_table1 = g_wc2
   END IF
   #161104-00046#11-----s
   IF cl_null(g_user_dept_wc)THEN
      LET g_user_dept_wc = ' 1=1'
   END IF
   IF g_user_dept_wc <>  " 1=1" THEN
      LET g_wc = g_wc ," AND ", g_user_dept_wc CLIPPED
   END IF   
   #161104-00046#11-----e
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="aglt390.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION aglt390_filter()
   #add-point:filter段define name="filter.define_customerization"
   
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON glalld,glaldocno,glal002,glal003
                          FROM s_browse[1].b_glalld,s_browse[1].b_glaldocno,s_browse[1].b_glal002,s_browse[1].b_glal003 
 
 
         BEFORE CONSTRUCT
               DISPLAY aglt390_filter_parser('glalld') TO s_browse[1].b_glalld
            DISPLAY aglt390_filter_parser('glaldocno') TO s_browse[1].b_glaldocno
            DISPLAY aglt390_filter_parser('glal002') TO s_browse[1].b_glal002
            DISPLAY aglt390_filter_parser('glal003') TO s_browse[1].b_glal003
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL aglt390_filter_show('glalld')
   CALL aglt390_filter_show('glaldocno')
   CALL aglt390_filter_show('glal002')
   CALL aglt390_filter_show('glal003')
 
END FUNCTION
 
{</section>}
 
{<section id="aglt390.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION aglt390_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="aglt390.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION aglt390_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aglt390_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="aglt390.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aglt390_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   DEFINE l_pass        LIKE type_t.num5      #160518-00075#27 add lujh 
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_glam_d.clear()
 
   
   #add-point:query段other name="query.other"
   #160518-00075#27--add--str--lujh
   CALL s_ld_chk_authorization(g_user,g_glalld) RETURNING l_pass
   IF l_pass = FALSE THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'agl-00164'
      LET g_errparam.extend = g_glalld
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN         
   END IF    
   #160518-00075#27--add--end--lujh  
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL aglt390_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL aglt390_browser_fill("")
      CALL aglt390_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL aglt390_filter_show('glalld')
   CALL aglt390_filter_show('glaldocno')
   CALL aglt390_filter_show('glal002')
   CALL aglt390_filter_show('glal003')
   CALL aglt390_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "-100" 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
   ELSE
      CALL aglt390_fetch("F") 
      #顯示單身筆數
      CALL aglt390_idx_chk()
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="aglt390.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aglt390_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_glal_m.glalld = g_browser[g_current_idx].b_glalld
   LET g_glal_m.glaldocno = g_browser[g_current_idx].b_glaldocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE aglt390_master_referesh USING g_glal_m.glalld,g_glal_m.glaldocno INTO g_glal_m.glalld,g_glal_m.glalcomp, 
       g_glal_m.glal001,g_glal_m.glaldocno,g_glal_m.glaldocdt,g_glal_m.glal002,g_glal_m.glal003,g_glal_m.glal006, 
       g_glal_m.glal007,g_glal_m.glalstus,g_glal_m.glalownid,g_glal_m.glalowndp,g_glal_m.glalcrtid,g_glal_m.glalcrtdp, 
       g_glal_m.glalcrtdt,g_glal_m.glalmodid,g_glal_m.glalmoddt,g_glal_m.glalcnfid,g_glal_m.glalcnfdt, 
       g_glal_m.glalownid_desc,g_glal_m.glalowndp_desc,g_glal_m.glalcrtid_desc,g_glal_m.glalcrtdp_desc, 
       g_glal_m.glalmodid_desc,g_glal_m.glalcnfid_desc
   
   #遮罩相關處理
   LET g_glal_m_mask_o.* =  g_glal_m.*
   CALL aglt390_glal_t_mask()
   LET g_glal_m_mask_n.* =  g_glal_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aglt390_set_act_visible()   
   CALL aglt390_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
   
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
   
   #保存單頭舊值
   LET g_glal_m_t.* = g_glal_m.*
   LET g_glal_m_o.* = g_glal_m.*
   
   LET g_data_owner = g_glal_m.glalownid      
   LET g_data_dept  = g_glal_m.glalowndp
   
   #重新顯示   
   CALL aglt390_show()
 
   
 
END FUNCTION
 
{</section>}
 
{<section id="aglt390.insert" >}
#+ 資料新增
PRIVATE FUNCTION aglt390_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   DEFINE l_pass        LIKE type_t.num5      #160518-00075#27 add lujh
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_glam_d.clear()   
 
 
   INITIALIZE g_glal_m.* TO NULL             #DEFAULT 設定
   
   LET g_glalld_t = NULL
   LET g_glaldocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_glal_m.glalownid = g_user
      LET g_glal_m.glalowndp = g_dept
      LET g_glal_m.glalcrtid = g_user
      LET g_glal_m.glalcrtdp = g_dept 
      LET g_glal_m.glalcrtdt = cl_get_current()
      LET g_glal_m.glalmodid = g_user
      LET g_glal_m.glalmoddt = cl_get_current()
      LET g_glal_m.glalstus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_glal_m.glal001 = "2"
      LET g_glal_m.glal003 = "1"
      LET g_glal_m.glalstus = "N"
 
  
      #add-point:單頭預設值 name="insert.default"
      #160518-00075#27--add--str--lujh
      CALL s_ld_chk_authorization(g_user,g_glalld) RETURNING l_pass
      IF l_pass = FALSE THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'axr-00022'
         LET g_errparam.extend = g_glalld
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN 
      END IF 
      #160518-00075#27--add--end--lujh
      
      INITIALIZE g_glal_m_t.* LIKE glal_t.*     
      LET g_glal_m.glal001 = "4"
      LET g_glal_m.glal006 = g_glaa113
      LET g_glal_m.glalld = g_glalld 
      CALL aglt390_glalld_desc(g_glal_m.glalld) #帐别说明
      RETURNING g_glal_m.glalld_desc 
      DISPLAY BY NAME g_glal_m.glalld_desc
      
      LET g_glal_m.glalcomp = g_glaacomp
      CALL aglt390_glalcomp_desc(g_glal_m.glalcomp) #法人说明
      RETURNING g_glal_m.glalcomp_desc 
      DISPLAY BY NAME g_glal_m.glalcomp_desc 

      LET g_glal_m.glaa001 = g_glaa001
      DISPLAY BY NAME g_glal_m.glaa001
      
      LET g_glal_m.glaldocdt = g_today
      #初始化图片
      CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")     
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_glal_m_t.* = g_glal_m.*
      LET g_glal_m_o.* = g_glal_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_glal_m.glalstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
    
      CALL aglt390_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_glal_m.* TO NULL
         INITIALIZE g_glam_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         
         #end add-point 
         CALL aglt390_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_glam_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aglt390_set_act_visible()   
   CALL aglt390_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_glalld_t = g_glal_m.glalld
   LET g_glaldocno_t = g_glal_m.glaldocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " glalent = " ||g_enterprise|| " AND",
                      " glalld = '", g_glal_m.glalld, "' "
                      ," AND glaldocno = '", g_glal_m.glaldocno, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   IF g_wc = " 1=2" THEN
      LET g_wc = " 1=1"
   END IF
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL aglt390_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE aglt390_cl
   
   CALL aglt390_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE aglt390_master_referesh USING g_glal_m.glalld,g_glal_m.glaldocno INTO g_glal_m.glalld,g_glal_m.glalcomp, 
       g_glal_m.glal001,g_glal_m.glaldocno,g_glal_m.glaldocdt,g_glal_m.glal002,g_glal_m.glal003,g_glal_m.glal006, 
       g_glal_m.glal007,g_glal_m.glalstus,g_glal_m.glalownid,g_glal_m.glalowndp,g_glal_m.glalcrtid,g_glal_m.glalcrtdp, 
       g_glal_m.glalcrtdt,g_glal_m.glalmodid,g_glal_m.glalmoddt,g_glal_m.glalcnfid,g_glal_m.glalcnfdt, 
       g_glal_m.glalownid_desc,g_glal_m.glalowndp_desc,g_glal_m.glalcrtid_desc,g_glal_m.glalcrtdp_desc, 
       g_glal_m.glalmodid_desc,g_glal_m.glalcnfid_desc
   
   
   #遮罩相關處理
   LET g_glal_m_mask_o.* =  g_glal_m.*
   CALL aglt390_glal_t_mask()
   LET g_glal_m_mask_n.* =  g_glal_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_glal_m.glalld,g_glal_m.glalld_desc,g_glal_m.glalcomp,g_glal_m.glalcomp_desc,g_glal_m.glaa001, 
       g_glal_m.glal001,g_glal_m.glaldocno,g_glal_m.glaldocdt,g_glal_m.glal002,g_glal_m.glal002_desc, 
       g_glal_m.glal003,g_glal_m.glal006,g_glal_m.glal007,g_glal_m.glalstus,g_glal_m.glalownid,g_glal_m.glalownid_desc, 
       g_glal_m.glalowndp,g_glal_m.glalowndp_desc,g_glal_m.glalcrtid,g_glal_m.glalcrtid_desc,g_glal_m.glalcrtdp, 
       g_glal_m.glalcrtdp_desc,g_glal_m.glalcrtdt,g_glal_m.glalmodid,g_glal_m.glalmodid_desc,g_glal_m.glalmoddt, 
       g_glal_m.glalcnfid,g_glal_m.glalcnfid_desc,g_glal_m.glalcnfdt,g_glal_m.glam007,g_glal_m.glam007_desc, 
       g_glal_m.glam008,g_glal_m.glam008_desc,g_glal_m.glam009,g_glal_m.glam009_desc,g_glal_m.glam010, 
       g_glal_m.glam010_desc,g_glal_m.glam011,g_glal_m.glam011_desc,g_glal_m.glam012,g_glal_m.glam012_desc, 
       g_glal_m.glam013,g_glal_m.glam013_desc,g_glal_m.glam014,g_glal_m.glam014_desc,g_glal_m.glam051, 
       g_glal_m.glam052,g_glal_m.glam052_desc,g_glal_m.glam053,g_glal_m.glam053_desc,g_glal_m.glam015, 
       g_glal_m.glam015_desc,g_glal_m.glam017,g_glal_m.glam017_desc,g_glal_m.glam018,g_glal_m.glam018_desc 
 
   
   #add-point:新增結束後 name="insert.after"
   
   #end add-point 
   
   LET g_data_owner = g_glal_m.glalownid      
   LET g_data_dept  = g_glal_m.glalowndp
   
   #功能已完成,通報訊息中心
   CALL aglt390_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="aglt390.modify" >}
#+ 資料修改
PRIVATE FUNCTION aglt390_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   DEFINE l_success     LIKE type_t.num5
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   #保存單頭舊值
   LET g_glal_m_t.* = g_glal_m.*
   LET g_glal_m_o.* = g_glal_m.*
   
   IF g_glal_m.glalld IS NULL
   OR g_glal_m.glaldocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_glalld_t = g_glal_m.glalld
   LET g_glaldocno_t = g_glal_m.glaldocno
 
   CALL s_transaction_begin()
   
   OPEN aglt390_cl USING g_enterprise,g_glal_m.glalld,g_glal_m.glaldocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aglt390_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE aglt390_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aglt390_master_referesh USING g_glal_m.glalld,g_glal_m.glaldocno INTO g_glal_m.glalld,g_glal_m.glalcomp, 
       g_glal_m.glal001,g_glal_m.glaldocno,g_glal_m.glaldocdt,g_glal_m.glal002,g_glal_m.glal003,g_glal_m.glal006, 
       g_glal_m.glal007,g_glal_m.glalstus,g_glal_m.glalownid,g_glal_m.glalowndp,g_glal_m.glalcrtid,g_glal_m.glalcrtdp, 
       g_glal_m.glalcrtdt,g_glal_m.glalmodid,g_glal_m.glalmoddt,g_glal_m.glalcnfid,g_glal_m.glalcnfdt, 
       g_glal_m.glalownid_desc,g_glal_m.glalowndp_desc,g_glal_m.glalcrtid_desc,g_glal_m.glalcrtdp_desc, 
       g_glal_m.glalmodid_desc,g_glal_m.glalcnfid_desc
   
   #檢查是否允許此動作
   IF NOT aglt390_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_glal_m_mask_o.* =  g_glal_m.*
   CALL aglt390_glal_t_mask()
   LET g_glal_m_mask_n.* =  g_glal_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
 
   
   CALL aglt390_show()
   #add-point:modify段show之後 name="modify.after_show"
   CALL s_ld_chk_authorization(g_user,g_glal_m.glalld) RETURNING l_success
   IF l_success = FALSE THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'agl-00165'
      LET g_errparam.extend = g_glalld
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CLOSE aglt390_cl
      CALL s_transaction_end('N','0')
      RETURN 
   END IF 
   LET g_success = 'N'
   IF g_glal_m.glalstus <> 'N' THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'agl-00052'
      LET g_errparam.extend = 'modify'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CLOSE aglt390_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF 
   #檢查當單據日期小於等於關帳日期時，不可異動單據
   CALL s_fin_date_close_chk(g_glal_m.glalld,'','AGL',g_glal_m.glaldocdt) RETURNING l_success
   IF l_success = FALSE THEN
      CLOSE aglt390_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
 
    
   WHILE TRUE
      LET g_glalld_t = g_glal_m.glalld
      LET g_glaldocno_t = g_glal_m.glaldocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_glal_m.glalmodid = g_user 
LET g_glal_m.glalmoddt = cl_get_current()
LET g_glal_m.glalmodid_desc = cl_get_username(g_glal_m.glalmodid)
      
      #add-point:modify段修改前 name="modify.before_input"
    
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL aglt390_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE glal_t SET (glalmodid,glalmoddt) = (g_glal_m.glalmodid,g_glal_m.glalmoddt)
          WHERE glalent = g_enterprise AND glalld = g_glalld_t
            AND glaldocno = g_glaldocno_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_glal_m.* = g_glal_m_t.*
            CALL aglt390_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_glal_m.glalld != g_glal_m_t.glalld
      OR g_glal_m.glaldocno != g_glal_m_t.glaldocno
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         
         #end add-point
         
         #更新單身key值
         UPDATE glam_t SET glamld = g_glal_m.glalld
                                       ,glamdocno = g_glal_m.glaldocno
 
          WHERE glament = g_enterprise AND glamld = g_glal_m_t.glalld
            AND glamdocno = g_glal_m_t.glaldocno
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "glam_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "glam_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aglt390_set_act_visible()   
   CALL aglt390_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " glalent = " ||g_enterprise|| " AND",
                      " glalld = '", g_glal_m.glalld, "' "
                      ," AND glaldocno = '", g_glal_m.glaldocno, "' "
 
   #填到對應位置
   CALL aglt390_browser_fill("")
 
   CLOSE aglt390_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL aglt390_msgcentre_notify('modify')
 
END FUNCTION 
 
{</section>}
 
{<section id="aglt390.input" >}
#+ 資料輸入
PRIVATE FUNCTION aglt390_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE  l_glam002_desc   LIKE type_t.chr200
   DEFINE  l_success        LIKE type_t.num5
   DEFINE  l_sum1           LIKE glam_t.glam003
   DEFINE  l_sum2           LIKE glam_t.glam003
   DEFINE  l_glam002        STRING
   DEFINE  l_str            STRING
   DEFINE  l_glaa004             LIKE glaa_t.glaa004  #150916-00015#1 -add
   DEFINE  l_flag           LIKE type_t.num5          #161104-00046#11
   DEFINE  l_slip           LIKE ooba_t.ooba002       #161104-00046#11
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_glal_m.glalld,g_glal_m.glalld_desc,g_glal_m.glalcomp,g_glal_m.glalcomp_desc,g_glal_m.glaa001, 
       g_glal_m.glal001,g_glal_m.glaldocno,g_glal_m.glaldocdt,g_glal_m.glal002,g_glal_m.glal002_desc, 
       g_glal_m.glal003,g_glal_m.glal006,g_glal_m.glal007,g_glal_m.glalstus,g_glal_m.glalownid,g_glal_m.glalownid_desc, 
       g_glal_m.glalowndp,g_glal_m.glalowndp_desc,g_glal_m.glalcrtid,g_glal_m.glalcrtid_desc,g_glal_m.glalcrtdp, 
       g_glal_m.glalcrtdp_desc,g_glal_m.glalcrtdt,g_glal_m.glalmodid,g_glal_m.glalmodid_desc,g_glal_m.glalmoddt, 
       g_glal_m.glalcnfid,g_glal_m.glalcnfid_desc,g_glal_m.glalcnfdt,g_glal_m.glam007,g_glal_m.glam007_desc, 
       g_glal_m.glam008,g_glal_m.glam008_desc,g_glal_m.glam009,g_glal_m.glam009_desc,g_glal_m.glam010, 
       g_glal_m.glam010_desc,g_glal_m.glam011,g_glal_m.glam011_desc,g_glal_m.glam012,g_glal_m.glam012_desc, 
       g_glal_m.glam013,g_glal_m.glam013_desc,g_glal_m.glam014,g_glal_m.glam014_desc,g_glal_m.glam051, 
       g_glal_m.glam052,g_glal_m.glam052_desc,g_glal_m.glam053,g_glal_m.glam053_desc,g_glal_m.glam015, 
       g_glal_m.glam015_desc,g_glal_m.glam017,g_glal_m.glam017_desc,g_glal_m.glam018,g_glal_m.glam018_desc 
 
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT glamseq,glamcomp,glam001,glam002,glam003,glam004 FROM glam_t WHERE glament=?  
       AND glamld=? AND glamdocno=? AND glamseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aglt390_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
   
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL aglt390_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL aglt390_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_glal_m.glalld,g_glal_m.glalcomp,g_glal_m.glal001,g_glal_m.glaldocno,g_glal_m.glaldocdt, 
       g_glal_m.glal002,g_glal_m.glal003,g_glal_m.glal006,g_glal_m.glal007,g_glal_m.glalstus
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   #复制时，状态给N 
   IF l_cmd_t = 'r' THEN
      LET g_glal_m.glalstus = "N"         
   END IF
   #帳別不可進入
   CALL cl_set_comp_entry('glalld',FALSE)

   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="aglt390.input.head" >}
      #單頭段
      INPUT BY NAME g_glal_m.glalld,g_glal_m.glalcomp,g_glal_m.glal001,g_glal_m.glaldocno,g_glal_m.glaldocdt, 
          g_glal_m.glal002,g_glal_m.glal003,g_glal_m.glal006,g_glal_m.glal007,g_glal_m.glalstus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN aglt390_cl USING g_enterprise,g_glal_m.glalld,g_glal_m.glaldocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN aglt390_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE aglt390_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL aglt390_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            
            #end add-point
            CALL aglt390_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glalld
            
            #add-point:AFTER FIELD glalld name="input.a.glalld"
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_glal_m.glalld) AND NOT cl_null(g_glal_m.glaldocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_glal_m.glalld != g_glalld_t  OR g_glal_m.glaldocno != g_glaldocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM glal_t WHERE "||"glalent = '" ||g_enterprise|| "' AND "||"glalld = '"||g_glal_m.glalld ||"' AND "|| "glaldocno = '"||g_glal_m.glaldocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glalld
            #add-point:BEFORE FIELD glalld name="input.b.glalld"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glalld
            #add-point:ON CHANGE glalld name="input.g.glalld"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glalcomp
            
            #add-point:AFTER FIELD glalcomp name="input.a.glalcomp"
 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glalcomp
            #add-point:BEFORE FIELD glalcomp name="input.b.glalcomp"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glalcomp
            #add-point:ON CHANGE glalcomp name="input.g.glalcomp"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glal001
            #add-point:BEFORE FIELD glal001 name="input.b.glal001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glal001
            
            #add-point:AFTER FIELD glal001 name="input.a.glal001"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glal001
            #add-point:ON CHANGE glal001 name="input.g.glal001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glaldocno
            #add-point:BEFORE FIELD glaldocno name="input.b.glaldocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glaldocno
            
            #add-point:AFTER FIELD glaldocno name="input.a.glaldocno"
            IF  NOT cl_null(g_glal_m.glalld) AND NOT cl_null(g_glal_m.glaldocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_glal_m.glalld != g_glalld_t  OR g_glal_m.glaldocno != g_glaldocno_t )) THEN 
                  IF NOT ap_chk_notDup(g_glal_m.glaldocno,"SELECT COUNT(*) FROM glal_t WHERE "||"glalent = '" ||g_enterprise|| "' AND "||"glalld = '"||g_glal_m.glalld ||"' AND "|| "glaldocno = '"||g_glal_m.glaldocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            #单别检查
            IF NOT cl_null(g_glal_m.glaldocno) THEN 
#               CALL aglt390_ooba002_chk('glaldocno',g_glal_m.glaldocno) 
#               IF NOT cl_null(g_errno) THEN
#                  INITIALIZE g_errparam TO NULL
#                  LET g_errparam.code = g_errno
#                  LET g_errparam.extend = g_glal_m.glaldocno
#                  LET g_errparam.popup = TRUE
#                  CALL cl_err()
#
#                  LET g_glal_m.glaldocno = ''
#                  NEXT FIELD glaldocno
#               END IF
#               NEXT FIELD glaldocdt
               CALL s_aooi200_fin_chk_docno(g_glal_m.glalld,'','',g_glal_m.glaldocno,g_glal_m.glaldocdt,g_prog)
               RETURNING l_success
               IF NOT l_success THEN
                  LET g_glal_m.glaldocno = ''
                  NEXT FIELD CURRENT
               END IF
               #161104-00046#11-----s
               CALL s_control_chk_doc('1',g_glal_m.glaldocno,'4',g_user,g_dept,'','') RETURNING g_sub_success,l_flag
               IF g_sub_success AND l_flag THEN             
               ELSE
                  LET g_glal_m.glaldocno = g_glal_m_o.glaldocno 
                  NEXT FIELD CURRENT                  
               END IF
               CALL s_aooi200_fin_get_slip(g_glal_m.glaldocno) RETURNING g_sub_success,l_slip
               #刪除單別預設temptable
               DELETE FROM s_aooi200def1
               #以目前畫面資訊新增temp資料   #請勿調整.*
               INSERT INTO s_aooi200def1 VALUES(g_glal_m.*)
               #依單別預設取用資訊
               CALL s_aooi200def_get('','',g_glal_m.glalcomp,'2',l_slip,'','',g_glal_m.glalld)
               #依單別預設值TEMP內容 給予到畫面上   #請勿調整.*
               SELECT * INTO g_glal_m.* FROM s_aooi200def1
               #161104-00046#11-----e  
            END IF 
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glaldocno
            #add-point:ON CHANGE glaldocno name="input.g.glaldocno"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glaldocdt
            #add-point:BEFORE FIELD glaldocdt name="input.b.glaldocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glaldocdt
            
            #add-point:AFTER FIELD glaldocdt name="input.a.glaldocdt"
            IF NOT cl_null(g_glal_m.glaldocdt) THEN
               IF g_glal_m.glaldocdt <= g_glaa013 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'agl-00160'
                  LET g_errparam.extend = g_glal_m.glaldocdt
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_glal_m.glaldocdt = g_glal_m_t.glaldocdt 
                  NEXT FIELD glaldocdt
               END IF
            END IF           {#ADP版次:1#}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glaldocdt
            #add-point:ON CHANGE glaldocdt name="input.g.glaldocdt"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glal002
            
            #add-point:AFTER FIELD glal002 name="input.a.glal002"
            DISPLAY '' TO glal002_desc
            IF NOT cl_null(g_glal_m.glal002) THEN 
               CALL aglt390_glal002_chk(g_glal_m.glal002) 
               IF NOT cl_null(g_errno) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_glal_m.glal002
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_glal_m.glal002 = g_glal_m_t.glal002
                  CALL aglt390_glal002_desc(g_glal_m.glal002) RETURNING g_glal_m.glal002_desc
                  DISPLAY BY NAME g_glal_m.glal002_desc
                  NEXT FIELD glal002
               END IF 
             END IF 
             #分攤類別說明             
             CALL aglt390_glal002_desc(g_glal_m.glal002) RETURNING g_glal_m.glal002_desc
             DISPLAY BY NAME g_glal_m.glal002_desc
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glal002
            #add-point:BEFORE FIELD glal002 name="input.b.glal002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glal002
            #add-point:ON CHANGE glal002 name="input.g.glal002"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glal003
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_glal_m.glal003,"0","1","","","azz-00079",1) THEN
               NEXT FIELD glal003
            END IF 
 
 
 
            #add-point:AFTER FIELD glal003 name="input.a.glal003"
            IF NOT cl_null(g_glal_m.glal003) THEN 
            END IF 

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glal003
            #add-point:BEFORE FIELD glal003 name="input.b.glal003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glal003
            #add-point:ON CHANGE glal003 name="input.g.glal003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glal006
            #add-point:BEFORE FIELD glal006 name="input.b.glal006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glal006
            
            #add-point:AFTER FIELD glal006 name="input.a.glal006"
            IF NOT cl_null(g_glal_m.glal006) THEN 
               CALL aglt390_ooba002_chk('glal006',g_glal_m.glal006) 	
               IF NOT cl_null(g_errno) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_glal_m.glal006
                  #160318-00005#18  --add--str
                   LET g_errparam.replace[1] ='aooi200'
                   LET g_errparam.replace[2] = cl_get_progname('aooi200',g_lang,"2")
                   LET g_errparam.exeprog    ='aooi200'
                   #160318-00005#18 --add--end
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_glal_m.glal006 = g_glal_m_t.glal006
                  NEXT FIELD glal006
               END IF 
            END IF 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glal006
            #add-point:ON CHANGE glal006 name="input.g.glal006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glal007
            #add-point:BEFORE FIELD glal007 name="input.b.glal007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glal007
            
            #add-point:AFTER FIELD glal007 name="input.a.glal007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glal007
            #add-point:ON CHANGE glal007 name="input.g.glal007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glalstus
            #add-point:BEFORE FIELD glalstus name="input.b.glalstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glalstus
            
            #add-point:AFTER FIELD glalstus name="input.a.glalstus"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glalstus
            #add-point:ON CHANGE glalstus name="input.g.glalstus"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.glalld
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glalld
            #add-point:ON ACTION controlp INFIELD glalld name="input.c.glalld"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_glal_m.glalld             #給予default值
            LET g_qryparam.default2 = "" #g_glal_m.glaald #帳別編號

            #給予arg

            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept
            CALL q_authorised_ld()                               #呼叫開窗

            LET g_glal_m.glalld = g_qryparam.return1              #將開窗取得的值回傳到變數
            #LET g_glal_m.glaald = g_qryparam.return2 #帳別編號

            DISPLAY g_glal_m.glalld TO glalld              #顯示到畫面上
            #DISPLAY g_glal_m.glaald TO glaald #帳別編號

            NEXT FIELD glalld                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.glalcomp
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glalcomp
            #add-point:ON ACTION controlp INFIELD glalcomp name="input.c.glalcomp"
            
            #END add-point
 
 
         #Ctrlp:input.c.glal001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glal001
            #add-point:ON ACTION controlp INFIELD glal001 name="input.c.glal001"
            
            #END add-point
 
 
         #Ctrlp:input.c.glaldocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glaldocno
            #add-point:ON ACTION controlp INFIELD glaldocno name="input.c.glaldocno"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_glal_m.glaldocno             #給予default值

            #給予arg
            LET g_qryparam.where = "ooba001 = '",g_glaa024,"' AND oobx002 = 'AGL' AND oobx003 = 'aglt390' "
            #161104-00046#11-----s
            IF NOT cl_null(g_user_slip_wc)THEN
               LET g_qryparam.where = g_qryparam.where," AND ",g_user_slip_wc CLIPPED
            END IF
            #161104-00046#11-----e
            CALL q_ooba002_4()                                #呼叫開窗

            LET g_glal_m.glaldocno = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_glal_m.glaldocno TO glaldocno              #顯示到畫面上

            NEXT FIELD glaldocno                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.glaldocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glaldocdt
            #add-point:ON ACTION controlp INFIELD glaldocdt name="input.c.glaldocdt"
            
            #END add-point
 
 
         #Ctrlp:input.c.glal002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glal002
            #add-point:ON ACTION controlp INFIELD glal002 name="input.c.glal002"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_glal_m.glal002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "3004" #

            CALL q_oocq002()                                #呼叫開窗

            LET g_glal_m.glal002 = g_qryparam.return1              #將開窗取得的值回傳到變數
            CALL aglt390_glal002_desc(g_glal_m.glal002) RETURNING g_glal_m.glal002_desc
            DISPLAY BY NAME g_glal_m.glal002_desc
            DISPLAY g_glal_m.glal002 TO glal002              #顯示到畫面上

            NEXT FIELD glal002                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.glal003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glal003
            #add-point:ON ACTION controlp INFIELD glal003 name="input.c.glal003"
            
            #END add-point
 
 
         #Ctrlp:input.c.glal006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glal006
            #add-point:ON ACTION controlp INFIELD glal006 name="input.c.glal006"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_glal_m.glal006             #給予default值

            #給予arg
            LET g_qryparam.where = "ooba001 = '",g_glaa024,"' AND oobx002 = 'AGL' AND oobx003 = 'aglt310' "
            CALL q_ooba002_4()                                #呼叫開窗

            LET g_glal_m.glal006 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_glal_m.glal006 TO glal006              #顯示到畫面上

            NEXT FIELD glal006                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.glal007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glal007
            #add-point:ON ACTION controlp INFIELD glal007 name="input.c.glal007"
            
            #END add-point
 
 
         #Ctrlp:input.c.glalstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glalstus
            #add-point:ON ACTION controlp INFIELD glalstus name="input.c.glalstus"
            
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_glal_m.glalld,g_glal_m.glaldocno
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               CALL s_aooi200_fin_gen_docno(g_glal_m.glalld,g_glaa024,g_glaa003,g_glal_m.glaldocno,g_glal_m.glaldocdt,g_prog)
               RETURNING l_success,g_glal_m.glaldocno
               IF l_success  = FALSE  THEN
                  NEXT FIELD glaldocno
               END IF
               CALL cl_set_comp_entry('glaldocno,glaldocdt',FALSE)
               DISPLAY BY NAME g_glal_m.glaldocno
               #end add-point
               
               INSERT INTO glal_t (glalent,glalld,glalcomp,glal001,glaldocno,glaldocdt,glal002,glal003, 
                   glal006,glal007,glalstus,glalownid,glalowndp,glalcrtid,glalcrtdp,glalcrtdt,glalmodid, 
                   glalmoddt,glalcnfid,glalcnfdt)
               VALUES (g_enterprise,g_glal_m.glalld,g_glal_m.glalcomp,g_glal_m.glal001,g_glal_m.glaldocno, 
                   g_glal_m.glaldocdt,g_glal_m.glal002,g_glal_m.glal003,g_glal_m.glal006,g_glal_m.glal007, 
                   g_glal_m.glalstus,g_glal_m.glalownid,g_glal_m.glalowndp,g_glal_m.glalcrtid,g_glal_m.glalcrtdp, 
                   g_glal_m.glalcrtdt,g_glal_m.glalmodid,g_glal_m.glalmoddt,g_glal_m.glalcnfid,g_glal_m.glalcnfdt)  
 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_glal_m:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
                  
               #end add-point
               
               
               
               
               #add-point:單頭新增後 name="input.head.a_insert"
               #新增状态下，新增科目以及分摊百分比
               IF l_cmd_t = 'a' THEN
                  CALL aglt390_01(g_glal_m.glaldocno,g_glal_m.glalld,g_glal_m.glaldocdt,'a','aglt390') 
                  RETURNING g_success
               END IF   
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL aglt390_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL aglt390_b_fill()
                  CALL aglt390_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
               
               #將遮罩欄位還原
               CALL aglt390_glal_t_mask_restore('restore_mask_o')
               
               UPDATE glal_t SET (glalld,glalcomp,glal001,glaldocno,glaldocdt,glal002,glal003,glal006, 
                   glal007,glalstus,glalownid,glalowndp,glalcrtid,glalcrtdp,glalcrtdt,glalmodid,glalmoddt, 
                   glalcnfid,glalcnfdt) = (g_glal_m.glalld,g_glal_m.glalcomp,g_glal_m.glal001,g_glal_m.glaldocno, 
                   g_glal_m.glaldocdt,g_glal_m.glal002,g_glal_m.glal003,g_glal_m.glal006,g_glal_m.glal007, 
                   g_glal_m.glalstus,g_glal_m.glalownid,g_glal_m.glalowndp,g_glal_m.glalcrtid,g_glal_m.glalcrtdp, 
                   g_glal_m.glalcrtdt,g_glal_m.glalmodid,g_glal_m.glalmoddt,g_glal_m.glalcnfid,g_glal_m.glalcnfdt) 
 
                WHERE glalent = g_enterprise AND glalld = g_glalld_t
                  AND glaldocno = g_glaldocno_t
 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "glal_t:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL aglt390_glal_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_glal_m_t)
               LET g_log2 = util.JSON.stringify(g_glal_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_glalld_t = g_glal_m.glalld
            LET g_glaldocno_t = g_glal_m.glaldocno
 
            
      END INPUT
   
 
{</section>}
 
{<section id="aglt390.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_glam_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_glam_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aglt390_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_glam_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aglt390_cl USING g_enterprise,g_glal_m.glalld,g_glal_m.glaldocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN aglt390_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE aglt390_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_glam_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_glam_d[l_ac].glamseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_glam_d_t.* = g_glam_d[l_ac].*  #BACKUP
               LET g_glam_d_o.* = g_glam_d[l_ac].*  #BACKUP
               CALL aglt390_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               
               #end add-point  
               CALL aglt390_set_no_entry_b(l_cmd)
               IF NOT aglt390_lock_b("glam_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aglt390_bcl INTO g_glam_d[l_ac].glamseq,g_glam_d[l_ac].glamcomp,g_glam_d[l_ac].glam001, 
                      g_glam_d[l_ac].glam002,g_glam_d[l_ac].glam003,g_glam_d[l_ac].glam004
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_glam_d_t.glamseq,":",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_glam_d_mask_o[l_ac].* =  g_glam_d[l_ac].*
                  CALL aglt390_glam_t_mask()
                  LET g_glam_d_mask_n[l_ac].* =  g_glam_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL aglt390_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            CALL cl_set_comp_entry('glam003,glam004',TRUE)
            CALL aglt390_glam002('Y') RETURNING l_glam002,l_str
            LET g_glam_d[l_ac].lc_subject = g_glam_d[l_ac].glam002,l_str,'\n',l_glam002
            DISPLAY BY NAME g_glam_d[l_ac].lc_subject
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_glam_d[l_ac].* TO NULL 
            INITIALIZE g_glam_d_t.* TO NULL 
            INITIALIZE g_glam_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
            
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            
            #end add-point
            LET g_glam_d_t.* = g_glam_d[l_ac].*     #新輸入資料
            LET g_glam_d_o.* = g_glam_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aglt390_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            
            #end add-point
            CALL aglt390_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_glam_d[li_reproduce_target].* = g_glam_d[li_reproduce].*
 
               LET g_glam_d[li_reproduce_target].glamseq = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
            IF l_cmd = 'a' THEN 
               IF cl_null(g_glam_d[g_detail_idx].glamseq) THEN 
                  SELECT MAX(glamseq) INTO g_glam_d[g_detail_idx].glamseq
                    FROM glam_t
                   WHERE glament = g_enterprise
                     AND glamld = g_glal_m.glalld
                     AND glamdocno = g_glal_m.glaldocno
                     
                  IF cl_null(g_glam_d[g_detail_idx].glamseq) THEN 
                     LET g_glam_d[g_detail_idx].glamseq = 1
                  ELSE
                     LET g_glam_d[g_detail_idx].glamseq = g_glam_d[g_detail_idx].glamseq + 1
                  END IF
               END IF 
            END IF
            LET g_glam_d[l_ac].glamcomp = g_glal_m.glalcomp
            LET g_glam_d[l_ac].glam003 = 0
            LET g_glam_d[l_ac].glam004 = 0
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM glam_t 
             WHERE glament = g_enterprise AND glamld = g_glal_m.glalld
               AND glamdocno = g_glal_m.glaldocno
 
               AND glamseq = g_glam_d[l_ac].glamseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_glal_m.glalld
               LET gs_keys[2] = g_glal_m.glaldocno
               LET gs_keys[3] = g_glam_d[g_detail_idx].glamseq
               CALL aglt390_insert_b('glam_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               INITIALIZE g_glam_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "glam_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aglt390_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               CALL aglt390_update_forzen() RETURNING l_success
               IF l_success = FALSE THEN
                  CALL s_transaction_end('N','0')                    
                  CANCEL INSERT
               END IF
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_glal_m.glalld
               LET gs_keys[gs_keys.getLength()+1] = g_glal_m.glaldocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_glam_d_t.glamseq
 
            
               #刪除同層單身
               IF NOT aglt390_delete_b('glam_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE aglt390_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT aglt390_key_delete_b(gs_keys,'glam_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE aglt390_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
               
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE aglt390_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               
               #end add-point
               LET l_count = g_glam_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_glam_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glamseq
            #add-point:BEFORE FIELD glamseq name="input.b.page1.glamseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glamseq
            
            #add-point:AFTER FIELD glamseq name="input.a.page1.glamseq"
            #此段落由子樣板a05產生
            IF  g_glal_m.glalld IS NOT NULL AND g_glal_m.glaldocno IS NOT NULL AND g_glam_d[g_detail_idx].glamseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glal_m.glalld != g_glalld_t OR g_glal_m.glaldocno != g_glaldocno_t OR g_glam_d[g_detail_idx].glamseq != g_glam_d_t.glamseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM glam_t WHERE "||"glament = '" ||g_enterprise|| "' AND "||"glamld = '"||g_glal_m.glalld ||"' AND "|| "glamdocno = '"||g_glal_m.glaldocno ||"' AND "|| "glamseq = '"||g_glam_d[g_detail_idx].glamseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glamseq
            #add-point:ON CHANGE glamseq name="input.g.page1.glamseq"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glamcomp
            #add-point:BEFORE FIELD glamcomp name="input.b.page1.glamcomp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glamcomp
            
            #add-point:AFTER FIELD glamcomp name="input.a.page1.glamcomp"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glamcomp
            #add-point:ON CHANGE glamcomp name="input.g.page1.glamcomp"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glam001
            #add-point:BEFORE FIELD glam001 name="input.b.page1.glam001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glam001
            
            #add-point:AFTER FIELD glam001 name="input.a.page1.glam001"
            IF NOT cl_null(g_glam_d[l_ac].glam001) THEN
              IF l_ac>1 THEN
                 IF g_glam_d[l_ac].glam001='cc' OR g_glam_d[l_ac].glam001='CC' OR g_glam_d[l_ac].glam001='Cc' OR g_glam_d[l_ac].glam001='cC' THEN
                    LET g_glam_d[l_ac].glam001= g_glam_d[l_ac-1].glam001
                 END IF
              END IF
              LET g_msg = g_glam_d[l_ac].glam001
              IF g_msg[1,1] = '.' THEN
                 LET g_msg = g_msg[2,10]
                 SELECT oocql004 INTO g_glam_d[l_ac].glam001 FROM oocql_t
                  WHERE oocqlent = g_enterprise
                    AND oocql001 = '3005'
                    AND oocql002 = g_msg
                    AND oocql003 = g_dlang
                 DISPLAY BY NAME g_glam_d[l_ac].glam001
              END IF
           END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glam001
            #add-point:ON CHANGE glam001 name="input.g.page1.glam001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glam002
            #add-point:BEFORE FIELD glam002 name="input.b.page1.glam002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glam002
            
            #add-point:AFTER FIELD glam002 name="input.a.page1.glam002"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glam002
            #add-point:ON CHANGE glam002 name="input.g.page1.glam002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD lc_subject
            #add-point:BEFORE FIELD lc_subject name="input.b.page1.lc_subject"
            LET g_glam_d[l_ac].lc_subject = g_glam_d[l_ac].glam002
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD lc_subject
            
            #add-point:AFTER FIELD lc_subject name="input.a.page1.lc_subject"
             IF NOT cl_null(g_glam_d[l_ac].lc_subject) THEN 
               # 开窗模糊查询 150916-00015#1 --add                      
               IF s_aglt310_getlike_lc_subject(g_glal_m.glalld,g_glam_d[l_ac].lc_subject,"")  THEN            
                  
                  SELECT glaa004 INTO l_glaa004
                    FROM glaa_t
                   WHERE glaaent = g_enterprise
                     AND glaald  = g_glal_m.glalld
                  
                  INITIALIZE g_qryparam.* TO NULL
                  LET g_qryparam.state = 'i'
                  LET g_qryparam.reqry = 'FALSE'
                  LET g_qryparam.default1 =g_glam_d[l_ac].lc_subject
                                
                  LET g_qryparam.arg1 = l_glaa004
                  LET g_qryparam.arg2 = g_glam_d[l_ac].lc_subject
                  LET g_qryparam.arg3 = g_glal_m.glalld
                  LET g_qryparam.arg4 = " 1"
                  CALL q_glac002_6()
                  LET  g_glam_d[l_ac].lc_subject = g_qryparam.return1
                  DISPLAY g_glam_d[l_ac].lc_subject TO lc_subject                  
               END IF
               # 150916-00015#1 --end
                #151117-00009#1--add--str--
               #科目存在性，有效性，非统治科目，账户科目属性检查
               CALL s_voucher_glaq002_chk(g_glal_m.glalld,g_glam_d[l_ac].lc_subject)
               IF NOT cl_null(g_errno) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_glam_d[l_ac].lc_subject
                  #160321-00016#30 --s add
                  LET g_errparam.replace[1] = 'agli030'
                  LET g_errparam.replace[2] = cl_get_progname('agli030',g_lang,"2")
                  LET g_errparam.exeprog = 'agli030'
                  #160321-00016#30 --e add
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_glam_d[l_ac].lc_subject = g_glam_d_t.lc_subject
                  NEXT FIELD lc_subject                
               END IF
               #151117-00009#1--add--end
               #科目为非子系统科目
                CALL aglt390_glam002_chk(g_glam_d[l_ac].lc_subject) 
                IF NOT cl_null(g_errno) THEN
                   INITIALIZE g_errparam TO NULL
                   LET g_errparam.code = g_errno
                   LET g_errparam.extend = g_glam_d[l_ac].lc_subject
                   LET g_errparam.popup = TRUE
                   CALL cl_err()

                   LET g_glam_d[l_ac].lc_subject = g_glam_d_t.lc_subject
                   NEXT FIELD lc_subject
               END IF
               LET g_glam_d[l_ac].glam002 = g_glam_d[l_ac].lc_subject
               IF l_cmd = 'a' THEN 
                  CALL aglt390_frozen_clear()
                  #如果有启用核算项，则开处子视窗，否则不开
#                  IF l_cnt > 0  THEN
                     CALL aglt360_01('a',g_glal_m.glalld,'',g_glal_m.glaldocdt,g_glam_d[l_ac].glam002,'','glam002')
                     RETURNING g_glal_m.glam007,g_glal_m.glam007_desc,g_glal_m.glam008,g_glal_m.glam008_desc,
                               g_glal_m.glam009,g_glal_m.glam009_desc,g_glal_m.glam010,g_glal_m.glam010_desc,
                               g_glal_m.glam011,g_glal_m.glam011_desc,g_glal_m.glam012,g_glal_m.glam012_desc,
                               g_glal_m.glam013,g_glal_m.glam013_desc,g_glal_m.glam014,g_glal_m.glam014_desc,
                               g_glal_m.glam015,g_glal_m.glam015_desc,
                               g_glal_m.glam017,g_glal_m.glam017_desc,g_glal_m.glam018,g_glal_m.glam018_desc,
                               g_glal_m.glam051,g_glal_m.glam052,g_glal_m.glam052_desc,
                               g_glal_m.glam053,g_glal_m.glam053_desc
                     
#                  END IF
               ELSE
                  CALL aglt360_01('u',g_glal_m.glalld,g_glal_m.glaldocno,g_glal_m.glaldocdt,g_glam_d[l_ac].glam002,g_glam_d[l_ac].glamseq,'glam002')
                  RETURNING g_glal_m.glam007,g_glal_m.glam007_desc,g_glal_m.glam008,g_glal_m.glam008_desc,
                            g_glal_m.glam009,g_glal_m.glam009_desc,g_glal_m.glam010,g_glal_m.glam010_desc,
                            g_glal_m.glam011,g_glal_m.glam011_desc,g_glal_m.glam012,g_glal_m.glam012_desc,
                            g_glal_m.glam013,g_glal_m.glam013_desc,g_glal_m.glam014,g_glal_m.glam014_desc,
                            g_glal_m.glam015,g_glal_m.glam015_desc,
                            g_glal_m.glam017,g_glal_m.glam017_desc,g_glal_m.glam018,g_glal_m.glam018_desc,
                            g_glal_m.glam051,g_glal_m.glam052,g_glal_m.glam052_desc,
                            g_glal_m.glam053,g_glal_m.glam053_desc
                  
               END IF  
               DISPLAY g_glal_m.glam007 TO glam007
               DISPLAY g_glal_m.glam008 TO glam008
               DISPLAY g_glal_m.glam009 TO glam009
               DISPLAY g_glal_m.glam010 TO glam010
               DISPLAY g_glal_m.glam011 TO glam011
               DISPLAY g_glal_m.glam012 TO glam012
               DISPLAY g_glal_m.glam013 TO glam013
               DISPLAY g_glal_m.glam014 TO glam014
               DISPLAY g_glal_m.glam015 TO glam015
               DISPLAY g_glal_m.glam017 TO glam017
               DISPLAY g_glal_m.glam018 TO glam018 
               DISPLAY g_glal_m.glam051 TO glam051
               DISPLAY g_glal_m.glam052 TO glam052
               DISPLAY g_glal_m.glam053 TO glam053  
               DISPLAY g_glal_m.glam007_desc TO glam007_desc
               DISPLAY g_glal_m.glam008_desc TO glam008_desc
               DISPLAY g_glal_m.glam009_desc TO glam009_desc
               DISPLAY g_glal_m.glam010_desc TO glam010_desc
               DISPLAY g_glal_m.glam011_desc TO glam011_desc
               DISPLAY g_glal_m.glam012_desc TO glam012_desc
               DISPLAY g_glal_m.glam013_desc TO glam013_desc
               DISPLAY g_glal_m.glam014_desc TO glam014_desc
               DISPLAY g_glal_m.glam015_desc TO glam015_desc
               DISPLAY g_glal_m.glam017_desc TO glam017_desc
               DISPLAY g_glal_m.glam018_desc TO glam018_desc
               DISPLAY g_glal_m.glam052_desc TO glam052_desc
               DISPLAY g_glal_m.glam053_desc TO glam053_desc
               #重新抓取单身冻结部分显示               
               CALL aglt390_glam002('N') RETURNING l_glam002,l_str
               LET g_glam_d[l_ac].lc_subject = g_glam_d[l_ac].glam002,l_str,'\n',l_glam002

               
#               CALL aglt390_glam002_desc(g_glam_d[l_ac].glam002) RETURNING  l_glam002_desc
#               LET g_glam_d[l_ac].lc_subject = g_glam_d[l_ac].glam002,'\n',l_glam002_desc           
               DISPLAY BY NAME g_glam_d[l_ac].lc_subject
            END IF 
            IF NOT cl_null(g_glam_d[l_ac].lc_subject) AND g_glam_d[l_ac].glam003 = 0 AND g_glam_d[l_ac].glam004 = 0 THEN 
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'agl-00173'
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               NEXT FIELD glam003
            END IF 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE lc_subject
            #add-point:ON CHANGE lc_subject name="input.g.page1.lc_subject"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glam003
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_glam_d[l_ac].glam003,"0","1","","","azz-00079",1) THEN
               NEXT FIELD glam003
            END IF 
 
 
 
            #add-point:AFTER FIELD glam003 name="input.a.page1.glam003"
            IF cl_null(g_glam_d[l_ac].glam003) THEN 
               LET g_glam_d[l_ac].glam003 = 0
            END IF 
            
            #离开该栏位将贷方金额置为0
            #IF NOT cl_null(g_glam_d[l_ac].glam003) AND g_glam_d[l_ac].glam003 <> 0 THEN 
            #   IF NOT cl_null(g_glam_d[l_ac].glam004) AND g_glam_d[l_ac].glam004 <> 0 THEN 
            #      LET g_glam_d[l_ac].glam004 = 0
            #      CALL cl_err(g_glam_d[l_ac].glam003,'agl-00135',1)
            #   END IF
            #END IF 
            #借贷不可都为0 
            IF g_glam_d[l_ac].glam003 = 0 AND g_glam_d[l_ac].glam004 = 0 THEN 
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'agl-00173'
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               NEXT FIELD glam004
            END IF 

            #借贷不可都不为0
            IF g_glam_d[l_ac].glam003 <> 0 AND g_glam_d[l_ac].glam004 <> 0 THEN 
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'agl-00048'
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()
              
               IF NOT cl_null(g_glam_d_t.glam003)  THEN
                  LET g_glam_d[l_ac].glam003 = g_glam_d_t.glam003
               ELSE
                  LET g_glam_d[l_ac].glam003 = 0
               END IF  
               NEXT FIELD glam003
            END IF

            #借方为空0时，贷方栏位锁掉
            IF g_glam_d[l_ac].glam003 <> 0 THEN
               CALL cl_set_comp_entry('glam004',FALSE)
            ELSE
               CALL cl_set_comp_entry('glam004',TRUE)            
            END IF 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glam003
            #add-point:BEFORE FIELD glam003 name="input.b.page1.glam003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glam003
            #add-point:ON CHANGE glam003 name="input.g.page1.glam003"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glam004
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_glam_d[l_ac].glam004,"0","1","","","azz-00079",1) THEN
               NEXT FIELD glam004
            END IF 
 
 
 
            #add-point:AFTER FIELD glam004 name="input.a.page1.glam004"
            IF cl_null(g_glam_d[l_ac].glam004) THEN 
               LET g_glam_d[l_ac].glam004 = 0
            END IF     
        
            #借贷不可都为0 
            IF g_glam_d[l_ac].glam003 = 0 AND g_glam_d[l_ac].glam004 = 0 THEN 
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'agl-00173'
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               NEXT FIELD glam003
            END IF 

            #借贷不可都不为0
            IF g_glam_d[l_ac].glam003 <> 0 AND g_glam_d[l_ac].glam004 <> 0 THEN 
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'agl-00048'
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               IF NOT cl_null(g_glam_d_t.glam004)  THEN
                  LET g_glam_d[l_ac].glam004 = g_glam_d_t.glam004
               ELSE
                  LET g_glam_d[l_ac].glam004 = 0
               END IF  
               NEXT FIELD glam004
            END IF

            #借方为空0时，贷方栏位锁掉
            IF g_glam_d[l_ac].glam004 <> 0 THEN
               CALL cl_set_comp_entry('glam003',FALSE)
            ELSE
               CALL cl_set_comp_entry('glam003',TRUE)            
            END IF 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glam004
            #add-point:BEFORE FIELD glam004 name="input.b.page1.glam004"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glam004
            #add-point:ON CHANGE glam004 name="input.g.page1.glam004"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.glamseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glamseq
            #add-point:ON ACTION controlp INFIELD glamseq name="input.c.page1.glamseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.glamcomp
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glamcomp
            #add-point:ON ACTION controlp INFIELD glamcomp name="input.c.page1.glamcomp"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.glam001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glam001
            #add-point:ON ACTION controlp INFIELD glam001 name="input.c.page1.glam001"
             #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_glam_d[l_ac].glam001             #給予default值
            LET g_qryparam.where = " ( oocq004 = '",g_glal_m.glalcomp,"' OR oocq004 IS NULL) " #161111-00049#4 add
            #給予arg
            CALL q_oocq002_2()                                           #呼叫開窗

            LET g_glam_d[l_ac].glam001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_glam_d[l_ac].glam001 TO glam001                    #顯示到畫面上

            NEXT FIELD glam001                                           #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.page1.glam002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glam002
            #add-point:ON ACTION controlp INFIELD glam002 name="input.c.page1.glam002"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_glam_d[l_ac].glam002             #給予default值

            #給予arg

            CALL aglt310_04()                                #呼叫開窗

            LET g_glam_d[l_ac].glam002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_glam_d[l_ac].glam002 TO glam002              #顯示到畫面上

            NEXT FIELD glam002                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.lc_subject
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD lc_subject
            #add-point:ON ACTION controlp INFIELD lc_subject name="input.c.page1.lc_subject"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_glam_d[l_ac].lc_subject             #給予default值
           #LET g_qryparam.where = "glac001 = '",g_glaa004,"' AND  glac003 <>'1' AND glac006 = '1' "  #150827-00036#7 mark
            LET g_qryparam.where = "glac001 = '",g_glaa004,"' AND  glac003 <>'1' AND glac006 = '1' AND glac002 IN (SELECT glad001 FROM glad_t WHERE gladent = '",g_enterprise,"' AND gladld ='",g_glal_m.glalld,"' AND glad035 = 'N' AND gladstus = 'Y' ) "  #150827-00036#7 add
            #給予arg
            CALL aglt310_04()
            LET g_glam_d[l_ac].lc_subject = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_glam_d[l_ac].glam002 = g_glam_d[l_ac].lc_subject
            DISPLAY g_glam_d[l_ac].lc_subject TO lc_subject              #顯示到畫面上
            LET g_qryparam.where = NULL
            NEXT FIELD lc_subject                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.glam003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glam003
            #add-point:ON ACTION controlp INFIELD glam003 name="input.c.page1.glam003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.glam004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glam004
            #add-point:ON ACTION controlp INFIELD glam004 name="input.c.page1.glam004"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_glam_d[l_ac].* = g_glam_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE aglt390_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_glam_d[l_ac].glamseq 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_glam_d[l_ac].* = g_glam_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL aglt390_glam_t_mask_restore('restore_mask_o')
      
               UPDATE glam_t SET (glamld,glamdocno,glamseq,glamcomp,glam001,glam002,glam003,glam004) = (g_glal_m.glalld, 
                   g_glal_m.glaldocno,g_glam_d[l_ac].glamseq,g_glam_d[l_ac].glamcomp,g_glam_d[l_ac].glam001, 
                   g_glam_d[l_ac].glam002,g_glam_d[l_ac].glam003,g_glam_d[l_ac].glam004)
                WHERE glament = g_enterprise AND glamld = g_glal_m.glalld 
                  AND glamdocno = g_glal_m.glaldocno 
 
                  AND glamseq = g_glam_d_t.glamseq #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_glam_d[l_ac].* = g_glam_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "glam_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_glam_d[l_ac].* = g_glam_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "glam_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_glal_m.glalld
               LET gs_keys_bak[1] = g_glalld_t
               LET gs_keys[2] = g_glal_m.glaldocno
               LET gs_keys_bak[2] = g_glaldocno_t
               LET gs_keys[3] = g_glam_d[g_detail_idx].glamseq
               LET gs_keys_bak[3] = g_glam_d_t.glamseq
               CALL aglt390_update_b('glam_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL aglt390_glam_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_glam_d[g_detail_idx].glamseq = g_glam_d_t.glamseq 
 
                  ) THEN
                  LET gs_keys[01] = g_glal_m.glalld
                  LET gs_keys[gs_keys.getLength()+1] = g_glal_m.glaldocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_glam_d_t.glamseq
 
                  CALL aglt390_key_update_b(gs_keys,'glam_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_glal_m),util.JSON.stringify(g_glam_d_t)
               LET g_log2 = util.JSON.stringify(g_glal_m),util.JSON.stringify(g_glam_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            #將離開科目欄位后的业务咨询/固定核算项 insert進DB
            CALL aglt390_update_forzen() RETURNING l_success
            IF l_success = FALSE THEN
               CALL s_transaction_end('N','0')
            END IF
            
            CALL aglt390_b_fill()
            #end add-point
            CALL aglt390_unlock_b("glam_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_glam_d[li_reproduce_target].* = g_glam_d[li_reproduce].*
 
               LET g_glam_d[li_reproduce_target].glamseq = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_glam_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_glam_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
 
 
 
{</section>}
 
{<section id="aglt390.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         IF p_cmd = 'a' THEN
            NEXT FIELD glaldocno
         END IF
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1',"))      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            
            #end add-point  
            NEXT FIELD glalld
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD glamseq
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   CALL cl_err_collect_init()
   SELECT sum(glam003),sum(glam004)
     INTO l_sum1,l_sum2
     FROM glam_t
    WHERE glament = g_enterprise
      AND glamld = g_glal_m.glalld
      AND glamdocno = g_glal_m.glaldocno
   IF l_sum1 <> l_sum2 THEN
#      CALL cl_errmsg('','','','agl-00197',1)
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = g_glal_m.glaldocno
      LET g_errparam.code   = 'agl-00197'
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   END IF
   CALL cl_err_collect_show()
   #end add-point    
 
END FUNCTION
 
{</section>}
 
{<section id="aglt390.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aglt390_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   DEFINE l_glam002_desc    LIKE type_t.chr200
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   #如果状态不为开立，则删除修改按钮灰掉
  IF g_glal_m.glalstus <>'N' THEN
     CALL cl_set_act_visible('modify,delete,modify_detail',FALSE)
  ELSE
     CALL cl_set_act_visible('modify,delete,modify_detail',TRUE)  
  END IF 
  
  #依据对应的主账套编码，抓取币别
  SELECT glaacomp,glaa001,glaa002,glaa003,glaa004,glaa013,glaa024,glaa113 
    INTO g_glaacomp,g_glaa001,g_glaa002,g_glaa003,g_glaa004,g_glaa013,g_glaa024,g_glaa113
    FROM glaa_t
   WHERE glaaent = g_enterprise
     AND glaald = g_glal_m.glalld 
   LET g_glal_m.glaa001 = g_glaa001
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL aglt390_b_fill() #單身填充
      CALL aglt390_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL aglt390_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
            #帐别说明
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glal_m.glalld
            CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glal_m.glalld_desc = g_rtn_fields[1] 
            DISPLAY BY NAME g_glal_m.glalld_desc
            
            #法人说明
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glal_m.glalcomp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glal_m.glalcomp_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_glal_m.glalcomp_desc
            
            #分摊说明
            CALL aglt390_glal002_desc(g_glal_m.glal002) RETURNING g_glal_m.glal002_desc
            DISPLAY BY NAME g_glal_m.glal002_desc
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glal_m.glalownid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_glal_m.glalownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glal_m.glalownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glal_m.glalowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glal_m.glalowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glal_m.glalowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glal_m.glalcrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_glal_m.glalcrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glal_m.glalcrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glal_m.glalcrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glal_m.glalcrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glal_m.glalcrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glal_m.glalmodid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_glal_m.glalmodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glal_m.glalmodid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glal_m.glalcnfid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_glal_m.glalcnfid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glal_m.glalcnfid_desc


   #end add-point
   
   #遮罩相關處理
   LET g_glal_m_mask_o.* =  g_glal_m.*
   CALL aglt390_glal_t_mask()
   LET g_glal_m_mask_n.* =  g_glal_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_glal_m.glalld,g_glal_m.glalld_desc,g_glal_m.glalcomp,g_glal_m.glalcomp_desc,g_glal_m.glaa001, 
       g_glal_m.glal001,g_glal_m.glaldocno,g_glal_m.glaldocdt,g_glal_m.glal002,g_glal_m.glal002_desc, 
       g_glal_m.glal003,g_glal_m.glal006,g_glal_m.glal007,g_glal_m.glalstus,g_glal_m.glalownid,g_glal_m.glalownid_desc, 
       g_glal_m.glalowndp,g_glal_m.glalowndp_desc,g_glal_m.glalcrtid,g_glal_m.glalcrtid_desc,g_glal_m.glalcrtdp, 
       g_glal_m.glalcrtdp_desc,g_glal_m.glalcrtdt,g_glal_m.glalmodid,g_glal_m.glalmodid_desc,g_glal_m.glalmoddt, 
       g_glal_m.glalcnfid,g_glal_m.glalcnfid_desc,g_glal_m.glalcnfdt,g_glal_m.glam007,g_glal_m.glam007_desc, 
       g_glal_m.glam008,g_glal_m.glam008_desc,g_glal_m.glam009,g_glal_m.glam009_desc,g_glal_m.glam010, 
       g_glal_m.glam010_desc,g_glal_m.glam011,g_glal_m.glam011_desc,g_glal_m.glam012,g_glal_m.glam012_desc, 
       g_glal_m.glam013,g_glal_m.glam013_desc,g_glal_m.glam014,g_glal_m.glam014_desc,g_glal_m.glam051, 
       g_glal_m.glam052,g_glal_m.glam052_desc,g_glal_m.glam053,g_glal_m.glam053_desc,g_glal_m.glam015, 
       g_glal_m.glam015_desc,g_glal_m.glam017,g_glal_m.glam017_desc,g_glal_m.glam018,g_glal_m.glam018_desc 
 
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_glal_m.glalstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_glam_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
#      CALL aglt390_glam002_desc(g_glam_d[l_ac].glam002) RETURNING l_glam002_desc
#      LET g_glam_d[l_ac].lc_subject = g_glam_d[l_ac].glam002,'\n',l_glam002_desc
      
      
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other name="show.other"
   
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL aglt390_detail_show()
 
   #add-point:show段之後 name="show.after"
   CALL aglt390_b_detail()
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="aglt390.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION aglt390_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="aglt390.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION aglt390_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   
   #end add-point   
   DEFINE l_newno     LIKE glal_t.glalld 
   DEFINE l_oldno     LIKE glal_t.glalld 
   DEFINE l_newno02     LIKE glal_t.glaldocno 
   DEFINE l_oldno02     LIKE glal_t.glaldocno 
 
   DEFINE l_master    RECORD LIKE glal_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE glam_t.* #此變數樣板目前無使用
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_glal_m.glalld IS NULL
   OR g_glal_m.glaldocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_glalld_t = g_glal_m.glalld
   LET g_glaldocno_t = g_glal_m.glaldocno
 
    
   LET g_glal_m.glalld = ""
   LET g_glal_m.glaldocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_glal_m.glalownid = g_user
      LET g_glal_m.glalowndp = g_dept
      LET g_glal_m.glalcrtid = g_user
      LET g_glal_m.glalcrtdp = g_dept 
      LET g_glal_m.glalcrtdt = cl_get_current()
      LET g_glal_m.glalmodid = g_user
      LET g_glal_m.glalmoddt = cl_get_current()
      LET g_glal_m.glalstus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   LET g_glal_m.glalld = g_glalld_t
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_glal_m.glalstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
      LET g_glal_m.glalld_desc = ''
   DISPLAY BY NAME g_glal_m.glalld_desc
 
   
   CALL aglt390_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_glal_m.* TO NULL
      INITIALIZE g_glam_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      
      #end add-point
      CALL aglt390_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code = 9001 
      LET g_errparam.popup = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aglt390_set_act_visible()   
   CALL aglt390_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_glalld_t = g_glal_m.glalld
   LET g_glaldocno_t = g_glal_m.glaldocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " glalent = " ||g_enterprise|| " AND",
                      " glalld = '", g_glal_m.glalld, "' "
                      ," AND glaldocno = '", g_glal_m.glaldocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL aglt390_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   CALL aglt390_idx_chk()
   
   LET g_data_owner = g_glal_m.glalownid      
   LET g_data_dept  = g_glal_m.glalowndp
   
   #功能已完成,通報訊息中心
   CALL aglt390_msgcentre_notify('reproduce')
 
END FUNCTION
 
{</section>}
 
{<section id="aglt390.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION aglt390_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE glam_t.* #此變數樣板目前無使用
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE aglt390_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM glam_t
    WHERE glament = g_enterprise AND glamld = g_glalld_t
     AND glamdocno = g_glaldocno_t
 
    INTO TEMP aglt390_detail
 
   #將key修正為調整後   
   UPDATE aglt390_detail 
      #更新key欄位
      SET glamld = g_glal_m.glalld
          , glamdocno = g_glal_m.glaldocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO glam_t SELECT * FROM aglt390_detail
   
   IF SQLCA.SQLCODE THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aglt390_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_glalld_t = g_glal_m.glalld
   LET g_glaldocno_t = g_glal_m.glaldocno
 
   
END FUNCTION
 
{</section>}
 
{<section id="aglt390.delete" >}
#+ 資料刪除
PRIVATE FUNCTION aglt390_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   DEFINE l_success        LIKE type_t.num5
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_glal_m.glalld IS NULL
   OR g_glal_m.glaldocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN aglt390_cl USING g_enterprise,g_glal_m.glalld,g_glal_m.glaldocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aglt390_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE aglt390_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aglt390_master_referesh USING g_glal_m.glalld,g_glal_m.glaldocno INTO g_glal_m.glalld,g_glal_m.glalcomp, 
       g_glal_m.glal001,g_glal_m.glaldocno,g_glal_m.glaldocdt,g_glal_m.glal002,g_glal_m.glal003,g_glal_m.glal006, 
       g_glal_m.glal007,g_glal_m.glalstus,g_glal_m.glalownid,g_glal_m.glalowndp,g_glal_m.glalcrtid,g_glal_m.glalcrtdp, 
       g_glal_m.glalcrtdt,g_glal_m.glalmodid,g_glal_m.glalmoddt,g_glal_m.glalcnfid,g_glal_m.glalcnfdt, 
       g_glal_m.glalownid_desc,g_glal_m.glalowndp_desc,g_glal_m.glalcrtid_desc,g_glal_m.glalcrtdp_desc, 
       g_glal_m.glalmodid_desc,g_glal_m.glalcnfid_desc
   
   
   #檢查是否允許此動作
   IF NOT aglt390_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_glal_m_mask_o.* =  g_glal_m.*
   CALL aglt390_glal_t_mask()
   LET g_glal_m_mask_n.* =  g_glal_m.*
   
   CALL aglt390_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   CALL s_ld_chk_authorization(g_user,g_glal_m.glalld) RETURNING l_success
   IF l_success = FALSE THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'agl-00165'
      LET g_errparam.extend = g_glalld
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CLOSE aglt390_cl
      CALL s_transaction_end('N','0')
      RETURN 
   END IF 
   IF g_glal_m.glalstus <> 'N' THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'agl-00052'
      LET g_errparam.extend = 'delete'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CLOSE aglt390_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF 
   #檢查當單據日期小於等於關帳日期時，不可異動單據
   CALL s_fin_date_close_chk(g_glal_m.glalld,'','AGL',g_glal_m.glaldocdt) RETURNING l_success
   IF l_success = FALSE THEN
      CLOSE aglt390_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL aglt390_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_glalld_t = g_glal_m.glalld
      LET g_glaldocno_t = g_glal_m.glaldocno
 
 
      DELETE FROM glal_t
       WHERE glalent = g_enterprise AND glalld = g_glal_m.glalld
         AND glaldocno = g_glal_m.glaldocno
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
 
      #end add-point
       
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_glal_m.glalld,":",SQLERRMESSAGE  
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      IF NOT s_aooi200_fin_del_docno(g_glal_m.glalld,g_glal_m.glaldocno,g_glal_m.glaldocdt) THEN
         CALL s_transaction_end('N','0')
         CLOSE aglt390_cl
         RETURN
      END IF
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      #end add-point
      
      DELETE FROM glam_t
       WHERE glament = g_enterprise AND glamld = g_glal_m.glalld
         AND glamdocno = g_glal_m.glaldocno
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
 
      #end add-point
         
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "glam_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      
      #end add-point
      
            
                                                               
 
 
 
      
      #修改歷程記錄(刪除)
      LET g_log1 = util.JSON.stringify(g_glal_m)   #(ver:78)
      IF NOT cl_log_modified_record(g_log1,'') THEN    #(ver:78)
         CLOSE aglt390_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_glam_d.clear() 
 
     
      CALL aglt390_ui_browser_refresh()  
      #CALL aglt390_ui_headershow()  
      #CALL aglt390_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL aglt390_browser_fill("")
         CALL aglt390_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE aglt390_cl
 
   #功能已完成,通報訊息中心
   CALL aglt390_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="aglt390.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION aglt390_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   DEFINE l_glam002_desc       LIKE type_t.chr200
   DEFINE l_glam002  STRING
   DEFINE l_str      STRING
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #清空第一階單身
   CALL g_glam_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   
   #end add-point
   
   #判斷是否填充
   IF aglt390_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT glamseq,glamcomp,glam001,glam002,glam003,glam004  FROM glam_t", 
                
                     " INNER JOIN glal_t ON glalent = " ||g_enterprise|| " AND glalld = glamld ",
                     " AND glaldocno = glamdocno ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                     
                     " WHERE glament=? AND glamld=? AND glamdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY glam_t.glamseq"
         
         #add-point:單身填充控制 name="b_fill.sql"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE aglt390_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR aglt390_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
   #  OPEN b_fill_cs USING g_enterprise,g_glal_m.glalld,g_glal_m.glaldocno   #(ver:78)
                                               
      FOREACH b_fill_cs USING g_enterprise,g_glal_m.glalld,g_glal_m.glaldocno INTO g_glam_d[l_ac].glamseq, 
          g_glam_d[l_ac].glamcomp,g_glam_d[l_ac].glam001,g_glam_d[l_ac].glam002,g_glam_d[l_ac].glam003, 
          g_glam_d[l_ac].glam004   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
#         CALL aglt390_glam002_desc(g_glam_d[l_ac].glam002) RETURNING l_glam002_desc
#         LET g_glam_d[l_ac].lc_subject = g_glam_d[l_ac].glam002,'\n',l_glam002_desc
         
         #组合科目，科目名称，以及各核算项
         LET l_glam002 = ''
         CALL aglt390_glam002('Y') RETURNING l_glam002,l_str 
         LET g_glam_d[l_ac].lc_subject = g_glam_d[l_ac].glam002,l_str,'\n',l_glam002
         
         IF g_glam_d[l_ac].glam003 = 0 THEN 
            LET g_glam_d[l_ac].glam003 = ''
         END IF
         IF g_glam_d[l_ac].glam004 = 0 THEN 
            LET g_glam_d[l_ac].glam004 = ''
         END IF
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code = 9035 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   
   #end add-point
   
   CALL g_glam_d.deleteElement(g_glam_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE aglt390_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_glam_d.getLength()
      LET g_glam_d_mask_o[l_ac].* =  g_glam_d[l_ac].*
      CALL aglt390_glam_t_mask()
      LET g_glam_d_mask_n[l_ac].* =  g_glam_d[l_ac].*
   END FOR
   
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
 
{</section>}
 
{<section id="aglt390.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION aglt390_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      
      #end add-point    
      DELETE FROM glam_t
       WHERE glament = g_enterprise AND
         glamld = ps_keys_bak[1] AND glamdocno = ps_keys_bak[2] AND glamseq = ps_keys_bak[3]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_glam_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
   
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="aglt390.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION aglt390_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      #法人
      LET g_glam_d[g_detail_idx].glamcomp = g_glal_m.glalcomp
      
      IF cl_null(g_glam_d[g_detail_idx].glam003) THEN
         LET g_glam_d[g_detail_idx].glam003 = 0
      END IF 
      
      IF cl_null(g_glam_d[g_detail_idx].glam004) THEN
         LET g_glam_d[g_detail_idx].glam004 = 0
      END IF 
      #end add-point 
      INSERT INTO glam_t
                  (glament,
                   glamld,glamdocno,
                   glamseq
                   ,glamcomp,glam001,glam002,glam003,glam004) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_glam_d[g_detail_idx].glamcomp,g_glam_d[g_detail_idx].glam001,g_glam_d[g_detail_idx].glam002, 
                       g_glam_d[g_detail_idx].glam003,g_glam_d[g_detail_idx].glam004)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      
      #end add-point 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "glam_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_glam_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
   
   #end add-point     
   
END FUNCTION
 
{</section>}
 
{<section id="aglt390.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION aglt390_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "glam_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      IF cl_null(g_glam_d[g_detail_idx].glam003) THEN
         LET g_glam_d[g_detail_idx].glam003 = 0
      END IF 
      
      IF cl_null(g_glam_d[g_detail_idx].glam004) THEN
         LET g_glam_d[g_detail_idx].glam004 = 0
      END IF 
      #end add-point 
      
      #將遮罩欄位還原
      CALL aglt390_glam_t_mask_restore('restore_mask_o')
               
      UPDATE glam_t 
         SET (glamld,glamdocno,
              glamseq
              ,glamcomp,glam001,glam002,glam003,glam004) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_glam_d[g_detail_idx].glamcomp,g_glam_d[g_detail_idx].glam001,g_glam_d[g_detail_idx].glam002, 
                  g_glam_d[g_detail_idx].glam003,g_glam_d[g_detail_idx].glam004) 
         WHERE glament = g_enterprise AND glamld = ps_keys_bak[1] AND glamdocno = ps_keys_bak[2] AND glamseq = ps_keys_bak[3]
      #add-point:update_b段修改中 name="update_b.m_update"
      
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "glam_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "glam_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL aglt390_glam_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
 
   
 
   
   #add-point:update_b段other name="update_b.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="aglt390.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION aglt390_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="aglt390.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION aglt390_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="aglt390.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION aglt390_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
    
   #先刷新資料
   #CALL aglt390_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "glam_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN aglt390_bcl USING g_enterprise,
                                       g_glal_m.glalld,g_glal_m.glaldocno,g_glam_d[g_detail_idx].glamseq  
                                               
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "aglt390_bcl:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
   
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="aglt390.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aglt390_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aglt390_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="aglt390.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION aglt390_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   CALL cl_set_comp_entry("glaldocno,glalld",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("glalld,glaldocno",TRUE)
      CALL cl_set_comp_entry("glaldocdt",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      CALL cl_set_comp_entry("glaldocdt",TRUE)
      CALL cl_set_comp_entry("glalld",FALSE)   #160518-00075#27 add lujh
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="aglt390.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION aglt390_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   DEFINE l_dfin0033  LIKE type_t.chr1  #151130-00015#2
   DEFINE l_success   LIKE type_t.chr1  #151130-00015#2
   DEFINE l_slip      LIKE type_t.chr80  #151130-00015#2 
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("glalld,glaldocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("glaldocno,glalld",FALSE)
   END IF 
 
#  IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正) #(ver:78)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("glaldocdt",FALSE)
      END IF
#  END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   #151130-00015#2  -add -str
   IF NOT cl_null(g_glal_m.glaldocno) THEN  
      #获取单别
      CALL s_aooi200_fin_get_slip(g_glal_m.glaldocno) RETURNING l_success,l_slip
      #取得單別設置的"是否直接審核"參數
      CALL s_fin_get_doc_para(g_glal_m.glalld,g_glal_m.glalcomp,l_slip,'D-FIN-0033') RETURNING l_dfin0033
      IF l_dfin0033 = "Y"  THEN 
         CALL cl_set_comp_entry("glaldocdt",TRUE)
    
      END IF          
   END IF 
   #151130-00015#2  -end -str

   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="aglt390.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION aglt390_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   
   #end add-point  
END FUNCTION
 
{</section>}
 
{<section id="aglt390.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION aglt390_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   
   #end add-point     
END FUNCTION
 
{</section>}
 
{<section id="aglt390.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION aglt390_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="aglt390.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION aglt390_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   IF g_glal_m.glalstus <>'N' THEN
      CALL cl_set_act_visible('modify,delete,modify_detail',FALSE)
   END IF
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="aglt390.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION aglt390_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="aglt390.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION aglt390_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="aglt390.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION aglt390_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " glalld = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " glaldocno = '", g_argv[02], "' AND "
   END IF
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "glal_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "glam_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
 
{</section>}
 
{<section id="aglt390.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION aglt390_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   DEFINE l_success    LIKE type_t.num5
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_glal_m.glalld IS NULL
      OR g_glal_m.glaldocno IS NULL
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN aglt390_cl USING g_enterprise,g_glal_m.glalld,g_glal_m.glaldocno
   IF STATUS THEN
      CLOSE aglt390_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aglt390_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE aglt390_master_referesh USING g_glal_m.glalld,g_glal_m.glaldocno INTO g_glal_m.glalld,g_glal_m.glalcomp, 
       g_glal_m.glal001,g_glal_m.glaldocno,g_glal_m.glaldocdt,g_glal_m.glal002,g_glal_m.glal003,g_glal_m.glal006, 
       g_glal_m.glal007,g_glal_m.glalstus,g_glal_m.glalownid,g_glal_m.glalowndp,g_glal_m.glalcrtid,g_glal_m.glalcrtdp, 
       g_glal_m.glalcrtdt,g_glal_m.glalmodid,g_glal_m.glalmoddt,g_glal_m.glalcnfid,g_glal_m.glalcnfdt, 
       g_glal_m.glalownid_desc,g_glal_m.glalowndp_desc,g_glal_m.glalcrtid_desc,g_glal_m.glalcrtdp_desc, 
       g_glal_m.glalmodid_desc,g_glal_m.glalcnfid_desc
   
 
   #檢查是否允許此動作
   IF NOT aglt390_action_chk() THEN
      CLOSE aglt390_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_glal_m.glalld,g_glal_m.glalld_desc,g_glal_m.glalcomp,g_glal_m.glalcomp_desc,g_glal_m.glaa001, 
       g_glal_m.glal001,g_glal_m.glaldocno,g_glal_m.glaldocdt,g_glal_m.glal002,g_glal_m.glal002_desc, 
       g_glal_m.glal003,g_glal_m.glal006,g_glal_m.glal007,g_glal_m.glalstus,g_glal_m.glalownid,g_glal_m.glalownid_desc, 
       g_glal_m.glalowndp,g_glal_m.glalowndp_desc,g_glal_m.glalcrtid,g_glal_m.glalcrtid_desc,g_glal_m.glalcrtdp, 
       g_glal_m.glalcrtdp_desc,g_glal_m.glalcrtdt,g_glal_m.glalmodid,g_glal_m.glalmodid_desc,g_glal_m.glalmoddt, 
       g_glal_m.glalcnfid,g_glal_m.glalcnfid_desc,g_glal_m.glalcnfdt,g_glal_m.glam007,g_glal_m.glam007_desc, 
       g_glal_m.glam008,g_glal_m.glam008_desc,g_glal_m.glam009,g_glal_m.glam009_desc,g_glal_m.glam010, 
       g_glal_m.glam010_desc,g_glal_m.glam011,g_glal_m.glam011_desc,g_glal_m.glam012,g_glal_m.glam012_desc, 
       g_glal_m.glam013,g_glal_m.glam013_desc,g_glal_m.glam014,g_glal_m.glam014_desc,g_glal_m.glam051, 
       g_glal_m.glam052,g_glal_m.glam052_desc,g_glal_m.glam053,g_glal_m.glam053_desc,g_glal_m.glam015, 
       g_glal_m.glam015_desc,g_glal_m.glam017,g_glal_m.glam017_desc,g_glal_m.glam018,g_glal_m.glam018_desc 
 
 
   CASE g_glal_m.glalstus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   CALL s_ld_chk_authorization(g_user,g_glalld) RETURNING l_success
   IF l_success = FALSE THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'agl-00165'
      LET g_errparam.extend = g_glalld
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CLOSE aglt390_cl
      CALL s_transaction_end('N','0')
      RETURN 
   END IF
   IF g_glal_m.glalstus = 'X' THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'anm-00044'
      LET g_errparam.extend = g_glal_m.glaldocno
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CLOSE aglt390_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   #檢查當單據日期小於等於關帳日期時，不可異動單據
   CALL s_fin_date_close_chk(g_glal_m.glalld,'','AGL',g_glal_m.glaldocdt) RETURNING l_success
   IF l_success = FALSE THEN
      CLOSE aglt390_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_glal_m.glalstus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      CALL cl_err_collect_init()
      #end add-point
      
      
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.unconfirmed"
         CALL cl_err_collect_init()
         CALL s_voucher_unconf_chk_glam(g_glal_m.glalld,g_glal_m.glaldocno) RETURNING l_success
         IF l_success = TRUE THEN
            CALL s_voucher_unconf_upd_glam(g_glal_m.glalld,g_glal_m.glaldocno) RETURNING l_success
         END IF
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.confirmed"
         CALL s_voucher_conf_chk_glam(g_glal_m.glalld,g_glal_m.glaldocno,'aglt390') RETURNING l_success
         IF l_success = TRUE THEN
            CALL s_voucher_conf_upd_glam(g_glal_m.glalld,g_glal_m.glaldocno) RETURNING l_success
         END IF  
            #end add-point
         END IF
         EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.invalid"
            #151125-00001#2 --- mark start ---
            #CALL s_voucher_void_chk_glam(g_glal_m.glalld,g_glal_m.glaldocno) RETURNING l_success
            #IF l_success = TRUE THEN
            #   CALL s_voucher_void_upd_glam(g_glal_m.glalld,g_glal_m.glaldocno) RETURNING l_success
            #END IF 
            #151125-00001#2 --- mark end   ---
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "X"
      ) OR 
      g_glal_m.glalstus = lc_state OR cl_null(lc_state) THEN
      CLOSE aglt390_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   #151125-00001#2 --- add start ---
   IF lc_state = 'X' THEN
      IF NOT cl_ask_confirm('aim-00109') THEN
         CALL s_transaction_end('N','0') 
         RETURN
      END IF
      CALL s_voucher_void_chk_glam(g_glal_m.glalld,g_glal_m.glaldocno) RETURNING l_success
      IF l_success = TRUE THEN
         CALL s_voucher_void_upd_glam(g_glal_m.glalld,g_glal_m.glaldocno) RETURNING l_success
      END IF 
   END IF
   #151125-00001#2 --- add end   ---
   IF l_success = FALSE  THEN
      CALL cl_err_collect_show()
      CALL s_transaction_end('N','0')
      CLOSE aglt390_cl
      RETURN
   ELSE
      CALL cl_err_collect_init()
      CALL cl_err_collect_show()
   END IF 
   #end add-point
   
   LET g_glal_m.glalmodid = g_user
   LET g_glal_m.glalmoddt = cl_get_current()
   LET g_glal_m.glalstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE glal_t 
      SET (glalstus,glalmodid,glalmoddt) 
        = (g_glal_m.glalstus,g_glal_m.glalmodid,g_glal_m.glalmoddt)     
    WHERE glalent = g_enterprise AND glalld = g_glal_m.glalld
      AND glaldocno = g_glal_m.glaldocno
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE aglt390_master_referesh USING g_glal_m.glalld,g_glal_m.glaldocno INTO g_glal_m.glalld, 
          g_glal_m.glalcomp,g_glal_m.glal001,g_glal_m.glaldocno,g_glal_m.glaldocdt,g_glal_m.glal002, 
          g_glal_m.glal003,g_glal_m.glal006,g_glal_m.glal007,g_glal_m.glalstus,g_glal_m.glalownid,g_glal_m.glalowndp, 
          g_glal_m.glalcrtid,g_glal_m.glalcrtdp,g_glal_m.glalcrtdt,g_glal_m.glalmodid,g_glal_m.glalmoddt, 
          g_glal_m.glalcnfid,g_glal_m.glalcnfdt,g_glal_m.glalownid_desc,g_glal_m.glalowndp_desc,g_glal_m.glalcrtid_desc, 
          g_glal_m.glalcrtdp_desc,g_glal_m.glalmodid_desc,g_glal_m.glalcnfid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_glal_m.glalld,g_glal_m.glalld_desc,g_glal_m.glalcomp,g_glal_m.glalcomp_desc, 
          g_glal_m.glaa001,g_glal_m.glal001,g_glal_m.glaldocno,g_glal_m.glaldocdt,g_glal_m.glal002,g_glal_m.glal002_desc, 
          g_glal_m.glal003,g_glal_m.glal006,g_glal_m.glal007,g_glal_m.glalstus,g_glal_m.glalownid,g_glal_m.glalownid_desc, 
          g_glal_m.glalowndp,g_glal_m.glalowndp_desc,g_glal_m.glalcrtid,g_glal_m.glalcrtid_desc,g_glal_m.glalcrtdp, 
          g_glal_m.glalcrtdp_desc,g_glal_m.glalcrtdt,g_glal_m.glalmodid,g_glal_m.glalmodid_desc,g_glal_m.glalmoddt, 
          g_glal_m.glalcnfid,g_glal_m.glalcnfid_desc,g_glal_m.glalcnfdt,g_glal_m.glam007,g_glal_m.glam007_desc, 
          g_glal_m.glam008,g_glal_m.glam008_desc,g_glal_m.glam009,g_glal_m.glam009_desc,g_glal_m.glam010, 
          g_glal_m.glam010_desc,g_glal_m.glam011,g_glal_m.glam011_desc,g_glal_m.glam012,g_glal_m.glam012_desc, 
          g_glal_m.glam013,g_glal_m.glam013_desc,g_glal_m.glam014,g_glal_m.glam014_desc,g_glal_m.glam051, 
          g_glal_m.glam052,g_glal_m.glam052_desc,g_glal_m.glam053,g_glal_m.glam053_desc,g_glal_m.glam015, 
          g_glal_m.glam015_desc,g_glal_m.glam017,g_glal_m.glam017_desc,g_glal_m.glam018,g_glal_m.glam018_desc 
 
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   
   #end add-point  
 
   CLOSE aglt390_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL aglt390_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="aglt390.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION aglt390_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_glam_d.getLength() THEN
         LET g_detail_idx = g_glam_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_glam_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_glam_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="aglt390.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION aglt390_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
    
   LET l_ac = li_ac
   
   CALL aglt390_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
 
{</section>}
 
{<section id="aglt390.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION aglt390_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="aglt390.status_show" >}
PRIVATE FUNCTION aglt390_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="aglt390.mask_functions" >}
&include "erp/agl/aglt390_mask.4gl"
 
{</section>}
 
{<section id="aglt390.signature" >}
   
 
{</section>}
 
{<section id="aglt390.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION aglt390_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_glal_m.glalld
   LET g_pk_array[1].column = 'glalld'
   LET g_pk_array[2].values = g_glal_m.glaldocno
   LET g_pk_array[2].column = 'glaldocno'
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="aglt390.other_dialog" readonly="Y" >}
   
 
{</section>}
 
{<section id="aglt390.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION aglt390_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL aglt390_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_glal_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="aglt390.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION aglt390_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="aglt390.other_function" readonly="Y" >}
#科目检查
PRIVATE FUNCTION aglt390_glam002_chk(p_glam002)
   DEFINE p_glam002    LIKE glam_t.glam002
   DEFINE l_glacstus   LIKE glac_t.glacstus
   DEFINE l_glac003    LIKE glac_t.glac003
   DEFINE l_glac006    LIKE glac_t.glac006
   DEFINE l_glad035    LIKE glad_t.glad035    #150827-00036#7 add
#151117-00009#1--mark--str--   
#   LET g_errno = ''
#   SELECT glacstus,glac003,glac006 INTO l_glacstus,l_glac003,l_glac006 FROM glac_t 
#    WHERE glacent = g_enterprise
#      AND glac001 = g_glaa004  #会计科目参照表号
#      AND glac002 = p_glam002
#151117-00009#1--mark--end      
   #150827-00036#7---add--str   
   SELECT glad035 INTO l_glad035 FROM glad_t 
    WHERE gladent = g_enterprise
      AND gladld = g_glal_m.glalld 
      AND glad001 = p_glam002    
   #150827-00036#7---add--end
       
   CASE
#151117-00009#1--mark--str-- 
#      WHEN SQLCA.SQLCODE = 100   LET g_errno = 'agl-00011'
#      WHEN l_glacstus = 'N'      LET g_errno =  'sub-01302'  #160318-00005#18 mod 'agl-00012' 
#      WHEN l_glac003 = '1'       LET g_errno = 'agl-00013'  #必须为非统治类科目
#      WHEN l_glac006 <>'1'       LET g_errno = 'agl-00030'  #须为账户性质  
#151117-00009#1--mark--end 
      WHEN l_glad035 = 'Y'       LET g_errno = 'agl-00358'  #必須為非子系統科目  #150827-00036#7 add 
   END CASE   
END FUNCTION
#科目说明
PRIVATE FUNCTION aglt390_glam002_desc(p_glam002)
   DEFINE p_glam002    LIKE glam_t.glam002
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_glam002
   CALL ap_ref_array2(g_ref_fields,"SELECT glacl004 FROM glacl_t WHERE glaclent='"||g_enterprise||"' AND glacl001 = '"||g_glaa004||"' AND glacl002 = ? AND glacl003='"||g_dlang||"'","") RETURNING g_rtn_fields
   RETURN  g_rtn_fields[1]
END FUNCTION
#单别检查
PRIVATE FUNCTION aglt390_ooba002_chk(p_field,p_glaldocno)
   DEFINE p_field          LIKE type_t.chr20
   DEFINE p_glaldocno      LIKE glal_t.glaldocno
   DEFINE l_oobx003        LIKE oobx_t.oobx003
   DEFINE l_oobastus       LIKE ooba_t.oobastus
   
   LET g_errno = '' 
   IF p_field = 'glaldocno' THEN
      LET l_oobx003 = 'aglt390'
   ELSE
      LET l_oobx003 = 'aglt310'     
   END IF 
   SELECT oobastus INTO l_oobastus 
     FROM ooba_t LEFT OUTER JOIN oobx_t ON (oobaent=oobxent AND ooba002=oobx001)
    WHERE oobaent = g_enterprise
      AND ooba001 = g_glaa024      #单据别参照表号
      AND ooba002 = p_glaldocno    #单据别
      AND oobx002 = 'AGL'          #模组 
      AND oobx003 = l_oobx003      #单据性质

   CASE
      WHEN SQLCA.SQLCODE =100  LET g_errno = 'aim-00056'
      WHEN l_oobastus = 'N'    LET g_errno = 'sub-01302'  #160318-00005#18 mod 'aim-00057'
   END CASE
END FUNCTION
#分摊类别说明
PRIVATE FUNCTION aglt390_glal002_desc(p_glal002)
  DEFINE p_glal002      LIKE glal_t.glal002
  
  INITIALIZE g_ref_fields TO NULL
  LET g_ref_fields[1] = p_glal002
  CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='3004' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
  RETURN g_rtn_fields[1]
END FUNCTION
#分摊类别检查
PRIVATE FUNCTION aglt390_glal002_chk(p_glal002)
   DEFINE p_glal002        LIKE glal_t.glal002
   DEFINE l_oocqstus       LIKE oocq_t.oocqstus
   
   LET g_errno = ''
   #判斷資料是否存在  
   SELECT oocqstus INTO l_oocqstus
     FROM oocq_t
    WHERE oocqent = g_enterprise
      AND oocq001 = '3004'
      AND oocq002 = p_glal002
   CASE   
      WHEN SQLCA.SQLCODE = 100   LET g_errno = 'agl-00118'
      WHEN l_oocqstus = 'N'      LET g_errno = 'agl-00119'
   END CASE   
END FUNCTION
#帐别说明
PRIVATE FUNCTION aglt390_glalld_desc(p_glalld)
   DEFINE  p_glalld    LIKE glal_t.glalld
   
    INITIALIZE g_ref_fields TO NULL
    LET g_ref_fields[1] = p_glalld 
    CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
    RETURN g_rtn_fields[1]
END FUNCTION
#法人说明
PRIVATE FUNCTION aglt390_glalcomp_desc(p_glalcomp)
   DEFINE p_glalcomp    LIKE glal_t.glalcomp
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_glalcomp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   RETURN g_rtn_fields[1]
  
END FUNCTION

################################################################################
# Descriptions...: 固定核算項維護
# Memo...........:
# Usage..........: CALL aglt390_fix_acc()
# Input parameter: 
# Return code....: 
# Date & Author..: 2015/5/25 By 02599
# Modify.........:
################################################################################
PRIVATE FUNCTION aglt390_fix_acc()
   DEFINE l_glam002  LIKE glam_t.glam002
   DEFINE l_success  LIKE type_t.num5
   DEFINE l_cnt      LIKE type_t.num5
     
   #开立状态资料才可进行此操作
   IF g_glal_m.glalstus  ='N' THEN
      #单身无资料不需开出画面
      IF g_detail_idx =0 OR cl_null(g_detail_idx) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = -400
         LET g_errparam.extend = ''
         LET g_errparam.popup = FALSE
         CALL cl_err()
    
         RETURN
      END IF 
      #檢查當單據日期小於等於關帳日期時，不可異動單據
      CALL s_fin_date_close_chk(g_glal_m.glalld,'','AGL',g_glal_m.glaldocdt) RETURNING l_success
      IF l_success = FALSE THEN
         RETURN
      END IF
      #清空业务资讯/核算项的值
      CALL aglt390_frozen_clear()
      #业务资讯核算项维护
      #抓取科目
      LET l_glam002 = ''
      SELECT glam002 INTO l_glam002 FROM glam_t 
       WHERE glament = g_enterprise
         AND glamld = g_glal_m.glalld
         AND glamdocno = g_glal_m.glaldocno
         AND glamseq = g_glam_d[g_detail_idx].glamseq 
      #如果有启用核算项，则开子视窗，否则不开            
      CALL aglt360_01('u',g_glal_m.glalld,g_glal_m.glaldocno,g_glal_m.glaldocdt,g_glam_d[l_ac].glam002,g_glam_d[l_ac].glamseq,'glam002')
      RETURNING g_glal_m.glam007,g_glal_m.glam007_desc,g_glal_m.glam008,g_glal_m.glam008_desc,
                g_glal_m.glam009,g_glal_m.glam009_desc,g_glal_m.glam010,g_glal_m.glam010_desc,
                g_glal_m.glam011,g_glal_m.glam011_desc,g_glal_m.glam012,g_glal_m.glam012_desc,
                g_glal_m.glam013,g_glal_m.glam013_desc,g_glal_m.glam014,g_glal_m.glam014_desc,
                g_glal_m.glam015,g_glal_m.glam015_desc,
                g_glal_m.glam017,g_glal_m.glam017_desc,g_glal_m.glam018,g_glal_m.glam018_desc,
                g_glal_m.glam051,g_glal_m.glam052,g_glal_m.glam052_desc,
                g_glal_m.glam053,g_glal_m.glam053_desc
       DISPLAY g_glal_m.glam007_desc TO glam007_desc
       DISPLAY g_glal_m.glam008_desc TO glam008_desc
       DISPLAY g_glal_m.glam009_desc TO glam009_desc
       DISPLAY g_glal_m.glam010_desc TO glam010_desc
       DISPLAY g_glal_m.glam011_desc TO glam011_desc
       DISPLAY g_glal_m.glam012_desc TO glam012_desc
       DISPLAY g_glal_m.glam013_desc TO glam013_desc
       DISPLAY g_glal_m.glam014_desc TO glam014_desc
       DISPLAY g_glal_m.glam015_desc TO glam015_desc
       DISPLAY g_glal_m.glam017_desc TO glam017_desc
       DISPLAY g_glal_m.glam018_desc TO glam018_desc
       DISPLAY g_glal_m.glam052_desc TO glam052_desc
       DISPLAY g_glal_m.glam053_desc TO glam053_desc
       #更新数据库
       CALL s_transaction_begin()
       CALL aglt390_update_forzen()  RETURNING l_success
       IF l_success = TRUE THEN                                
          CALL s_transaction_end('Y','0') 
       ELSE
          CALL s_transaction_end('N','0')   
       END IF          
       #重新抓取单身冻结部分显示               
       CALL aglt390_b_detail()      
    ELSE
       INITIALIZE g_errparam TO NULL
       LET g_errparam.code = 'agl-00052'
       LET g_errparam.extend = ''
       LET g_errparam.popup = TRUE
       CALL cl_err()
    END IF 
END FUNCTION

################################################################################
# Descriptions...: 清空核算项值
# Memo...........:
# Usage..........: CALL aglt390_frozen_clear()
# Input parameter: 
# Return code....: 
# Date & Author..: 2015/5/25 By 02599
# Modify.........:
################################################################################
PRIVATE FUNCTION aglt390_frozen_clear()
   LET g_glal_m.glam007 = '' 
   LET g_glal_m.glam007_desc = ''
   LET g_glal_m.glam008 = ''
   LET g_glal_m.glam008_desc = ''
   LET g_glal_m.glam009 = ''
   LET g_glal_m.glam009_desc = ''
   LET g_glal_m.glam010 = ''
   LET g_glal_m.glam010_desc = ''
   LET g_glal_m.glam011 = ''
   LET g_glal_m.glam011_desc = ''
   LET g_glal_m.glam012 = ''
   LET g_glal_m.glam012_desc = ''
   LET g_glal_m.glam013 = ''
   LET g_glal_m.glam013_desc = ''
   LET g_glal_m.glam014 = ''
   LET g_glal_m.glam014_desc = ''
   LET g_glal_m.glam015 = ''
   LET g_glal_m.glam015_desc = ''
   LET g_glal_m.glam017 = ''
   LET g_glal_m.glam017_desc = ''
   LET g_glal_m.glam018 = ''
   LET g_glal_m.glam018_desc = ''
   LET g_glal_m.glam051 = ''
   LET g_glal_m.glam052 = ''
   LET g_glal_m.glam052_desc = ''
   LET g_glal_m.glam053 = ''
   LET g_glal_m.glam053_desc = ''
END FUNCTION

################################################################################
# Descriptions...: 更新核算项值
# Memo...........:
# Usage..........: CALL aglt390_update_forzen()
#                  RETURNING r_success
# Input parameter: 
# Return code....: r_success      更新结果
# Date & Author..: 2015/5/25 By 02599
# Modify.........:
################################################################################
PRIVATE FUNCTION aglt390_update_forzen()
   DEFINE  r_success   LIKE type_t.num5
    
   LET r_success = TRUE
 
   UPDATE glam_t SET glam002 = g_glam_d[l_ac].glam002,
                     glam007 = g_glal_m.glam007,
                     glam008 = g_glal_m.glam008,
                     glam009 = g_glal_m.glam009,
                     glam010 = g_glal_m.glam010,
                     glam011 = g_glal_m.glam011,
                     glam012 = g_glal_m.glam012,
                     glam013 = g_glal_m.glam013,
                     glam014 = g_glal_m.glam014,
                     glam015 = g_glal_m.glam015,
                     glam017 = g_glal_m.glam017,
                     glam018 = g_glal_m.glam018,
                     glam051 = g_glal_m.glam051,
                     glam052 = g_glal_m.glam052,
                     glam053 = g_glal_m.glam053
   WHERE glament = g_enterprise
     AND glamld = g_glal_m.glalld
     AND glamdocno = g_glal_m.glaldocno
     AND glamseq =   g_glam_d[g_detail_idx].glamseq

   IF SQLCA.SQLCODE THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = sqlca.sqlcode
      LET g_errparam.extend = 'update_b1'
      LET g_errparam.popup = TRUE
      CALL cl_err()
 
      LET r_success = FALSE
   END IF 
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 组合科目，名称以及核算项，显示到科目栏位
# Memo...........:
# Usage..........: CALL aglt390_glam002(p_flag)
# Input parameter: p_flag        是否重新抓取核算项资料
# Return code....: 
# Date & Author..: 2015/5/25 By 02599
# Modify.........:
################################################################################
PRIVATE FUNCTION aglt390_glam002(p_flag)
   DEFINE p_flag              LIKE type_t.chr1
   DEFINE l_glam002_desc      LIKE glacl_t.glacl004
   DEFINE r_glam002           STRING
   DEFINE r_str               STRING
   DEFINE l_desc              STRING
   
   IF p_flag = 'Y' THEN
      CALL aglt390_b_detail()
   END IF
   #抓取科目名称
   LET l_glam002_desc = ''
   SELECT glacl004 INTO l_glam002_desc FROM glacl_t
    WHERE glaclent = g_enterprise
      AND glacl001 = g_glaa004
      AND glacl002 = g_glam_d[l_ac].glam002
      AND glacl003 = g_dlang   
   #组合名称以及核算项
   LET r_glam002 = ''
   LET r_str = ''
   #營運據點
   IF NOT cl_null(g_glal_m.glam007) THEN
      LET r_glam002 = g_glal_m.glam007_desc
      LET r_str = g_glal_m.glam007    
   END IF 
   #部门
   IF NOT cl_null(g_glal_m.glam008) THEN
      IF NOT cl_null(r_glam002) THEN
         LET r_glam002 = r_glam002 ,'-',g_glal_m.glam008_desc
      ELSE
         LET r_glam002 = g_glal_m.glam008_desc
      END IF 
      IF NOT cl_null(r_str) THEN
         LET r_str=r_str,'-',g_glal_m.glam008
      ELSE
         LET r_str=g_glal_m.glam008
      END IF         
   END IF 
   #成本利润中心
   IF NOT cl_null(g_glal_m.glam009) THEN
      IF NOT cl_null(r_glam002) THEN
         LET r_glam002 = r_glam002 ,'-',g_glal_m.glam009_desc
      ELSE
         LET r_glam002 = g_glal_m.glam009_desc
      END IF 
      IF NOT cl_null(r_str) THEN
         LET r_str=r_str,'-',g_glal_m.glam009
      ELSE
         LET r_str=g_glal_m.glam009
      END IF      
   END IF 
   
   #区域
   IF NOT cl_null(g_glal_m.glam010) THEN  
      IF NOT cl_null(r_glam002) THEN
         LET r_glam002 = r_glam002 ,'-',g_glal_m.glam010_desc
      ELSE
         LET r_glam002 = g_glal_m.glam010_desc
      END IF 
      IF NOT cl_null(r_str) THEN
         LET r_str=r_str,'-',g_glal_m.glam010
      ELSE
         LET r_str=g_glal_m.glam010
      END IF      
   END IF 
   #交易客商
   IF NOT cl_null(g_glal_m.glam011) THEN
      IF NOT cl_null(r_glam002) THEN
         LET r_glam002 = r_glam002 ,'-',g_glal_m.glam011_desc
      ELSE
         LET r_glam002 = g_glal_m.glam011_desc
      END IF
      IF NOT cl_null(r_str) THEN
         LET r_str=r_str,'-',g_glal_m.glam011
      ELSE
         LET r_str=g_glal_m.glam011
      END IF       
   END IF 
   #帐款客商
   IF NOT cl_null(g_glal_m.glam012) THEN
      IF NOT cl_null(r_glam002) THEN
         LET r_glam002 = r_glam002 ,'-',g_glal_m.glam012_desc
      ELSE
         LET r_glam002 = g_glal_m.glam012_desc
      END IF
      IF NOT cl_null(r_str) THEN
         LET r_str=r_str,'-',g_glal_m.glam012
      ELSE
         LET r_str=g_glal_m.glam012
      END IF       
   END IF 
   #客群
   IF NOT cl_null(g_glal_m.glam013) THEN
      IF NOT cl_null(r_glam002) THEN
         LET r_glam002 = r_glam002 ,'-',g_glal_m.glam013_desc
      ELSE
         LET r_glam002 = g_glal_m.glam013_desc
      END IF
      IF NOT cl_null(r_str) THEN
         LET r_str=r_str,'-',g_glal_m.glam013
      ELSE
         LET r_str=g_glal_m.glam013
      END IF       
   END IF 
   
   #产品分类
   IF NOT cl_null(g_glal_m.glam014) THEN
      IF NOT cl_null(r_glam002) THEN
         LET r_glam002 = r_glam002 ,'-',g_glal_m.glam014_desc
      ELSE
         LET r_glam002 = g_glal_m.glam014_desc
      END IF
      IF NOT cl_null(r_str) THEN
         LET r_str=r_str,'-',g_glal_m.glam014
      ELSE
         LET r_str=g_glal_m.glam014
      END IF       
   END IF 
   
   #經營方式
   IF NOT cl_null(g_glal_m.glam051) THEN
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = '6013'
      LET g_ref_fields[2] = g_glal_m.glam051
      CALL ap_ref_array2(g_ref_fields,"SELECT gzcbl004 FROM gzcbl_t WHERE gzcbl001=? AND gzcbl002=? AND gzcbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET l_desc = g_rtn_fields[1]
      
      IF NOT cl_null(r_glam002) THEN
         LET r_glam002 = r_glam002 ,'-',l_desc
      ELSE
         LET r_glam002 = l_desc
      END IF 
      IF NOT cl_null(r_str) THEN
         LET r_str=r_str,'-',g_glal_m.glam051
      ELSE
         LET r_str=g_glal_m.glam051
      END IF       
   END IF 
   
   #渠道
   IF NOT cl_null(g_glal_m.glam052) THEN
      IF NOT cl_null(r_glam002) THEN
         LET r_glam002 = r_glam002 ,'-',g_glal_m.glam052_desc
      ELSE
         LET r_glam002 = g_glal_m.glam052_desc
      END IF 
      IF NOT cl_null(r_str) THEN
         LET r_str=r_str,'-',g_glal_m.glam052
      ELSE
         LET r_str=g_glal_m.glam052
      END IF       
   END IF 
   
   #品牌
   IF NOT cl_null(g_glal_m.glam053) THEN
      IF NOT cl_null(r_glam002) THEN
         LET r_glam002 = r_glam002 ,'-',g_glal_m.glam053_desc
      ELSE
         LET r_glam002 = g_glal_m.glam053_desc
      END IF 
      IF NOT cl_null(r_str) THEN
         LET r_str=r_str,'-',g_glal_m.glam053
      ELSE
         LET r_str=g_glal_m.glam053
      END IF       
   END IF 
   
   #人员
   IF NOT cl_null(g_glal_m.glam015) THEN
      IF NOT cl_null(r_glam002) THEN
         LET r_glam002 = r_glam002 ,'-',g_glal_m.glam015_desc
      ELSE
         LET r_glam002 = g_glal_m.glam015_desc
      END IF
      IF NOT cl_null(r_str) THEN
         LET r_str=r_str,'-',g_glal_m.glam015
      ELSE
         LET r_str=g_glal_m.glam015
      END IF       
   END IF 
#   #预算编号
#   IF NOT cl_null(g_glal_m.glam016) THEN
#      IF NOT cl_null(r_glam002) THEN
#         LET r_glam002 = r_glam002 ,'-',g_glal_m.glam016_desc
#      ELSE
#         LET r_glam002 = g_glal_m.glam016_desc
#      END IF 
#      IF NOT cl_null(r_str) THEN
#         LET r_str=r_str,'-',g_glal_m.glam016
#      ELSE
#         LET r_str=g_glal_m.glam016
#      END IF       
#   END IF 
   #专案编号
   IF NOT cl_null(g_glal_m.glam017) THEN
      IF NOT cl_null(r_glam002) THEN
         LET r_glam002 = r_glam002 ,'-',g_glal_m.glam017_desc
      ELSE
         LET r_glam002 = g_glal_m.glam017_desc
      END IF 
      IF NOT cl_null(r_str) THEN
         LET r_str=r_str,'-',g_glal_m.glam017
      ELSE
         LET r_str=g_glal_m.glam017
      END IF       
   END IF 
   #WBS
   IF NOT cl_null(g_glal_m.glam018) THEN
      IF NOT cl_null(r_glam002) THEN
         LET r_glam002 = r_glam002 ,'-',g_glal_m.glam018_desc
      ELSE
         LET r_glam002 = g_glal_m.glam018_desc
      END IF 
      IF NOT cl_null(r_str) THEN
         LET r_str=r_str,'-',g_glal_m.glam018
      ELSE
         LET r_str=g_glal_m.glam018
      END IF       
   END IF 
   #组合科目名称以及核算项
   LET r_glam002 = l_glam002_desc,'\n',
                   r_glam002
   IF NOT cl_null(r_str) THEN
      LET r_str="(",r_str,")"
   END IF      
   RETURN r_glam002,r_str
END FUNCTION

################################################################################
# Descriptions...: # 點擊單身顯示相應的固定核算項
# Memo...........:
# Usage..........: CALL aglt390_b_detail()
# Input parameter: 
# Return code....: 
# Date & Author..: 2015/5/25 By 02599
# Modify.........:
################################################################################
PRIVATE FUNCTION aglt390_b_detail()
   IF l_ac<1 THEN
      RETURN
   END IF
   CALL aglt390_frozen_clear()
   
   SELECT glam007,glam008,glam009,glam010,
          glam011,glam012,glam013,glam014,
          glam015,glam017,glam018,glam051,glam052,glam053
     INTO g_glal_m.glam007,g_glal_m.glam008,g_glal_m.glam009,g_glal_m.glam010,
          g_glal_m.glam011,g_glal_m.glam012,g_glal_m.glam013,g_glal_m.glam014,
          g_glal_m.glam015,g_glal_m.glam017,g_glal_m.glam018,
          g_glal_m.glam051,g_glal_m.glam052,g_glal_m.glam053
     FROM glam_t
    WHERE glament = g_enterprise
      AND glamld = g_glal_m.glalld
      AND glamdocno = g_glal_m.glaldocno
      AND glamseq = g_glam_d[l_ac].glamseq
      
   CALL aglt390_glam_desc()
      
   DISPLAY g_glal_m.glam007 TO glam007
   DISPLAY g_glal_m.glam008 TO glam008
   DISPLAY g_glal_m.glam009 TO glam009
   DISPLAY g_glal_m.glam010 TO glam010
   DISPLAY g_glal_m.glam011 TO glam011
   DISPLAY g_glal_m.glam012 TO glam012
   DISPLAY g_glal_m.glam013 TO glam013
   DISPLAY g_glal_m.glam014 TO glam014
   DISPLAY g_glal_m.glam015 TO glam015
   DISPLAY g_glal_m.glam017 TO glam017
   DISPLAY g_glal_m.glam018 TO glam018 
   DISPLAY g_glal_m.glam051 TO glam051
   DISPLAY g_glal_m.glam052 TO glam052
   DISPLAY g_glal_m.glam053 TO glam053
END FUNCTION

################################################################################
# Descriptions...: 固定核算項多語言欄位帶值
# Memo...........:
# Usage..........: CALL aglt390_glam_desc()
# Input parameter: 
# Return code....: 
# Date & Author..: 2015/5/25 By 02599
# Modify.........:
################################################################################
PRIVATE FUNCTION aglt390_glam_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_glal_m.glam007
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_glal_m.glam007_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_glal_m.glam007_desc
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_glal_m.glam008
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_glal_m.glam008_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_glal_m.glam008_desc
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_glal_m.glam009
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_glal_m.glam009_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_glal_m.glam009_desc
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_glal_m.glam010
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='287' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_glal_m.glam010_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_glal_m.glam010_desc
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_glal_m.glam011
   CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_glal_m.glam011_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_glal_m.glam011_desc
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_glal_m.glam012
   CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_glal_m.glam012_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_glal_m.glam012_desc
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_glal_m.glam013
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='281' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_glal_m.glam013_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_glal_m.glam013_desc
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_glal_m.glam014
   CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_glal_m.glam014_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_glal_m.glam014_desc
   
   LET g_glal_m.glam015_desc = ''
   SELECT ooag011 INTO g_glal_m.glam015_desc FROM ooag_t
    WHERE ooagent = g_enterprise AND ooag001 = g_glal_m.glam015   
   DISPLAY g_glal_m.glam015_desc TO glam015_desc
   
#   INITIALIZE g_ref_fields TO NULL
#   LET g_ref_fields[1] = g_glal_m.glam016
#   CALL ap_ref_array2(g_ref_fields,"SELECT bgaal003 FROM bgaal_t WHERE bgaalent='"||g_enterprise||"' AND bgaal001=? AND bgaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
#   LET g_glal_m.glam016_desc = '', g_rtn_fields[1] , ''
#   DISPLAY BY NAME g_glal_m.glam016_desc 
   #渠道
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_glal_m.glam052
   CALL ap_ref_array2(g_ref_fields,"SELECT oojdl004 FROM oojdl_t WHERE oojdlent='"||g_enterprise||"' AND oojdl001=? AND oojdl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_glal_m.glam052_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_glal_m.glam052_desc
   #品牌
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_glal_m.glam053
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2002' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_glal_m.glam053_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_glal_m.glam053_desc
   #专案
   CALL s_desc_get_project_desc(g_glal_m.glam017) RETURNING g_glal_m.glam017_desc
   DISPLAY BY NAME g_glal_m.glam017_desc
   #WBS
   CALL s_desc_get_wbs_desc(g_glal_m.glam017,g_glal_m.glam018) RETURNING g_glal_m.glam018_desc
   DISPLAY BY NAME g_glal_m.glam018_desc
END FUNCTION

 
{</section>}
 
