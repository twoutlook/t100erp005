#該程式未解開Section, 採用最新樣板產出!
{<section id="agli075.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0004(2016-05-10 14:43:37), PR版次:0004(2016-10-09 16:02:42)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000028
#+ Filename...: agli075
#+ Description: 所有者權益變動表結構設定作業
#+ Creator....: 02599(2016-04-07 15:32:33)
#+ Modifier...: 02599 -SD/PR- 02599
 
{</section>}
 
{<section id="agli075.global" >}
#應用 t01 樣板自動產生(Version:76)
#add-point:填寫註解說明
#160506-00012#1   2016/05/10 By 02599    查询时报表类型和排列方式不可录入
#160811-00039#7   2016/08/26 By 02599   查询及建立资料时（包括直接查询全部、开窗、输入值后的检核）及更改和删除，要考虑账套权限
#160929-00042#1   2016/10/09 By 02599   查询时报表模板开窗排除glfa016='3'预算报表
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_glfa_m        RECORD
       glfa001 LIKE glfa_t.glfa001, 
   glfal003 LIKE glfal_t.glfal003, 
   glfa004 LIKE glfa_t.glfa004, 
   glfa004_desc LIKE type_t.chr80, 
   glfa002 LIKE glfa_t.glfa002, 
   glfa003 LIKE glfa_t.glfa003, 
   glfa016 LIKE glfa_t.glfa016, 
   glfa005 LIKE glfa_t.glfa005, 
   glfa005_desc LIKE type_t.chr80, 
   glaa001 LIKE type_t.chr500, 
   glfa006 LIKE glfa_t.glfa006, 
   glfa007 LIKE glfa_t.glfa007, 
   glfa009 LIKE glfa_t.glfa009, 
   glfa008 LIKE glfa_t.glfa008, 
   glfaownid LIKE glfa_t.glfaownid, 
   glfaownid_desc LIKE type_t.chr80, 
   glfacrtid LIKE glfa_t.glfacrtid, 
   glfacrtid_desc LIKE type_t.chr80, 
   glfacrtdt LIKE glfa_t.glfacrtdt, 
   glfaowndp LIKE glfa_t.glfaowndp, 
   glfaowndp_desc LIKE type_t.chr80, 
   glfacrtdp LIKE glfa_t.glfacrtdp, 
   glfacrtdp_desc LIKE type_t.chr80, 
   glfamodid LIKE glfa_t.glfamodid, 
   glfamodid_desc LIKE type_t.chr80, 
   glfamoddt LIKE glfa_t.glfamoddt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_glfb_d        RECORD
       glfbseq LIKE glfb_t.glfbseq, 
   glfbseq1 LIKE glfb_t.glfbseq1, 
   amt1 LIKE type_t.chr500, 
   amt2 LIKE type_t.chr500, 
   amt3 LIKE type_t.chr500, 
   amt4 LIKE type_t.chr500, 
   amt5 LIKE type_t.chr500, 
   amt6 LIKE type_t.chr500, 
   amt7 LIKE type_t.chr500, 
   amt8 LIKE type_t.chr500, 
   amt9 LIKE type_t.chr500, 
   amt10 LIKE type_t.chr500, 
   amt11 LIKE type_t.chr500, 
   amt12 LIKE type_t.chr500, 
   amt13 LIKE type_t.chr500, 
   amt14 LIKE type_t.chr500, 
   amt15 LIKE type_t.chr500, 
   amt16 LIKE type_t.chr500, 
   amt17 LIKE type_t.chr500, 
   amt18 LIKE type_t.chr500, 
   amt19 LIKE type_t.chr500, 
   amt20 LIKE type_t.chr500, 
   amt21 LIKE type_t.chr500, 
   amt22 LIKE type_t.chr500, 
   amt23 LIKE type_t.chr500, 
   amt24 LIKE type_t.chr500, 
   amt25 LIKE type_t.chr500, 
   amt26 LIKE type_t.chr500, 
   amt27 LIKE type_t.chr500, 
   amt28 LIKE type_t.chr500, 
   amt29 LIKE type_t.chr500, 
   amt30 LIKE type_t.chr500, 
   amt31 LIKE type_t.chr500, 
   amt32 LIKE type_t.chr500, 
   amt33 LIKE type_t.chr500, 
   amt34 LIKE type_t.chr500, 
   amt35 LIKE type_t.chr500, 
   amt36 LIKE type_t.chr500, 
   amt37 LIKE type_t.chr500, 
   amt38 LIKE type_t.chr500, 
   amt39 LIKE type_t.chr500, 
   amt40 LIKE type_t.chr500, 
   amt41 LIKE type_t.chr500, 
   amt42 LIKE type_t.chr500, 
   amt43 LIKE type_t.chr500, 
   amt44 LIKE type_t.chr500, 
   amt45 LIKE type_t.chr500, 
   amt46 LIKE type_t.chr500, 
   amt47 LIKE type_t.chr500, 
   amt48 LIKE type_t.chr500, 
   amt49 LIKE type_t.chr500, 
   amt50 LIKE type_t.chr500
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_glfa001 LIKE glfa_t.glfa001
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE g_test              LIKE type_t.num5
DEFINE g_glfbseq1          LIKE glfb_t.glfbseq1
DEFINE g_glfb004           LIKE glfb_t.glfb004
DEFINE g_glfb005           LIKE glfb_t.glfb005
DEFINE g_glfb011           LIKE glfb_t.glfb011
DEFINE g_glfb012           LIKE glfb_t.glfb012  
DEFINE g_glfb_row          DYNAMIC ARRAY OF RECORD 
       glfbseq1            LIKE glfb_t.glfbseq1,
       glfb004             LIKE glfb_t.glfb004,
       glfb005             LIKE glfb_t.glfb005,
       glfb011             LIKE glfb_t.glfb011,
       glfb012             LIKE glfb_t.glfb012
       END RECORD
#end add-point
       
#模組變數(Module Variables)
DEFINE g_glfa_m          type_g_glfa_m
DEFINE g_glfa_m_t        type_g_glfa_m
DEFINE g_glfa_m_o        type_g_glfa_m
DEFINE g_glfa_m_mask_o   type_g_glfa_m #轉換遮罩前資料
DEFINE g_glfa_m_mask_n   type_g_glfa_m #轉換遮罩後資料
 
   DEFINE g_glfa001_t LIKE glfa_t.glfa001
 
 
DEFINE g_glfb_d          DYNAMIC ARRAY OF type_g_glfb_d
DEFINE g_glfb_d_t        type_g_glfb_d
DEFINE g_glfb_d_o        type_g_glfb_d
DEFINE g_glfb_d_mask_o   DYNAMIC ARRAY OF type_g_glfb_d #轉換遮罩前資料
DEFINE g_glfb_d_mask_n   DYNAMIC ARRAY OF type_g_glfb_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
DEFINE g_master_multi_table_t    RECORD
      glfal001 LIKE glfal_t.glfal001,
      glfal003 LIKE glfal_t.glfal003
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="agli075.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("agl","")
 
   #add-point:作業初始化 name="main.init"
   
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT glfa001,'',glfa004,'',glfa002,glfa003,glfa016,glfa005,'','',glfa006,glfa007, 
       glfa009,glfa008,glfaownid,'',glfacrtid,'',glfacrtdt,glfaowndp,'',glfacrtdp,'',glfamodid,'',glfamoddt", 
        
                      " FROM glfa_t",
                      " WHERE glfaent= ? AND glfa001=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE agli075_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.glfa001,t0.glfa004,t0.glfa002,t0.glfa003,t0.glfa016,t0.glfa005,t0.glfa006, 
       t0.glfa007,t0.glfa009,t0.glfa008,t0.glfaownid,t0.glfacrtid,t0.glfacrtdt,t0.glfaowndp,t0.glfacrtdp, 
       t0.glfamodid,t0.glfamoddt,t1.ooall004 ,t2.glaal002 ,t3.ooag011 ,t4.ooag011 ,t5.ooefl003 ,t6.ooefl003 , 
       t7.ooag011",
               " FROM glfa_t t0",
                              " LEFT JOIN ooall_t t1 ON t1.ooallent="||g_enterprise||" AND t1.ooall001='0' AND t1.ooall002=t0.glfa004 AND t1.ooall003='"||g_dlang||"' ",
               " LEFT JOIN glaal_t t2 ON t2.glaalent="||g_enterprise||" AND t2.glaalld=t0.glfa005 AND t2.glaal001='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent="||g_enterprise||" AND t3.ooag001=t0.glfaownid  ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent="||g_enterprise||" AND t4.ooag001=t0.glfacrtid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent="||g_enterprise||" AND t5.ooefl001=t0.glfaowndp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent="||g_enterprise||" AND t6.ooefl001=t0.glfacrtdp AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent="||g_enterprise||" AND t7.ooag001=t0.glfamodid  ",
 
               " WHERE t0.glfaent = " ||g_enterprise|| " AND t0.glfa001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE agli075_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_agli075 WITH FORM cl_ap_formpath("agl",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL agli075_init()   
 
      #進入選單 Menu (="N")
      CALL agli075_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_agli075
      
   END IF 
   
   CLOSE agli075_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="agli075.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION agli075_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
   
      CALL cl_set_combo_scc('glfa002','9930') 
   CALL cl_set_combo_scc('glfa003','9931') 
   CALL cl_set_combo_scc('glfa008','8705') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1',","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
#   CALL agli075_add_style()
   #end add-point
   
   #初始化搜尋條件
   CALL agli075_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="agli075.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION agli075_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL agli075_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_glfa_m.* TO NULL
         CALL g_glfb_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL agli075_init()
      END IF
   
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
    
         DISPLAY ARRAY g_glfb_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL agli075_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL agli075_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         #end add-point
         
      
         BEFORE DIALOG
            #先填充browser資料
            CALL agli075_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL agli075_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL agli075_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL agli075_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         
         #end add-point
 
 
 
         
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "glfa_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "glfb_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL agli075_browser_fill("F")   #browser_fill()會將notice區塊清空
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "glfa_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "glfb_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL agli075_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL agli075_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
          
         
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL agli075_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL agli075_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL agli075_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL agli075_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL agli075_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL agli075_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL agli075_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL agli075_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL agli075_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL agli075_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_glfb_d)
                  LET g_export_id[1]   = "s_detail1"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL agli075_modify()
               #add-point:ON ACTION modify name="menu.modify"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL agli075_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION btn_test
            LET g_action_choice="btn_test"
            IF cl_auth_chk_act("btn_test") THEN
               
               #add-point:ON ACTION btn_test name="menu.btn_test"
               LET g_test = TRUE
               CALL agli075_b_fill()
               LET g_test = FALSE 
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL agli075_delete()
               #add-point:ON ACTION delete name="menu.delete"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL agli075_insert()
               #add-point:ON ACTION insert name="menu.insert"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_agli075_02
            LET g_action_choice="open_agli075_02"
            IF cl_auth_chk_act("open_agli075_02") THEN
               
               #add-point:ON ACTION open_agli075_02 name="menu.open_agli075_02"
               IF NOT cl_null(g_glfa_m.glfa001) THEN
                  CALL agli075_02(g_glfa_m.glfa001)
               END IF
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL agli075_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL agli075_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
 
 
 
 
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL agli075_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL agli075_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL agli075_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow('')
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
 
{</section>}
 
{<section id="agli075.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION agli075_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   DEFINE l_ld_str   STRING   #160811-00039#7
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   LET l_wc = l_wc," AND glfa002='3' "
   LET l_wc = l_wc," AND glfa016 <> '3'" #160929-00042#1 add
   #160811-00039#7--add--str--
   CALL s_ld_sel_authority_sql(g_user,g_dept) RETURNING l_ld_str
   LET l_ld_str = cl_replace_str(l_ld_str,"glaald","glfa005")
   LET l_wc = l_wc," AND ",l_ld_str
   #160811-00039#7--add--end
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT glfa001 ",
                      " FROM glfa_t ",
                      " ",
                      " LEFT JOIN glfb_t ON glfbent = glfaent AND glfa001 = glfb001 ", "  ",
                      #add-point:browser_fill段sql(glfb_t1) name="browser_fill.cnt.join.}"
                      
                      #end add-point
 
 
                      " LEFT JOIN glfal_t ON glfalent = "||g_enterprise||" AND glfa001 = glfal001 AND glfal002 = '",g_dlang,"' ", 
                      " ", 
 
 
                      " WHERE glfaent = " ||g_enterprise|| " AND glfbent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("glfa_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT glfa001 ",
                      " FROM glfa_t ", 
                      "  ",
                      "  LEFT JOIN glfal_t ON glfalent = "||g_enterprise||" AND glfa001 = glfal001 AND glfal002 = '",g_dlang,"' ",
                      " WHERE glfaent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("glfa_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_glfa_m.* TO NULL
      CALL g_glfb_d.clear()        
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.glfa001 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT '',t0.glfa001 ",
                  " FROM glfa_t t0",
                  "  ",
                  "  LEFT JOIN glfb_t ON glfbent = glfaent AND glfa001 = glfb001 ", "  ", 
                  #add-point:browser_fill段sql(glfb_t1) name="browser_fill.join.glfb_t1"
                  
                  #end add-point
 
 
                  " ", 
 
 
                  
               " LEFT JOIN glfal_t ON glfalent = "||g_enterprise||" AND glfa001 = glfal001 AND glfal002 = '",g_dlang,"' ",
                  " WHERE t0.glfaent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("glfa_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT '',t0.glfa001 ",
                  " FROM glfa_t t0",
                  "  ",
                  
               " LEFT JOIN glfal_t ON glfalent = "||g_enterprise||" AND glfa001 = glfal001 AND glfal002 = '",g_dlang,"' ",
                  " WHERE t0.glfaent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("glfa_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   
   #end add-point
   LET g_sql = g_sql, " ORDER BY glfa001 ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"glfa_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_glfa001
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         
         #end add-point
      
      
         
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_glfa001) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
 
END FUNCTION
 
{</section>}
 
{<section id="agli075.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION agli075_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_glfa_m.glfa001 = g_browser[g_current_idx].b_glfa001   
 
   EXECUTE agli075_master_referesh USING g_glfa_m.glfa001 INTO g_glfa_m.glfa001,g_glfa_m.glfa004,g_glfa_m.glfa002, 
       g_glfa_m.glfa003,g_glfa_m.glfa016,g_glfa_m.glfa005,g_glfa_m.glfa006,g_glfa_m.glfa007,g_glfa_m.glfa009, 
       g_glfa_m.glfa008,g_glfa_m.glfaownid,g_glfa_m.glfacrtid,g_glfa_m.glfacrtdt,g_glfa_m.glfaowndp, 
       g_glfa_m.glfacrtdp,g_glfa_m.glfamodid,g_glfa_m.glfamoddt,g_glfa_m.glfa004_desc,g_glfa_m.glfa005_desc, 
       g_glfa_m.glfaownid_desc,g_glfa_m.glfacrtid_desc,g_glfa_m.glfaowndp_desc,g_glfa_m.glfacrtdp_desc, 
       g_glfa_m.glfamodid_desc
   
   CALL agli075_glfa_t_mask()
   CALL agli075_show()
      
END FUNCTION
 
{</section>}
 
{<section id="agli075.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION agli075_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="agli075.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION agli075_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_glfa001 = g_glfa_m.glfa001 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="agli075.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION agli075_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_glfa_m.* TO NULL
   CALL g_glfb_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON glfa001,glfal003,glfa004,glfa016,glfa005,glfa006,glfa007,glfa009,glfa008, 
          glfaownid,glfacrtid,glfacrtdt,glfaowndp,glfacrtdp,glfamodid,glfamoddt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            #160506-00012#1--add--str--
            LET g_glfa_m.glfa002='3'
            LET g_glfa_m.glfa003='2'
            DISPLAY BY NAME g_glfa_m.glfa002,g_glfa_m.glfa003
            #160506-00012#1--add--end
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<glfacrtdt>>----
         AFTER FIELD glfacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<glfamoddt>>----
         AFTER FIELD glfamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<glfacnfdt>>----
         
         #----<<glfapstdt>>----
 
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.glfa001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glfa001
            #add-point:ON ACTION controlp INFIELD glfa001 name="construct.c.glfa001"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " glfa002='3' "
            LET g_qryparam.where = g_qryparam.where," AND glfa016<>'3'" #160929-00042#1 add
            CALL q_glfa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glfa001  #顯示到畫面上
            NEXT FIELD glfa001                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glfa001
            #add-point:BEFORE FIELD glfa001 name="construct.b.glfa001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glfa001
            
            #add-point:AFTER FIELD glfa001 name="construct.a.glfa001"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glfal003
            #add-point:BEFORE FIELD glfal003 name="construct.b.glfal003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glfal003
            
            #add-point:AFTER FIELD glfal003 name="construct.a.glfal003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.glfal003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glfal003
            #add-point:ON ACTION controlp INFIELD glfal003 name="construct.c.glfal003"
            
            #END add-point
 
 
         #Ctrlp:construct.c.glfa004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glfa004
            #add-point:ON ACTION controlp INFIELD glfa004 name="construct.c.glfa004"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " ooal001='0' "
            CALL q_ooal002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glfa004  #顯示到畫面上
            NEXT FIELD glfa004                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glfa004
            #add-point:BEFORE FIELD glfa004 name="construct.b.glfa004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glfa004
            
            #add-point:AFTER FIELD glfa004 name="construct.a.glfa004"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glfa016
            #add-point:BEFORE FIELD glfa016 name="construct.b.glfa016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glfa016
            
            #add-point:AFTER FIELD glfa016 name="construct.a.glfa016"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.glfa016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glfa016
            #add-point:ON ACTION controlp INFIELD glfa016 name="construct.c.glfa016"
            
            #END add-point
 
 
         #Ctrlp:construct.c.glfa005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glfa005
            #add-point:ON ACTION controlp INFIELD glfa005 name="construct.c.glfa005"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept
            CALL q_authorised_ld()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glfa005  #顯示到畫面上
            NEXT FIELD glfa005                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glfa005
            #add-point:BEFORE FIELD glfa005 name="construct.b.glfa005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glfa005
            
            #add-point:AFTER FIELD glfa005 name="construct.a.glfa005"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glfa006
            #add-point:BEFORE FIELD glfa006 name="construct.b.glfa006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glfa006
            
            #add-point:AFTER FIELD glfa006 name="construct.a.glfa006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.glfa006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glfa006
            #add-point:ON ACTION controlp INFIELD glfa006 name="construct.c.glfa006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glfa007
            #add-point:BEFORE FIELD glfa007 name="construct.b.glfa007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glfa007
            
            #add-point:AFTER FIELD glfa007 name="construct.a.glfa007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.glfa007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glfa007
            #add-point:ON ACTION controlp INFIELD glfa007 name="construct.c.glfa007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glfa009
            #add-point:BEFORE FIELD glfa009 name="construct.b.glfa009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glfa009
            
            #add-point:AFTER FIELD glfa009 name="construct.a.glfa009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.glfa009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glfa009
            #add-point:ON ACTION controlp INFIELD glfa009 name="construct.c.glfa009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glfa008
            #add-point:BEFORE FIELD glfa008 name="construct.b.glfa008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glfa008
            
            #add-point:AFTER FIELD glfa008 name="construct.a.glfa008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.glfa008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glfa008
            #add-point:ON ACTION controlp INFIELD glfa008 name="construct.c.glfa008"
            
            #END add-point
 
 
         #Ctrlp:construct.c.glfaownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glfaownid
            #add-point:ON ACTION controlp INFIELD glfaownid name="construct.c.glfaownid"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glfaownid  #顯示到畫面上
            NEXT FIELD glfaownid                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glfaownid
            #add-point:BEFORE FIELD glfaownid name="construct.b.glfaownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glfaownid
            
            #add-point:AFTER FIELD glfaownid name="construct.a.glfaownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.glfacrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glfacrtid
            #add-point:ON ACTION controlp INFIELD glfacrtid name="construct.c.glfacrtid"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glfacrtid  #顯示到畫面上
            NEXT FIELD glfacrtid                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glfacrtid
            #add-point:BEFORE FIELD glfacrtid name="construct.b.glfacrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glfacrtid
            
            #add-point:AFTER FIELD glfacrtid name="construct.a.glfacrtid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glfacrtdt
            #add-point:BEFORE FIELD glfacrtdt name="construct.b.glfacrtdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.glfaowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glfaowndp
            #add-point:ON ACTION controlp INFIELD glfaowndp name="construct.c.glfaowndp"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glfaowndp  #顯示到畫面上
            NEXT FIELD glfaowndp                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glfaowndp
            #add-point:BEFORE FIELD glfaowndp name="construct.b.glfaowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glfaowndp
            
            #add-point:AFTER FIELD glfaowndp name="construct.a.glfaowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.glfacrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glfacrtdp
            #add-point:ON ACTION controlp INFIELD glfacrtdp name="construct.c.glfacrtdp"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glfacrtdp  #顯示到畫面上
            NEXT FIELD glfacrtdp                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glfacrtdp
            #add-point:BEFORE FIELD glfacrtdp name="construct.b.glfacrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glfacrtdp
            
            #add-point:AFTER FIELD glfacrtdp name="construct.a.glfacrtdp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.glfamodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glfamodid
            #add-point:ON ACTION controlp INFIELD glfamodid name="construct.c.glfamodid"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glfamodid  #顯示到畫面上
            NEXT FIELD glfamodid                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glfamodid
            #add-point:BEFORE FIELD glfamodid name="construct.b.glfamodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glfamodid
            
            #add-point:AFTER FIELD glfamodid name="construct.a.glfamodid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glfamoddt
            #add-point:BEFORE FIELD glfamoddt name="construct.b.glfamoddt"
            
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON glfbseq,glfbseq1,amt1,amt2,amt3,amt4,amt5,amt6,amt7,amt8,amt9,amt10, 
          amt11,amt12,amt13,amt14,amt15,amt16,amt17,amt18,amt19,amt20,amt21,amt22,amt23,amt24,amt25, 
          amt26,amt27,amt28,amt29,amt30,amt31,amt32,amt33,amt34,amt35,amt36,amt37,amt38,amt39,amt40, 
          amt41,amt42,amt43,amt44,amt45,amt46,amt47,amt48,amt49,amt50
           FROM s_detail1[1].glfbseq,s_detail1[1].glfbseq1,s_detail1[1].amt1,s_detail1[1].amt2,s_detail1[1].amt3, 
               s_detail1[1].amt4,s_detail1[1].amt5,s_detail1[1].amt6,s_detail1[1].amt7,s_detail1[1].amt8, 
               s_detail1[1].amt9,s_detail1[1].amt10,s_detail1[1].amt11,s_detail1[1].amt12,s_detail1[1].amt13, 
               s_detail1[1].amt14,s_detail1[1].amt15,s_detail1[1].amt16,s_detail1[1].amt17,s_detail1[1].amt18, 
               s_detail1[1].amt19,s_detail1[1].amt20,s_detail1[1].amt21,s_detail1[1].amt22,s_detail1[1].amt23, 
               s_detail1[1].amt24,s_detail1[1].amt25,s_detail1[1].amt26,s_detail1[1].amt27,s_detail1[1].amt28, 
               s_detail1[1].amt29,s_detail1[1].amt30,s_detail1[1].amt31,s_detail1[1].amt32,s_detail1[1].amt33, 
               s_detail1[1].amt34,s_detail1[1].amt35,s_detail1[1].amt36,s_detail1[1].amt37,s_detail1[1].amt38, 
               s_detail1[1].amt39,s_detail1[1].amt40,s_detail1[1].amt41,s_detail1[1].amt42,s_detail1[1].amt43, 
               s_detail1[1].amt44,s_detail1[1].amt45,s_detail1[1].amt46,s_detail1[1].amt47,s_detail1[1].amt48, 
               s_detail1[1].amt49,s_detail1[1].amt50
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glfbseq
            #add-point:BEFORE FIELD glfbseq name="construct.b.page1.glfbseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glfbseq
            
            #add-point:AFTER FIELD glfbseq name="construct.a.page1.glfbseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.glfbseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glfbseq
            #add-point:ON ACTION controlp INFIELD glfbseq name="construct.c.page1.glfbseq"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glfbseq1
            #add-point:BEFORE FIELD glfbseq1 name="construct.b.page1.glfbseq1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glfbseq1
            
            #add-point:AFTER FIELD glfbseq1 name="construct.a.page1.glfbseq1"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.glfbseq1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glfbseq1
            #add-point:ON ACTION controlp INFIELD glfbseq1 name="construct.c.page1.glfbseq1"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt1
            #add-point:BEFORE FIELD amt1 name="construct.b.page1.amt1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt1
            
            #add-point:AFTER FIELD amt1 name="construct.a.page1.amt1"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt1
            #add-point:ON ACTION controlp INFIELD amt1 name="construct.c.page1.amt1"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt2
            #add-point:BEFORE FIELD amt2 name="construct.b.page1.amt2"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt2
            
            #add-point:AFTER FIELD amt2 name="construct.a.page1.amt2"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt2
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt2
            #add-point:ON ACTION controlp INFIELD amt2 name="construct.c.page1.amt2"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt3
            #add-point:BEFORE FIELD amt3 name="construct.b.page1.amt3"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt3
            
            #add-point:AFTER FIELD amt3 name="construct.a.page1.amt3"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt3
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt3
            #add-point:ON ACTION controlp INFIELD amt3 name="construct.c.page1.amt3"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt4
            #add-point:BEFORE FIELD amt4 name="construct.b.page1.amt4"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt4
            
            #add-point:AFTER FIELD amt4 name="construct.a.page1.amt4"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt4
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt4
            #add-point:ON ACTION controlp INFIELD amt4 name="construct.c.page1.amt4"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt5
            #add-point:BEFORE FIELD amt5 name="construct.b.page1.amt5"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt5
            
            #add-point:AFTER FIELD amt5 name="construct.a.page1.amt5"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt5
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt5
            #add-point:ON ACTION controlp INFIELD amt5 name="construct.c.page1.amt5"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt6
            #add-point:BEFORE FIELD amt6 name="construct.b.page1.amt6"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt6
            
            #add-point:AFTER FIELD amt6 name="construct.a.page1.amt6"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt6
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt6
            #add-point:ON ACTION controlp INFIELD amt6 name="construct.c.page1.amt6"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt7
            #add-point:BEFORE FIELD amt7 name="construct.b.page1.amt7"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt7
            
            #add-point:AFTER FIELD amt7 name="construct.a.page1.amt7"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt7
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt7
            #add-point:ON ACTION controlp INFIELD amt7 name="construct.c.page1.amt7"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt8
            #add-point:BEFORE FIELD amt8 name="construct.b.page1.amt8"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt8
            
            #add-point:AFTER FIELD amt8 name="construct.a.page1.amt8"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt8
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt8
            #add-point:ON ACTION controlp INFIELD amt8 name="construct.c.page1.amt8"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt9
            #add-point:BEFORE FIELD amt9 name="construct.b.page1.amt9"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt9
            
            #add-point:AFTER FIELD amt9 name="construct.a.page1.amt9"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt9
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt9
            #add-point:ON ACTION controlp INFIELD amt9 name="construct.c.page1.amt9"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt10
            #add-point:BEFORE FIELD amt10 name="construct.b.page1.amt10"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt10
            
            #add-point:AFTER FIELD amt10 name="construct.a.page1.amt10"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt10
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt10
            #add-point:ON ACTION controlp INFIELD amt10 name="construct.c.page1.amt10"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt11
            #add-point:BEFORE FIELD amt11 name="construct.b.page1.amt11"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt11
            
            #add-point:AFTER FIELD amt11 name="construct.a.page1.amt11"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt11
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt11
            #add-point:ON ACTION controlp INFIELD amt11 name="construct.c.page1.amt11"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt12
            #add-point:BEFORE FIELD amt12 name="construct.b.page1.amt12"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt12
            
            #add-point:AFTER FIELD amt12 name="construct.a.page1.amt12"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt12
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt12
            #add-point:ON ACTION controlp INFIELD amt12 name="construct.c.page1.amt12"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt13
            #add-point:BEFORE FIELD amt13 name="construct.b.page1.amt13"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt13
            
            #add-point:AFTER FIELD amt13 name="construct.a.page1.amt13"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt13
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt13
            #add-point:ON ACTION controlp INFIELD amt13 name="construct.c.page1.amt13"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt14
            #add-point:BEFORE FIELD amt14 name="construct.b.page1.amt14"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt14
            
            #add-point:AFTER FIELD amt14 name="construct.a.page1.amt14"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt14
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt14
            #add-point:ON ACTION controlp INFIELD amt14 name="construct.c.page1.amt14"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt15
            #add-point:BEFORE FIELD amt15 name="construct.b.page1.amt15"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt15
            
            #add-point:AFTER FIELD amt15 name="construct.a.page1.amt15"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt15
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt15
            #add-point:ON ACTION controlp INFIELD amt15 name="construct.c.page1.amt15"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt16
            #add-point:BEFORE FIELD amt16 name="construct.b.page1.amt16"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt16
            
            #add-point:AFTER FIELD amt16 name="construct.a.page1.amt16"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt16
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt16
            #add-point:ON ACTION controlp INFIELD amt16 name="construct.c.page1.amt16"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt17
            #add-point:BEFORE FIELD amt17 name="construct.b.page1.amt17"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt17
            
            #add-point:AFTER FIELD amt17 name="construct.a.page1.amt17"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt17
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt17
            #add-point:ON ACTION controlp INFIELD amt17 name="construct.c.page1.amt17"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt18
            #add-point:BEFORE FIELD amt18 name="construct.b.page1.amt18"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt18
            
            #add-point:AFTER FIELD amt18 name="construct.a.page1.amt18"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt18
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt18
            #add-point:ON ACTION controlp INFIELD amt18 name="construct.c.page1.amt18"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt19
            #add-point:BEFORE FIELD amt19 name="construct.b.page1.amt19"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt19
            
            #add-point:AFTER FIELD amt19 name="construct.a.page1.amt19"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt19
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt19
            #add-point:ON ACTION controlp INFIELD amt19 name="construct.c.page1.amt19"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt20
            #add-point:BEFORE FIELD amt20 name="construct.b.page1.amt20"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt20
            
            #add-point:AFTER FIELD amt20 name="construct.a.page1.amt20"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt20
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt20
            #add-point:ON ACTION controlp INFIELD amt20 name="construct.c.page1.amt20"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt21
            #add-point:BEFORE FIELD amt21 name="construct.b.page1.amt21"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt21
            
            #add-point:AFTER FIELD amt21 name="construct.a.page1.amt21"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt21
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt21
            #add-point:ON ACTION controlp INFIELD amt21 name="construct.c.page1.amt21"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt22
            #add-point:BEFORE FIELD amt22 name="construct.b.page1.amt22"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt22
            
            #add-point:AFTER FIELD amt22 name="construct.a.page1.amt22"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt22
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt22
            #add-point:ON ACTION controlp INFIELD amt22 name="construct.c.page1.amt22"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt23
            #add-point:BEFORE FIELD amt23 name="construct.b.page1.amt23"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt23
            
            #add-point:AFTER FIELD amt23 name="construct.a.page1.amt23"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt23
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt23
            #add-point:ON ACTION controlp INFIELD amt23 name="construct.c.page1.amt23"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt24
            #add-point:BEFORE FIELD amt24 name="construct.b.page1.amt24"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt24
            
            #add-point:AFTER FIELD amt24 name="construct.a.page1.amt24"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt24
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt24
            #add-point:ON ACTION controlp INFIELD amt24 name="construct.c.page1.amt24"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt25
            #add-point:BEFORE FIELD amt25 name="construct.b.page1.amt25"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt25
            
            #add-point:AFTER FIELD amt25 name="construct.a.page1.amt25"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt25
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt25
            #add-point:ON ACTION controlp INFIELD amt25 name="construct.c.page1.amt25"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt26
            #add-point:BEFORE FIELD amt26 name="construct.b.page1.amt26"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt26
            
            #add-point:AFTER FIELD amt26 name="construct.a.page1.amt26"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt26
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt26
            #add-point:ON ACTION controlp INFIELD amt26 name="construct.c.page1.amt26"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt27
            #add-point:BEFORE FIELD amt27 name="construct.b.page1.amt27"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt27
            
            #add-point:AFTER FIELD amt27 name="construct.a.page1.amt27"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt27
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt27
            #add-point:ON ACTION controlp INFIELD amt27 name="construct.c.page1.amt27"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt28
            #add-point:BEFORE FIELD amt28 name="construct.b.page1.amt28"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt28
            
            #add-point:AFTER FIELD amt28 name="construct.a.page1.amt28"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt28
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt28
            #add-point:ON ACTION controlp INFIELD amt28 name="construct.c.page1.amt28"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt29
            #add-point:BEFORE FIELD amt29 name="construct.b.page1.amt29"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt29
            
            #add-point:AFTER FIELD amt29 name="construct.a.page1.amt29"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt29
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt29
            #add-point:ON ACTION controlp INFIELD amt29 name="construct.c.page1.amt29"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt30
            #add-point:BEFORE FIELD amt30 name="construct.b.page1.amt30"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt30
            
            #add-point:AFTER FIELD amt30 name="construct.a.page1.amt30"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt30
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt30
            #add-point:ON ACTION controlp INFIELD amt30 name="construct.c.page1.amt30"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt31
            #add-point:BEFORE FIELD amt31 name="construct.b.page1.amt31"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt31
            
            #add-point:AFTER FIELD amt31 name="construct.a.page1.amt31"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt31
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt31
            #add-point:ON ACTION controlp INFIELD amt31 name="construct.c.page1.amt31"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt32
            #add-point:BEFORE FIELD amt32 name="construct.b.page1.amt32"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt32
            
            #add-point:AFTER FIELD amt32 name="construct.a.page1.amt32"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt32
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt32
            #add-point:ON ACTION controlp INFIELD amt32 name="construct.c.page1.amt32"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt33
            #add-point:BEFORE FIELD amt33 name="construct.b.page1.amt33"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt33
            
            #add-point:AFTER FIELD amt33 name="construct.a.page1.amt33"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt33
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt33
            #add-point:ON ACTION controlp INFIELD amt33 name="construct.c.page1.amt33"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt34
            #add-point:BEFORE FIELD amt34 name="construct.b.page1.amt34"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt34
            
            #add-point:AFTER FIELD amt34 name="construct.a.page1.amt34"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt34
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt34
            #add-point:ON ACTION controlp INFIELD amt34 name="construct.c.page1.amt34"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt35
            #add-point:BEFORE FIELD amt35 name="construct.b.page1.amt35"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt35
            
            #add-point:AFTER FIELD amt35 name="construct.a.page1.amt35"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt35
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt35
            #add-point:ON ACTION controlp INFIELD amt35 name="construct.c.page1.amt35"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt36
            #add-point:BEFORE FIELD amt36 name="construct.b.page1.amt36"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt36
            
            #add-point:AFTER FIELD amt36 name="construct.a.page1.amt36"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt36
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt36
            #add-point:ON ACTION controlp INFIELD amt36 name="construct.c.page1.amt36"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt37
            #add-point:BEFORE FIELD amt37 name="construct.b.page1.amt37"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt37
            
            #add-point:AFTER FIELD amt37 name="construct.a.page1.amt37"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt37
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt37
            #add-point:ON ACTION controlp INFIELD amt37 name="construct.c.page1.amt37"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt38
            #add-point:BEFORE FIELD amt38 name="construct.b.page1.amt38"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt38
            
            #add-point:AFTER FIELD amt38 name="construct.a.page1.amt38"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt38
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt38
            #add-point:ON ACTION controlp INFIELD amt38 name="construct.c.page1.amt38"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt39
            #add-point:BEFORE FIELD amt39 name="construct.b.page1.amt39"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt39
            
            #add-point:AFTER FIELD amt39 name="construct.a.page1.amt39"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt39
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt39
            #add-point:ON ACTION controlp INFIELD amt39 name="construct.c.page1.amt39"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt40
            #add-point:BEFORE FIELD amt40 name="construct.b.page1.amt40"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt40
            
            #add-point:AFTER FIELD amt40 name="construct.a.page1.amt40"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt40
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt40
            #add-point:ON ACTION controlp INFIELD amt40 name="construct.c.page1.amt40"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt41
            #add-point:BEFORE FIELD amt41 name="construct.b.page1.amt41"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt41
            
            #add-point:AFTER FIELD amt41 name="construct.a.page1.amt41"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt41
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt41
            #add-point:ON ACTION controlp INFIELD amt41 name="construct.c.page1.amt41"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt42
            #add-point:BEFORE FIELD amt42 name="construct.b.page1.amt42"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt42
            
            #add-point:AFTER FIELD amt42 name="construct.a.page1.amt42"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt42
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt42
            #add-point:ON ACTION controlp INFIELD amt42 name="construct.c.page1.amt42"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt43
            #add-point:BEFORE FIELD amt43 name="construct.b.page1.amt43"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt43
            
            #add-point:AFTER FIELD amt43 name="construct.a.page1.amt43"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt43
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt43
            #add-point:ON ACTION controlp INFIELD amt43 name="construct.c.page1.amt43"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt44
            #add-point:BEFORE FIELD amt44 name="construct.b.page1.amt44"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt44
            
            #add-point:AFTER FIELD amt44 name="construct.a.page1.amt44"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt44
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt44
            #add-point:ON ACTION controlp INFIELD amt44 name="construct.c.page1.amt44"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt45
            #add-point:BEFORE FIELD amt45 name="construct.b.page1.amt45"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt45
            
            #add-point:AFTER FIELD amt45 name="construct.a.page1.amt45"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt45
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt45
            #add-point:ON ACTION controlp INFIELD amt45 name="construct.c.page1.amt45"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt46
            #add-point:BEFORE FIELD amt46 name="construct.b.page1.amt46"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt46
            
            #add-point:AFTER FIELD amt46 name="construct.a.page1.amt46"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt46
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt46
            #add-point:ON ACTION controlp INFIELD amt46 name="construct.c.page1.amt46"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt47
            #add-point:BEFORE FIELD amt47 name="construct.b.page1.amt47"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt47
            
            #add-point:AFTER FIELD amt47 name="construct.a.page1.amt47"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt47
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt47
            #add-point:ON ACTION controlp INFIELD amt47 name="construct.c.page1.amt47"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt48
            #add-point:BEFORE FIELD amt48 name="construct.b.page1.amt48"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt48
            
            #add-point:AFTER FIELD amt48 name="construct.a.page1.amt48"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt48
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt48
            #add-point:ON ACTION controlp INFIELD amt48 name="construct.c.page1.amt48"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt49
            #add-point:BEFORE FIELD amt49 name="construct.b.page1.amt49"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt49
            
            #add-point:AFTER FIELD amt49 name="construct.a.page1.amt49"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt49
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt49
            #add-point:ON ACTION controlp INFIELD amt49 name="construct.c.page1.amt49"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt50
            #add-point:BEFORE FIELD amt50 name="construct.b.page1.amt50"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt50
            
            #add-point:AFTER FIELD amt50 name="construct.a.page1.amt50"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.amt50
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt50
            #add-point:ON ACTION controlp INFIELD amt50 name="construct.c.page1.amt50"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "glfa_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "glfb_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="agli075.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION agli075_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   #切換畫面
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_glfb_d.clear()
 
   
   #add-point:query段other name="query.other"
   
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL agli075_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL agli075_browser_fill("")
      CALL agli075_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
   CALL agli075_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL agli075_fetch("F") 
      #顯示單身筆數
      CALL agli075_idx_chk()
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="agli075.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION agli075_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_pagestart = g_current_idx
   DISPLAY g_pagestart TO FORMONLY.b_index   #當下筆數
   DISPLAY g_pagestart TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_pagestart, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_glfa_m.glfa001 = g_browser[g_current_idx].b_glfa001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE agli075_master_referesh USING g_glfa_m.glfa001 INTO g_glfa_m.glfa001,g_glfa_m.glfa004,g_glfa_m.glfa002, 
       g_glfa_m.glfa003,g_glfa_m.glfa016,g_glfa_m.glfa005,g_glfa_m.glfa006,g_glfa_m.glfa007,g_glfa_m.glfa009, 
       g_glfa_m.glfa008,g_glfa_m.glfaownid,g_glfa_m.glfacrtid,g_glfa_m.glfacrtdt,g_glfa_m.glfaowndp, 
       g_glfa_m.glfacrtdp,g_glfa_m.glfamodid,g_glfa_m.glfamoddt,g_glfa_m.glfa004_desc,g_glfa_m.glfa005_desc, 
       g_glfa_m.glfaownid_desc,g_glfa_m.glfacrtid_desc,g_glfa_m.glfaowndp_desc,g_glfa_m.glfacrtdp_desc, 
       g_glfa_m.glfamodid_desc
   
   #遮罩相關處理
   LET g_glfa_m_mask_o.* =  g_glfa_m.*
   CALL agli075_glfa_t_mask()
   LET g_glfa_m_mask_n.* =  g_glfa_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL agli075_set_act_visible()   
   CALL agli075_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
   
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   CALL agli075_set_amt_format()
   #end add-point
   
   #保存單頭舊值
   LET g_glfa_m_t.* = g_glfa_m.*
   LET g_glfa_m_o.* = g_glfa_m.*
   
   LET g_data_owner = g_glfa_m.glfaownid      
   LET g_data_dept  = g_glfa_m.glfaowndp
   
   #重新顯示   
   CALL agli075_show()
 
   
 
END FUNCTION
 
{</section>}
 
{<section id="agli075.insert" >}
#+ 資料新增
PRIVATE FUNCTION agli075_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_glfb_d.clear()   
 
 
   INITIALIZE g_glfa_m.* TO NULL             #DEFAULT 設定
   
   LET g_glfa001_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_glfa_m.glfaownid = g_user
      LET g_glfa_m.glfaowndp = g_dept
      LET g_glfa_m.glfacrtid = g_user
      LET g_glfa_m.glfacrtdp = g_dept 
      LET g_glfa_m.glfacrtdt = cl_get_current()
      LET g_glfa_m.glfamodid = g_user
      LET g_glfa_m.glfamoddt = cl_get_current()
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_glfa_m.glfa002 = "3"
      LET g_glfa_m.glfa003 = "2"
      LET g_glfa_m.glfa016 = "1"
      LET g_glfa_m.glfa009 = "2"
      LET g_glfa_m.glfa008 = "1"
 
  
      #add-point:單頭預設值 name="insert.default"
      
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_glfa_m_t.* = g_glfa_m.*
      LET g_glfa_m_o.* = g_glfa_m.*
      
      #顯示狀態(stus)圖片
      
    
      CALL agli075_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_glfa_m.* TO NULL
         INITIALIZE g_glfb_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         
         #end add-point 
         CALL agli075_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_glfb_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL agli075_set_act_visible()   
   CALL agli075_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_glfa001_t = g_glfa_m.glfa001
 
   
   #組合新增資料的條件
   LET g_add_browse = " glfaent = " ||g_enterprise|| " AND",
                      " glfa001 = '", g_glfa_m.glfa001, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL agli075_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE agli075_cl
   
   CALL agli075_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE agli075_master_referesh USING g_glfa_m.glfa001 INTO g_glfa_m.glfa001,g_glfa_m.glfa004,g_glfa_m.glfa002, 
       g_glfa_m.glfa003,g_glfa_m.glfa016,g_glfa_m.glfa005,g_glfa_m.glfa006,g_glfa_m.glfa007,g_glfa_m.glfa009, 
       g_glfa_m.glfa008,g_glfa_m.glfaownid,g_glfa_m.glfacrtid,g_glfa_m.glfacrtdt,g_glfa_m.glfaowndp, 
       g_glfa_m.glfacrtdp,g_glfa_m.glfamodid,g_glfa_m.glfamoddt,g_glfa_m.glfa004_desc,g_glfa_m.glfa005_desc, 
       g_glfa_m.glfaownid_desc,g_glfa_m.glfacrtid_desc,g_glfa_m.glfaowndp_desc,g_glfa_m.glfacrtdp_desc, 
       g_glfa_m.glfamodid_desc
   
   
   #遮罩相關處理
   LET g_glfa_m_mask_o.* =  g_glfa_m.*
   CALL agli075_glfa_t_mask()
   LET g_glfa_m_mask_n.* =  g_glfa_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_glfa_m.glfa001,g_glfa_m.glfal003,g_glfa_m.glfa004,g_glfa_m.glfa004_desc,g_glfa_m.glfa002, 
       g_glfa_m.glfa003,g_glfa_m.glfa016,g_glfa_m.glfa005,g_glfa_m.glfa005_desc,g_glfa_m.glaa001,g_glfa_m.glfa006, 
       g_glfa_m.glfa007,g_glfa_m.glfa009,g_glfa_m.glfa008,g_glfa_m.glfaownid,g_glfa_m.glfaownid_desc, 
       g_glfa_m.glfacrtid,g_glfa_m.glfacrtid_desc,g_glfa_m.glfacrtdt,g_glfa_m.glfaowndp,g_glfa_m.glfaowndp_desc, 
       g_glfa_m.glfacrtdp,g_glfa_m.glfacrtdp_desc,g_glfa_m.glfamodid,g_glfa_m.glfamodid_desc,g_glfa_m.glfamoddt 
 
   
   #add-point:新增結束後 name="insert.after"
   
   #end add-point 
   
   LET g_data_owner = g_glfa_m.glfaownid      
   LET g_data_dept  = g_glfa_m.glfaowndp
   
   #功能已完成,通報訊息中心
   CALL agli075_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="agli075.modify" >}
#+ 資料修改
PRIVATE FUNCTION agli075_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   #保存單頭舊值
   LET g_glfa_m_t.* = g_glfa_m.*
   LET g_glfa_m_o.* = g_glfa_m.*
   
   IF g_glfa_m.glfa001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_glfa001_t = g_glfa_m.glfa001
 
   CALL s_transaction_begin()
   
   OPEN agli075_cl USING g_enterprise,g_glfa_m.glfa001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN agli075_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE agli075_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE agli075_master_referesh USING g_glfa_m.glfa001 INTO g_glfa_m.glfa001,g_glfa_m.glfa004,g_glfa_m.glfa002, 
       g_glfa_m.glfa003,g_glfa_m.glfa016,g_glfa_m.glfa005,g_glfa_m.glfa006,g_glfa_m.glfa007,g_glfa_m.glfa009, 
       g_glfa_m.glfa008,g_glfa_m.glfaownid,g_glfa_m.glfacrtid,g_glfa_m.glfacrtdt,g_glfa_m.glfaowndp, 
       g_glfa_m.glfacrtdp,g_glfa_m.glfamodid,g_glfa_m.glfamoddt,g_glfa_m.glfa004_desc,g_glfa_m.glfa005_desc, 
       g_glfa_m.glfaownid_desc,g_glfa_m.glfacrtid_desc,g_glfa_m.glfaowndp_desc,g_glfa_m.glfacrtdp_desc, 
       g_glfa_m.glfamodid_desc
   
   #檢查是否允許此動作
   IF NOT agli075_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_glfa_m_mask_o.* =  g_glfa_m.*
   CALL agli075_glfa_t_mask()
   LET g_glfa_m_mask_n.* =  g_glfa_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
 
   
   CALL agli075_show()
   #add-point:modify段show之後 name="modify.after_show"
   #160811-00039#7--add--str--
   IF NOT s_ld_chk_authorization(g_user,g_glfa_m.glfa005) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'agl-00165'
      LET g_errparam.extend = g_glfa_m.glfa005
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CLOSE agli075_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   #160811-00039#7--add--end
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
 
    
   WHILE TRUE
      LET g_glfa001_t = g_glfa_m.glfa001
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_glfa_m.glfamodid = g_user 
LET g_glfa_m.glfamoddt = cl_get_current()
LET g_glfa_m.glfamodid_desc = cl_get_username(g_glfa_m.glfamodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL agli075_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE glfa_t SET (glfamodid,glfamoddt) = (g_glfa_m.glfamodid,g_glfa_m.glfamoddt)
          WHERE glfaent = g_enterprise AND glfa001 = g_glfa001_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_glfa_m.* = g_glfa_m_t.*
            CALL agli075_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_glfa_m.glfa001 != g_glfa_m_t.glfa001
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         
         #end add-point
         
         #更新單身key值
         UPDATE glfb_t SET glfb001 = g_glfa_m.glfa001
 
          WHERE glfbent = g_enterprise AND glfb001 = g_glfa_m_t.glfa001
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "glfb_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "glfb_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL agli075_set_act_visible()   
   CALL agli075_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " glfaent = " ||g_enterprise|| " AND",
                      " glfa001 = '", g_glfa_m.glfa001, "' "
 
   #填到對應位置
   CALL agli075_browser_fill("")
 
   CLOSE agli075_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL agli075_msgcentre_notify('modify')
 
END FUNCTION 
 
{</section>}
 
{<section id="agli075.input" >}
#+ 資料輸入
PRIVATE FUNCTION agli075_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE  l_glfa005_txt         LIKE type_t.chr100
   DEFINE  l_flag                LIKE type_t.num5
   DEFINE  l_amt                 LIKE type_t.num20_6
   DEFINE  l_success             LIKE type_t.num5
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_glfa_m.glfa001,g_glfa_m.glfal003,g_glfa_m.glfa004,g_glfa_m.glfa004_desc,g_glfa_m.glfa002, 
       g_glfa_m.glfa003,g_glfa_m.glfa016,g_glfa_m.glfa005,g_glfa_m.glfa005_desc,g_glfa_m.glaa001,g_glfa_m.glfa006, 
       g_glfa_m.glfa007,g_glfa_m.glfa009,g_glfa_m.glfa008,g_glfa_m.glfaownid,g_glfa_m.glfaownid_desc, 
       g_glfa_m.glfacrtid,g_glfa_m.glfacrtid_desc,g_glfa_m.glfacrtdt,g_glfa_m.glfaowndp,g_glfa_m.glfaowndp_desc, 
       g_glfa_m.glfacrtdp,g_glfa_m.glfacrtdp_desc,g_glfa_m.glfamodid,g_glfa_m.glfamodid_desc,g_glfa_m.glfamoddt 
 
   
   #切換畫面
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT glfbseq,glfbseq1 FROM glfb_t WHERE glfbent=? AND glfb001=? AND glfbseq=?  
       AND glfbseq1=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   #重写，锁住整行
   LET g_forupd_sql = "SELECT glfbseq,glfbseq1 FROM glfb_t WHERE glfbent=? AND glfb001=? AND  
       glfbseq=?  FOR UPDATE"
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE agli075_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
   
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL agli075_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL agli075_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_glfa_m.glfa001,g_glfa_m.glfal003,g_glfa_m.glfa004,g_glfa_m.glfa002,g_glfa_m.glfa003, 
       g_glfa_m.glfa016,g_glfa_m.glfa005,g_glfa_m.glfa006,g_glfa_m.glfa007,g_glfa_m.glfa009,g_glfa_m.glfa008 
 
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="agli075.input.head" >}
      #單頭段
      INPUT BY NAME g_glfa_m.glfa001,g_glfa_m.glfal003,g_glfa_m.glfa004,g_glfa_m.glfa002,g_glfa_m.glfa003, 
          g_glfa_m.glfa016,g_glfa_m.glfa005,g_glfa_m.glfa006,g_glfa_m.glfa007,g_glfa_m.glfa009,g_glfa_m.glfa008  
 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item name="input.master_input.update_item"
               IF NOT cl_null(g_glfa_m.glfa001)  THEN
                  CALL n_glfal(g_glfa_m.glfa001)
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_glfa_m.glfa001
                  CALL ap_ref_array2(g_ref_fields," SELECT glfal003 FROM glfal_t WHERE glfalent = '"
                      ||g_enterprise||"' AND glfal001 = ? AND glfal002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
                  LET g_glfa_m.glfal003 = g_rtn_fields[1]
                  DISPLAY BY NAME g_glfa_m.glfal003
               END IF
               #END add-point
            END IF
 
 
 
 
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN agli075_cl USING g_enterprise,g_glfa_m.glfa001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN agli075_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE agli075_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            LET g_master_multi_table_t.glfal001 = g_glfa_m.glfa001
LET g_master_multi_table_t.glfal003 = g_glfa_m.glfal003
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.glfal001 = ''
LET g_master_multi_table_t.glfal003 = ''
 
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL agli075_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            
            #end add-point
            CALL agli075_set_no_entry(p_cmd)
    
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glfa001
            #add-point:BEFORE FIELD glfa001 name="input.b.glfa001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glfa001
            
            #add-point:AFTER FIELD glfa001 name="input.a.glfa001"
            #應用 a05 樣板自動產生(Version:3)
            #確認資料無重複
            IF  NOT cl_null(g_glfa_m.glfa001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_glfa_m.glfa001 != g_glfa001_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM glfa_t WHERE "||"glfaent = '" ||g_enterprise|| "' AND "||"glfa001 = '"||g_glfa_m.glfa001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF




            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glfa001
            #add-point:ON CHANGE glfa001 name="input.g.glfa001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glfal003
            #add-point:BEFORE FIELD glfal003 name="input.b.glfal003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glfal003
            
            #add-point:AFTER FIELD glfal003 name="input.a.glfal003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glfal003
            #add-point:ON CHANGE glfal003 name="input.g.glfal003"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glfa004
            
            #add-point:AFTER FIELD glfa004 name="input.a.glfa004"
            IF NOT cl_null(g_glfa_m.glfa004) THEN 
#應用 a17 樣板自動產生(Version:3)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
 
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_glfa_m.glfa004

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooal002_7") THEN
                  #檢查成功時後續處理
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
 


            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glfa_m.glfa004
            CALL ap_ref_array2(g_ref_fields,"SELECT ooall004 FROM ooall_t WHERE ooallent='"||g_enterprise||"' AND ooall001='0' AND ooall002=? AND ooall003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glfa_m.glfa004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glfa_m.glfa004_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glfa004
            #add-point:BEFORE FIELD glfa004 name="input.b.glfa004"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glfa004
            #add-point:ON CHANGE glfa004 name="input.g.glfa004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glfa002
            #add-point:BEFORE FIELD glfa002 name="input.b.glfa002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glfa002
            
            #add-point:AFTER FIELD glfa002 name="input.a.glfa002"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glfa002
            #add-point:ON CHANGE glfa002 name="input.g.glfa002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glfa003
            #add-point:BEFORE FIELD glfa003 name="input.b.glfa003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glfa003
            
            #add-point:AFTER FIELD glfa003 name="input.a.glfa003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glfa003
            #add-point:ON CHANGE glfa003 name="input.g.glfa003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glfa016
            #add-point:BEFORE FIELD glfa016 name="input.b.glfa016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glfa016
            
            #add-point:AFTER FIELD glfa016 name="input.a.glfa016"
 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glfa016
            #add-point:ON CHANGE glfa016 name="input.g.glfa016"
            IF g_glfa_m.glfa016 = '1' THEN
               SELECT gzzd005 INTO l_glfa005_txt FROM gzzd_t WHERE gzzd003 = 'lbl_glfa005' AND gzzd002 = g_dlang AND gzzd001 = 'agli070'
               CALL cl_set_comp_att_text('lbl_glfa005',l_glfa005_txt)
            ELSE
               SELECT gzzd005 INTO l_glfa005_txt FROM gzzd_t WHERE gzzd003 = 'lbl_glfa0052' AND gzzd002 = g_dlang AND gzzd001 = 'agli070'
               CALL cl_set_comp_att_text('lbl_glfa005',l_glfa005_txt)
               LET l_cnt = 0
               SELECT COUNT(*) INTO l_cnt FROM glaa_t 
                WHERE glaaent=g_enterprise AND glaald=g_glfa_m.glfa005 AND glaa004=g_glfa_m.glfa004 AND glaa130 ='Y'
               IF cl_null(l_cnt) THEN LET l_cnt = 0 END IF
               IF l_cnt=0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'agl-00318'
                  LET g_errparam.extend = g_glfa_m.glfa005
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  LET g_glfa_m.glfa005 = ''
                  LET g_glfa_m.glfa005_desc =''
                  DISPLAY BY NAME g_glfa_m.glfa005_desc
                  NEXT FIELD CURRENT                  
               END IF
            END IF
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glfa005
            
            #add-point:AFTER FIELD glfa005 name="input.a.glfa005"
            IF NOT cl_null(g_glfa_m.glfa005) THEN
               SELECT COUNT(*) INTO l_cnt FROM glaa_t WHERE glaaent=g_enterprise AND glaald=g_glfa_m.glfa005
               IF l_cnt=0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'agl-00055'
                  LET g_errparam.extend = g_glfa_m.glfa005
                  #LET g_errparam.popup = FALSE
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  LET g_glfa_m.glfa005=g_glfa_m_t.glfa005
                  NEXT FIELD glfa005
               END IF
               SELECT COUNT(*) INTO l_cnt FROM glaa_t 
               WHERE glaaent=g_enterprise AND glaald=g_glfa_m.glfa005 AND glaa004=g_glfa_m.glfa004
               IF l_cnt=0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'agl-00242'
                  LET g_errparam.extend = g_glfa_m.glfa005
                  #LET g_errparam.popup = FALSE
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  LET g_glfa_m.glfa005=g_glfa_m_t.glfa005
                  NEXT FIELD glfa005
               END IF
               IF g_glfa_m.glfa016 = '2' THEN
                  LET l_cnt = 0 
                  SELECT COUNT(*) INTO l_cnt FROM glaa_t 
                    WHERE glaaent=g_enterprise AND glaald=g_glfa_m.glfa005 
                      AND glaa004=g_glfa_m.glfa004 AND glaa130 ='Y'
                  IF cl_null(l_cnt) THEN LET l_cnt = 0 END IF
                  IF l_cnt=0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'agl-00318'
                     LET g_errparam.extend = g_glfa_m.glfa005
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_glfa_m.glfa005=g_glfa_m_t.glfa005
                     NEXT FIELD glfa005
                  END IF
               END IF  
               #160811-00039#7--add--str--
               IF NOT s_ld_chk_authorization(g_user,g_glfa_m.glfa005) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'agl-00165'
                  LET g_errparam.extend = g_glfa_m.glfa005
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  LET g_glfa_m.glfa005=g_glfa_m_t.glfa005
                  NEXT FIELD CURRENT
               END IF
               #160811-00039#7--add--end
            END IF
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glfa_m.glfa005
            CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glfa_m.glfa005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glfa_m.glfa005_desc
            SELECT glaa001 INTO g_glfa_m.glaa001 FROM glaa_t
             WHERE glaaent=g_enterprise AND glaald=g_glfa_m.glfa005
            DISPLAY BY NAME g_glfa_m.glaa001

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glfa005
            #add-point:BEFORE FIELD glfa005 name="input.b.glfa005"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glfa005
            #add-point:ON CHANGE glfa005 name="input.g.glfa005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glfa006
            #add-point:BEFORE FIELD glfa006 name="input.b.glfa006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glfa006
            
            #add-point:AFTER FIELD glfa006 name="input.a.glfa006"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glfa006
            #add-point:ON CHANGE glfa006 name="input.g.glfa006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glfa007
            #add-point:BEFORE FIELD glfa007 name="input.b.glfa007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glfa007
            
            #add-point:AFTER FIELD glfa007 name="input.a.glfa007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glfa007
            #add-point:ON CHANGE glfa007 name="input.g.glfa007"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glfa009
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_glfa_m.glfa009,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD glfa009
            END IF 
 
 
 
            #add-point:AFTER FIELD glfa009 name="input.a.glfa009"
            IF NOT cl_null(g_glfa_m.glfa009) THEN
               IF cl_null(g_glfa_m_t.glfa009) OR ( NOT cl_null(g_glfa_m_t.glfa009 AND g_glfa_m_t.glfa009 <> g_glfa_m.glfa009)) THEN
                  CALL agli075_set_amt_format()
               END IF
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glfa009
            #add-point:BEFORE FIELD glfa009 name="input.b.glfa009"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glfa009
            #add-point:ON CHANGE glfa009 name="input.g.glfa009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glfa008
            #add-point:BEFORE FIELD glfa008 name="input.b.glfa008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glfa008
            
            #add-point:AFTER FIELD glfa008 name="input.a.glfa008"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glfa008
            #add-point:ON CHANGE glfa008 name="input.g.glfa008"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.glfa001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glfa001
            #add-point:ON ACTION controlp INFIELD glfa001 name="input.c.glfa001"
            
            #END add-point
 
 
         #Ctrlp:input.c.glfal003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glfal003
            #add-point:ON ACTION controlp INFIELD glfal003 name="input.c.glfal003"
            
            #END add-point
 
 
         #Ctrlp:input.c.glfa004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glfa004
            #add-point:ON ACTION controlp INFIELD glfa004 name="input.c.glfa004"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_glfa_m.glfa004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #
            LET g_qryparam.where = " ooal001='0' "
 
            CALL q_ooal002()                                #呼叫開窗
 
            LET g_glfa_m.glfa004 = g_qryparam.return1              

            DISPLAY g_glfa_m.glfa004 TO glfa004              #

            NEXT FIELD glfa004                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.glfa002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glfa002
            #add-point:ON ACTION controlp INFIELD glfa002 name="input.c.glfa002"
            
            #END add-point
 
 
         #Ctrlp:input.c.glfa003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glfa003
            #add-point:ON ACTION controlp INFIELD glfa003 name="input.c.glfa003"
            
            #END add-point
 
 
         #Ctrlp:input.c.glfa016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glfa016
            #add-point:ON ACTION controlp INFIELD glfa016 name="input.c.glfa016"
            
            #END add-point
 
 
         #Ctrlp:input.c.glfa005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glfa005
            #add-point:ON ACTION controlp INFIELD glfa005 name="input.c.glfa005"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_glfa_m.glfa005             #給予default值
            LET g_qryparam.default2 = "" #g_glfa_m.glaal002 #說明
            #給予arg
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept
            IF g_glfa_m.glfa016 = '2' THEN
               LET g_qryparam.where = " glaa004='",g_glfa_m.glfa004,"'  ",
                                      "  AND glaald IN (SELECT glaald FROM glaa_t             ",
                                      "                  WHERE glaaent = '",g_enterprise,"'   ",
                                      "                    AND glaastus = 'Y'                 ",
                                      "                    AND glaa130 = 'Y' )                "
            ELSE                      
                LET g_qryparam.where = " glaa004='",g_glfa_m.glfa004,"'  "
            END IF

 
            CALL q_authorised_ld()                                #呼叫開窗
 
            LET g_glfa_m.glfa005 = g_qryparam.return1              
            #LET g_glfa_m.glaal002 = g_qryparam.return2 
            DISPLAY g_glfa_m.glfa005 TO glfa005              #
            #DISPLAY g_glfa_m.glaal002 TO glaal002 #說明
            NEXT FIELD glfa005                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.glfa006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glfa006
            #add-point:ON ACTION controlp INFIELD glfa006 name="input.c.glfa006"
            
            #END add-point
 
 
         #Ctrlp:input.c.glfa007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glfa007
            #add-point:ON ACTION controlp INFIELD glfa007 name="input.c.glfa007"
            
            #END add-point
 
 
         #Ctrlp:input.c.glfa009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glfa009
            #add-point:ON ACTION controlp INFIELD glfa009 name="input.c.glfa009"
            
            #END add-point
 
 
         #Ctrlp:input.c.glfa008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glfa008
            #add-point:ON ACTION controlp INFIELD glfa008 name="input.c.glfa008"
            
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_glfa_m.glfa001
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               
               #end add-point
               
               INSERT INTO glfa_t (glfaent,glfa001,glfa004,glfa002,glfa003,glfa016,glfa005,glfa006,glfa007, 
                   glfa009,glfa008,glfaownid,glfacrtid,glfacrtdt,glfaowndp,glfacrtdp,glfamodid,glfamoddt) 
 
               VALUES (g_enterprise,g_glfa_m.glfa001,g_glfa_m.glfa004,g_glfa_m.glfa002,g_glfa_m.glfa003, 
                   g_glfa_m.glfa016,g_glfa_m.glfa005,g_glfa_m.glfa006,g_glfa_m.glfa007,g_glfa_m.glfa009, 
                   g_glfa_m.glfa008,g_glfa_m.glfaownid,g_glfa_m.glfacrtid,g_glfa_m.glfacrtdt,g_glfa_m.glfaowndp, 
                   g_glfa_m.glfacrtdp,g_glfa_m.glfamodid,g_glfa_m.glfamoddt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_glfa_m:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_glfa_m.glfa001 = g_master_multi_table_t.glfal001 AND
         g_glfa_m.glfal003 = g_master_multi_table_t.glfal003  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'glfalent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_glfa_m.glfa001
            LET l_field_keys[02] = 'glfal001'
            LET l_var_keys_bak[02] = g_master_multi_table_t.glfal001
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'glfal002'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_glfa_m.glfal003
            LET l_fields[01] = 'glfal003'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'glfal_t')
         END IF 
 
               
               #add-point:單頭新增後 name="input.head.a_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL agli075_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL agli075_b_fill()
                  CALL agli075_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
               
               #將遮罩欄位還原
               CALL agli075_glfa_t_mask_restore('restore_mask_o')
               
               UPDATE glfa_t SET (glfa001,glfa004,glfa002,glfa003,glfa016,glfa005,glfa006,glfa007,glfa009, 
                   glfa008,glfaownid,glfacrtid,glfacrtdt,glfaowndp,glfacrtdp,glfamodid,glfamoddt) = (g_glfa_m.glfa001, 
                   g_glfa_m.glfa004,g_glfa_m.glfa002,g_glfa_m.glfa003,g_glfa_m.glfa016,g_glfa_m.glfa005, 
                   g_glfa_m.glfa006,g_glfa_m.glfa007,g_glfa_m.glfa009,g_glfa_m.glfa008,g_glfa_m.glfaownid, 
                   g_glfa_m.glfacrtid,g_glfa_m.glfacrtdt,g_glfa_m.glfaowndp,g_glfa_m.glfacrtdp,g_glfa_m.glfamodid, 
                   g_glfa_m.glfamoddt)
                WHERE glfaent = g_enterprise AND glfa001 = g_glfa001_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "glfa_t:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_glfa_m.glfa001 = g_master_multi_table_t.glfal001 AND
         g_glfa_m.glfal003 = g_master_multi_table_t.glfal003  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'glfalent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_glfa_m.glfa001
            LET l_field_keys[02] = 'glfal001'
            LET l_var_keys_bak[02] = g_master_multi_table_t.glfal001
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'glfal002'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_glfa_m.glfal003
            LET l_fields[01] = 'glfal003'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'glfal_t')
         END IF 
 
               
               #將遮罩欄位進行遮蔽
               CALL agli075_glfa_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_glfa_m_t)
               LET g_log2 = util.JSON.stringify(g_glfa_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_glfa001_t = g_glfa_m.glfa001
 
            
      END INPUT
   
 
{</section>}
 
{<section id="agli075.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_glfb_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_glfb_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL agli075_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_glfb_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN agli075_cl USING g_enterprise,g_glfa_m.glfa001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN agli075_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE agli075_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_glfb_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_glfb_d[l_ac].glfbseq IS NOT NULL
               AND g_glfb_d[l_ac].glfbseq1 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_glfb_d_t.* = g_glfb_d[l_ac].*  #BACKUP
               LET g_glfb_d_o.* = g_glfb_d[l_ac].*  #BACKUP
               CALL agli075_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               
               #end add-point  
               CALL agli075_set_no_entry_b(l_cmd)
               IF NOT agli075_lock_b("glfb_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH agli075_bcl INTO g_glfb_d[l_ac].glfbseq,g_glfb_d[l_ac].glfbseq1
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_glfb_d_t.glfbseq,":",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_glfb_d_mask_o[l_ac].* =  g_glfb_d[l_ac].*
                  CALL agli075_glfb_t_mask()
                  LET g_glfb_d_mask_n[l_ac].* =  g_glfb_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL agli075_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            CALL agli075_get_row_data(g_glfb_d[l_ac].glfbseq)  #抓取该行每个单元格资料
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_glfb_d[l_ac].* TO NULL 
            INITIALIZE g_glfb_d_t.* TO NULL 
            INITIALIZE g_glfb_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
            
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            IF cl_null(g_glfb_d[l_ac].glfbseq) OR g_glfb_d[l_ac].glfbseq=0 THEN
               SELECT MAX(glfbseq) INTO g_glfb_d[l_ac].glfbseq FROM glfb_t 
                WHERE glfbent = g_enterprise AND glfb001 = g_glfa_m.glfa001
               IF cl_null(g_glfb_d[l_ac].glfbseq) THEN
                  LET g_glfb_d[l_ac].glfbseq = 0
               END IF
               LET g_glfb_d[l_ac].glfbseq =g_glfb_d[l_ac].glfbseq +1
            END IF
            CALL g_glfb_row.clear()
            #end add-point
            LET g_glfb_d_t.* = g_glfb_d[l_ac].*     #新輸入資料
            LET g_glfb_d_o.* = g_glfb_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL agli075_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            
            #end add-point
            CALL agli075_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_glfb_d[li_reproduce_target].* = g_glfb_d[li_reproduce].*
 
               LET g_glfb_d[li_reproduce_target].glfbseq = NULL
               LET g_glfb_d[li_reproduce_target].glfbseq1 = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
            
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
         #重写新增插入部分
         LET l_flag=FALSE
         IF l_flag = TRUE THEN
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM glfb_t 
             WHERE glfbent = g_enterprise AND glfb001 = g_glfa_m.glfa001
 
               AND glfbseq = g_glfb_d[l_ac].glfbseq
               AND glfbseq1 = g_glfb_d[l_ac].glfbseq1
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_glfa_m.glfa001
               LET gs_keys[2] = g_glfb_d[g_detail_idx].glfbseq
               LET gs_keys[3] = g_glfb_d[g_detail_idx].glfbseq1
               CALL agli075_insert_b('glfb_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               INITIALIZE g_glfb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "glfb_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL agli075_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               END IF
            ELSE
               LET l_success = TRUE
               CALL agli075_ins_or_upd(g_glfb_d[l_ac].glfbseq) RETURNING l_success
               IF l_success = FALSE THEN
                  CALL s_transaction_end('N','0')                    
                  CANCEL INSERT
               END IF
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_glfa_m.glfa001
 
               LET gs_keys[gs_keys.getLength()+1] = g_glfb_d_t.glfbseq
               LET gs_keys[gs_keys.getLength()+1] = g_glfb_d_t.glfbseq1
 
            
               #刪除同層單身
               IF NOT agli075_delete_b('glfb_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE agli075_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT agli075_key_delete_b(gs_keys,'glfb_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE agli075_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
 
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE agli075_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               
               #end add-point
               LET l_count = g_glfb_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_glfb_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glfbseq
            #add-point:BEFORE FIELD glfbseq name="input.b.page1.glfbseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glfbseq
            
            #add-point:AFTER FIELD glfbseq name="input.a.page1.glfbseq"
            #應用 a05 樣板自動產生(Version:3)
            #確認資料無重複
            IF  g_glfa_m.glfa001 IS NOT NULL AND g_glfb_d[g_detail_idx].glfbseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfa_m.glfa001 != g_glfa001_t OR g_glfb_d[g_detail_idx].glfbseq != g_glfb_d_t.glfbseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM glfb_t WHERE "||"glfbent = '" ||g_enterprise|| "' AND "||"glfb001 = '"||g_glfa_m.glfa001 ||"' AND "|| "glfbseq = '"||g_glfb_d[g_detail_idx].glfbseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glfbseq
            #add-point:ON CHANGE glfbseq name="input.g.page1.glfbseq"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glfbseq1
            #add-point:BEFORE FIELD glfbseq1 name="input.b.page1.glfbseq1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glfbseq1
            
            #add-point:AFTER FIELD glfbseq1 name="input.a.page1.glfbseq1"
            #應用 a05 樣板自動產生(Version:3)
            #確認資料無重複
            IF  g_glfa_m.glfa001 IS NOT NULL AND g_glfb_d[g_detail_idx].glfbseq IS NOT NULL AND g_glfb_d[g_detail_idx].glfbseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfa_m.glfa001 != g_glfa001_t OR g_glfb_d[g_detail_idx].glfbseq != g_glfb_d_t.glfbseq OR g_glfb_d[g_detail_idx].glfbseq1 != g_glfb_d_t.glfbseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM glfb_t WHERE "||"glfbent = '" ||g_enterprise|| "' AND "||"glfb001 = '"||g_glfa_m.glfa001 ||"' AND "|| "glfbseq = '"||g_glfb_d[g_detail_idx].glfbseq ||"' AND "|| "glfbseq1 = '"||g_glfb_d[g_detail_idx].glfbseq1 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glfbseq1
            #add-point:ON CHANGE glfbseq1 name="input.g.page1.glfbseq1"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt1
            #add-point:BEFORE FIELD amt1 name="input.b.page1.amt1"
            LET g_glfb_row[1].glfbseq1='A'
            IF cl_null(g_glfb_d[l_ac].amt1) THEN
               IF cl_null(g_glfb_row[1].glfb011) THEN
                  LET g_glfb_row[1].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt1
            
            #add-point:AFTER FIELD amt1 name="input.a.page1.amt1"
            IF NOT cl_null(g_glfb_d[l_ac].amt1) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt1 != g_glfb_d_t.amt1 OR g_glfb_d_t.amt1 IS NULL)) THEN 
                  LET g_glfb_row[1].glfb005 = g_glfb_d[l_ac].amt1
               END IF
            ELSE
               LET g_glfb_row[1].glfb004=''
               LET g_glfb_row[1].glfb005=''
               LET g_glfb_row[1].glfb011=''
               LET g_glfb_row[1].glfb012=''
            END IF
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt1
            #add-point:ON CHANGE amt1 name="input.g.page1.amt1"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt2
            #add-point:BEFORE FIELD amt2 name="input.b.page1.amt2"
            LET g_glfb_row[2].glfbseq1='B'
            IF cl_null(g_glfb_d[l_ac].amt2) THEN
               IF cl_null(g_glfb_row[2].glfb011) THEN
                  LET g_glfb_row[2].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt2
            
            #add-point:AFTER FIELD amt2 name="input.a.page1.amt2"
            IF NOT cl_null(g_glfb_d[l_ac].amt2) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt2 != g_glfb_d_t.amt2 OR g_glfb_d_t.amt2 IS NULL)) THEN 
                  LET g_glfb_row[2].glfb005 = g_glfb_d[l_ac].amt2
               END IF
            ELSE
               LET g_glfb_row[2].glfb004=''
               LET g_glfb_row[2].glfb005=''
               LET g_glfb_row[2].glfb011=''
               LET g_glfb_row[2].glfb012=''
            END IF
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt2
            #add-point:ON CHANGE amt2 name="input.g.page1.amt2"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt3
            #add-point:BEFORE FIELD amt3 name="input.b.page1.amt3"
            LET g_glfb_row[3].glfbseq1='C'
            IF cl_null(g_glfb_d[l_ac].amt3) THEN
               IF cl_null(g_glfb_row[3].glfb011) THEN
                  LET g_glfb_row[3].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt3
            
            #add-point:AFTER FIELD amt3 name="input.a.page1.amt3"
            IF NOT cl_null(g_glfb_d[l_ac].amt3) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt3 != g_glfb_d_t.amt3 OR g_glfb_d_t.amt3 IS NULL)) THEN 
                  LET g_glfb_row[3].glfb005 = g_glfb_d[l_ac].amt3
               END IF
            ELSE
               LET g_glfb_row[3].glfb004=''
               LET g_glfb_row[3].glfb005=''
               LET g_glfb_row[3].glfb011=''
               LET g_glfb_row[3].glfb012=''
            END IF
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt3
            #add-point:ON CHANGE amt3 name="input.g.page1.amt3"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt4
            #add-point:BEFORE FIELD amt4 name="input.b.page1.amt4"
            LET g_glfb_row[4].glfbseq1='D'
            IF cl_null(g_glfb_d[l_ac].amt4) THEN
               IF cl_null(g_glfb_row[4].glfb011) THEN
                  LET g_glfb_row[4].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt4
            
            #add-point:AFTER FIELD amt4 name="input.a.page1.amt4"
            IF NOT cl_null(g_glfb_d[l_ac].amt4) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt4 != g_glfb_d_t.amt4 OR g_glfb_d_t.amt4 IS NULL)) THEN 
                  LET g_glfb_row[4].glfb005 = g_glfb_d[l_ac].amt4
               END IF
            ELSE
               LET g_glfb_row[4].glfb004=''
               LET g_glfb_row[4].glfb005=''
               LET g_glfb_row[4].glfb011=''
               LET g_glfb_row[4].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt4
            #add-point:ON CHANGE amt4 name="input.g.page1.amt4"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt5
            #add-point:BEFORE FIELD amt5 name="input.b.page1.amt5"
            LET g_glfb_row[5].glfbseq1='E'
            IF cl_null(g_glfb_d[l_ac].amt5) THEN
               IF cl_null(g_glfb_row[5].glfb011) THEN
                  LET g_glfb_row[5].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt5
            
            #add-point:AFTER FIELD amt5 name="input.a.page1.amt5"
            IF NOT cl_null(g_glfb_d[l_ac].amt5) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt5 != g_glfb_d_t.amt5 OR g_glfb_d_t.amt5 IS NULL)) THEN 
                  LET g_glfb_row[5].glfb005 = g_glfb_d[l_ac].amt5
               END IF
            ELSE
               LET g_glfb_row[5].glfb004=''
               LET g_glfb_row[5].glfb005=''
               LET g_glfb_row[5].glfb011=''
               LET g_glfb_row[5].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt5
            #add-point:ON CHANGE amt5 name="input.g.page1.amt5"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt6
            #add-point:BEFORE FIELD amt6 name="input.b.page1.amt6"
            LET g_glfb_row[6].glfbseq1='F'
            IF cl_null(g_glfb_d[l_ac].amt6) THEN
               IF cl_null(g_glfb_row[6].glfb011) THEN
                  LET g_glfb_row[6].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt6
            
            #add-point:AFTER FIELD amt6 name="input.a.page1.amt6"
            IF NOT cl_null(g_glfb_d[l_ac].amt6) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt6 != g_glfb_d_t.amt6 OR g_glfb_d_t.amt6 IS NULL)) THEN 
                  LET g_glfb_row[6].glfb005 = g_glfb_d[l_ac].amt6
               END IF
            ELSE
               LET g_glfb_row[6].glfb004=''
               LET g_glfb_row[6].glfb005=''
               LET g_glfb_row[6].glfb011=''
               LET g_glfb_row[6].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt6
            #add-point:ON CHANGE amt6 name="input.g.page1.amt6"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt7
            #add-point:BEFORE FIELD amt7 name="input.b.page1.amt7"
            LET g_glfb_row[7].glfbseq1='G'
            IF cl_null(g_glfb_d[l_ac].amt7) THEN
               IF cl_null(g_glfb_row[7].glfb011) THEN
                  LET g_glfb_row[7].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt7
            
            #add-point:AFTER FIELD amt7 name="input.a.page1.amt7"
            IF NOT cl_null(g_glfb_d[l_ac].amt7) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt7 != g_glfb_d_t.amt7 OR g_glfb_d_t.amt7 IS NULL)) THEN 
                  LET g_glfb_row[7].glfb005 = g_glfb_d[l_ac].amt7
               END IF
            ELSE
               LET g_glfb_row[7].glfb004=''
               LET g_glfb_row[7].glfb005=''
               LET g_glfb_row[7].glfb011=''
               LET g_glfb_row[7].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt7
            #add-point:ON CHANGE amt7 name="input.g.page1.amt7"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt8
            #add-point:BEFORE FIELD amt8 name="input.b.page1.amt8"
            LET g_glfb_row[8].glfbseq1='H'
            IF cl_null(g_glfb_d[l_ac].amt8) THEN
               IF cl_null(g_glfb_row[8].glfb011) THEN
                  LET g_glfb_row[8].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt8
            
            #add-point:AFTER FIELD amt8 name="input.a.page1.amt8"
            IF NOT cl_null(g_glfb_d[l_ac].amt8) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt8 != g_glfb_d_t.amt8 OR g_glfb_d_t.amt8 IS NULL)) THEN 
                  LET g_glfb_row[8].glfb005 = g_glfb_d[l_ac].amt8
               END IF
            ELSE
               LET g_glfb_row[8].glfb004=''
               LET g_glfb_row[8].glfb005=''
               LET g_glfb_row[8].glfb011=''
               LET g_glfb_row[8].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt8
            #add-point:ON CHANGE amt8 name="input.g.page1.amt8"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt9
            #add-point:BEFORE FIELD amt9 name="input.b.page1.amt9"
            LET g_glfb_row[9].glfbseq1='I'
            IF cl_null(g_glfb_d[l_ac].amt9) THEN
               IF cl_null(g_glfb_row[9].glfb011) THEN
                  LET g_glfb_row[9].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt9
            
            #add-point:AFTER FIELD amt9 name="input.a.page1.amt9"
            IF NOT cl_null(g_glfb_d[l_ac].amt9) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt9 != g_glfb_d_t.amt9 OR g_glfb_d_t.amt9 IS NULL)) THEN 
                  LET g_glfb_row[9].glfb005 = g_glfb_d[l_ac].amt9
               END IF
            ELSE
               LET g_glfb_row[9].glfb004=''
               LET g_glfb_row[9].glfb005=''
               LET g_glfb_row[9].glfb011=''
               LET g_glfb_row[9].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt9
            #add-point:ON CHANGE amt9 name="input.g.page1.amt9"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt10
            #add-point:BEFORE FIELD amt10 name="input.b.page1.amt10"
            LET g_glfb_row[10].glfbseq1='J'
            IF cl_null(g_glfb_d[l_ac].amt10) THEN
               IF cl_null(g_glfb_row[10].glfb011) THEN
                  LET g_glfb_row[10].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt10
            
            #add-point:AFTER FIELD amt10 name="input.a.page1.amt10"
            IF NOT cl_null(g_glfb_d[l_ac].amt10) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt10 != g_glfb_d_t.amt10 OR g_glfb_d_t.amt10 IS NULL)) THEN 
                  LET g_glfb_row[10].glfb005 = g_glfb_d[l_ac].amt10
               END IF
            ELSE
               LET g_glfb_row[10].glfb004=''
               LET g_glfb_row[10].glfb005=''
               LET g_glfb_row[10].glfb011=''
               LET g_glfb_row[10].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt10
            #add-point:ON CHANGE amt10 name="input.g.page1.amt10"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt11
            #add-point:BEFORE FIELD amt11 name="input.b.page1.amt11"
            LET g_glfb_row[11].glfbseq1='K'
            IF cl_null(g_glfb_d[l_ac].amt11) THEN
               IF cl_null(g_glfb_row[11].glfb011) THEN
                  LET g_glfb_row[11].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt11
            
            #add-point:AFTER FIELD amt11 name="input.a.page1.amt11"
            IF NOT cl_null(g_glfb_d[l_ac].amt11) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt11 != g_glfb_d_t.amt11 OR g_glfb_d_t.amt11 IS NULL)) THEN 
                  LET g_glfb_row[11].glfb005 = g_glfb_d[l_ac].amt11
               END IF
            ELSE
               LET g_glfb_row[11].glfb004=''
               LET g_glfb_row[11].glfb005=''
               LET g_glfb_row[11].glfb011=''
               LET g_glfb_row[11].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt11
            #add-point:ON CHANGE amt11 name="input.g.page1.amt11"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt12
            #add-point:BEFORE FIELD amt12 name="input.b.page1.amt12"
            LET g_glfb_row[12].glfbseq1='L'
            IF cl_null(g_glfb_d[l_ac].amt12) THEN
               IF cl_null(g_glfb_row[12].glfb011) THEN
                  LET g_glfb_row[12].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt12
            
            #add-point:AFTER FIELD amt12 name="input.a.page1.amt12"
            IF NOT cl_null(g_glfb_d[l_ac].amt12) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt12 != g_glfb_d_t.amt12 OR g_glfb_d_t.amt12 IS NULL)) THEN 
                  LET g_glfb_row[12].glfb005 = g_glfb_d[l_ac].amt12
               END IF
            ELSE
               LET g_glfb_row[12].glfb004=''
               LET g_glfb_row[12].glfb005=''
               LET g_glfb_row[12].glfb011=''
               LET g_glfb_row[12].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt12
            #add-point:ON CHANGE amt12 name="input.g.page1.amt12"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt13
            #add-point:BEFORE FIELD amt13 name="input.b.page1.amt13"
            LET g_glfb_row[13].glfbseq1='M'
            IF cl_null(g_glfb_d[l_ac].amt13) THEN
               IF cl_null(g_glfb_row[13].glfb011) THEN
                  LET g_glfb_row[13].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt13
            
            #add-point:AFTER FIELD amt13 name="input.a.page1.amt13"
            IF NOT cl_null(g_glfb_d[l_ac].amt13) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt13 != g_glfb_d_t.amt13 OR g_glfb_d_t.amt13 IS NULL)) THEN 
                  LET g_glfb_row[13].glfb005 = g_glfb_d[l_ac].amt13
               END IF
            ELSE
               LET g_glfb_row[13].glfb004=''
               LET g_glfb_row[13].glfb005=''
               LET g_glfb_row[13].glfb011=''
               LET g_glfb_row[13].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt13
            #add-point:ON CHANGE amt13 name="input.g.page1.amt13"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt14
            #add-point:BEFORE FIELD amt14 name="input.b.page1.amt14"
            LET g_glfb_row[14].glfbseq1='N'
            IF cl_null(g_glfb_d[l_ac].amt14) THEN
               IF cl_null(g_glfb_row[14].glfb011) THEN
                  LET g_glfb_row[14].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt14
            
            #add-point:AFTER FIELD amt14 name="input.a.page1.amt14"
            IF NOT cl_null(g_glfb_d[l_ac].amt14) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt14 != g_glfb_d_t.amt14 OR g_glfb_d_t.amt14 IS NULL)) THEN 
                  LET g_glfb_row[14].glfb005 = g_glfb_d[l_ac].amt14
               END IF
            ELSE
               LET g_glfb_row[14].glfb004=''
               LET g_glfb_row[14].glfb005=''
               LET g_glfb_row[14].glfb011=''
               LET g_glfb_row[14].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt14
            #add-point:ON CHANGE amt14 name="input.g.page1.amt14"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt15
            #add-point:BEFORE FIELD amt15 name="input.b.page1.amt15"
            LET g_glfb_row[15].glfbseq1='O'
            IF cl_null(g_glfb_d[l_ac].amt15) THEN
               IF cl_null(g_glfb_row[15].glfb011) THEN
                  LET g_glfb_row[15].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt15
            
            #add-point:AFTER FIELD amt15 name="input.a.page1.amt15"
            IF NOT cl_null(g_glfb_d[l_ac].amt15) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt15 != g_glfb_d_t.amt15 OR g_glfb_d_t.amt15 IS NULL)) THEN 
                  LET g_glfb_row[15].glfb005 = g_glfb_d[l_ac].amt15
               END IF
            ELSE
               LET g_glfb_row[15].glfb004=''
               LET g_glfb_row[15].glfb005=''
               LET g_glfb_row[15].glfb011=''
               LET g_glfb_row[15].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt15
            #add-point:ON CHANGE amt15 name="input.g.page1.amt15"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt16
            #add-point:BEFORE FIELD amt16 name="input.b.page1.amt16"
            LET g_glfb_row[16].glfbseq1='P'
            IF cl_null(g_glfb_d[l_ac].amt16) THEN
               IF cl_null(g_glfb_row[16].glfb011) THEN
                  LET g_glfb_row[16].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt16
            
            #add-point:AFTER FIELD amt16 name="input.a.page1.amt16"
            IF NOT cl_null(g_glfb_d[l_ac].amt16) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt16 != g_glfb_d_t.amt16 OR g_glfb_d_t.amt16 IS NULL)) THEN 
                  LET g_glfb_row[16].glfb005 = g_glfb_d[l_ac].amt16
               END IF
            ELSE
               LET g_glfb_row[16].glfb004=''
               LET g_glfb_row[16].glfb005=''
               LET g_glfb_row[16].glfb011=''
               LET g_glfb_row[16].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt16
            #add-point:ON CHANGE amt16 name="input.g.page1.amt16"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt17
            #add-point:BEFORE FIELD amt17 name="input.b.page1.amt17"
            LET g_glfb_row[17].glfbseq1='Q'
            IF cl_null(g_glfb_d[l_ac].amt17) THEN
               IF cl_null(g_glfb_row[17].glfb011) THEN
                  LET g_glfb_row[17].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt17
            
            #add-point:AFTER FIELD amt17 name="input.a.page1.amt17"
            IF NOT cl_null(g_glfb_d[l_ac].amt17) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt17 != g_glfb_d_t.amt17 OR g_glfb_d_t.amt17 IS NULL)) THEN 
                  LET g_glfb_row[17].glfb005 = g_glfb_d[l_ac].amt17
               END IF
            ELSE
               LET g_glfb_row[17].glfb004=''
               LET g_glfb_row[17].glfb005=''
               LET g_glfb_row[17].glfb011=''
               LET g_glfb_row[17].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt17
            #add-point:ON CHANGE amt17 name="input.g.page1.amt17"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt18
            #add-point:BEFORE FIELD amt18 name="input.b.page1.amt18"
            LET g_glfb_row[18].glfbseq1='R'
            IF cl_null(g_glfb_d[l_ac].amt18) THEN
               IF cl_null(g_glfb_row[18].glfb011) THEN
                  LET g_glfb_row[18].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt18
            
            #add-point:AFTER FIELD amt18 name="input.a.page1.amt18"
            IF NOT cl_null(g_glfb_d[l_ac].amt18) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt18 != g_glfb_d_t.amt18 OR g_glfb_d_t.amt18 IS NULL)) THEN 
                  LET g_glfb_row[18].glfb005 = g_glfb_d[l_ac].amt18
               END IF
            ELSE
               LET g_glfb_row[18].glfb004=''
               LET g_glfb_row[18].glfb005=''
               LET g_glfb_row[18].glfb011=''
               LET g_glfb_row[18].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt18
            #add-point:ON CHANGE amt18 name="input.g.page1.amt18"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt19
            #add-point:BEFORE FIELD amt19 name="input.b.page1.amt19"
            LET g_glfb_row[19].glfbseq1='S'
            IF cl_null(g_glfb_d[l_ac].amt19) THEN
               IF cl_null(g_glfb_row[19].glfb011) THEN
                  LET g_glfb_row[19].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt19
            
            #add-point:AFTER FIELD amt19 name="input.a.page1.amt19"
            IF NOT cl_null(g_glfb_d[l_ac].amt19) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt19 != g_glfb_d_t.amt19 OR g_glfb_d_t.amt19 IS NULL)) THEN 
                  LET g_glfb_row[19].glfb005 = g_glfb_d[l_ac].amt19
               END IF
            ELSE
               LET g_glfb_row[19].glfb004=''
               LET g_glfb_row[19].glfb005=''
               LET g_glfb_row[19].glfb011=''
               LET g_glfb_row[19].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt19
            #add-point:ON CHANGE amt19 name="input.g.page1.amt19"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt20
            #add-point:BEFORE FIELD amt20 name="input.b.page1.amt20"
            LET g_glfb_row[20].glfbseq1='T'
            IF cl_null(g_glfb_d[l_ac].amt20) THEN
               IF cl_null(g_glfb_row[20].glfb011) THEN
                  LET g_glfb_row[20].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt20
            
            #add-point:AFTER FIELD amt20 name="input.a.page1.amt20"
            IF NOT cl_null(g_glfb_d[l_ac].amt20) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt20 != g_glfb_d_t.amt20 OR g_glfb_d_t.amt20 IS NULL)) THEN 
                  LET g_glfb_row[20].glfb005 = g_glfb_d[l_ac].amt20
               END IF
            ELSE
               LET g_glfb_row[20].glfb004=''
               LET g_glfb_row[20].glfb005=''
               LET g_glfb_row[20].glfb011=''
               LET g_glfb_row[20].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt20
            #add-point:ON CHANGE amt20 name="input.g.page1.amt20"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt21
            #add-point:BEFORE FIELD amt21 name="input.b.page1.amt21"
            LET g_glfb_row[21].glfbseq1='U'
            IF cl_null(g_glfb_d[l_ac].amt21) THEN
               IF cl_null(g_glfb_row[21].glfb011) THEN
                  LET g_glfb_row[21].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt21
            
            #add-point:AFTER FIELD amt21 name="input.a.page1.amt21"
            IF NOT cl_null(g_glfb_d[l_ac].amt21) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt21 != g_glfb_d_t.amt21 OR g_glfb_d_t.amt21 IS NULL)) THEN 
                  LET g_glfb_row[21].glfb005 = g_glfb_d[l_ac].amt21
               END IF
            ELSE
               LET g_glfb_row[21].glfb004=''
               LET g_glfb_row[21].glfb005=''
               LET g_glfb_row[21].glfb011=''
               LET g_glfb_row[21].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt21
            #add-point:ON CHANGE amt21 name="input.g.page1.amt21"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt22
            #add-point:BEFORE FIELD amt22 name="input.b.page1.amt22"
            LET g_glfb_row[22].glfbseq1='V'
            IF cl_null(g_glfb_d[l_ac].amt22) THEN
               IF cl_null(g_glfb_row[22].glfb011) THEN
                  LET g_glfb_row[22].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt22
            
            #add-point:AFTER FIELD amt22 name="input.a.page1.amt22"
            IF NOT cl_null(g_glfb_d[l_ac].amt22) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt22 != g_glfb_d_t.amt22 OR g_glfb_d_t.amt22 IS NULL)) THEN 
                  LET g_glfb_row[22].glfb005 = g_glfb_d[l_ac].amt22
               END IF
            ELSE
               LET g_glfb_row[22].glfb004=''
               LET g_glfb_row[22].glfb005=''
               LET g_glfb_row[22].glfb011=''
               LET g_glfb_row[22].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt22
            #add-point:ON CHANGE amt22 name="input.g.page1.amt22"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt23
            #add-point:BEFORE FIELD amt23 name="input.b.page1.amt23"
            LET g_glfb_row[23].glfbseq1='W'
            IF cl_null(g_glfb_d[l_ac].amt23) THEN
               IF cl_null(g_glfb_row[23].glfb011) THEN
                  LET g_glfb_row[23].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt23
            
            #add-point:AFTER FIELD amt23 name="input.a.page1.amt23"
            IF NOT cl_null(g_glfb_d[l_ac].amt23) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt23 != g_glfb_d_t.amt23 OR g_glfb_d_t.amt23 IS NULL)) THEN 
                  LET g_glfb_row[23].glfb005 = g_glfb_d[l_ac].amt23
               END IF
            ELSE
               LET g_glfb_row[23].glfb004=''
               LET g_glfb_row[23].glfb005=''
               LET g_glfb_row[23].glfb011=''
               LET g_glfb_row[23].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt23
            #add-point:ON CHANGE amt23 name="input.g.page1.amt23"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt24
            #add-point:BEFORE FIELD amt24 name="input.b.page1.amt24"
            LET g_glfb_row[24].glfbseq1='X'
            IF cl_null(g_glfb_d[l_ac].amt24) THEN
               IF cl_null(g_glfb_row[24].glfb011) THEN
                  LET g_glfb_row[24].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt24
            
            #add-point:AFTER FIELD amt24 name="input.a.page1.amt24"
            IF NOT cl_null(g_glfb_d[l_ac].amt24) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt24 != g_glfb_d_t.amt24 OR g_glfb_d_t.amt24 IS NULL)) THEN 
                  LET g_glfb_row[24].glfb005 = g_glfb_d[l_ac].amt24
               END IF
            ELSE
               LET g_glfb_row[24].glfb004=''
               LET g_glfb_row[24].glfb005=''
               LET g_glfb_row[24].glfb011=''
               LET g_glfb_row[24].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt24
            #add-point:ON CHANGE amt24 name="input.g.page1.amt24"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt25
            #add-point:BEFORE FIELD amt25 name="input.b.page1.amt25"
            LET g_glfb_row[25].glfbseq1='Y'
            IF cl_null(g_glfb_d[l_ac].amt25) THEN
               IF cl_null(g_glfb_row[25].glfb011) THEN
                  LET g_glfb_row[25].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt25
            
            #add-point:AFTER FIELD amt25 name="input.a.page1.amt25"
            IF NOT cl_null(g_glfb_d[l_ac].amt25) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt25 != g_glfb_d_t.amt25 OR g_glfb_d_t.amt25 IS NULL)) THEN 
                  LET g_glfb_row[25].glfb005 = g_glfb_d[l_ac].amt25
               END IF
            ELSE
               LET g_glfb_row[25].glfb004=''
               LET g_glfb_row[25].glfb005=''
               LET g_glfb_row[25].glfb011=''
               LET g_glfb_row[25].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt25
            #add-point:ON CHANGE amt25 name="input.g.page1.amt25"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt26
            #add-point:BEFORE FIELD amt26 name="input.b.page1.amt26"
            LET g_glfb_row[26].glfbseq1='Z'
            IF cl_null(g_glfb_d[l_ac].amt26) THEN
               IF cl_null(g_glfb_row[26].glfb011) THEN
                  LET g_glfb_row[26].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt26
            
            #add-point:AFTER FIELD amt26 name="input.a.page1.amt26"
            IF NOT cl_null(g_glfb_d[l_ac].amt26) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt26 != g_glfb_d_t.amt26 OR g_glfb_d_t.amt26 IS NULL)) THEN 
                  LET g_glfb_row[26].glfb005 = g_glfb_d[l_ac].amt26
               END IF
            ELSE
               LET g_glfb_row[26].glfb004=''
               LET g_glfb_row[26].glfb005=''
               LET g_glfb_row[26].glfb011=''
               LET g_glfb_row[26].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt26
            #add-point:ON CHANGE amt26 name="input.g.page1.amt26"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt27
            #add-point:BEFORE FIELD amt27 name="input.b.page1.amt27"
            LET g_glfb_row[27].glfbseq1='AA'
            IF cl_null(g_glfb_d[l_ac].amt27) THEN
               IF cl_null(g_glfb_row[27].glfb011) THEN
                  LET g_glfb_row[27].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt27
            
            #add-point:AFTER FIELD amt27 name="input.a.page1.amt27"
            IF NOT cl_null(g_glfb_d[l_ac].amt27) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt27 != g_glfb_d_t.amt27 OR g_glfb_d_t.amt27 IS NULL)) THEN 
                  LET g_glfb_row[27].glfb005 = g_glfb_d[l_ac].amt27
               END IF
            ELSE
               LET g_glfb_row[27].glfb004=''
               LET g_glfb_row[27].glfb005=''
               LET g_glfb_row[27].glfb011=''
               LET g_glfb_row[27].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt27
            #add-point:ON CHANGE amt27 name="input.g.page1.amt27"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt28
            #add-point:BEFORE FIELD amt28 name="input.b.page1.amt28"
            LET g_glfb_row[28].glfbseq1='AB'
            IF cl_null(g_glfb_d[l_ac].amt28) THEN
               IF cl_null(g_glfb_row[28].glfb011) THEN
                  LET g_glfb_row[28].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt28
            
            #add-point:AFTER FIELD amt28 name="input.a.page1.amt28"
            IF NOT cl_null(g_glfb_d[l_ac].amt28) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt28 != g_glfb_d_t.amt28 OR g_glfb_d_t.amt28 IS NULL)) THEN 
                  LET g_glfb_row[28].glfb005 = g_glfb_d[l_ac].amt28
               END IF
            ELSE
               LET g_glfb_row[28].glfb004=''
               LET g_glfb_row[28].glfb005=''
               LET g_glfb_row[28].glfb011=''
               LET g_glfb_row[28].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt28
            #add-point:ON CHANGE amt28 name="input.g.page1.amt28"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt29
            #add-point:BEFORE FIELD amt29 name="input.b.page1.amt29"
            LET g_glfb_row[29].glfbseq1='AC'
            IF cl_null(g_glfb_d[l_ac].amt29) THEN
               IF cl_null(g_glfb_row[29].glfb011) THEN
                  LET g_glfb_row[29].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt29
            
            #add-point:AFTER FIELD amt29 name="input.a.page1.amt29"
            IF NOT cl_null(g_glfb_d[l_ac].amt29) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt29 != g_glfb_d_t.amt29 OR g_glfb_d_t.amt29 IS NULL)) THEN 
                  LET g_glfb_row[29].glfb005 = g_glfb_d[l_ac].amt29
               END IF
            ELSE
               LET g_glfb_row[29].glfb004=''
               LET g_glfb_row[29].glfb005=''
               LET g_glfb_row[29].glfb011=''
               LET g_glfb_row[29].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt29
            #add-point:ON CHANGE amt29 name="input.g.page1.amt29"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt30
            #add-point:BEFORE FIELD amt30 name="input.b.page1.amt30"
            LET g_glfb_row[30].glfbseq1='AD'
            IF cl_null(g_glfb_d[l_ac].amt30) THEN
               IF cl_null(g_glfb_row[30].glfb011) THEN
                  LET g_glfb_row[30].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt30
            
            #add-point:AFTER FIELD amt30 name="input.a.page1.amt30"
            IF NOT cl_null(g_glfb_d[l_ac].amt30) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt30 != g_glfb_d_t.amt30 OR g_glfb_d_t.amt30 IS NULL)) THEN 
                  LET g_glfb_row[30].glfb005 = g_glfb_d[l_ac].amt30
               END IF
            ELSE
               LET g_glfb_row[30].glfb004=''
               LET g_glfb_row[30].glfb005=''
               LET g_glfb_row[30].glfb011=''
               LET g_glfb_row[30].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt30
            #add-point:ON CHANGE amt30 name="input.g.page1.amt30"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt31
            #add-point:BEFORE FIELD amt31 name="input.b.page1.amt31"
            LET g_glfb_row[31].glfbseq1='AE'
            IF cl_null(g_glfb_d[l_ac].amt31) THEN
               IF cl_null(g_glfb_row[31].glfb011) THEN
                  LET g_glfb_row[31].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt31
            
            #add-point:AFTER FIELD amt31 name="input.a.page1.amt31"
            IF NOT cl_null(g_glfb_d[l_ac].amt31) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt31 != g_glfb_d_t.amt31 OR g_glfb_d_t.amt31 IS NULL)) THEN 
                  LET g_glfb_row[31].glfb005 = g_glfb_d[l_ac].amt31
               END IF
            ELSE
               LET g_glfb_row[31].glfb004=''
               LET g_glfb_row[31].glfb005=''
               LET g_glfb_row[31].glfb011=''
               LET g_glfb_row[31].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt31
            #add-point:ON CHANGE amt31 name="input.g.page1.amt31"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt32
            #add-point:BEFORE FIELD amt32 name="input.b.page1.amt32"
            LET g_glfb_row[32].glfbseq1='AF'
            IF cl_null(g_glfb_d[l_ac].amt32) THEN
               IF cl_null(g_glfb_row[32].glfb011) THEN
                  LET g_glfb_row[32].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt32
            
            #add-point:AFTER FIELD amt32 name="input.a.page1.amt32"
            IF NOT cl_null(g_glfb_d[l_ac].amt32) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt32 != g_glfb_d_t.amt32 OR g_glfb_d_t.amt32 IS NULL)) THEN 
                  LET g_glfb_row[32].glfb005 = g_glfb_d[l_ac].amt32
               END IF
            ELSE
               LET g_glfb_row[32].glfb004=''
               LET g_glfb_row[32].glfb005=''
               LET g_glfb_row[32].glfb011=''
               LET g_glfb_row[32].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt32
            #add-point:ON CHANGE amt32 name="input.g.page1.amt32"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt33
            #add-point:BEFORE FIELD amt33 name="input.b.page1.amt33"
            LET g_glfb_row[33].glfbseq1='AG'
            IF cl_null(g_glfb_d[l_ac].amt33) THEN
               IF cl_null(g_glfb_row[33].glfb011) THEN
                  LET g_glfb_row[33].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt33
            
            #add-point:AFTER FIELD amt33 name="input.a.page1.amt33"
            IF NOT cl_null(g_glfb_d[l_ac].amt33) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt33 != g_glfb_d_t.amt33 OR g_glfb_d_t.amt33 IS NULL)) THEN 
                  LET g_glfb_row[33].glfb005 = g_glfb_d[l_ac].amt33
               END IF
            ELSE
               LET g_glfb_row[33].glfb004=''
               LET g_glfb_row[33].glfb005=''
               LET g_glfb_row[33].glfb011=''
               LET g_glfb_row[33].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt33
            #add-point:ON CHANGE amt33 name="input.g.page1.amt33"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt34
            #add-point:BEFORE FIELD amt34 name="input.b.page1.amt34"
            LET g_glfb_row[34].glfbseq1='AH'
            IF cl_null(g_glfb_d[l_ac].amt34) THEN
               IF cl_null(g_glfb_row[34].glfb011) THEN
                  LET g_glfb_row[34].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt34
            
            #add-point:AFTER FIELD amt34 name="input.a.page1.amt34"
            IF NOT cl_null(g_glfb_d[l_ac].amt34) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt34 != g_glfb_d_t.amt34 OR g_glfb_d_t.amt34 IS NULL)) THEN 
                  LET g_glfb_row[34].glfb005 = g_glfb_d[l_ac].amt34
               END IF
            ELSE
               LET g_glfb_row[34].glfb004=''
               LET g_glfb_row[34].glfb005=''
               LET g_glfb_row[34].glfb011=''
               LET g_glfb_row[34].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt34
            #add-point:ON CHANGE amt34 name="input.g.page1.amt34"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt35
            #add-point:BEFORE FIELD amt35 name="input.b.page1.amt35"
            LET g_glfb_row[35].glfbseq1='AI'
            IF cl_null(g_glfb_d[l_ac].amt35) THEN
               IF cl_null(g_glfb_row[35].glfb011) THEN
                  LET g_glfb_row[35].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt35
            
            #add-point:AFTER FIELD amt35 name="input.a.page1.amt35"
            IF NOT cl_null(g_glfb_d[l_ac].amt35) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt35 != g_glfb_d_t.amt35 OR g_glfb_d_t.amt35 IS NULL)) THEN 
                  LET g_glfb_row[35].glfb005 = g_glfb_d[l_ac].amt35
               END IF
            ELSE
               LET g_glfb_row[35].glfb004=''
               LET g_glfb_row[35].glfb005=''
               LET g_glfb_row[35].glfb011=''
               LET g_glfb_row[35].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt35
            #add-point:ON CHANGE amt35 name="input.g.page1.amt35"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt36
            #add-point:BEFORE FIELD amt36 name="input.b.page1.amt36"
            LET g_glfb_row[36].glfbseq1='AJ'
            IF cl_null(g_glfb_d[l_ac].amt36) THEN
               IF cl_null(g_glfb_row[36].glfb011) THEN
                  LET g_glfb_row[36].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt36
            
            #add-point:AFTER FIELD amt36 name="input.a.page1.amt36"
            IF NOT cl_null(g_glfb_d[l_ac].amt36) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt36 != g_glfb_d_t.amt36 OR g_glfb_d_t.amt36 IS NULL)) THEN 
                  LET g_glfb_row[36].glfb005 = g_glfb_d[l_ac].amt36
               END IF
            ELSE
               LET g_glfb_row[36].glfb004=''
               LET g_glfb_row[36].glfb005=''
               LET g_glfb_row[36].glfb011=''
               LET g_glfb_row[36].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt36
            #add-point:ON CHANGE amt36 name="input.g.page1.amt36"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt37
            #add-point:BEFORE FIELD amt37 name="input.b.page1.amt37"
            LET g_glfb_row[37].glfbseq1='AK'
            IF cl_null(g_glfb_d[l_ac].amt37) THEN
               IF cl_null(g_glfb_row[37].glfb011) THEN
                  LET g_glfb_row[37].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt37
            
            #add-point:AFTER FIELD amt37 name="input.a.page1.amt37"
            IF NOT cl_null(g_glfb_d[l_ac].amt37) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt37 != g_glfb_d_t.amt37 OR g_glfb_d_t.amt37 IS NULL)) THEN 
                  LET g_glfb_row[37].glfb005 = g_glfb_d[l_ac].amt37
               END IF
            ELSE
               LET g_glfb_row[37].glfb004=''
               LET g_glfb_row[37].glfb005=''
               LET g_glfb_row[37].glfb011=''
               LET g_glfb_row[37].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt37
            #add-point:ON CHANGE amt37 name="input.g.page1.amt37"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt38
            #add-point:BEFORE FIELD amt38 name="input.b.page1.amt38"
            LET g_glfb_row[38].glfbseq1='AL'
            IF cl_null(g_glfb_d[l_ac].amt38) THEN
               IF cl_null(g_glfb_row[38].glfb011) THEN
                  LET g_glfb_row[38].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt38
            
            #add-point:AFTER FIELD amt38 name="input.a.page1.amt38"
            IF NOT cl_null(g_glfb_d[l_ac].amt38) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt38 != g_glfb_d_t.amt38 OR g_glfb_d_t.amt38 IS NULL)) THEN 
                  LET g_glfb_row[38].glfb005 = g_glfb_d[l_ac].amt38
               END IF
            ELSE
               LET g_glfb_row[38].glfb004=''
               LET g_glfb_row[38].glfb005=''
               LET g_glfb_row[38].glfb011=''
               LET g_glfb_row[38].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt38
            #add-point:ON CHANGE amt38 name="input.g.page1.amt38"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt39
            #add-point:BEFORE FIELD amt39 name="input.b.page1.amt39"
            LET g_glfb_row[39].glfbseq1='AM'
            IF cl_null(g_glfb_d[l_ac].amt39) THEN
               IF cl_null(g_glfb_row[39].glfb011) THEN
                  LET g_glfb_row[39].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt39
            
            #add-point:AFTER FIELD amt39 name="input.a.page1.amt39"
            IF NOT cl_null(g_glfb_d[l_ac].amt39) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt39 != g_glfb_d_t.amt39 OR g_glfb_d_t.amt39 IS NULL)) THEN 
                  LET g_glfb_row[39].glfb005 = g_glfb_d[l_ac].amt39
               END IF
            ELSE
               LET g_glfb_row[39].glfb004=''
               LET g_glfb_row[39].glfb005=''
               LET g_glfb_row[39].glfb011=''
               LET g_glfb_row[39].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt39
            #add-point:ON CHANGE amt39 name="input.g.page1.amt39"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt40
            #add-point:BEFORE FIELD amt40 name="input.b.page1.amt40"
            LET g_glfb_row[40].glfbseq1='AN'
            IF cl_null(g_glfb_d[l_ac].amt40) THEN
               IF cl_null(g_glfb_row[40].glfb011) THEN
                  LET g_glfb_row[40].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt40
            
            #add-point:AFTER FIELD amt40 name="input.a.page1.amt40"
            IF NOT cl_null(g_glfb_d[l_ac].amt40) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt40 != g_glfb_d_t.amt40 OR g_glfb_d_t.amt40 IS NULL)) THEN 
                  LET g_glfb_row[40].glfb005 = g_glfb_d[l_ac].amt40
               END IF
            ELSE
               LET g_glfb_row[40].glfb004=''
               LET g_glfb_row[40].glfb005=''
               LET g_glfb_row[40].glfb011=''
               LET g_glfb_row[40].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt40
            #add-point:ON CHANGE amt40 name="input.g.page1.amt40"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt41
            #add-point:BEFORE FIELD amt41 name="input.b.page1.amt41"
            LET g_glfb_row[41].glfbseq1='AO'
            IF cl_null(g_glfb_d[l_ac].amt41) THEN
               IF cl_null(g_glfb_row[41].glfb011) THEN
                  LET g_glfb_row[41].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt41
            
            #add-point:AFTER FIELD amt41 name="input.a.page1.amt41"
            IF NOT cl_null(g_glfb_d[l_ac].amt41) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt41 != g_glfb_d_t.amt41 OR g_glfb_d_t.amt41 IS NULL)) THEN 
                  LET g_glfb_row[41].glfb005 = g_glfb_d[l_ac].amt41
               END IF
            ELSE
               LET g_glfb_row[41].glfb004=''
               LET g_glfb_row[41].glfb005=''
               LET g_glfb_row[41].glfb011=''
               LET g_glfb_row[41].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt41
            #add-point:ON CHANGE amt41 name="input.g.page1.amt41"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt42
            #add-point:BEFORE FIELD amt42 name="input.b.page1.amt42"
            LET g_glfb_row[42].glfbseq1='AP'
            IF cl_null(g_glfb_d[l_ac].amt42) THEN
               IF cl_null(g_glfb_row[42].glfb011) THEN
                  LET g_glfb_row[42].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt42
            
            #add-point:AFTER FIELD amt42 name="input.a.page1.amt42"
            IF NOT cl_null(g_glfb_d[l_ac].amt42) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt42 != g_glfb_d_t.amt42 OR g_glfb_d_t.amt42 IS NULL)) THEN 
                  LET g_glfb_row[42].glfb005 = g_glfb_d[l_ac].amt42
               END IF
            ELSE
               LET g_glfb_row[42].glfb004=''
               LET g_glfb_row[42].glfb005=''
               LET g_glfb_row[42].glfb011=''
               LET g_glfb_row[42].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt42
            #add-point:ON CHANGE amt42 name="input.g.page1.amt42"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt43
            #add-point:BEFORE FIELD amt43 name="input.b.page1.amt43"
            LET g_glfb_row[43].glfbseq1='AQ'
            IF cl_null(g_glfb_d[l_ac].amt43) THEN
               IF cl_null(g_glfb_row[43].glfb011) THEN
                  LET g_glfb_row[43].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt43
            
            #add-point:AFTER FIELD amt43 name="input.a.page1.amt43"
            IF NOT cl_null(g_glfb_d[l_ac].amt43) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt43 != g_glfb_d_t.amt43 OR g_glfb_d_t.amt43 IS NULL)) THEN 
                  LET g_glfb_row[43].glfb005 = g_glfb_d[l_ac].amt43
               END IF
            ELSE
               LET g_glfb_row[43].glfb004=''
               LET g_glfb_row[43].glfb005=''
               LET g_glfb_row[43].glfb011=''
               LET g_glfb_row[43].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt43
            #add-point:ON CHANGE amt43 name="input.g.page1.amt43"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt44
            #add-point:BEFORE FIELD amt44 name="input.b.page1.amt44"
            LET g_glfb_row[44].glfbseq1='AR'
            IF cl_null(g_glfb_d[l_ac].amt44) THEN
               IF cl_null(g_glfb_row[44].glfb011) THEN
                  LET g_glfb_row[44].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt44
            
            #add-point:AFTER FIELD amt44 name="input.a.page1.amt44"
            IF NOT cl_null(g_glfb_d[l_ac].amt44) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt44 != g_glfb_d_t.amt44 OR g_glfb_d_t.amt44 IS NULL)) THEN 
                  LET g_glfb_row[44].glfb005 = g_glfb_d[l_ac].amt44
               END IF
            ELSE
               LET g_glfb_row[44].glfb004=''
               LET g_glfb_row[44].glfb005=''
               LET g_glfb_row[44].glfb011=''
               LET g_glfb_row[44].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt44
            #add-point:ON CHANGE amt44 name="input.g.page1.amt44"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt45
            #add-point:BEFORE FIELD amt45 name="input.b.page1.amt45"
            LET g_glfb_row[45].glfbseq1='AS'
            IF cl_null(g_glfb_d[l_ac].amt45) THEN
               IF cl_null(g_glfb_row[45].glfb011) THEN
                  LET g_glfb_row[45].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt45
            
            #add-point:AFTER FIELD amt45 name="input.a.page1.amt45"
            IF NOT cl_null(g_glfb_d[l_ac].amt45) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt45 != g_glfb_d_t.amt45 OR g_glfb_d_t.amt45 IS NULL)) THEN 
                  LET g_glfb_row[45].glfb005 = g_glfb_d[l_ac].amt45
               END IF
            ELSE
               LET g_glfb_row[45].glfb004=''
               LET g_glfb_row[45].glfb005=''
               LET g_glfb_row[45].glfb011=''
               LET g_glfb_row[45].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt45
            #add-point:ON CHANGE amt45 name="input.g.page1.amt45"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt46
            #add-point:BEFORE FIELD amt46 name="input.b.page1.amt46"
            LET g_glfb_row[46].glfbseq1='AT'
            IF cl_null(g_glfb_d[l_ac].amt46) THEN
               IF cl_null(g_glfb_row[46].glfb011) THEN
                  LET g_glfb_row[46].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt46
            
            #add-point:AFTER FIELD amt46 name="input.a.page1.amt46"
            IF NOT cl_null(g_glfb_d[l_ac].amt46) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt46 != g_glfb_d_t.amt46 OR g_glfb_d_t.amt46 IS NULL)) THEN 
                  LET g_glfb_row[46].glfb005 = g_glfb_d[l_ac].amt46
               END IF
            ELSE
               LET g_glfb_row[46].glfb004=''
               LET g_glfb_row[46].glfb005=''
               LET g_glfb_row[46].glfb011=''
               LET g_glfb_row[46].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt46
            #add-point:ON CHANGE amt46 name="input.g.page1.amt46"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt47
            #add-point:BEFORE FIELD amt47 name="input.b.page1.amt47"
            LET g_glfb_row[47].glfbseq1='AU'
            IF cl_null(g_glfb_d[l_ac].amt47) THEN
               IF cl_null(g_glfb_row[47].glfb011) THEN
                  LET g_glfb_row[47].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt47
            
            #add-point:AFTER FIELD amt47 name="input.a.page1.amt47"
            IF NOT cl_null(g_glfb_d[l_ac].amt47) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt47 != g_glfb_d_t.amt47 OR g_glfb_d_t.amt47 IS NULL)) THEN 
                  LET g_glfb_row[47].glfb005 = g_glfb_d[l_ac].amt47
               END IF
            ELSE
               LET g_glfb_row[47].glfb004=''
               LET g_glfb_row[47].glfb005=''
               LET g_glfb_row[47].glfb011=''
               LET g_glfb_row[47].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt47
            #add-point:ON CHANGE amt47 name="input.g.page1.amt47"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt48
            #add-point:BEFORE FIELD amt48 name="input.b.page1.amt48"
            LET g_glfb_row[48].glfbseq1='AV'
            IF cl_null(g_glfb_d[l_ac].amt48) THEN
               IF cl_null(g_glfb_row[48].glfb011) THEN
                  LET g_glfb_row[48].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt48
            
            #add-point:AFTER FIELD amt48 name="input.a.page1.amt48"
            IF NOT cl_null(g_glfb_d[l_ac].amt48) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt48 != g_glfb_d_t.amt48 OR g_glfb_d_t.amt48 IS NULL)) THEN 
                  LET g_glfb_row[48].glfb005 = g_glfb_d[l_ac].amt48
               END IF
            ELSE
               LET g_glfb_row[48].glfb004=''
               LET g_glfb_row[48].glfb005=''
               LET g_glfb_row[48].glfb011=''
               LET g_glfb_row[48].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt48
            #add-point:ON CHANGE amt48 name="input.g.page1.amt48"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt49
            #add-point:BEFORE FIELD amt49 name="input.b.page1.amt49"
            LET g_glfb_row[49].glfbseq1='AW'
            IF cl_null(g_glfb_d[l_ac].amt49) THEN
               IF cl_null(g_glfb_row[49].glfb011) THEN
                  LET g_glfb_row[49].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt49
            
            #add-point:AFTER FIELD amt49 name="input.a.page1.amt49"
            IF NOT cl_null(g_glfb_d[l_ac].amt49) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt49 != g_glfb_d_t.amt49 OR g_glfb_d_t.amt49 IS NULL)) THEN 
                  LET g_glfb_row[49].glfb005 = g_glfb_d[l_ac].amt49
               END IF
            ELSE
               LET g_glfb_row[49].glfb004=''
               LET g_glfb_row[49].glfb005=''
               LET g_glfb_row[49].glfb011=''
               LET g_glfb_row[49].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt49
            #add-point:ON CHANGE amt49 name="input.g.page1.amt49"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD amt50
            #add-point:BEFORE FIELD amt50 name="input.b.page1.amt50"
            LET g_glfb_row[50].glfbseq1='AX'
            IF cl_null(g_glfb_d[l_ac].amt50) THEN
               IF cl_null(g_glfb_row[50].glfb011) THEN
                  LET g_glfb_row[50].glfb011 = '1'
               END IF
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD amt50
            
            #add-point:AFTER FIELD amt50 name="input.a.page1.amt50"
            IF NOT cl_null(g_glfb_d[l_ac].amt50) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfb_d[l_ac].amt50 != g_glfb_d_t.amt50 OR g_glfb_d_t.amt50 IS NULL)) THEN 
                  LET g_glfb_row[50].glfb005 = g_glfb_d[l_ac].amt50
               END IF
            ELSE
               LET g_glfb_row[50].glfb004=''
               LET g_glfb_row[50].glfb005=''
               LET g_glfb_row[50].glfb011=''
               LET g_glfb_row[50].glfb012=''
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE amt50
            #add-point:ON CHANGE amt50 name="input.g.page1.amt50"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.glfbseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glfbseq
            #add-point:ON ACTION controlp INFIELD glfbseq name="input.c.page1.glfbseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.glfbseq1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glfbseq1
            #add-point:ON ACTION controlp INFIELD glfbseq1 name="input.c.page1.glfbseq1"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt1
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt1
            #add-point:ON ACTION controlp INFIELD amt1 name="input.c.page1.amt1"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'A',g_glfb_row[1].glfb004,g_glfb_row[1].glfb005)
            RETURNING g_glfb_row[1].glfb011,g_glfb_row[1].glfb005,g_glfb_row[1].glfb012
            LET g_glfb_d[l_ac].amt1 = g_glfb_row[1].glfb005
            DISPLAY g_glfb_d[l_ac].amt1 TO amt1
            NEXT FIELD amt1
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt2
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt2
            #add-point:ON ACTION controlp INFIELD amt2 name="input.c.page1.amt2"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'B',g_glfb_row[2].glfb004,g_glfb_row[2].glfb005)
            RETURNING g_glfb_row[2].glfb011,g_glfb_row[2].glfb005,g_glfb_row[2].glfb012
            LET g_glfb_d[l_ac].amt2 = g_glfb_row[2].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt2
            NEXT FIELD amt2
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt3
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt3
            #add-point:ON ACTION controlp INFIELD amt3 name="input.c.page1.amt3"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'C',g_glfb_row[3].glfb004,g_glfb_row[3].glfb005)
            RETURNING g_glfb_row[3].glfb011,g_glfb_row[3].glfb005,g_glfb_row[3].glfb012
            LET g_glfb_d[l_ac].amt3 = g_glfb_row[3].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt3
            NEXT FIELD amt3
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt4
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt4
            #add-point:ON ACTION controlp INFIELD amt4 name="input.c.page1.amt4"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'D',g_glfb_row[4].glfb004,g_glfb_row[4].glfb005)
            RETURNING g_glfb_row[4].glfb011,g_glfb_row[4].glfb005,g_glfb_row[4].glfb012
            LET g_glfb_d[l_ac].amt4 = g_glfb_row[4].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt4
            NEXT FIELD amt4
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt5
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt5
            #add-point:ON ACTION controlp INFIELD amt5 name="input.c.page1.amt5"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'E',g_glfb_row[5].glfb004,g_glfb_row[5].glfb005)
            RETURNING g_glfb_row[5].glfb011,g_glfb_row[5].glfb005,g_glfb_row[5].glfb012
            LET g_glfb_d[l_ac].amt5 = g_glfb_row[5].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt5
            NEXT FIELD amt5
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt6
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt6
            #add-point:ON ACTION controlp INFIELD amt6 name="input.c.page1.amt6"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'F',g_glfb_row[6].glfb004,g_glfb_row[6].glfb005)
            RETURNING g_glfb_row[6].glfb011,g_glfb_row[6].glfb005,g_glfb_row[6].glfb012
            LET g_glfb_d[l_ac].amt6 = g_glfb_row[6].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt6
            NEXT FIELD amt6
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt7
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt7
            #add-point:ON ACTION controlp INFIELD amt7 name="input.c.page1.amt7"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'G',g_glfb_row[7].glfb004,g_glfb_row[7].glfb005)
            RETURNING g_glfb_row[7].glfb011,g_glfb_row[7].glfb005,g_glfb_row[7].glfb012
            LET g_glfb_d[l_ac].amt7 = g_glfb_row[7].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt7
            NEXT FIELD amt7
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt8
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt8
            #add-point:ON ACTION controlp INFIELD amt8 name="input.c.page1.amt8"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'H',g_glfb_row[8].glfb004,g_glfb_row[8].glfb005)
            RETURNING g_glfb_row[8].glfb011,g_glfb_row[8].glfb005,g_glfb_row[8].glfb012
            LET g_glfb_d[l_ac].amt8 = g_glfb_row[8].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt8
            NEXT FIELD amt8
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt9
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt9
            #add-point:ON ACTION controlp INFIELD amt9 name="input.c.page1.amt9"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'I',g_glfb_row[9].glfb004,g_glfb_row[9].glfb005)
            RETURNING g_glfb_row[9].glfb011,g_glfb_row[9].glfb005,g_glfb_row[9].glfb012
            LET g_glfb_d[l_ac].amt9 = g_glfb_row[9].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt9
            NEXT FIELD amt9
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt10
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt10
            #add-point:ON ACTION controlp INFIELD amt10 name="input.c.page1.amt10"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'J',g_glfb_row[10].glfb004,g_glfb_row[10].glfb005)
            RETURNING g_glfb_row[10].glfb011,g_glfb_row[10].glfb005,g_glfb_row[10].glfb012
            LET g_glfb_d[l_ac].amt10 = g_glfb_row[10].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt10
            NEXT FIELD amt10
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt11
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt11
            #add-point:ON ACTION controlp INFIELD amt11 name="input.c.page1.amt11"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'K',g_glfb_row[11].glfb004,g_glfb_row[11].glfb005)
            RETURNING g_glfb_row[11].glfb011,g_glfb_row[11].glfb005,g_glfb_row[11].glfb012
            LET g_glfb_d[l_ac].amt11 = g_glfb_row[11].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt11
            NEXT FIELD amt11
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt12
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt12
            #add-point:ON ACTION controlp INFIELD amt12 name="input.c.page1.amt12"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'L',g_glfb_row[12].glfb004,g_glfb_row[12].glfb005)
            RETURNING g_glfb_row[12].glfb012,g_glfb_row[12].glfb005,g_glfb_row[12].glfb012
            LET g_glfb_d[l_ac].amt12 = g_glfb_row[12].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt12
            NEXT FIELD amt12
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt13
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt13
            #add-point:ON ACTION controlp INFIELD amt13 name="input.c.page1.amt13"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'M',g_glfb_row[13].glfb004,g_glfb_row[13].glfb005)
            RETURNING g_glfb_row[13].glfb011,g_glfb_row[13].glfb005,g_glfb_row[13].glfb012
            LET g_glfb_d[l_ac].amt13 = g_glfb_row[13].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt13
            NEXT FIELD amt13
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt14
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt14
            #add-point:ON ACTION controlp INFIELD amt14 name="input.c.page1.amt14"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'N',g_glfb_row[14].glfb004,g_glfb_row[14].glfb005)
            RETURNING g_glfb_row[14].glfb011,g_glfb_row[14].glfb005,g_glfb_row[14].glfb012
            LET g_glfb_d[l_ac].amt14 = g_glfb_row[14].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt14
            NEXT FIELD amt14
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt15
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt15
            #add-point:ON ACTION controlp INFIELD amt15 name="input.c.page1.amt15"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'O',g_glfb_row[15].glfb004,g_glfb_row[15].glfb005)
            RETURNING g_glfb_row[15].glfb011,g_glfb_row[15].glfb005,g_glfb_row[15].glfb012
            LET g_glfb_d[l_ac].amt15 = g_glfb_row[15].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt15
            NEXT FIELD amt15
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt16
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt16
            #add-point:ON ACTION controlp INFIELD amt16 name="input.c.page1.amt16"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'P',g_glfb_row[16].glfb004,g_glfb_row[16].glfb005)
            RETURNING g_glfb_row[16].glfb011,g_glfb_row[16].glfb005,g_glfb_row[16].glfb012
            LET g_glfb_d[l_ac].amt16 = g_glfb_row[16].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt16
            NEXT FIELD amt16
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt17
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt17
            #add-point:ON ACTION controlp INFIELD amt17 name="input.c.page1.amt17"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'Q',g_glfb_row[17].glfb004,g_glfb_row[17].glfb005)
            RETURNING g_glfb_row[17].glfb011,g_glfb_row[17].glfb005,g_glfb_row[17].glfb012
            LET g_glfb_d[l_ac].amt17 = g_glfb_row[17].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt17
            NEXT FIELD amt17
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt18
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt18
            #add-point:ON ACTION controlp INFIELD amt18 name="input.c.page1.amt18"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'R',g_glfb_row[18].glfb004,g_glfb_row[18].glfb005)
            RETURNING g_glfb_row[18].glfb011,g_glfb_row[18].glfb005,g_glfb_row[18].glfb012
            LET g_glfb_d[l_ac].amt18 = g_glfb_row[18].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt18
            NEXT FIELD amt18
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt19
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt19
            #add-point:ON ACTION controlp INFIELD amt19 name="input.c.page1.amt19"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'S',g_glfb_row[19].glfb004,g_glfb_row[19].glfb005)
            RETURNING g_glfb_row[19].glfb011,g_glfb_row[19].glfb005,g_glfb_row[19].glfb012
            LET g_glfb_d[l_ac].amt19 = g_glfb_row[19].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt19
            NEXT FIELD amt19
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt20
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt20
            #add-point:ON ACTION controlp INFIELD amt20 name="input.c.page1.amt20"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'T',g_glfb_row[20].glfb004,g_glfb_row[20].glfb005)
            RETURNING g_glfb_row[20].glfb011,g_glfb_row[20].glfb005,g_glfb_row[20].glfb012
            LET g_glfb_d[l_ac].amt20 = g_glfb_row[20].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt20
            NEXT FIELD amt20
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt21
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt21
            #add-point:ON ACTION controlp INFIELD amt21 name="input.c.page1.amt21"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'U',g_glfb_row[21].glfb004,g_glfb_row[21].glfb005)
            RETURNING g_glfb_row[21].glfb011,g_glfb_row[21].glfb005,g_glfb_row[21].glfb012
            LET g_glfb_d[l_ac].amt21 = g_glfb_row[21].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt21
            NEXT FIELD amt21
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt22
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt22
            #add-point:ON ACTION controlp INFIELD amt22 name="input.c.page1.amt22"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'V',g_glfb_row[22].glfb004,g_glfb_row[22].glfb005)
            RETURNING g_glfb_row[22].glfb011,g_glfb_row[22].glfb005,g_glfb_row[22].glfb012
            LET g_glfb_d[l_ac].amt22 = g_glfb_row[22].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt22
            NEXT FIELD amt22
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt23
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt23
            #add-point:ON ACTION controlp INFIELD amt23 name="input.c.page1.amt23"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'W',g_glfb_row[23].glfb004,g_glfb_row[23].glfb005)
            RETURNING g_glfb_row[23].glfb011,g_glfb_row[23].glfb005,g_glfb_row[23].glfb012
            LET g_glfb_d[l_ac].amt23 = g_glfb_row[23].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt23
            NEXT FIELD amt23
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt24
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt24
            #add-point:ON ACTION controlp INFIELD amt24 name="input.c.page1.amt24"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'X',g_glfb_row[24].glfb004,g_glfb_row[24].glfb005)
            RETURNING g_glfb_row[24].glfb011,g_glfb_row[24].glfb005,g_glfb_row[24].glfb012
            LET g_glfb_d[l_ac].amt24 = g_glfb_row[24].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt24
            NEXT FIELD amt24
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt25
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt25
            #add-point:ON ACTION controlp INFIELD amt25 name="input.c.page1.amt25"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'Y',g_glfb_row[25].glfb004,g_glfb_row[25].glfb005)
            RETURNING g_glfb_row[25].glfb011,g_glfb_row[25].glfb005,g_glfb_row[25].glfb012
            LET g_glfb_d[l_ac].amt25 = g_glfb_row[25].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt25
            NEXT FIELD amt25
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt26
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt26
            #add-point:ON ACTION controlp INFIELD amt26 name="input.c.page1.amt26"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'Z',g_glfb_row[26].glfb004,g_glfb_row[26].glfb005)
            RETURNING g_glfb_row[26].glfb011,g_glfb_row[26].glfb005,g_glfb_row[26].glfb012
            LET g_glfb_d[l_ac].amt26 = g_glfb_row[26].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt26
            NEXT FIELD amt26
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt27
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt27
            #add-point:ON ACTION controlp INFIELD amt27 name="input.c.page1.amt27"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'AA',g_glfb_row[27].glfb004,g_glfb_row[27].glfb005)
            RETURNING g_glfb_row[27].glfb011,g_glfb_row[27].glfb005,g_glfb_row[27].glfb012
            LET g_glfb_d[l_ac].amt27 = g_glfb_row[27].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt27
            NEXT FIELD amt27
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt28
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt28
            #add-point:ON ACTION controlp INFIELD amt28 name="input.c.page1.amt28"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'AB',g_glfb_row[28].glfb004,g_glfb_row[28].glfb005)
            RETURNING g_glfb_row[28].glfb011,g_glfb_row[28].glfb005,g_glfb_row[28].glfb012
            LET g_glfb_d[l_ac].amt28 = g_glfb_row[28].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt28
            NEXT FIELD amt28
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt29
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt29
            #add-point:ON ACTION controlp INFIELD amt29 name="input.c.page1.amt29"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'AC',g_glfb_row[29].glfb004,g_glfb_row[29].glfb005)
            RETURNING g_glfb_row[29].glfb011,g_glfb_row[29].glfb005,g_glfb_row[29].glfb012
            LET g_glfb_d[l_ac].amt29 = g_glfb_row[29].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt29
            NEXT FIELD amt29
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt30
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt30
            #add-point:ON ACTION controlp INFIELD amt30 name="input.c.page1.amt30"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'AD',g_glfb_row[30].glfb004,g_glfb_row[30].glfb005)
            RETURNING g_glfb_row[30].glfb011,g_glfb_row[30].glfb005,g_glfb_row[30].glfb012
            LET g_glfb_d[l_ac].amt30 = g_glfb_row[30].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt30
            NEXT FIELD amt30
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt31
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt31
            #add-point:ON ACTION controlp INFIELD amt31 name="input.c.page1.amt31"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'AE',g_glfb_row[31].glfb004,g_glfb_row[31].glfb005)
            RETURNING g_glfb_row[31].glfb011,g_glfb_row[31].glfb005,g_glfb_row[31].glfb012
            LET g_glfb_d[l_ac].amt31 = g_glfb_row[31].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt31
            NEXT FIELD amt31
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt32
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt32
            #add-point:ON ACTION controlp INFIELD amt32 name="input.c.page1.amt32"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'AF',g_glfb_row[32].glfb004,g_glfb_row[32].glfb005)
            RETURNING g_glfb_row[32].glfb011,g_glfb_row[32].glfb005,g_glfb_row[32].glfb012
            LET g_glfb_d[l_ac].amt32 = g_glfb_row[32].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt32
            NEXT FIELD amt32
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt33
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt33
            #add-point:ON ACTION controlp INFIELD amt33 name="input.c.page1.amt33"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'AG',g_glfb_row[33].glfb004,g_glfb_row[33].glfb005)
            RETURNING g_glfb_row[33].glfb011,g_glfb_row[33].glfb005,g_glfb_row[33].glfb012
            LET g_glfb_d[l_ac].amt33 = g_glfb_row[33].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt33
            NEXT FIELD amt33
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt34
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt34
            #add-point:ON ACTION controlp INFIELD amt34 name="input.c.page1.amt34"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'AH',g_glfb_row[34].glfb004,g_glfb_row[34].glfb005)
            RETURNING g_glfb_row[34].glfb011,g_glfb_row[34].glfb005,g_glfb_row[34].glfb012
            LET g_glfb_d[l_ac].amt34 = g_glfb_row[34].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt34
            NEXT FIELD amt34
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt35
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt35
            #add-point:ON ACTION controlp INFIELD amt35 name="input.c.page1.amt35"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'AI',g_glfb_row[35].glfb004,g_glfb_row[35].glfb005)
            RETURNING g_glfb_row[35].glfb011,g_glfb_row[35].glfb005,g_glfb_row[35].glfb012
            LET g_glfb_d[l_ac].amt35 = g_glfb_row[35].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt35
            NEXT FIELD amt35
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt36
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt36
            #add-point:ON ACTION controlp INFIELD amt36 name="input.c.page1.amt36"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'AJ',g_glfb_row[36].glfb004,g_glfb_row[36].glfb005)
            RETURNING g_glfb_row[36].glfb011,g_glfb_row[36].glfb005,g_glfb_row[36].glfb012
            LET g_glfb_d[l_ac].amt36 = g_glfb_row[36].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt36
            NEXT FIELD amt36
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt37
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt37
            #add-point:ON ACTION controlp INFIELD amt37 name="input.c.page1.amt37"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'AK',g_glfb_row[37].glfb004,g_glfb_row[37].glfb005)
            RETURNING g_glfb_row[37].glfb011,g_glfb_row[37].glfb005,g_glfb_row[37].glfb012
            LET g_glfb_d[l_ac].amt37 = g_glfb_row[37].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt37
            NEXT FIELD amt37
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt38
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt38
            #add-point:ON ACTION controlp INFIELD amt38 name="input.c.page1.amt38"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'AL',g_glfb_row[38].glfb004,g_glfb_row[38].glfb005)
            RETURNING g_glfb_row[38].glfb011,g_glfb_row[38].glfb005,g_glfb_row[38].glfb012
            LET g_glfb_d[l_ac].amt38 = g_glfb_row[38].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt38
            NEXT FIELD amt38
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt39
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt39
            #add-point:ON ACTION controlp INFIELD amt39 name="input.c.page1.amt39"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'AM',g_glfb_row[39].glfb004,g_glfb_row[39].glfb005)
            RETURNING g_glfb_row[39].glfb011,g_glfb_row[39].glfb005,g_glfb_row[39].glfb012
            LET g_glfb_d[l_ac].amt39 = g_glfb_row[39].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt39
            NEXT FIELD amt39
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt40
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt40
            #add-point:ON ACTION controlp INFIELD amt40 name="input.c.page1.amt40"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'AN',g_glfb_row[40].glfb004,g_glfb_row[40].glfb005)
            RETURNING g_glfb_row[40].glfb011,g_glfb_row[40].glfb005,g_glfb_row[40].glfb012
            LET g_glfb_d[l_ac].amt40 = g_glfb_row[40].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt40
            NEXT FIELD amt40
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt41
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt41
            #add-point:ON ACTION controlp INFIELD amt41 name="input.c.page1.amt41"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'AO',g_glfb_row[41].glfb004,g_glfb_row[41].glfb005)
            RETURNING g_glfb_row[41].glfb011,g_glfb_row[41].glfb005,g_glfb_row[41].glfb012
            LET g_glfb_d[l_ac].amt41 = g_glfb_row[41].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt41
            NEXT FIELD amt41
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt42
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt42
            #add-point:ON ACTION controlp INFIELD amt42 name="input.c.page1.amt42"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'AP',g_glfb_row[42].glfb004,g_glfb_row[42].glfb005)
            RETURNING g_glfb_row[42].glfb011,g_glfb_row[42].glfb005,g_glfb_row[42].glfb012
            LET g_glfb_d[l_ac].amt42 = g_glfb_row[42].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt42
            NEXT FIELD amt42
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt43
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt43
            #add-point:ON ACTION controlp INFIELD amt43 name="input.c.page1.amt43"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'AQ',g_glfb_row[43].glfb004,g_glfb_row[43].glfb005)
            RETURNING g_glfb_row[43].glfb011,g_glfb_row[43].glfb005,g_glfb_row[43].glfb012
            LET g_glfb_d[l_ac].amt43 = g_glfb_row[43].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt43
            NEXT FIELD amt43
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt44
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt44
            #add-point:ON ACTION controlp INFIELD amt44 name="input.c.page1.amt44"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'AR',g_glfb_row[44].glfb004,g_glfb_row[44].glfb005)
            RETURNING g_glfb_row[44].glfb011,g_glfb_row[44].glfb005,g_glfb_row[44].glfb012
            LET g_glfb_d[l_ac].amt44 = g_glfb_row[44].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt44
            NEXT FIELD amt44
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt45
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt45
            #add-point:ON ACTION controlp INFIELD amt45 name="input.c.page1.amt45"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'AS',g_glfb_row[45].glfb004,g_glfb_row[45].glfb005)
            RETURNING g_glfb_row[45].glfb011,g_glfb_row[45].glfb005,g_glfb_row[45].glfb012
            LET g_glfb_d[l_ac].amt45 = g_glfb_row[45].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt45
            NEXT FIELD amt45
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt46
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt46
            #add-point:ON ACTION controlp INFIELD amt46 name="input.c.page1.amt46"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'AT',g_glfb_row[46].glfb004,g_glfb_row[46].glfb005)
            RETURNING g_glfb_row[46].glfb011,g_glfb_row[46].glfb005,g_glfb_row[46].glfb012
            LET g_glfb_d[l_ac].amt46 = g_glfb_row[46].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt46
            NEXT FIELD amt46
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt47
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt47
            #add-point:ON ACTION controlp INFIELD amt47 name="input.c.page1.amt47"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'AU',g_glfb_row[47].glfb004,g_glfb_row[47].glfb005)
            RETURNING g_glfb_row[47].glfb011,g_glfb_row[47].glfb005,g_glfb_row[47].glfb012
            LET g_glfb_d[l_ac].amt47 = g_glfb_row[47].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt47
            NEXT FIELD amt47
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt48
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt48
            #add-point:ON ACTION controlp INFIELD amt48 name="input.c.page1.amt48"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'AV',g_glfb_row[48].glfb004,g_glfb_row[48].glfb005)
            RETURNING g_glfb_row[48].glfb011,g_glfb_row[48].glfb005,g_glfb_row[48].glfb012
            LET g_glfb_d[l_ac].amt48 = g_glfb_row[48].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt48
            NEXT FIELD amt48
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt49
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt49
            #add-point:ON ACTION controlp INFIELD amt49 name="input.c.page1.amt49"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'AW',g_glfb_row[49].glfb004,g_glfb_row[49].glfb005)
            RETURNING g_glfb_row[49].glfb011,g_glfb_row[49].glfb005,g_glfb_row[49].glfb012
            LET g_glfb_d[l_ac].amt49 = g_glfb_row[49].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt49
            NEXT FIELD amt49
            #END add-point
 
 
         #Ctrlp:input.c.page1.amt50
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD amt50
            #add-point:ON ACTION controlp INFIELD amt50 name="input.c.page1.amt50"
            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'AX',g_glfb_row[50].glfb004,g_glfb_row[50].glfb005)
            RETURNING g_glfb_row[50].glfb011,g_glfb_row[50].glfb005,g_glfb_row[50].glfb012
            LET g_glfb_d[l_ac].amt50 = g_glfb_row[50].glfb005
            DISPLAY BY NAME g_glfb_d[l_ac].amt50
            NEXT FIELD amt50
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_glfb_d[l_ac].* = g_glfb_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE agli075_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_glfb_d[l_ac].glfbseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_glfb_d[l_ac].* = g_glfb_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               #重写修改
               LET l_flag = FALSE
               IF l_flag = TRUE THEN
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL agli075_glfb_t_mask_restore('restore_mask_o')
      
               UPDATE glfb_t SET (glfb001,glfbseq,glfbseq1) = (g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq, 
                   g_glfb_d[l_ac].glfbseq1)
                WHERE glfbent = g_enterprise AND glfb001 = g_glfa_m.glfa001 
 
                  AND glfbseq = g_glfb_d_t.glfbseq #項次   
                  AND glfbseq1 = g_glfb_d_t.glfbseq1  
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_glfb_d[l_ac].* = g_glfb_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "glfb_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     LET g_glfb_d[l_ac].* = g_glfb_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "glfb_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_glfa_m.glfa001
               LET gs_keys_bak[1] = g_glfa001_t
               LET gs_keys[2] = g_glfb_d[g_detail_idx].glfbseq
               LET gs_keys_bak[2] = g_glfb_d_t.glfbseq
               LET gs_keys[3] = g_glfb_d[g_detail_idx].glfbseq1
               LET gs_keys_bak[3] = g_glfb_d_t.glfbseq1
               CALL agli075_update_b('glfb_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL agli075_glfb_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_glfb_d[g_detail_idx].glfbseq = g_glfb_d_t.glfbseq 
                  AND g_glfb_d[g_detail_idx].glfbseq1 = g_glfb_d_t.glfbseq1 
 
                  ) THEN
                  LET gs_keys[01] = g_glfa_m.glfa001
 
                  LET gs_keys[gs_keys.getLength()+1] = g_glfb_d_t.glfbseq
                  LET gs_keys[gs_keys.getLength()+1] = g_glfb_d_t.glfbseq1
 
                  CALL agli075_key_update_b(gs_keys,'glfb_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_glfa_m),util.JSON.stringify(g_glfb_d_t)
               LET g_log2 = util.JSON.stringify(g_glfa_m),util.JSON.stringify(g_glfb_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               END IF
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            #修改时更细单元格设置公式资料
            LET l_success = TRUE
            CALL agli075_ins_or_upd(g_glfb_d[l_ac].glfbseq) RETURNING l_success
            IF l_success = FALSE THEN
               CALL s_transaction_end('N','0')
            END IF
            #end add-point
            CALL agli075_unlock_b("glfb_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            CALL s_transaction_begin()
            LET l_success = TRUE
            CALL agli075_update_glfbseq() RETURNING l_success
            IF l_success = TRUE THEN
               CALL s_transaction_end('Y','0')
            ELSE
               CALL s_transaction_end('N','0')
            END IF
            CALL agli075_b_fill()
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
#            CALL s_transaction_begin()
#            LET l_success = TRUE
#            CALL agli075_update_glfbseq() RETURNING l_success
#            IF l_success = TRUE THEN
#               CALL s_transaction_end('Y','0')
#            ELSE
#               CALL s_transaction_end('N','0')
#            END IF
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_glfb_d[li_reproduce_target].* = g_glfb_d[li_reproduce].*
 
               LET g_glfb_d[li_reproduce_target].glfbseq = NULL
               LET g_glfb_d[li_reproduce_target].glfbseq1 = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_glfb_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_glfb_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
 
 
 
{</section>}
 
{<section id="agli075.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1',"))      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            
            #end add-point  
            NEXT FIELD glfa001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD glfbseq
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   
   #end add-point    
 
END FUNCTION
 
{</section>}
 
{<section id="agli075.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION agli075_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL agli075_b_fill() #單身填充
      CALL agli075_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL agli075_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_glfa_m.glfa001
   CALL ap_ref_array2(g_ref_fields," SELECT glfal003 FROM glfal_t WHERE glfalent = '"||g_enterprise||"' AND glfal001 = ? AND glfal002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_glfa_m.glfal003 = g_rtn_fields[1] 
   DISPLAY g_glfa_m.glfal003 TO glfal003
   SELECT glaa001 INTO g_glfa_m.glaa001 FROM glaa_t
    WHERE glaaent=g_enterprise AND glaald=g_glfa_m.glfa005
   DISPLAY BY NAME g_glfa_m.glaa001
   #end add-point
   
   #遮罩相關處理
   LET g_glfa_m_mask_o.* =  g_glfa_m.*
   CALL agli075_glfa_t_mask()
   LET g_glfa_m_mask_n.* =  g_glfa_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_glfa_m.glfa001,g_glfa_m.glfal003,g_glfa_m.glfa004,g_glfa_m.glfa004_desc,g_glfa_m.glfa002, 
       g_glfa_m.glfa003,g_glfa_m.glfa016,g_glfa_m.glfa005,g_glfa_m.glfa005_desc,g_glfa_m.glaa001,g_glfa_m.glfa006, 
       g_glfa_m.glfa007,g_glfa_m.glfa009,g_glfa_m.glfa008,g_glfa_m.glfaownid,g_glfa_m.glfaownid_desc, 
       g_glfa_m.glfacrtid,g_glfa_m.glfacrtid_desc,g_glfa_m.glfacrtdt,g_glfa_m.glfaowndp,g_glfa_m.glfaowndp_desc, 
       g_glfa_m.glfacrtdp,g_glfa_m.glfacrtdp_desc,g_glfa_m.glfamodid,g_glfa_m.glfamodid_desc,g_glfa_m.glfamoddt 
 
   
   #顯示狀態(stus)圖片
   
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_glfb_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
 
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other name="show.other"
   
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL agli075_detail_show()
 
   #add-point:show段之後 name="show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="agli075.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION agli075_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="agli075.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION agli075_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   
   #end add-point   
   DEFINE l_newno     LIKE glfa_t.glfa001 
   DEFINE l_oldno     LIKE glfa_t.glfa001 
 
   DEFINE l_master    RECORD LIKE glfa_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE glfb_t.* #此變數樣板目前無使用
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   
   LET g_master_insert = FALSE
   
   IF g_glfa_m.glfa001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_glfa001_t = g_glfa_m.glfa001
 
    
   LET g_glfa_m.glfa001 = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_glfa_m.glfaownid = g_user
      LET g_glfa_m.glfaowndp = g_dept
      LET g_glfa_m.glfacrtid = g_user
      LET g_glfa_m.glfacrtdp = g_dept 
      LET g_glfa_m.glfacrtdt = cl_get_current()
      LET g_glfa_m.glfamodid = g_user
      LET g_glfa_m.glfamoddt = cl_get_current()
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   
   #end add-point
   
   #顯示狀態(stus)圖片
   
   
   #清空key欄位的desc
   
   
   CALL agli075_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_glfa_m.* TO NULL
      INITIALIZE g_glfb_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      
      #end add-point
      CALL agli075_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL agli075_set_act_visible()   
   CALL agli075_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_glfa001_t = g_glfa_m.glfa001
 
   
   #組合新增資料的條件
   LET g_add_browse = " glfaent = " ||g_enterprise|| " AND",
                      " glfa001 = '", g_glfa_m.glfa001, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL agli075_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   CALL agli075_idx_chk()
   
   LET g_data_owner = g_glfa_m.glfaownid      
   LET g_data_dept  = g_glfa_m.glfaowndp
   
   #功能已完成,通報訊息中心
   CALL agli075_msgcentre_notify('reproduce')
 
END FUNCTION
 
{</section>}
 
{<section id="agli075.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION agli075_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE glfb_t.* #此變數樣板目前無使用
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE agli075_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM glfb_t
    WHERE glfbent = g_enterprise AND glfb001 = g_glfa001_t
 
    INTO TEMP agli075_detail
 
   #將key修正為調整後   
   UPDATE agli075_detail 
      #更新key欄位
      SET glfb001 = g_glfa_m.glfa001
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO glfb_t SELECT * FROM agli075_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE agli075_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_glfa001_t = g_glfa_m.glfa001
 
   
END FUNCTION
 
{</section>}
 
{<section id="agli075.delete" >}
#+ 資料刪除
PRIVATE FUNCTION agli075_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_glfa_m.glfa001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   LET g_master_multi_table_t.glfal001 = g_glfa_m.glfa001
LET g_master_multi_table_t.glfal003 = g_glfa_m.glfal003
 
   
   CALL s_transaction_begin()
 
   OPEN agli075_cl USING g_enterprise,g_glfa_m.glfa001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN agli075_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE agli075_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE agli075_master_referesh USING g_glfa_m.glfa001 INTO g_glfa_m.glfa001,g_glfa_m.glfa004,g_glfa_m.glfa002, 
       g_glfa_m.glfa003,g_glfa_m.glfa016,g_glfa_m.glfa005,g_glfa_m.glfa006,g_glfa_m.glfa007,g_glfa_m.glfa009, 
       g_glfa_m.glfa008,g_glfa_m.glfaownid,g_glfa_m.glfacrtid,g_glfa_m.glfacrtdt,g_glfa_m.glfaowndp, 
       g_glfa_m.glfacrtdp,g_glfa_m.glfamodid,g_glfa_m.glfamoddt,g_glfa_m.glfa004_desc,g_glfa_m.glfa005_desc, 
       g_glfa_m.glfaownid_desc,g_glfa_m.glfacrtid_desc,g_glfa_m.glfaowndp_desc,g_glfa_m.glfacrtdp_desc, 
       g_glfa_m.glfamodid_desc
   
   
   #檢查是否允許此動作
   IF NOT agli075_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_glfa_m_mask_o.* =  g_glfa_m.*
   CALL agli075_glfa_t_mask()
   LET g_glfa_m_mask_n.* =  g_glfa_m.*
   
   CALL agli075_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   #160811-00039#7--add--str--
   IF NOT s_ld_chk_authorization(g_user,g_glfa_m.glfa005) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'agl-00165'
      LET g_errparam.extend = g_glfa_m.glfa005
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CLOSE agli075_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   #160811-00039#7--add--end
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL agli075_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_glfa001_t = g_glfa_m.glfa001
 
 
      DELETE FROM glfa_t
       WHERE glfaent = g_enterprise AND glfa001 = g_glfa_m.glfa001
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_glfa_m.glfa001,":",SQLERRMESSAGE  
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      #end add-point
      
      DELETE FROM glfb_t
       WHERE glfbent = g_enterprise AND glfb001 = g_glfa_m.glfa001
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
      
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "glfb_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      
      #end add-point
      
            
                                                               
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE agli075_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_glfb_d.clear() 
 
     
      CALL agli075_ui_browser_refresh()  
      #CALL agli075_ui_headershow()  
      #CALL agli075_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      
      #end add-point
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_enterprise
   LET l_field_keys[01] = 'glfalent'
   LET l_var_keys_bak[02] = g_master_multi_table_t.glfal001
   LET l_field_keys[02] = 'glfal001'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'glfal_t')
 
      
      #單身多語言刪除
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL agli075_browser_fill("")
         CALL agli075_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE agli075_cl
 
   #功能已完成,通報訊息中心
   CALL agli075_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="agli075.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION agli075_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   DEFINE l_sql      STRING
   DEFINE l_glfbseq1 LIKE glfb_t.glfbseq1
   DEFINE l_glfb004  LIKE glfb_t.glfb004
   DEFINE l_glfb005  LIKE glfb_t.glfb005
   DEFINE l_glfb011  LIKE glfb_t.glfb011
   DEFINE l_glfb012  LIKE glfb_t.glfb012
   DEFINE l_amt      LIKE type_t.num20_6
   DEFINE l_i        LIKE type_t.num5
   DEFINE l_str      STRING
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #清空第一階單身
   CALL g_glfb_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   #抓取每一个单元格资料
   LET l_sql="SELECT glfbseq1,glfb004,glfb005,glfb011,glfb012 FROM glfb_t",
             " WHERE glfbent=",g_enterprise,
             "   AND glfb001='",g_glfa_m.glfa001,"'",
             "   AND glfbseq=?"
   PREPARE agli075_pb1 FROM l_sql
   DECLARE b_fill_cs1 CURSOR FOR agli075_pb1
   IF g_test = TRUE THEN
      CALL cl_err_collect_init()
      #根據保留的小數位數，確定要去除小數后0的個數
      IF g_glfa_m.glfa009 > 0 THEN
         LET l_i = 6 - g_glfa_m.glfa009
      ELSE
         #當保留0為小數時，小數點也要去除
         LET l_i = 7
      END IF
   END IF
   #end add-point
   
   #判斷是否填充
   IF agli075_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT glfbseq,glfbseq1  FROM glfb_t",   
                     " INNER JOIN glfa_t ON glfaent = " ||g_enterprise|| " AND glfa001 = glfb001 ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                     
                     " WHERE glfbent=? AND glfb001=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY glfb_t.glfbseq,glfb_t.glfbseq1"
         
         #add-point:單身填充控制 name="b_fill.sql"
         #重新SQL语句，不抓取列号
         LET g_sql = "SELECT  DISTINCT glfbseq,'A'  FROM glfb_t",   
                     " INNER JOIN glfa_t ON glfa001 = glfb001 ",
                     " WHERE glfbent=? AND glfb001=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         LET g_sql = g_sql, " ORDER BY glfb_t.glfbseq"
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE agli075_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR agli075_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_glfa_m.glfa001
                                               
      FOREACH b_fill_cs INTO g_glfb_d[l_ac].glfbseq,g_glfb_d[l_ac].glfbseq1
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         FOREACH b_fill_cs1 USING g_glfb_d[l_ac].glfbseq INTO l_glfbseq1,l_glfb004,l_glfb005,l_glfb011,l_glfb012
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               EXIT FOREACH
            END IF
            #當點擊‘測試’按鈕時才計算金額
            IF g_test = TRUE THEN
               #当公式类型为数字时，解析公式计算金额
               IF l_glfb011 = '2' THEN 
                  CALL agli075_get_amt(l_glfb005,l_glfb012) RETURNING l_amt
                  LET l_str = l_amt
                  LET l_str = l_str.substring(1,l_str.getLength()-l_i)
                  LET l_glfb005 = l_str
               END IF
            END IF
            
            CASE l_glfbseq1
               WHEN 'A'   LET g_glfb_d[l_ac].amt1  = l_glfb005
               WHEN 'B'   LET g_glfb_d[l_ac].amt2  = l_glfb005
               WHEN 'C'   LET g_glfb_d[l_ac].amt3  = l_glfb005
               WHEN 'D'   LET g_glfb_d[l_ac].amt4  = l_glfb005
               WHEN 'E'   LET g_glfb_d[l_ac].amt5  = l_glfb005
               WHEN 'F'   LET g_glfb_d[l_ac].amt6  = l_glfb005
               WHEN 'G'   LET g_glfb_d[l_ac].amt7  = l_glfb005
               WHEN 'H'   LET g_glfb_d[l_ac].amt8  = l_glfb005
               WHEN 'I'   LET g_glfb_d[l_ac].amt9  = l_glfb005
               WHEN 'J'   LET g_glfb_d[l_ac].amt10 = l_glfb005
               WHEN 'K'   LET g_glfb_d[l_ac].amt11 = l_glfb005
               WHEN 'L'   LET g_glfb_d[l_ac].amt12 = l_glfb005
               WHEN 'M'   LET g_glfb_d[l_ac].amt13 = l_glfb005
               WHEN 'N'   LET g_glfb_d[l_ac].amt14 = l_glfb005
               WHEN 'O'   LET g_glfb_d[l_ac].amt15 = l_glfb005
               WHEN 'P'   LET g_glfb_d[l_ac].amt16 = l_glfb005
               WHEN 'Q'   LET g_glfb_d[l_ac].amt17 = l_glfb005
               WHEN 'R'   LET g_glfb_d[l_ac].amt18 = l_glfb005
               WHEN 'S'   LET g_glfb_d[l_ac].amt19 = l_glfb005
               WHEN 'T'   LET g_glfb_d[l_ac].amt20 = l_glfb005
               WHEN 'U'   LET g_glfb_d[l_ac].amt21 = l_glfb005
               WHEN 'V'   LET g_glfb_d[l_ac].amt22 = l_glfb005
               WHEN 'W'   LET g_glfb_d[l_ac].amt23 = l_glfb005
               WHEN 'X'   LET g_glfb_d[l_ac].amt24 = l_glfb005
               WHEN 'Y'   LET g_glfb_d[l_ac].amt25 = l_glfb005
               WHEN 'Z'   LET g_glfb_d[l_ac].amt26 = l_glfb005
               WHEN 'AA'  LET g_glfb_d[l_ac].amt27 = l_glfb005
               WHEN 'AB'  LET g_glfb_d[l_ac].amt28 = l_glfb005
               WHEN 'AC'  LET g_glfb_d[l_ac].amt29 = l_glfb005
               WHEN 'AD'  LET g_glfb_d[l_ac].amt30 = l_glfb005
               WHEN 'AE'  LET g_glfb_d[l_ac].amt31 = l_glfb005
               WHEN 'AF'  LET g_glfb_d[l_ac].amt32 = l_glfb005
               WHEN 'AG'  LET g_glfb_d[l_ac].amt33 = l_glfb005
               WHEN 'AH'  LET g_glfb_d[l_ac].amt34 = l_glfb005
               WHEN 'AI'  LET g_glfb_d[l_ac].amt35 = l_glfb005
               WHEN 'AJ'  LET g_glfb_d[l_ac].amt36 = l_glfb005
               WHEN 'AK'  LET g_glfb_d[l_ac].amt37 = l_glfb005
               WHEN 'AL'  LET g_glfb_d[l_ac].amt38 = l_glfb005
               WHEN 'AM'  LET g_glfb_d[l_ac].amt39 = l_glfb005
               WHEN 'AN'  LET g_glfb_d[l_ac].amt40 = l_glfb005
               WHEN 'AO'  LET g_glfb_d[l_ac].amt41 = l_glfb005
               WHEN 'AP'  LET g_glfb_d[l_ac].amt42 = l_glfb005
               WHEN 'AQ'  LET g_glfb_d[l_ac].amt43 = l_glfb005
               WHEN 'AR'  LET g_glfb_d[l_ac].amt44 = l_glfb005
               WHEN 'AS'  LET g_glfb_d[l_ac].amt45 = l_glfb005
               WHEN 'AT'  LET g_glfb_d[l_ac].amt46 = l_glfb005
               WHEN 'AU'  LET g_glfb_d[l_ac].amt47 = l_glfb005
               WHEN 'AV'  LET g_glfb_d[l_ac].amt48 = l_glfb005
               WHEN 'AW'  LET g_glfb_d[l_ac].amt49 = l_glfb005
               WHEN 'AX'  LET g_glfb_d[l_ac].amt50 = l_glfb005
            END CASE
         END FOREACH
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   IF g_test = TRUE THEN
      CALL cl_err_collect_show()
   END IF
   #end add-point
   
   CALL g_glfb_d.deleteElement(g_glfb_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE agli075_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_glfb_d.getLength()
      LET g_glfb_d_mask_o[l_ac].* =  g_glfb_d[l_ac].*
      CALL agli075_glfb_t_mask()
      LET g_glfb_d_mask_n[l_ac].* =  g_glfb_d[l_ac].*
   END FOR
   
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
 
{</section>}
 
{<section id="agli075.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION agli075_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   DEFINE l_flag      LIKE type_t.num5
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      #重新删除操作
      LET l_flag = FALSE
      IF l_flag=TRUE THEN
      #end add-point    
      DELETE FROM glfb_t
       WHERE glfbent = g_enterprise AND
         glfb001 = ps_keys_bak[1] AND glfbseq = ps_keys_bak[2] AND glfbseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      END IF
      DELETE FROM glfb_t
       WHERE glfbent = g_enterprise AND
         glfb001 = ps_keys_bak[1] AND glfbseq = ps_keys_bak[2]
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_glfb_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
   
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="agli075.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION agli075_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      
      #end add-point 
      INSERT INTO glfb_t
                  (glfbent,
                   glfb001,
                   glfbseq,glfbseq1
                   ) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   )
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "glfb_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_glfb_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
   
   #end add-point     
   
END FUNCTION
 
{</section>}
 
{<section id="agli075.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION agli075_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "glfb_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      
      #end add-point 
      
      #將遮罩欄位還原
      CALL agli075_glfb_t_mask_restore('restore_mask_o')
               
      UPDATE glfb_t 
         SET (glfb001,
              glfbseq,glfbseq1
              ) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ) 
         WHERE glfbent = g_enterprise AND glfb001 = ps_keys_bak[1] AND glfbseq = ps_keys_bak[2] AND glfbseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中 name="update_b.m_update"
      
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "glfb_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "glfb_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL agli075_glfb_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
 
   
 
   
   #add-point:update_b段other name="update_b.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="agli075.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION agli075_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="agli075.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION agli075_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="agli075.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION agli075_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   DEFINE l_flag      LIKE type_t.num5
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   #重写锁表
   LET l_flag = FALSE
   IF l_flag = TRUE THEN
   #end add-point
    
   #先刷新資料
   #CALL agli075_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "glfb_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN agli075_bcl USING g_enterprise,
                                       g_glfa_m.glfa001,g_glfb_d[g_detail_idx].glfbseq,g_glfb_d[g_detail_idx].glfbseq1  
                                               
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "agli075_bcl:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
   END IF
   #僅鎖定自身table
   LET ls_group = "glfb_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN agli075_bcl USING g_enterprise,
                                       g_glfa_m.glfa001,g_glfb_d[g_detail_idx].glfbseq
                                               
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "agli075_bcl:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="agli075.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION agli075_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE agli075_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="agli075.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION agli075_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   CALL cl_set_comp_entry("",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("glfa001",TRUE)
      CALL cl_set_comp_entry("",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="agli075.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION agli075_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("glfa001",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("",FALSE)
   END IF 
 
   IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("",FALSE)
      END IF
   END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="agli075.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION agli075_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   
   #end add-point  
END FUNCTION
 
{</section>}
 
{<section id="agli075.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION agli075_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   
   #end add-point     
END FUNCTION
 
{</section>}
 
{<section id="agli075.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION agli075_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="agli075.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION agli075_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="agli075.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION agli075_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="agli075.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION agli075_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="agli075.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION agli075_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " glfa001 = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "glfa_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "glfb_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
 
{</section>}
 
{<section id="agli075.state_change" >}
   
 
{</section>}
 
{<section id="agli075.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION agli075_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_glfb_d.getLength() THEN
         LET g_detail_idx = g_glfb_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_glfb_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_glfb_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="agli075.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION agli075_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
    
   LET l_ac = li_ac
   
   CALL agli075_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
 
{</section>}
 
{<section id="agli075.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION agli075_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="agli075.status_show" >}
PRIVATE FUNCTION agli075_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="agli075.mask_functions" >}
&include "erp/agl/agli075_mask.4gl"
 
{</section>}
 
{<section id="agli075.signature" >}
   
 
{</section>}
 
{<section id="agli075.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION agli075_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_glfa_m.glfa001
   LET g_pk_array[1].column = 'glfa001'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="agli075.other_dialog" readonly="Y" >}
   
 
{</section>}
 
{<section id="agli075.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION agli075_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL agli075_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_glfa_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="agli075.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION agli075_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="agli075.other_function" readonly="Y" >}

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION agli075_set_amt_format()
   DEFINE l_format         STRING
   DEFINE l_str            STRING
   DEFINE l_i              LIKE type_t.num5
   
   #設置單身金額欄位格式
   LET l_format = "---,---,---,--&"
   LET l_str = ""
   FOR l_i=1 TO g_glfa_m.glfa009
       LET l_str = l_str,"&"
   END FOR
   IF NOT cl_null(l_str) THEN
      LET l_format = l_format,'.',l_str
   END IF
   #要设置显示格式的栏位
   LET l_str=''
   FOR l_i =1 TO 50
     IF cl_null(l_str) THEN
        LET l_str="amt",l_i USING "<<"
     ELSE
        LET l_str=l_str,",amt",l_i USING "<<"
     END IF
   END FOR
   CALL cl_set_comp_format(l_str,l_format)
END FUNCTION

################################################################################
# Descriptions...: 抓取取數公式來源和數值取數公式
# Memo...........:
# Usage..........: CALL agli075_get_glfb004_glfb005(p_glfbseq,p_glfbseq1)
# Input parameter: p_glfbseq      行次
#                : p_glfbseq1     列次
# Date & Author..: 2016/04/08 By 02599
# Modify.........:
################################################################################
PRIVATE FUNCTION agli075_get_glfb004_glfb005(p_glfbseq,p_glfbseq1)
   DEFINE p_glfbseq       LIKE glfb_t.glfbseq
   DEFINE p_glfbseq1      LIKE glfb_t.glfbseq1
   
   LET g_glfb004=''
   LET g_glfb005=''
   LET g_glfb011=''
   LET g_glfb012=''
   SELECT glfb004,glfb005,glfb011,glfb012
     INTO g_glfb004,g_glfb005,g_glfb011,g_glfb012
     FROM glfb_t
    WHERE glfbent=g_enterprise AND glfb001=g_glfa_m.glfa001
      AND glfbseq=p_glfbseq AND glfbseq1=p_glfbseq1
END FUNCTION

################################################################################
# Descriptions...: 根据传入的列号，更新每一个单元格资料
# Memo...........:
# Usage..........: CALL agli075_ins_or_upd(p_glfbseq)
#                  RETURNING r_success
# Input parameter: p_glfbseq      行号
# Return code....: r_success      更新结果
# Date & Author..: 2016/04/08 By 02599
# Modify.........:
################################################################################
PRIVATE FUNCTION agli075_ins_or_upd(p_glfbseq)
   DEFINE p_glfbseq     LIKE glfb_t.glfbseq
   DEFINE r_success     LIKE type_t.num5
   DEFINE l_cnt         LIKE type_t.num5
   DEFINE l_glfb        RECORD LIKE glfb_t.*
   DEFINE l_col         LIKE type_t.num5
   DEFINE l_i           LIKE type_t.num5
   DEFINE l_glfb005     LIKE glfb_t.glfb005
   DEFINE l_glfb011     LIKE glfb_t.glfb011
   DEFINE l_glfb012     LIKE glfb_t.glfb012
   
   LET r_success = TRUE
   
   IF cl_null(p_glfbseq) OR p_glfbseq = 0 THEN
      RETURN r_success
   END IF
   
   LET l_col = g_glfb_row.getLength() #列数
   IF l_col = 0 THEN
      RETURN r_success
   END IF
   CALL cl_err_collect_init()
   FOR l_i=1 TO l_col
      #该单元格没有录入资料，不存入数据库
      IF cl_null(g_glfb_row[l_i].glfbseq1) THEN
         CONTINUE FOR
      END IF
      
      LET l_cnt = 0
      SELECT COUNT(*) INTO l_cnt FROM glfb_t
       WHERE glfbent=g_enterprise AND glfb001=g_glfa_m.glfa001
         AND glfbseq=p_glfbseq AND glfbseq1=g_glfb_row[l_i].glfbseq1
      IF l_cnt = 0 THEN
         IF g_glfb_row[l_i].glfb005 IS NULL AND
            g_glfb_row[l_i].glfb011 IS NULL AND 
            g_glfb_row[l_i].glfb012 IS NULL THEN
            CONTINUE FOR
         END IF
         
         IF cl_null(g_glfb_row[l_i].glfb004) THEN
            LET g_glfb_row[l_i].glfb004 = '2'
         END IF
         LET l_glfb.glfbent = g_enterprise
         LET l_glfb.glfb001 = g_glfa_m.glfa001
         LET l_glfb.glfbseq = p_glfbseq
         LET l_glfb.glfbseq1= g_glfb_row[l_i].glfbseq1
         LET l_glfb.glfb004 = g_glfb_row[l_i].glfb004
         LET l_glfb.glfb005 = g_glfb_row[l_i].glfb005
         LET l_glfb.glfb011 = g_glfb_row[l_i].glfb011
         LET l_glfb.glfb012 = g_glfb_row[l_i].glfb012
         
         INSERT INTO glfb_t(glfbent,glfb001,glfbseq,glfbseq1,glfb004,glfb005,glfb011,glfb012) 
         VALUES(l_glfb.glfbent,l_glfb.glfb001,l_glfb.glfbseq,l_glfb.glfbseq1,
                l_glfb.glfb004,l_glfb.glfb005,l_glfb.glfb011,l_glfb.glfb012)
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "insert glfb_t"
            LET g_errparam.popup = FALSE
            CALL cl_err()
            LET r_success=FALSE
         END IF
      ELSE
         #当公式来源，公式，公式属性，计算年度全部为空时，表示这个单元格不设置资料，
         #删除该单元格原先资料
         IF cl_null(g_glfb_row[l_i].glfb004) AND cl_null(g_glfb_row[l_i].glfb005) AND
            cl_null(g_glfb_row[l_i].glfb011) AND cl_null(g_glfb_row[l_i].glfb012) THEN
            DELETE FROM glfb_t 
             WHERE glfbent = g_enterprise AND glfb001 = g_glfa_m.glfa001
               AND glfbseq = p_glfbseq #行次
               AND glfbseq1= g_glfb_row[l_i].glfbseq1 #列次
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "delete glfb_t"
               LET g_errparam.popup = FALSE
               CALL cl_err()
               LET r_success=FALSE
            END IF
         ELSE
            #当公式或者公式属性或者计算年度发生变化时才更新该单元格资料，没有发生变化不更新，减少异动数据库
            SELECT glfb005,glfb011,glfb012 INTO l_glfb005,l_glfb011,l_glfb012 
              FROM glfb_t
             WHERE glfbent=g_enterprise AND glfb001=g_glfa_m.glfa001
               AND glfbseq=p_glfbseq AND glfbseq1=g_glfb_row[l_i].glfbseq1
            IF (l_glfb005 IS NULL AND g_glfb_row[l_i].glfb005 IS NOT NULL) OR
               (l_glfb005 <> g_glfb_row[l_i].glfb005) OR
               (l_glfb011 IS NULL AND g_glfb_row[l_i].glfb011 IS NOT NULL) OR
               (l_glfb011 <> g_glfb_row[l_i].glfb011) OR
               (l_glfb012 IS NULL AND g_glfb_row[l_i].glfb012 IS NOT NULL) OR
               (l_glfb012 <> g_glfb_row[l_i].glfb012) 
               THEN
               IF cl_null(g_glfb_row[l_i].glfb004) THEN
                  LET g_glfb_row[l_i].glfb004 = '2'
               END IF
               UPDATE glfb_t SET glfb004 = g_glfb_row[l_i].glfb004,
                                 glfb005 = g_glfb_row[l_i].glfb005,
                                 glfb011 = g_glfb_row[l_i].glfb011,
                                 glfb012 = g_glfb_row[l_i].glfb012
               WHERE glfbent = g_enterprise AND glfb001 = g_glfa_m.glfa001
                 AND glfbseq = p_glfbseq #行次
                 AND glfbseq1= g_glfb_row[l_i].glfbseq1 #列次
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "std-00009"
                     LET g_errparam.extend = "glfb_t"
                     LET g_errparam.popup = FALSE
                     CALL cl_err()
                     LET r_success=FALSE
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "glfb_t"
                     LET g_errparam.popup = FALSE
                     CALL cl_err()
                     LET r_success=FALSE                    
               END CASE
            END IF
         END IF
      END IF
   END FOR
   CALL cl_err_collect_show()
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 获取每一个单元格资料
# Memo...........:
# Usage..........: CALL agli075_get_row_data(p_glfbseq)
# Input parameter: p_glfbseq      行号
# Return code....: 
# Date & Author..: 2016/04/11 By 02599
# Modify.........:
################################################################################
PRIVATE FUNCTION agli075_get_row_data(p_glfbseq)
   DEFINE p_glfbseq      LIKE glfb_t.glfbseq
   DEFINE l_sql          STRING
   DEFINE l_i            LIKE type_t.num5
   DEFINE l_glfbseq1     LIKE glfb_t.glfbseq1
   DEFINE l_glfb004      LIKE glfb_t.glfb004
   DEFINE l_glfb005      LIKE glfb_t.glfb005
   DEFINE l_glfb011      LIKE glfb_t.glfb011
   DEFINE l_glfb012      LIKE glfb_t.glfb012
   
   #抓取每一个单元格资料
   LET l_sql="SELECT glfbseq1,glfb004,glfb005,glfb011,glfb012 FROM glfb_t",
             " WHERE glfbent=",g_enterprise,
             "   AND glfb001='",g_glfa_m.glfa001,"'",
             "   AND glfbseq=",p_glfbseq
   PREPARE agli075_row_data_pr FROM l_sql
   DECLARE agli075_row_data_cs CURSOR FOR agli075_row_data_pr
   
   CALL g_glfb_row.clear()
   
   FOREACH agli075_row_data_cs INTO l_glfbseq1,l_glfb004,l_glfb005,l_glfb011,l_glfb012
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
      CASE l_glfbseq1
         WHEN 'A'  LET l_i = 1
         WHEN 'B'  LET l_i = 2
         WHEN 'C'  LET l_i = 3
         WHEN 'D'  LET l_i = 4
         WHEN 'E'  LET l_i = 5
         WHEN 'F'  LET l_i = 6
         WHEN 'G'  LET l_i = 7
         WHEN 'H'  LET l_i = 8
         WHEN 'I'  LET l_i = 9
         WHEN 'J'  LET l_i = 10
         WHEN 'K'  LET l_i = 11
         WHEN 'L'  LET l_i = 12
         WHEN 'M'  LET l_i = 13
         WHEN 'N'  LET l_i = 14
         WHEN 'O'  LET l_i = 15
         WHEN 'P'  LET l_i = 16
         WHEN 'Q'  LET l_i = 17
         WHEN 'R'  LET l_i = 18
         WHEN 'S'  LET l_i = 19
         WHEN 'T'  LET l_i = 20
         WHEN 'U'  LET l_i = 21
         WHEN 'V'  LET l_i = 22
         WHEN 'W'  LET l_i = 23
         WHEN 'X'  LET l_i = 24
         WHEN 'Y'  LET l_i = 25
         WHEN 'Z'  LET l_i = 26
         WHEN 'AA'  LET l_i = 27
         WHEN 'AB'  LET l_i = 28
         WHEN 'AC'  LET l_i = 29
         WHEN 'AD'  LET l_i = 30
         WHEN 'AE'  LET l_i = 31
         WHEN 'AF'  LET l_i = 32
         WHEN 'AG'  LET l_i = 33
         WHEN 'AH'  LET l_i = 34
         WHEN 'AI'  LET l_i = 35
         WHEN 'AJ'  LET l_i = 36
         WHEN 'AK'  LET l_i = 37
         WHEN 'AL'  LET l_i = 38
         WHEN 'AM'  LET l_i = 39
         WHEN 'AN'  LET l_i = 40
         WHEN 'AO'  LET l_i = 41
         WHEN 'AP'  LET l_i = 42
         WHEN 'AQ'  LET l_i = 43
         WHEN 'AR'  LET l_i = 44
         WHEN 'AS'  LET l_i = 45
         WHEN 'AT'  LET l_i = 46
         WHEN 'AU'  LET l_i = 47
         WHEN 'AV'  LET l_i = 48
         WHEN 'AW'  LET l_i = 49
         WHEN 'AX'  LET l_i = 50
      END CASE
      LET g_glfb_row[l_i].glfbseq1= l_glfbseq1
      LET g_glfb_row[l_i].glfb004 = l_glfb004
      LET g_glfb_row[l_i].glfb005 = l_glfb005
      LET g_glfb_row[l_i].glfb011 = l_glfb011
      LET g_glfb_row[l_i].glfb012 = l_glfb012
   END FOREACH
   
END FUNCTION

################################################################################
# Descriptions...: 设置单身table不显示title
# Memo...........:
# Usage..........: CALL agli075_add_style()
# Input parameter: 
# Return code....: 
# Date & Author..: 2016/04/11 By 02599
# Modify.........:
################################################################################
PRIVATE FUNCTION agli075_add_style()
   DEFINE lnode_root,lnode_item,lnode_child,lnode_att om.DomNode
   DEFINE llst_styles om.NodeList
   DEFINE li_i SMALLINT

   LET lnode_root = ui.Interface.getRootNode()
   LET llst_styles = lnode_root.selectByTagName("StyleList")
   FOR li_i = 1 TO llst_styles.getLength()
       LET lnode_item = llst_styles.item(li_i)
       LET lnode_child = lnode_item.createChild("Style")   #這邊動態加一個Style節點，等同於<Style>層
       CALL lnode_child.setAttribute("name", "Table.agli075_tablenotitle")   #指定Style的name
       LET lnode_att = lnode_child.createChild("StyleAttribute")   #動態在Style內加一個Style Attribute，等同於<StyleAttribute>層
       CALL lnode_att.setAttribute("name", "headerHidden")   #指定StyleAttribute的name
       CALL lnode_att.setAttribute("value", "yes")   #指定StyleAttribute的value
       EXIT FOR
   END FOR

END FUNCTION

################################################################################
# Descriptions...: 計算金額
# Memo...........:
# Usage..........: CALL agli075_get_amt(p_glfb005,p_glfb012)
#                  RETURNING r_amt
# Input parameter: p_glfb005      公式
#                : p_glfb012      计算年度
# Return code....: r_amt          計算結果
# Date & Author..: 2016/4/12 By 02599
# Modify.........:
################################################################################
PRIVATE FUNCTION agli075_get_amt(p_glfb005,p_glfb012)
   DEFINE p_glfb004         LIKE glfb_t.glfb004
   DEFINE p_glfb005         LIKE glfb_t.glfb005
   DEFINE p_glfb012         LIKE glfb_t.glfb012
   DEFINE r_amt             LIKE type_t.num20_6
   DEFINE l_glfa006         LIKE glfa_t.glfa006
   DEFINE l_success         LIKE type_t.num5
   
  
   IF NOT cl_null(p_glfb005) THEN
      #上一年度
      IF p_glfb012 = '2' THEN
         LET l_glfa006=g_glfa_m.glfa006 - 1
      ELSE
         LET l_glfa006=g_glfa_m.glfa006
      END IF
                          #帳別             #年度     #起始期別        #截止期別         #小數位數           
      CALL s_analy_form_2(g_glfa_m.glfa005,l_glfa006,g_glfa_m.glfa007,g_glfa_m.glfa007,g_glfa_m.glfa009,
                          #單位            #報表模板編號     #計算公式  #法人 #含審計調整傳票否 #傳票狀態
                          g_glfa_m.glfa008,g_glfa_m.glfa001,p_glfb005,'', '', '')
      RETURNING l_success,r_amt
   ELSE
      LET r_amt=''
   END IF 
   RETURN r_amt
END FUNCTION

################################################################################
# Descriptions...: 在离开单身后，更新行次，使行次按照升序排列
# Memo...........:
# Usage..........: CALL agli075_update_glfbseq()
#                  RETURNING r_success
# Input parameter: 
# Return code....: r_success      更新结果TRUE/FALSE
# Date & Author..: 2016/04/15 By 02599
# Modify.........:
################################################################################
PRIVATE FUNCTION agli075_update_glfbseq()
   DEFINE r_success        LIKE type_t.num5
   DEFINE l_max_seq        LIKE glfb_t.glfbseq
   DEFINE l_count          LIKE type_t.num5
   DEFINE l_ac_t           LIKE type_t.num5
   DEFINE l_j              LIKE type_t.num5
   
   LET r_success = TRUE
   
   #最大行次
   SELECT MAX(glfbseq) INTO l_max_seq FROM glfb_t
    WHERE glfbent=g_enterprise AND glfb001=g_glfa_m.glfa001
   #报表没有单身资料时，不用处理
   IF cl_null(l_max_seq) THEN
      RETURN r_success
   END IF
   #记录数组指针位置
   LET l_ac_t = l_ac
   #将数组指针直到最大笔资料
   SELECT COUNT(DISTINCT glfbseq) INTO l_ac FROM glfb_t
    WHERE glfbent=g_enterprise AND glfb001=g_glfa_m.glfa001
#   LET l_ac= g_glfb_d.getLength()
   CALL cl_err_collect_init()
   #采用降序的方式从l_ac由大到小，检查每笔资料的行次glfbseq是否等于l_ac，如果不等，按照更新规格更新行次资料
   #更新规则：首先判断是否存在行次=l_ac的资料，
   #         如果存在行次=l_ac的资料，更新该笔资料行次=最大行次l_max_seq+1，更新当前指针指的行次glfbseq=l_ac
   #         如果不存在，直接更新当前指针指的行次glfbseq=l_ac
   WHILE l_ac > 0 
      IF g_glfb_d[l_ac].glfbseq <> l_ac THEN
         LET l_count = 0
         SELECT COUNT(*) INTO l_count FROM glfb_t
          WHERE glfbent=g_enterprise AND glfb001=g_glfa_m.glfa001
            AND glfbseq=l_ac
         IF l_count > 0 THEN
            #更新行次=l_ac的资料，行次=最大行次l_max_seq+1
            UPDATE glfb_t SET glfbseq = l_max_seq+1
             WHERE glfbent=g_enterprise AND glfb001=g_glfa_m.glfa001
               AND glfbseq=l_ac
            IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "update glfb_t"
               LET g_errparam.popup = FALSE
               CALL cl_err()
               LET r_success=FALSE 
            END IF
            
            #最大行次增加1
            LET l_max_seq = l_max_seq + 1 
            
            #更新行次=g_glfb_d[l_ac].glfbseq的资料，行次=l_ac  
            UPDATE glfb_t SET glfbseq = l_ac
             WHERE glfbent=g_enterprise AND glfb001=g_glfa_m.glfa001
               AND glfbseq=g_glfb_d[l_ac].glfbseq
            IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "update glfb_t"
               LET g_errparam.popup = FALSE
               CALL cl_err()
               LET r_success=FALSE 
            END IF
            
            #在单身数组中找到g_glfb_d[l_ac].glfbseq=l_ac行，将g_glfb_d[l_ac].glfbseq=l_max_seq
            LET l_j = l_ac - 1
            WHILE l_j > 0
               IF g_glfb_d[l_j].glfbseq = l_ac THEN
                  LET g_glfb_d[l_j].glfbseq = l_max_seq
                  EXIT WHILE
               END IF
               LET l_j = l_j - 1
            END WHILE
         ELSE
            #更新行次=g_glfb_d[l_ac].glfbseq的资料，行次=l_ac  
            UPDATE glfb_t SET glfbseq = l_ac
             WHERE glfbent=g_enterprise AND glfb001=g_glfa_m.glfa001
               AND glfbseq=g_glfb_d[l_ac].glfbseq
            IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "update glfb_t"
               LET g_errparam.popup = FALSE
               CALL cl_err()
               LET r_success=FALSE 
            END IF
         END IF
      END IF
      LET l_ac = l_ac - 1
   END WHILE
   LET l_ac = l_ac_t
   CALL cl_err_collect_show()
   RETURN r_success
END FUNCTION

 
{</section>}
 
