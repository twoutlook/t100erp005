#該程式未解開Section, 採用最新樣板產出!
{<section id="aglt502.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0009(2015-04-02 09:15:31), PR版次:0009(2016-12-21 09:36:49)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000074
#+ Filename...: aglt502
#+ Description: 合併報表調整項目-個體公司餘額調整維護作業
#+ Creator....: 03080(2015-03-27 10:38:28)
#+ Modifier...: 03080 -SD/PR- 08171
 
{</section>}
 
{<section id="aglt502.global" >}
#應用 t01 樣板自動產生(Version:79)
#add-point:填寫註解說明 name="global.memo" 
#151113-00002#8   151223 By Jessy 合併傳票在刪除傳票時(aglt506,aglt522,aglt524)，要回寫來源作業(aglt505,aglt521,aglt523)的傳票欄位更新為Null
#140314-00001#38  151230 By sakura 新增列印功能
#160321-00016#31  160325 By Jessy  修正azzi920重複定義之錯誤訊息
#160705-00042#8   160712 By sakura 程式中寫死g_prog部分改寫MATCHES方式
#160816-00068#6   160816 By earl   調整transaction
#160913-00017#3   160921 By 07900  AGL模组调整交易客商开窗
#161021-00037#4   161024 By 06821  組織類型與職能開窗調整
#161111-00028#9   161124 by 02481  标准程式定义采用宣告模式,弃用.*写法
#160824-00007#261 161221 By 08171  新舊值調整
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_gldp_m        RECORD
       gldp005 LIKE gldp_t.gldp005, 
   gldp006 LIKE gldp_t.gldp006, 
   gldp007 LIKE gldp_t.gldp007, 
   gldpld LIKE gldp_t.gldpld, 
   gldpld_desc LIKE type_t.chr80, 
   gldp001 LIKE gldp_t.gldp001, 
   gldp001_desc LIKE type_t.chr80, 
   gldp002 LIKE gldp_t.gldp002, 
   gldp002_desc LIKE type_t.chr80, 
   gldpdocno LIKE gldp_t.gldpdocno, 
   gldpdocdt LIKE gldp_t.gldpdocdt, 
   gldp003 LIKE gldp_t.gldp003, 
   gldp004 LIKE gldp_t.gldp004, 
   gldp008 LIKE gldp_t.gldp008, 
   gldp011 LIKE gldp_t.gldp011, 
   gldp014 LIKE gldp_t.gldp014, 
   gldp016 LIKE gldp_t.gldp016, 
   gldp009 LIKE gldp_t.gldp009, 
   gldp010 LIKE gldp_t.gldp010, 
   gldp012 LIKE gldp_t.gldp012, 
   gldp013 LIKE gldp_t.gldp013, 
   gldp015 LIKE gldp_t.gldp015, 
   gldpstus LIKE gldp_t.gldpstus, 
   gldpownid LIKE gldp_t.gldpownid, 
   gldpownid_desc LIKE type_t.chr80, 
   gldpowndp LIKE gldp_t.gldpowndp, 
   gldpowndp_desc LIKE type_t.chr80, 
   gldpcrtid LIKE gldp_t.gldpcrtid, 
   gldpcrtid_desc LIKE type_t.chr80, 
   gldpcrtdp LIKE gldp_t.gldpcrtdp, 
   gldpcrtdp_desc LIKE type_t.chr80, 
   gldpcrtdt LIKE gldp_t.gldpcrtdt, 
   gldpmodid LIKE gldp_t.gldpmodid, 
   gldpmodid_desc LIKE type_t.chr80, 
   gldpmoddt LIKE gldp_t.gldpmoddt, 
   gldpcnfid LIKE gldp_t.gldpcnfid, 
   gldpcnfid_desc LIKE type_t.chr80, 
   gldpcnfdt LIKE gldp_t.gldpcnfdt, 
   gldppstid LIKE gldp_t.gldppstid, 
   gldppstid_desc LIKE type_t.chr80, 
   gldppstdt LIKE gldp_t.gldppstdt, 
   l_gldq003 LIKE type_t.chr100, 
   l_gldq003_desc LIKE type_t.chr80, 
   l_gldq004 LIKE type_t.chr100, 
   l_gldq004_desc LIKE type_t.chr80, 
   l_gldq005 LIKE type_t.chr100, 
   l_gldq005_desc LIKE type_t.chr80, 
   l_gldq006 LIKE type_t.chr100, 
   l_gldq006_desc LIKE type_t.chr80, 
   l_gldq007 LIKE type_t.chr100, 
   l_gldq007_desc LIKE type_t.chr80, 
   l_gldq008 LIKE type_t.chr100, 
   l_gldq008_desc LIKE type_t.chr80, 
   l_gldq009 LIKE type_t.chr100, 
   l_gldq009_desc LIKE type_t.chr80, 
   l_gldq010 LIKE type_t.chr100, 
   l_gldq010_desc LIKE type_t.chr80, 
   l_gldq011 LIKE type_t.chr100, 
   l_gldq012 LIKE type_t.chr100, 
   l_gldq012_desc LIKE type_t.chr80, 
   l_gldq013 LIKE type_t.chr100, 
   l_gldq013_desc LIKE type_t.chr80, 
   l_gldq014 LIKE type_t.chr100, 
   l_gldq014_desc LIKE type_t.chr80, 
   l_gldq015 LIKE type_t.chr100, 
   l_gldq015_desc LIKE type_t.chr80, 
   l_gldq016 LIKE type_t.chr100, 
   l_gldq016_desc LIKE type_t.chr80
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_gldq_d        RECORD
       gldqseq LIKE gldq_t.gldqseq, 
   gldq023 LIKE gldq_t.gldq023, 
   gldq001 LIKE gldq_t.gldq001, 
   gldq001_desc LIKE type_t.chr100, 
   gldq017 LIKE gldq_t.gldq017, 
   gldq018 LIKE gldq_t.gldq018, 
   gldq019 LIKE gldq_t.gldq019, 
   gldq020 LIKE gldq_t.gldq020, 
   gldq021 LIKE gldq_t.gldq021, 
   gldq022 LIKE gldq_t.gldq022, 
   gldq003 LIKE gldq_t.gldq003, 
   gldq004 LIKE gldq_t.gldq004, 
   gldq005 LIKE gldq_t.gldq005, 
   gldq006 LIKE gldq_t.gldq006, 
   gldq007 LIKE gldq_t.gldq007, 
   gldq008 LIKE gldq_t.gldq008, 
   gldq009 LIKE gldq_t.gldq009, 
   gldq010 LIKE gldq_t.gldq010, 
   gldq011 LIKE gldq_t.gldq011, 
   gldq012 LIKE gldq_t.gldq012, 
   gldq013 LIKE gldq_t.gldq013, 
   gldq014 LIKE gldq_t.gldq014, 
   gldq015 LIKE gldq_t.gldq015, 
   gldq016 LIKE gldq_t.gldq016
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_gldpdocno LIKE gldp_t.gldpdocno
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE g_sfin3007 LIKE gldp_t.gldpdocdt
DEFINE g_progtype LIKE gldp_t.gldp006
DEFINE g_glaa     RECORD
                  glaa001   LIKE glaa_t.glaa001,
                  glaa015   LIKE glaa_t.glaa015,
                  glaa016   LIKE glaa_t.glaa016,
                  glaa019   LIKE glaa_t.glaa019,
                  glaa020   LIKE glaa_t.glaa020,
                  glaa004   LIKE glaa_t.glaa004,
                  glaa024   LIKE glaa_t.glaa024
                  END RECORD
DEFINE g_gldq_ar DYNAMIC ARRAY OF RECORD
          chr       LIKE type_t.chr1000,
          dat       LIKE type_t.dat
          END RECORD
DEFINE g_glaald     LIKE glaa_t.glaald     #放入合併帳或帳套
#161111-00028#9---modify---begin----------  
#DEFINE g_glad            RECORD LIKE glad_t.*
DEFINE g_glad RECORD  #帳套科目管理設定檔
       gladent LIKE glad_t.gladent, #企業編號
       gladownid LIKE glad_t.gladownid, #資料所有者
       gladowndp LIKE glad_t.gladowndp, #資料所屬部門
       gladcrtid LIKE glad_t.gladcrtid, #資料建立者
       gladcrtdp LIKE glad_t.gladcrtdp, #資料建立部門
       gladcrtdt LIKE glad_t.gladcrtdt, #資料創建日
       gladmodid LIKE glad_t.gladmodid, #資料修改者
       gladmoddt LIKE glad_t.gladmoddt, #最近修改日
       gladstus LIKE glad_t.gladstus, #狀態碼
       gladld LIKE glad_t.gladld, #帳套
       glad001 LIKE glad_t.glad001, #會計科目編號
       glad002 LIKE glad_t.glad002, #是否按餘額類型產生分錄
       glad003 LIKE glad_t.glad003, #啟用傳票項次細項立沖
       glad004 LIKE glad_t.glad004, #傳票項次異動別
       glad005 LIKE glad_t.glad005, #是否啟用數量金額式
       glad006 LIKE glad_t.glad006, #借方現金變動碼
       glad007 LIKE glad_t.glad007, #啟用部門管理
       glad008 LIKE glad_t.glad008, #啟用利潤成本管理
       glad009 LIKE glad_t.glad009, #啟用區域管理
       glad010 LIKE glad_t.glad010, #啟用收付款客商管理
       glad011 LIKE glad_t.glad011, #啟用客群管理
       glad012 LIKE glad_t.glad012, #啟用產品類別管理
       glad013 LIKE glad_t.glad013, #啟用人員管理
       glad014 LIKE glad_t.glad014, #no use
       glad015 LIKE glad_t.glad015, #啟用專案管理
       glad016 LIKE glad_t.glad016, #啟用WBS管理
       glad017 LIKE glad_t.glad017, #啟用自由核算項一
       glad0171 LIKE glad_t.glad0171, #自由核算項一類型編號
       glad0172 LIKE glad_t.glad0172, #自由核算項一控制方式
       glad018 LIKE glad_t.glad018, #啟用自由核算項二
       glad0181 LIKE glad_t.glad0181, #自由核算項二類型編號
       glad0182 LIKE glad_t.glad0182, #自由核算項二控制方式
       glad019 LIKE glad_t.glad019, #啟用自由核算項三
       glad0191 LIKE glad_t.glad0191, #自由核算項三類型編號
       glad0192 LIKE glad_t.glad0192, #自由核算項三控制方式
       glad020 LIKE glad_t.glad020, #啟用自由核算項四
       glad0201 LIKE glad_t.glad0201, #自由核算項四類型編號
       glad0202 LIKE glad_t.glad0202, #自由核算項四控制方式
       glad021 LIKE glad_t.glad021, #啟用自由核算項五
       glad0211 LIKE glad_t.glad0211, #自由核算項五類型編號
       glad0212 LIKE glad_t.glad0212, #自由核算項五控制方式
       glad022 LIKE glad_t.glad022, #啟用自由核算項六
       glad0221 LIKE glad_t.glad0221, #自由核算項六類型編號
       glad0222 LIKE glad_t.glad0222, #自由核算項六控制方式
       glad023 LIKE glad_t.glad023, #啟用自由核算項七
       glad0231 LIKE glad_t.glad0231, #自由核算項七類型編號
       glad0232 LIKE glad_t.glad0232, #自由核算項七控制方式
       glad024 LIKE glad_t.glad024, #啟用自由核算項八
       glad0241 LIKE glad_t.glad0241, #自由核算項八類型編號
       glad0242 LIKE glad_t.glad0242, #自由核算項八控制方式
       glad025 LIKE glad_t.glad025, #啟用自由核算項九
       glad0251 LIKE glad_t.glad0251, #自由核算項九類型編號
       glad0252 LIKE glad_t.glad0252, #自由核算項九控制方式
       glad026 LIKE glad_t.glad026, #啟用自由核算項十
       glad0261 LIKE glad_t.glad0261, #自由核算項十類型編號
       glad0262 LIKE glad_t.glad0262, #自由核算項十控制方式
       glad027 LIKE glad_t.glad027, #啟用帳款客商管理
       glad030 LIKE glad_t.glad030, #是否進行預算管控
       glad031 LIKE glad_t.glad031, #啟用經營方式管理
       glad032 LIKE glad_t.glad032, #啟用渠道管理
       glad033 LIKE glad_t.glad033, #啟用品牌管理
       glad034 LIKE glad_t.glad034, #科目做多幣別管理
       glad035 LIKE glad_t.glad035, #是否是子系統科目
       glad036 LIKE glad_t.glad036  #貸方現金變動碼
       END RECORD
#161111-00028#9---modify---end----------  
DEFINE g_aglt501_01 DYNAMIC ARRAY OF RECORD
          chr       LIKE type_t.chr1000,
          dat       LIKE type_t.dat
          END RECORD
          
DEFINE g_gldp005    LIKE gldp_t.gldp005     #來源碼
#end add-point
       
#模組變數(Module Variables)
DEFINE g_gldp_m          type_g_gldp_m
DEFINE g_gldp_m_t        type_g_gldp_m
DEFINE g_gldp_m_o        type_g_gldp_m
DEFINE g_gldp_m_mask_o   type_g_gldp_m #轉換遮罩前資料
DEFINE g_gldp_m_mask_n   type_g_gldp_m #轉換遮罩後資料
 
   DEFINE g_gldpdocno_t LIKE gldp_t.gldpdocno
 
 
DEFINE g_gldq_d          DYNAMIC ARRAY OF type_g_gldq_d
DEFINE g_gldq_d_t        type_g_gldq_d
DEFINE g_gldq_d_o        type_g_gldq_d
DEFINE g_gldq_d_mask_o   DYNAMIC ARRAY OF type_g_gldq_d #轉換遮罩前資料
DEFINE g_gldq_d_mask_n   DYNAMIC ARRAY OF type_g_gldq_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="aglt502.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("agl","")
 
   #add-point:作業初始化 name="main.init"
   
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT gldp005,gldp006,gldp007,gldpld,'',gldp001,'',gldp002,'',gldpdocno,gldpdocdt, 
       gldp003,gldp004,gldp008,gldp011,gldp014,gldp016,gldp009,gldp010,gldp012,gldp013,gldp015,gldpstus, 
       gldpownid,'',gldpowndp,'',gldpcrtid,'',gldpcrtdp,'',gldpcrtdt,gldpmodid,'',gldpmoddt,gldpcnfid, 
       '',gldpcnfdt,gldppstid,'',gldppstdt,'','','','','','','','','','','','','','','','','','','', 
       '','','','','','','',''", 
                      " FROM gldp_t",
                      " WHERE gldpent= ? AND gldpdocno=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aglt502_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.gldp005,t0.gldp006,t0.gldp007,t0.gldpld,t0.gldp001,t0.gldp002,t0.gldpdocno, 
       t0.gldpdocdt,t0.gldp003,t0.gldp004,t0.gldp008,t0.gldp011,t0.gldp014,t0.gldp016,t0.gldp009,t0.gldp010, 
       t0.gldp012,t0.gldp013,t0.gldp015,t0.gldpstus,t0.gldpownid,t0.gldpowndp,t0.gldpcrtid,t0.gldpcrtdp, 
       t0.gldpcrtdt,t0.gldpmodid,t0.gldpmoddt,t0.gldpcnfid,t0.gldpcnfdt,t0.gldppstid,t0.gldppstdt,t1.ooag011 , 
       t2.ooefl003 ,t3.ooag011 ,t4.ooefl003 ,t5.ooag011 ,t6.ooag011 ,t7.ooag011",
               " FROM gldp_t t0",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent="||g_enterprise||" AND t1.ooag001=t0.gldpownid  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=t0.gldpowndp AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent="||g_enterprise||" AND t3.ooag001=t0.gldpcrtid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent="||g_enterprise||" AND t4.ooefl001=t0.gldpcrtdp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent="||g_enterprise||" AND t5.ooag001=t0.gldpmodid  ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent="||g_enterprise||" AND t6.ooag001=t0.gldpcnfid  ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent="||g_enterprise||" AND t7.ooag001=t0.gldppstid  ",
 
               " WHERE t0.gldpent = " ||g_enterprise|| " AND t0.gldpdocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE aglt502_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aglt502 WITH FORM cl_ap_formpath("agl",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aglt502_init()   
 
      #進入選單 Menu (="N")
      CALL aglt502_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aglt502
      
   END IF 
   
   CLOSE aglt502_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="aglt502.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aglt502_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('gldpstus','13','N,Y,A,D,R,W,X')
 
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1',","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   
   LET g_progtype = g_argv[01]    #之後取參數1
   IF NOT cl_null(g_progtype)THEN
      CALL cl_set_combo_scc_part('gldp006','9973',g_progtype)    #沖銷調整類型
   END IF
   
   CASE
      WHEN g_progtype = 'M'
         LET g_gldp005 = '1'
      WHEN g_progtype = '8'
         LET g_gldp005 = '1'      
      WHEN g_progtype = '9'
         LET g_gldp005 = '1'
      WHEN g_progtype = 'U'
         LET g_gldp005 = '1'
      WHEN g_progtype = 'V'
         LET g_gldp005 = '1'
      WHEN g_progtype = 'W'
         LET g_gldp005 = '1'
      
      WHEN g_progtype = '4'
         LET g_gldp005 = '2'
      WHEN g_progtype = '3'
         LET g_gldp005 = '2'
      WHEN g_progtype = '5'
         LET g_gldp005 = '2'
      WHEN g_progtype = '7'
         LET g_gldp005 = '2'
      WHEN g_progtype = '1'
         LET g_gldp005 = '2'
      WHEN g_progtype = '2'
         LET g_gldp005 = '2'
      
      OTHERWISE
         IF cl_null(g_progtype)THEN
            #160705-00042#8 160715 by sakura mark(S)            
            #CASE
            #   WHEN g_prog = 'aglt535'
            #160705-00042#8 160715 by sakura mark(E)
            #160705-00042#8 160715 by sakura add(S)               
            CASE
               WHEN g_prog MATCHES 'aglt535'
            #160705-00042#8 160715 by sakura add(E)               
                  LET g_gldp005 = '3'
               #WHEN g_prog = 'aglt540'        #160705-00042#8 160715 by sakura mark
               WHEN g_prog MATCHES 'aglt540'   #160705-00042#8 160715 by sakura add
                  LET g_gldp005 = '4'
            END CASE
         END IF
   END CASE
   CALL s_fin_set_comp_scc('gldp003','43')   #年度
   CALL s_fin_set_comp_scc('gldp004','111')  #期別
   CALL cl_set_combo_scc('l_gldq011','6013')
   CALL cl_set_combo_scc_part('gldp005','9974',g_gldp005)    #來源碼
   CALL aglt502_set_prog_visible()
   #end add-point
   
   #初始化搜尋條件
   CALL aglt502_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="aglt502.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION aglt502_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL aglt502_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_gldp_m.* TO NULL
         CALL g_gldq_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL aglt502_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL aglt502_fetch('') # reload data
               LET l_ac = 1
               CALL aglt502_ui_detailshow() #Setting the current row 
         
               CALL aglt502_idx_chk()
               #NEXT FIELD gldqseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_gldq_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL aglt502_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               CALL aglt502_otherdetail_show(l_ac)
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL aglt502_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL aglt502_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL aglt502_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL aglt502_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL aglt502_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL aglt502_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL aglt502_set_act_visible()   
            CALL aglt502_set_act_no_visible()
            IF NOT (g_gldp_m.gldpdocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " gldpent = " ||g_enterprise|| " AND",
                                  " gldpdocno = '", g_gldp_m.gldpdocno, "' "
 
               #填到對應位置
               CALL aglt502_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:3)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status name="menu.bpm_status"
            
            #END add-point
 
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "gldp_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "gldq_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL aglt502_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "gldp_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "gldq_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL aglt502_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code = "-100" 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL aglt502_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               
               #end add-point
               CALL aglt502_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL aglt502_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aglt502_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL aglt502_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aglt502_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL aglt502_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aglt502_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL aglt502_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aglt502_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL aglt502_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aglt502_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_gldq_d)
                  LET g_export_id[1]   = "s_detail1"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD gldqseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aglt502_modify()
               #add-point:ON ACTION modify name="menu.modify"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aglt502_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aglt502_delete()
               #add-point:ON ACTION delete name="menu.delete"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aglt502_insert()
               #add-point:ON ACTION insert name="menu.insert"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               #140314-00001#38(S)
               IF cl_null(g_gldp_m.gldpdocno) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = ""
                  LET g_errparam.code   = "std-00003"
                  LET g_errparam.popup  = FALSE
                  CALL cl_err()
                  EXIT DIALOG
               END IF
               LET g_rep_wc= " gldpent = ",g_enterprise," AND gldpdocno = '",g_gldp_m.gldpdocno,"'"
               #140314-00001#38(E)
               #END add-point
               &include "erp/agl/aglt502_rep.4gl"
               #add-point:ON ACTION output.after name="menu.after_output"
 
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION quickprint
            LET g_action_choice="quickprint"
            IF cl_auth_chk_act("quickprint") THEN
               
               #add-point:ON ACTION quickprint name="menu.quickprint"
               #140314-00001#38(S)
               IF cl_null(g_gldp_m.gldpdocno) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = ""
                  LET g_errparam.code   = "std-00003"
                  LET g_errparam.popup  = FALSE
                  CALL cl_err()
                  EXIT DIALOG
               END IF
               LET g_rep_wc= " gldpent = ",g_enterprise," AND gldpdocno = '",g_gldp_m.gldpdocno,"'"
               #140314-00001#38(E)
               #END add-point
               &include "erp/agl/aglt502_rep.4gl"
               #add-point:ON ACTION quickprint.after name="menu.after_quickprint"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL aglt502_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aglt502_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
 
 
 
 
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL aglt502_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aglt502_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aglt502_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow(g_gldp_m.gldpdocdt)
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
 
      #(ver:79) ---add start---
      #add-point:ui_dialog段 after dialog name="ui_dialog.exit_dialog"
      
      #end add-point
      #(ver:79) --- add end ---
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
 
{</section>}
 
{<section id="aglt502.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION aglt502_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT gldpdocno ",
                      " FROM gldp_t ",
                      " ",
                      " LEFT JOIN gldq_t ON gldqent = gldpent AND gldpdocno = gldqdocno ", "  ",
                      #add-point:browser_fill段sql(gldq_t1) name="browser_fill.cnt.join.}"
                      
                      #end add-point
 
 
                      " ", 
                      " ", 
 
 
                      " WHERE gldpent = " ||g_enterprise|| " AND gldqent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("gldp_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT gldpdocno ",
                      " FROM gldp_t ", 
                      "  ",
                      "  ",
                      " WHERE gldpent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("gldp_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code = 9035 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_gldp_m.* TO NULL
      CALL g_gldq_d.clear()        
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.gldpdocno Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.gldpstus,t0.gldpdocno ",
                  " FROM gldp_t t0",
                  "  ",
                  "  LEFT JOIN gldq_t ON gldqent = gldpent AND gldpdocno = gldqdocno ", "  ", 
                  #add-point:browser_fill段sql(gldq_t1) name="browser_fill.join.gldq_t1"
                  
                  #end add-point
 
 
                  " ", 
 
 
                  
                  " WHERE t0.gldpent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("gldp_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.gldpstus,t0.gldpdocno ",
                  " FROM gldp_t t0",
                  "  ",
                  
                  " WHERE t0.gldpent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("gldp_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   
   #end add-point
   LET g_sql = g_sql, " ORDER BY gldpdocno ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"gldp_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_gldpdocno
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         
         #end add-point
      
         #遮罩相關處理
         CALL aglt502_browser_mask()
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_gldpdocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
 
END FUNCTION
 
{</section>}
 
{<section id="aglt502.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION aglt502_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_gldp_m.gldpdocno = g_browser[g_current_idx].b_gldpdocno   
 
   EXECUTE aglt502_master_referesh USING g_gldp_m.gldpdocno INTO g_gldp_m.gldp005,g_gldp_m.gldp006,g_gldp_m.gldp007, 
       g_gldp_m.gldpld,g_gldp_m.gldp001,g_gldp_m.gldp002,g_gldp_m.gldpdocno,g_gldp_m.gldpdocdt,g_gldp_m.gldp003, 
       g_gldp_m.gldp004,g_gldp_m.gldp008,g_gldp_m.gldp011,g_gldp_m.gldp014,g_gldp_m.gldp016,g_gldp_m.gldp009, 
       g_gldp_m.gldp010,g_gldp_m.gldp012,g_gldp_m.gldp013,g_gldp_m.gldp015,g_gldp_m.gldpstus,g_gldp_m.gldpownid, 
       g_gldp_m.gldpowndp,g_gldp_m.gldpcrtid,g_gldp_m.gldpcrtdp,g_gldp_m.gldpcrtdt,g_gldp_m.gldpmodid, 
       g_gldp_m.gldpmoddt,g_gldp_m.gldpcnfid,g_gldp_m.gldpcnfdt,g_gldp_m.gldppstid,g_gldp_m.gldppstdt, 
       g_gldp_m.gldpownid_desc,g_gldp_m.gldpowndp_desc,g_gldp_m.gldpcrtid_desc,g_gldp_m.gldpcrtdp_desc, 
       g_gldp_m.gldpmodid_desc,g_gldp_m.gldpcnfid_desc,g_gldp_m.gldppstid_desc
   
   CALL aglt502_gldp_t_mask()
   CALL aglt502_show()
      
END FUNCTION
 
{</section>}
 
{<section id="aglt502.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION aglt502_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="aglt502.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aglt502_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_gldpdocno = g_gldp_m.gldpdocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="aglt502.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION aglt502_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   DEFINE l_wc2_dummy STRING
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_gldp_m.* TO NULL
   CALL g_gldq_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON gldp005,gldp006,gldp007,gldpld,gldp001,gldp002,gldpdocno,gldpdocdt,gldp003, 
          gldp004,gldp008,gldp011,gldp014,gldp016,gldp009,gldp010,gldp012,gldp013,gldp015,gldpstus,gldpownid, 
          gldpowndp,gldpcrtid,gldpcrtdp,gldpcrtdt,gldpmodid,gldpmoddt,gldpcnfid,gldpcnfdt,gldppstid, 
          gldppstdt,l_gldq005_desc,l_gldq006_desc,l_gldq007_desc,l_gldq008_desc,l_gldq009_desc,l_gldq010_desc, 
          l_gldq012_desc,l_gldq013_desc,l_gldq014_desc,l_gldq015_desc,l_gldq016_desc
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<gldpcrtdt>>----
         AFTER FIELD gldpcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<gldpmoddt>>----
         AFTER FIELD gldpmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<gldpcnfdt>>----
         AFTER FIELD gldpcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<gldppstdt>>----
         AFTER FIELD gldppstdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
 
            
         #一般欄位開窗相關處理    
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldp005
            #add-point:BEFORE FIELD gldp005 name="construct.b.gldp005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldp005
            
            #add-point:AFTER FIELD gldp005 name="construct.a.gldp005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gldp005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldp005
            #add-point:ON ACTION controlp INFIELD gldp005 name="construct.c.gldp005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldp006
            #add-point:BEFORE FIELD gldp006 name="construct.b.gldp006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldp006
            
            #add-point:AFTER FIELD gldp006 name="construct.a.gldp006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gldp006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldp006
            #add-point:ON ACTION controlp INFIELD gldp006 name="construct.c.gldp006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldp007
            #add-point:BEFORE FIELD gldp007 name="construct.b.gldp007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldp007
            
            #add-point:AFTER FIELD gldp007 name="construct.a.gldp007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gldp007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldp007
            #add-point:ON ACTION controlp INFIELD gldp007 name="construct.c.gldp007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldpld
            #add-point:BEFORE FIELD gldpld name="construct.b.gldpld"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldpld
            
            #add-point:AFTER FIELD gldpld name="construct.a.gldpld"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gldpld
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldpld
            #add-point:ON ACTION controlp INFIELD gldpld name="construct.c.gldpld"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_user                                 #人員權限
            LET g_qryparam.arg2 = g_dept                                 #部門權限
            LET g_qryparam.where = " glaald IN (SELECT gldbld FROM gldb_t WHERE gldbent = '",g_enterprise,"') "
            CALL q_authorised_ld()
            DISPLAY g_qryparam.return1 TO gldpld
            NEXT FIELD gldpld
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldp001
            #add-point:BEFORE FIELD gldp001 name="construct.b.gldp001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldp001
            
            #add-point:AFTER FIELD gldp001 name="construct.a.gldp001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gldp001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldp001
            #add-point:ON ACTION controlp INFIELD gldp001 name="construct.c.gldp001"
           INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_glda001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gldp001  #顯示到畫面上
            NEXT FIELD gldp001
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldp002
            #add-point:BEFORE FIELD gldp002 name="construct.b.gldp002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldp002
            
            #add-point:AFTER FIELD gldp002 name="construct.a.gldp002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gldp002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldp002
            #add-point:ON ACTION controlp INFIELD gldp002 name="construct.c.gldp002"
           INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept
            CALL q_authorised_ld()
            DISPLAY g_qryparam.return1 TO gldp002
            NEXT FIELD gldp002
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldpdocno
            #add-point:BEFORE FIELD gldpdocno name="construct.b.gldpdocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldpdocno
            
            #add-point:AFTER FIELD gldpdocno name="construct.a.gldpdocno"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gldpdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldpdocno
            #add-point:ON ACTION controlp INFIELD gldpdocno name="construct.c.gldpdocno"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            
            LET g_qryparam.where = "gldp005 = '",g_gldp005,"' "
            IF NOT cl_null(g_progtype)THEN
               LET g_qryparam.where = g_qryparam.where, " AND gldp006 = '",g_progtype,"' "
            END IF
            CALL q_gldpdocno()
            DISPLAY g_qryparam.return1 TO gldpdocno
            NEXT FIELD gldpdocno
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldpdocdt
            #add-point:BEFORE FIELD gldpdocdt name="construct.b.gldpdocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldpdocdt
            
            #add-point:AFTER FIELD gldpdocdt name="construct.a.gldpdocdt"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gldpdocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldpdocdt
            #add-point:ON ACTION controlp INFIELD gldpdocdt name="construct.c.gldpdocdt"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldp003
            #add-point:BEFORE FIELD gldp003 name="construct.b.gldp003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldp003
            
            #add-point:AFTER FIELD gldp003 name="construct.a.gldp003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gldp003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldp003
            #add-point:ON ACTION controlp INFIELD gldp003 name="construct.c.gldp003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldp004
            #add-point:BEFORE FIELD gldp004 name="construct.b.gldp004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldp004
            
            #add-point:AFTER FIELD gldp004 name="construct.a.gldp004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gldp004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldp004
            #add-point:ON ACTION controlp INFIELD gldp004 name="construct.c.gldp004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldp008
            #add-point:BEFORE FIELD gldp008 name="construct.b.gldp008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldp008
            
            #add-point:AFTER FIELD gldp008 name="construct.a.gldp008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gldp008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldp008
            #add-point:ON ACTION controlp INFIELD gldp008 name="construct.c.gldp008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldp011
            #add-point:BEFORE FIELD gldp011 name="construct.b.gldp011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldp011
            
            #add-point:AFTER FIELD gldp011 name="construct.a.gldp011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gldp011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldp011
            #add-point:ON ACTION controlp INFIELD gldp011 name="construct.c.gldp011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldp014
            #add-point:BEFORE FIELD gldp014 name="construct.b.gldp014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldp014
            
            #add-point:AFTER FIELD gldp014 name="construct.a.gldp014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gldp014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldp014
            #add-point:ON ACTION controlp INFIELD gldp014 name="construct.c.gldp014"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldp016
            #add-point:BEFORE FIELD gldp016 name="construct.b.gldp016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldp016
            
            #add-point:AFTER FIELD gldp016 name="construct.a.gldp016"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gldp016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldp016
            #add-point:ON ACTION controlp INFIELD gldp016 name="construct.c.gldp016"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldp009
            #add-point:BEFORE FIELD gldp009 name="construct.b.gldp009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldp009
            
            #add-point:AFTER FIELD gldp009 name="construct.a.gldp009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gldp009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldp009
            #add-point:ON ACTION controlp INFIELD gldp009 name="construct.c.gldp009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldp010
            #add-point:BEFORE FIELD gldp010 name="construct.b.gldp010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldp010
            
            #add-point:AFTER FIELD gldp010 name="construct.a.gldp010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gldp010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldp010
            #add-point:ON ACTION controlp INFIELD gldp010 name="construct.c.gldp010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldp012
            #add-point:BEFORE FIELD gldp012 name="construct.b.gldp012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldp012
            
            #add-point:AFTER FIELD gldp012 name="construct.a.gldp012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gldp012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldp012
            #add-point:ON ACTION controlp INFIELD gldp012 name="construct.c.gldp012"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldp013
            #add-point:BEFORE FIELD gldp013 name="construct.b.gldp013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldp013
            
            #add-point:AFTER FIELD gldp013 name="construct.a.gldp013"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gldp013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldp013
            #add-point:ON ACTION controlp INFIELD gldp013 name="construct.c.gldp013"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldp015
            #add-point:BEFORE FIELD gldp015 name="construct.b.gldp015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldp015
            
            #add-point:AFTER FIELD gldp015 name="construct.a.gldp015"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gldp015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldp015
            #add-point:ON ACTION controlp INFIELD gldp015 name="construct.c.gldp015"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldpstus
            #add-point:BEFORE FIELD gldpstus name="construct.b.gldpstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldpstus
            
            #add-point:AFTER FIELD gldpstus name="construct.a.gldpstus"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gldpstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldpstus
            #add-point:ON ACTION controlp INFIELD gldpstus name="construct.c.gldpstus"
            
            #END add-point
 
 
         #Ctrlp:construct.c.gldpownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldpownid
            #add-point:ON ACTION controlp INFIELD gldpownid name="construct.c.gldpownid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gldpownid  #顯示到畫面上
            NEXT FIELD gldpownid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldpownid
            #add-point:BEFORE FIELD gldpownid name="construct.b.gldpownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldpownid
            
            #add-point:AFTER FIELD gldpownid name="construct.a.gldpownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gldpowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldpowndp
            #add-point:ON ACTION controlp INFIELD gldpowndp name="construct.c.gldpowndp"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gldpowndp  #顯示到畫面上
            NEXT FIELD gldpowndp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldpowndp
            #add-point:BEFORE FIELD gldpowndp name="construct.b.gldpowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldpowndp
            
            #add-point:AFTER FIELD gldpowndp name="construct.a.gldpowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gldpcrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldpcrtid
            #add-point:ON ACTION controlp INFIELD gldpcrtid name="construct.c.gldpcrtid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gldpcrtid  #顯示到畫面上
            NEXT FIELD gldpcrtid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldpcrtid
            #add-point:BEFORE FIELD gldpcrtid name="construct.b.gldpcrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldpcrtid
            
            #add-point:AFTER FIELD gldpcrtid name="construct.a.gldpcrtid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.gldpcrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldpcrtdp
            #add-point:ON ACTION controlp INFIELD gldpcrtdp name="construct.c.gldpcrtdp"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gldpcrtdp  #顯示到畫面上
            NEXT FIELD gldpcrtdp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldpcrtdp
            #add-point:BEFORE FIELD gldpcrtdp name="construct.b.gldpcrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldpcrtdp
            
            #add-point:AFTER FIELD gldpcrtdp name="construct.a.gldpcrtdp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldpcrtdt
            #add-point:BEFORE FIELD gldpcrtdt name="construct.b.gldpcrtdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.gldpmodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldpmodid
            #add-point:ON ACTION controlp INFIELD gldpmodid name="construct.c.gldpmodid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gldpmodid  #顯示到畫面上
            NEXT FIELD gldpmodid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldpmodid
            #add-point:BEFORE FIELD gldpmodid name="construct.b.gldpmodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldpmodid
            
            #add-point:AFTER FIELD gldpmodid name="construct.a.gldpmodid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldpmoddt
            #add-point:BEFORE FIELD gldpmoddt name="construct.b.gldpmoddt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.gldpcnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldpcnfid
            #add-point:ON ACTION controlp INFIELD gldpcnfid name="construct.c.gldpcnfid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gldpcnfid  #顯示到畫面上
            NEXT FIELD gldpcnfid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldpcnfid
            #add-point:BEFORE FIELD gldpcnfid name="construct.b.gldpcnfid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldpcnfid
            
            #add-point:AFTER FIELD gldpcnfid name="construct.a.gldpcnfid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldpcnfdt
            #add-point:BEFORE FIELD gldpcnfdt name="construct.b.gldpcnfdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.gldppstid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldppstid
            #add-point:ON ACTION controlp INFIELD gldppstid name="construct.c.gldppstid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO gldppstid  #顯示到畫面上
            NEXT FIELD gldppstid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldppstid
            #add-point:BEFORE FIELD gldppstid name="construct.b.gldppstid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldppstid
            
            #add-point:AFTER FIELD gldppstid name="construct.a.gldppstid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldppstdt
            #add-point:BEFORE FIELD gldppstdt name="construct.b.gldppstdt"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq005
            #add-point:BEFORE FIELD l_gldq005 name="construct.b.l_gldq005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq005
            
            #add-point:AFTER FIELD l_gldq005 name="construct.a.l_gldq005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.l_gldq005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq005
            #add-point:ON ACTION controlp INFIELD l_gldq005 name="construct.c.l_gldq005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq005_desc
            #add-point:BEFORE FIELD l_gldq005_desc name="construct.b.l_gldq005_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq005_desc
            
            #add-point:AFTER FIELD l_gldq005_desc name="construct.a.l_gldq005_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.l_gldq005_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq005_desc
            #add-point:ON ACTION controlp INFIELD l_gldq005_desc name="construct.c.l_gldq005_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq006
            #add-point:BEFORE FIELD l_gldq006 name="construct.b.l_gldq006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq006
            
            #add-point:AFTER FIELD l_gldq006 name="construct.a.l_gldq006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.l_gldq006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq006
            #add-point:ON ACTION controlp INFIELD l_gldq006 name="construct.c.l_gldq006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq006_desc
            #add-point:BEFORE FIELD l_gldq006_desc name="construct.b.l_gldq006_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq006_desc
            
            #add-point:AFTER FIELD l_gldq006_desc name="construct.a.l_gldq006_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.l_gldq006_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq006_desc
            #add-point:ON ACTION controlp INFIELD l_gldq006_desc name="construct.c.l_gldq006_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq007
            #add-point:BEFORE FIELD l_gldq007 name="construct.b.l_gldq007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq007
            
            #add-point:AFTER FIELD l_gldq007 name="construct.a.l_gldq007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.l_gldq007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq007
            #add-point:ON ACTION controlp INFIELD l_gldq007 name="construct.c.l_gldq007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq007_desc
            #add-point:BEFORE FIELD l_gldq007_desc name="construct.b.l_gldq007_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq007_desc
            
            #add-point:AFTER FIELD l_gldq007_desc name="construct.a.l_gldq007_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.l_gldq007_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq007_desc
            #add-point:ON ACTION controlp INFIELD l_gldq007_desc name="construct.c.l_gldq007_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq008
            #add-point:BEFORE FIELD l_gldq008 name="construct.b.l_gldq008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq008
            
            #add-point:AFTER FIELD l_gldq008 name="construct.a.l_gldq008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.l_gldq008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq008
            #add-point:ON ACTION controlp INFIELD l_gldq008 name="construct.c.l_gldq008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq008_desc
            #add-point:BEFORE FIELD l_gldq008_desc name="construct.b.l_gldq008_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq008_desc
            
            #add-point:AFTER FIELD l_gldq008_desc name="construct.a.l_gldq008_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.l_gldq008_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq008_desc
            #add-point:ON ACTION controlp INFIELD l_gldq008_desc name="construct.c.l_gldq008_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq009
            #add-point:BEFORE FIELD l_gldq009 name="construct.b.l_gldq009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq009
            
            #add-point:AFTER FIELD l_gldq009 name="construct.a.l_gldq009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.l_gldq009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq009
            #add-point:ON ACTION controlp INFIELD l_gldq009 name="construct.c.l_gldq009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq009_desc
            #add-point:BEFORE FIELD l_gldq009_desc name="construct.b.l_gldq009_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq009_desc
            
            #add-point:AFTER FIELD l_gldq009_desc name="construct.a.l_gldq009_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.l_gldq009_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq009_desc
            #add-point:ON ACTION controlp INFIELD l_gldq009_desc name="construct.c.l_gldq009_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq010
            #add-point:BEFORE FIELD l_gldq010 name="construct.b.l_gldq010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq010
            
            #add-point:AFTER FIELD l_gldq010 name="construct.a.l_gldq010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.l_gldq010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq010
            #add-point:ON ACTION controlp INFIELD l_gldq010 name="construct.c.l_gldq010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq010_desc
            #add-point:BEFORE FIELD l_gldq010_desc name="construct.b.l_gldq010_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq010_desc
            
            #add-point:AFTER FIELD l_gldq010_desc name="construct.a.l_gldq010_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.l_gldq010_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq010_desc
            #add-point:ON ACTION controlp INFIELD l_gldq010_desc name="construct.c.l_gldq010_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq012
            #add-point:BEFORE FIELD l_gldq012 name="construct.b.l_gldq012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq012
            
            #add-point:AFTER FIELD l_gldq012 name="construct.a.l_gldq012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.l_gldq012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq012
            #add-point:ON ACTION controlp INFIELD l_gldq012 name="construct.c.l_gldq012"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq012_desc
            #add-point:BEFORE FIELD l_gldq012_desc name="construct.b.l_gldq012_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq012_desc
            
            #add-point:AFTER FIELD l_gldq012_desc name="construct.a.l_gldq012_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.l_gldq012_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq012_desc
            #add-point:ON ACTION controlp INFIELD l_gldq012_desc name="construct.c.l_gldq012_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq013
            #add-point:BEFORE FIELD l_gldq013 name="construct.b.l_gldq013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq013
            
            #add-point:AFTER FIELD l_gldq013 name="construct.a.l_gldq013"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.l_gldq013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq013
            #add-point:ON ACTION controlp INFIELD l_gldq013 name="construct.c.l_gldq013"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq013_desc
            #add-point:BEFORE FIELD l_gldq013_desc name="construct.b.l_gldq013_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq013_desc
            
            #add-point:AFTER FIELD l_gldq013_desc name="construct.a.l_gldq013_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.l_gldq013_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq013_desc
            #add-point:ON ACTION controlp INFIELD l_gldq013_desc name="construct.c.l_gldq013_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq014
            #add-point:BEFORE FIELD l_gldq014 name="construct.b.l_gldq014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq014
            
            #add-point:AFTER FIELD l_gldq014 name="construct.a.l_gldq014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.l_gldq014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq014
            #add-point:ON ACTION controlp INFIELD l_gldq014 name="construct.c.l_gldq014"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq014_desc
            #add-point:BEFORE FIELD l_gldq014_desc name="construct.b.l_gldq014_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq014_desc
            
            #add-point:AFTER FIELD l_gldq014_desc name="construct.a.l_gldq014_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.l_gldq014_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq014_desc
            #add-point:ON ACTION controlp INFIELD l_gldq014_desc name="construct.c.l_gldq014_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq015
            #add-point:BEFORE FIELD l_gldq015 name="construct.b.l_gldq015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq015
            
            #add-point:AFTER FIELD l_gldq015 name="construct.a.l_gldq015"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.l_gldq015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq015
            #add-point:ON ACTION controlp INFIELD l_gldq015 name="construct.c.l_gldq015"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq015_desc
            #add-point:BEFORE FIELD l_gldq015_desc name="construct.b.l_gldq015_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq015_desc
            
            #add-point:AFTER FIELD l_gldq015_desc name="construct.a.l_gldq015_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.l_gldq015_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq015_desc
            #add-point:ON ACTION controlp INFIELD l_gldq015_desc name="construct.c.l_gldq015_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq016
            #add-point:BEFORE FIELD l_gldq016 name="construct.b.l_gldq016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq016
            
            #add-point:AFTER FIELD l_gldq016 name="construct.a.l_gldq016"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.l_gldq016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq016
            #add-point:ON ACTION controlp INFIELD l_gldq016 name="construct.c.l_gldq016"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq016_desc
            #add-point:BEFORE FIELD l_gldq016_desc name="construct.b.l_gldq016_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq016_desc
            
            #add-point:AFTER FIELD l_gldq016_desc name="construct.a.l_gldq016_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.l_gldq016_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq016_desc
            #add-point:ON ACTION controlp INFIELD l_gldq016_desc name="construct.c.l_gldq016_desc"
            
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON gldqseq,gldq023,gldq001,gldq017,gldq018,gldq019,gldq020,gldq021,gldq022, 
          gldq003,gldq004,gldq005,gldq006,gldq007,gldq008,gldq009,gldq010,gldq011,gldq012,gldq013,gldq014, 
          gldq015,gldq016
           FROM s_detail1[1].gldqseq,s_detail1[1].gldq023,s_detail1[1].gldq001,s_detail1[1].gldq017, 
               s_detail1[1].gldq018,s_detail1[1].gldq019,s_detail1[1].gldq020,s_detail1[1].gldq021,s_detail1[1].gldq022, 
               s_detail1[1].gldq003,s_detail1[1].gldq004,s_detail1[1].gldq005,s_detail1[1].gldq006,s_detail1[1].gldq007, 
               s_detail1[1].gldq008,s_detail1[1].gldq009,s_detail1[1].gldq010,s_detail1[1].gldq011,s_detail1[1].gldq012, 
               s_detail1[1].gldq013,s_detail1[1].gldq014,s_detail1[1].gldq015,s_detail1[1].gldq016
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldqseq
            #add-point:BEFORE FIELD gldqseq name="construct.b.page1.gldqseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldqseq
            
            #add-point:AFTER FIELD gldqseq name="construct.a.page1.gldqseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.gldqseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldqseq
            #add-point:ON ACTION controlp INFIELD gldqseq name="construct.c.page1.gldqseq"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq023
            #add-point:BEFORE FIELD gldq023 name="construct.b.page1.gldq023"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq023
            
            #add-point:AFTER FIELD gldq023 name="construct.a.page1.gldq023"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.gldq023
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq023
            #add-point:ON ACTION controlp INFIELD gldq023 name="construct.c.page1.gldq023"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq001
            #add-point:BEFORE FIELD gldq001 name="construct.b.page1.gldq001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq001
            
            #add-point:AFTER FIELD gldq001 name="construct.a.page1.gldq001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.gldq001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq001
            #add-point:ON ACTION controlp INFIELD gldq001 name="construct.c.page1.gldq001"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " glac003 <>'1' AND glac006 = '1' AND glac035 = 'N' "   #151113-00002#2 151113 by sakura add glac035
            CALL aglt310_04()
            DISPLAY g_qryparam.return1 TO gldq001  #顯示到畫面上
            NEXT FIELD gldq001
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq017
            #add-point:BEFORE FIELD gldq017 name="construct.b.page1.gldq017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq017
            
            #add-point:AFTER FIELD gldq017 name="construct.a.page1.gldq017"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.gldq017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq017
            #add-point:ON ACTION controlp INFIELD gldq017 name="construct.c.page1.gldq017"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq018
            #add-point:BEFORE FIELD gldq018 name="construct.b.page1.gldq018"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq018
            
            #add-point:AFTER FIELD gldq018 name="construct.a.page1.gldq018"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.gldq018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq018
            #add-point:ON ACTION controlp INFIELD gldq018 name="construct.c.page1.gldq018"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq019
            #add-point:BEFORE FIELD gldq019 name="construct.b.page1.gldq019"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq019
            
            #add-point:AFTER FIELD gldq019 name="construct.a.page1.gldq019"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.gldq019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq019
            #add-point:ON ACTION controlp INFIELD gldq019 name="construct.c.page1.gldq019"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq020
            #add-point:BEFORE FIELD gldq020 name="construct.b.page1.gldq020"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq020
            
            #add-point:AFTER FIELD gldq020 name="construct.a.page1.gldq020"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.gldq020
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq020
            #add-point:ON ACTION controlp INFIELD gldq020 name="construct.c.page1.gldq020"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq021
            #add-point:BEFORE FIELD gldq021 name="construct.b.page1.gldq021"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq021
            
            #add-point:AFTER FIELD gldq021 name="construct.a.page1.gldq021"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.gldq021
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq021
            #add-point:ON ACTION controlp INFIELD gldq021 name="construct.c.page1.gldq021"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq022
            #add-point:BEFORE FIELD gldq022 name="construct.b.page1.gldq022"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq022
            
            #add-point:AFTER FIELD gldq022 name="construct.a.page1.gldq022"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.gldq022
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq022
            #add-point:ON ACTION controlp INFIELD gldq022 name="construct.c.page1.gldq022"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq003
            #add-point:BEFORE FIELD gldq003 name="construct.b.page1.gldq003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq003
            
            #add-point:AFTER FIELD gldq003 name="construct.a.page1.gldq003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.gldq003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq003
            #add-point:ON ACTION controlp INFIELD gldq003 name="construct.c.page1.gldq003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq004
            #add-point:BEFORE FIELD gldq004 name="construct.b.page1.gldq004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq004
            
            #add-point:AFTER FIELD gldq004 name="construct.a.page1.gldq004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.gldq004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq004
            #add-point:ON ACTION controlp INFIELD gldq004 name="construct.c.page1.gldq004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq005
            #add-point:BEFORE FIELD gldq005 name="construct.b.page1.gldq005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq005
            
            #add-point:AFTER FIELD gldq005 name="construct.a.page1.gldq005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.gldq005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq005
            #add-point:ON ACTION controlp INFIELD gldq005 name="construct.c.page1.gldq005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq006
            #add-point:BEFORE FIELD gldq006 name="construct.b.page1.gldq006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq006
            
            #add-point:AFTER FIELD gldq006 name="construct.a.page1.gldq006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.gldq006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq006
            #add-point:ON ACTION controlp INFIELD gldq006 name="construct.c.page1.gldq006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq007
            #add-point:BEFORE FIELD gldq007 name="construct.b.page1.gldq007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq007
            
            #add-point:AFTER FIELD gldq007 name="construct.a.page1.gldq007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.gldq007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq007
            #add-point:ON ACTION controlp INFIELD gldq007 name="construct.c.page1.gldq007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq008
            #add-point:BEFORE FIELD gldq008 name="construct.b.page1.gldq008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq008
            
            #add-point:AFTER FIELD gldq008 name="construct.a.page1.gldq008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.gldq008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq008
            #add-point:ON ACTION controlp INFIELD gldq008 name="construct.c.page1.gldq008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq009
            #add-point:BEFORE FIELD gldq009 name="construct.b.page1.gldq009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq009
            
            #add-point:AFTER FIELD gldq009 name="construct.a.page1.gldq009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.gldq009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq009
            #add-point:ON ACTION controlp INFIELD gldq009 name="construct.c.page1.gldq009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq010
            #add-point:BEFORE FIELD gldq010 name="construct.b.page1.gldq010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq010
            
            #add-point:AFTER FIELD gldq010 name="construct.a.page1.gldq010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.gldq010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq010
            #add-point:ON ACTION controlp INFIELD gldq010 name="construct.c.page1.gldq010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq011
            #add-point:BEFORE FIELD gldq011 name="construct.b.page1.gldq011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq011
            
            #add-point:AFTER FIELD gldq011 name="construct.a.page1.gldq011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.gldq011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq011
            #add-point:ON ACTION controlp INFIELD gldq011 name="construct.c.page1.gldq011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq012
            #add-point:BEFORE FIELD gldq012 name="construct.b.page1.gldq012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq012
            
            #add-point:AFTER FIELD gldq012 name="construct.a.page1.gldq012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.gldq012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq012
            #add-point:ON ACTION controlp INFIELD gldq012 name="construct.c.page1.gldq012"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq013
            #add-point:BEFORE FIELD gldq013 name="construct.b.page1.gldq013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq013
            
            #add-point:AFTER FIELD gldq013 name="construct.a.page1.gldq013"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.gldq013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq013
            #add-point:ON ACTION controlp INFIELD gldq013 name="construct.c.page1.gldq013"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq014
            #add-point:BEFORE FIELD gldq014 name="construct.b.page1.gldq014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq014
            
            #add-point:AFTER FIELD gldq014 name="construct.a.page1.gldq014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.gldq014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq014
            #add-point:ON ACTION controlp INFIELD gldq014 name="construct.c.page1.gldq014"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq015
            #add-point:BEFORE FIELD gldq015 name="construct.b.page1.gldq015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq015
            
            #add-point:AFTER FIELD gldq015 name="construct.a.page1.gldq015"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.gldq015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq015
            #add-point:ON ACTION controlp INFIELD gldq015 name="construct.c.page1.gldq015"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq016
            #add-point:BEFORE FIELD gldq016 name="construct.b.page1.gldq016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq016
            
            #add-point:AFTER FIELD gldq016 name="construct.a.page1.gldq016"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.gldq016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq016
            #add-point:ON ACTION controlp INFIELD gldq016 name="construct.c.page1.gldq016"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      CONSTRUCT l_wc2_dummy ON gldq003, 
          gldq004,gldq005,gldq006,gldq007,
          gldq008,gldq009,gldq010,gldq011,
          gldq012,gldq013,gldq014,gldq015, 
          gldq016
          FROM l_gldq003, 
          l_gldq004,l_gldq005,l_gldq006,l_gldq007,
          l_gldq008,l_gldq009,l_gldq010,l_gldq011,
          l_gldq012,l_gldq013,l_gldq014,l_gldq015, 
          l_gldq016
         ON ACTION controlp INFIELD l_gldq003
            #營運據點
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            #CALL q_ooef001()    #161021-00037#4 mark
            CALL q_ooef001_01()  #161021-00037#4 add                          
            DISPLAY g_qryparam.return1 TO l_gldq003  
            NEXT FIELD l_gldq003                    
         ON ACTION controlp INFIELD l_gldq004
            #部門
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = "ooegstus='Y'"
            CALL q_ooeg001_4()                          
            DISPLAY g_qryparam.return1 TO l_gldq004  
            NEXT FIELD l_gldq004                    
         ON ACTION controlp INFIELD l_gldq005
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = "ooegstus='Y' AND ooeg003 IN ('1','2','3')"
            CALL q_ooeg001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO l_gldq005      #顯示到畫面上
            NEXT FIELD l_gldq005 
         ON ACTION controlp INFIELD l_gldq006
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002_287()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO l_gldq006      #顯示到畫面上
            NEXT FIELD l_gldq006          
         
         ON ACTION controlp INFIELD l_gldq007
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_25()      #160913-00017#3  add
            #CALL q_pmaa001()        #160913-00017#3  mark               #呼叫開窗                   
            DISPLAY g_qryparam.return1 TO l_gldq007   
            NEXT FIELD l_gldq007         
         ON ACTION controlp INFIELD l_gldq008
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.state = 'c'
            CALL q_pmaa001_25()      #160913-00017#3  add
            #CALL q_pmaa001()        #160913-00017#3  mark               #呼叫開窗                     
            DISPLAY g_qryparam.return1 TO l_gldq008      
            NEXT FIELD l_gldq008     
         ON ACTION controlp INFIELD l_gldq009
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.state = 'c'
            CALL q_oocq002_281()                       
            DISPLAY g_qryparam.return1 TO l_gldq009   
            NEXT FIELD l_gldq009                      
         ON ACTION controlp INFIELD l_gldq010
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.state = 'c'
            CALL q_rtax001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO l_gldq010     #顯示到畫面上
            NEXT FIELD l_gldq010
    
         ON ACTION controlp INFIELD l_gldq012
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.state = 'c'
            LET g_qryparam.where = " oojdstus='Y' "
            CALL q_oojd001_2()                         #呼叫開窗
            DISPLAY g_qryparam.return1 TO l_gldq012     #顯示到畫面上
            NEXT FIELD l_gldq012                       #返回原欄位
         ON ACTION controlp INFIELD l_gldq013
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.state = 'c'
            CALL q_oocq002_2002()                            #呼叫開窗
            DISPLAY g_qryparam.return1 TO l_gldq013     #顯示到畫面上
            NEXT FIELD l_gldq013                        #返回原欄位
         ON ACTION controlp INFIELD l_gldq014
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.state = 'c'
            CALL q_ooag001_8()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO l_gldq014      #顯示到畫面上
            NEXT FIELD l_gldq014
         ON ACTION controlp INFIELD l_gldq015
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.state = 'c'
            CALL q_pjba001()                          #呼叫開窗
            DISPLAY g_qryparam.return1 TO l_gldq015    #顯示到畫面上
            NEXT FIELD l_gldq015
         ON ACTION controlp INFIELD l_gldq016
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.state = 'c'
            LET g_qryparam.where = "pjbb012='1' "
            CALL q_pjbb002()                          #呼叫開窗
            DISPLAY g_qryparam.return1 TO l_gldq016     #顯示到畫面上
            NEXT FIELD l_gldq016
      END CONSTRUCT
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "gldp_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "gldq_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   IF NOT INT_FLAG AND NOT cl_null(l_wc2_dummy)THEN
      LET g_wc2 = g_wc2 CLIPPED," AND ",l_wc2_dummy CLIPPED
   END IF
   IF NOT INT_FLAG THEN
      LET g_wc = g_wc CLIPPED," AND gldp005 = '",g_gldp005,"' "
      
      IF NOT cl_null(g_progtype)THEN
         LET g_wc = g_wc CLIPPED," AND gldp006 = '",g_progtype,"' "
      END IF
   END IF
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="aglt502.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION aglt502_filter()
   #add-point:filter段define name="filter.define_customerization"
   
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON gldpdocno
                          FROM s_browse[1].b_gldpdocno
 
         BEFORE CONSTRUCT
               DISPLAY aglt502_filter_parser('gldpdocno') TO s_browse[1].b_gldpdocno
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL aglt502_filter_show('gldpdocno')
 
END FUNCTION
 
{</section>}
 
{<section id="aglt502.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION aglt502_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="aglt502.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION aglt502_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aglt502_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="aglt502.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aglt502_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_gldq_d.clear()
 
   
   #add-point:query段other name="query.other"
   CALL aglt502_set_visible()
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL aglt502_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL aglt502_browser_fill("")
      CALL aglt502_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL aglt502_filter_show('gldpdocno')
   CALL aglt502_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "-100" 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
   ELSE
      CALL aglt502_fetch("F") 
      #顯示單身筆數
      CALL aglt502_idx_chk()
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="aglt502.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aglt502_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_gldp_m.gldpdocno = g_browser[g_current_idx].b_gldpdocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE aglt502_master_referesh USING g_gldp_m.gldpdocno INTO g_gldp_m.gldp005,g_gldp_m.gldp006,g_gldp_m.gldp007, 
       g_gldp_m.gldpld,g_gldp_m.gldp001,g_gldp_m.gldp002,g_gldp_m.gldpdocno,g_gldp_m.gldpdocdt,g_gldp_m.gldp003, 
       g_gldp_m.gldp004,g_gldp_m.gldp008,g_gldp_m.gldp011,g_gldp_m.gldp014,g_gldp_m.gldp016,g_gldp_m.gldp009, 
       g_gldp_m.gldp010,g_gldp_m.gldp012,g_gldp_m.gldp013,g_gldp_m.gldp015,g_gldp_m.gldpstus,g_gldp_m.gldpownid, 
       g_gldp_m.gldpowndp,g_gldp_m.gldpcrtid,g_gldp_m.gldpcrtdp,g_gldp_m.gldpcrtdt,g_gldp_m.gldpmodid, 
       g_gldp_m.gldpmoddt,g_gldp_m.gldpcnfid,g_gldp_m.gldpcnfdt,g_gldp_m.gldppstid,g_gldp_m.gldppstdt, 
       g_gldp_m.gldpownid_desc,g_gldp_m.gldpowndp_desc,g_gldp_m.gldpcrtid_desc,g_gldp_m.gldpcrtdp_desc, 
       g_gldp_m.gldpmodid_desc,g_gldp_m.gldpcnfid_desc,g_gldp_m.gldppstid_desc
   
   #遮罩相關處理
   LET g_gldp_m_mask_o.* =  g_gldp_m.*
   CALL aglt502_gldp_t_mask()
   LET g_gldp_m_mask_n.* =  g_gldp_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aglt502_set_act_visible()   
   CALL aglt502_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
 
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
   
   #保存單頭舊值
   LET g_gldp_m_t.* = g_gldp_m.*
   LET g_gldp_m_o.* = g_gldp_m.*
   
   LET g_data_owner = g_gldp_m.gldpownid      
   LET g_data_dept  = g_gldp_m.gldpowndp
   
   #重新顯示   
   CALL aglt502_show()
 
   #應用 a56 樣板自動產生(Version:3)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
 
END FUNCTION
 
{</section>}
 
{<section id="aglt502.insert" >}
#+ 資料新增
PRIVATE FUNCTION aglt502_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_gldq_d.clear()   
 
 
   INITIALIZE g_gldp_m.* TO NULL             #DEFAULT 設定
   
   LET g_gldpdocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   CALL aglt502_set_visible()
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_gldp_m.gldpownid = g_user
      LET g_gldp_m.gldpowndp = g_dept
      LET g_gldp_m.gldpcrtid = g_user
      LET g_gldp_m.gldpcrtdp = g_dept 
      LET g_gldp_m.gldpcrtdt = cl_get_current()
      LET g_gldp_m.gldpmodid = g_user
      LET g_gldp_m.gldpmoddt = cl_get_current()
      LET g_gldp_m.gldpstus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_gldp_m.gldp003 = "0"
      LET g_gldp_m.gldp004 = "0"
      LET g_gldp_m.gldp016 = "0"
      LET g_gldp_m.gldp009 = "0"
      LET g_gldp_m.gldp010 = "0"
      LET g_gldp_m.gldp012 = "0"
      LET g_gldp_m.gldp013 = "0"
      LET g_gldp_m.gldp015 = "0"
 
  
      #add-point:單頭預設值 name="insert.default"
      LET g_gldp_m.gldp005 = g_gldp005   #來源碼#1調整
      LET g_gldp_m.gldp006 = g_progtype  #調整沖帳類型 #個體公司餘額調整
      
      #151103 albireo-----s
#      IF g_gldp_m.gldp006 = '8' THEN
#         LET g_gldp_m.gldp007 = 'Y'           
#      ELSE
#         LET g_gldp_m.gldp007 = 'N'   
#      END IF

      CASE
         WHEN g_gldp_m.gldp006 = '8'
            LET g_gldp_m.gldp007 = 'Y' 
         WHEN g_gldp_m.gldp006 = '9'
            LET g_gldp_m.gldp007 = 'Y'           
         OTHERWISE
            LET g_gldp_m.gldp007 = 'N' 
      END CASE
      #151103 albireo-----e
      LET g_gldp_m.gldpdocdt = g_today
      CASE
         WHEN g_progtype = 'M' 
            LET g_gldp_m.gldpld = ' '
      END CASE
      LET g_gldp_m_t.* = g_gldp_m.*    #設定預設值後
      LET g_gldp_m_o.* = g_gldp_m.*    #舊值備份
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_gldp_m_t.* = g_gldp_m.*
      LET g_gldp_m_o.* = g_gldp_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_gldp_m.gldpstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
    
      CALL aglt502_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_gldp_m.* TO NULL
         INITIALIZE g_gldq_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         
         #end add-point 
         CALL aglt502_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_gldq_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aglt502_set_act_visible()   
   CALL aglt502_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_gldpdocno_t = g_gldp_m.gldpdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " gldpent = " ||g_enterprise|| " AND",
                      " gldpdocno = '", g_gldp_m.gldpdocno, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL aglt502_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE aglt502_cl
   
   CALL aglt502_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE aglt502_master_referesh USING g_gldp_m.gldpdocno INTO g_gldp_m.gldp005,g_gldp_m.gldp006,g_gldp_m.gldp007, 
       g_gldp_m.gldpld,g_gldp_m.gldp001,g_gldp_m.gldp002,g_gldp_m.gldpdocno,g_gldp_m.gldpdocdt,g_gldp_m.gldp003, 
       g_gldp_m.gldp004,g_gldp_m.gldp008,g_gldp_m.gldp011,g_gldp_m.gldp014,g_gldp_m.gldp016,g_gldp_m.gldp009, 
       g_gldp_m.gldp010,g_gldp_m.gldp012,g_gldp_m.gldp013,g_gldp_m.gldp015,g_gldp_m.gldpstus,g_gldp_m.gldpownid, 
       g_gldp_m.gldpowndp,g_gldp_m.gldpcrtid,g_gldp_m.gldpcrtdp,g_gldp_m.gldpcrtdt,g_gldp_m.gldpmodid, 
       g_gldp_m.gldpmoddt,g_gldp_m.gldpcnfid,g_gldp_m.gldpcnfdt,g_gldp_m.gldppstid,g_gldp_m.gldppstdt, 
       g_gldp_m.gldpownid_desc,g_gldp_m.gldpowndp_desc,g_gldp_m.gldpcrtid_desc,g_gldp_m.gldpcrtdp_desc, 
       g_gldp_m.gldpmodid_desc,g_gldp_m.gldpcnfid_desc,g_gldp_m.gldppstid_desc
   
   
   #遮罩相關處理
   LET g_gldp_m_mask_o.* =  g_gldp_m.*
   CALL aglt502_gldp_t_mask()
   LET g_gldp_m_mask_n.* =  g_gldp_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_gldp_m.gldp005,g_gldp_m.gldp006,g_gldp_m.gldp007,g_gldp_m.gldpld,g_gldp_m.gldpld_desc, 
       g_gldp_m.gldp001,g_gldp_m.gldp001_desc,g_gldp_m.gldp002,g_gldp_m.gldp002_desc,g_gldp_m.gldpdocno, 
       g_gldp_m.gldpdocdt,g_gldp_m.gldp003,g_gldp_m.gldp004,g_gldp_m.gldp008,g_gldp_m.gldp011,g_gldp_m.gldp014, 
       g_gldp_m.gldp016,g_gldp_m.gldp009,g_gldp_m.gldp010,g_gldp_m.gldp012,g_gldp_m.gldp013,g_gldp_m.gldp015, 
       g_gldp_m.gldpstus,g_gldp_m.gldpownid,g_gldp_m.gldpownid_desc,g_gldp_m.gldpowndp,g_gldp_m.gldpowndp_desc, 
       g_gldp_m.gldpcrtid,g_gldp_m.gldpcrtid_desc,g_gldp_m.gldpcrtdp,g_gldp_m.gldpcrtdp_desc,g_gldp_m.gldpcrtdt, 
       g_gldp_m.gldpmodid,g_gldp_m.gldpmodid_desc,g_gldp_m.gldpmoddt,g_gldp_m.gldpcnfid,g_gldp_m.gldpcnfid_desc, 
       g_gldp_m.gldpcnfdt,g_gldp_m.gldppstid,g_gldp_m.gldppstid_desc,g_gldp_m.gldppstdt,g_gldp_m.l_gldq003, 
       g_gldp_m.l_gldq003_desc,g_gldp_m.l_gldq004,g_gldp_m.l_gldq004_desc,g_gldp_m.l_gldq005,g_gldp_m.l_gldq005_desc, 
       g_gldp_m.l_gldq006,g_gldp_m.l_gldq006_desc,g_gldp_m.l_gldq007,g_gldp_m.l_gldq007_desc,g_gldp_m.l_gldq008, 
       g_gldp_m.l_gldq008_desc,g_gldp_m.l_gldq009,g_gldp_m.l_gldq009_desc,g_gldp_m.l_gldq010,g_gldp_m.l_gldq010_desc, 
       g_gldp_m.l_gldq011,g_gldp_m.l_gldq012,g_gldp_m.l_gldq012_desc,g_gldp_m.l_gldq013,g_gldp_m.l_gldq013_desc, 
       g_gldp_m.l_gldq014,g_gldp_m.l_gldq014_desc,g_gldp_m.l_gldq015,g_gldp_m.l_gldq015_desc,g_gldp_m.l_gldq016, 
       g_gldp_m.l_gldq016_desc
   
   #add-point:新增結束後 name="insert.after"
   
   #end add-point 
   
   LET g_data_owner = g_gldp_m.gldpownid      
   LET g_data_dept  = g_gldp_m.gldpowndp
   
   #功能已完成,通報訊息中心
   CALL aglt502_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="aglt502.modify" >}
#+ 資料修改
PRIVATE FUNCTION aglt502_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   #保存單頭舊值
   LET g_gldp_m_t.* = g_gldp_m.*
   LET g_gldp_m_o.* = g_gldp_m.*
   
   IF g_gldp_m.gldpdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_gldpdocno_t = g_gldp_m.gldpdocno
 
   CALL s_transaction_begin()
   
   OPEN aglt502_cl USING g_enterprise,g_gldp_m.gldpdocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aglt502_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE aglt502_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aglt502_master_referesh USING g_gldp_m.gldpdocno INTO g_gldp_m.gldp005,g_gldp_m.gldp006,g_gldp_m.gldp007, 
       g_gldp_m.gldpld,g_gldp_m.gldp001,g_gldp_m.gldp002,g_gldp_m.gldpdocno,g_gldp_m.gldpdocdt,g_gldp_m.gldp003, 
       g_gldp_m.gldp004,g_gldp_m.gldp008,g_gldp_m.gldp011,g_gldp_m.gldp014,g_gldp_m.gldp016,g_gldp_m.gldp009, 
       g_gldp_m.gldp010,g_gldp_m.gldp012,g_gldp_m.gldp013,g_gldp_m.gldp015,g_gldp_m.gldpstus,g_gldp_m.gldpownid, 
       g_gldp_m.gldpowndp,g_gldp_m.gldpcrtid,g_gldp_m.gldpcrtdp,g_gldp_m.gldpcrtdt,g_gldp_m.gldpmodid, 
       g_gldp_m.gldpmoddt,g_gldp_m.gldpcnfid,g_gldp_m.gldpcnfdt,g_gldp_m.gldppstid,g_gldp_m.gldppstdt, 
       g_gldp_m.gldpownid_desc,g_gldp_m.gldpowndp_desc,g_gldp_m.gldpcrtid_desc,g_gldp_m.gldpcrtdp_desc, 
       g_gldp_m.gldpmodid_desc,g_gldp_m.gldpcnfid_desc,g_gldp_m.gldppstid_desc
   
   #檢查是否允許此動作
   IF NOT aglt502_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_gldp_m_mask_o.* =  g_gldp_m.*
   CALL aglt502_gldp_t_mask()
   LET g_gldp_m_mask_n.* =  g_gldp_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
 
   
   CALL aglt502_show()
   #add-point:modify段show之後 name="modify.after_show"
   
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
 
    
   WHILE TRUE
      LET g_gldpdocno_t = g_gldp_m.gldpdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_gldp_m.gldpmodid = g_user 
LET g_gldp_m.gldpmoddt = cl_get_current()
LET g_gldp_m.gldpmodid_desc = cl_get_username(g_gldp_m.gldpmodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      #     「D抽單 / R已拒絕」狀況碼更改資料後，需還原為「N未確認」
      IF g_gldp_m.gldpstus MATCHES "[DR]" THEN 
         LET g_gldp_m.gldpstus = "N"
      END IF

      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL aglt502_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE gldp_t SET (gldpmodid,gldpmoddt) = (g_gldp_m.gldpmodid,g_gldp_m.gldpmoddt)
          WHERE gldpent = g_enterprise AND gldpdocno = g_gldpdocno_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_gldp_m.* = g_gldp_m_t.*
            CALL aglt502_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_gldp_m.gldpdocno != g_gldp_m_t.gldpdocno
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         
         #end add-point
         
         #更新單身key值
         UPDATE gldq_t SET gldqdocno = g_gldp_m.gldpdocno
 
          WHERE gldqent = g_enterprise AND gldqdocno = g_gldp_m_t.gldpdocno
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "gldq_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "gldq_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aglt502_set_act_visible()   
   CALL aglt502_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " gldpent = " ||g_enterprise|| " AND",
                      " gldpdocno = '", g_gldp_m.gldpdocno, "' "
 
   #填到對應位置
   CALL aglt502_browser_fill("")
 
   CLOSE aglt502_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL aglt502_msgcentre_notify('modify')
 
END FUNCTION 
 
{</section>}
 
{<section id="aglt502.input" >}
#+ 資料輸入
PRIVATE FUNCTION aglt502_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
               
   DEFINE l_yy    LIKE type_t.num5
   DEFINE l_mm    LIKE type_t.num5
   DEFINE l_chktype LIKE type_t.chr1
   DEFINE l_prog  LIKE type_t.chr10    #單別用l_prog
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_gldp_m.gldp005,g_gldp_m.gldp006,g_gldp_m.gldp007,g_gldp_m.gldpld,g_gldp_m.gldpld_desc, 
       g_gldp_m.gldp001,g_gldp_m.gldp001_desc,g_gldp_m.gldp002,g_gldp_m.gldp002_desc,g_gldp_m.gldpdocno, 
       g_gldp_m.gldpdocdt,g_gldp_m.gldp003,g_gldp_m.gldp004,g_gldp_m.gldp008,g_gldp_m.gldp011,g_gldp_m.gldp014, 
       g_gldp_m.gldp016,g_gldp_m.gldp009,g_gldp_m.gldp010,g_gldp_m.gldp012,g_gldp_m.gldp013,g_gldp_m.gldp015, 
       g_gldp_m.gldpstus,g_gldp_m.gldpownid,g_gldp_m.gldpownid_desc,g_gldp_m.gldpowndp,g_gldp_m.gldpowndp_desc, 
       g_gldp_m.gldpcrtid,g_gldp_m.gldpcrtid_desc,g_gldp_m.gldpcrtdp,g_gldp_m.gldpcrtdp_desc,g_gldp_m.gldpcrtdt, 
       g_gldp_m.gldpmodid,g_gldp_m.gldpmodid_desc,g_gldp_m.gldpmoddt,g_gldp_m.gldpcnfid,g_gldp_m.gldpcnfid_desc, 
       g_gldp_m.gldpcnfdt,g_gldp_m.gldppstid,g_gldp_m.gldppstid_desc,g_gldp_m.gldppstdt,g_gldp_m.l_gldq003, 
       g_gldp_m.l_gldq003_desc,g_gldp_m.l_gldq004,g_gldp_m.l_gldq004_desc,g_gldp_m.l_gldq005,g_gldp_m.l_gldq005_desc, 
       g_gldp_m.l_gldq006,g_gldp_m.l_gldq006_desc,g_gldp_m.l_gldq007,g_gldp_m.l_gldq007_desc,g_gldp_m.l_gldq008, 
       g_gldp_m.l_gldq008_desc,g_gldp_m.l_gldq009,g_gldp_m.l_gldq009_desc,g_gldp_m.l_gldq010,g_gldp_m.l_gldq010_desc, 
       g_gldp_m.l_gldq011,g_gldp_m.l_gldq012,g_gldp_m.l_gldq012_desc,g_gldp_m.l_gldq013,g_gldp_m.l_gldq013_desc, 
       g_gldp_m.l_gldq014,g_gldp_m.l_gldq014_desc,g_gldp_m.l_gldq015,g_gldp_m.l_gldq015_desc,g_gldp_m.l_gldq016, 
       g_gldp_m.l_gldq016_desc
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT gldqseq,gldq023,gldq001,gldq017,gldq018,gldq019,gldq020,gldq021,gldq022, 
       gldq003,gldq004,gldq005,gldq006,gldq007,gldq008,gldq009,gldq010,gldq011,gldq012,gldq013,gldq014, 
       gldq015,gldq016 FROM gldq_t WHERE gldqent=? AND gldqdocno=? AND gldqseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aglt502_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
   
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL aglt502_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL aglt502_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_gldp_m.gldp005,g_gldp_m.gldp006,g_gldp_m.gldp007,g_gldp_m.gldpld,g_gldp_m.gldp001, 
       g_gldp_m.gldp002,g_gldp_m.gldpdocno,g_gldp_m.gldpdocdt,g_gldp_m.gldp003,g_gldp_m.gldp004,g_gldp_m.gldp008, 
       g_gldp_m.gldp011,g_gldp_m.gldp014,g_gldp_m.gldp016,g_gldp_m.gldp009,g_gldp_m.gldp010,g_gldp_m.gldp012, 
       g_gldp_m.gldp013,g_gldp_m.gldp015,g_gldp_m.gldpstus,g_gldp_m.l_gldq003,g_gldp_m.l_gldq004,g_gldp_m.l_gldq005, 
       g_gldp_m.l_gldq006,g_gldp_m.l_gldq007,g_gldp_m.l_gldq008,g_gldp_m.l_gldq009,g_gldp_m.l_gldq010, 
       g_gldp_m.l_gldq011,g_gldp_m.l_gldq012,g_gldp_m.l_gldq013,g_gldp_m.l_gldq014,g_gldp_m.l_gldq015, 
       g_gldp_m.l_gldq016
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="aglt502.input.head" >}
      #單頭段
      INPUT BY NAME g_gldp_m.gldp005,g_gldp_m.gldp006,g_gldp_m.gldp007,g_gldp_m.gldpld,g_gldp_m.gldp001, 
          g_gldp_m.gldp002,g_gldp_m.gldpdocno,g_gldp_m.gldpdocdt,g_gldp_m.gldp003,g_gldp_m.gldp004,g_gldp_m.gldp008, 
          g_gldp_m.gldp011,g_gldp_m.gldp014,g_gldp_m.gldp016,g_gldp_m.gldp009,g_gldp_m.gldp010,g_gldp_m.gldp012, 
          g_gldp_m.gldp013,g_gldp_m.gldp015,g_gldp_m.gldpstus,g_gldp_m.l_gldq003,g_gldp_m.l_gldq004, 
          g_gldp_m.l_gldq005,g_gldp_m.l_gldq006,g_gldp_m.l_gldq007,g_gldp_m.l_gldq008,g_gldp_m.l_gldq009, 
          g_gldp_m.l_gldq010,g_gldp_m.l_gldq011,g_gldp_m.l_gldq012,g_gldp_m.l_gldq013,g_gldp_m.l_gldq014, 
          g_gldp_m.l_gldq015,g_gldp_m.l_gldq016 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN aglt502_cl USING g_enterprise,g_gldp_m.gldpdocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN aglt502_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE aglt502_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL aglt502_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            
            #end add-point
            CALL aglt502_set_no_entry(p_cmd)
    
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldp005
            #add-point:BEFORE FIELD gldp005 name="input.b.gldp005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldp005
            
            #add-point:AFTER FIELD gldp005 name="input.a.gldp005"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldp005
            #add-point:ON CHANGE gldp005 name="input.g.gldp005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldp006
            #add-point:BEFORE FIELD gldp006 name="input.b.gldp006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldp006
            
            #add-point:AFTER FIELD gldp006 name="input.a.gldp006"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldp006
            #add-point:ON CHANGE gldp006 name="input.g.gldp006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldp007
            #add-point:BEFORE FIELD gldp007 name="input.b.gldp007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldp007
            
            #add-point:AFTER FIELD gldp007 name="input.a.gldp007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldp007
            #add-point:ON CHANGE gldp007 name="input.g.gldp007"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldpld
            
            #add-point:AFTER FIELD gldpld name="input.a.gldpld"
            LET g_gldp_m.gldpld_desc = ' '
            DISPLAY BY NAME g_gldp_m.gldpld_desc
            IF NOT cl_null(g_gldp_m.gldpld) THEN
               #IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_gldp_m.gldpld != g_gldp_m_t.gldpld OR g_gldp_m_t.gldpld IS NULL )) THEN #160824-00007#261 161221 By 08171 mark
               IF cl_null(g_gldp_m_o.gldpld) OR g_gldp_m.gldpld != g_gldp_m_o.gldpld THEN  #160824-00007#261 161221 By 08171 add
                  CALL s_merge_ld_with_comp_chk(g_gldp_m.gldpld,g_gldp_m.gldp001,g_user,1)RETURNING g_sub_success,g_errno   #albireo 151104 參數1>3
                  IF NOT g_sub_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                    #LET g_gldp_m.gldpld = g_gldp_m_t.gldpld #160824-00007#261 161221 By 08171 mark
                     LET g_gldp_m.gldpld = g_gldp_m_o.gldpld #160824-00007#261 161221 By 08171 add
                     LET g_gldp_m.gldpld_desc = s_desc_get_ld_desc(g_gldp_m.gldpld)
                     DISPLAY BY NAME g_gldp_m.gldpld,g_gldp_m.gldpld_desc
                     LET g_glaald = g_gldp_m.gldpld
                     NEXT FIELD CURRENT
                  END IF
                  

                  
                  CALL aglt502_get_ld_info(g_gldp_m.gldpld)RETURNING g_glaa.*
                  #160824-00007#261 161221 By 08171 --s add
                  LET g_gldp_m.gldp008 = ''
                  LET g_gldp_m.gldp011 = ''
                  LET g_gldp_m.gldp014 = ''
                  #160824-00007#261 161221 By 08171 --e add
                  LET g_gldp_m.gldp008 = g_glaa.glaa001
                  LET g_gldp_m.gldp011 = g_glaa.glaa016
                  LET g_gldp_m.gldp014 = g_glaa.glaa020
                  DISPLAY BY NAME g_gldp_m.gldp008,g_gldp_m.gldp011,g_gldp_m.gldp014
                  
                  IF NOT cl_null(g_gldp_m.gldpdocdt)THEN
                     CALL s_fin_date_get_period_value('',g_gldp_m.gldpld,g_gldp_m.gldpdocdt)
                        RETURNING g_sub_success,g_gldp_m.gldp003,g_gldp_m.gldp004
                     IF NOT g_sub_success THEN
                       #LET g_gldp_m.gldpld = g_gldp_m_t.gldpld #160824-00007#261 161221 By 08171 mark
                        LET g_gldp_m.gldpld = g_gldp_m_o.gldpld #160824-00007#261 161221 By 08171 add
                        LET g_gldp_m.gldpld_desc = s_desc_get_ld_desc(g_gldp_m.gldpld)
                        CALL s_fin_date_get_period_value('',g_gldp_m.gldpld,g_gldp_m.gldpdocdt)
                           RETURNING g_sub_success,g_gldp_m.gldp003,g_gldp_m.gldp004
                        DISPLAY BY NAME g_gldp_m.gldpld,g_gldp_m.gldpld_desc,
                                        g_gldp_m.gldp003,g_gldp_m.gldp004
                        LET g_glaald = g_gldp_m.gldpld
                     END IF
                     DISPLAY BY NAME g_gldp_m.gldp003,g_gldp_m.gldp004
                  END IF
                  LET g_glaald = g_gldp_m.gldpld
               END IF
            END IF
            LET g_gldp_m.gldpld_desc = s_desc_get_ld_desc(g_gldp_m.gldpld)
            DISPLAY BY NAME g_gldp_m.gldpld,g_gldp_m.gldpld_desc
            LET g_glaald = g_gldp_m.gldpld
            CALL aglt502_set_no_visible()
            LET g_gldp_m_o.* = g_gldp_m.* #160824-00007#261 161221 By 08171 add
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldpld
            #add-point:BEFORE FIELD gldpld name="input.b.gldpld"
            CALL aglt502_set_visible()
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldpld
            #add-point:ON CHANGE gldpld name="input.g.gldpld"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldp001
            
            #add-point:AFTER FIELD gldp001 name="input.a.gldp001"
            LET g_gldp_m.gldp001_desc = ' '
            DISPLAY BY NAME g_gldp_m.gldp001_desc
            IF NOT cl_null(g_gldp_m.gldp001) THEN
               #IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_gldp_m.gldp001 != g_gldp_m_t.gldp001 OR g_gldp_m_t.gldp001 IS NULL )) THEN #160824-00007#261 161221 By 08171 mark
               IF cl_null(g_gldp_m_o.gldp001) OR g_gldp_m.gldp001 != g_gldp_m_o.gldp001 THEN #160824-00007#261 161221 By 08171 add
                  CALL s_merge_glda001_chk(g_gldp_m.gldp001)
                     RETURNING g_sub_success,g_errno
                  IF NOT g_sub_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                    #LET g_gldp_m.gldp001 = g_gldp_m_t.gldp001 #160824-00007#261 161221 By 08171 mark
                     LET g_gldp_m.gldp001 = g_gldp_m_o.gldp001 #160824-00007#261 161221 By 08171 add
                     LET g_gldp_m.gldp001_desc =  s_desc_glda001_desc(g_gldp_m.gldp001)
                     DISPLAY BY NAME g_gldp_m.gldp001,g_gldp_m.gldp001_desc
                     NEXT FIELD CURRENT
                  END IF
                                    
                  CASE
                     WHEN g_progtype = 'M'
                        LET g_glaald = g_gldp_m.gldp002
                        LET l_chktype = '4'  
                     OTHERWISE 
                        LET g_glaald = g_gldp_m.gldpld
                        LET l_chktype = '1'
                  END CASE
                  CALL s_merge_ld_with_comp_chk(g_glaald,g_gldp_m.gldp001,g_user,l_chktype)RETURNING g_sub_success,g_errno
                  IF NOT g_sub_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                    #LET g_gldp_m.gldp001 = g_gldp_m_t.gldp001 #160824-00007#261 161221 By 08171 mark
                     LET g_gldp_m.gldp001 = g_gldp_m_o.gldp001 #160824-00007#261 161221 By 08171 add
                     LET g_gldp_m.gldp001_desc = s_desc_glda001_desc(g_gldp_m.gldp001)
                     DISPLAY BY NAME g_gldp_m.gldp001,g_gldp_m.gldp001_desc
                     NEXT FIELD CURRENT
                  END IF
                  
               END IF
            END IF
            LET g_gldp_m.gldp001_desc =  s_desc_glda001_desc(g_gldp_m.gldp001)
            DISPLAY BY NAME g_gldp_m.gldp001,g_gldp_m.gldp001_desc
            LET g_gldp_m_o.* = g_gldp_m.* #160824-00007#261 161221 By 08171 add
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldp001
            #add-point:BEFORE FIELD gldp001 name="input.b.gldp001"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldp001
            #add-point:ON CHANGE gldp001 name="input.g.gldp001"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldp002
            
            #add-point:AFTER FIELD gldp002 name="input.a.gldp002"
            LET g_gldp_m.gldp002_desc = ' '
            DISPLAY BY NAME g_gldp_m.gldp002_desc
            IF NOT cl_null(g_gldp_m.gldp002) THEN
               #IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_gldp_m.gldp002 != g_gldp_m_t.gldp002 OR g_gldp_m_t.gldp002 IS NULL )) THEN #160824-00007#261 161221 By 08171 mark
               IF cl_null(g_gldp_m_o.gldp002) OR g_gldp_m.gldp002 != g_gldp_m_o.gldp002 THEN #160824-00007#261 161221 By 08171 add
                  CALL s_merge_ld_with_comp_chk(g_gldp_m.gldp002,g_gldp_m.gldp001,g_user,4)RETURNING g_sub_success,g_errno
                  IF NOT g_sub_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                    #LET g_gldp_m.gldp002 = g_gldp_m_t.gldp002 #160824-00007#261 161221 By 08171 mark
                     LET g_gldp_m.gldp002 = g_gldp_m_o.gldp002 #160824-00007#261 161221 By 08171 add
                     LET g_gldp_m.gldp002_desc = s_desc_get_ld_desc(g_gldp_m.gldp002)
                     DISPLAY BY NAME g_gldp_m.gldp002,g_gldp_m.gldp002_desc
                     LET g_glaald = g_gldp_m.gldp002
                     NEXT FIELD CURRENT
                  END IF
                  
                  #檢核排除中間層在單身打的合併帳別-----s
                  #" AND glaald NOT IN (SELECT gldbld FROM gldb_t WHERE gldbent = ",g_enterprise,") "
                  LET l_count = NULL
                  SELECT COUNT(*) INTO l_count FROM gldb_t
                   WHERE gldbent = g_enterprise
                     AND gldbld  = g_gldp_m.gldp002
                  IF cl_null(l_count)THEN LET l_count = 0 END IF
                  
                  IF l_count > 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'agl-00401'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                    #LET g_gldp_m.gldp002 = g_gldp_m_t.gldp002 #160824-00007#261 161221 By 08171 mark
                     LET g_gldp_m.gldp002 = g_gldp_m_o.gldp002 #160824-00007#261 161221 By 08171 add
                     LET g_gldp_m.gldp002_desc = s_desc_get_ld_desc(g_gldp_m.gldp002)
                     DISPLAY BY NAME g_gldp_m.gldp002,g_gldp_m.gldp002_desc
                     LET g_glaald = g_gldp_m.gldp002
                     NEXT FIELD CURRENT
                  END IF
                  #檢核排除中間層在單身打的合併帳別-----e
                  #160824-00007#261 161221 By 08171 --s add
                  LET g_gldp_m.gldp008 = ''
                  LET g_gldp_m.gldp011 = ''
                  LET g_gldp_m.gldp014 = ''
                  #160824-00007#261 161221 By 08171 --e add
                  CALL aglt502_get_ld_info(g_gldp_m.gldp002)RETURNING g_glaa.*
                  LET g_gldp_m.gldp008 = g_glaa.glaa001
                  LET g_gldp_m.gldp011 = g_glaa.glaa016
                  LET g_gldp_m.gldp014 = g_glaa.glaa020
                  DISPLAY BY NAME g_gldp_m.gldp008,g_gldp_m.gldp011,g_gldp_m.gldp014
                  
                  IF NOT cl_null(g_gldp_m.gldpdocdt)THEN
                     CALL s_fin_date_get_period_value('',g_gldp_m.gldp002,g_gldp_m.gldpdocdt)
                        RETURNING g_sub_success,g_gldp_m.gldp003,g_gldp_m.gldp004
                     IF NOT g_sub_success THEN
                       #LET g_gldp_m.gldp002 = g_gldp_m_t.gldp002 #160824-00007#261 161221 By 08171 mark
                        LET g_gldp_m.gldp002 = g_gldp_m_o.gldp002 #160824-00007#261 161221 By 08171 add
                        LET g_gldp_m.gldp002_desc = s_desc_get_ld_desc(g_gldp_m.gldp002)
                        CALL s_fin_date_get_period_value('',g_gldp_m.gldp002,g_gldp_m.gldpdocdt)
                           RETURNING g_sub_success,g_gldp_m.gldp003,g_gldp_m.gldp004
                        DISPLAY BY NAME g_gldp_m.gldp002,g_gldp_m.gldp002_desc,
                                        g_gldp_m.gldp003,g_gldp_m.gldp004
                        LET g_glaald = g_gldp_m.gldp002
                     END IF
                     DISPLAY BY NAME g_gldp_m.gldp003,g_gldp_m.gldp004
                  END IF
                  LET g_glaald = g_gldp_m.gldp002
               END IF
            END IF
            LET g_gldp_m.gldp002_desc = s_desc_get_ld_desc(g_gldp_m.gldp002)
            DISPLAY BY NAME g_gldp_m.gldp002,g_gldp_m.gldp002_desc
            CALL aglt502_set_no_visible()
            LET g_gldp_m_o.* = g_gldp_m.* #160824-00007#261 161221 By 08171 add
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldp002
            #add-point:BEFORE FIELD gldp002 name="input.b.gldp002"
            CALL aglt502_set_visible()
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldp002
            #add-point:ON CHANGE gldp002 name="input.g.gldp002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldpdocno
            #add-point:BEFORE FIELD gldpdocno name="input.b.gldpdocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldpdocno
            
            #add-point:AFTER FIELD gldpdocno name="input.a.gldpdocno"
            #應用 a05 樣板自動產生(Version:2)
            #aglt503(資產) aglt504(損益) 用同種單別,單別作業代號都要設定成aglt503
            IF NOT cl_null(g_gldp_m.gldpdocno) THEN
               #IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_gldp_m.gldpdocno != g_gldp_m_t.gldpdocno OR g_gldp_m_t.gldpdocno IS NULL )) THEN #160824-00007#261 161221 By 08171 mark
               IF cl_null(g_gldp_m_o.gldpdocno) OR g_gldp_m.gldpdocno != g_gldp_m_o.gldpdocno THEN #160824-00007#261 161221 By 08171 add
                   #150423 albireo-----s
                   # aglp700產生傳票aglt503 aglt504 用同種單別 因此都設定成aglt503
                   #IF g_prog = 'aglt504' THEN        #160705-00042#8 160712 by sakura mark
                   IF g_prog MATCHES 'aglt504' THEN   #160705-00042#8 160712 by sakura add
                      LET l_prog = 'aglt503'
                   ELSE
                      LET l_prog = g_prog
                   END IF
                   #150423 albireo-----e
                   IF NOT s_aooi200_fin_chk_docno(g_glaald,'','',g_gldp_m.gldpdocno,g_gldp_m.gldpdocdt,l_prog) THEN
                    #LET g_gldp_m.gldpdocno = g_gldp_m_t.gldpdocno #160824-00007#261 161221 By 08171 mark
                     LET g_gldp_m.gldpdocno = g_gldp_m_o.gldpdocno #160824-00007#261 161221 By 08171 add
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET g_gldp_m_o.* = g_gldp_m.*  #160824-00007#261 161221 By 08171 add
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldpdocno
            #add-point:ON CHANGE gldpdocno name="input.g.gldpdocno"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldpdocdt
            #add-point:BEFORE FIELD gldpdocdt name="input.b.gldpdocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldpdocdt
            
            #add-point:AFTER FIELD gldpdocdt name="input.a.gldpdocdt"
            CALL cl_get_para(g_enterprise,g_gldp_m.gldp001,'S-FIN-3007') 
               RETURNING g_sfin3007
            IF NOT cl_null(g_gldp_m.gldpdocdt) THEN
               IF NOT cl_null(g_sfin3007) THEN
                  IF g_gldp_m.gldpdocdt <= g_sfin3007 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'aap-00110'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_gldp_m.gldpdocdt= g_gldp_m_t.gldpdocdt
                     IF NOT cl_null(g_gldp_m.gldp002)THEN
                        CALL s_fin_date_get_period_value('',g_gldp_m.gldp002,g_gldp_m.gldpdocdt)
                           RETURNING g_sub_success,g_gldp_m.gldp003,g_gldp_m.gldp004
                        DISPLAY BY NAME g_gldp_m.gldp003,g_gldp_m.gldp004
                     END IF
                     NEXT FIELD CURRENT
                  END IF
               END IF 
#               IF NOT cl_null(g_gldp_m.gldp002)THEN
#                  CALL s_fin_date_get_period_value('',g_gldp_m.gldp002,g_gldp_m.gldpdocdt)
#                     RETURNING g_sub_success,g_gldp_m.gldp003,g_gldp_m.gldp004
#                  DISPLAY BY NAME g_gldp_m.gldp003,g_gldp_m.gldp004
#               END IF    
               IF NOT cl_null(g_glaald)THEN
                  CALL s_fin_date_get_period_value('',g_glaald,g_gldp_m.gldpdocdt)
                     RETURNING g_sub_success,g_gldp_m.gldp003,g_gldp_m.gldp004
                  DISPLAY BY NAME g_gldp_m.gldp003,g_gldp_m.gldp004
               END IF 
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldpdocdt
            #add-point:ON CHANGE gldpdocdt name="input.g.gldpdocdt"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldp003
            #add-point:BEFORE FIELD gldp003 name="input.b.gldp003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldp003
            
            #add-point:AFTER FIELD gldp003 name="input.a.gldp003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldp003
            #add-point:ON CHANGE gldp003 name="input.g.gldp003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldp004
            #add-point:BEFORE FIELD gldp004 name="input.b.gldp004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldp004
            
            #add-point:AFTER FIELD gldp004 name="input.a.gldp004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldp004
            #add-point:ON CHANGE gldp004 name="input.g.gldp004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldp008
            #add-point:BEFORE FIELD gldp008 name="input.b.gldp008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldp008
            
            #add-point:AFTER FIELD gldp008 name="input.a.gldp008"
            LET g_gldp_m_o.* = g_gldp_m.* #160824-00007#261 161221 By 08171 add
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldp008
            #add-point:ON CHANGE gldp008 name="input.g.gldp008"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldp011
            #add-point:BEFORE FIELD gldp011 name="input.b.gldp011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldp011
            
            #add-point:AFTER FIELD gldp011 name="input.a.gldp011"
            LET g_gldp_m_o.* = g_gldp_m.* #160824-00007#261 161221 By 08171 add
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldp011
            #add-point:ON CHANGE gldp011 name="input.g.gldp011"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldp014
            #add-point:BEFORE FIELD gldp014 name="input.b.gldp014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldp014
            
            #add-point:AFTER FIELD gldp014 name="input.a.gldp014"
            LET g_gldp_m_o.* = g_gldp_m.* #160824-00007#261 161221 By 08171 add
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldp014
            #add-point:ON CHANGE gldp014 name="input.g.gldp014"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldp016
            #add-point:BEFORE FIELD gldp016 name="input.b.gldp016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldp016
            
            #add-point:AFTER FIELD gldp016 name="input.a.gldp016"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldp016
            #add-point:ON CHANGE gldp016 name="input.g.gldp016"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldp009
            #add-point:BEFORE FIELD gldp009 name="input.b.gldp009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldp009
            
            #add-point:AFTER FIELD gldp009 name="input.a.gldp009"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldp009
            #add-point:ON CHANGE gldp009 name="input.g.gldp009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldp010
            #add-point:BEFORE FIELD gldp010 name="input.b.gldp010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldp010
            
            #add-point:AFTER FIELD gldp010 name="input.a.gldp010"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldp010
            #add-point:ON CHANGE gldp010 name="input.g.gldp010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldp012
            #add-point:BEFORE FIELD gldp012 name="input.b.gldp012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldp012
            
            #add-point:AFTER FIELD gldp012 name="input.a.gldp012"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldp012
            #add-point:ON CHANGE gldp012 name="input.g.gldp012"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldp013
            #add-point:BEFORE FIELD gldp013 name="input.b.gldp013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldp013
            
            #add-point:AFTER FIELD gldp013 name="input.a.gldp013"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldp013
            #add-point:ON CHANGE gldp013 name="input.g.gldp013"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldp015
            #add-point:BEFORE FIELD gldp015 name="input.b.gldp015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldp015
            
            #add-point:AFTER FIELD gldp015 name="input.a.gldp015"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldp015
            #add-point:ON CHANGE gldp015 name="input.g.gldp015"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldpstus
            #add-point:BEFORE FIELD gldpstus name="input.b.gldpstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldpstus
            
            #add-point:AFTER FIELD gldpstus name="input.a.gldpstus"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldpstus
            #add-point:ON CHANGE gldpstus name="input.g.gldpstus"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq003
            
            #add-point:AFTER FIELD l_gldq003 name="input.a.l_gldq003"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq003
            #add-point:BEFORE FIELD l_gldq003 name="input.b.l_gldq003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_gldq003
            #add-point:ON CHANGE l_gldq003 name="input.g.l_gldq003"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq004
            
            #add-point:AFTER FIELD l_gldq004 name="input.a.l_gldq004"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq004
            #add-point:BEFORE FIELD l_gldq004 name="input.b.l_gldq004"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_gldq004
            #add-point:ON CHANGE l_gldq004 name="input.g.l_gldq004"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq005
            
            #add-point:AFTER FIELD l_gldq005 name="input.a.l_gldq005"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq005
            #add-point:BEFORE FIELD l_gldq005 name="input.b.l_gldq005"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_gldq005
            #add-point:ON CHANGE l_gldq005 name="input.g.l_gldq005"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq006
            
            #add-point:AFTER FIELD l_gldq006 name="input.a.l_gldq006"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq006
            #add-point:BEFORE FIELD l_gldq006 name="input.b.l_gldq006"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_gldq006
            #add-point:ON CHANGE l_gldq006 name="input.g.l_gldq006"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq007
            
            #add-point:AFTER FIELD l_gldq007 name="input.a.l_gldq007"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq007
            #add-point:BEFORE FIELD l_gldq007 name="input.b.l_gldq007"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_gldq007
            #add-point:ON CHANGE l_gldq007 name="input.g.l_gldq007"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq008
            
            #add-point:AFTER FIELD l_gldq008 name="input.a.l_gldq008"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq008
            #add-point:BEFORE FIELD l_gldq008 name="input.b.l_gldq008"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_gldq008
            #add-point:ON CHANGE l_gldq008 name="input.g.l_gldq008"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq009
            
            #add-point:AFTER FIELD l_gldq009 name="input.a.l_gldq009"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq009
            #add-point:BEFORE FIELD l_gldq009 name="input.b.l_gldq009"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_gldq009
            #add-point:ON CHANGE l_gldq009 name="input.g.l_gldq009"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq010
            
            #add-point:AFTER FIELD l_gldq010 name="input.a.l_gldq010"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq010
            #add-point:BEFORE FIELD l_gldq010 name="input.b.l_gldq010"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_gldq010
            #add-point:ON CHANGE l_gldq010 name="input.g.l_gldq010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq011
            #add-point:BEFORE FIELD l_gldq011 name="input.b.l_gldq011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq011
            
            #add-point:AFTER FIELD l_gldq011 name="input.a.l_gldq011"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_gldq011
            #add-point:ON CHANGE l_gldq011 name="input.g.l_gldq011"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq012
            
            #add-point:AFTER FIELD l_gldq012 name="input.a.l_gldq012"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq012
            #add-point:BEFORE FIELD l_gldq012 name="input.b.l_gldq012"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_gldq012
            #add-point:ON CHANGE l_gldq012 name="input.g.l_gldq012"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq013
            
            #add-point:AFTER FIELD l_gldq013 name="input.a.l_gldq013"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq013
            #add-point:BEFORE FIELD l_gldq013 name="input.b.l_gldq013"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_gldq013
            #add-point:ON CHANGE l_gldq013 name="input.g.l_gldq013"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq014
            
            #add-point:AFTER FIELD l_gldq014 name="input.a.l_gldq014"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq014
            #add-point:BEFORE FIELD l_gldq014 name="input.b.l_gldq014"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_gldq014
            #add-point:ON CHANGE l_gldq014 name="input.g.l_gldq014"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq015
            
            #add-point:AFTER FIELD l_gldq015 name="input.a.l_gldq015"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq015
            #add-point:BEFORE FIELD l_gldq015 name="input.b.l_gldq015"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_gldq015
            #add-point:ON CHANGE l_gldq015 name="input.g.l_gldq015"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_gldq016
            
            #add-point:AFTER FIELD l_gldq016 name="input.a.l_gldq016"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_gldq016
            #add-point:BEFORE FIELD l_gldq016 name="input.b.l_gldq016"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_gldq016
            #add-point:ON CHANGE l_gldq016 name="input.g.l_gldq016"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.gldp005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldp005
            #add-point:ON ACTION controlp INFIELD gldp005 name="input.c.gldp005"
            
            #END add-point
 
 
         #Ctrlp:input.c.gldp006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldp006
            #add-point:ON ACTION controlp INFIELD gldp006 name="input.c.gldp006"
            
            #END add-point
 
 
         #Ctrlp:input.c.gldp007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldp007
            #add-point:ON ACTION controlp INFIELD gldp007 name="input.c.gldp007"
            
            #END add-point
 
 
         #Ctrlp:input.c.gldpld
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldpld
            #add-point:ON ACTION controlp INFIELD gldpld name="input.c.gldpld"
            #上層公司
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_gldp_m.gldpld
            LET g_qryparam.arg1 = g_user                                 #人員權限
            LET g_qryparam.arg2 = g_dept                                 #部門權限
            LET g_qryparam.where = " glaald IN (SELECT gldbld FROM gldb_t WHERE gldbent = '",g_enterprise,"') "
            CALL q_authorised_ld()
            LET g_gldp_m.gldpld = g_qryparam.return1
            CALL s_desc_get_ld_desc(g_gldp_m.gldpld) RETURNING g_gldp_m.gldpld_desc
            DISPLAY BY NAME g_gldp_m.gldpld,g_gldp_m.gldpld_desc
            NEXT FIELD gldpld
            #END add-point
 
 
         #Ctrlp:input.c.gldp001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldp001
            #add-point:ON ACTION controlp INFIELD gldp001 name="input.c.gldp001"
            CASE
               WHEN g_progtype = 'M'
                  INITIALIZE g_qryparam.* TO NULL
                  LET g_qryparam.state = 'i'
                  LET g_qryparam.reqry = FALSE
                  LET g_qryparam.default1 = g_gldp_m.gldp001
                  CALL q_gldc002_1()
                  LET g_gldp_m.gldp001 = g_qryparam.return1
                  DISPLAY BY NAME g_gldp_m.gldp001
                  LET g_gldp_m.gldp001_desc =  s_desc_glda001_desc(g_gldp_m.gldp001)
                  DISPLAY BY NAME g_gldp_m.gldp001,g_gldp_m.gldp001_desc
                  NEXT FIELD gldp001
               OTHERWISE
                  INITIALIZE g_qryparam.* TO NULL
                  LET g_qryparam.state = 'i'
                  LET g_qryparam.reqry = FALSE
                  LET g_qryparam.default1 = g_gldp_m.gldp001
                  LET g_qryparam.where = " gldc009 = 'Y' ",
                                         " AND gldcld = '",g_gldp_m.gldpld,"' "  #albireo 151104 add
                  CALL q_gldc001_1()   #albireo 151104 add
                  LET g_gldp_m.gldp001 = g_qryparam.return1
                  DISPLAY BY NAME g_gldp_m.gldp001
                  LET g_gldp_m.gldp001_desc =  s_desc_glda001_desc(g_gldp_m.gldp001)
                  DISPLAY BY NAME g_gldp_m.gldp001,g_gldp_m.gldp001_desc
                  NEXT FIELD gldp001                  
            END CASE
            #END add-point
 
 
         #Ctrlp:input.c.gldp002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldp002
            #add-point:ON ACTION controlp INFIELD gldp002 name="input.c.gldp002"
            #下層公司
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_gldp_m.gldp002
            LET g_qryparam.where = " glaald IN (SELECT gldc003 FROM gldc_t WHERE gldc002 = '",g_gldp_m.gldp001,"' AND gldcent = ",g_enterprise," ) ",
                                   " AND glaald NOT IN (SELECT gldbld FROM gldb_t WHERE gldbent = ",g_enterprise,") "
            LET g_qryparam.arg1 = g_user                                 #人員權限
            LET g_qryparam.arg2 = g_dept                                 #部門權限
            CALL q_gldc003()
            LET g_gldp_m.gldp002 = g_qryparam.return1
            CALL s_desc_get_ld_desc(g_gldp_m.gldp002) RETURNING g_gldp_m.gldp002_desc
            DISPLAY BY NAME g_gldp_m.gldp002,g_gldp_m.gldp002_desc
            NEXT FIELD gldp002
            #END add-point
 
 
         #Ctrlp:input.c.gldpdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldpdocno
            #add-point:ON ACTION controlp INFIELD gldpdocno name="input.c.gldpdocno"
            DISPLAY "glaa024=",g_glaa.glaa024
            #150423 albireo-----s
            # aglp700產生傳票aglt503 aglt504 用同種單別 因此都設定成aglt503
            #IF g_prog = 'aglt504' THEN        #160705-00042#8 160712 by sakura mark
            IF g_prog MATCHES 'aglt504' THEN   #160705-00042#8 160712 by sakura add
               LET l_prog = 'aglt503'
            ELSE
               LET l_prog = g_prog
            END IF
            #150423 albireo-----e
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_gldp_m.gldpdocno
            LET g_qryparam.arg1 = g_glaa.glaa024
            LET g_qryparam.arg2 = l_prog
            CALL q_ooba002_1()
            LET g_gldp_m.gldpdocno = g_qryparam.return1
            DISPLAY BY NAME g_gldp_m.gldpdocno
            NEXT FIELD gldpdocno
            #END add-point
 
 
         #Ctrlp:input.c.gldpdocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldpdocdt
            #add-point:ON ACTION controlp INFIELD gldpdocdt name="input.c.gldpdocdt"
            
            #END add-point
 
 
         #Ctrlp:input.c.gldp003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldp003
            #add-point:ON ACTION controlp INFIELD gldp003 name="input.c.gldp003"
            
            #END add-point
 
 
         #Ctrlp:input.c.gldp004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldp004
            #add-point:ON ACTION controlp INFIELD gldp004 name="input.c.gldp004"
            
            #END add-point
 
 
         #Ctrlp:input.c.gldp008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldp008
            #add-point:ON ACTION controlp INFIELD gldp008 name="input.c.gldp008"
            
            #END add-point
 
 
         #Ctrlp:input.c.gldp011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldp011
            #add-point:ON ACTION controlp INFIELD gldp011 name="input.c.gldp011"
            
            #END add-point
 
 
         #Ctrlp:input.c.gldp014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldp014
            #add-point:ON ACTION controlp INFIELD gldp014 name="input.c.gldp014"
            
            #END add-point
 
 
         #Ctrlp:input.c.gldp016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldp016
            #add-point:ON ACTION controlp INFIELD gldp016 name="input.c.gldp016"
            
            #END add-point
 
 
         #Ctrlp:input.c.gldp009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldp009
            #add-point:ON ACTION controlp INFIELD gldp009 name="input.c.gldp009"
            
            #END add-point
 
 
         #Ctrlp:input.c.gldp010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldp010
            #add-point:ON ACTION controlp INFIELD gldp010 name="input.c.gldp010"
            
            #END add-point
 
 
         #Ctrlp:input.c.gldp012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldp012
            #add-point:ON ACTION controlp INFIELD gldp012 name="input.c.gldp012"
            
            #END add-point
 
 
         #Ctrlp:input.c.gldp013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldp013
            #add-point:ON ACTION controlp INFIELD gldp013 name="input.c.gldp013"
            
            #END add-point
 
 
         #Ctrlp:input.c.gldp015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldp015
            #add-point:ON ACTION controlp INFIELD gldp015 name="input.c.gldp015"
            
            #END add-point
 
 
         #Ctrlp:input.c.gldpstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldpstus
            #add-point:ON ACTION controlp INFIELD gldpstus name="input.c.gldpstus"
            
            #END add-point
 
 
         #Ctrlp:input.c.l_gldq003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq003
            #add-point:ON ACTION controlp INFIELD l_gldq003 name="input.c.l_gldq003"
            
            #END add-point
 
 
         #Ctrlp:input.c.l_gldq004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq004
            #add-point:ON ACTION controlp INFIELD l_gldq004 name="input.c.l_gldq004"
            
            #END add-point
 
 
         #Ctrlp:input.c.l_gldq005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq005
            #add-point:ON ACTION controlp INFIELD l_gldq005 name="input.c.l_gldq005"
            
            #END add-point
 
 
         #Ctrlp:input.c.l_gldq006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq006
            #add-point:ON ACTION controlp INFIELD l_gldq006 name="input.c.l_gldq006"
            
            #END add-point
 
 
         #Ctrlp:input.c.l_gldq007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq007
            #add-point:ON ACTION controlp INFIELD l_gldq007 name="input.c.l_gldq007"
            
            #END add-point
 
 
         #Ctrlp:input.c.l_gldq008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq008
            #add-point:ON ACTION controlp INFIELD l_gldq008 name="input.c.l_gldq008"
            
            #END add-point
 
 
         #Ctrlp:input.c.l_gldq009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq009
            #add-point:ON ACTION controlp INFIELD l_gldq009 name="input.c.l_gldq009"
            
            #END add-point
 
 
         #Ctrlp:input.c.l_gldq010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq010
            #add-point:ON ACTION controlp INFIELD l_gldq010 name="input.c.l_gldq010"
            
            #END add-point
 
 
         #Ctrlp:input.c.l_gldq011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq011
            #add-point:ON ACTION controlp INFIELD l_gldq011 name="input.c.l_gldq011"
            
            #END add-point
 
 
         #Ctrlp:input.c.l_gldq012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq012
            #add-point:ON ACTION controlp INFIELD l_gldq012 name="input.c.l_gldq012"
            
            #END add-point
 
 
         #Ctrlp:input.c.l_gldq013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq013
            #add-point:ON ACTION controlp INFIELD l_gldq013 name="input.c.l_gldq013"
            
            #END add-point
 
 
         #Ctrlp:input.c.l_gldq014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq014
            #add-point:ON ACTION controlp INFIELD l_gldq014 name="input.c.l_gldq014"
            
            #END add-point
 
 
         #Ctrlp:input.c.l_gldq015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq015
            #add-point:ON ACTION controlp INFIELD l_gldq015 name="input.c.l_gldq015"
            
            #END add-point
 
 
         #Ctrlp:input.c.l_gldq016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_gldq016
            #add-point:ON ACTION controlp INFIELD l_gldq016 name="input.c.l_gldq016"
            
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_gldp_m.gldpdocno
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               #150423 albireo-----s
               # aglp700產生傳票aglt503 aglt504 用同種單別 因此都設定成aglt503
               #IF g_prog = 'aglt504' THEN        #160705-00042#8 160712 by sakura mark
               IF g_prog MATCHES 'aglt504' THEN   #160705-00042#8 160712 by sakura add
                  LET l_prog = 'aglt503'
               ELSE
                  LET l_prog = g_prog
               END IF
               #150423 albireo-----e
               CALL s_aooi200_fin_gen_docno(g_glaald,'','',g_gldp_m.gldpdocno,g_gldp_m.gldpdocdt,l_prog)
                    RETURNING g_sub_success,g_gldp_m.gldpdocno
               IF NOT g_sub_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-00003'
                  LET g_errparam.extend = g_gldp_m.gldpdocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD gldpdocno
               END IF
               DISPLAY BY NAME g_gldp_m.gldpdocno
               #end add-point
               
               INSERT INTO gldp_t (gldpent,gldp005,gldp006,gldp007,gldpld,gldp001,gldp002,gldpdocno, 
                   gldpdocdt,gldp003,gldp004,gldp008,gldp011,gldp014,gldp016,gldp009,gldp010,gldp012, 
                   gldp013,gldp015,gldpstus,gldpownid,gldpowndp,gldpcrtid,gldpcrtdp,gldpcrtdt,gldpmodid, 
                   gldpmoddt,gldpcnfid,gldpcnfdt,gldppstid,gldppstdt)
               VALUES (g_enterprise,g_gldp_m.gldp005,g_gldp_m.gldp006,g_gldp_m.gldp007,g_gldp_m.gldpld, 
                   g_gldp_m.gldp001,g_gldp_m.gldp002,g_gldp_m.gldpdocno,g_gldp_m.gldpdocdt,g_gldp_m.gldp003, 
                   g_gldp_m.gldp004,g_gldp_m.gldp008,g_gldp_m.gldp011,g_gldp_m.gldp014,g_gldp_m.gldp016, 
                   g_gldp_m.gldp009,g_gldp_m.gldp010,g_gldp_m.gldp012,g_gldp_m.gldp013,g_gldp_m.gldp015, 
                   g_gldp_m.gldpstus,g_gldp_m.gldpownid,g_gldp_m.gldpowndp,g_gldp_m.gldpcrtid,g_gldp_m.gldpcrtdp, 
                   g_gldp_m.gldpcrtdt,g_gldp_m.gldpmodid,g_gldp_m.gldpmoddt,g_gldp_m.gldpcnfid,g_gldp_m.gldpcnfdt, 
                   g_gldp_m.gldppstid,g_gldp_m.gldppstdt) 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_gldp_m:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               
               #end add-point
               
               
               
               
               #add-point:單頭新增後 name="input.head.a_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL aglt502_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL aglt502_b_fill()
                  CALL aglt502_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
               
               #將遮罩欄位還原
               CALL aglt502_gldp_t_mask_restore('restore_mask_o')
               
               UPDATE gldp_t SET (gldp005,gldp006,gldp007,gldpld,gldp001,gldp002,gldpdocno,gldpdocdt, 
                   gldp003,gldp004,gldp008,gldp011,gldp014,gldp016,gldp009,gldp010,gldp012,gldp013,gldp015, 
                   gldpstus,gldpownid,gldpowndp,gldpcrtid,gldpcrtdp,gldpcrtdt,gldpmodid,gldpmoddt,gldpcnfid, 
                   gldpcnfdt,gldppstid,gldppstdt) = (g_gldp_m.gldp005,g_gldp_m.gldp006,g_gldp_m.gldp007, 
                   g_gldp_m.gldpld,g_gldp_m.gldp001,g_gldp_m.gldp002,g_gldp_m.gldpdocno,g_gldp_m.gldpdocdt, 
                   g_gldp_m.gldp003,g_gldp_m.gldp004,g_gldp_m.gldp008,g_gldp_m.gldp011,g_gldp_m.gldp014, 
                   g_gldp_m.gldp016,g_gldp_m.gldp009,g_gldp_m.gldp010,g_gldp_m.gldp012,g_gldp_m.gldp013, 
                   g_gldp_m.gldp015,g_gldp_m.gldpstus,g_gldp_m.gldpownid,g_gldp_m.gldpowndp,g_gldp_m.gldpcrtid, 
                   g_gldp_m.gldpcrtdp,g_gldp_m.gldpcrtdt,g_gldp_m.gldpmodid,g_gldp_m.gldpmoddt,g_gldp_m.gldpcnfid, 
                   g_gldp_m.gldpcnfdt,g_gldp_m.gldppstid,g_gldp_m.gldppstdt)
                WHERE gldpent = g_enterprise AND gldpdocno = g_gldpdocno_t
 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "gldp_t:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL aglt502_gldp_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_gldp_m_t)
               LET g_log2 = util.JSON.stringify(g_gldp_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_gldpdocno_t = g_gldp_m.gldpdocno
 
            
      END INPUT
   
 
{</section>}
 
{<section id="aglt502.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_gldq_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_gldq_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aglt502_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_gldq_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aglt502_cl USING g_enterprise,g_gldp_m.gldpdocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN aglt502_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE aglt502_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_gldq_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_gldq_d[l_ac].gldqseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_gldq_d_t.* = g_gldq_d[l_ac].*  #BACKUP
               LET g_gldq_d_o.* = g_gldq_d[l_ac].*  #BACKUP
               CALL aglt502_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               
               #end add-point  
               CALL aglt502_set_no_entry_b(l_cmd)
               IF NOT aglt502_lock_b("gldq_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aglt502_bcl INTO g_gldq_d[l_ac].gldqseq,g_gldq_d[l_ac].gldq023,g_gldq_d[l_ac].gldq001, 
                      g_gldq_d[l_ac].gldq017,g_gldq_d[l_ac].gldq018,g_gldq_d[l_ac].gldq019,g_gldq_d[l_ac].gldq020, 
                      g_gldq_d[l_ac].gldq021,g_gldq_d[l_ac].gldq022,g_gldq_d[l_ac].gldq003,g_gldq_d[l_ac].gldq004, 
                      g_gldq_d[l_ac].gldq005,g_gldq_d[l_ac].gldq006,g_gldq_d[l_ac].gldq007,g_gldq_d[l_ac].gldq008, 
                      g_gldq_d[l_ac].gldq009,g_gldq_d[l_ac].gldq010,g_gldq_d[l_ac].gldq011,g_gldq_d[l_ac].gldq012, 
                      g_gldq_d[l_ac].gldq013,g_gldq_d[l_ac].gldq014,g_gldq_d[l_ac].gldq015,g_gldq_d[l_ac].gldq016 
 
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_gldq_d_t.gldqseq,":",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_gldq_d_mask_o[l_ac].* =  g_gldq_d[l_ac].*
                  CALL aglt502_gldq_t_mask()
                  LET g_gldq_d_mask_n[l_ac].* =  g_gldq_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL aglt502_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            LET g_gldq_d[l_ac].gldq001_desc =  s_desc_get_account_desc(g_glaald,g_gldq_d[l_ac].gldq001)
            CALL aglt502_otherdetail_show(l_ac)
            CALL s_fin_sel_glad(g_glaald,g_gldq_d[l_ac].gldq001,'ALL') RETURNING g_glad.*
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_gldq_d[l_ac].* TO NULL 
            INITIALIZE g_gldq_d_t.* TO NULL 
            INITIALIZE g_gldq_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_gldq_d[l_ac].gldqseq = "0"
      LET g_gldq_d[l_ac].gldq017 = "0"
      LET g_gldq_d[l_ac].gldq018 = "0"
      LET g_gldq_d[l_ac].gldq019 = "0"
      LET g_gldq_d[l_ac].gldq020 = "0"
      LET g_gldq_d[l_ac].gldq021 = "0"
      LET g_gldq_d[l_ac].gldq022 = "0"
 
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            SELECT MAX(gldqseq)+1 INTO g_gldq_d[l_ac].gldqseq
              FROM gldq_t
             WHERE gldqent = g_enterprise 
               AND gldqdocno = g_gldp_m.gldpdocno
            IF cl_null(g_gldq_d[l_ac].gldqseq) THEN LET g_gldq_d[l_ac].gldqseq = 1 END IF
            CALL g_gldq_ar.clear()
            #CALL aglt502_get_gldq002(g_gldq_ar)RETURNING g_gldq_d[l_ac].gldq002

            #依單頭帳套所屬法人帶預設值到營運據點,核算項中的營運據點預設值也是來自此處
            SELECT glaacomp INTO g_gldq_d[l_ac].gldq003 FROM glaa_t
             WHERE glaaent = g_enterprise
               AND glaald  = g_glaald
         
            #end add-point
            LET g_gldq_d_t.* = g_gldq_d[l_ac].*     #新輸入資料
            LET g_gldq_d_o.* = g_gldq_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aglt502_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            
            #end add-point
            CALL aglt502_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_gldq_d[li_reproduce_target].* = g_gldq_d[li_reproduce].*
 
               LET g_gldq_d[li_reproduce_target].gldqseq = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
 
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM gldq_t 
             WHERE gldqent = g_enterprise AND gldqdocno = g_gldp_m.gldpdocno
 
               AND gldqseq = g_gldq_d[l_ac].gldqseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gldp_m.gldpdocno
               LET gs_keys[2] = g_gldq_d[g_detail_idx].gldqseq
               CALL aglt502_insert_b('gldq_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               INITIALIZE g_gldq_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "gldq_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aglt502_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_gldp_m.gldpdocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_gldq_d_t.gldqseq
 
            
               #刪除同層單身
               IF NOT aglt502_delete_b('gldq_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE aglt502_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT aglt502_key_delete_b(gs_keys,'gldq_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE aglt502_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
               
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE aglt502_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               
               #end add-point
               LET l_count = g_gldq_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_gldq_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldqseq
            #add-point:BEFORE FIELD gldqseq name="input.b.page1.gldqseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldqseq
            
            #add-point:AFTER FIELD gldqseq name="input.a.page1.gldqseq"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
#            IF  g_gldp_m.gldpdocno IS NOT NULL AND g_gldq_d[g_detail_idx].gldqseq IS NOT NULL AND g_gldq_d[g_detail_idx].gldq002 IS NOT NULL THEN 
#               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_gldp_m.gldpdocno != g_gldpdocno_t OR g_gldq_d[g_detail_idx].gldqseq != g_gldq_d_t.gldqseq OR g_gldq_d[g_detail_idx].gldq002 != g_gldq_d_t.gldq002)) THEN 
#                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM gldq_t WHERE "||"gldqent = '" ||g_enterprise|| "' AND "||"gldqdocno = '"||g_gldp_m.gldpdocno ||"' AND "|| "gldqseq = '"||g_gldq_d[g_detail_idx].gldqseq ||"' AND "|| "gldq002 = '"||g_gldq_d[g_detail_idx].gldq002 ||"'",'std-00004',0) THEN 
#                     NEXT FIELD CURRENT
#                  END IF
#               END IF
#            END IF
#

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldqseq
            #add-point:ON CHANGE gldqseq name="input.g.page1.gldqseq"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq023
            #add-point:BEFORE FIELD gldq023 name="input.b.page1.gldq023"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq023
            
            #add-point:AFTER FIELD gldq023 name="input.a.page1.gldq023"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldq023
            #add-point:ON CHANGE gldq023 name="input.g.page1.gldq023"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq001
            
            #add-point:AFTER FIELD gldq001 name="input.a.page1.gldq001"
            LET g_gldq_d[l_ac].gldq001_desc = ' '
            DISPLAY BY NAME g_gldq_d[l_ac].gldq001_desc
            IF NOT cl_null(g_gldq_d[l_ac].gldq001) THEN
               #IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_gldq_d[l_ac].gldq001 != g_gldq_d_t.gldq001 OR g_gldq_d_t.gldq001 IS NULL )) THEN #160824-00007#261 161221 By 08171 mark
               IF cl_null(g_gldq_d_o.gldq001) OR g_gldq_d[l_ac].gldq001 != g_gldq_d_o.gldq001 THEN #160824-00007#261 161221 By 08171 add
                  
                  CASE
                     WHEN g_progtype = 'M'
                        LET g_glaald = g_gldp_m.gldp002
                     OTHERWISE 
                        LET g_glaald = g_gldp_m.gldpld
                  END CASE
                  CALL s_merge_glac002_chk(g_glaa.glaa004,g_gldq_d[l_ac].gldq001) 
                     RETURNING g_sub_success,g_errno
                  IF NOT g_sub_success THEN
                     INITIALIZE g_errparam.* TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = ''
                     #160321-00016#31 --s add
                     IF g_errno = 'sub-01302' THEN
                        LET g_errparam.replace[1] = 'agli020'
                        LET g_errparam.replace[2] = cl_get_progname('agli020',g_lang,"2")
                        LET g_errparam.exeprog = 'agli020'
                     END IF
                     #160321-00016#31 --e add
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                    #LET g_gldq_d[l_ac].gldq001 = g_gldq_d_t.gldq001 #160824-00007#261 161221 By 08171 mark
                     LET g_gldq_d[l_ac].gldq001 = g_gldq_d_o.gldq001 #160824-00007#261 161221 By 08171 add
                     LET g_gldq_d[l_ac].gldq001_desc =  s_desc_get_account_desc(g_glaald,g_gldq_d[l_ac].gldq001)
                     DISPLAY BY NAME g_gldq_d[l_ac].gldq001,g_gldq_d[l_ac].gldq001_desc
                     NEXT FIELD CURRENT
                  END IF
                  CALL s_fin_sel_glad(g_glaald,g_gldq_d[l_ac].gldq001,'ALL') RETURNING g_glad.*
                  IF (g_glad.glad007 = 'N' OR cl_null(g_glad.glad007))
                     AND (g_glad.glad008 = 'N' OR cl_null(g_glad.glad008))
                     AND (g_glad.glad009 = 'N' OR cl_null(g_glad.glad009))
                     AND (g_glad.glad010 = 'N' OR cl_null(g_glad.glad010))
                     AND (g_glad.glad027 = 'N' OR cl_null(g_glad.glad027))
                     AND (g_glad.glad011 = 'N' OR cl_null(g_glad.glad011))
                     AND (g_glad.glad012 = 'N' OR cl_null(g_glad.glad012))
                     AND (g_glad.glad031 = 'N' OR cl_null(g_glad.glad031))
                     AND (g_glad.glad032 = 'N' OR cl_null(g_glad.glad032))
                     AND (g_glad.glad033 = 'N' OR cl_null(g_glad.glad033))
                     AND (g_glad.glad013 = 'N' OR cl_null(g_glad.glad013))
                     AND (g_glad.glad015 = 'N' OR cl_null(g_glad.glad015))
                     AND (g_glad.glad016 = 'N' OR cl_null(g_glad.glad016)) THEN
                  ELSE
                     #核算項維護
                     CALL aglt502_open_aglt501_01(l_ac)
                     #組複合KEY                  
                     #CALL aglt502_get_gldq0022(l_ac)RETURNING g_gldq_d[l_ac].gldq002
                     DISPLAY BY NAME g_gldq_d[l_ac].gldq003,g_gldq_d[l_ac].gldq004,g_gldq_d[l_ac].gldq005,
                                     g_gldq_d[l_ac].gldq006,g_gldq_d[l_ac].gldq007,g_gldq_d[l_ac].gldq008,
                                     g_gldq_d[l_ac].gldq009,g_gldq_d[l_ac].gldq010,g_gldq_d[l_ac].gldq011,
                                     g_gldq_d[l_ac].gldq012,g_gldq_d[l_ac].gldq013,g_gldq_d[l_ac].gldq014,
                                     g_gldq_d[l_ac].gldq015,g_gldq_d[l_ac].gldq016
                     CALL aglt502_otherdetail_show(l_ac)
                  END IF
               END IF
            END IF
            LET g_gldq_d[l_ac].gldq001_desc =  s_desc_get_account_desc(g_glaald,g_gldq_d[l_ac].gldq001)
            DISPLAY BY NAME g_gldq_d[l_ac].gldq001,g_gldq_d[l_ac].gldq001_desc
            LET g_gldq_d_o.* = g_gldq_d[l_ac].* #160824-00007#261 161221 By 08171 add
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq001
            #add-point:BEFORE FIELD gldq001 name="input.b.page1.gldq001"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldq001
            #add-point:ON CHANGE gldq001 name="input.g.page1.gldq001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq001_desc
            #add-point:BEFORE FIELD gldq001_desc name="input.b.page1.gldq001_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq001_desc
            
            #add-point:AFTER FIELD gldq001_desc name="input.a.page1.gldq001_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldq001_desc
            #add-point:ON CHANGE gldq001_desc name="input.g.page1.gldq001_desc"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq017
            #add-point:BEFORE FIELD gldq017 name="input.b.page1.gldq017"
            
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq017
            
            #add-point:AFTER FIELD gldq017 name="input.a.page1.gldq017"

            IF NOT cl_null(g_gldq_d[l_ac].gldq017)THEN
               IF NOT cl_ap_chk_range(g_gldq_d[l_ac].gldq017,"0","1","","","azz-00079",1) THEN
                  NEXT FIELD gldq017
               END IF
            ELSE
               LET g_gldq_d[l_ac].gldq017 = 0 
               DISPLAY BY NAME g_gldq_d[l_ac].gldq017
            END IF
            
            IF NOT cl_null(g_gldp_m.gldp008)THEN
               CALL s_curr_round_ld('1',g_glaald,g_gldp_m.gldp008,g_gldq_d[l_ac].gldq017,2) RETURNING g_sub_success,g_errno,g_gldq_d[l_ac].gldq017
               DISPLAY BY NAME g_gldq_d[l_ac].gldq017
            END IF

            CALL aglt502_set_entry_b(p_cmd)
            CALL aglt502_set_no_entry_b(p_cmd)
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldq017
            #add-point:ON CHANGE gldq017 name="input.g.page1.gldq017"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq018
            #add-point:BEFORE FIELD gldq018 name="input.b.page1.gldq018"
        
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq018
            
            #add-point:AFTER FIELD gldq018 name="input.a.page1.gldq018"

            IF NOT cl_null(g_gldq_d[l_ac].gldq018)THEN
               IF NOT cl_ap_chk_range(g_gldq_d[l_ac].gldq018,"0","1","","","azz-00079",1) THEN
                  NEXT FIELD gldq018
               END IF
            ELSE
               LET g_gldq_d[l_ac].gldq018 = 0 
               DISPLAY BY NAME g_gldq_d[l_ac].gldq018
            END IF
            IF NOT cl_null(g_gldp_m.gldp008)THEN
               CALL s_curr_round_ld('1',g_glaald,g_gldp_m.gldp008,g_gldq_d[l_ac].gldq018,2) RETURNING g_sub_success,g_errno,g_gldq_d[l_ac].gldq018
               DISPLAY BY NAME g_gldq_d[l_ac].gldq018
            END IF
            CALL aglt502_set_entry_b(p_cmd)
            CALL aglt502_set_no_entry_b(p_cmd)
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldq018
            #add-point:ON CHANGE gldq018 name="input.g.page1.gldq018"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq019
            #add-point:BEFORE FIELD gldq019 name="input.b.page1.gldq019"
 
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq019
            
            #add-point:AFTER FIELD gldq019 name="input.a.page1.gldq019"
            IF NOT cl_null(g_gldq_d[l_ac].gldq019)THEN
               IF NOT cl_ap_chk_range(g_gldq_d[l_ac].gldq019,"0","1","","","azz-00079",1) THEN
                  NEXT FIELD gldq019
               END IF
            ELSE
               LET g_gldq_d[l_ac].gldq019 = 0 
               DISPLAY BY NAME g_gldq_d[l_ac].gldq019
            END IF
            
            IF NOT cl_null(g_gldp_m.gldp011)THEN
               CALL s_curr_round_ld('1',g_glaald,g_gldp_m.gldp011,g_gldq_d[l_ac].gldq019,2) RETURNING g_sub_success,g_errno,g_gldq_d[l_ac].gldq019
               DISPLAY BY NAME g_gldq_d[l_ac].gldq019
            END IF
            CALL aglt502_set_entry_b(p_cmd)
            CALL aglt502_set_no_entry_b(p_cmd)
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldq019
            #add-point:ON CHANGE gldq019 name="input.g.page1.gldq019"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq020
            #add-point:BEFORE FIELD gldq020 name="input.b.page1.gldq020"
           
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq020
            
            #add-point:AFTER FIELD gldq020 name="input.a.page1.gldq020"
            IF NOT cl_null(g_gldq_d[l_ac].gldq020)THEN
               IF NOT cl_ap_chk_range(g_gldq_d[l_ac].gldq020,"0","1","","","azz-00079",1) THEN
                  NEXT FIELD gldq020
               END IF
            ELSE
               LET g_gldq_d[l_ac].gldq020 = 0 
               DISPLAY BY NAME g_gldq_d[l_ac].gldq020
            END IF 
            
            IF NOT cl_null(g_gldp_m.gldp011)THEN
               CALL s_curr_round_ld('1',g_glaald,g_gldp_m.gldp011,g_gldq_d[l_ac].gldq020,2) RETURNING g_sub_success,g_errno,g_gldq_d[l_ac].gldq020
               DISPLAY BY NAME g_gldq_d[l_ac].gldq020
            END IF
            CALL aglt502_set_entry_b(p_cmd)
            CALL aglt502_set_no_entry_b(p_cmd)
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldq020
            #add-point:ON CHANGE gldq020 name="input.g.page1.gldq020"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq021
            #add-point:BEFORE FIELD gldq021 name="input.b.page1.gldq021"
 
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq021
            
            #add-point:AFTER FIELD gldq021 name="input.a.page1.gldq021"
            IF NOT cl_null(g_gldq_d[l_ac].gldq021)THEN
               IF NOT cl_ap_chk_range(g_gldq_d[l_ac].gldq021,"0","1","","","azz-00079",1) THEN
                  NEXT FIELD gldq019
               END IF
            ELSE
               LET g_gldq_d[l_ac].gldq021 = 0 
               DISPLAY BY NAME g_gldq_d[l_ac].gldq021
            END IF
            
            IF NOT cl_null(g_gldp_m.gldp014)THEN
               CALL s_curr_round_ld('1',g_glaald,g_gldp_m.gldp014,g_gldq_d[l_ac].gldq021,2) RETURNING g_sub_success,g_errno,g_gldq_d[l_ac].gldq021
               DISPLAY BY NAME g_gldq_d[l_ac].gldq021
            END IF
            CALL aglt502_set_entry_b(p_cmd)
            CALL aglt502_set_no_entry_b(p_cmd)
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldq021
            #add-point:ON CHANGE gldq021 name="input.g.page1.gldq021"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq022
            #add-point:BEFORE FIELD gldq022 name="input.b.page1.gldq022"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq022
            
            #add-point:AFTER FIELD gldq022 name="input.a.page1.gldq022"
            IF NOT cl_null(g_gldq_d[l_ac].gldq022)THEN
               IF NOT cl_ap_chk_range(g_gldq_d[l_ac].gldq022,"0","1","","","azz-00079",1) THEN
                  NEXT FIELD gldq022
               END IF
            ELSE
               LET g_gldq_d[l_ac].gldq022 = 0 
               DISPLAY BY NAME g_gldq_d[l_ac].gldq022
            END IF
            IF NOT cl_null(g_gldp_m.gldp014)THEN
               CALL s_curr_round_ld('1',g_glaald,g_gldp_m.gldp014,g_gldq_d[l_ac].gldq022,2) RETURNING g_sub_success,g_errno,g_gldq_d[l_ac].gldq022
               DISPLAY BY NAME g_gldq_d[l_ac].gldq022
            END IF            
            CALL aglt502_set_entry_b(p_cmd)
            CALL aglt502_set_no_entry_b(p_cmd)
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldq022
            #add-point:ON CHANGE gldq022 name="input.g.page1.gldq022"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq003
            
            #add-point:AFTER FIELD gldq003 name="input.a.page1.gldq003"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq003
            #add-point:BEFORE FIELD gldq003 name="input.b.page1.gldq003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldq003
            #add-point:ON CHANGE gldq003 name="input.g.page1.gldq003"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq004
            
            #add-point:AFTER FIELD gldq004 name="input.a.page1.gldq004"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq004
            #add-point:BEFORE FIELD gldq004 name="input.b.page1.gldq004"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldq004
            #add-point:ON CHANGE gldq004 name="input.g.page1.gldq004"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq005
            
            #add-point:AFTER FIELD gldq005 name="input.a.page1.gldq005"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq005
            #add-point:BEFORE FIELD gldq005 name="input.b.page1.gldq005"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldq005
            #add-point:ON CHANGE gldq005 name="input.g.page1.gldq005"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq006
            
            #add-point:AFTER FIELD gldq006 name="input.a.page1.gldq006"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq006
            #add-point:BEFORE FIELD gldq006 name="input.b.page1.gldq006"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldq006
            #add-point:ON CHANGE gldq006 name="input.g.page1.gldq006"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq007
            
            #add-point:AFTER FIELD gldq007 name="input.a.page1.gldq007"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq007
            #add-point:BEFORE FIELD gldq007 name="input.b.page1.gldq007"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldq007
            #add-point:ON CHANGE gldq007 name="input.g.page1.gldq007"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq008
            
            #add-point:AFTER FIELD gldq008 name="input.a.page1.gldq008"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq008
            #add-point:BEFORE FIELD gldq008 name="input.b.page1.gldq008"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldq008
            #add-point:ON CHANGE gldq008 name="input.g.page1.gldq008"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq009
            
            #add-point:AFTER FIELD gldq009 name="input.a.page1.gldq009"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq009
            #add-point:BEFORE FIELD gldq009 name="input.b.page1.gldq009"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldq009
            #add-point:ON CHANGE gldq009 name="input.g.page1.gldq009"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq010
            
            #add-point:AFTER FIELD gldq010 name="input.a.page1.gldq010"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq010
            #add-point:BEFORE FIELD gldq010 name="input.b.page1.gldq010"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldq010
            #add-point:ON CHANGE gldq010 name="input.g.page1.gldq010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq011
            #add-point:BEFORE FIELD gldq011 name="input.b.page1.gldq011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq011
            
            #add-point:AFTER FIELD gldq011 name="input.a.page1.gldq011"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldq011
            #add-point:ON CHANGE gldq011 name="input.g.page1.gldq011"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq012
            
            #add-point:AFTER FIELD gldq012 name="input.a.page1.gldq012"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq012
            #add-point:BEFORE FIELD gldq012 name="input.b.page1.gldq012"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldq012
            #add-point:ON CHANGE gldq012 name="input.g.page1.gldq012"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq013
            
            #add-point:AFTER FIELD gldq013 name="input.a.page1.gldq013"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq013
            #add-point:BEFORE FIELD gldq013 name="input.b.page1.gldq013"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldq013
            #add-point:ON CHANGE gldq013 name="input.g.page1.gldq013"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq014
            
            #add-point:AFTER FIELD gldq014 name="input.a.page1.gldq014"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq014
            #add-point:BEFORE FIELD gldq014 name="input.b.page1.gldq014"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldq014
            #add-point:ON CHANGE gldq014 name="input.g.page1.gldq014"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq015
            
            #add-point:AFTER FIELD gldq015 name="input.a.page1.gldq015"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq015
            #add-point:BEFORE FIELD gldq015 name="input.b.page1.gldq015"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldq015
            #add-point:ON CHANGE gldq015 name="input.g.page1.gldq015"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD gldq016
            
            #add-point:AFTER FIELD gldq016 name="input.a.page1.gldq016"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD gldq016
            #add-point:BEFORE FIELD gldq016 name="input.b.page1.gldq016"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE gldq016
            #add-point:ON CHANGE gldq016 name="input.g.page1.gldq016"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.gldqseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldqseq
            #add-point:ON ACTION controlp INFIELD gldqseq name="input.c.page1.gldqseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.gldq023
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq023
            #add-point:ON ACTION controlp INFIELD gldq023 name="input.c.page1.gldq023"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.gldq001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq001
            #add-point:ON ACTION controlp INFIELD gldq001 name="input.c.page1.gldq001"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_gldq_d[l_ac].gldq001
            LET g_qryparam.where = "glac001 = '",g_glaa.glaa004,"' AND  glac003 <>'1' AND glac006 = '1' AND glac035 = 'N' "   #151113-00002#2 151113 by sakura add glac035
            CALL aglt310_04()
            LET g_gldq_d[l_ac].gldq001 = g_qryparam.return1
            LET g_gldq_d[l_ac].gldq001_desc =  s_desc_get_account_desc(g_glaald,g_gldq_d[l_ac].gldq001)
            DISPLAY BY NAME g_gldq_d[l_ac].gldq001,g_gldq_d[l_ac].gldq001_desc    
            NEXT FIELD gldq001
            #END add-point
 
 
         #Ctrlp:input.c.page1.gldq001_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq001_desc
            #add-point:ON ACTION controlp INFIELD gldq001_desc name="input.c.page1.gldq001_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.gldq017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq017
            #add-point:ON ACTION controlp INFIELD gldq017 name="input.c.page1.gldq017"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.gldq018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq018
            #add-point:ON ACTION controlp INFIELD gldq018 name="input.c.page1.gldq018"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.gldq019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq019
            #add-point:ON ACTION controlp INFIELD gldq019 name="input.c.page1.gldq019"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.gldq020
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq020
            #add-point:ON ACTION controlp INFIELD gldq020 name="input.c.page1.gldq020"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.gldq021
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq021
            #add-point:ON ACTION controlp INFIELD gldq021 name="input.c.page1.gldq021"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.gldq022
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq022
            #add-point:ON ACTION controlp INFIELD gldq022 name="input.c.page1.gldq022"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.gldq003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq003
            #add-point:ON ACTION controlp INFIELD gldq003 name="input.c.page1.gldq003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.gldq004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq004
            #add-point:ON ACTION controlp INFIELD gldq004 name="input.c.page1.gldq004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.gldq005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq005
            #add-point:ON ACTION controlp INFIELD gldq005 name="input.c.page1.gldq005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.gldq006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq006
            #add-point:ON ACTION controlp INFIELD gldq006 name="input.c.page1.gldq006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.gldq007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq007
            #add-point:ON ACTION controlp INFIELD gldq007 name="input.c.page1.gldq007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.gldq008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq008
            #add-point:ON ACTION controlp INFIELD gldq008 name="input.c.page1.gldq008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.gldq009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq009
            #add-point:ON ACTION controlp INFIELD gldq009 name="input.c.page1.gldq009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.gldq010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq010
            #add-point:ON ACTION controlp INFIELD gldq010 name="input.c.page1.gldq010"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.gldq011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq011
            #add-point:ON ACTION controlp INFIELD gldq011 name="input.c.page1.gldq011"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.gldq012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq012
            #add-point:ON ACTION controlp INFIELD gldq012 name="input.c.page1.gldq012"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.gldq013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq013
            #add-point:ON ACTION controlp INFIELD gldq013 name="input.c.page1.gldq013"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.gldq014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq014
            #add-point:ON ACTION controlp INFIELD gldq014 name="input.c.page1.gldq014"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.gldq015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq015
            #add-point:ON ACTION controlp INFIELD gldq015 name="input.c.page1.gldq015"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.gldq016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD gldq016
            #add-point:ON ACTION controlp INFIELD gldq016 name="input.c.page1.gldq016"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_gldq_d[l_ac].* = g_gldq_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE aglt502_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_gldq_d[l_ac].gldqseq 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_gldq_d[l_ac].* = g_gldq_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL aglt502_gldq_t_mask_restore('restore_mask_o')
      
               UPDATE gldq_t SET (gldqdocno,gldqseq,gldq023,gldq001,gldq017,gldq018,gldq019,gldq020, 
                   gldq021,gldq022,gldq003,gldq004,gldq005,gldq006,gldq007,gldq008,gldq009,gldq010,gldq011, 
                   gldq012,gldq013,gldq014,gldq015,gldq016) = (g_gldp_m.gldpdocno,g_gldq_d[l_ac].gldqseq, 
                   g_gldq_d[l_ac].gldq023,g_gldq_d[l_ac].gldq001,g_gldq_d[l_ac].gldq017,g_gldq_d[l_ac].gldq018, 
                   g_gldq_d[l_ac].gldq019,g_gldq_d[l_ac].gldq020,g_gldq_d[l_ac].gldq021,g_gldq_d[l_ac].gldq022, 
                   g_gldq_d[l_ac].gldq003,g_gldq_d[l_ac].gldq004,g_gldq_d[l_ac].gldq005,g_gldq_d[l_ac].gldq006, 
                   g_gldq_d[l_ac].gldq007,g_gldq_d[l_ac].gldq008,g_gldq_d[l_ac].gldq009,g_gldq_d[l_ac].gldq010, 
                   g_gldq_d[l_ac].gldq011,g_gldq_d[l_ac].gldq012,g_gldq_d[l_ac].gldq013,g_gldq_d[l_ac].gldq014, 
                   g_gldq_d[l_ac].gldq015,g_gldq_d[l_ac].gldq016)
                WHERE gldqent = g_enterprise AND gldqdocno = g_gldp_m.gldpdocno 
 
                  AND gldqseq = g_gldq_d_t.gldqseq #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_gldq_d[l_ac].* = g_gldq_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "gldq_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_gldq_d[l_ac].* = g_gldq_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "gldq_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_gldp_m.gldpdocno
               LET gs_keys_bak[1] = g_gldpdocno_t
               LET gs_keys[2] = g_gldq_d[g_detail_idx].gldqseq
               LET gs_keys_bak[2] = g_gldq_d_t.gldqseq
               CALL aglt502_update_b('gldq_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL aglt502_gldq_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_gldq_d[g_detail_idx].gldqseq = g_gldq_d_t.gldqseq 
 
                  ) THEN
                  LET gs_keys[01] = g_gldp_m.gldpdocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_gldq_d_t.gldqseq
 
                  CALL aglt502_key_update_b(gs_keys,'gldq_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_gldp_m),util.JSON.stringify(g_gldq_d_t)
               LET g_log2 = util.JSON.stringify(g_gldp_m),util.JSON.stringify(g_gldq_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            
            #end add-point
            CALL aglt502_unlock_b("gldq_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            CALL s_transaction_begin()
            SELECT SUM(gldq017),SUM(gldq018),SUM(gldq019),
                   SUM(gldq020),SUM(gldq021),SUM(gldq022)
              INTO g_gldp_m.gldp009,g_gldp_m.gldp010,g_gldp_m.gldp012,
                   g_gldp_m.gldp013,g_gldp_m.gldp015,g_gldp_m.gldp016
              FROM gldq_t
             WHERE gldqent = g_enterprise
               AND gldqdocno = g_gldp_m.gldpdocno
            IF cl_null(g_gldp_m.gldp009)THEN LET g_gldp_m.gldp009 = 0 END IF
            IF cl_null(g_gldp_m.gldp010)THEN LET g_gldp_m.gldp010 = 0 END IF
            IF cl_null(g_gldp_m.gldp012)THEN LET g_gldp_m.gldp012 = 0 END IF
            IF cl_null(g_gldp_m.gldp013)THEN LET g_gldp_m.gldp013 = 0 END IF
            IF cl_null(g_gldp_m.gldp015)THEN LET g_gldp_m.gldp015 = 0 END IF
            IF cl_null(g_gldp_m.gldp016)THEN LET g_gldp_m.gldp016 = 0 END IF
            
            LET g_gldp_m.gldpmodid = g_user
            LET g_gldp_m.gldpmoddt = cl_get_current()
            UPDATE gldp_t SET (gldp009,gldp010,gldp012,gldp013,
                               gldp015,gldp016,gldpmodid,gldpmoddt)
                           =  (g_gldp_m.gldp009,g_gldp_m.gldp010,g_gldp_m.gldp012,
                               g_gldp_m.gldp013,g_gldp_m.gldp015,g_gldp_m.gldp016,
                               g_gldp_m.gldpmodid,g_gldp_m.gldpmoddt)
             WHERE gldpent = g_enterprise
               AND gldpdocno = g_gldp_m.gldpdocno                   
            IF SQLCA.sqlerrd[3] = 0 THEN
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00009"
               LET g_errparam.extend = "gldp_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()
            ELSE
                CALL s_transaction_end('Y','0')
            END IF               
            
            SELECT gldp009,gldp010,gldp012,
                   gldp013,gldp015,gldp016
              INTO g_gldp_m.gldp009,g_gldp_m.gldp010,g_gldp_m.gldp012,
                   g_gldp_m.gldp013,g_gldp_m.gldp015,g_gldp_m.gldp016
              FROM gldp_t
             WHERE gldpent = g_enterprise
               AND gldpdocno = g_gldp_m.gldpdocno              
            DISPLAY BY NAME g_gldp_m.gldp009,g_gldp_m.gldp010,g_gldp_m.gldp012,
                            g_gldp_m.gldp013,g_gldp_m.gldp015,g_gldp_m.gldp016
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_gldq_d[li_reproduce_target].* = g_gldq_d[li_reproduce].*
 
               LET g_gldq_d[li_reproduce_target].gldqseq = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_gldq_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_gldq_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
 
 
 
{</section>}
 
{<section id="aglt502.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1',"))      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            #IF g_prog = 'aglt502' THEN        #160705-00042#8 160712 by sakura mark
            IF g_prog MATCHES 'aglt502' THEN   #160705-00042#8 160712 by sakura add
               NEXT FIELD gldp001
            ELSE
               NEXT FIELD gldpld
            END IF
            #end add-point  
            NEXT FIELD gldpdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD gldqseq
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   
   #end add-point    
 
END FUNCTION
 
{</section>}
 
{<section id="aglt502.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aglt502_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   CASE
      WHEN g_progtype = 'M'    
         LET g_glaald = g_gldp_m.gldp002
      OTHERWISE
         LET g_glaald = g_gldp_m.gldpld
   END CASE
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL aglt502_b_fill() #單身填充
      CALL aglt502_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL aglt502_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
   LET g_gldp_m.gldp001_desc = s_desc_glda001_desc(g_gldp_m.gldp001)
   CALL s_desc_get_ld_desc(g_gldp_m.gldp002) RETURNING g_gldp_m.gldp002_desc
   CALL s_desc_get_ld_desc(g_gldp_m.gldpld) RETURNING g_gldp_m.gldpld_desc

   #end add-point
   
   #遮罩相關處理
   LET g_gldp_m_mask_o.* =  g_gldp_m.*
   CALL aglt502_gldp_t_mask()
   LET g_gldp_m_mask_n.* =  g_gldp_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_gldp_m.gldp005,g_gldp_m.gldp006,g_gldp_m.gldp007,g_gldp_m.gldpld,g_gldp_m.gldpld_desc, 
       g_gldp_m.gldp001,g_gldp_m.gldp001_desc,g_gldp_m.gldp002,g_gldp_m.gldp002_desc,g_gldp_m.gldpdocno, 
       g_gldp_m.gldpdocdt,g_gldp_m.gldp003,g_gldp_m.gldp004,g_gldp_m.gldp008,g_gldp_m.gldp011,g_gldp_m.gldp014, 
       g_gldp_m.gldp016,g_gldp_m.gldp009,g_gldp_m.gldp010,g_gldp_m.gldp012,g_gldp_m.gldp013,g_gldp_m.gldp015, 
       g_gldp_m.gldpstus,g_gldp_m.gldpownid,g_gldp_m.gldpownid_desc,g_gldp_m.gldpowndp,g_gldp_m.gldpowndp_desc, 
       g_gldp_m.gldpcrtid,g_gldp_m.gldpcrtid_desc,g_gldp_m.gldpcrtdp,g_gldp_m.gldpcrtdp_desc,g_gldp_m.gldpcrtdt, 
       g_gldp_m.gldpmodid,g_gldp_m.gldpmodid_desc,g_gldp_m.gldpmoddt,g_gldp_m.gldpcnfid,g_gldp_m.gldpcnfid_desc, 
       g_gldp_m.gldpcnfdt,g_gldp_m.gldppstid,g_gldp_m.gldppstid_desc,g_gldp_m.gldppstdt,g_gldp_m.l_gldq003, 
       g_gldp_m.l_gldq003_desc,g_gldp_m.l_gldq004,g_gldp_m.l_gldq004_desc,g_gldp_m.l_gldq005,g_gldp_m.l_gldq005_desc, 
       g_gldp_m.l_gldq006,g_gldp_m.l_gldq006_desc,g_gldp_m.l_gldq007,g_gldp_m.l_gldq007_desc,g_gldp_m.l_gldq008, 
       g_gldp_m.l_gldq008_desc,g_gldp_m.l_gldq009,g_gldp_m.l_gldq009_desc,g_gldp_m.l_gldq010,g_gldp_m.l_gldq010_desc, 
       g_gldp_m.l_gldq011,g_gldp_m.l_gldq012,g_gldp_m.l_gldq012_desc,g_gldp_m.l_gldq013,g_gldp_m.l_gldq013_desc, 
       g_gldp_m.l_gldq014,g_gldp_m.l_gldq014_desc,g_gldp_m.l_gldq015,g_gldp_m.l_gldq015_desc,g_gldp_m.l_gldq016, 
       g_gldp_m.l_gldq016_desc
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_gldp_m.gldpstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_gldq_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
      
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other name="show.other"

   CALL aglt502_get_ld_info(g_glaald)RETURNING g_glaa.*
   CALL aglt502_set_visible()
   CALL aglt502_set_no_visible()
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL aglt502_detail_show()
 
   #add-point:show段之後 name="show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="aglt502.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION aglt502_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="aglt502.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION aglt502_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   
   #end add-point   
   DEFINE l_newno     LIKE gldp_t.gldpdocno 
   DEFINE l_oldno     LIKE gldp_t.gldpdocno 
 
   DEFINE l_master    RECORD LIKE gldp_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE gldq_t.* #此變數樣板目前無使用
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_gldp_m.gldpdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_gldpdocno_t = g_gldp_m.gldpdocno
 
    
   LET g_gldp_m.gldpdocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_gldp_m.gldpownid = g_user
      LET g_gldp_m.gldpowndp = g_dept
      LET g_gldp_m.gldpcrtid = g_user
      LET g_gldp_m.gldpcrtdp = g_dept 
      LET g_gldp_m.gldpcrtdt = cl_get_current()
      LET g_gldp_m.gldpmodid = g_user
      LET g_gldp_m.gldpmoddt = cl_get_current()
      LET g_gldp_m.gldpstus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_gldp_m.gldpstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
   
   
   CALL aglt502_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_gldp_m.* TO NULL
      INITIALIZE g_gldq_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      
      #end add-point
      CALL aglt502_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code = 9001 
      LET g_errparam.popup = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aglt502_set_act_visible()   
   CALL aglt502_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_gldpdocno_t = g_gldp_m.gldpdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " gldpent = " ||g_enterprise|| " AND",
                      " gldpdocno = '", g_gldp_m.gldpdocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL aglt502_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   CALL aglt502_idx_chk()
   
   LET g_data_owner = g_gldp_m.gldpownid      
   LET g_data_dept  = g_gldp_m.gldpowndp
   
   #功能已完成,通報訊息中心
   CALL aglt502_msgcentre_notify('reproduce')
 
END FUNCTION
 
{</section>}
 
{<section id="aglt502.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION aglt502_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE gldq_t.* #此變數樣板目前無使用
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE aglt502_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM gldq_t
    WHERE gldqent = g_enterprise AND gldqdocno = g_gldpdocno_t
 
    INTO TEMP aglt502_detail
 
   #將key修正為調整後   
   UPDATE aglt502_detail 
      #更新key欄位
      SET gldqdocno = g_gldp_m.gldpdocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO gldq_t SELECT * FROM aglt502_detail
   
   IF SQLCA.SQLCODE THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aglt502_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_gldpdocno_t = g_gldp_m.gldpdocno
 
   
END FUNCTION
 
{</section>}
 
{<section id="aglt502.delete" >}
#+ 資料刪除
PRIVATE FUNCTION aglt502_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   DEFINE l_prog           LIKE gzza_t.gzza001
   DEFINE l_success        LIKE type_t.num5
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_gldp_m.gldpdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN aglt502_cl USING g_enterprise,g_gldp_m.gldpdocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aglt502_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE aglt502_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aglt502_master_referesh USING g_gldp_m.gldpdocno INTO g_gldp_m.gldp005,g_gldp_m.gldp006,g_gldp_m.gldp007, 
       g_gldp_m.gldpld,g_gldp_m.gldp001,g_gldp_m.gldp002,g_gldp_m.gldpdocno,g_gldp_m.gldpdocdt,g_gldp_m.gldp003, 
       g_gldp_m.gldp004,g_gldp_m.gldp008,g_gldp_m.gldp011,g_gldp_m.gldp014,g_gldp_m.gldp016,g_gldp_m.gldp009, 
       g_gldp_m.gldp010,g_gldp_m.gldp012,g_gldp_m.gldp013,g_gldp_m.gldp015,g_gldp_m.gldpstus,g_gldp_m.gldpownid, 
       g_gldp_m.gldpowndp,g_gldp_m.gldpcrtid,g_gldp_m.gldpcrtdp,g_gldp_m.gldpcrtdt,g_gldp_m.gldpmodid, 
       g_gldp_m.gldpmoddt,g_gldp_m.gldpcnfid,g_gldp_m.gldpcnfdt,g_gldp_m.gldppstid,g_gldp_m.gldppstdt, 
       g_gldp_m.gldpownid_desc,g_gldp_m.gldpowndp_desc,g_gldp_m.gldpcrtid_desc,g_gldp_m.gldpcrtdp_desc, 
       g_gldp_m.gldpmodid_desc,g_gldp_m.gldpcnfid_desc,g_gldp_m.gldppstid_desc
   
   
   #檢查是否允許此動作
   IF NOT aglt502_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_gldp_m_mask_o.* =  g_gldp_m.*
   CALL aglt502_gldp_t_mask()
   LET g_gldp_m_mask_n.* =  g_gldp_m.*
   
   CALL aglt502_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL aglt502_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_gldpdocno_t = g_gldp_m.gldpdocno
 
 
      DELETE FROM gldp_t
       WHERE gldpent = g_enterprise AND gldpdocno = g_gldp_m.gldpdocno
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      
      #end add-point
       
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_gldp_m.gldpdocno,":",SQLERRMESSAGE  
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      #end add-point
      
      DELETE FROM gldq_t
       WHERE gldqent = g_enterprise AND gldqdocno = g_gldp_m.gldpdocno
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
      
      #end add-point
         
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "gldq_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      #aglt503(資產) aglt504(損益) 用同種單別,單別作業代號都要設定成aglt503
      LET l_prog = g_prog
      #IF g_prog = 'aglt504' THEN        #160705-00042#8 160712 by sakura mark
      IF g_prog MATCHES 'aglt504' THEN   #160705-00042#8 160712 by sakura add
         LET g_prog = 'aglt503'
      END IF
      IF NOT s_aooi200_fin_del_docno(g_glaald,g_gldp_m.gldpdocno,g_gldp_m.gldpdocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      LET g_prog = l_prog
      
      #151113-00002#8 --s
      #回寫來源單據之傳票單號為空
      #IF g_prog = 'aglt506' OR g_prog = 'aglt522' OR g_prog = 'aglt524' THEN                    #160705-00042#8 160712 by sakura mark
      IF g_prog MATCHES 'aglt506' OR g_prog MATCHES 'aglt522' OR g_prog MATCHES 'aglt524' THEN   #160705-00042#8 160712 by sakura add
         CALL aglt502_update_gl(g_prog) RETURNING l_success
         IF NOT l_success THEN
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END IF
      #151113-00002#8 --e
      #end add-point
      
            
                                                               
 
 
 
      
      #修改歷程記錄(刪除)
      LET g_log1 = util.JSON.stringify(g_gldp_m)   #(ver:78)
      IF NOT cl_log_modified_record(g_log1,'') THEN    #(ver:78)
         CLOSE aglt502_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_gldq_d.clear() 
 
     
      CALL aglt502_ui_browser_refresh()  
      #CALL aglt502_ui_headershow()  
      #CALL aglt502_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL aglt502_browser_fill("")
         CALL aglt502_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE aglt502_cl
 
   #功能已完成,通報訊息中心
   CALL aglt502_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="aglt502.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION aglt502_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #清空第一階單身
   CALL g_gldq_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   
   #end add-point
   
   #判斷是否填充
   IF aglt502_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT gldqseq,gldq023,gldq001,gldq017,gldq018,gldq019,gldq020,gldq021, 
             gldq022,gldq003,gldq004,gldq005,gldq006,gldq007,gldq008,gldq009,gldq010,gldq011,gldq012, 
             gldq013,gldq014,gldq015,gldq016  FROM gldq_t",   
                     " INNER JOIN gldp_t ON gldpent = " ||g_enterprise|| " AND gldpdocno = gldqdocno ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                     
                     " WHERE gldqent=? AND gldqdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY gldq_t.gldqseq"
         
         #add-point:單身填充控制 name="b_fill.sql"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE aglt502_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR aglt502_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
   #  OPEN b_fill_cs USING g_enterprise,g_gldp_m.gldpdocno   #(ver:78)
                                               
      FOREACH b_fill_cs USING g_enterprise,g_gldp_m.gldpdocno INTO g_gldq_d[l_ac].gldqseq,g_gldq_d[l_ac].gldq023, 
          g_gldq_d[l_ac].gldq001,g_gldq_d[l_ac].gldq017,g_gldq_d[l_ac].gldq018,g_gldq_d[l_ac].gldq019, 
          g_gldq_d[l_ac].gldq020,g_gldq_d[l_ac].gldq021,g_gldq_d[l_ac].gldq022,g_gldq_d[l_ac].gldq003, 
          g_gldq_d[l_ac].gldq004,g_gldq_d[l_ac].gldq005,g_gldq_d[l_ac].gldq006,g_gldq_d[l_ac].gldq007, 
          g_gldq_d[l_ac].gldq008,g_gldq_d[l_ac].gldq009,g_gldq_d[l_ac].gldq010,g_gldq_d[l_ac].gldq011, 
          g_gldq_d[l_ac].gldq012,g_gldq_d[l_ac].gldq013,g_gldq_d[l_ac].gldq014,g_gldq_d[l_ac].gldq015, 
          g_gldq_d[l_ac].gldq016   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         LET g_gldq_d[l_ac].gldq001_desc =  s_desc_get_account_desc(g_glaald,g_gldq_d[l_ac].gldq001)
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code = 9035 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   CALL aglt502_otherdetail_show(1)
   #end add-point
   
   CALL g_gldq_d.deleteElement(g_gldq_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE aglt502_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_gldq_d.getLength()
      LET g_gldq_d_mask_o[l_ac].* =  g_gldq_d[l_ac].*
      CALL aglt502_gldq_t_mask()
      LET g_gldq_d_mask_n[l_ac].* =  g_gldq_d[l_ac].*
   END FOR
   
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
 
{</section>}
 
{<section id="aglt502.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION aglt502_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      
      #end add-point    
      DELETE FROM gldq_t
       WHERE gldqent = g_enterprise AND
         gldqdocno = ps_keys_bak[1] AND gldqseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_gldq_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
   
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="aglt502.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION aglt502_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      IF cl_null(g_gldq_d[g_detail_idx].gldq003)THEN LET g_gldq_d[g_detail_idx].gldq003 = ' ' END IF
      IF cl_null(g_gldq_d[g_detail_idx].gldq004)THEN LET g_gldq_d[g_detail_idx].gldq004 = ' ' END IF
      IF cl_null(g_gldq_d[g_detail_idx].gldq005)THEN LET g_gldq_d[g_detail_idx].gldq005 = ' ' END IF
      IF cl_null(g_gldq_d[g_detail_idx].gldq006)THEN LET g_gldq_d[g_detail_idx].gldq006 = ' ' END IF
      IF cl_null(g_gldq_d[g_detail_idx].gldq007)THEN LET g_gldq_d[g_detail_idx].gldq007 = ' ' END IF
      IF cl_null(g_gldq_d[g_detail_idx].gldq008)THEN LET g_gldq_d[g_detail_idx].gldq008 = ' ' END IF
      IF cl_null(g_gldq_d[g_detail_idx].gldq009)THEN LET g_gldq_d[g_detail_idx].gldq009 = ' ' END IF
      IF cl_null(g_gldq_d[g_detail_idx].gldq010)THEN LET g_gldq_d[g_detail_idx].gldq010 = ' ' END IF

      IF cl_null(g_gldq_d[g_detail_idx].gldq011)THEN LET g_gldq_d[g_detail_idx].gldq011 = ' ' END IF
      IF cl_null(g_gldq_d[g_detail_idx].gldq012)THEN LET g_gldq_d[g_detail_idx].gldq012 = ' ' END IF
      IF cl_null(g_gldq_d[g_detail_idx].gldq013)THEN LET g_gldq_d[g_detail_idx].gldq013 = ' ' END IF
      IF cl_null(g_gldq_d[g_detail_idx].gldq014)THEN LET g_gldq_d[g_detail_idx].gldq014 = ' ' END IF
      IF cl_null(g_gldq_d[g_detail_idx].gldq015)THEN LET g_gldq_d[g_detail_idx].gldq015 = ' ' END IF
      IF cl_null(g_gldq_d[g_detail_idx].gldq016)THEN LET g_gldq_d[g_detail_idx].gldq016 = ' ' END IF
      #end add-point 
      INSERT INTO gldq_t
                  (gldqent,
                   gldqdocno,
                   gldqseq
                   ,gldq023,gldq001,gldq017,gldq018,gldq019,gldq020,gldq021,gldq022,gldq003,gldq004,gldq005,gldq006,gldq007,gldq008,gldq009,gldq010,gldq011,gldq012,gldq013,gldq014,gldq015,gldq016) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_gldq_d[g_detail_idx].gldq023,g_gldq_d[g_detail_idx].gldq001,g_gldq_d[g_detail_idx].gldq017, 
                       g_gldq_d[g_detail_idx].gldq018,g_gldq_d[g_detail_idx].gldq019,g_gldq_d[g_detail_idx].gldq020, 
                       g_gldq_d[g_detail_idx].gldq021,g_gldq_d[g_detail_idx].gldq022,g_gldq_d[g_detail_idx].gldq003, 
                       g_gldq_d[g_detail_idx].gldq004,g_gldq_d[g_detail_idx].gldq005,g_gldq_d[g_detail_idx].gldq006, 
                       g_gldq_d[g_detail_idx].gldq007,g_gldq_d[g_detail_idx].gldq008,g_gldq_d[g_detail_idx].gldq009, 
                       g_gldq_d[g_detail_idx].gldq010,g_gldq_d[g_detail_idx].gldq011,g_gldq_d[g_detail_idx].gldq012, 
                       g_gldq_d[g_detail_idx].gldq013,g_gldq_d[g_detail_idx].gldq014,g_gldq_d[g_detail_idx].gldq015, 
                       g_gldq_d[g_detail_idx].gldq016)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      
      #end add-point 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "gldq_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_gldq_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
   
   #end add-point     
   
END FUNCTION
 
{</section>}
 
{<section id="aglt502.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION aglt502_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "gldq_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      IF cl_null(g_gldq_d[g_detail_idx].gldq003)THEN LET g_gldq_d[g_detail_idx].gldq003 = ' ' END IF
      IF cl_null(g_gldq_d[g_detail_idx].gldq004)THEN LET g_gldq_d[g_detail_idx].gldq004 = ' ' END IF
      IF cl_null(g_gldq_d[g_detail_idx].gldq005)THEN LET g_gldq_d[g_detail_idx].gldq005 = ' ' END IF
      IF cl_null(g_gldq_d[g_detail_idx].gldq006)THEN LET g_gldq_d[g_detail_idx].gldq006 = ' ' END IF
      IF cl_null(g_gldq_d[g_detail_idx].gldq007)THEN LET g_gldq_d[g_detail_idx].gldq007 = ' ' END IF
      IF cl_null(g_gldq_d[g_detail_idx].gldq008)THEN LET g_gldq_d[g_detail_idx].gldq008 = ' ' END IF
      IF cl_null(g_gldq_d[g_detail_idx].gldq009)THEN LET g_gldq_d[g_detail_idx].gldq009 = ' ' END IF
      IF cl_null(g_gldq_d[g_detail_idx].gldq010)THEN LET g_gldq_d[g_detail_idx].gldq010 = ' ' END IF

      IF cl_null(g_gldq_d[g_detail_idx].gldq011)THEN LET g_gldq_d[g_detail_idx].gldq011 = ' ' END IF
      IF cl_null(g_gldq_d[g_detail_idx].gldq012)THEN LET g_gldq_d[g_detail_idx].gldq012 = ' ' END IF
      IF cl_null(g_gldq_d[g_detail_idx].gldq013)THEN LET g_gldq_d[g_detail_idx].gldq013 = ' ' END IF
      IF cl_null(g_gldq_d[g_detail_idx].gldq014)THEN LET g_gldq_d[g_detail_idx].gldq014 = ' ' END IF
      IF cl_null(g_gldq_d[g_detail_idx].gldq015)THEN LET g_gldq_d[g_detail_idx].gldq015 = ' ' END IF
      IF cl_null(g_gldq_d[g_detail_idx].gldq016)THEN LET g_gldq_d[g_detail_idx].gldq016 = ' ' END IF
      #end add-point 
      
      #將遮罩欄位還原
      CALL aglt502_gldq_t_mask_restore('restore_mask_o')
               
      UPDATE gldq_t 
         SET (gldqdocno,
              gldqseq
              ,gldq023,gldq001,gldq017,gldq018,gldq019,gldq020,gldq021,gldq022,gldq003,gldq004,gldq005,gldq006,gldq007,gldq008,gldq009,gldq010,gldq011,gldq012,gldq013,gldq014,gldq015,gldq016) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_gldq_d[g_detail_idx].gldq023,g_gldq_d[g_detail_idx].gldq001,g_gldq_d[g_detail_idx].gldq017, 
                  g_gldq_d[g_detail_idx].gldq018,g_gldq_d[g_detail_idx].gldq019,g_gldq_d[g_detail_idx].gldq020, 
                  g_gldq_d[g_detail_idx].gldq021,g_gldq_d[g_detail_idx].gldq022,g_gldq_d[g_detail_idx].gldq003, 
                  g_gldq_d[g_detail_idx].gldq004,g_gldq_d[g_detail_idx].gldq005,g_gldq_d[g_detail_idx].gldq006, 
                  g_gldq_d[g_detail_idx].gldq007,g_gldq_d[g_detail_idx].gldq008,g_gldq_d[g_detail_idx].gldq009, 
                  g_gldq_d[g_detail_idx].gldq010,g_gldq_d[g_detail_idx].gldq011,g_gldq_d[g_detail_idx].gldq012, 
                  g_gldq_d[g_detail_idx].gldq013,g_gldq_d[g_detail_idx].gldq014,g_gldq_d[g_detail_idx].gldq015, 
                  g_gldq_d[g_detail_idx].gldq016) 
         WHERE gldqent = g_enterprise AND gldqdocno = ps_keys_bak[1] AND gldqseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
      
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "gldq_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "gldq_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL aglt502_gldq_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
 
   
 
   
   #add-point:update_b段other name="update_b.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="aglt502.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION aglt502_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="aglt502.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION aglt502_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="aglt502.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION aglt502_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
    
   #先刷新資料
   #CALL aglt502_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "gldq_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN aglt502_bcl USING g_enterprise,
                                       g_gldp_m.gldpdocno,g_gldq_d[g_detail_idx].gldqseq     
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "aglt502_bcl:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
   
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="aglt502.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aglt502_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aglt502_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="aglt502.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION aglt502_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   CALL cl_set_comp_entry("gldpdocno,gldpld",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("gldpdocno",TRUE)
      CALL cl_set_comp_entry("gldpdocdt",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      CALL cl_set_comp_entry("gldpdocno,gldpdocdt,gldpld,gldp002,gldp001",TRUE)
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="aglt502.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION aglt502_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("gldpdocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
     
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("gldpdocno,gldpld",FALSE)
   END IF 
 
#  IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正) #(ver:78)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("gldpdocdt",FALSE)
      END IF
#  END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("gldpdocno,gldpdocdt,gldpld,gldp002,gldp001",FALSE)
   END IF
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="aglt502.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION aglt502_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   CALL cl_set_comp_entry("gldq017,gldq018,gldq019,gldq020,gldq021,gldq022",TRUE)
   #end add-point  
END FUNCTION
 
{</section>}
 
{<section id="aglt502.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION aglt502_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   CASE
      WHEN g_gldq_d[l_ac].gldq017 > 0 OR g_gldq_d[l_ac].gldq019 > 0 OR g_gldq_d[l_ac].gldq021 > 0
         CALL cl_set_comp_entry("gldq018,gldq020,gldq022",FALSE)
      WHEN g_gldq_d[l_ac].gldq018 > 0 OR g_gldq_d[l_ac].gldq020 > 0 OR g_gldq_d[l_ac].gldq022 > 0
         CALL cl_set_comp_entry("gldq017,gldq019,gldq021",FALSE)
      OTHERWISE      
   END CASE
   #end add-point     
END FUNCTION
 
{</section>}
 
{<section id="aglt502.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION aglt502_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   CALL cl_set_act_visible("modify,delete,insert,modify_detail", TRUE)
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="aglt502.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION aglt502_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   #應用 a63 樣板自動產生(Version:1)
   IF g_gldp_m.gldpstus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF


   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="aglt502.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION aglt502_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="aglt502.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION aglt502_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="aglt502.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION aglt502_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " gldpdocno = '", g_argv[02], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "gldp_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "gldq_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
 
{</section>}
 
{<section id="aglt502.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION aglt502_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   DEFINE l_success LIKE type_t.num5
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_gldp_m.gldpdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN aglt502_cl USING g_enterprise,g_gldp_m.gldpdocno
   IF STATUS THEN
      CLOSE aglt502_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aglt502_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE aglt502_master_referesh USING g_gldp_m.gldpdocno INTO g_gldp_m.gldp005,g_gldp_m.gldp006,g_gldp_m.gldp007, 
       g_gldp_m.gldpld,g_gldp_m.gldp001,g_gldp_m.gldp002,g_gldp_m.gldpdocno,g_gldp_m.gldpdocdt,g_gldp_m.gldp003, 
       g_gldp_m.gldp004,g_gldp_m.gldp008,g_gldp_m.gldp011,g_gldp_m.gldp014,g_gldp_m.gldp016,g_gldp_m.gldp009, 
       g_gldp_m.gldp010,g_gldp_m.gldp012,g_gldp_m.gldp013,g_gldp_m.gldp015,g_gldp_m.gldpstus,g_gldp_m.gldpownid, 
       g_gldp_m.gldpowndp,g_gldp_m.gldpcrtid,g_gldp_m.gldpcrtdp,g_gldp_m.gldpcrtdt,g_gldp_m.gldpmodid, 
       g_gldp_m.gldpmoddt,g_gldp_m.gldpcnfid,g_gldp_m.gldpcnfdt,g_gldp_m.gldppstid,g_gldp_m.gldppstdt, 
       g_gldp_m.gldpownid_desc,g_gldp_m.gldpowndp_desc,g_gldp_m.gldpcrtid_desc,g_gldp_m.gldpcrtdp_desc, 
       g_gldp_m.gldpmodid_desc,g_gldp_m.gldpcnfid_desc,g_gldp_m.gldppstid_desc
   
 
   #檢查是否允許此動作
   IF NOT aglt502_action_chk() THEN
      CLOSE aglt502_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_gldp_m.gldp005,g_gldp_m.gldp006,g_gldp_m.gldp007,g_gldp_m.gldpld,g_gldp_m.gldpld_desc, 
       g_gldp_m.gldp001,g_gldp_m.gldp001_desc,g_gldp_m.gldp002,g_gldp_m.gldp002_desc,g_gldp_m.gldpdocno, 
       g_gldp_m.gldpdocdt,g_gldp_m.gldp003,g_gldp_m.gldp004,g_gldp_m.gldp008,g_gldp_m.gldp011,g_gldp_m.gldp014, 
       g_gldp_m.gldp016,g_gldp_m.gldp009,g_gldp_m.gldp010,g_gldp_m.gldp012,g_gldp_m.gldp013,g_gldp_m.gldp015, 
       g_gldp_m.gldpstus,g_gldp_m.gldpownid,g_gldp_m.gldpownid_desc,g_gldp_m.gldpowndp,g_gldp_m.gldpowndp_desc, 
       g_gldp_m.gldpcrtid,g_gldp_m.gldpcrtid_desc,g_gldp_m.gldpcrtdp,g_gldp_m.gldpcrtdp_desc,g_gldp_m.gldpcrtdt, 
       g_gldp_m.gldpmodid,g_gldp_m.gldpmodid_desc,g_gldp_m.gldpmoddt,g_gldp_m.gldpcnfid,g_gldp_m.gldpcnfid_desc, 
       g_gldp_m.gldpcnfdt,g_gldp_m.gldppstid,g_gldp_m.gldppstid_desc,g_gldp_m.gldppstdt,g_gldp_m.l_gldq003, 
       g_gldp_m.l_gldq003_desc,g_gldp_m.l_gldq004,g_gldp_m.l_gldq004_desc,g_gldp_m.l_gldq005,g_gldp_m.l_gldq005_desc, 
       g_gldp_m.l_gldq006,g_gldp_m.l_gldq006_desc,g_gldp_m.l_gldq007,g_gldp_m.l_gldq007_desc,g_gldp_m.l_gldq008, 
       g_gldp_m.l_gldq008_desc,g_gldp_m.l_gldq009,g_gldp_m.l_gldq009_desc,g_gldp_m.l_gldq010,g_gldp_m.l_gldq010_desc, 
       g_gldp_m.l_gldq011,g_gldp_m.l_gldq012,g_gldp_m.l_gldq012_desc,g_gldp_m.l_gldq013,g_gldp_m.l_gldq013_desc, 
       g_gldp_m.l_gldq014,g_gldp_m.l_gldq014_desc,g_gldp_m.l_gldq015,g_gldp_m.l_gldq015_desc,g_gldp_m.l_gldq016, 
       g_gldp_m.l_gldq016_desc
 
   CASE g_gldp_m.gldpstus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_gldp_m.gldpstus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      CALL cl_set_act_visible("signing,withdraw",FALSE)
      CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
      CALL cl_set_act_visible("closed",FALSE)

      CASE g_gldp_m.gldpstus
         WHEN "N"  
            CALL cl_set_act_visible("unconfirmed,hold",FALSE)
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            IF cl_bpm_chk() THEN
                CALL cl_set_act_visible("signing",TRUE)
                CALL cl_set_act_visible("confirmed",FALSE)
            END IF
 
         WHEN "R"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE)

         WHEN "D"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE) 
          
         WHEN "X"
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)
            CALL s_transaction_end('N','0')   #160816-00068#6 add
            RETURN
         WHEN "Y"
            CALL cl_set_act_visible("invalid,confirmed,hold",FALSE)
         
         WHEN "W"    #只能顯示抽單;其餘應用功能皆隱藏
             CALL cl_set_act_visible("withdraw",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)
         
         WHEN "A"     #只能顯示確認; 其餘應用功能皆隱藏
             CALL cl_set_act_visible("confirmed ",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,hold",FALSE)

      END CASE

      #end add-point
      
      #應用 a36 樣板自動產生(Version:5)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT aglt502_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE aglt502_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT aglt502_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE aglt502_cl
            RETURN
         END IF
 
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.unconfirmed"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.confirmed"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制 name="statechange.approved"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制 name="statechange.withdraw"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制 name="statechange.rejection"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制 name="statechange.signing"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.invalid"
            
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "X"
      ) OR 
      g_gldp_m.gldpstus = lc_state OR cl_null(lc_state) THEN
      CLOSE aglt502_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   IF lc_state = 'Y' THEN
      CALL cl_err_collect_init()
      #核算項檢核
      CALL s_aglt502_conf_chk(g_gldp_m.gldpdocno)RETURNING g_sub_success
      IF NOT g_sub_success THEN
         CALL cl_err_collect_show()
         CALL s_transaction_end('N','0')   #160816-00068#6 add
         RETURN
      ELSE  
         IF NOT cl_ask_confirm('aim-00108') THEN
            CALL cl_err_collect_show()
            CALL s_transaction_end('N','0')   #160816-00068#6 add
            RETURN
         ELSE      
#            LET g_gldp_m.gldpcnfdt = cl_get_current()
#            UPDATE gldp_t SET gldpcnfid = g_user,
#                              gldpcnfdt = g_gldp_m.gldpcnfdt
#             WHERE gldpent = g_enterprise 
#               AND gldpdocno = g_gldp_m.gldpdocno
            CALL s_aglt502_conf_upd(g_gldp_m.gldpdocno)RETURNING g_sub_success
            IF NOT g_sub_success THEN
               CALL cl_err_collect_show()
               CALL s_transaction_end('N','0')   #160816-00068#6 add
               RETURN
            END IF
            CALL cl_err_collect_show()
         END IF
      END IF
   END IF
   
   IF lc_state = 'N' THEN
      CALL cl_err_collect_init()
      CALL s_aglt502_unconf_chk(g_gldp_m.gldpdocno)RETURNING g_sub_success
      IF NOT g_sub_success THEN
         CALL cl_err_collect_show()
         CALL s_transaction_end('N','0')   #160816-00068#6 add
         RETURN
      ELSE  
         IF NOT cl_ask_confirm('aim-00110') THEN
            CALL cl_err_collect_show()
            CALL s_transaction_end('N','0')   #160816-00068#6 add
            RETURN
         ELSE
            CALL s_aglt502_unconf_upd(g_gldp_m.gldpdocno)RETURNING g_sub_success
            IF NOT g_sub_success THEN
               CALL cl_err_collect_show()
               CALL s_transaction_end('N','0')   #160816-00068#6 add
               RETURN
            END IF
            CALL cl_err_collect_show()
         END IF
      END IF
   END IF
   
   #作廢
   IF lc_state = 'X' THEN
      CALL cl_err_collect_init()
      CALL s_aglt502_void_chk(g_gldp_m.gldpdocno)RETURNING g_sub_success
      IF NOT g_sub_success THEN
         CALL cl_err_collect_show()
         CALL s_transaction_end('N','0')   #160816-00068#6 add
         RETURN
      ELSE  
         IF NOT cl_ask_confirm('aim-00109') THEN
            CALL cl_err_collect_show()
            CALL s_transaction_end('N','0')   #160816-00068#6 add
            RETURN
         ELSE
            CALL s_aglt502_void_upd(g_gldp_m.gldpdocno)RETURNING g_sub_success
            IF NOT g_sub_success THEN
               CALL cl_err_collect_show()
               CALL s_transaction_end('N','0')   #160816-00068#6 add
               RETURN
            END IF
            #151113-00002#8 --s
            #回寫來源單據之傳票單號為空
            #IF g_prog = 'aglt506' OR g_prog = 'aglt522' OR g_prog = 'aglt524' THEN
            IF g_prog MATCHES 'aglt506' OR g_prog MATCHES 'aglt522' OR g_prog MATCHES 'aglt524' THEN
               CALL aglt502_update_gl(g_prog) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  CALL cl_err_collect_show()
                  CALL s_transaction_end('N','0')   #160816-00068#6 add
                  RETURN
               END IF
            END IF
            #151113-00002#8 --e
            CALL cl_err_collect_show()
         END IF
      END IF
   END IF
   #end add-point
   
   LET g_gldp_m.gldpmodid = g_user
   LET g_gldp_m.gldpmoddt = cl_get_current()
   LET g_gldp_m.gldpstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE gldp_t 
      SET (gldpstus,gldpmodid,gldpmoddt) 
        = (g_gldp_m.gldpstus,g_gldp_m.gldpmodid,g_gldp_m.gldpmoddt)     
    WHERE gldpent = g_enterprise AND gldpdocno = g_gldp_m.gldpdocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE aglt502_master_referesh USING g_gldp_m.gldpdocno INTO g_gldp_m.gldp005,g_gldp_m.gldp006, 
          g_gldp_m.gldp007,g_gldp_m.gldpld,g_gldp_m.gldp001,g_gldp_m.gldp002,g_gldp_m.gldpdocno,g_gldp_m.gldpdocdt, 
          g_gldp_m.gldp003,g_gldp_m.gldp004,g_gldp_m.gldp008,g_gldp_m.gldp011,g_gldp_m.gldp014,g_gldp_m.gldp016, 
          g_gldp_m.gldp009,g_gldp_m.gldp010,g_gldp_m.gldp012,g_gldp_m.gldp013,g_gldp_m.gldp015,g_gldp_m.gldpstus, 
          g_gldp_m.gldpownid,g_gldp_m.gldpowndp,g_gldp_m.gldpcrtid,g_gldp_m.gldpcrtdp,g_gldp_m.gldpcrtdt, 
          g_gldp_m.gldpmodid,g_gldp_m.gldpmoddt,g_gldp_m.gldpcnfid,g_gldp_m.gldpcnfdt,g_gldp_m.gldppstid, 
          g_gldp_m.gldppstdt,g_gldp_m.gldpownid_desc,g_gldp_m.gldpowndp_desc,g_gldp_m.gldpcrtid_desc, 
          g_gldp_m.gldpcrtdp_desc,g_gldp_m.gldpmodid_desc,g_gldp_m.gldpcnfid_desc,g_gldp_m.gldppstid_desc 
 
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_gldp_m.gldp005,g_gldp_m.gldp006,g_gldp_m.gldp007,g_gldp_m.gldpld,g_gldp_m.gldpld_desc, 
          g_gldp_m.gldp001,g_gldp_m.gldp001_desc,g_gldp_m.gldp002,g_gldp_m.gldp002_desc,g_gldp_m.gldpdocno, 
          g_gldp_m.gldpdocdt,g_gldp_m.gldp003,g_gldp_m.gldp004,g_gldp_m.gldp008,g_gldp_m.gldp011,g_gldp_m.gldp014, 
          g_gldp_m.gldp016,g_gldp_m.gldp009,g_gldp_m.gldp010,g_gldp_m.gldp012,g_gldp_m.gldp013,g_gldp_m.gldp015, 
          g_gldp_m.gldpstus,g_gldp_m.gldpownid,g_gldp_m.gldpownid_desc,g_gldp_m.gldpowndp,g_gldp_m.gldpowndp_desc, 
          g_gldp_m.gldpcrtid,g_gldp_m.gldpcrtid_desc,g_gldp_m.gldpcrtdp,g_gldp_m.gldpcrtdp_desc,g_gldp_m.gldpcrtdt, 
          g_gldp_m.gldpmodid,g_gldp_m.gldpmodid_desc,g_gldp_m.gldpmoddt,g_gldp_m.gldpcnfid,g_gldp_m.gldpcnfid_desc, 
          g_gldp_m.gldpcnfdt,g_gldp_m.gldppstid,g_gldp_m.gldppstid_desc,g_gldp_m.gldppstdt,g_gldp_m.l_gldq003, 
          g_gldp_m.l_gldq003_desc,g_gldp_m.l_gldq004,g_gldp_m.l_gldq004_desc,g_gldp_m.l_gldq005,g_gldp_m.l_gldq005_desc, 
          g_gldp_m.l_gldq006,g_gldp_m.l_gldq006_desc,g_gldp_m.l_gldq007,g_gldp_m.l_gldq007_desc,g_gldp_m.l_gldq008, 
          g_gldp_m.l_gldq008_desc,g_gldp_m.l_gldq009,g_gldp_m.l_gldq009_desc,g_gldp_m.l_gldq010,g_gldp_m.l_gldq010_desc, 
          g_gldp_m.l_gldq011,g_gldp_m.l_gldq012,g_gldp_m.l_gldq012_desc,g_gldp_m.l_gldq013,g_gldp_m.l_gldq013_desc, 
          g_gldp_m.l_gldq014,g_gldp_m.l_gldq014_desc,g_gldp_m.l_gldq015,g_gldp_m.l_gldq015_desc,g_gldp_m.l_gldq016, 
          g_gldp_m.l_gldq016_desc
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   
   #end add-point  
 
   CLOSE aglt502_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL aglt502_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="aglt502.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION aglt502_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_gldq_d.getLength() THEN
         LET g_detail_idx = g_gldq_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_gldq_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_gldq_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="aglt502.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION aglt502_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
    
   LET l_ac = li_ac
   
   CALL aglt502_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
 
{</section>}
 
{<section id="aglt502.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION aglt502_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="aglt502.status_show" >}
PRIVATE FUNCTION aglt502_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="aglt502.mask_functions" >}
&include "erp/agl/aglt502_mask.4gl"
 
{</section>}
 
{<section id="aglt502.signature" >}
   #應用 a39 樣板自動產生(Version:10)
#+ BPM提交
PRIVATE FUNCTION aglt502_send()
   #add-point:send段define(客製用) name="send.define_customerization"
   
   #end add-point 
   #add-point:send段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="send.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="send.pre_function"
   
   #end add-point
   
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
 
 
   CALL aglt502_show()
   CALL aglt502_set_pk_array()
   
   #add-point: 初始化的ADP name="send.before_send"
   
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_gldp_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_gldq_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP name="send.before_cli"
   
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP name="send.after_send"
   
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL aglt502_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL aglt502_ui_headershow()
   CALL aglt502_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
#應用 a40 樣板自動產生(Version:9)
#+ BPM抽單
PRIVATE FUNCTION aglt502_draw_out()
   #add-point:draw段define name="draw.define_customerization"
   
   #end add-point
   #add-point:draw段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="draw.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="draw.pre_function"
   
   #end add-point
   
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_idx].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL aglt502_ui_headershow()  
   CALL aglt502_ui_detailshow()
 
   #add-point:Function後置處理  name="draw.after_function"
   
   #end add-point
 
   RETURN TRUE
   
END FUNCTION
 
 
 
 
 
{</section>}
 
{<section id="aglt502.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION aglt502_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_gldp_m.gldpdocno
   LET g_pk_array[1].column = 'gldpdocno'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="aglt502.other_dialog" readonly="Y" >}
   
 
{</section>}
 
{<section id="aglt502.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION aglt502_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL aglt502_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_gldp_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="aglt502.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION aglt502_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="aglt502.other_function" readonly="Y" >}

################################################################################
# Descriptions...: 取得帳別預設值
# Memo...........:
# Date & Author..: 150327 By albireo
# Modify.........:
################################################################################
PRIVATE FUNCTION aglt502_get_ld_info(p_ld)
   DEFINE p_ld   LIKE glaa_t.glaald
   DEFINE r_glaa  RECORD
                  glaa001   LIKE glaa_t.glaa001,
                  glaa015   LIKE glaa_t.glaa015,
                  glaa016   LIKE glaa_t.glaa016,
                  glaa019   LIKE glaa_t.glaa019,
                  glaa020   LIKE glaa_t.glaa020,
                  glaa004   LIKE glaa_t.glaa004,
                  glaa024   LIKE glaa_t.glaa024
                  END RECORD
   INITIALIZE r_glaa.* TO NULL
   SELECT glaa001,glaa015,glaa016,
          glaa019,glaa020,glaa004,glaa024
     INTO r_glaa.glaa001,r_glaa.glaa015,
          r_glaa.glaa016,r_glaa.glaa019,
          r_glaa.glaa020,r_glaa.glaa004,r_glaa.glaa024
     FROM glaa_t
    WHERE glaaent = g_enterprise
      AND glaald  = p_ld
      
   RETURN r_glaa.glaa001,r_glaa.glaa015,r_glaa.glaa016,
          r_glaa.glaa019,r_glaa.glaa020,r_glaa.glaa004,r_glaa.glaa024
END FUNCTION

################################################################################
# Descriptions...: 依g_progtype判斷隱顯欄位
# Memo...........:
# Date & Author..: 150327 By albireo
# Modify.........:
################################################################################
PRIVATE FUNCTION aglt502_set_prog_visible()
   CALL cl_set_comp_visible('gldpld,gldp002,gldpld_desc',TRUE)
   CALL cl_set_comp_visible('gldp006',TRUE)
   
   IF cl_null(g_progtype) THEN
      CALL cl_set_comp_visible('gldp006',FALSE)
   END IF
   CASE
      WHEN g_progtype = 'M'
         CALL cl_set_comp_visible('gldpld,gldpld_desc',FALSE)
      OTHERWISE 
         CALL cl_set_comp_visible('gldp002,gldp002_desc',FALSE)
   END CASE
END FUNCTION

################################################################################
# Descriptions...: 單身開啟核算項維護子程式
# Memo...........:
# Date & Author..: 150330 By albireo
# Modify.........:
################################################################################
PRIVATE FUNCTION aglt502_open_aglt501_01(p_ac)
   DEFINE p_ac   LIKE type_t.num10
  
   #用會科給核算項預設值
   CALL s_fin_sel_glad(g_glaald,g_gldq_d[p_ac].gldq001,'ALL') RETURNING g_glad.*
   #部門
   IF g_glad.glad007 = 'Y' THEN
      IF cl_null(g_gldq_d[p_ac].gldq004) THEN
         LET g_gldq_d[p_ac].gldq004 = ''
         SELECT ooag003 INTO g_gldq_d[p_ac].gldq004 FROM ooag_t
          WHERE ooagent = g_enterprise
            AND ooag001 = g_user
      END IF
   END IF
   #利潤/成本中心
   IF g_glad.glad008 = 'Y' THEN
      IF cl_null(g_gldq_d[p_ac].gldq005) THEN
         IF NOT cl_null(g_gldq_d[p_ac].gldq005) THEN
            SELECT ooeg004 INTO g_gldq_d[p_ac].gldq005 FROM ooeg_t WHERE ooegent = g_enterprise AND ooeg001 = g_gldq_d[p_ac].gldq004
         ELSE
            SELECT ooeg004 INTO g_gldq_d[p_ac].gldq005 FROM ooeg_t,ooag_t
             WHERE ooegent = ooagent 
               AND ooeg001 = ooag003
               AND ooagent = g_enterprise
               AND ooag001 = g_user
         END IF
      END IF
   END IF
     
   #人員
   IF g_glad.glad013='Y' THEN
      IF cl_null(g_gldq_d[p_ac].gldq014) THEN
         LET g_gldq_d[p_ac].gldq014=g_user
      END IF
   END IF
     
   #開啟子程式 輸入固定核算資料 傳入ARRAY 輸入資料 回傳ARRAY
   CALL g_aglt501_01.clear()
#   LET g_aglt501_01[1].chr  = g_glfg_m.glfg001
   LET g_aglt501_01[2].chr  = g_glaald
   LET g_aglt501_01[3].chr  = g_gldq_d[p_ac].gldq001
#   LET g_aglt501_01[5].chr  = g_glfg_m.glfg005
#   LET g_aglt501_01[6].chr  = g_glfg_m.glfg006
   LET g_aglt501_01[8].chr  = g_gldq_d[p_ac].gldq003
   LET g_aglt501_01[9].chr  = g_gldq_d[p_ac].gldq004
   LET g_aglt501_01[10].chr = g_gldq_d[p_ac].gldq005
   LET g_aglt501_01[11].chr = g_gldq_d[p_ac].gldq006
   LET g_aglt501_01[12].chr = g_gldq_d[p_ac].gldq007
   LET g_aglt501_01[13].chr = g_gldq_d[p_ac].gldq008
   LET g_aglt501_01[14].chr = g_gldq_d[p_ac].gldq009
   LET g_aglt501_01[15].chr = g_gldq_d[p_ac].gldq010
   LET g_aglt501_01[16].chr = g_gldq_d[p_ac].gldq011
   LET g_aglt501_01[17].chr = g_gldq_d[p_ac].gldq012
   LET g_aglt501_01[18].chr = g_gldq_d[p_ac].gldq013
   LET g_aglt501_01[19].chr = g_gldq_d[p_ac].gldq014
   LET g_aglt501_01[20].chr = g_gldq_d[p_ac].gldq015
   LET g_aglt501_01[21].chr = g_gldq_d[p_ac].gldq016
   LET g_aglt501_01[22].chr = '2'
   CALL aglt501_01(g_aglt501_01)RETURNING g_aglt501_01
   LET  g_gldq_d[p_ac].gldq003 = g_aglt501_01[8].chr 
   LET  g_gldq_d[p_ac].gldq004 = g_aglt501_01[9].chr 
   LET  g_gldq_d[p_ac].gldq005 = g_aglt501_01[10].chr
   LET  g_gldq_d[p_ac].gldq006 = g_aglt501_01[11].chr
   LET  g_gldq_d[p_ac].gldq007 = g_aglt501_01[12].chr
   LET  g_gldq_d[p_ac].gldq008 = g_aglt501_01[13].chr
   LET  g_gldq_d[p_ac].gldq009 = g_aglt501_01[14].chr
   LET  g_gldq_d[p_ac].gldq010 = g_aglt501_01[15].chr
   LET  g_gldq_d[p_ac].gldq011 = g_aglt501_01[16].chr
   LET  g_gldq_d[p_ac].gldq012 = g_aglt501_01[17].chr
   LET  g_gldq_d[p_ac].gldq013 = g_aglt501_01[18].chr
   LET  g_gldq_d[p_ac].gldq014 = g_aglt501_01[19].chr
   LET  g_gldq_d[p_ac].gldq015 = g_aglt501_01[20].chr
   LET  g_gldq_d[p_ac].gldq016 = g_aglt501_01[21].chr
END FUNCTION

################################################################################
# Descriptions...: 核算項顯示
# Memo...........:
# Date & Author..: 150331 By albireo
# Modify.........:
################################################################################
PRIVATE FUNCTION aglt502_otherdetail_show(p_ac)
   DEFINE p_ac   LIKE type_t.num10

   IF cl_null(p_ac) OR p_ac <= 0 THEN RETURN END IF
   LET g_gldp_m.l_gldq003 = g_gldq_d[p_ac].gldq003
   LET g_gldp_m.l_gldq003_desc = s_desc_show1(g_gldp_m.l_gldq003,s_desc_get_department_desc(g_gldp_m.l_gldq003))
   
   LET g_gldp_m.l_gldq004 = g_gldq_d[p_ac].gldq004
   LET g_gldp_m.l_gldq004_desc = s_desc_show1(g_gldp_m.l_gldq004,s_desc_get_department_desc(g_gldp_m.l_gldq004))
   LET g_gldp_m.l_gldq005 = g_gldq_d[p_ac].gldq005
   LET g_gldp_m.l_gldq005_desc  = s_desc_show1(g_gldp_m.l_gldq005,s_desc_get_department_desc(g_gldp_m.l_gldq005))
   LET g_gldp_m.l_gldq006 = g_gldq_d[p_ac].gldq006
   LET g_gldp_m.l_gldq006_desc = s_desc_show1(g_gldp_m.l_gldq006,s_desc_get_acc_desc('287',g_gldp_m.l_gldq006))
   LET g_gldp_m.l_gldq007 = g_gldq_d[p_ac].gldq007
   LET g_gldp_m.l_gldq007_desc = s_desc_show1(g_gldp_m.l_gldq007,s_desc_get_trading_partner_abbr_desc(g_gldp_m.l_gldq007))
   LET g_gldp_m.l_gldq008 = g_gldq_d[p_ac].gldq008
   LET g_gldp_m.l_gldq008_desc = s_desc_show1(g_gldp_m.l_gldq008,s_desc_get_trading_partner_abbr_desc(g_gldp_m.l_gldq008))
   LET g_gldp_m.l_gldq009 = g_gldq_d[p_ac].gldq009
   LET g_gldp_m.l_gldq009_desc = s_desc_show1(g_gldp_m.l_gldq009,s_desc_get_acc_desc('281',g_gldp_m.l_gldq009))   
   LET g_gldp_m.l_gldq010 = g_gldq_d[p_ac].gldq010
   LET g_gldp_m.l_gldq010_desc = s_desc_show1(g_gldp_m.l_gldq010,s_desc_get_rtaxl003_desc(g_gldp_m.l_gldq010))   
   LET g_gldp_m.l_gldq011 = g_gldq_d[p_ac].gldq011
                  
   LET g_gldp_m.l_gldq012 = g_gldq_d[p_ac].gldq012
   LET g_gldp_m.l_gldq012_desc = s_desc_show1(g_gldp_m.l_gldq012,s_desc_get_oojdl003_desc(g_gldp_m.l_gldq012))   
                  
   LET g_gldp_m.l_gldq013 = g_gldq_d[p_ac].gldq013
   LET g_gldp_m.l_gldq013_desc = s_desc_show1(g_gldp_m.l_gldq013,s_desc_get_acc_desc('2002',g_gldp_m.l_gldq013)) 
   LET g_gldp_m.l_gldq014 = g_gldq_d[p_ac].gldq014
   LET g_gldp_m.l_gldq014_desc = s_desc_show1(g_gldp_m.l_gldq014,s_desc_get_person_desc(g_gldp_m.l_gldq014)) 
   LET g_gldp_m.l_gldq015 = g_gldq_d[p_ac].gldq015
                  
   LET g_gldp_m.l_gldq016 = g_gldq_d[p_ac].gldq016
   LET g_gldp_m.l_gldq016_desc = s_desc_show1(g_gldp_m.l_gldq016,s_desc_get_pjbbl004_desc(g_gldp_m.l_gldq015,g_gldp_m.l_gldq016)) 
   LET g_gldp_m.l_gldq015_desc = s_desc_show1(g_gldp_m.l_gldq015,s_desc_get_project_desc(g_gldp_m.l_gldq015))
   DISPLAY BY NAME g_gldp_m.l_gldq003,g_gldp_m.l_gldq004,g_gldp_m.l_gldq005,
                   g_gldp_m.l_gldq006,g_gldp_m.l_gldq007,g_gldp_m.l_gldq008,
                   g_gldp_m.l_gldq009,g_gldp_m.l_gldq010,g_gldp_m.l_gldq011,
                   g_gldp_m.l_gldq012,g_gldp_m.l_gldq013,g_gldp_m.l_gldq014,
                   g_gldp_m.l_gldq015,g_gldp_m.l_gldq016
                   
   DISPLAY BY NAME g_gldp_m.l_gldq003_desc,g_gldp_m.l_gldq004_desc,g_gldp_m.l_gldq005_desc,
                   g_gldp_m.l_gldq006_desc,g_gldp_m.l_gldq007_desc,g_gldp_m.l_gldq008_desc,
                   g_gldp_m.l_gldq009_desc,g_gldp_m.l_gldq010_desc,                  
                   g_gldp_m.l_gldq012_desc,g_gldp_m.l_gldq013_desc,g_gldp_m.l_gldq014_desc,
                   g_gldp_m.l_gldq015_desc,g_gldp_m.l_gldq016_desc
                   
END FUNCTION

################################################################################
# Descriptions...: 欄位隱顯
# Memo...........:
# Date & Author..: 150331 By albireo
# Modify.........:
################################################################################
PRIVATE FUNCTION aglt502_set_visible()
   CALL cl_set_comp_visible("gldp014,gldp011,gldq019,gldq020,gldq021,gldq022",TRUE)
END FUNCTION

################################################################################
# Descriptions...: 欄位隱藏
# Memo...........:
# Date & Author..: 150331 By albireo
# Modify.........:
################################################################################
PRIVATE FUNCTION aglt502_set_no_visible()
   IF cl_null(g_glaald)THEN RETURN END IF 
   CALL aglt502_get_ld_info(g_glaald)RETURNING g_glaa.*
   IF g_glaa.glaa015 = 'N' THEN
      CALL cl_set_comp_visible("gldp011,gldq019,gldq020",FALSE)
   END IF
   IF g_glaa.glaa019 = 'N' THEN
      CALL cl_set_comp_visible("gldp014,gldq021,gldq022",FALSE)
   END IF
END FUNCTION

################################################################################
# Descriptions...: 回寫來源單據之傳票號碼為空
# Memo...........: #151113-00002#8
# Usage..........: CALL aglt502_update_gl(p_prog)
# Date & Author..: 151223 By Jessy
# Modify.........:
################################################################################
PRIVATE FUNCTION aglt502_update_gl(p_prog)
DEFINE p_prog      LIKE gzza_t.gzza001
DEFINE r_success   LIKE type_t.num5

   LET r_success = TRUE
   CASE p_prog 
      WHEN 'aglt506'
         UPDATE glfi_t SET glfi004 = NULL 
          WHERE glfient = g_enterprise 
            AND glfild  = g_gldp_m.gldpld  
            AND glfi001 = g_gldp_m.gldp001
            AND glfi002 = g_gldp_m.gldp003
            AND glfi003 = g_gldp_m.gldp004
            
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "upd glfi_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            LET r_success = FALSE
            RETURN r_success
         END IF    

      WHEN 'aglt522'
         UPDATE gldu_t SET gldu008 = NULL 
          WHERE glduent = g_enterprise 
            AND glduld  = g_gldp_m.gldpld  
            AND gldu001 = g_gldp_m.gldp001
            AND gldu003 = g_gldp_m.gldp003
            AND gldu004 = g_gldp_m.gldp004
            
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "upd gldu_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            LET r_success = FALSE
            RETURN r_success
         END IF
         
      WHEN 'aglt524'
         UPDATE gldv_t SET gldv008 = NULL 
          WHERE gldvent = g_enterprise 
            AND gldvld  = g_gldp_m.gldpld  
            AND gldv001 = g_gldp_m.gldp001
            AND gldv003 = g_gldp_m.gldp003
            AND gldv004 = g_gldp_m.gldp004
            
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "upd gldv_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            LET r_success = FALSE
            RETURN r_success
         END IF
   END CASE
   
   RETURN r_success 
END FUNCTION

 
{</section>}
 
