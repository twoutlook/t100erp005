#該程式未解開Section, 採用最新樣板產出!
{<section id="aglp501.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0003(2015-10-20 17:20:56), PR版次:0003(2017-02-22 14:01:34)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000048
#+ Filename...: aglp501
#+ Description: 已過帳傳票重新過帳作業
#+ Creator....: 02114(2015-10-20 09:53:16)
#+ Modifier...: 02114 -SD/PR- 02599
 
{</section>}
 
{<section id="aglp501.global" >}
#應用 p01 樣板自動產生(Version:19)
#add-point:填寫註解說明 name="global.memo" name="global.memo"
#161017-00022#1    2016/10/19 By 02599   账套增加权限管控
#170222-00024#1    2017/02/22 By 02599   aglp501_del()中增加一段代码，当凭证中核算项值为NULL时更新为空格，更新完凭证后在重新过账
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_schedule
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
   DEFINE g_chk_jobid          LIKE type_t.num5
END GLOBALS
 
PRIVATE TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable) name="global.parameter"
   
   #end add-point
        wc               STRING
                     END RECORD
 
DEFINE g_sql             STRING        #組 sql 用
DEFINE g_forupd_sql      STRING        #SELECT ... FOR UPDATE  SQL
DEFINE g_error_show      LIKE type_t.num5
DEFINE g_jobid           STRING
DEFINE g_wc              STRING
 
PRIVATE TYPE type_master RECORD
       glapld LIKE type_t.chr5, 
   glap002 LIKE type_t.num5, 
   glap004 LIKE type_t.num5, 
   count LIKE type_t.num10, 
   no LIKE type_t.num10, 
   num LIKE type_t.num10, 
   start_no LIKE type_t.chr500, 
   end_no LIKE type_t.chr500, 
   stagenow LIKE type_t.chr500,
       wc               STRING
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_master type_master
 
#add-point:自定義模組變數(Module Variable) name="global.variable"
DEFINE g_glaald_wc       STRING
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明 name="global.argv"

#end add-point
 
{</section>}
 
{<section id="aglp501.main" >}
MAIN
   #add-point:main段define (客製用) name="main.define_customerization"
   
   #end add-point 
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter  
   #add-point:main段define name="main.define"
   
   #end add-point 
  
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:初始化前定義 name="main.before_ap_init"
   
   #end add-point
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("agl","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js name="main.background"
   
   #end add-point
 
   #背景(Y) 或半背景(T) 時不做主畫面開窗
   IF g_bgjob = "Y" OR g_bgjob = "T" THEN
      #排程參數由01開始，若不是1開始，表示有保留參數
      LET ls_js = g_argv[01]
     #CALL util.JSON.parse(ls_js,g_master)   #p類主要使用l_param,此處不解析
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
      CALL aglp501_process(ls_js)
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aglp501 WITH FORM cl_ap_formpath("agl",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL aglp501_init()
 
      #進入選單 Menu (="N")
      CALL aglp501_ui_dialog()
 
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_aglp501
   END IF
 
   #add-point:作業離開前 name="main.exit"
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
{</section>}
 
{<section id="aglp501.init" >}
#+ 初始化作業
PRIVATE FUNCTION aglp501_init()
 
   #add-point:init段define (客製用) name="init.define_customerization"
   
   #end add-point
   #add-point:ui_dialog段define name="init.define"
   
   #end add-point
 
   LET g_error_show = 1
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #add-point:畫面資料初始化 name="init.init"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="aglp501.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION aglp501_ui_dialog()
 
   #add-point:ui_dialog段define (客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx   LIKE type_t.num10
   DEFINE ls_js    STRING
   DEFINE ls_wc    STRING
   DEFINE l_dialog ui.DIALOG
   DEFINE lc_param type_parameter
   #add-point:ui_dialog段define name="ui_dialog.define"
   
   #end add-point
   
   #add-point:ui_dialog段before dialog name="ui_dialog.before_dialog"
   
   #end add-point
 
   WHILE TRUE
      #add-point:ui_dialog段before dialog2 name="ui_dialog.before_dialog2"
      
      #end add-point
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #應用 a57 樣板自動產生(Version:3)
         INPUT BY NAME g_master.glap002,g_master.glap004,g_master.count,g_master.no,g_master.num,g_master.start_no, 
             g_master.end_no 
            ATTRIBUTE(WITHOUT DEFAULTS)
            
            #自訂ACTION(master_input)
            
         
            BEFORE INPUT
               #add-point:資料輸入前 name="input.m.before_input"
               
               #end add-point
         
                     #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glap002
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_master.glap002,"1000.000","1","9999.000","1","azz-00087",1) THEN
               NEXT FIELD glap002
            END IF 
 
 
 
            #add-point:AFTER FIELD glap002 name="input.a.glap002"
            IF NOT cl_null(g_master.glap002) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glap002
            #add-point:BEFORE FIELD glap002 name="input.b.glap002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glap002
            #add-point:ON CHANGE glap002 name="input.g.glap002"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glap004
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_master.glap004,"1.000","1","13.000","1","azz-00087",1) THEN
               NEXT FIELD glap004
            END IF 
 
 
 
            #add-point:AFTER FIELD glap004 name="input.a.glap004"
            IF NOT cl_null(g_master.glap004) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glap004
            #add-point:BEFORE FIELD glap004 name="input.b.glap004"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glap004
            #add-point:ON CHANGE glap004 name="input.g.glap004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD count
            #add-point:BEFORE FIELD count name="input.b.count"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD count
            
            #add-point:AFTER FIELD count name="input.a.count"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE count
            #add-point:ON CHANGE count name="input.g.count"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD no
            #add-point:BEFORE FIELD no name="input.b.no"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD no
            
            #add-point:AFTER FIELD no name="input.a.no"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE no
            #add-point:ON CHANGE no name="input.g.no"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD num
            #add-point:BEFORE FIELD num name="input.b.num"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD num
            
            #add-point:AFTER FIELD num name="input.a.num"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE num
            #add-point:ON CHANGE num name="input.g.num"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD start_no
            #add-point:BEFORE FIELD start_no name="input.b.start_no"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD start_no
            
            #add-point:AFTER FIELD start_no name="input.a.start_no"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE start_no
            #add-point:ON CHANGE start_no name="input.g.start_no"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD end_no
            #add-point:BEFORE FIELD end_no name="input.b.end_no"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD end_no
            
            #add-point:AFTER FIELD end_no name="input.a.end_no"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE end_no
            #add-point:ON CHANGE end_no name="input.g.end_no"
            
            #END add-point 
 
 
 
                     #Ctrlp:input.c.glap002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glap002
            #add-point:ON ACTION controlp INFIELD glap002 name="input.c.glap002"
            
            #END add-point
 
 
         #Ctrlp:input.c.glap004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glap004
            #add-point:ON ACTION controlp INFIELD glap004 name="input.c.glap004"
            
            #END add-point
 
 
         #Ctrlp:input.c.count
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD count
            #add-point:ON ACTION controlp INFIELD count name="input.c.count"
            
            #END add-point
 
 
         #Ctrlp:input.c.no
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD no
            #add-point:ON ACTION controlp INFIELD no name="input.c.no"
            
            #END add-point
 
 
         #Ctrlp:input.c.num
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD num
            #add-point:ON ACTION controlp INFIELD num name="input.c.num"
            
            #END add-point
 
 
         #Ctrlp:input.c.start_no
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD start_no
            #add-point:ON ACTION controlp INFIELD start_no name="input.c.start_no"
            
            #END add-point
 
 
         #Ctrlp:input.c.end_no
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD end_no
            #add-point:ON ACTION controlp INFIELD end_no name="input.c.end_no"
            
            #END add-point
 
 
 
               
            AFTER INPUT
               #add-point:資料輸入後 name="input.m.after_input"
               
               #end add-point
               
            #add-point:其他管控(on row change, etc...) name="input.other"
            
            #end add-point
         END INPUT
 
 
 
         
         #應用 a58 樣板自動產生(Version:3)
         CONSTRUCT BY NAME g_master.wc ON glapld
            BEFORE CONSTRUCT
               #add-point:cs段before_construct name="cs.head.before_construct"
               
               #end add-point 
         
            #公用欄位開窗相關處理
            
               
            #一般欄位開窗相關處理    
                     #Ctrlp:construct.c.glapld
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glapld
            #add-point:ON ACTION controlp INFIELD glapld name="construct.c.glapld"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            #161017-00022#1--mod--str--
#            CALL q_glaald()                           #呼叫開窗
            LET g_qryparam.arg1 = g_user 
            LET g_qryparam.arg2 = g_dept 
            CALL q_authorised_ld()
            #161017-00022#1--mod--end
            DISPLAY g_qryparam.return1 TO glapld  #顯示到畫面上
            NEXT FIELD glapld                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glapld
            #add-point:BEFORE FIELD glapld name="construct.b.glapld"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glapld
            
            #add-point:AFTER FIELD glapld name="construct.a.glapld"
            
            #END add-point
            
 
 
 
            
            #add-point:其他管控 name="cs.other"
            LET g_glaald_wc = GET_FLDBUF(glapld)
            #end add-point
            
         END CONSTRUCT
 
 
 
      
         #add-point:ui_dialog段construct name="ui_dialog.more_construct"
         
         #end add-point
         #add-point:ui_dialog段input name="ui_dialog.more_input"
         
         #end add-point
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         #end add-point
 
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
 
         BEFORE DIALOG
            LET l_dialog = ui.DIALOG.getCurrent()
            CALL aglp501_get_buffer(l_dialog)
            #add-point:ui_dialog段before dialog name="ui_dialog.before_dialog3"
            LET g_master.glap002 = ''
            LET g_master.glap004 = ''
            LET g_master.count = 0
            LET g_master.no = 0
            LET g_master.num = 0
            DISPLAY g_master.glap002 TO glap002
            DISPLAY g_master.glap004 TO glap004
            DISPLAY g_master.count TO count
            DISPLAY g_master.no TO no
            DISPLAY g_master.num TO num
            #end add-point
 
         ON ACTION batch_execute
            LET g_action_choice = "batch_execute"
            ACCEPT DIALOG
 
         #add-point:ui_dialog段before_qbeclear name="ui_dialog.before_qbeclear"
            
         #end add-point
 
         ON ACTION qbeclear         
            CLEAR FORM
            INITIALIZE g_master.* TO NULL   #畫面變數清空
            INITIALIZE lc_param.* TO NULL   #傳遞參數變數清空
            #add-point:ui_dialog段qbeclear name="ui_dialog.qbeclear"
            
            #end add-point
 
         ON ACTION history_fill
            CALL cl_schedule_history_fill()
 
         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT DIALOG
         
         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT DIALOG
 
         #add-point:ui_dialog段action name="ui_dialog.more_action"
         
         #end add-point
 
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM   
         INITIALIZE g_master.* TO NULL
         LET g_wc  = ' 1=2'
         LET g_action_choice = ""
         CALL aglp501_init()
         CONTINUE WHILE
      END IF
 
      #檢查批次設定是否有錯(或未設定完成)
      IF NOT cl_schedule_exec_check() THEN
         CONTINUE WHILE
      END IF
      
      LET lc_param.wc = g_master.wc    #把畫面上的wc傳遞到參數變數
      #請在下方的add-point內進行把畫面的輸入資料(g_master)轉換到傳遞參數變數(lc_param)的動作
      #add-point:ui_dialog段exit dialog name="process.exit_dialog"
      
      #end add-point
 
      LET ls_js = util.JSON.stringify(lc_param)  #r類使用g_master/p類使用lc_param
 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      ELSE
         IF g_chk_jobid THEN 
            LET g_jobid = g_schedule.gzpa001
         ELSE 
            LET g_jobid = cl_schedule_get_jobid(g_prog)
         END IF 
 
         #依照指定模式執行報表列印
         CASE 
            WHEN g_schedule.gzpa003 = "0"
                 CALL aglp501_process(ls_js)
 
            WHEN g_schedule.gzpa003 = "1"
                 LET ls_js = aglp501_transfer_argv(ls_js)
                 CALL cl_cmdrun(ls_js)
 
            WHEN g_schedule.gzpa003 = "2"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
 
            WHEN g_schedule.gzpa003 = "3"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
         END CASE  
 
         IF g_schedule.gzpa003 = "2" OR g_schedule.gzpa003 = "3" THEN 
            CALL cl_ask_confirm3("std-00014","") #設定完成
         END IF    
         LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
 
         #add-point:ui_dialog段after schedule name="process.after_schedule"
         
         #end add-point
 
         #欄位初始資訊 
         CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
         LET gi_hiden_asign = FALSE 
         LET gi_hiden_exec = FALSE 
         LET gi_hiden_spec = FALSE 
         LET gi_hiden_exec_end = FALSE 
         CALL cl_schedule_hidden()
      END IF
   END WHILE
 
END FUNCTION
 
{</section>}
 
{<section id="aglp501.transfer_argv" >}
#+ 轉換本地參數至cmdrun參數內,準備進入背景執行
PRIVATE FUNCTION aglp501_transfer_argv(ls_js)
 
   #add-point:transfer_agrv段define (客製用) name="transfer_agrv.define_customerization"
   
   #end add-point
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog       STRING,
             actionid   STRING,
             background LIKE type_t.chr1,
             param      DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter
   #add-point:transfer_agrv段define name="transfer_agrv.define"
   
   #end add-point
 
   LET la_cmdrun.prog = g_prog
   LET la_cmdrun.background = "Y"
   LET la_cmdrun.param[1] = ls_js
 
   #add-point:transfer.argv段程式內容 name="transfer.argv.define"
   
   #end add-point
 
   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION
 
{</section>}
 
{<section id="aglp501.process" >}
#+ 資料處理   (r類使用g_master為主處理/p類使用l_param為主)
PRIVATE FUNCTION aglp501_process(ls_js)
 
   #add-point:process段define (客製用) name="process.define_customerization"
   
   #end add-point
   DEFINE ls_js         STRING
   DEFINE lc_param      type_parameter
   DEFINE li_stus       LIKE type_t.num5
   DEFINE li_count      LIKE type_t.num10  #progressbar計量
   DEFINE ls_sql        STRING             #主SQL
   DEFINE li_p01_status LIKE type_t.num5
   #add-point:process段define name="process.define"
   DEFINE l_success     LIKE type_t.num5
   DEFINE r_strno       LIKE glap_t.glapdocno
   DEFINE r_endno       LIKE glap_t.glapdocno
   DEFINE r_flag        LIKE type_t.chr1
   DEFINE l_ld_str      STRING  #161017-00022#1 add
   #end add-point
 
  #INITIALIZE lc_param TO NULL           #p類不可以清空
   CALL util.JSON.parse(ls_js,lc_param)  #r類作業被t類呼叫時使用, p類主要解開參數處
   LET li_p01_status = 1
 
  #IF lc_param.wc IS NOT NULL THEN
  #   LET g_bgjob = "T"       #特殊情況,此為t類作業鬆耦合串入報表主程式使用
  #END IF
 
   #add-point:process段前處理 name="process.pre_process"
   #批處理前檢查
   CALL cl_err_collect_init()
   
   #161017-00022#1--add--str--
   #账套权限限制
   CALL s_ld_sel_authority_sql(g_user,g_dept) RETURNING l_ld_str
   LET l_ld_str = cl_replace_str(l_ld_str,"glaald","glapld")
   IF NOT cl_null(g_master.wc) THEN
      LET g_master.wc = g_master.wc," AND ",l_ld_str
   ELSE
      LET g_master.wc = l_ld_str
   END IF
   #161017-00022#1--add--end
   
   CALL aglp501_p_chk() RETURNING l_success
   CALL cl_err_collect_show()
   IF l_success = FALSE THEN 
      RETURN
   END IF
   
   #過賬還原
   CALL cl_err_collect_init()
   CALL s_transaction_begin()
   CALL aglp501_del() RETURNING l_success
   IF l_success = FALSE THEN 
      CALL cl_err_collect_show()
      CALL s_transaction_end('N',1)
      RETURN
   END IF
   
   #過賬
   CALL aglp501_post() RETURNING l_success,r_strno,r_endno,r_flag
   IF r_flag = 'N' THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'asf-00230' 
      LET g_errparam.extend = ''         
      LET g_errparam.popup = TRUE
      CALL cl_err() 
      CALL s_transaction_end('N',0)
   ELSE
      IF l_success = FALSE THEN 
         CALL cl_err_collect_show()
         CALL s_transaction_end('N',1)
         RETURN
      ELSE
         DISPLAY r_strno,r_endno TO start_no,end_no
         CALL s_transaction_end('Y',1)
         DISPLAY '' ,0 TO stagenow,stagecomplete
      END IF
   END IF
   CALL cl_err_collect_show()
   #end add-point
 
   #預先計算progressbar迴圈次數
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress name="process.count_progress"
      
      #end add-point
   END IF
 
   #主SQL及相關FOREACH前置處理
#  DECLARE aglp501_process_cs CURSOR FROM ls_sql
#  FOREACH aglp501_process_cs INTO
   #add-point:process段process name="process.process"
   
   #end add-point
#  END FOREACH
 
   IF g_bgjob = "N" THEN
      #前景作業完成處理
      #add-point:process段foreground完成處理 name="process.foreground_finish"
      
      #end add-point
      CALL cl_ask_confirm3("std-00012","")
   ELSE
      #背景作業完成處理
      #add-point:process段background完成處理 name="process.background_finish"
      
      #end add-point
      CALL cl_schedule_exec_call(li_p01_status)
   END IF
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL aglp501_msgcentre_notify()
 
END FUNCTION
 
{</section>}
 
{<section id="aglp501.get_buffer" >}
PRIVATE FUNCTION aglp501_get_buffer(p_dialog)
 
   #add-point:process段define (客製用) name="get_buffer.define_customerization"
   
   #end add-point
   DEFINE p_dialog   ui.DIALOG
   #add-point:process段define name="get_buffer.define"
   
   #end add-point
 
   
   LET g_master.glap002 = p_dialog.getFieldBuffer('glap002')
   LET g_master.glap004 = p_dialog.getFieldBuffer('glap004')
   LET g_master.count = p_dialog.getFieldBuffer('count')
   LET g_master.no = p_dialog.getFieldBuffer('no')
   LET g_master.num = p_dialog.getFieldBuffer('num')
   LET g_master.start_no = p_dialog.getFieldBuffer('start_no')
   LET g_master.end_no = p_dialog.getFieldBuffer('end_no')
 
   CALL cl_schedule_get_buffer(p_dialog)
 
   #add-point:get_buffer段其他欄位處理 name="get_buffer.others"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="aglp501.msgcentre_notify" >}
PRIVATE FUNCTION aglp501_msgcentre_notify()
 
   #add-point:process段define (客製用) name="msgcentre_notify.define_customerization"
   
   #end add-point
   DEFINE lc_state LIKE type_t.chr5
   #add-point:process段define name="msgcentre_notify.define"
   
   #end add-point
 
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = "process"
 
   #add-point:msgcentre其他通知 name="msg_centre.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
{</section>}
 
{<section id="aglp501.other_function" readonly="Y" >}
#add-point:自定義元件(Function) name="other.function"
# 批處理前檢查
PRIVATE FUNCTION aglp501_p_chk()
   DEFINE l_sql             STRING
   DEFINE l_glaald          LIKE glaa_t.glaald
   DEFINE l_glaa013         LIKE glaa_t.glaa013
   DEFINE r_success         LIKE type_t.num5
   DEFINE l_wc              STRING
   
   LET r_success = TRUE
   
   LET l_wc = cl_replace_str(g_master.wc,'glapld','glaald')
  
   LET l_sql = "SELECT glaald,glaa013 FROM glaa_t ",
               " WHERE glaaent = ",g_enterprise,
               "   AND ",l_wc
               
   PREPARE algp501_chk_pre FROM l_sql
   DECLARE algp501_chk_cs CURSOR FOR algp501_chk_pre
   
   FOREACH algp501_chk_cs INTO l_glaald,l_glaa013
      IF g_master.glap002 < YEAR(l_glaa013) OR 
        (g_master.glap002 = YEAR(l_glaa013) AND g_master.glap004 < MONTH(l_glaa013)) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'agl-00163'
         LET g_errparam.extend = l_glaald
         LET g_errparam.popup = FALSE
         CALL cl_err()
          
         LET r_success = FALSE
      END IF 
   END FOREACH  
   
   RETURN r_success
END FUNCTION
# 批量删除
PRIVATE FUNCTION aglp501_del()
   DEFINE l_sql             STRING
   DEFINE l_wc              STRING
   DEFINE r_success         LIKE type_t.num5
   DEFINE l_i               LIKE type_t.num5 #170222-00024#1
   DEFINE l_field           LIKE type_t.chr100 #170222-00024#1
   DEFINE l_sql1            STRING #170222-00024#1
   
   LET r_success = TRUE
   
   LET l_wc = cl_replace_str(g_master.wc,'glapld','glarld')
   
   LET l_sql = "DELETE FROM glar_t ",
               " WHERE glarent = ",g_enterprise,
               "   AND glar002 = ",g_master.glap002,
               "   AND glar003 = ",g_master.glap004,
               "   AND ",l_wc
   PREPARE algp501_del_pre FROM l_sql
   EXECUTE algp501_del_pre
   
   IF SQLCA.sqlcode THEN
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   LET l_sql = "UPDATE glap_t SET glapstus = 'Y' ",
               " WHERE glapent = ",g_enterprise,
               "   AND glap002 = ",g_master.glap002,
               "   AND glap004 = ",g_master.glap004,
               "   AND glapstus = 'S' ",
               "   AND ",g_master.wc
   PREPARE algp501_upd_pre FROM l_sql
   EXECUTE algp501_upd_pre
   
   IF SQLCA.sqlcode THEN
      LET r_success = FALSE
   END IF

   #170222-00024#1--add--str--
   #将凭证中核算项为NULL的值更新为空格' '
   LET l_wc = cl_replace_str(g_master.wc,'glapld','glaqld')
   LET l_sql1=" WHERE glaqent = ",g_enterprise,
              "   AND ",l_wc,
              "   AND glaqdocno IN (SELECT glapdocno FROM glap_t ",
              "                      WHERE glapent = ",g_enterprise,
              "                        AND glap002 = ",g_master.glap002,
              "                        AND glap004 = ",g_master.glap004,
              "                        AND ",g_master.wc,
              "                     )"
          
   FOR l_i = 1 TO 24   
       CASE l_i
          WHEN 1   LET l_field = 'glaq017'
          WHEN 2   LET l_field = 'glaq018'
          WHEN 3   LET l_field = 'glaq019'
          WHEN 4   LET l_field = 'glaq020'
          WHEN 5   LET l_field = 'glaq021'
          WHEN 6   LET l_field = 'glaq022'
          WHEN 7   LET l_field = 'glaq023'
          WHEN 8   LET l_field = 'glaq024'
          WHEN 9   LET l_field = 'glaq025'
          WHEN 10  LET l_field = 'glaq027'
          WHEN 11  LET l_field = 'glaq028'
          WHEN 12  LET l_field = 'glaq029'
          WHEN 13  LET l_field = 'glaq030'
          WHEN 14  LET l_field = 'glaq031'
          WHEN 15  LET l_field = 'glaq032'
          WHEN 16  LET l_field = 'glaq033'
          WHEN 17  LET l_field = 'glaq034'
          WHEN 18  LET l_field = 'glaq035'
          WHEN 19  LET l_field = 'glaq036'
          WHEN 20  LET l_field = 'glaq037'
          WHEN 21  LET l_field = 'glaq038'
          WHEN 22  LET l_field = 'glaq051'
          WHEN 23  LET l_field = 'glaq052'
          WHEN 24  LET l_field = 'glaq053'
      END CASE
      LET l_sql="UPDATE glaq_t SET ",l_field," = ' '",
                l_sql1,
               "   AND ",l_field," IS NULL " 
      PREPARE aglp501_upd_hsx FROM l_sql  
      #更新
      EXECUTE aglp501_upd_hsx
      IF SQLCA.sqlcode THEN
         LET r_success = FALSE
      END IF
   END FOR
   #170222-00024#1--add--end

   RETURN r_success
END FUNCTION
# 整批過賬
PRIVATE FUNCTION aglp501_post()
   DEFINE l_sql             STRING
   DEFINE l_sql_cnt         STRING
   DEFINE l_glapld          LIKE glap_t.glapld
   DEFINE l_glapdocno       LIKE glap_t.glapdocno
   DEFINE r_strno           LIKE glap_t.glapdocno
   DEFINE r_endno           LIKE glap_t.glapdocno
   DEFINE l_glapcomp        LIKE glap_t.glapcomp      #151223-00004#1 add lujh
   DEFINE l_success         LIKE type_t.num5
   DEFINE r_success         LIKE type_t.num5
   DEFINE r_flag            LIKE type_t.chr1
   
   LET l_success = TRUE
   LET r_success = TRUE
   LET r_strno = ''
   LET r_endno = ''   
   LET r_flag = 'N'
      
   LET l_sql = "SELECT glapld,glapdocno,glapcomp ",    #151223-00004#1 add glapcomp lujh
               "  FROM glap_t ",
               " WHERE glapent = ",g_enterprise,
               "   AND glapstus = 'Y' ",
               "   AND glap002 = ",g_master.glap002,
               "   AND glap004 = ",g_master.glap004,
               "   AND ",g_master.wc,
               " ORDER BY glapdocno"
   
   IF g_bgjob = 'N' THEN
      DISPLAY '' ,0 TO stagenow,stagecomplete
      LET l_sql_cnt = "SELECT COUNT(*) FROM ( ",l_sql,") "
      PREPARE aglp501_cnt_pre FROM l_sql_cnt
      DECLARE aglp501_cnt_cs SCROLL CURSOR FOR aglp501_cnt_pre
      OPEN aglp501_cnt_cs
      FETCH aglp501_cnt_cs INTO g_master.count
      IF cl_null(g_master.count)THEN LET g_master.count = 0 END IF
      CALL cl_progress_bar_no_window(g_master.count)
      CLOSE aglp501_cnt_cs
      DISPLAY g_master.count TO count
   END IF   
               
   PREPARE algp501_post_pre FROM l_sql
   DECLARE algp501_post_cs CURSOR FOR algp501_post_pre
   
   LET g_master.no = 0
   FOREACH algp501_post_cs INTO l_glapld,l_glapdocno,l_glapcomp       #151223-00004#1 add glapcomp lujh
      IF g_bgjob = 'N' THEN
         CALL cl_progress_no_window_ing(l_glapdocno)
         LET g_master.no = g_master.no + 1
         LET g_master.num = g_master.count - g_master.no
         DISPLAY g_master.no,g_master.num TO no,num
      END IF
      
      #151223-00004#1--add--str--lujh
      DELETE FROM nmbc_t
       WHERE nmbcent = g_enterprise
         AND nmbcdocno = l_glapdocno
         AND nmbccomp = l_glapcomp
      
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = l_glapld
         LET g_errparam.code   = sqlca.sqlcode
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         LET r_success = FALSE
      END IF 
      
      DELETE FROM glbc_t
       WHERE glbcent = g_enterprise
         AND glbcld = l_glapld
         AND glbcdocno = l_glapdocno
         AND glbc001 = g_master.glap002
         AND glbc002 = g_master.glap004
         AND glbc010 = '2'
      
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = l_glapld
         LET g_errparam.code   = sqlca.sqlcode
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         LET r_success = FALSE
      END IF 
      #151223-00004#1--add--end--lujh
      
      CALL s_voucher_post_chk(l_glapld,l_glapdocno) RETURNING l_success
      IF l_success = TRUE THEN
         CALL s_voucher_post_upd(l_glapld,l_glapdocno) RETURNING l_success
         IF l_success = FALSE THEN 
            LET r_success = FALSE
         END IF
      ELSE
         LET r_success = FALSE
      END IF 
      IF cl_null(r_strno)THEN LET r_strno = l_glapdocno  END IF
      LET r_endno = l_glapdocno
      LET r_flag = 'Y'
   END FOREACH 
   
   IF cl_null(r_strno) AND cl_null(r_endno) THEN   #沒有產生任何單號,視為失敗
      LET r_success = FALSE
   END IF

   RETURN r_success,r_strno,r_endno,r_flag
END FUNCTION

#end add-point
 
{</section>}
 
