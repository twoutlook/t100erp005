#該程式未解開Section, 採用最新樣板產出!
{<section id="aglp520.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0002(2014-07-03 08:59:13), PR版次:0002(2016-03-29 13:31:01)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000183
#+ Filename...: aglp520
#+ Description: 傳票總號重排作業
#+ Creator....: 01531(2014-07-02 14:58:18)
#+ Modifier...: 01531 -SD/PR- 07675
 
{</section>}
 
{<section id="aglp520.global" >}
#應用 p01 樣板自動產生(Version:18)
#add-point:填寫註解說明
#160318-00005#16  2016/03/25 by 07675   將重複內容的錯誤訊息置換為公用錯誤訊息
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_schedule
#add-point:增加匯入項目

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
   DEFINE g_chk_jobid          LIKE type_t.num5
END GLOBALS
 
PRIVATE TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
   
   #end add-point
        wc               STRING
                     END RECORD
 
DEFINE g_sql             STRING        #組 sql 用
DEFINE g_forupd_sql      STRING        #SELECT ... FOR UPDATE  SQL
DEFINE g_error_show      LIKE type_t.num5
DEFINE g_jobid           STRING
DEFINE g_wc              STRING
 
PRIVATE TYPE type_master RECORD
       glapld LIKE glap_t.glapld, 
   glapld_desc LIKE type_t.chr80, 
   glap002 LIKE glap_t.glap002, 
   glap004 LIKE glap_t.glap004, 
   glapdocno LIKE glap_t.glapdocno, 
   glap009 LIKE glap_t.glap009, 
   stagenow LIKE type_t.chr80,
       wc               STRING
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_master type_master
 
#add-point:自定義模組變數(Module Variable)
DEFINE g_glaald         LIKE glaa_t.glaald      #主账套
DEFINE g_glaa003        LIKE glaa_t.glaa003     #會計週期
DEFINE g_glaa024        LIKE glaa_t.glaa024
DEFINE g_ooef004        LIKE ooef_t.ooef004     #单据别参照表号
DEFINE g_ref_fields     DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields     DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)

#end add-point
 
#add-point:傳入參數說明

#end add-point
 
{</section>}
 
{<section id="aglp520.main" >}
MAIN
   #add-point:main段define (客製用)
   
   #end add-point 
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter  
   #add-point:main段define 
   
   #end add-point 
  
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:初始化前定義
   
   #end add-point
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("agl","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   
   #end add-point
 
   #背景(Y) 或半背景(T) 時不做主畫面開窗
   IF g_bgjob = "Y" OR g_bgjob = "T" THEN
      #排程參數由01開始，若不是1開始，表示有保留參數
      LET ls_js = g_argv[01]
     #CALL util.JSON.parse(ls_js,g_master)   #p類主要使用l_param,此處不解析
      #add-point:Service Call
      
      #end add-point
      CALL aglp520_process(ls_js)
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aglp520 WITH FORM cl_ap_formpath("agl",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL aglp520_init()
 
      #進入選單 Menu (="N")
      CALL aglp520_ui_dialog()
 
      #add-point:畫面關閉前
      
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_aglp520
   END IF
 
   #add-point:作業離開前
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
{</section>}
 
{<section id="aglp520.init" >}
#+ 初始化作業
PRIVATE FUNCTION aglp520_init()
 
   #add-point:init段define (客製用)
   
   #end add-point
   #add-point:ui_dialog段define 
   DEFINE l_success     LIKE type_t.num5
   DEFINE l_pass        LIKE type_t.num5
   #end add-point
 
   LET g_error_show = 1
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #add-point:畫面資料初始化
   #抓取单据别参照表号
   SELECT ooef004 INTO g_ooef004 FROM ooef_t
   WHERE ooefent = g_enterprise
     AND ooef001 = g_site
     AND ooefstus = 'Y'   
     
   #获取预设主帐别
   CALL s_ld_bookno()  RETURNING l_success,g_glaald
   IF l_success = FALSE THEN
      RETURN
   END IF
   
   #權限檢查
   CALL s_ld_chk_authorization(g_user,g_glaald) RETURNING l_pass
   IF l_pass = FALSE THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'agl-00164'
      LET g_errparam.extend = g_glaald
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN
   END IF
   #會計科目參照表
   SELECT glaa003,glaa024 INTO g_glaa003,g_glaa024 FROM glaa_t 
    WHERE glaaent = g_enterprise
      AND glaald = g_glaald 
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="aglp520.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION aglp520_ui_dialog()
 
   #add-point:ui_dialog段define (客製用)
   
   #end add-point
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx   LIKE type_t.num10
   DEFINE ls_js    STRING
   DEFINE ls_wc    STRING
   DEFINE l_dialog ui.DIALOG
   DEFINE lc_param type_parameter
   #add-point:ui_dialog段define 
   DEFINE l_cnt     LIKE type_t.num5
   DEFINE l_pass    LIKE type_t.num5
   DEFINE l_glav003 LIKE glav_t.glav003
   #end add-point
   
   #add-point:ui_dialog段before dialog
   
   #end add-point
 
   WHILE TRUE
      #add-point:ui_dialog段before dialog2
      
      #end add-point
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #應用 a57 樣板自動產生(Version:3)
         INPUT BY NAME g_master.glapld,g_master.glap002,g_master.glap004,g_master.glapdocno,g_master.glap009  
 
            ATTRIBUTE(WITHOUT DEFAULTS)
            
            #自訂ACTION(master_input)
            
         
            BEFORE INPUT
               #add-point:資料輸入前 name="input.m.before_input"
               #预设值
               LET g_master.glapld =  g_glaald
               CALL aglp520_glapld_desc() 
               LET g_master.glap002 = YEAR(g_today)
               LET g_master.glap004 = MONTH(g_today)
               LET g_master.glapdocno = 'ALL'
               LET g_master.glap009 = 1           
               #end add-point
         
                     #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glapld
            
            #add-point:AFTER FIELD glapld name="input.a.glapld"
            IF NOT cl_null(g_master.glapld) THEN
               CALL aglp520_glapld_chk(g_master.glapld)
               IF NOT cl_null(g_errno) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_master.glapld
                  #160318-00005#16  --add--str
                  LET g_errparam.replace[1] ='agli010'
                  LET g_errparam.replace[2] = cl_get_progname('agli010',g_lang,"2")
                  LET g_errparam.exeprog    ='agli010'
                  #160318-00005#16  --add--end
                  LET g_errparam.popup = FALSE
                  CALL cl_err()

                  LET g_master.glapld = ''
                  DISPLAY '' TO glapld_desc
                  NEXT FIELD glapld
               END IF
               #检查使用者权限
               CALL s_ld_chk_authorization(g_user,g_master.glapld)  RETURNING l_pass
               IF l_pass = FALSE THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'axr-00022'
                  LET g_errparam.extend = g_master.glapld
                  LET g_errparam.popup = FALSE
                  CALL cl_err()

                  LET g_master.glapld = ''
                  DISPLAY '' TO glapld_desc
                  NEXT FIELD glapld
               END IF 
               #抓取會計週期
               LET g_glaa003 = ''
               SELECT glaa003,glaa024 INTO g_glaa003,g_glaa024 FROM glaa_t 
                WHERE glaaent = g_enterprise
                  AND glaald = g_master.glapld
            END IF 
            CALL aglp520_glapld_desc()
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glapld
            #add-point:BEFORE FIELD glapld name="input.b.glapld"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glapld
            #add-point:ON CHANGE glapld name="input.g.glapld"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glap002
            #add-point:BEFORE FIELD glap002 name="input.b.glap002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glap002
            
            #add-point:AFTER FIELD glap002 name="input.a.glap002"
            IF NOT cl_null(g_master.glap002) THEN
               IF g_master.glap002 <1000 OR g_master.glap002 >9999 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'aoo-00113'
                  LET g_errparam.extend = g_master.glap002
                  LET g_errparam.popup = FALSE
                  CALL cl_err()

                  LET g_master.glap002 =''
                  NEXT FIELD glap002
               END IF  
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glap002
            #add-point:ON CHANGE glap002 name="input.g.glap002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glap004
            #add-point:BEFORE FIELD glap004 name="input.b.glap004"
            IF cl_null(g_master.glap002) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'agl-00183'
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               NEXT FIELD glap002
            END IF
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glap004
            
            #add-point:AFTER FIELD glap004 name="input.a.glap004"
            IF NOT cl_null(g_master.glap004) THEN
                #资料检查,期别依据agli100对应年度设置不同，分12期和13期
                SELECT glav003 INTO l_glav003 FROM glav_t
                 WHERE glavent = g_enterprise
                   AND glav001 = g_glaa003
                   AND glav002 = g_master.glap002
                #1.月，2.周，3.445式   
                IF cl_null(l_glav003) OR l_glav003 = '1' OR l_glav003 = '3' THEN
                   IF (g_master.glap004 < 1) OR (g_master.glap004 > 12) THEN
                      INITIALIZE g_errparam TO NULL
                      LET g_errparam.code = 'agl-00127'
                      LET g_errparam.extend = g_master.glap004
                      LET g_errparam.popup = FALSE
                      CALL cl_err()

                      LET g_master.glap004 = ''
                      NEXT FIELD glap004
                   END IF
                ELSE
                   IF g_master.glap004 <1 OR g_master.glap004 >13 THEN
                      INITIALIZE g_errparam TO NULL
                      LET g_errparam.code = 'agl-00143'
                      LET g_errparam.extend = g_master.glap004
                      LET g_errparam.popup = FALSE
                      CALL cl_err()

                      LET g_master.glap004 = ''
                      NEXT FIELD glap004
                   END IF
                END IF
            END IF 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glap004
            #add-point:ON CHANGE glap004 name="input.g.glap004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glapdocno
            #add-point:BEFORE FIELD glapdocno name="input.b.glapdocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glapdocno
            
            #add-point:AFTER FIELD glapdocno name="input.a.glapdocno"
            IF NOT cl_null(g_master.glapdocno) AND g_master.glapdocno<>'ALL' THEN
               CALL aglp520_glapdocno_chk(g_master.glapdocno)
               IF NOT cl_null(g_errno) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_master.glapdocno
                  #160318-00005#16  --add--str
                   LET g_errparam.replace[1] ='aooi200'
                   LET g_errparam.replace[2] = cl_get_progname('aooi200',g_lang,"2")
                   LET g_errparam.exeprog    ='aooi200'
                  #160318-00005#16  --add--end
                  LET g_errparam.popup = FALSE
                  CALL cl_err()

                  LET g_master.glapdocno = ''
                  NEXT FIELD glapdocno
               END IF
            END IF 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glapdocno
            #add-point:ON CHANGE glapdocno name="input.g.glapdocno"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glap009
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_master.glap009,"0","1","","","azz-00079",1) THEN
               NEXT FIELD glap009
            END IF 
 
 
 
            #add-point:AFTER FIELD glap009 name="input.a.glap009"
 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glap009
            #add-point:BEFORE FIELD glap009 name="input.b.glap009"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glap009
            #add-point:ON CHANGE glap009 name="input.g.glap009"
            
            #END add-point 
 
 
 
                     #Ctrlp:input.c.glapld
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glapld
            #add-point:ON ACTION controlp INFIELD glapld name="input.c.glapld"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_master.glapld       #給予default值
            #給予arg
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept
            CALL q_authorised_ld()
            LET g_master.glapld = g_qryparam.return1        #將開窗取得的值回傳到變數
            CALL aglp520_glapld_desc() 
            DISPLAY g_master.glapld_desc TO glapld_desc
            DISPLAY g_master.glapld TO glapld               #顯示到畫面上
            NEXT FIELD glapld 


            #END add-point
 
 
         #Ctrlp:input.c.glap002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glap002
            #add-point:ON ACTION controlp INFIELD glap002 name="input.c.glap002"
            
            #END add-point
 
 
         #Ctrlp:input.c.glap004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glap004
            #add-point:ON ACTION controlp INFIELD glap004 name="input.c.glap004"
            
            #END add-point
 
 
         #Ctrlp:input.c.glapdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glapdocno
            #add-point:ON ACTION controlp INFIELD glapdocno name="input.c.glapdocno"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_master.glapdocno             #給予default值
            #給予arg
            LET g_qryparam.where = "ooba001 = '",g_glaa024,"' AND oobx002 = 'AGL' AND oobx003 IN ('aglt310','aglt320','aglt330','aglt340','aglt350')"
            CALL q_ooba002()                                #呼叫開窗
            LET g_master.glapdocno = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_master.glapdocno TO glapdocno              #顯示到畫面上
            NEXT FIELD glapdocno                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.glap009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glap009
            #add-point:ON ACTION controlp INFIELD glap009 name="input.c.glap009"
            
            #END add-point
 
 
 
               
            AFTER INPUT
               #add-point:資料輸入後 name="input.m.after_input"
               
               #end add-point
               
            #add-point:其他管控(on row change, etc...) name="input.other"
            
            #end add-point
         END INPUT
 
 
 
         
         
      
         #add-point:ui_dialog段construct
         
         #end add-point
         #add-point:ui_dialog段input
         
         #end add-point
         #add-point:ui_dialog段自定義display array
         
         #end add-point
 
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
 
         BEFORE DIALOG
            LET l_dialog = ui.DIALOG.getCurrent()
            CALL aglp520_get_buffer(l_dialog)
            #add-point:ui_dialog段before dialog
            
            #end add-point
 
         ON ACTION batch_execute
            LET g_action_choice = "batch_execute"
            ACCEPT DIALOG
 
         #add-point:ui_dialog段before_qbeclear
         
         #end add-point
 
         ON ACTION qbeclear         
            CLEAR FORM
            INITIALIZE g_master.* TO NULL   #畫面變數清空
            INITIALIZE lc_param.* TO NULL   #傳遞參數變數清空
            #add-point:ui_dialog段qbeclear
            
            #end add-point
 
         ON ACTION history_fill
            CALL cl_schedule_history_fill()
 
         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT DIALOG
         
         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT DIALOG
 
         #add-point:ui_dialog段action
         
         #end add-point
 
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM   
         INITIALIZE g_master.* TO NULL
         LET g_wc  = ' 1=2'
         LET g_action_choice = ""
         CALL aglp520_init()
         CONTINUE WHILE
      END IF
 
      #檢查批次設定是否有錯(或未設定完成)
      IF NOT cl_schedule_exec_check() THEN
         CONTINUE WHILE
      END IF
      
      LET lc_param.wc = g_master.wc    #把畫面上的wc傳遞到參數變數
      #請在下方的add-point內進行把畫面的輸入資料(g_master)轉換到傳遞參數變數(lc_param)的動作
      #add-point:ui_dialog段exit dialog
      
      #end add-point
 
      LET ls_js = util.JSON.stringify(lc_param)  #r類使用g_master/p類使用lc_param
 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      ELSE
         IF g_chk_jobid THEN 
            LET g_jobid = g_schedule.gzpa001
         ELSE 
            LET g_jobid = cl_schedule_get_jobid(g_prog)
         END IF 
 
         #依照指定模式執行報表列印
         CASE 
            WHEN g_schedule.gzpa003 = "0"
                 CALL aglp520_process(ls_js)
 
            WHEN g_schedule.gzpa003 = "1"
                 LET ls_js = aglp520_transfer_argv(ls_js)
                 CALL cl_cmdrun(ls_js)
 
            WHEN g_schedule.gzpa003 = "2"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
 
            WHEN g_schedule.gzpa003 = "3"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
         END CASE  
 
         IF g_schedule.gzpa003 = "2" OR g_schedule.gzpa003 = "3" THEN 
            CALL cl_ask_confirm3("std-00014","") #設定完成
         END IF    
         LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
 
         #add-point:ui_dialog段after schedule
         
         #end add-point
 
         #欄位初始資訊 
         CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
         LET gi_hiden_asign = FALSE 
         LET gi_hiden_exec = FALSE 
         LET gi_hiden_spec = FALSE 
         LET gi_hiden_exec_end = FALSE 
         CALL cl_schedule_hidden()
      END IF
   END WHILE
 
END FUNCTION
 
{</section>}
 
{<section id="aglp520.transfer_argv" >}
#+ 轉換本地參數至cmdrun參數內,準備進入背景執行
PRIVATE FUNCTION aglp520_transfer_argv(ls_js)
 
   #add-point:transfer_agrv段define (客製用)
   
   #end add-point
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog       STRING,
             actionid   STRING,
             background LIKE type_t.chr1,
             param      DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter
   #add-point:transfer_agrv段define 
   
   #end add-point
 
   LET la_cmdrun.prog = g_prog
   LET la_cmdrun.background = "Y"
   LET la_cmdrun.param[1] = ls_js
 
   #add-point:transfer.argv段程式內容
   
   #end add-point
 
   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION
 
{</section>}
 
{<section id="aglp520.process" >}
#+ 資料處理   (r類使用g_master為主處理/p類使用l_param為主)
PRIVATE FUNCTION aglp520_process(ls_js)
 
   #add-point:process段define (客製用)
   
   #end add-point
   DEFINE ls_js         STRING
   DEFINE lc_param      type_parameter
   DEFINE li_stus       LIKE type_t.num5
   DEFINE li_count      LIKE type_t.num10  #progressbar計量
   DEFINE ls_sql        STRING             #主SQL
   DEFINE li_p01_status LIKE type_t.num5
   #add-point:process段define 
   DEFINE l_sql           STRING 
   DEFINE l_glapdocno     LIKE glap_t.glapdocno
   DEFINE l_flag          LIKE type_t.num5    #标记是否有资料0:无，1：有
   DEFINE l_pass          LIKE type_t.num5 
   #end add-point
 
  #INITIALIZE lc_param TO NULL           #p類不可以清空
   CALL util.JSON.parse(ls_js,lc_param)  #r類作業被t類呼叫時使用, p類主要解開參數處
   LET li_p01_status = 1
 
  #IF lc_param.wc IS NOT NULL THEN
  #   LET g_bgjob = "T"       #特殊情況,此為t類作業鬆耦合串入報表主程式使用
  #END IF
 
   #add-point:process段前處理
   #资料处理
   #1.資料篩選
   #　(1).找出所有符合條件選項的傳票
   #  (2).重排單別='ALL'時表示針對所有該月傳票進行重排總號的動作
   
   #2.更新傳票憑證單頭檔.總號
   #  SQL = 符合條件選項的傳票單頭檔資料(glap_t)
   #  Where 帳別/會計年度/期別/重排單別(IF 'ALL'表全部)/未作廢
   #  Order by 傳票日期+單號
   #  依序 UPDATE 每筆傳票單頭檔(glap_t).總號=起始總號(依序累加1)
   
   #开启事务
   CALL s_transaction_begin()
   #错误信息汇总初始化
   CALL cl_err_collect_init()
   LET g_success = 'Y'
   
   #给标记位赋值
   LET l_flag = 0
   #依据画面条件筛选资料
   LET l_sql = " SELECT glapdocno FROM glap_t ",
               "  WHERE glapent = ",g_enterprise,"",
               "    AND glapld = '",g_master.glapld,"'",
               "    AND glap002 = ",g_master.glap002," ",
               "    AND glap004 = ",g_master.glap004," ",
               "    AND glapstus <> 'X'" 
   #单别为ALL则不需过滤单别条件，否则的话过滤为当前单别下的资料            
   IF g_master.glapdocno <> 'ALL' THEN
      LET l_sql = l_sql," AND glapdocno LIKE '%",g_master.glapdocno,"%' "
   END IF 
   #排序
   LET l_sql = l_sql," ORDER BY glapdocdt,glapdocno "
   
   PREPARE aglp520_pre FROM l_sql
   
   DECLARE aglp520_cs CURSOR FOR aglp520_pre
   FOREACH aglp520_cs INTO l_glapdocno
      IF SQLCA.sqlcode THEN
#         CALL cl_errmsg('','foreach','',SQLCA.SQLCODE,1)
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = 'FOREACH aglp520_cs'
         LET g_errparam.code = SQLCA.SQLCODE
         LET g_errparam.popup = TRUE
         CALL cl_err()
         LET g_success = 'N'
         EXIT FOREACH
      END IF
       
	   #走到foreach内说明有资料
      LET l_flag = 1  
       
      UPDATE glap_t SET glap009 = g_master.glap009
                  WHERE glapent = g_enterprise
                    AND glapld = g_master.glapld
                    AND glapdocno = l_glapdocno
      IF SQLCA.SQLCODE THEN
#         CALL cl_errmsg('glap009','update','',SQLCA.SQLCODE,1)
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = 'UPDATE glap_t'
         LET g_errparam.code = SQLCA.SQLCODE
         LET g_errparam.popup = TRUE
         CALL cl_err()
         LET g_success = 'N'        
      END IF 
       
      LET g_master.glap009 = g_master.glap009 + 1
   END FOREACH
   #标记位为0则没走foreach，说明无资料
   IF l_flag = 0 THEN
#      CALL cl_errmsg('','FROEACH','','abm-00028',1)
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'FOREACH'
      LET g_errparam.code = 'abm-00028'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      LET g_success = 'N'   
   END IF
   
   IF g_success = 'Y' THEN
      CALL s_transaction_end('Y','0')
   ELSE
     CALL s_transaction_end('N','0')
     CALL cl_err_collect_show()      
   END IF 
   #end add-point
 
   #預先計算progressbar迴圈次數
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress
      
      #end add-point
   END IF
 
   #主SQL及相關FOREACH前置處理
#  DECLARE aglp520_process_cs CURSOR FROM ls_sql
#  FOREACH aglp520_process_cs INTO
   #add-point:process段process
   
   #end add-point
#  END FOREACH
 
   IF g_bgjob = "N" THEN
      #前景作業完成處理
      #add-point:process段foreground完成處理
      
      #end add-point
      CALL cl_ask_confirm3("std-00012","")
   ELSE
      #背景作業完成處理
      #add-point:process段background完成處理
      
      #end add-point
      CALL cl_schedule_exec_call(li_p01_status)
   END IF
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL aglp520_msgcentre_notify()
 
END FUNCTION
 
{</section>}
 
{<section id="aglp520.get_buffer" >}
PRIVATE FUNCTION aglp520_get_buffer(p_dialog)
 
   #add-point:process段define (客製用)
   
   #end add-point
   DEFINE p_dialog   ui.DIALOG
   #add-point:process段define
   
   #end add-point
 
   
   LET g_master.glapld = p_dialog.getFieldBuffer('glapld')
   LET g_master.glap002 = p_dialog.getFieldBuffer('glap002')
   LET g_master.glap004 = p_dialog.getFieldBuffer('glap004')
   LET g_master.glapdocno = p_dialog.getFieldBuffer('glapdocno')
   LET g_master.glap009 = p_dialog.getFieldBuffer('glap009')
 
   CALL cl_schedule_get_buffer(p_dialog)
 
   #add-point:get_buffer段其他欄位處理
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="aglp520.msgcentre_notify" >}
PRIVATE FUNCTION aglp520_msgcentre_notify()
 
   #add-point:process段define (客製用)
   
   #end add-point
   DEFINE lc_state LIKE type_t.chr5
   #add-point:process段define
   
   #end add-point
 
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = "process"
 
   #add-point:msgcentre其他通知
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
{</section>}
 
{<section id="aglp520.other_function" readonly="Y" >}
#add-point:自定義元件(Function)

################################################################################
# Descriptions...: 獲取帳別說明
# Memo...........:
# Usage..........: CALL aglp520_glapld_desc()
# Input parameter: 
# Return code....:  
# Date & Author..: 2014/07/02 By 01531
# Modify.........:
################################################################################
PRIVATE FUNCTION aglp520_glapld_desc()
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_master.glapld
            CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_master.glapld_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_master.glapld_desc
END FUNCTION

################################################################################
# Descriptions...: 檢查帳別
# Memo...........:
# Usage..........: CALL aglp520_glapld_chk(p_glapld)
# Input parameter:  
# Return code....:  
# Date & Author..: 2014/07/02 By 01531
# Modify.........:
################################################################################
PRIVATE FUNCTION aglp520_glapld_chk(p_glapld)
   DEFINE p_glapld    LIKE glap_t.glapld
   DEFINE l_glaastus  LIKE glaa_t.glaastus
   
   LET g_errno = ''
   SELECT glaastus INTO l_glaastus FROM glaa_t
    WHERE glaaent = g_enterprise
      AND glaald = p_glapld
   CASE
      WHEN SQLCA.SQLCODE = 100   LET g_errno = 'agl-00016'
      WHEN l_glaastus = 'N'      LET g_errno = 'sub-01302' #'agl-00051' #160318-00005#16 mod
   END CASE
END FUNCTION

################################################################################
# Descriptions...: 單據檢查
# Memo...........:
# Usage..........: CALL aglp520_glapdocno_chk(p_glapdocno)
# Input parameter:  
# Return code....:  
# Date & Author..: 2014/07/02 By 01531
# Modify.........:
################################################################################
PRIVATE FUNCTION aglp520_glapdocno_chk(p_glapdocno)
   DEFINE p_glapdocno      LIKE glap_t.glapdocno
   DEFINE l_oobastus       LIKE ooba_t.oobastus
   
   LET g_errno = ''
   SELECT oobastus INTO l_oobastus 
     FROM ooba_t LEFT OUTER JOIN oobx_t ON (oobaent=oobxent AND ooba002=oobx001)
    WHERE oobaent = g_enterprise
      AND ooba001 = g_glaa024      #单据别参照表号
      AND ooba002 = p_glapdocno    #单据别
      AND oobx002 = 'AGL'
      AND oobx003 IN ('aglt310','aglt320','aglt330','aglt340','aglt350')      #单据性质
   CASE
      WHEN SQLCA.SQLCODE =100  LET g_errno = 'aim-00056'
      WHEN l_oobastus = 'N'    LET g_errno = 'sub-01302' #'aim-00057'  #160318-00005#16 mod 
   END CASE
END FUNCTION

#end add-point
 
{</section>}
 
