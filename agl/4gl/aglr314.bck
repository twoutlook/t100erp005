#該程式未解開Section, 採用最新樣板產出!
{<section id="aglr314.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0002(2015-09-15 14:16:03), PR版次:0002(2016-04-07 10:56:38)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000033
#+ Filename...: aglr314
#+ Description: 傳票清單列印
#+ Creator....: 03080(2015-09-15 13:57:46)
#+ Modifier...: 03080 -SD/PR- 07959
 
{</section>}
 
{<section id="aglr314.global" >}
#應用 r01 樣板自動產生(Version:20)
#add-point:填寫註解說明
#160318-00005#17  2016/03/29 by 07675   將重複內容的錯誤訊息置換為公用錯誤訊息
#160318-00025#29  2016/04/07 by 07959   將重複內容的錯誤訊息置換為公用錯誤訊息
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_schedule
#add-point:增加匯入項目

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
   DEFINE gi_hiden_rep_temp    LIKE type_t.num5             
   DEFINE g_chk_jobid          LIKE type_t.num5               
END GLOBALS
 
PRIVATE TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
        v                LIKE type_t.chr1,
   #end add-point
        wc               STRING
                     END RECORD
 
DEFINE g_sql             STRING        #組 sql 用
DEFINE g_forupd_sql      STRING        #SELECT ... FOR UPDATE  SQL
DEFINE g_error_show      LIKE type_t.num5
DEFINE g_jobid           STRING
DEFINE g_wc              STRING
 
PRIVATE TYPE type_master RECORD
       glapld LIKE glap_t.glapld, 
   glaacomp LIKE glaa_t.glaacomp, 
   glapld_desc LIKE type_t.chr80, 
   glaacomp_desc LIKE type_t.chr80, 
   glapcrtid LIKE glap_t.glapcrtid, 
   glapcrtid_e LIKE type_t.chr500, 
   stus LIKE type_t.chr500, 
   print LIKE type_t.chr500, 
   glapdocno LIKE glap_t.glapdocno, 
   glapdocdt LIKE glap_t.glapdocdt, 
   glapcrtdt LIKE glap_t.glapcrtdt, 
   glap007 LIKE glap_t.glap007,
       wc               STRING
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_master type_master
 
#add-point:自定義模組變數(Module Variable)
DEFINE g_param type_parameter
DEFINE g_glapcrtid      LIKE glap_t.glapcrtid
DEFINE g_glapstus       LIKE glap_t.glapstus
DEFINE g_glap012        LIKE glap_t.glap012
DEFINE g_glapld         LIKE glap_t.glapld
DEFINE g_glaacomp       LIKE glaa_t.glaacomp
DEFINE g_p_glapld       LIKE glap_t.glapld   

DEFINE g_ref_fields     DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars       DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields     DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_glaald         LIKE glaa_t.glaald  
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)

#end add-point
 
#add-point:傳入參數說明

#end add-point
 
{</section>}
 
{<section id="aglr314.main" >}
MAIN
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter  
   #add-point:main段define 
   
   #end add-point 
   #add-point:main段define (客製用)
   
   #end add-point 
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:初始化前定義
   
   #end add-point
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("agl","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
 
   #end add-point   
 
   #背景(Y) 或半背景(T) 時不做主畫面開窗
   IF g_bgjob = "Y" OR g_bgjob = "T" THEN
      #排程參數由01開始，若不是1開始，表示有保留參數
      LET ls_js = g_argv[01]
      CALL util.JSON.parse(ls_js,g_master)      #r類背景參數解析入口
      #add-point:Service Call
 
      #end add-point
      CALL aglr314_process(ls_js)
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aglr314 WITH FORM cl_ap_formpath("agl",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL aglr314_init()
 
      #進入選單 Menu (="N")
      CALL aglr314_ui_dialog()
 
      #add-point:畫面關閉前
      
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_aglr314
   END IF
 
   #add-point:作業離開前
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
{</section>}
 
{<section id="aglr314.init" >}
#+ 初始化作業
PRIVATE FUNCTION aglr314_init()
   #add-point:init段define 
   DEFINE l_success      LIKE type_t.num5
   #end add-point
   #add-point:init段define (客製用)
   
   #end add-point
   
   LET g_error_show = 1
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #add-point:畫面資料初始化
   LET g_param.v ="N"
   CALL cl_set_combo_scc('glap007','8007')
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="aglr314.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION aglr314_ui_dialog()
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx   LIKE type_t.num10
   DEFINE ls_js    STRING
   DEFINE ls_wc    STRING
   DEFINE l_dialog ui.DIALOG
   DEFINE lc_param type_parameter
   #add-point:ui_dialog段define 
   DEFINE l_string    STRING
   DEFINE tok            base.stringtokenizer
   DEFINE g_wc_glapld STRING
   DEFINE l_num1      LIKE type_t.num5
   DEFINE l_num2      LIKE type_t.num5  
   DEFINE l_str       STRING
   DEFINE l_pass      LIKE type_t.num5
   #end add-point
   #add-point:ui_dialog段define (客製用)
   
   #end add-point
   
   #add-point:ui_dialog段before dialog
   CALL aglr314_qbeclear()
   #end add-point
 
   WHILE TRUE
      #add-point:ui_dialog段before dialog2
      
      #end add-point
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #應用 a57 樣板自動產生(Version:3)
         INPUT BY NAME g_master.glapld,g_master.glaacomp,g_master.glapcrtid,g_master.glapcrtid_e,g_master.stus, 
             g_master.print 
            ATTRIBUTE(WITHOUT DEFAULTS)
            
            #自訂ACTION(master_input)
            
         
            BEFORE INPUT
               #add-point:資料輸入前 name="input.m.before_input"
 
               #end add-point
         
                     #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glapld
            
            #add-point:AFTER FIELD glapld name="input.a.glapld"
            IF NOT cl_null(g_master.glapld) THEN
               CALL aglr314_glapld_chk()
               IF NOT cl_null(g_errno) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_master.glapld
                  #160318-00005#17  --add--str
                   LET g_errparam.replace[1] ='agli010'
                   LET g_errparam.replace[2] = cl_get_progname('agli010',g_lang,"2")
                   LET g_errparam.exeprog    ='agli010'
                   #160318-00005#17 --add--end
                  LET g_errparam.popup = FALSE
                  CALL cl_err()
            
                  LET g_master.glapld = ''
                  LET g_master.glapld_desc = ''
                  LET g_master.glaacomp = ''
                  LET g_master.glaacomp_desc = ''
                  DISPLAY BY NAME g_master.glapld,g_master.glapld_desc,g_master.glaacomp,g_master.glaacomp_desc
                  NEXT FIELD glapld
               END IF
               #检查使用者是否有权限使用当前账别
               CALL s_ld_chk_authorization(g_user,g_master.glapld) RETURNING l_pass
               IF l_pass = FALSE THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'axr-00022'
                  LET g_errparam.extend = g_master.glapld
                  LET g_errparam.popup = FALSE
                  CALL cl_err()
            
                  LET g_master.glapld = ''
                  LET g_master.glapld_desc = ''
                  LET g_master.glaacomp = ''
                  LET g_master.glaacomp_desc = ''
                  DISPLAY BY NAME g_master.glapld,g_master.glapld_desc,g_master.glaacomp,g_master.glaacomp_desc
                  NEXT FIELD glapld
               END IF
               CALL aglr314_glapld_desc()              
            END IF 
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glapld
            #add-point:BEFORE FIELD glapld name="input.b.glapld"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glapld
            #add-point:ON CHANGE glapld name="input.g.glapld"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glaacomp
            
            #add-point:AFTER FIELD glaacomp name="input.a.glaacomp"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_master.glaacomp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_master.glaacomp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_master.glaacomp_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glaacomp
            #add-point:BEFORE FIELD glaacomp name="input.b.glaacomp"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glaacomp
            #add-point:ON CHANGE glaacomp name="input.g.glaacomp"

         AFTER FIELD glapcrtid
            IF NOT cl_null(g_master.glapcrtid) THEN
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = TRUE #是否開窗 #160318-00025#29  add
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1=g_master.glapcrtid
               LET g_chkparam.err_str[1] = "aim-00070:sub-01302|aooi130|",cl_get_progname("aooi130",g_lang,"2"),"|:EXEPROGaooi130"#要執行的建議程式待補 #160318-00025#29  add
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooag001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_master.glapcrtid=''
                  NEXT FIELD CURRENT
               END IF
            END IF
            
         AFTER FIELD glapcrtid_e
            IF NOT cl_null(g_master.glapcrtid_e) THEN
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = TRUE #是否開窗 #160318-00025#29  add
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1=g_master.glapcrtid_e
               LET g_chkparam.err_str[1] = "aim-00070:sub-01302|aooi130|",cl_get_progname("aooi130",g_lang,"2"),"|:EXEPROGaooi130"#要執行的建議程式待補 #160318-00025#29  add
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooag001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_master.glapcrtid_e=''
                  NEXT FIELD CURRENT
               END IF
            END IF
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stus
            #add-point:BEFORE FIELD stus name="input.b.stus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stus
            
            #add-point:AFTER FIELD stus name="input.a.stus"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stus
            #add-point:ON CHANGE stus name="input.g.stus"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD print
            #add-point:BEFORE FIELD print name="input.b.print"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD print
            
            #add-point:AFTER FIELD print name="input.a.print"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE print
            #add-point:ON CHANGE print name="input.g.print"
            
            #END add-point 
 
 
 
                     #Ctrlp:input.c.glapld
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glapld
            #add-point:ON ACTION controlp INFIELD glapld name="input.c.glapld"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_master.glapld             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_user                                 #人員權限
            LET g_qryparam.arg2 = g_dept                                 #部門權限
            
            CALL q_authorised_ld()                                #呼叫開窗

            LET g_master.glapld = g_qryparam.return1              

            DISPLAY g_master.glapld TO glapld              #

            NEXT FIELD glapld                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.glaacomp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glaacomp
            #add-point:ON ACTION controlp INFIELD glaacomp name="input.c.glaacomp"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_master.glaacomp             #給予default值
            LET g_qryparam.default2 = "" #g_master.ooefl003 #說明(簡稱)
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooef001()                                #呼叫開窗

            LET g_master.glaacomp = g_qryparam.return1              
            #LET g_master.ooefl003 = g_qryparam.return2 
            DISPLAY g_master.glaacomp TO glaacomp              #
            #DISPLAY g_master.ooefl003 TO ooefl003 #說明(簡稱)
            NEXT FIELD glaacomp                          #返回原欄位

         ON ACTION controlp INFIELD glapcrtid
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_master.glapcrtid            #給予default值
            #給予arg
            LET g_qryparam.arg1 = "" #
            CALL q_ooag001()                                #呼叫開窗
            LET g_master.glapcrtid = g_qryparam.return1              
            DISPLAY g_master.glapcrtid TO glapcrtid              #   
            NEXT FIELD glapcrtid

         ON ACTION controlp INFIELD glapcrtid_e
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_master.glapcrtid_e             #給予default值
            #給予arg
            LET g_qryparam.arg1 = "" #
            CALL q_ooag001()                                #呼叫開窗
            LET g_master.glapcrtid_e = g_qryparam.return1              
            DISPLAY g_master.glapcrtid_e TO glapcrtid_e              #   
            NEXT FIELD glapcrtid_e
            #END add-point
 
 
         #Ctrlp:input.c.stus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stus
            #add-point:ON ACTION controlp INFIELD stus name="input.c.stus"
            
            #END add-point
 
 
         #Ctrlp:input.c.print
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD print
            #add-point:ON ACTION controlp INFIELD print name="input.c.print"
            
            #END add-point
 
 
 
               
            AFTER INPUT
               #add-point:資料輸入後 name="input.m.after_input"
               
               #end add-point
               
            #add-point:其他管控(on row change, etc...) name="input.other"
            
            #end add-point
         END INPUT
 
 
 
         
         #應用 a58 樣板自動產生(Version:3)
         CONSTRUCT BY NAME g_master.wc ON glapdocno,glapdocdt,glapcrtdt,glap007
            BEFORE CONSTRUCT
               #add-point:cs段before_construct name="cs.head.before_construct"
  
               #end add-point 
         
            #公用欄位開窗相關處理
            
               
            #一般欄位開窗相關處理    
                     #Ctrlp:construct.c.glapdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glapdocno
            #add-point:ON ACTION controlp INFIELD glapdocno name="construct.c.glapdocno"
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            
            LET g_qryparam.where = "1=1"            
            IF NOT cl_null(g_master.glapld) THEN
               LET g_qryparam.where =g_qryparam.where , " AND glapld ='",g_master.glapld,"'"
            END IF
            IF NOT cl_null(g_master.glapcrtid) THEN
               IF NOT cl_null(g_master.glapcrtid_e) THEN
                  LET g_qryparam.where = g_qryparam.where , " AND glapcrtid BETWEEN '",g_master.glapcrtid,"' AND '",g_master.glapcrtid_e,"'"
               ELSE 
                  LET g_qryparam.where = g_qryparam.where , " AND glapcrtid ='",g_master.glapcrtid,"'"
               END IF
            ELSE 
               IF NOT cl_null(g_master.glapcrtid_e) THEN
                  LET g_qryparam.where = g_qryparam.where , " AND glapcrtid ='",g_master.glapcrtid_e,"'"
               END IF
           END IF
           CASE g_master.stus
              WHEN '1' #未審核
                 LET g_qryparam.where = g_qryparam.where , " AND glapstus = 'N'"
              WHEN '2' #已確認未過帳
                 LET g_qryparam.where = g_qryparam.where , " AND glapstus = 'Y'"
              WHEN '3' #已過帳
                 LET g_qryparam.where = g_qryparam.where , " AND glapstus = 'S'"
           END CASE  
           CASE g_master.print
              WHEN '1' #未列印
                 LET g_qryparam.where = g_qryparam.where , " AND (glap012 = 0 OR glap012 IS NULL)"    
              WHEN '2' #列印
                 LET g_qryparam.where = g_qryparam.where , " AND glap012 > 0 "
           END CASE
           
            CALL q_glapdocno()                           #呼叫開窗
            LET g_qryparam.where =""  
                     
            DISPLAY g_qryparam.return1 TO glapdocno  #顯示到畫面上
            LET g_qryparam.where =""              
            NEXT FIELD glapdocno                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glapdocno
            #add-point:BEFORE FIELD glapdocno name="construct.b.glapdocno"
   
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glapdocno
            
            #add-point:AFTER FIELD glapdocno name="construct.a.glapdocno"
 #     LET g_no = g_master.glapdocno
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glapdocdt
            #add-point:BEFORE FIELD glapdocdt name="construct.b.glapdocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glapdocdt
            
            #add-point:AFTER FIELD glapdocdt name="construct.a.glapdocdt"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.glapdocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glapdocdt
            #add-point:ON ACTION controlp INFIELD glapdocdt name="construct.c.glapdocdt"
 
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glapcrtdt
            #add-point:BEFORE FIELD glapcrtdt name="construct.b.glapcrtdt"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glap007
            #add-point:BEFORE FIELD glap007 name="construct.b.glap007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glap007
            
            #add-point:AFTER FIELD glap007 name="construct.a.glap007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.glap007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glap007
            #add-point:ON ACTION controlp INFIELD glap007 name="construct.c.glap007"
            
            #END add-point
 
 
 
            
            #add-point:其他管控 name="cs.other"
 
            #end add-point
            
         END CONSTRUCT
 
 
 
      
         #add-point:ui_dialog段construct
 
         #end add-point
         #add-point:ui_dialog段input
         INPUT BY NAME g_param.v ATTRIBUTE(WITHOUT DEFAULTS)
 
            BEFORE INPUT
               LET g_param.v ="N" 
                      
       
            AFTER FIELD v
               IF cl_null(g_param.v) OR g_param.v NOT MATCHES "[YN]" THEN
                  NEXT FIELD CURRENT
               END IF
         END INPUT
         #end add-point
         #add-point:ui_dialog段自定義display array
         
         #end add-point
 
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
 
         BEFORE DIALOG
            LET l_dialog = ui.DIALOG.getCurrent()
            CALL cl_qbe_display_condition(FGL_GETENV("QUERYPLANID"), g_user)
            CALL aglr314_get_buffer(l_dialog)
 
         ON ACTION qbe_select
            LET ls_wc = ""
            #需要用ITM類程式查詢方案在CONSTRUCT的功能，將值set到畫面上
            CALL cl_qbe_list("c") RETURNING ls_wc
            CALL aglr314_get_buffer(l_dialog)
            IF NOT cl_null(ls_wc) THEN
               LET g_master.wc = ls_wc
               #取得條件後需要執行項目,應新增於下方adp
               #add-point:ui_dialog段qbe_select後
         
               #end add-point
            END IF
 
         ON ACTION qbe_save
            CALL cl_qbe_save()
 
         ON ACTION output
            LET g_action_choice = "output"
            ACCEPT DIALOG
 
         ON ACTION quickprint
            LET g_action_choice = "quickprint"
            ACCEPT DIALOG
 
         ON ACTION qbeclear         
            CLEAR FORM
            INITIALIZE g_master.* TO NULL   #畫面變數清空
            INITIALIZE lc_param.* TO NULL   #傳遞參數變數清空
            #add-point:ui_dialog段qbeclear
            CALL aglr314_qbeclear()
            #end add-point
 
         ON ACTION history_fill
            CALL cl_schedule_history_fill()
 
         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT DIALOG
         
         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT DIALOG
 
         ON ACTION rpt_replang
            CALL cl_gr_set_dlang()
 
         #add-point:ui_dialog段action
 
         #end add-point
 
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM   
         INITIALIZE g_master.* TO NULL
         LET g_wc  = ' 1=2'
         LET g_action_choice = ""
         CALL aglr314_init()
         CONTINUE WHILE
      END IF
 
      #檢查批次設定是否有錯(或未設定完成)
      IF NOT cl_schedule_exec_check() THEN
         CONTINUE WHILE
      END IF
 
     #LET lc_param.wc = g_master.wc    #r類主程式不在意lc_param,不使用轉換
      #add-point:ui_dialog段exit dialog 
      
      #end add-point
 
      LET ls_js = util.JSON.stringify(g_master)  #r類使用g_master/p類使用lc_param
 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      ELSE
         IF g_chk_jobid THEN 
            LET g_jobid = g_schedule.gzpa001
         ELSE 
            LET g_jobid = cl_schedule_get_jobid(g_prog)
         END IF 
 
         #依照指定模式執行報表列印
         CASE 
            WHEN g_schedule.gzpa003 = "0"
                 CALL aglr314_process(ls_js)
 
            WHEN g_schedule.gzpa003 = "1"
                 LET ls_js = aglr314_transfer_argv(ls_js)
                 CALL cl_cmdrun(ls_js)
 
            WHEN g_schedule.gzpa003 = "2"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
 
            WHEN g_schedule.gzpa003 = "3"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
         END CASE  
 
         IF g_schedule.gzpa003 = "2" OR g_schedule.gzpa003 = "3" THEN 
            CALL cl_ask_confirm3("std-00014","") #設定完成
         END IF           
         LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
 
         #add-point:ui_dialog段after schedule
         
         #end add-point
 
         #欄位初始資訊 
         CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
         LET gi_hiden_asign = FALSE 
         LET gi_hiden_exec = FALSE 
         LET gi_hiden_spec = FALSE 
         LET gi_hiden_exec_end = FALSE 
         LET gi_hiden_rep_temp = FALSE   #報表樣板設定
         CALL cl_schedule_hidden()
      END IF
   END WHILE
 
END FUNCTION
 
{</section>}
 
{<section id="aglr314.transfer_argv" >}
#+ 轉換本地參數至cmdrun參數內,準備進入背景執行
PRIVATE FUNCTION aglr314_transfer_argv(ls_js)
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog       STRING,
             actionid   STRING,
             background LIKE type_t.chr1,
             param      DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter
   #add-point:transfer_agrv段define 
   
   #end add-point
   #add-point:transfer_agrv段define (客製用)
   
   #end add-point
 
   LET la_cmdrun.prog = g_prog
   LET la_cmdrun.background = "Y"
   LET la_cmdrun.param[1] = ls_js
 
   #add-point:transfer.argv段程式內容
   
   #end add-point
 
   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION
 
{</section>}
 
{<section id="aglr314.process" >}
#+ 資料處理   (r類使用g_master為主處理/p類使用l_param為主)
PRIVATE FUNCTION aglr314_process(ls_js)
   DEFINE ls_js         STRING
   DEFINE lc_param      type_parameter
   DEFINE li_stus       LIKE type_t.num5
   DEFINE li_count      LIKE type_t.num10  #progressbar計量
   DEFINE ls_sql        STRING             #主SQL
   DEFINE li_r01_status LIKE type_t.num5
   DEFINE l_token       base.StringTokenizer      #cmdrun使用
   DEFINE ls_next       STRING                    #cmdrun使用
   DEFINE l_cnt         LIKE type_t.num5          #cmdrun使用   
   DEFINE l_arg         DYNAMIC ARRAY OF STRING   ##cmdrun使用的陣列 
   #add-point:process段define 
   
   #end add-point
   #add-point:process段define (客製用)
   
   #end add-point
 
   INITIALIZE lc_param TO NULL
   CALL util.JSON.parse(ls_js,lc_param)  #r類作業被t類呼叫時使用, p類主要解開參數處
   LET li_r01_status = 1
 
  #IF lc_param.wc IS NOT NULL THEN
  #   LET g_bgjob = "T"       #特殊情況,此為t類作業鬆耦合串入報表主程式使用
  #END IF
 
   LET g_rep_wcchp = cl_wcchp(g_master.wc,"glapdocno,glapdocdt,glapcrtdt,glap007")  #取得列印條件
  
   #add-point:process段前處理
   IF cl_null(g_master.wc) THEN ## 若是t類進來 會是傳字串參數的方式
      CALL l_arg.clear()
      LET l_token = base.StringTokenizer.create(ls_js,",")
      LET l_cnt = 1
      WHILE l_token.hasMoreTokens()
         LET ls_next = l_token.nextToken()
         LET l_arg[l_cnt] = ls_next
         LET l_cnt = l_cnt + 1
      END WHILE
      CALL l_arg.deleteElement(l_cnt)
      LET  g_master.wc = l_arg[01]
      LET  g_param.wc = g_master.wc      
   ELSE  
      IF cl_null(ls_sql) THEN
         LET ls_sql=' 1=1'
      END IF
      
      #條件選項
      #账套
      IF NOT cl_null(g_master.glapld) THEN
         LET ls_sql=ls_sql," AND glapld='",g_master.glapld,"' "
      END IF
      #制表人员
      IF NOT cl_null(g_master.glapcrtid) THEN
         IF NOT cl_null(g_master.glapcrtid_e) THEN
            LET ls_sql = ls_sql, " AND glapcrtid BETWEEN '",g_master.glapcrtid,"' AND '",g_master.glapcrtid_e,"'"
         ELSE 
            LET ls_sql = ls_sql, " AND glapcrtid ='",g_master.glapcrtid,"'"
         END IF
      ELSE 
         IF NOT cl_null(g_master.glapcrtid_e) THEN
            LET ls_sql = ls_sql, " AND glapcrtid ='",g_master.glapcrtid_e,"'"
         END IF
      END IF
      #凭证状态
      CASE g_master.stus
         WHEN '1' #未審核
            LET ls_sql = ls_sql, " AND glapstus = 'N'"
         WHEN '2' #已確認未過帳
            LET ls_sql = ls_sql, " AND glapstus = 'Y'"
         WHEN '3' #已過帳
            LET ls_sql = ls_sql, " AND glapstus = 'S'"
      END CASE  
      #列印状态
      CASE g_master.print
         WHEN '1' #未列印
            LET ls_sql = ls_sql, " AND (glap012 = 0 OR glap012 IS NULL)"    
         WHEN '2' #列印
            LET ls_sql = ls_sql, " AND glap012 > 0 "
      END CASE
      #打印條件
      LET g_param.wc=ls_sql," AND ",g_master.wc," AND glapent = ",g_enterprise
   END IF
#   #报表模板
#   CASE g_master.style 
#      WHEN '1'
#         CALL aglr314_g03(g_param.wc) 
#      WHEN '2'
#         CALL aglr314_g02(g_param.wc) 
#      WHEN '3'
#         CALL aglr314_g01(g_param.wc)    #用g_master才能实现查询
#   END CASE
   CALL aglr314_x01(g_param.wc)
   #end add-point
 
   #預先計算progressbar迴圈次數   #r類不用計算進度條
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress
      
      #end add-point
   END IF
 
   #主SQL及相關FOREACH前置處理
#  DECLARE aglr314_process_cs CURSOR FROM ls_sql
#  FOREACH aglr314_process_cs INTO
   #add-point:process段process
   
   #end add-point
#  END FOREACH
 
   IF g_bgjob = "N" OR g_bgjob = "T" THEN
      #前景作業完成處理
      #add-point:process段foreground完成處理
      
      #end add-point
   ELSE
      #背景作業完成處理
      #add-point:process段background完成處理
      
      #end add-point
      CALL cl_schedule_exec_call(li_r01_status)
   END IF
END FUNCTION
 
{</section>}
 
{<section id="aglr314.get_buffer" >}
PRIVATE FUNCTION aglr314_get_buffer(p_dialog)
   DEFINE p_dialog   ui.DIALOG
   
   LET g_master.glapld = p_dialog.getFieldBuffer('glapld')
   LET g_master.glaacomp = p_dialog.getFieldBuffer('glaacomp')
   LET g_master.glapcrtid = p_dialog.getFieldBuffer('glapcrtid')
   LET g_master.glapcrtid_e = p_dialog.getFieldBuffer('glapcrtid_e')
   LET g_master.stus = p_dialog.getFieldBuffer('stus')
   LET g_master.print = p_dialog.getFieldBuffer('print')
 
   CALL cl_schedule_get_buffer(p_dialog)
 
   #add-point:get_buffer段其他欄位處理
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="aglr314.other_function" readonly="Y" >}
#add-point:自定義元件(Function)

################################################################################
# Descriptions...: 抓取帳套說明和法人及法人說明
# Memo...........:
# Usage..........: CALL aglr314_glapld_desc()
# Date & Author..: 2014/09/09 By wangrr
# Modify.........:
################################################################################
PRIVATE FUNCTION aglr314_glapld_desc()
   SELECT glaacomp INTO g_master.glaacomp FROM glaa_t 
   WHERE glaaent=g_enterprise AND glaald= g_master.glapld
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_master.glapld
   CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_master.glapld_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_master.glapld,g_master.glapld_desc
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_master.glaacomp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_master.glaacomp_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_master.glaacomp,g_master.glaacomp_desc
END FUNCTION

################################################################################
# Descriptions...: 帳套檢查
# Memo...........:
# Usage..........: CALL aglr314_glapld_chk()
# Date & Author..: 2014/09/09 By wangrr
# Modify.........:
################################################################################
PRIVATE FUNCTION aglr314_glapld_chk()
   DEFINE l_glaastus  LIKE glaa_t.glaastus
   
   LET g_errno = ''
   SELECT glaastus INTO l_glaastus FROM glaa_t
    WHERE glaaent = g_enterprise
      AND glaald = g_master.glapld
   CASE
      WHEN SQLCA.SQLCODE = 100   LET g_errno = 'agl-00016'
      WHEN l_glaastus = 'N'      LET g_errno = 'sub-01302'  #160318-00005#17 mod 'agl-00051'
   END CASE
END FUNCTION

PRIVATE FUNCTION aglr314_qbeclear()
   CALL s_ld_bookno() RETURNING g_sub_success,g_glaald
   IF g_sub_success = FALSE THEN
      LET g_glaald=NULL
   END IF
   CALL s_ld_chk_authorization(g_user,g_glaald) RETURNING g_sub_success
   IF g_sub_success = FALSE THEN
      LET g_glaald=NULL
   END IF

   LET g_master.print = '1'
   LET g_master.stus = '1'
   LET g_master.glapld=g_glaald
   CALL aglr314_glapld_desc()
   DISPLAY BY NAME g_master.print,g_master.stus,g_master.glapld
END FUNCTION

#end add-point
 
{</section>}
 
