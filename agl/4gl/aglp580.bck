#該程式未解開Section, 採用最新樣板產出!
{<section id="aglp580.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0003(2014-12-24 10:26:46), PR版次:0003(2016-03-29 15:13:22)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000160
#+ Filename...: aglp580
#+ Description: 關帳作業
#+ Creator....: 02599(2014-07-04 09:48:35)
#+ Modifier...: 02599 -SD/PR- 07675
 
{</section>}
 
{<section id="aglp580.global" >}
#應用 p01 樣板自動產生(Version:18)
#add-point:填寫註解說明
#160318-00005#17  2016/03/29 by 07675   將重複內容的錯誤訊息置換為公用錯誤訊息
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_schedule
#add-point:增加匯入項目

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
   DEFINE g_chk_jobid          LIKE type_t.num5
END GLOBALS
 
PRIVATE TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
   
   #end add-point
        wc               STRING
                     END RECORD
 
DEFINE g_sql             STRING        #組 sql 用
DEFINE g_forupd_sql      STRING        #SELECT ... FOR UPDATE  SQL
DEFINE g_error_show      LIKE type_t.num5
DEFINE g_jobid           STRING
DEFINE g_wc              STRING
 
PRIVATE TYPE type_master RECORD
       glaald LIKE glaa_t.glaald, 
   glaald_desc LIKE type_t.chr80, 
   glaa010 LIKE glaa_t.glaa010, 
   glaa011 LIKE glaa_t.glaa011, 
   glaa013 LIKE glaa_t.glaa013, 
   stagenow LIKE type_t.chr80,
       wc               STRING
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_master type_master
 
#add-point:自定義模組變數(Module Variable)
DEFINE g_ref_fields             DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列 
DEFINE g_rtn_fields             DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_success     LIKE type_t.chr1
DEFINE g_glaald      LIKE glaa_t.glaald
DEFINE g_glaa010     LIKE glaa_t.glaa010       #年度
DEFINE g_glaa011     LIKE glaa_t.glaa011       #期别
DEFINE g_glaa013	 LIKE glaa_t.glaa013       #关账日期
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)

#end add-point
 
#add-point:傳入參數說明

#end add-point
 
{</section>}
 
{<section id="aglp580.main" >}
MAIN
   #add-point:main段define (客製用)
   
   #end add-point 
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter  
   #add-point:main段define 
   
   #end add-point 
  
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:初始化前定義
   
   #end add-point
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("agl","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   
   #end add-point
 
   #背景(Y) 或半背景(T) 時不做主畫面開窗
   IF g_bgjob = "Y" OR g_bgjob = "T" THEN
      #排程參數由01開始，若不是1開始，表示有保留參數
      LET ls_js = g_argv[01]
     #CALL util.JSON.parse(ls_js,g_master)   #p類主要使用l_param,此處不解析
      #add-point:Service Call
      
      #end add-point
      CALL aglp580_process(ls_js)
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aglp580 WITH FORM cl_ap_formpath("agl",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL aglp580_init()
 
      #進入選單 Menu (="N")
      CALL aglp580_ui_dialog()
 
      #add-point:畫面關閉前
      
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_aglp580
   END IF
 
   #add-point:作業離開前
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
{</section>}
 
{<section id="aglp580.init" >}
#+ 初始化作業
PRIVATE FUNCTION aglp580_init()
 
   #add-point:init段define (客製用)
   
   #end add-point
   #add-point:ui_dialog段define 
   DEFINE l_success     LIKE type_t.num5
   #end add-point
 
   LET g_error_show = 1
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #add-point:畫面資料初始化
   #抓取预设帐别
   CALL s_ld_bookno() RETURNING l_success,g_glaald
   IF l_success = FALSE THEN
      RETURN
   END IF
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="aglp580.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION aglp580_ui_dialog()
 
   #add-point:ui_dialog段define (客製用)
   
   #end add-point
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx   LIKE type_t.num10
   DEFINE ls_js    STRING
   DEFINE ls_wc    STRING
   DEFINE l_dialog ui.DIALOG
   DEFINE lc_param type_parameter
   #add-point:ui_dialog段define 
   DEFINE l_pass     LIKE type_t.num5
   #end add-point
   
   #add-point:ui_dialog段before dialog
   CLEAR FORM 
   DISPLAY BY NAME g_master.glaald,g_master.glaa010,g_master.glaa011,g_master.glaa013
   #end add-point
 
   WHILE TRUE
      #add-point:ui_dialog段before dialog2
      
      #end add-point
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #應用 a57 樣板自動產生(Version:3)
         INPUT BY NAME g_master.glaald,g_master.glaa010,g_master.glaa011,g_master.glaa013 
            ATTRIBUTE(WITHOUT DEFAULTS)
            
            #自訂ACTION(master_input)
            
         
            BEFORE INPUT
               #add-point:資料輸入前 name="input.m.before_input"
               LET g_master.glaald = g_glaald
               CALL aglp580_glaald_desc(g_master.glaald) RETURNING g_master.glaald_desc
               DISPLAY g_master.glaald_desc TO glaald_desc
               #由预设帐别抓取现行年度期别  
               LET g_glaa010 = ''
               LET g_glaa011 = ''
               LET g_glaa013 = ''   
               SELECT glaa010,glaa011,glaa013 INTO g_glaa010,g_glaa011,g_glaa013
                FROM  glaa_t
                WHERE glaaent = g_enterprise
                  AND glaald =  g_glaald   
                LET g_master.glaa010 = g_glaa010
                LET g_master.glaa011 = g_glaa011
                LET g_master.glaa013 = g_today
               #end add-point
         
                     #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glaald
            
            #add-point:AFTER FIELD glaald name="input.a.glaald"
            IF NOT cl_null(g_master.glaald) THEN
               CALL aglp580_glaald_chk(g_master.glaald)
               IF NOT cl_null(g_errno) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_master.glaald
                  #160318-00005#17  --add--str
                   LET g_errparam.replace[1] ='agli010'
                   LET g_errparam.replace[2] = cl_get_progname('agli010',g_lang,"2")
                   LET g_errparam.exeprog    ='agli010'
                   #160318-00005#17 --add--end
                  LET g_errparam.popup = FALSE
                  CALL cl_err()

                  LET g_master.glaald = ''
                  DISPLAY '' TO glaald_desc
                  NEXT FIELD glaald
               END IF
               #检查使用者是否有权限使用当前账别
               CALL s_ld_chk_authorization(g_user,g_master.glaald) RETURNING l_pass
               IF l_pass = FALSE THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'axr-00022'
                  LET g_errparam.extend = g_master.glaald
                  LET g_errparam.popup = FALSE
                  CALL cl_err()

                  LET g_master.glaald = ''
                  DISPLAY '' TO glaald_desc
                  NEXT FIELD glaald
               END IF                
               #由预设帐别抓取现行年度期别  
               LET g_glaa010 = ''
               LET g_glaa011 = '' 
               SELECT glaa010,glaa011,glaa013 INTO g_glaa010,g_glaa011,g_glaa013
                FROM  glaa_t
                WHERE glaaent = g_enterprise
                  AND glaald =  g_master.glaald   
                LET g_master.glaa010 = g_glaa010
                LET g_master.glaa011 = g_glaa011 
                            
            END IF 
            CALL aglp580_glaald_desc(g_master.glaald) RETURNING g_master.glaald_desc
            DISPLAY g_master.glaald_desc TO glaald_desc
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glaald
            #add-point:BEFORE FIELD glaald name="input.b.glaald"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glaald
            #add-point:ON CHANGE glaald name="input.g.glaald"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glaa010
            #add-point:BEFORE FIELD glaa010 name="input.b.glaa010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glaa010
            
            #add-point:AFTER FIELD glaa010 name="input.a.glaa010"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glaa010
            #add-point:ON CHANGE glaa010 name="input.g.glaa010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glaa011
            #add-point:BEFORE FIELD glaa011 name="input.b.glaa011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glaa011
            
            #add-point:AFTER FIELD glaa011 name="input.a.glaa011"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glaa011
            #add-point:ON CHANGE glaa011 name="input.g.glaa011"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD glaa013
            #add-point:BEFORE FIELD glaa013 name="input.b.glaa013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD glaa013
            
            #add-point:AFTER FIELD glaa013 name="input.a.glaa013"
#            IF NOT cl_null(g_master.glaa013) THEN
#               IF g_master.glaa013 < g_glaa013 THEN
#                  INITIALIZE g_errparam TO NULL
#                  LET g_errparam.code = 'agl-00160'
#                  LET g_errparam.extend = g_master.glaa013
#                  LET g_errparam.popup = FALSE
#                  CALL cl_err()
#
#                  LET g_master.glaa013  = ''
#                  NEXT FIELD glaa013
#               END IF 
#            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE glaa013
            #add-point:ON CHANGE glaa013 name="input.g.glaa013"
            
            #END add-point 
 
 
 
                     #Ctrlp:input.c.glaald
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glaald
            #add-point:ON ACTION controlp INFIELD glaald name="input.c.glaald"
            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_master.glaald             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept
            
            CALL q_authorised_ld()                                #呼叫開窗

            LET g_master.glaald = g_qryparam.return1              
            CALL aglp580_glaald_desc(g_master.glaald) RETURNING g_master.glaald_desc
            DISPLAY g_master.glaald_desc TO glaald_desc
            DISPLAY g_master.glaald TO glaald              #

            NEXT FIELD glaald                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.glaa010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glaa010
            #add-point:ON ACTION controlp INFIELD glaa010 name="input.c.glaa010"
            
            #END add-point
 
 
         #Ctrlp:input.c.glaa011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glaa011
            #add-point:ON ACTION controlp INFIELD glaa011 name="input.c.glaa011"
            
            #END add-point
 
 
         #Ctrlp:input.c.glaa013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD glaa013
            #add-point:ON ACTION controlp INFIELD glaa013 name="input.c.glaa013"
            
            #END add-point
 
 
 
               
            AFTER INPUT
               #add-point:資料輸入後 name="input.m.after_input"
               
               #end add-point
               
            #add-point:其他管控(on row change, etc...) name="input.other"
            
            #end add-point
         END INPUT
 
 
 
         
         
      
         #add-point:ui_dialog段construct
         
         #end add-point
         #add-point:ui_dialog段input
         
         #end add-point
         #add-point:ui_dialog段自定義display array
         
         #end add-point
 
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
 
         BEFORE DIALOG
            LET l_dialog = ui.DIALOG.getCurrent()
            CALL aglp580_get_buffer(l_dialog)
            #add-point:ui_dialog段before dialog
            
            #end add-point
 
         ON ACTION batch_execute
            LET g_action_choice = "batch_execute"
            ACCEPT DIALOG
 
         #add-point:ui_dialog段before_qbeclear
         
         #end add-point
 
         ON ACTION qbeclear         
            CLEAR FORM
            INITIALIZE g_master.* TO NULL   #畫面變數清空
            INITIALIZE lc_param.* TO NULL   #傳遞參數變數清空
            #add-point:ui_dialog段qbeclear
            
            #end add-point
 
         ON ACTION history_fill
            CALL cl_schedule_history_fill()
 
         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT DIALOG
         
         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT DIALOG
 
         #add-point:ui_dialog段action
         
         #end add-point
 
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM   
         INITIALIZE g_master.* TO NULL
         LET g_wc  = ' 1=2'
         LET g_action_choice = ""
         CALL aglp580_init()
         CONTINUE WHILE
      END IF
 
      #檢查批次設定是否有錯(或未設定完成)
      IF NOT cl_schedule_exec_check() THEN
         CONTINUE WHILE
      END IF
      
      LET lc_param.wc = g_master.wc    #把畫面上的wc傳遞到參數變數
      #請在下方的add-point內進行把畫面的輸入資料(g_master)轉換到傳遞參數變數(lc_param)的動作
      #add-point:ui_dialog段exit dialog
      
      #end add-point
 
      LET ls_js = util.JSON.stringify(lc_param)  #r類使用g_master/p類使用lc_param
 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      ELSE
         IF g_chk_jobid THEN 
            LET g_jobid = g_schedule.gzpa001
         ELSE 
            LET g_jobid = cl_schedule_get_jobid(g_prog)
         END IF 
 
         #依照指定模式執行報表列印
         CASE 
            WHEN g_schedule.gzpa003 = "0"
                 CALL aglp580_process(ls_js)
 
            WHEN g_schedule.gzpa003 = "1"
                 LET ls_js = aglp580_transfer_argv(ls_js)
                 CALL cl_cmdrun(ls_js)
 
            WHEN g_schedule.gzpa003 = "2"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
 
            WHEN g_schedule.gzpa003 = "3"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
         END CASE  
 
         IF g_schedule.gzpa003 = "2" OR g_schedule.gzpa003 = "3" THEN 
            CALL cl_ask_confirm3("std-00014","") #設定完成
         END IF    
         LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
 
         #add-point:ui_dialog段after schedule
         
         #end add-point
 
         #欄位初始資訊 
         CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
         LET gi_hiden_asign = FALSE 
         LET gi_hiden_exec = FALSE 
         LET gi_hiden_spec = FALSE 
         LET gi_hiden_exec_end = FALSE 
         CALL cl_schedule_hidden()
      END IF
   END WHILE
 
END FUNCTION
 
{</section>}
 
{<section id="aglp580.transfer_argv" >}
#+ 轉換本地參數至cmdrun參數內,準備進入背景執行
PRIVATE FUNCTION aglp580_transfer_argv(ls_js)
 
   #add-point:transfer_agrv段define (客製用)
   
   #end add-point
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog       STRING,
             actionid   STRING,
             background LIKE type_t.chr1,
             param      DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter
   #add-point:transfer_agrv段define 
   
   #end add-point
 
   LET la_cmdrun.prog = g_prog
   LET la_cmdrun.background = "Y"
   LET la_cmdrun.param[1] = ls_js
 
   #add-point:transfer.argv段程式內容
   
   #end add-point
 
   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION
 
{</section>}
 
{<section id="aglp580.process" >}
#+ 資料處理   (r類使用g_master為主處理/p類使用l_param為主)
PRIVATE FUNCTION aglp580_process(ls_js)
 
   #add-point:process段define (客製用)
   
   #end add-point
   DEFINE ls_js         STRING
   DEFINE lc_param      type_parameter
   DEFINE li_stus       LIKE type_t.num5
   DEFINE li_count      LIKE type_t.num10  #progressbar計量
   DEFINE ls_sql        STRING             #主SQL
   DEFINE li_p01_status LIKE type_t.num5
   #add-point:process段define 
   DEFINE l_flag    LIKE type_t.num5
   #end add-point
 
  #INITIALIZE lc_param TO NULL           #p類不可以清空
   CALL util.JSON.parse(ls_js,lc_param)  #r類作業被t類呼叫時使用, p類主要解開參數處
   LET li_p01_status = 1
 
  #IF lc_param.wc IS NOT NULL THEN
  #   LET g_bgjob = "T"       #特殊情況,此為t類作業鬆耦合串入報表主程式使用
  #END IF
 
   #add-point:process段前處理
   CALL s_transaction_begin() 
   LET g_success='Y'
#   #资料检查
#   IF g_master.glaa013 < g_glaa013 THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code = 'agl-00160'
#      LET g_errparam.extend = g_master.glaa013
#      LET g_errparam.popup = TRUE
#      CALL cl_err()
#
#      LET g_success = 'N'
#      RETURN
#   END IF 
   #更新关账日期（glaa013）
   UPDATE glaa_t SET glaa013 = g_master.glaa013
               WHERE glaaent = g_enterprise
                 AND glaald = g_master.glaald
   IF SQLCA.SQLCODE THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.SQLCODE
      LET g_errparam.extend = 'UPD'
      LET g_errparam.popup = TRUE
      CALL cl_err()
 
      LET g_success = 'N' 
      RETURN
   END IF
   IF g_success = 'N' THEN
      CALL s_transaction_end('N','0')
      CALL cl_ask_end2(2) RETURNING l_flag
   ELSE
      CALL s_transaction_end('Y','0')
      CALL cl_ask_end2(1) RETURNING l_flag
   END IF    
   #end add-point
 
   #預先計算progressbar迴圈次數
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress
      
      #end add-point
   END IF
 
   #主SQL及相關FOREACH前置處理
#  DECLARE aglp580_process_cs CURSOR FROM ls_sql
#  FOREACH aglp580_process_cs INTO
   #add-point:process段process
   
   #end add-point
#  END FOREACH
 
   IF g_bgjob = "N" THEN
      #前景作業完成處理
      #add-point:process段foreground完成處理
      
      #end add-point
      CALL cl_ask_confirm3("std-00012","")
   ELSE
      #背景作業完成處理
      #add-point:process段background完成處理
      
      #end add-point
      CALL cl_schedule_exec_call(li_p01_status)
   END IF
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL aglp580_msgcentre_notify()
 
END FUNCTION
 
{</section>}
 
{<section id="aglp580.get_buffer" >}
PRIVATE FUNCTION aglp580_get_buffer(p_dialog)
 
   #add-point:process段define (客製用)
   
   #end add-point
   DEFINE p_dialog   ui.DIALOG
   #add-point:process段define
   
   #end add-point
 
   
   LET g_master.glaald = p_dialog.getFieldBuffer('glaald')
   LET g_master.glaa010 = p_dialog.getFieldBuffer('glaa010')
   LET g_master.glaa011 = p_dialog.getFieldBuffer('glaa011')
   LET g_master.glaa013 = p_dialog.getFieldBuffer('glaa013')
 
   CALL cl_schedule_get_buffer(p_dialog)
 
   #add-point:get_buffer段其他欄位處理
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="aglp580.msgcentre_notify" >}
PRIVATE FUNCTION aglp580_msgcentre_notify()
 
   #add-point:process段define (客製用)
   
   #end add-point
   DEFINE lc_state LIKE type_t.chr5
   #add-point:process段define
   
   #end add-point
 
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = "process"
 
   #add-point:msgcentre其他通知
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
{</section>}
 
{<section id="aglp580.other_function" readonly="Y" >}
#add-point:自定義元件(Function)

#帐别检查
PRIVATE FUNCTION aglp580_glaald_chk(p_glaald)
   DEFINE p_glaald    LIKE glaa_t.glaald
   DEFINE l_glaastus  LIKE glaa_t.glaastus
   
   LET g_errno = ''
   SELECT glaastus INTO l_glaastus FROM glaa_t
    WHERE glaaent = g_enterprise
      AND glaald = p_glaald
   CASE
      WHEN SQLCA.SQLCODE = 100   LET g_errno = 'agl-00016'
      WHEN l_glaastus = 'N'      LET g_errno = 'sub-01302'  #160318-00005#17 mod   #'agl-00051'
   END CASE
END FUNCTION

#帐别说明
PRIVATE FUNCTION aglp580_glaald_desc(p_glaald)
   DEFINE  p_glaald    LIKE glaa_t.glaald
   
    INITIALIZE g_ref_fields TO NULL
    LET g_ref_fields[1] = p_glaald 
    CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
    RETURN g_rtn_fields[1]
END FUNCTION

#end add-point
 
{</section>}
 
