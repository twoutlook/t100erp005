<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="agli161" std_prog="agli161" erpver="1.0" module="AGL" ver="2" env="s" zone="t10dev" booking="N" type="M" identity="s">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="function.agli161_set_comp_visible" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 控制單身欄位列顯示否
# Memo...........:
# Usage..........: CALL agli161_set_comp_visible(传入参数)
#                  RETURNING 無
# Input parameter: 無
# Return code....: 無
# Date & Author..: 14/02/08 By yuhuabao
# Modify.........:
################################################################################
PRIVATE FUNCTION agli161_set_comp_visible()
   CALL cl_set_comp_visible('glcc011,glcc011_desc,glcc011_3,glcc011_3_desc',g_glcc_m.chk01='Y')
   CALL cl_set_comp_visible('glcc012,glcc012_desc,glcc012_3,glcc012_3_desc',g_glcc_m.chk02='Y')
   CALL cl_set_comp_visible('glcc013,glcc013_desc,glcc013_3,glcc013_3_desc',g_glcc_m.chk03='Y')
   CALL cl_set_comp_visible('glcc014,glcc014_desc,glcc014_3,glcc014_3_desc',g_glcc_m.chk04='Y') 
   CALL cl_set_comp_visible('glcc015,glcc015_desc,glcc015_3,glcc015_3_desc',g_glcc_m.chk05='Y')
   CALL cl_set_comp_visible('glcc016,glcc016_desc,glcc016_desc_desc,glcc016_3,glcc016_3_desc,glcc016_3_desc_desc',g_glcc_m.chk06='Y')     
  
END FUNCTION]]>
  </point>
  <point name="function.agli161_glccld_desc" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 帳套帶值顯示
# Memo...........:
# Usage..........: CALL agli161_glccld_desc()
#                  RETURNING 無
# Input parameter: 無
# Return code....: 無
# Date & Author..: 14/02/08 By yuhuabao
# Modify.........:
################################################################################
PRIVATE FUNCTION agli161_glccld_desc()
   SELECT glaacomp,glaa004,glaa008,glaa014
     INTO g_glcc_m.glaacomp,g_glcc_m.glaa004,g_glcc_m.glaa008,g_glcc_m.glaa014
     FROM glaa_t
    WHERE glaaent = g_enterprise
      AND glaald  = g_glcc_m.glccld
      AND glaastus = 'Y'
      AND (glaa008  = 'Y' OR glaa014 = 'Y')
      
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_glcc_m.glccld
   CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_glcc_m.glccld_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_glcc_m.glccld_desc
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_glcc_m.glaacomp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_glcc_m.glaacomp_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_glcc_m.glaacomp_desc
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_glcc_m.glaa004
   CALL ap_ref_array2(g_ref_fields,"SELECT ooall004 FROM ooall_t WHERE ooallent='"||g_enterprise||"' AND ooall001='0' AND ooall002=? AND ooall003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_glcc_m.glaa004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_glcc_m.glaa004_desc

                  
END FUNCTION]]>
  </point>
  <point name="function.agli161_b3_fill" order="3" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 填充page2
# Memo...........:
# Usage..........: CALL agli161_b3_fill()
# Input parameter: 條件變量
# Return code....: 無
# Date & Author..: 14/02/08 By yuhuabao
# Modify.........:
################################################################################
PRIVATE FUNCTION agli161_b3_fill(p_wc2)
   DEFINE p_wc2      STRING
   
   CALL g_glcc2_d.clear()
   CALL g_glcc3_d.clear()
 
 
   
      LET g_sql = "SELECT  UNIQUE glcc001,glccstus,glccseq,glcc011,'',glcc012,'',glcc013,'',glcc014, 
          '',glcc015,'',glcc016,'','',glcc003,'',glcc004,'',glcc007,glccseq,glcc001,glccownid,'',glccowndp, 
          '',glcccrtid,'',glcccrtdp,'',glcccrtdt,glccmodid,'',glccmoddt FROM glcc_t",   
                  "",
                  
                  " WHERE glccent= ? AND glccld=? AND glcc001 = '2' "  
                  
   IF NOT cl_null(g_wc2_table2) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
   END IF
   
   #子單身的WC
   
   
   #判斷是否填充
   IF agli161_fill_chk(1) THEN
      LET g_sql = g_sql, " ORDER BY glcc_t.glcc001,glcc_t.glccseq"
      
      PREPARE agli161_pb3 FROM g_sql
      DECLARE b_fill_cs3 CURSOR FOR agli161_pb3
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs3 USING g_enterprise,g_glcc_m.glccld
 
                                               
      FOREACH b_fill_cs3 INTO g_glcc3_d[l_ac].glcc001,g_glcc3_d[l_ac].glccstus,g_glcc3_d[l_ac].glccseq,g_glcc3_d[l_ac].glcc011, 
          g_glcc3_d[l_ac].glcc011_3_desc,g_glcc3_d[l_ac].glcc012,g_glcc3_d[l_ac].glcc012_3_desc,g_glcc3_d[l_ac].glcc013, 
          g_glcc3_d[l_ac].glcc013_3_desc,g_glcc3_d[l_ac].glcc014,g_glcc3_d[l_ac].glcc014_3_desc,g_glcc3_d[l_ac].glcc015, 
          g_glcc3_d[l_ac].glcc015_3_desc,g_glcc3_d[l_ac].glcc016,g_glcc3_d[l_ac].glcc016_3_desc,g_glcc3_d[l_ac].glcc016_3_desc_desc, 
          g_glcc3_d[l_ac].glcc003,g_glcc3_d[l_ac].glcc003_3_desc, 
          g_glcc3_d[l_ac].glcc004,g_glcc3_d[l_ac].glcc004_3_desc,g_glcc3_d[l_ac].glcc007,g_glcc2_d[l_ac].glccseq, 
          g_glcc2_d[l_ac].glcc001,g_glcc2_d[l_ac].glccownid,g_glcc2_d[l_ac].glccownid_desc,g_glcc2_d[l_ac].glccowndp, 
          g_glcc2_d[l_ac].glccowndp_desc,g_glcc2_d[l_ac].glcccrtid,g_glcc2_d[l_ac].glcccrtid_desc,g_glcc2_d[l_ac].glcccrtdp, 
          g_glcc2_d[l_ac].glcccrtdp_desc,g_glcc2_d[l_ac].glcccrtdt,g_glcc2_d[l_ac].glccmodid,g_glcc2_d[l_ac].glccmodid_desc, 
          g_glcc2_d[l_ac].glccmoddt
            
 
                             
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
                           


         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      
            CALL g_glcc3_d.deleteElement(g_glcc3_d.getLength())
      CALL g_glcc2_d.deleteElement(g_glcc2_d.getLength())
 
   END IF
   
   IF g_current_page = 3 THEN
      LET g_rec_b=l_ac-1
      DISPLAY g_rec_b TO FORMONLY.cnt 
   END IF
   LET l_ac = g_cnt
   LET g_cnt = 0 
 
   FREE agli161_pb3  
END FUNCTION]]>
  </point>
  <point name="function.agli161_b1_fill" order="4" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 單身一填充
# Memo...........:
# Usage..........: CALL agli161_b1_fill() (传入参数)
# Input parameter: 無
# Return code....: 無
# Date & Author..: 14/02/10 By yuhuabao
# Modify.........:
################################################################################
PRIVATE FUNCTION agli161_b1_fill(p_wc2)
DEFINE  p_wc2  STRING  
  CALL g_glcc_d.clear()
  CALL g_glcc2_d.clear()
  LET g_sql = "SELECT  UNIQUE glcc001,glccstus,glccseq,glcc011,'',glcc012,'',glcc013,'',glcc014, 
          '',glcc015,'',glcc016,'','',glcc002,'',glcc003,'',glcc004,'',glcc007,glccseq,glcc001,glccownid,'',glccowndp, 
          '',glcccrtid,'',glcccrtdp,'',glcccrtdt,glccmodid,'',glccmoddt FROM glcc_t",   
                  "",
                  
                  " WHERE glccent= ? AND glccld=? AND glcc001 = '1' "  
                  
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table1 CLIPPED
   END IF
   
   #子單身的WC
   
   
   #判斷是否填充
   IF agli161_fill_chk(1) THEN
      LET g_sql = g_sql, " ORDER BY glcc_t.glcc001,glcc_t.glccseq"
      
      PREPARE agli161_pb1 FROM g_sql
      DECLARE b_fill_cs1 CURSOR FOR agli161_pb1
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs1 USING g_enterprise,g_glcc_m.glccld
 
                                               
      FOREACH b_fill_cs1 INTO g_glcc_d[l_ac].glcc001,g_glcc_d[l_ac].glccstus,g_glcc_d[l_ac].glccseq,g_glcc_d[l_ac].glcc011, 
          g_glcc_d[l_ac].glcc011_desc,g_glcc_d[l_ac].glcc012,g_glcc_d[l_ac].glcc012_desc,g_glcc_d[l_ac].glcc013, 
          g_glcc_d[l_ac].glcc013_desc,g_glcc_d[l_ac].glcc014,g_glcc_d[l_ac].glcc014_desc,g_glcc_d[l_ac].glcc015, 
          g_glcc_d[l_ac].glcc015_desc,g_glcc_d[l_ac].glcc016,g_glcc_d[l_ac].glcc016_desc,g_glcc_d[l_ac].glcc016_desc_desc, 
          g_glcc_d[l_ac].glcc002,g_glcc_d[l_ac].glcc002_desc,g_glcc_d[l_ac].glcc003,g_glcc_d[l_ac].glcc003_desc, 
          g_glcc_d[l_ac].glcc004,g_glcc_d[l_ac].glcc004_desc,g_glcc_d[l_ac].glcc007,g_glcc2_d[l_ac].glccseq, 
          g_glcc2_d[l_ac].glcc001,g_glcc2_d[l_ac].glccownid,g_glcc2_d[l_ac].glccownid_desc,g_glcc2_d[l_ac].glccowndp, 
          g_glcc2_d[l_ac].glccowndp_desc,g_glcc2_d[l_ac].glcccrtid,g_glcc2_d[l_ac].glcccrtid_desc,g_glcc2_d[l_ac].glcccrtdp, 
          g_glcc2_d[l_ac].glcccrtdp_desc,g_glcc2_d[l_ac].glcccrtdt,g_glcc2_d[l_ac].glccmodid,g_glcc2_d[l_ac].glccmodid_desc, 
          g_glcc2_d[l_ac].glccmoddt
 
 
                             
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
                           
         #add-point:b_fill段資料填充

         #end add-point
      
         #帶出公用欄位reference值
         
         
         #此段落由子樣板a12產生
      #LET g_glcc2_d[l_ac].glccownid_desc = cl_get_username(g_glcc2_d[l_ac].glccownid)
      #LET g_glcc2_d[l_ac].glccowndp_desc = cl_get_deptname(g_glcc2_d[l_ac].glccowndp)
      #LET g_glcc2_d[l_ac].glcccrtid_desc = cl_get_username(g_glcc2_d[l_ac].glcccrtid)
      #LET g_glcc2_d[l_ac].glcccrtdp_desc = cl_get_deptname(g_glcc2_d[l_ac].glcccrtdp)
      #LET g_glcc2_d[l_ac].glccmodid_desc = cl_get_username(g_glcc2_d[l_ac].glccmodid)
      ##LET g_glcc_d[l_ac].glcccnfid_desc = cl_get_deptname(g_glcc_d[l_ac].glcccnfid)
      ##LET g_glcc_d[l_ac].glccpstid_desc = cl_get_deptname(g_glcc_d[l_ac].glccpstid)
      
 
 
 
 
        
         #add-point:單身資料抓取

         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      
            CALL g_glcc_d.deleteElement(g_glcc_d.getLength())
      CALL g_glcc2_d.deleteElement(g_glcc2_d.getLength())
 
   END IF
   
   IF g_current_page = 1 THEN
      LET g_rec_b=l_ac-1
      DISPLAY g_rec_b TO FORMONLY.cnt 
   END IF
   LET l_ac = g_cnt
   LET g_cnt = 0 
 
   FREE agli161_pb1   
END FUNCTION]]>
  </point>
  <point name="function.agli161_b2_fill" order="5" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 顯示異動資訊
# Memo...........:
# Usage..........: CALL agli161_b2_fill (传入参数)
#                  RETURNING 回传参数
# Input parameter: p_wc2
# Return code....: 無
# Date & Author..: 14/02/10 By yuhuabao
# Modify.........:
################################################################################
PRIVATE FUNCTION agli161_b2_fill(p_wc2)
DEFINE  p_wc2  STRING  

  CALL g_glcc2_d.clear()
  LET g_sql = "SELECT  UNIQUE glcc001,glccseq,glccownid,'',glccowndp, 
          '',glcccrtid,'',glcccrtdp,'',glcccrtdt,glccmodid,'',glccmoddt FROM glcc_t",   
                  "",
                  
                  " WHERE glccent= ? AND glccld=? "  
                  
   IF NOT cl_null(g_wc2) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2 CLIPPED
   END IF
   
   #子單身的WC
   
   
   #判斷是否填充
   IF agli161_fill_chk(1) THEN
      LET g_sql = g_sql, " ORDER BY glcc_t.glcc001,glcc_t.glccseq"
      
      PREPARE agli161_pb2 FROM g_sql
      DECLARE b_fill_cs2 CURSOR FOR agli161_pb2
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_glcc_m.glccld
 
                                               
      FOREACH b_fill_cs2 INTO g_glcc2_d[l_ac].glcc001,g_glcc2_d[l_ac].glccseq, 
          g_glcc2_d[l_ac].glccownid,g_glcc2_d[l_ac].glccownid_desc,g_glcc2_d[l_ac].glccowndp, 
          g_glcc2_d[l_ac].glccowndp_desc,g_glcc2_d[l_ac].glcccrtid,g_glcc2_d[l_ac].glcccrtid_desc,g_glcc2_d[l_ac].glcccrtdp, 
          g_glcc2_d[l_ac].glcccrtdp_desc,g_glcc2_d[l_ac].glcccrtdt,g_glcc2_d[l_ac].glccmodid,g_glcc2_d[l_ac].glccmodid_desc, 
          g_glcc2_d[l_ac].glccmoddt
 
 
                             
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
  
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      
      CALL g_glcc2_d.deleteElement(g_glcc2_d.getLength())
 
   END IF
   
   IF g_current_page = 2 THEN
      LET g_rec_b=l_ac-1
      DISPLAY g_rec_b TO FORMONLY.cnt 
   END IF
   LET l_ac = g_cnt
   LET g_cnt = 0 
 
   FREE agli161_pb2
END FUNCTION]]>
  </point>
  <point name="b_fill.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="b_fill.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="b_fill.more" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="b_fill.sql_after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="b_fill.sql_before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                CALL agli161_b1_fill(p_wc2)
    CALL agli161_b3_fill(p_wc2)
    CALL agli161_b2_fill(p_wc2)
   RETURN
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_wc2_table1 = g_wc2_table1 CLIPPED," AND glcc001 = '1'"
   ELSE
      LET g_wc2_table1 = " AND glcc001 = '1'"
   END IF      ]]>
  </point>
  <point name="b_fill2.after_fill" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="b_fill2.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="before_delete.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="bfill.foreach" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="browser_fill.before_browser_fill" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="browser_fill.before_count" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="browser_fill.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="browser_fill.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="browser_search.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.a.chk01" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.chk02" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.chk03" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.chk04" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.chk05" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.chk06" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.glaa004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.glaa008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.glaa014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.glaacomp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.glccld" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page1.glcc001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page1.glcc002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page1.glcc003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page1.glcc004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page1.glcc007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page1.glcc011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page1.glcc012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page1.glcc013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page1.glcc014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page1.glcc015" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page1.glcc016" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.a.page1.glccseq" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.chk01" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.chk02" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.chk03" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.chk04" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.chk05" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.chk06" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.glaa004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.glaa008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.glaa014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.glaacomp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.glccld" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page1.glcc001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page1.glcc002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page1.glcc003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page1.glcc004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page1.glcc007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page1.glcc011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page1.glcc012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page1.glcc013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page1.glcc014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page1.glcc015" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page1.glcc016" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.b.page1.glccseq" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.c.chk01" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.c.chk02" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.c.chk03" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.c.chk04" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.c.chk05" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.c.chk06" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.c.glaa004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooal002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glaa004  #顯示到畫面上

            NEXT FIELD glaa004                     #返回原欄位

]]>
  </point>
  <point name="construct.c.glaa008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.c.glaa014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.c.glaacomp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glaacomp  #顯示到畫面上

            NEXT FIELD glaacomp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.glccld" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " (glaa008 = 'Y' OR glaa014 ='Y') "
            #給予arg
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept           
            CALL q_authorised_ld() #呼叫開窗
            DISPLAY g_qryparam.return1 TO glccld  #顯示到畫面上

            NEXT FIELD glccld                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.glcc001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.c.page1.glcc002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            #LET g_qryparam.where = "  glacstus='Y' AND glac003<>'1' "
            CALL aglt310_04()                          #呼叫開窗
            DISPLAY g_qryparam.return1 TO glcc002  #顯示到畫面上

            NEXT FIELD glcc002                     #返回原欄位]]>
  </point>
  <point name="construct.c.page1.glcc003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            #LET g_qryparam.where = "  glacstus='Y' AND glac003<>'1' "
            CALL aglt310_04()                          #呼叫開窗
            DISPLAY g_qryparam.return1 TO glcc003  #顯示到畫面上

            NEXT FIELD glcc003                     #返回原欄位]]>
  </point>
  <point name="construct.c.page1.glcc004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
           # LET g_qryparam.where = "  glacstus='Y' AND glac003<>'1' "
            CALL aglt310_04()                          #呼叫開窗
            DISPLAY g_qryparam.return1 TO glcc004  #顯示到畫面上

            NEXT FIELD glcc004                     #返回原欄位]]>
  </point>
  <point name="construct.c.page1.glcc007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.c.page1.glcc011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_rtax001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glcc011  #顯示到畫面上

            NEXT FIELD glcc011                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.glcc012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
		    LET g_qryparam.arg1 = '203'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glcc012  #顯示到畫面上

            NEXT FIELD glcc012                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.glcc013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
		   LET g_qryparam.arg1 = '275'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glcc013  #顯示到畫面上

            NEXT FIELD glcc013                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.glcc014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glcc014  #顯示到畫面上

            NEXT FIELD glcc014                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.glcc015" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_inaa001_8()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glcc015  #顯示到畫面上

            NEXT FIELD glcc015                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.glcc016" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glcc016  #顯示到畫面上

            NEXT FIELD glcc016                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.glccseq" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="construct.c.page2.glcccrtdp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glcccrtdp  #顯示到畫面上
            NEXT FIELD glcccrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.glcccrtid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glcccrtid  #顯示到畫面上
            NEXT FIELD glcccrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.glccmodid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glccmodid  #顯示到畫面上
            NEXT FIELD glccmodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.glccowndp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glccowndp  #顯示到畫面上
            NEXT FIELD glccowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.glccownid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glccownid  #顯示到畫面上
            NEXT FIELD glccownid                     #返回原欄位
    

]]>
  </point>
  <point name="cs.after_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL g_glcc3_d.clear()
   IF NOT cl_null(g_glccld_p) THEN
      LET g_wc = g_wc CLIPPED," AND glccld = '",g_glccld_p,"'"
      LET g_wc2_table1 = g_wc2_table1 CLIPPED," AND glccld = '",g_glccld_p,"'"
      LET g_wc2_table2 = g_wc2_table2 CLIPPED," AND glccld = '",g_glccld_p,"'"
   END IF
   IF g_wc2_table1 <> " 1=1" AND g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = "((",g_wc2_table1 CLIPPED, ") OR (",g_wc2_table2 CLIPPED,"))"
   ELSE
      IF g_wc2_table1 = " 1=1" AND g_wc2_table2 = " 1=1" THEN
        LET g_wc2 = " 1=1"
      ELSE
         IF g_wc2_table1 <> " 1=1" THEN
            LET g_wc2 = g_wc2_table1
         ELSE
            LET g_wc2 = g_wc2_table2
         END IF
      END IF
   END IF
   LET g_current_row = 1
 
   IF INT_FLAG THEN
      RETURN
   END IF
   
   LET g_wc_filter = ""
   RETURN   ]]>
  </point>
  <point name="cs.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="cs.body.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="cs.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="cs.head.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="cs.head.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="cs.more_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CONSTRUCT g_wc2_table2 ON glcc001,glccseq,glcc011,glcc012,glcc013,glcc014,glcc015,glcc016,
          glcc003,glcc004,glcc007

           FROM s_detail3[1].glcc001_3,s_detail3[1].glccseq_3,s_detail3[1].glcc011_3,s_detail3[1].glcc012_3, 
               s_detail3[1].glcc013_3,s_detail3[1].glcc014_3,s_detail3[1].glcc015_3,s_detail3[1].glcc016_3, 
               s_detail3[1].glcc003_3,s_detail3[1].glcc004_3,s_detail3[1].glcc007_3

                      
         BEFORE CONSTRUCT

           
         #單身一般欄位開窗相關處理
         #---------------------<  Detail: page2  >---------------------
         #----<<glcc001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD glcc001_3
            #add-point:BEFORE FIELD glcc001
                                    
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glcc001_3
            
            #add-point:AFTER FIELD glcc001
                                    
            #END add-point
            
 
         #Ctrlp:construct.c.page1.glcc001
         ON ACTION controlp INFIELD glcc001_3
            #add-point:ON ACTION controlp INFIELD glcc001
                                    
            #END add-point
 
         #----<<glccseq>>----
         #此段落由子樣板a01產生
         BEFORE FIELD glccseq_3
            #add-point:BEFORE FIELD glccseq
                                    
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glccseq_3
            
            #add-point:AFTER FIELD glccseq
                                    
            #END add-point
            
 
         #Ctrlp:construct.c.page1.glccseq
         ON ACTION controlp INFIELD glccseq_3
            #add-point:ON ACTION controlp INFIELD glccseq
                                    
            #END add-point
 
         #----<<glcc011>>----
         #Ctrlp:construct.c.page1.glcc011
         ON ACTION controlp INFIELD glcc011_3
            #add-point:ON ACTION controlp INFIELD glcc011
                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_rtax001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glcc011_3  #顯示到畫面上

            NEXT FIELD glcc011_3                     #返回原欄位


            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glcc011_3
            #add-point:BEFORE FIELD glcc011
                                    
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glcc011_3
            
            #add-point:AFTER FIELD glcc011
                                    
            #END add-point
            
 
         #----<<glcc012>>----
         #Ctrlp:construct.c.page1.glcc012
         ON ACTION controlp INFIELD glcc012_3
            #add-point:ON ACTION controlp INFIELD glcc012
                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
		    LET g_qryparam.arg1 = '202'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glcc012_3  #顯示到畫面上

            NEXT FIELD glcc012_3                     #返回原欄位


            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glcc012_3
            #add-point:BEFORE FIELD glcc012
                                    
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glcc012_3
            
            #add-point:AFTER FIELD glcc012
                                    
            #END add-point
            
 
         #----<<glcc013>>----
         #Ctrlp:construct.c.page1.glcc013
         ON ACTION controlp INFIELD glcc013_3
            #add-point:ON ACTION controlp INFIELD glcc013
                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
		    LET g_qryparam.arg1 = '275'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glcc013_3  #顯示到畫面上

            NEXT FIELD glcc013_3                     #返回原欄位


            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glcc013_3
            #add-point:BEFORE FIELD glcc013
                                    
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glcc013_3
            
            #add-point:AFTER FIELD glcc013
                                    
            #END add-point
            
 
         #----<<glcc014>>----
         #Ctrlp:construct.c.page1.glcc014
         ON ACTION controlp INFIELD glcc014_3
            #add-point:ON ACTION controlp INFIELD glcc014
                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glcc014_3  #顯示到畫面上

            NEXT FIELD glcc014_3                     #返回原欄位


            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glcc014_3
            #add-point:BEFORE FIELD glcc014
                                    
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glcc014_3
            
            #add-point:AFTER FIELD glcc014
                                    
            #END add-point
            
 
         #----<<glcc015>>----
         #Ctrlp:construct.c.page1.glcc015
         ON ACTION controlp INFIELD glcc015_3
            #add-point:ON ACTION controlp INFIELD glcc015
                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_inaa001_8()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glcc015_3  #顯示到畫面上

            NEXT FIELD glcc015_3                     #返回原欄位


            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glcc015_3
            #add-point:BEFORE FIELD glcc015
                                    
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glcc015_3
            
            #add-point:AFTER FIELD glcc015
                                    
            #END add-point
            
 
         #----<<glcc016>>----
         #Ctrlp:construct.c.page1.glcc016
         ON ACTION controlp INFIELD glcc016_3
            #add-point:ON ACTION controlp INFIELD glcc016
                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glcc016_3  #顯示到畫面上

            NEXT FIELD glcc016_3                     #返回原欄位


            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glcc016_3
            #add-point:BEFORE FIELD glcc016
                                    
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glcc016_3
            
            #add-point:AFTER FIELD glcc016
                                    
            #END add-point
            

         #----<<glcc003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD glcc003
            #add-point:BEFORE FIELD glcc003
                                    
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glcc003
            
            #add-point:AFTER FIELD glcc003
                                    
            #END add-point
            
 
         #Ctrlp:construct.c.page1.glcc003
         ON ACTION controlp INFIELD glcc003_3
            #add-point:ON ACTION controlp INFIELD glcc003
                                                INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
           # LET g_qryparam.where = "  glacstus='Y' AND glac003<>'1' "            
            CALL aglt310_04()                          #呼叫開窗
            DISPLAY g_qryparam.return1 TO glcc003_3  #顯示到畫面上

            NEXT FIELD glcc003_3                     #返回原欄位
            #END add-point
 

 
         #Ctrlp:construct.c.page1.glcc004
         ON ACTION controlp INFIELD glcc004_3
            #add-point:ON ACTION controlp INFIELD glcc004
                                                INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
           # LET g_qryparam.where = "  glacstus='Y' AND glac003<>'1' "           
            CALL aglt310_04()                          #呼叫開窗
            DISPLAY g_qryparam.return1 TO glcc004_3  #顯示到畫面上

            NEXT FIELD glcc004_3                     #返回原欄位
            #END add-point

#---------------------<  Detail: page2  >---------------------
   
       
      END CONSTRUCT                  ]]>
  </point>
  <point name="default_search.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="default_search.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="default_search.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="delete.body.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="delete.body.a_single_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="delete.body.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="delete.body.b_single_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="delete.body.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="delete.body.m_single_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="delete.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="delete_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="detail_reproduce.body.table1.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="detail_reproduce.body.table1.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="detail_reproduce.body.table1.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="detail_reproduce.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="fetch.before_fetch" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="fetch.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="fill_chk.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="fill_chk.other" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="filter.add_cs" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="filter.b_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="global.argv" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[DEFINE  g_glccld_p   LIKE glcc_t.glccld  #傳入參數 
DEFINE  g_current_page     LIKE type_t.chr1    #單身flag
DEFINE  g_wc2_table2          STRING
DEFINE  g_tot_wc2             STRING
]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[ TYPE type_g_glcc3_d RECORD
       glcc001 LIKE glcc_t.glcc001, 
   glccstus LIKE glcc_t.glccstus, 
   glccseq LIKE glcc_t.glccseq, 
   glcc011 LIKE glcc_t.glcc011, 
   glcc011_3_desc LIKE type_t.chr500, 
   glcc012 LIKE glcc_t.glcc012, 
   glcc012_3_desc LIKE type_t.chr500, 
   glcc013 LIKE glcc_t.glcc013, 
   glcc013_3_desc LIKE type_t.chr500, 
   glcc014 LIKE glcc_t.glcc014, 
   glcc014_3_desc LIKE type_t.chr500, 
   glcc015 LIKE glcc_t.glcc015, 
   glcc015_3_desc LIKE type_t.chr500, 
   glcc016 LIKE glcc_t.glcc016, 
   glcc016_3_desc LIKE type_t.chr500, 
   glcc016_3_desc_desc LIKE type_t.chr500, 
   glcc003 LIKE glcc_t.glcc003, 
   glcc003_3_desc LIKE type_t.chr500, 
   glcc004 LIKE glcc_t.glcc004, 
   glcc004_3_desc LIKE type_t.chr500, 
   glcc007 LIKE glcc_t.glcc007
       END RECORD
       
DEFINE g_glcc3_d   DYNAMIC ARRAY OF type_g_glcc3_d
DEFINE g_glcc3_d_t type_g_glcc3_d      ]]>
  </point>
  <point name="init.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL cl_set_combo_scc('glcc007_3','8315') ]]>
  </point>
  <point name="input.a.chk01" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.a.chk02" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.a.chk03" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.a.chk04" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.a.chk05" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.a.chk06" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.a.glaa004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc_m.glaa004
            CALL ap_ref_array2(g_ref_fields,"SELECT ooall004 FROM ooall_t WHERE ooallent='"||g_enterprise||"' AND ooall001='0' AND ooall002=? AND ooall003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glcc_m.glaa004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc_m.glaa004_desc
]]>
  </point>
  <point name="input.a.glaa008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.a.glaa014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.a.glaacomp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc_m.glaacomp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glcc_m.glaacomp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc_m.glaacomp_desc
]]>
  </point>
  <point name="input.a.glccld" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a05產生
            IF  NOT cl_null(g_glcc_m.glccld) THEN 
### 帳別存在性檢查### start ###
               INITIALIZE g_chkparam.* TO NULL 
               LET g_chkparam.where = " 1=1"
               LET g_chkparam.arg1 = g_glcc_m.glccld
               IF NOT cl_chk_exist("v_glaald_1") THEN
                  LET g_glcc_m.glccld = g_glccld_t
                   CALL agli161_glccld_desc()
                  NEXT FIELD glccld
               END IF
### 帳別存在性檢查### end ###
            
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_glcc_m.glccld != g_glccld_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM glcc_t WHERE "||"glccent = '" ||g_enterprise|| "' AND "||"glccld = '"||g_glcc_m.glccld ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF               
            END IF

            CALL agli161_glccld_desc()
]]>
  </point>
  <point name="input.a.page1.glcc001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a05產生
            IF  g_glcc_m.glccld IS NOT NULL AND g_glcc_d[g_detail_idx].glcc001 IS NOT NULL AND g_glcc_d[g_detail_idx].glccseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glcc_m.glccld != g_glccld_t OR g_glcc_d[g_detail_idx].glcc001 != g_glcc_d_t.glcc001 OR g_glcc_d[g_detail_idx].glccseq != g_glcc_d_t.glccseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM glcc_t WHERE "||"glccent = '" ||g_enterprise|| "' AND "||"glccld = '"||g_glcc_m.glccld ||"' AND "|| "glcc001 = '"||g_glcc_d[g_detail_idx].glcc001 ||"' AND "|| "glccseq = '"||g_glcc_d[g_detail_idx].glccseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.glcc002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            ### 會計科目存在性檢查### start ###
           IF NOT cl_null(g_glcc_d[l_ac].glcc002) THEN
               INITIALIZE g_chkparam.* TO NULL 
               LET g_chkparam.arg1 = g_glcc_m.glaa004
               LET g_chkparam.arg2 = g_glcc_d[l_ac].glcc002
               IF NOT cl_chk_exist("v_glac002_4") THEN
                  LET g_glcc_d[l_ac].glcc002 = g_glcc_d_t.glcc002
                  NEXT FIELD glcc002
               END IF
            END IF
            ### 會計科目存在性檢查### end ###
            
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc_m.glaa004
            LET g_ref_fields[2] = g_glcc_d[l_ac].glcc002
            CALL ap_ref_array2(g_ref_fields,"SELECT glacl004 FROM glacl_t WHERE glaclent='"||g_enterprise||"' AND glacl001=? AND glacl002=? AND glacl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glcc_d[l_ac].glcc002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc_d[l_ac].glcc002_desc
            ]]>
  </point>
  <point name="input.a.page1.glcc003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                           
            ### 會計科目存在性檢查### start ###
           IF NOT cl_null(g_glcc_d[l_ac].glcc003) THEN
               INITIALIZE g_chkparam.* TO NULL 
               LET g_chkparam.arg1 = g_glcc_m.glaa004
               LET g_chkparam.arg2 = g_glcc_d[l_ac].glcc003
               IF NOT cl_chk_exist("v_glac002_4") THEN
                  LET g_glcc_d[l_ac].glcc003 = g_glcc_d_t.glcc003
                  NEXT FIELD glcc003
               END IF
            END IF
            ### 會計科目存在性檢查### end ###
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc_m.glaa004
            LET g_ref_fields[2] = g_glcc_d[l_ac].glcc003
            CALL ap_ref_array2(g_ref_fields,"SELECT glacl004 FROM glacl_t WHERE glaclent='"||g_enterprise||"' AND glacl001=? AND glacl002=? AND glacl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glcc_d[l_ac].glcc003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc_d[l_ac].glcc003_desc
]]>
  </point>
  <point name="input.a.page1.glcc004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            
            ### 會計科目存在性檢查### start ###
           IF NOT cl_null(g_glcc_d[l_ac].glcc004) THEN
               INITIALIZE g_chkparam.* TO NULL 
               LET g_chkparam.arg1 = g_glcc_m.glaa004
               LET g_chkparam.arg2 = g_glcc_d[l_ac].glcc004
               IF NOT cl_chk_exist("v_glac002_4") THEN
                  LET g_glcc_d[l_ac].glcc004 = g_glcc_d_t.glcc004
                  NEXT FIELD glcc004
               END IF
            END IF
            ### 會計科目存在性檢查### end ###            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc_m.glaa004
            LET g_ref_fields[2] = g_glcc_d[l_ac].glcc004
            CALL ap_ref_array2(g_ref_fields,"SELECT glacl004 FROM glacl_t WHERE glaclent='"||g_enterprise||"' AND glacl001=? AND glacl002=? AND glacl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glcc_d[l_ac].glcc004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc_d[l_ac].glcc004_desc
]]>
  </point>
  <point name="input.a.page1.glcc007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.a.page1.glcc011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            ### 產品類別存在性檢查### start ###
            IF NOT cl_null(g_glcc_d[l_ac].glcc011) AND g_glcc_d[l_ac].glcc011 <> '*' THEN
               INITIALIZE g_chkparam.* TO NULL 
               LET g_chkparam.arg1 = g_glcc_d[l_ac].glcc011
               IF NOT cl_chk_exist("v_rtax001") THEN
                  LET g_glcc_d[l_ac].glcc011 = g_glcc_d_t.glcc011
                  NEXT FIELD glcc011
               END IF
            END IF
            ### 產品類別存在性檢查### end ###            
            IF cl_null(g_glcc_d[l_ac].glcc011) THEN
               LET g_glcc_d[l_ac].glcc011 = '*'
            END IF
            
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc_d[l_ac].glcc011
            CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glcc_d[l_ac].glcc011_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc_d[l_ac].glcc011_desc
]]>
  </point>
  <point name="input.a.page1.glcc012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            
            ### 檢查應用分類碼是否存在### start ###
            IF NOT cl_null(g_glcc_d[l_ac].glcc012) AND g_glcc_d[l_ac].glcc012 <> '*' THEN
               INITIALIZE g_chkparam.* TO NULL 
               LET g_chkparam.arg1 = '203'
               LET g_chkparam.arg2 = g_glcc_d[l_ac].glcc012
               IF NOT cl_chk_exist("v_oocq002_1") THEN
                  LET g_glcc_d[l_ac].glcc012 = g_glcc_d_t.glcc012
                  NEXT FIELD glcc012
               END IF
            END IF
            ### 檢查應用分類碼是否存在### end ###   
            IF cl_null(g_glcc_d[l_ac].glcc012) THEN
               LET g_glcc_d[l_ac].glcc012 = '*'
            END IF
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc_d[l_ac].glcc012
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='203' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glcc_d[l_ac].glcc012_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc_d[l_ac].glcc012_desc
]]>
  </point>
  <point name="input.a.page1.glcc013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                             ### 檢查應用分類碼是否存在### start ###
            IF NOT cl_null(g_glcc_d[l_ac].glcc013) AND g_glcc_d[l_ac].glcc013 <> '*' THEN
               INITIALIZE g_chkparam.* TO NULL 
               LET g_chkparam.arg1 = '275'
               LET g_chkparam.arg2 = g_glcc_d[l_ac].glcc013
               IF NOT cl_chk_exist("v_oocq002_1") THEN
                  LET g_glcc_d[l_ac].glcc013 = g_glcc_d_t.glcc013
                  NEXT FIELD glcc013
               END IF
            END IF
            ### 檢查應用分類碼是否存在### end ###            
            IF cl_null(g_glcc_d[l_ac].glcc013) THEN
               LET g_glcc_d[l_ac].glcc013 = '*'
            END IF            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc_d[l_ac].glcc013
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='275' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glcc_d[l_ac].glcc013_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc_d[l_ac].glcc013_desc
]]>
  </point>
  <point name="input.a.page1.glcc014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            ### 組織編號檢查### start ###
           IF NOT cl_null(g_glcc_d[l_ac].glcc014) AND g_glcc_d[l_ac].glcc014 <> '*' THEN
               INITIALIZE g_chkparam.* TO NULL 
               LET g_chkparam.arg1 = g_glcc_d[l_ac].glcc014
               IF NOT cl_chk_exist("v_ooef001") THEN
                  LET g_glcc_d[l_ac].glcc014 = g_glcc_d_t.glcc014
                  NEXT FIELD glcc014
               END IF
            END IF
            ### 組織編號檢查### end ###
            IF cl_null(g_glcc_d[l_ac].glcc014) THEN
               LET g_glcc_d[l_ac].glcc014 = '*'
            END IF            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc_d[l_ac].glcc014
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glcc_d[l_ac].glcc014_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc_d[l_ac].glcc014_desc
]]>
  </point>
  <point name="input.a.page1.glcc015" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            
            ### 庫位編號檢查### start ###
           IF NOT cl_null(g_glcc_d[l_ac].glcc015) AND g_glcc_d[l_ac].glcc015 <> '*' THEN
               INITIALIZE g_chkparam.* TO NULL 
               LET g_chkparam.arg1 = g_glcc_d[l_ac].glcc015
               IF NOT cl_chk_exist("v_inaa001_5") THEN
                  LET g_glcc_d[l_ac].glcc015 = g_glcc_d_t.glcc015
                  NEXT FIELD glcc015
               END IF
            END IF
            ### 庫位編號檢查### end ###
            
            IF cl_null(g_glcc_d[l_ac].glcc015) THEN
               LET g_glcc_d[l_ac].glcc015 = '*'
            END IF            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc_d[l_ac].glcc015
            CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"'  AND inaa001=? "," AND ROWNUM=1") RETURNING g_rtn_fields
            LET g_glcc_d[l_ac].glcc015_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc_d[l_ac].glcc015_desc
]]>
  </point>
  <point name="input.a.page1.glcc016" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            
            ### 料件編號存在檢查### start ###
           IF NOT cl_null(g_glcc_d[l_ac].glcc016) AND g_glcc_d[l_ac].glcc016 <> '*' THEN
               INITIALIZE g_chkparam.* TO NULL 
               LET g_chkparam.arg1 = g_glcc_d[l_ac].glcc016
               IF NOT cl_chk_exist("v_imaa001") THEN
                  LET g_glcc_d[l_ac].glcc016 = g_glcc_d_t.glcc016
                  NEXT FIELD glcc016
               END IF
            END IF
            ### 料件編號存在檢查### end ###
            IF cl_null(g_glcc_d[l_ac].glcc016) THEN
               LET g_glcc_d[l_ac].glcc016 = '*'
            END IF            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc_d[l_ac].glcc016
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glcc_d[l_ac].glcc016_desc = '', g_rtn_fields[1] , ''
            LET g_glcc_d[l_ac].glcc016_desc_desc = '', g_rtn_fields[2] , ''
            DISPLAY BY NAME g_glcc_d[l_ac].glcc016_desc
            DISPLAY BY NAME g_glcc_d[l_ac].glcc016_desc_desc
]]>
  </point>
  <point name="input.a.page1.glccseq" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            #此段落由子樣板a05產生
            IF  g_glcc_m.glccld IS NOT NULL AND g_glcc_d[g_detail_idx].glcc001 IS NOT NULL AND g_glcc_d[g_detail_idx].glccseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glcc_m.glccld != g_glccld_t OR g_glcc_d[g_detail_idx].glcc001 != g_glcc_d_t.glcc001 OR g_glcc_d[g_detail_idx].glccseq != g_glcc_d_t.glccseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM glcc_t WHERE "||"glccent = '" ||g_enterprise|| "' AND "||"glccld = '"||g_glcc_m.glccld ||"' AND "|| "glcc001 = '"||g_glcc_d[g_detail_idx].glcc001 ||"' AND "|| "glccseq = '"||g_glcc_d[g_detail_idx].glccseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.glcc001_2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_glcc_m.glccld IS NOT NULL AND g_glcc2_d[g_detail_idx].glcc001 IS NOT NULL AND g_glcc2_d[g_detail_idx].glccseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glcc_m.glccld != g_glccld_t OR g_glcc2_d[g_detail_idx].glcc001 != g_glcc2_d_t.glcc001 OR g_glcc2_d[g_detail_idx].glccseq != g_glcc2_d_t.glccseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM glcc_t WHERE "||"glccent = '" ||g_enterprise|| "' AND "||"glccld = '"||g_glcc_m.glccld ||"' AND "|| "glcc001 = '"||g_glcc2_d[g_detail_idx].glcc001 ||"' AND "|| "glccseq = '"||g_glcc2_d[g_detail_idx].glccseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.glccseq_2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_glcc_m.glccld IS NOT NULL AND g_glcc2_d[g_detail_idx].glcc001 IS NOT NULL AND g_glcc2_d[g_detail_idx].glccseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glcc_m.glccld != g_glccld_t OR g_glcc2_d[g_detail_idx].glcc001 != g_glcc2_d_t.glcc001 OR g_glcc2_d[g_detail_idx].glccseq != g_glcc2_d_t.glccseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM glcc_t WHERE "||"glccent = '" ||g_enterprise|| "' AND "||"glccld = '"||g_glcc_m.glccld ||"' AND "|| "glcc001 = '"||g_glcc2_d[g_detail_idx].glcc001 ||"' AND "|| "glccseq = '"||g_glcc2_d[g_detail_idx].glccseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page3.glcc001_3" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_glcc_m.glccld IS NOT NULL AND g_glcc3_d[g_detail_idx].glcc001 IS NOT NULL AND g_glcc3_d[g_detail_idx].glccseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glcc_m.glccld != g_glccld_t OR g_glcc3_d[g_detail_idx].glcc001 != g_glcc3_d_t.glcc001 OR g_glcc3_d[g_detail_idx].glccseq != g_glcc3_d_t.glccseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM glcc_t WHERE "||"glccent = '" ||g_enterprise|| "' AND "||"glccld = '"||g_glcc_m.glccld ||"' AND "|| "glcc001 = '"||g_glcc3_d[g_detail_idx].glcc001 ||"' AND "|| "glccseq = '"||g_glcc3_d[g_detail_idx].glccseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page3.glccseq_3" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_glcc_m.glccld IS NOT NULL AND g_glcc3_d[g_detail_idx].glcc001 IS NOT NULL AND g_glcc3_d[g_detail_idx].glccseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glcc_m.glccld != g_glccld_t OR g_glcc3_d[g_detail_idx].glcc001 != g_glcc3_d_t.glcc001 OR g_glcc3_d[g_detail_idx].glccseq != g_glcc3_d_t.glccseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM glcc_t WHERE "||"glccent = '" ||g_enterprise|| "' AND "||"glccld = '"||g_glcc_m.glccld ||"' AND "|| "glcc001 = '"||g_glcc3_d[g_detail_idx].glcc001 ||"' AND "|| "glccseq = '"||g_glcc3_d[g_detail_idx].glccseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.after_define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               LET l_forupd_sql = "SELECT glcc001,glccstus,glccseq,glcc011,'',glcc012,'',glcc013,'',glcc014,'',glcc015, 
       '',glcc016,'','',glcc003,'',glcc004,'',glcc007,'','',glccownid,'',glccowndp,'',glcccrtid, 
       '',glcccrtdp,'',glcccrtdt,glccmodid,'',glccmoddt FROM glcc_t WHERE glccent=? AND glccld=? AND  
       glcc001=? AND glccseq=? FOR UPDATE"
   LET l_forupd_sql = cl_sql_forupd(l_forupd_sql)
   DECLARE agli161_bcl2 CURSOR FROM l_forupd_sql      # LOCK CURSOR]]>
  </point>
  <point name="input.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.after_set_entry" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.after_set_no_entry" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.b.chk01" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.b.chk02" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.b.chk03" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.b.chk04" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.b.chk05" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.b.chk06" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.b.glaa004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.b.glaa008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.b.glaa014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.b.glaacomp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.b.glccld" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.b.page1.glcc001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.b.page1.glcc002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.b.page1.glcc003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            IF cl_null(g_glcc_d[l_ac].glcc003) AND l_cmd ='a' THEN
               LET g_glcc_d[l_ac].glcc003 = g_glcc_d[l_ac].glcc002
               DISPLAY BY NAME g_glcc_d[l_ac].glcc003 
            END IF]]>
  </point>
  <point name="input.b.page1.glcc004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            IF cl_null(g_glcc_d[l_ac].glcc004) AND l_cmd ='a' THEN
               LET g_glcc_d[l_ac].glcc004 = g_glcc_d[l_ac].glcc003
               DISPLAY BY NAME g_glcc_d[l_ac].glcc004 
            END IF]]>
  </point>
  <point name="input.b.page1.glcc007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.b.page1.glcc011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.b.page1.glcc012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.b.page1.glcc013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.b.page1.glcc014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.b.page1.glcc015" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.b.page1.glcc016" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.b.page1.glccseq" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.body.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.body.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.body.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.body.after_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.body.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.body.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                 AFTER ROW
            IF cl_null(g_glcc_d[l_ac].glcc011) THEN
               LET g_glcc_d[l_ac].glcc011 = '*'
               DISPLAY BY NAME g_glcc_d[l_ac].glcc011
            END IF  ]]>
  </point>
  <point name="input.body.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.body.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                            ]]>
  </point>
  <point name="input.body.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.body.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        LET l_page_cnt = g_glcc_d.getLength()
            DISPLAY  l_page_cnt TO FORMONLY.cnt           ]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            LET g_glcc_d[l_ac].glcc001 = '1'
            LET g_glcc_d[l_ac].glccstus = "Y"
            SELECT MAX(glccseq)+1 INTO g_glcc_d[l_ac].glccseq 
              FROM glcc_t
             WHERE glccent = g_enterprise AND glccld = g_glcc_m.glccld
               AND glcc001 = g_glcc_d[l_ac].glcc001
            IF cl_null(g_glcc_d[l_ac].glccseq) THEN
               LET g_glcc_d[l_ac].glccseq = 1
            END IF
            LET g_glcc_d[l_ac].glcc011 = '*'
            LET g_glcc_d[l_ac].glcc012 = '*'
            LET g_glcc_d[l_ac].glcc013 = '*'
            LET g_glcc_d[l_ac].glcc014 = '*'
            LET g_glcc_d[l_ac].glcc015 = '*'
            LET g_glcc_d[l_ac].glcc016 = '*'            ]]>
  </point>
  <point name="input.body.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            LET g_glcc2_d[l_ac].glccseq = g_glcc_d[l_ac].glccseq 
            LET g_glcc2_d[l_ac].glcc001 = g_glcc_d[l_ac].glcc001]]>
  </point>
  <point name="input.body.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.body.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.body2.action" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.chk01" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.c.chk02" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.c.chk03" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.c.chk04" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.c.chk05" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.c.chk06" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.c.glaa004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_glcc_m.glaa004             #給予default值

            #給予arg

            CALL q_ooal002()                                #呼叫開窗

            LET g_glcc_m.glaa004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_glcc_m.glaa004 TO glaa004              #顯示到畫面上

            NEXT FIELD glaa004                          #返回原欄位

]]>
  </point>
  <point name="input.c.glaa008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.c.glaa014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.c.glaacomp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_glcc_m.glaacomp             #給予default值

            #給予arg

            CALL q_ooea001_2()                                #呼叫開窗

            LET g_glcc_m.glaacomp = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_glcc_m.glaacomp TO glaacomp              #顯示到畫面上

            NEXT FIELD glaacomp                          #返回原欄位

]]>
  </point>
  <point name="input.c.glccld" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_glcc_m.glccld             #給予default值

            LET g_qryparam.where = " (glaa008 = 'Y' OR glaa014 ='Y') "
            #給予arg
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept           
            CALL q_authorised_ld() #呼叫開窗                              #呼叫開窗

            LET g_glcc_m.glccld = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_glcc_m.glccld TO glccld              #顯示到畫面上

            NEXT FIELD glccld                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.glcc001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.c.page1.glcc002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_glcc_d[l_ac].glcc002             #給予default值
            LET g_qryparam.where = " glac001='",g_glcc_m.glaa004,"' AND glacstus='Y' AND glac003<>'1' "
            #給予arg

            CALL aglt310_04()                                #呼叫開窗

            LET g_glcc_d[l_ac].glcc002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_glcc_d[l_ac].glcc002 TO glcc002              #顯示到畫面上

            NEXT FIELD glcc002                          #返回原欄位
]]>
  </point>
  <point name="input.c.page1.glcc003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_glcc_d[l_ac].glcc003             #給予default值
            LET g_qryparam.where = " glac001='",g_glcc_m.glaa004,"' AND glacstus='Y' AND glac003<>'1' "
            #給予arg

            CALL aglt310_04()                                #呼叫開窗

            LET g_glcc_d[l_ac].glcc003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_glcc_d[l_ac].glcc003 TO glcc003              #顯示到畫面上

            NEXT FIELD glcc003                          #返回原欄位]]>
  </point>
  <point name="input.c.page1.glcc004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " glac001='",g_glcc_m.glaa004,"'  AND glacstus='Y' AND glac003<>'1' "
            LET g_qryparam.default1 = g_glcc_d[l_ac].glcc004             #給予default值

            #給予arg

            CALL aglt310_04()                                #呼叫開窗

            LET g_glcc_d[l_ac].glcc004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_glcc_d[l_ac].glcc004 TO glcc004              #顯示到畫面上

            NEXT FIELD glcc004                          #返回原欄位]]>
  </point>
  <point name="input.c.page1.glcc007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.c.page1.glcc011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_glcc_d[l_ac].glcc011             #給予default值

            #給予arg

            CALL q_rtax001_1()                                #呼叫開窗

            LET g_glcc_d[l_ac].glcc011 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_glcc_d[l_ac].glcc011 TO glcc011              #顯示到畫面上

            NEXT FIELD glcc011                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.glcc012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_glcc_d[l_ac].glcc012             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "203" #

            CALL q_oocq002()                                #呼叫開窗

            LET g_glcc_d[l_ac].glcc012 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_glcc_d[l_ac].glcc012 TO glcc012              #顯示到畫面上

            NEXT FIELD glcc012                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.glcc013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_glcc_d[l_ac].glcc013             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "275" #

            CALL q_oocq002()                                #呼叫開窗

            LET g_glcc_d[l_ac].glcc013 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_glcc_d[l_ac].glcc013 TO glcc013              #顯示到畫面上

            NEXT FIELD glcc013                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.glcc014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_glcc_d[l_ac].glcc014             #給予default值

            #給予arg

            CALL q_ooef001()                                #呼叫開窗

            LET g_glcc_d[l_ac].glcc014 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_glcc_d[l_ac].glcc014 TO glcc014              #顯示到畫面上

            NEXT FIELD glcc014                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.glcc015" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_glcc_d[l_ac].glcc015             #給予default值

            #給予arg

            CALL q_inaa001_8()                                #呼叫開窗

            LET g_glcc_d[l_ac].glcc015 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_glcc_d[l_ac].glcc015 TO glcc015              #顯示到畫面上

            NEXT FIELD glcc015                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.glcc016" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_glcc_d[l_ac].glcc016             #給予default值

            #給予arg

            CALL q_imaa001()                                #呼叫開窗

            LET g_glcc_d[l_ac].glcc016 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_glcc_d[l_ac].glcc016 TO glcc016              #顯示到畫面上

            NEXT FIELD glcc016                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.glccseq" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               DEFINE l_forupd_sql           STRING
            DEFINE l_page_cnt    LIKE type_t.num5]]>
  </point>
  <point name="input.define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.g.chk01" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            CALL agli161_set_comp_visible()]]>
  </point>
  <point name="input.g.chk02" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            CALL agli161_set_comp_visible()]]>
  </point>
  <point name="input.g.chk03" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            CALL agli161_set_comp_visible()]]>
  </point>
  <point name="input.g.chk04" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            CALL agli161_set_comp_visible()]]>
  </point>
  <point name="input.g.chk05" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            CALL agli161_set_comp_visible()]]>
  </point>
  <point name="input.g.chk06" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            CALL agli161_set_comp_visible()]]>
  </point>
  <point name="input.g.glaa004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.glaa008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.glaa014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.glaacomp" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.glccld" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.page1.glcc001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.page1.glcc002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.page1.glcc003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.page1.glcc004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.page1.glcc007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.page1.glcc011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.page1.glcc012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.page1.glcc013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.page1.glcc014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.page1.glcc015" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.page1.glcc016" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.g.page1.glccseq" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                ]]>
  </point>
  <point name="input.head.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.head.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                                                    ]]>
  </point>
  <point name="input.head.b_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            CALL agli161_set_comp_visible()]]>
  </point>
  <point name="input.head.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.head.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="input.more_inputarray" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                              #Page2 預設值產生於此處
      INPUT ARRAY g_glcc3_d FROM s_detail3.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂單身ACTION
         
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_glcc3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL agli161_b_fill(g_wc2) 
            IF g_rec_b != 0 THEN
               CALL fgl_set_arr_curr(l_ac)
            END IF
            #add-point:資料輸入前
            LET l_page_cnt = g_glcc3_d.getLength()
            DISPLAY  l_page_cnt TO FORMONLY.cnt  
            LET g_rec_b = l_page_cnt
            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail3")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN agli161_cl USING g_enterprise,
                                               g_glcc_m.glccld
 
                                               
               IF STATUS THEN
                  CALL cl_err("OPEN agli161_cl:", STATUS, 1)
                  CLOSE agli161_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            
            IF g_rec_b >= l_ac 
               AND g_glcc3_d[l_ac].glcc001 IS NOT NULL
               AND g_glcc3_d[l_ac].glccseq IS NOT NULL
 
 
            THEN
               LET l_cmd='u'
               LET g_glcc3_d_t.* = g_glcc3_d[l_ac].*  #BACKUP
               CALL agli161_set_entry_b(l_cmd)
               CALL agli161_set_no_entry_b(l_cmd)
               OPEN agli161_bcl2 USING g_enterprise,g_glcc_m.glccld,
                                                g_glcc3_d_t.glcc001
                                                ,g_glcc3_d_t.glccseq
 
 
               IF STATUS THEN
                  CALL cl_err("OPEN agli161_bcl:", STATUS, 1)
                  LET l_lock_sw='Y'
               ELSE
                  FETCH agli161_bcl2 INTO g_glcc3_d[l_ac].glcc001,g_glcc3_d[l_ac].glccstus,g_glcc3_d[l_ac].glccseq, 
                      g_glcc3_d[l_ac].glcc011,g_glcc3_d[l_ac].glcc011_3_desc,g_glcc3_d[l_ac].glcc012,g_glcc3_d[l_ac].glcc012_3_desc, 
                      g_glcc3_d[l_ac].glcc013,g_glcc3_d[l_ac].glcc013_3_desc,g_glcc3_d[l_ac].glcc014,g_glcc3_d[l_ac].glcc014_3_desc, 
                      g_glcc3_d[l_ac].glcc015,g_glcc3_d[l_ac].glcc015_3_desc,g_glcc3_d[l_ac].glcc016,g_glcc3_d[l_ac].glcc016_3_desc, 
                      g_glcc3_d[l_ac].glcc016_3_desc_desc,
                      g_glcc3_d[l_ac].glcc003,g_glcc3_d[l_ac].glcc003_3_desc,g_glcc3_d[l_ac].glcc004,g_glcc3_d[l_ac].glcc004_3_desc, 
                      g_glcc3_d[l_ac].glcc007,g_glcc2_d[l_ac].glccseq,g_glcc2_d[l_ac].glcc001,g_glcc2_d[l_ac].glccownid, 
                      g_glcc2_d[l_ac].glccownid_desc,g_glcc2_d[l_ac].glccowndp,g_glcc2_d[l_ac].glccowndp_desc, 
                      g_glcc2_d[l_ac].glcccrtid,g_glcc2_d[l_ac].glcccrtid_desc,g_glcc2_d[l_ac].glcccrtdp, 
                      g_glcc2_d[l_ac].glcccrtdp_desc,g_glcc2_d[l_ac].glcccrtdt,g_glcc2_d[l_ac].glccmodid, 
                      g_glcc2_d[l_ac].glccmodid_desc,g_glcc2_d[l_ac].glccmoddt
                  LET g_glcc2_d[l_ac].glcc001 = g_glcc3_d[l_ac].glcc001
                  LET g_glcc2_d[l_ac].glccseq = g_glcc3_d[l_ac].glccseq
                  IF SQLCA.sqlcode THEN
                      CALL cl_err(g_glcc3_d_t.glcc001,SQLCA.sqlcode,1)
                      LET l_lock_sw = "Y"
                  END IF
                  
                  CALL agli161_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row

            #end add-point  
            
        
         BEFORE INSERT
            
            INITIALIZE g_glcc3_d_t.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_glcc3_d[l_ac].* TO NULL
            
            #公用欄位預設值
            #此段落由子樣板a14產生    
      LET g_glcc2_d[l_ac].glccownid = g_user
      LET g_glcc2_d[l_ac].glccowndp = g_dept
      LET g_glcc2_d[l_ac].glcccrtid = g_user
      LET g_glcc2_d[l_ac].glcccrtdp = g_dept 
      LET g_glcc2_d[l_ac].glcccrtdt = cl_get_current()
      LET g_glcc2_d[l_ac].glccmodid = ""
      LET g_glcc2_d[l_ac].glccmoddt = ""
      #LET g_glcc3_d[l_ac].glccstus = ""
 
  
            
            #一般欄位預設值
                  LET g_glcc3_d[l_ac].glccstus = "Y"
          LET g_glcc3_d[l_ac].glcc007 = "1"
 
 
            
            
            LET g_glcc3_d_t.* = g_glcc3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL agli161_set_entry_b(l_cmd)
            CALL agli161_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_glcc3_d[li_reproduce_target].* = g_glcc3_d[li_reproduce].*
               LET g_glcc2_d[li_reproduce_target].* = g_glcc2_d[li_reproduce].*
 
               LET g_glcc3_d[g_glcc3_d.getLength()].glcc001 = NULL
               LET g_glcc3_d[g_glcc3_d.getLength()].glccseq = NULL
 
 
            END IF
            
            #add-point:modify段before insert
            LET g_glcc3_d[l_ac].glcc001 = '2'
            SELECT MAX(glccseq)+1 INTO g_glcc3_d[l_ac].glccseq 
              FROM glcc_t
             WHERE glccent = g_enterprise AND glccld = g_glcc_m.glccld
               AND glcc001 = g_glcc3_d[l_ac].glcc001
            IF cl_null(g_glcc3_d[l_ac].glccseq) THEN
               LET g_glcc3_d[l_ac].glccseq = 1
            END IF
            LET g_glcc3_d[l_ac].glcc011 = '*'
            LET g_glcc3_d[l_ac].glcc012 = '*'
            LET g_glcc3_d[l_ac].glcc013 = '*'
            LET g_glcc3_d[l_ac].glcc014 = '*'
            LET g_glcc3_d[l_ac].glcc015 = '*'
            LET g_glcc3_d[l_ac].glcc016 = '*'
            
            #end add-point  
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM glcc_t 
             WHERE glccent = g_enterprise AND glccld = g_glcc_m.glccld
 
               AND glcc001 = g_glcc3_d[l_ac].glcc001
               AND glccseq = g_glcc3_d[l_ac].glccseq
 
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               #add-point:單身新增前
                IF cl_null(g_glcc3_d[l_ac].glcc011) THEN
                   LET g_glcc3_d[l_ac].glcc011 = '*'
                END IF   
               #end add-point
               INSERT INTO glcc_t
                           (glccent,
                            glccld,
                            glcc001,glccseq
                            ,glccstus,glcc011,glcc012,glcc013,glcc014,glcc015,glcc016,glcc003,glcc004,glcc007,glccownid,glccowndp,glcccrtid,glcccrtdp,glcccrtdt,glccmodid,glccmoddt) 
                     VALUES(g_enterprise,
                            g_glcc_m.glccld,
                            g_glcc3_d[l_ac].glcc001,g_glcc3_d[l_ac].glccseq
                            ,g_glcc3_d[l_ac].glccstus,g_glcc3_d[l_ac].glcc011,g_glcc3_d[l_ac].glcc012,g_glcc3_d[l_ac].glcc013, 
                                g_glcc3_d[l_ac].glcc014,g_glcc3_d[l_ac].glcc015,g_glcc3_d[l_ac].glcc016, 
                                g_glcc3_d[l_ac].glcc003,g_glcc3_d[l_ac].glcc004, 
                                g_glcc3_d[l_ac].glcc007,g_glcc2_d[l_ac].glccownid,g_glcc2_d[l_ac].glccowndp, 
                                g_glcc2_d[l_ac].glcccrtid,g_glcc2_d[l_ac].glcccrtdp,g_glcc2_d[l_ac].glcccrtdt, 
                                g_glcc2_d[l_ac].glccmodid,g_glcc2_d[l_ac].glccmoddt)
               #add-point:單身新增中

               #end add-point
               LET p_cmd = 'u'
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_glcc3_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("glcc_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #資料多語言用-增/改
               
               #add-point:input段-after_insert

               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR "INSERT O.K"
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
            END IF
            
            #add-point:單身新增後

            #end add-point
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_glcc3_d.deleteElement(l_ac)
               NEXT FIELD glcc001_3
            END IF
            IF g_glcc3_d_t.glcc001 IS NOT NULL
               AND g_glcc3_d_t.glccseq IS NOT NULL
 
 
               THEN
               
               #add-point:單身刪除前

               #end add-point
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               IF agli161_before_delete() THEN 
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE agli161_bcl2
               LET l_count = g_glcc3_d.getLength()
            END IF 
            
            #add-point:單身刪除後

            #end add-point
              
         AFTER DELETE 
            #add-point:單身AFTER DELETE 

            #end add-point
 
         #---------------------<  Detail: page1  >---------------------
         #----<<glcc001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD glcc001_3
            #add-point:BEFORE FIELD glcc001_3

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glcc001_3
            
            #add-point:AFTER FIELD glcc001_3
            #此段落由子樣板a05產生
            IF  g_glcc_m.glccld IS NOT NULL AND g_glcc3_d[g_detail_idx].glcc001 IS NOT NULL AND g_glcc3_d[g_detail_idx].glccseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glcc_m.glccld != g_glccld_t OR g_glcc3_d[g_detail_idx].glcc001 != g_glcc3_d_t.glcc001 OR g_glcc3_d[g_detail_idx].glccseq != g_glcc3_d_t.glccseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM glcc_t WHERE "||"glccent = '" ||g_enterprise|| "' AND "||"glccld = '"||g_glcc_m.glccld ||"' AND "|| "glcc001 = '"||g_glcc3_d[g_detail_idx].glcc001 ||"' AND "|| "glccseq = '"||g_glcc3_d[g_detail_idx].glccseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE glcc001_3
            #add-point:ON CHANGE glcc001

            #END add-point
 
         #----<<glccstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD glccstus_3
            #add-point:BEFORE FIELD glccstus

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glccstus_3
            
            #add-point:AFTER FIELD glccstus_3

            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE glccstus_3
            #add-point:ON CHANGE glccstus_3

            #END add-point
 
         #----<<glccseq>>----
         #此段落由子樣板a01產生
         BEFORE FIELD glccseq_3
            #add-point:BEFORE FIELD glccseq_3

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glccseq_3
            
            #add-point:AFTER FIELD glccseq_3
            #此段落由子樣板a05產生
            IF  g_glcc_m.glccld IS NOT NULL AND g_glcc3_d[g_detail_idx].glcc001 IS NOT NULL AND g_glcc3_d[g_detail_idx].glccseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glcc_m.glccld != g_glccld_t OR g_glcc3_d[g_detail_idx].glcc001 != g_glcc3_d_t.glcc001 OR g_glcc3_d[g_detail_idx].glccseq != g_glcc3_d_t.glccseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM glcc_t WHERE "||"glccent = '" ||g_enterprise|| "' AND "||"glccld = '"||g_glcc_m.glccld ||"' AND "|| "glcc001 = '"||g_glcc3_d[g_detail_idx].glcc001 ||"' AND "|| "glccseq = '"||g_glcc3_d[g_detail_idx].glccseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE glccseq_3
            #add-point:ON CHANGE glccseq_3

            #END add-point
 
         #----<<glcc011>>----
         #此段落由子樣板a02產生
         AFTER FIELD glcc011_3
            
            #add-point:AFTER FIELD glcc011_3
            ### 產品類別存在性檢查### start ###
            IF NOT cl_null(g_glcc3_d[l_ac].glcc011) AND g_glcc3_d[l_ac].glcc011 <> '*' THEN
               INITIALIZE g_chkparam.* TO NULL 
               LET g_chkparam.arg1 = g_glcc3_d[l_ac].glcc011
               IF NOT cl_chk_exist("v_rtax001") THEN
                  LET g_glcc3_d[l_ac].glcc011 = g_glcc3_d_t.glcc011
                  NEXT FIELD glcc011_3
               END IF
            END IF
            ### 產品類別存在性檢查### end ###            

            IF cl_null(g_glcc3_d[l_ac].glcc011) THEN
               LET g_glcc3_d[l_ac].glcc011 = '*'
            END IF           
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc3_d[l_ac].glcc011
            CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glcc3_d[l_ac].glcc011_3_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc3_d[l_ac].glcc011_3_desc

            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD glcc011_3
            #add-point:BEFORE FIELD glcc011_3

            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE glcc011_3
            #add-point:ON CHANGE glcc011_3

            #END add-point
 
         #----<<glcc012>>----
         #此段落由子樣板a02產生
         AFTER FIELD glcc012_3
            
            #add-point:AFTER FIELD glcc012_3
            
            ### 檢查應用分類碼是否存在### start ###
            IF NOT cl_null(g_glcc3_d[l_ac].glcc012) AND g_glcc3_d[l_ac].glcc012 <> '*' THEN
               INITIALIZE g_chkparam.* TO NULL 
               LET g_chkparam.arg1 = '202'
               LET g_chkparam.arg2 = g_glcc3_d[l_ac].glcc012
               IF NOT cl_chk_exist("v_oocq002_1") THEN
                  LET g_glcc3_d[l_ac].glcc012 = g_glcc3_d_t.glcc012
                  NEXT FIELD glcc012_3
               END IF
            END IF
            ### 檢查應用分類碼是否存在### end ###   
            IF cl_null(g_glcc3_d[l_ac].glcc012) THEN
               LET g_glcc3_d[l_ac].glcc012 = '*'
            END IF   
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc3_d[l_ac].glcc012
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='202' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glcc3_d[l_ac].glcc012_3_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc3_d[l_ac].glcc012_3_desc

            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD glcc012_3
            #add-point:BEFORE FIELD glcc012_3

            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE glcc012_3
            #add-point:ON CHANGE glcc012_3

            #END add-point
 
         #----<<glcc013>>----
         #此段落由子樣板a02產生
         AFTER FIELD glcc013_3
            
            #add-point:AFTER FIELD glcc013
             ### 檢查應用分類碼是否存在### start ###
            IF NOT cl_null(g_glcc3_d[l_ac].glcc013) AND g_glcc3_d[l_ac].glcc013 <> '*' THEN
               INITIALIZE g_chkparam.* TO NULL 
               LET g_chkparam.arg1 = '275'
               LET g_chkparam.arg2 = g_glcc3_d[l_ac].glcc013
               IF NOT cl_chk_exist("v_oocq002_1") THEN
                  LET g_glcc3_d[l_ac].glcc013 = g_glcc3_d_t.glcc013
                  NEXT FIELD glcc013_3
               END IF
            END IF
            ### 檢查應用分類碼是否存在### end ###            
            IF cl_null(g_glcc3_d[l_ac].glcc013) THEN
               LET g_glcc3_d[l_ac].glcc013 = '*'
            END IF               
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc3_d[l_ac].glcc013
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='275' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glcc3_d[l_ac].glcc013_3_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc3_d[l_ac].glcc013_3_desc

            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD glcc013_3
            #add-point:BEFORE FIELD glcc013_3

            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE glcc013_3
            #add-point:ON CHANGE glcc013

            #END add-point
 
         #----<<glcc014>>----
         #此段落由子樣板a02產生
         AFTER FIELD glcc014_3
            
            #add-point:AFTER FIELD glcc014_3
            ### 組織編號檢查### start ###
           IF NOT cl_null(g_glcc3_d[l_ac].glcc014) AND g_glcc3_d[l_ac].glcc014 <> '*' THEN
               INITIALIZE g_chkparam.* TO NULL 
               LET g_chkparam.arg1 = g_glcc3_d[l_ac].glcc014
               IF NOT cl_chk_exist("v_ooef001") THEN
                  LET g_glcc3_d[l_ac].glcc014 = g_glcc3_d_t.glcc014
                  NEXT FIELD glcc014_3
               END IF
            END IF
            ### 組織編號檢查### end ###
            IF cl_null(g_glcc3_d[l_ac].glcc014) THEN
               LET g_glcc3_d[l_ac].glcc014 = '*'
            END IF               
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc3_d[l_ac].glcc014
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glcc3_d[l_ac].glcc014_3_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc3_d[l_ac].glcc014_3_desc

            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD glcc014_3
            #add-point:BEFORE FIELD glcc014_3

            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE glcc014_3
            #add-point:ON CHANGE glcc014_3

            #END add-point
 
         #----<<glcc015>>----
         #此段落由子樣板a02產生
         AFTER FIELD glcc015_3
            
            #add-point:AFTER FIELD glcc015_3
            
            ### 庫位編號檢查### start ###
           IF NOT cl_null(g_glcc3_d[l_ac].glcc015) AND g_glcc3_d[l_ac].glcc015 <> '*' THEN
               INITIALIZE g_chkparam.* TO NULL 
               LET g_chkparam.arg1 = g_glcc3_d[l_ac].glcc015
               IF NOT cl_chk_exist("v_inaa001_5") THEN
                  LET g_glcc3_d[l_ac].glcc015 = g_glcc3_d_t.glcc015
                  NEXT FIELD glcc015_3
               END IF
            END IF
            ### 庫位編號檢查### end ###
            IF cl_null(g_glcc3_d[l_ac].glcc015) THEN
               LET g_glcc3_d[l_ac].glcc015 = '*'
            END IF               
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc3_d[l_ac].glcc015
            CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaa001=? AND ROWNUM=1 ","") RETURNING g_rtn_fields
            LET g_glcc3_d[l_ac].glcc015_3_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc3_d[l_ac].glcc015_3_desc

            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD glcc015_3
            #add-point:BEFORE FIELD glcc015_3

            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE glcc015_3
            #add-point:ON CHANGE glcc015_3

            #END add-point
 
         #----<<glcc016>>----
         #此段落由子樣板a02產生
         AFTER FIELD glcc016_3
            
            #add-point:AFTER FIELD glcc016_3
            
            ### 料件編號存在檢查### start ###
           IF NOT cl_null(g_glcc3_d[l_ac].glcc016) AND g_glcc3_d[l_ac].glcc016 <> '*' THEN
               INITIALIZE g_chkparam.* TO NULL 
               LET g_chkparam.arg1 = g_glcc3_d[l_ac].glcc016
               IF NOT cl_chk_exist("v_imaa001") THEN
                  LET g_glcc3_d[l_ac].glcc016 = g_glcc3_d_t.glcc016
                  NEXT FIELD glcc016_3
               END IF
            END IF
            ### 料件編號存在檢查### end ###
            IF cl_null(g_glcc3_d[l_ac].glcc016) THEN
               LET g_glcc3_d[l_ac].glcc016 = '*'
            END IF               
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc3_d[l_ac].glcc016
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glcc3_d[l_ac].glcc016_3_desc = '', g_rtn_fields[1] , ''
            LET g_glcc3_d[l_ac].glcc016_3_desc_desc = '', g_rtn_fields[2] , ''
            DISPLAY BY NAME g_glcc3_d[l_ac].glcc016_3_desc
            DISPLAY BY NAME g_glcc3_d[l_ac].glcc016_3_desc_desc
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD glcc016_3
            #add-point:BEFORE FIELD glcc016_3

            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE glcc016_3
            #add-point:ON CHANGE glcc016_3

            #END add-point
 
 
         #----<<glcc003>>----
         #此段落由子樣板a02產生
         AFTER FIELD glcc003_3
            
            #add-point:AFTER FIELD glcc003_3
           
            ### 會計科目存在性檢查### start ###
           IF NOT cl_null(g_glcc3_d[l_ac].glcc003) THEN
               INITIALIZE g_chkparam.* TO NULL 
               LET g_chkparam.arg1 = g_glcc_m.glaa004
               LET g_chkparam.arg2 = g_glcc3_d[l_ac].glcc003
               IF NOT cl_chk_exist("v_glac002_4") THEN
                  LET g_glcc3_d[l_ac].glcc003 = g_glcc3_d_t.glcc003
                  NEXT FIELD glcc003_3
               END IF
            END IF
            ### 會計科目存在性檢查### end ###
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc_m.glaa004
            LET g_ref_fields[2] = g_glcc3_d[l_ac].glcc003
            CALL ap_ref_array2(g_ref_fields,"SELECT glacl004 FROM glacl_t WHERE glaclent='"||g_enterprise||"' AND glacl001=? AND glacl002=? AND glacl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glcc3_d[l_ac].glcc003_3_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc3_d[l_ac].glcc003_3_desc

            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD glcc003_3
            #add-point:BEFORE FIELD glcc003_3            
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE glcc003_3
            #add-point:ON CHANGE glcc003_3

            #END add-point
 
         #----<<glcc004>>----
         #此段落由子樣板a02產生
         AFTER FIELD glcc004_3
            
            #add-point:AFTER FIELD glcc004_3
            
            ### 會計科目存在性檢查### start ###
           IF NOT cl_null(g_glcc3_d[l_ac].glcc004) THEN
               INITIALIZE g_chkparam.* TO NULL 
               LET g_chkparam.arg1 = g_glcc_m.glaa004
               LET g_chkparam.arg2 = g_glcc3_d[l_ac].glcc004
               IF NOT cl_chk_exist("v_glac002_4") THEN
                  LET g_glcc3_d[l_ac].glcc004 = g_glcc3_d_t.glcc004
                  NEXT FIELD glcc004_3
               END IF
            END IF
            ### 會計科目存在性檢查### end ###            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc_m.glaa004
            LET g_ref_fields[2] = g_glcc3_d[l_ac].glcc004
            CALL ap_ref_array2(g_ref_fields,"SELECT glacl004 FROM glacl_t WHERE glaclent='"||g_enterprise||"' AND glacl001=? AND glacl002=? AND glacl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glcc3_d[l_ac].glcc004_3_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc3_d[l_ac].glcc004_3_desc

            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD glcc004_3
            #add-point:BEFORE FIELD glcc004_3
            IF cl_null(g_glcc3_d[l_ac].glcc003) AND l_cmd ='a' THEN
               LET g_glcc3_d[l_ac].glcc004 = g_glcc3_d[l_ac].glcc003
               DISPLAY BY NAME g_glcc3_d[l_ac].glcc004 
            END IF
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE glcc004_3
            #add-point:ON CHANGE glcc004

            #END add-point
 
         #----<<glcc007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD glcc007_3
            #add-point:BEFORE FIELD glcc007

            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glcc007_3
            
            #add-point:AFTER FIELD glcc007

            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE glcc007_3
            #add-point:ON CHANGE glcc007

            #END add-point
 
 
         #---------------------<  Detail: page1  >---------------------
         #----<<glcc001>>----
         #Ctrlp:input.c.page1.glcc001
         ON ACTION controlp INFIELD glcc001_3
            #add-point:ON ACTION controlp INFIELD glcc001

            #END add-point
 
         #----<<glccstus>>----
         #Ctrlp:input.c.page1.glccstus
         ON ACTION controlp INFIELD glccstus_3
            #add-point:ON ACTION controlp INFIELD glccstus

            #END add-point
 
         #----<<glccseq>>----
         #Ctrlp:input.c.page1.glccseq
         ON ACTION controlp INFIELD glccseq_3
            #add-point:ON ACTION controlp INFIELD glccseq

            #END add-point
 
         #----<<glcc011>>----
         #Ctrlp:input.c.page1.glcc011
         ON ACTION controlp INFIELD glcc011_3
            #add-point:ON ACTION controlp INFIELD glcc011
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_glcc3_d[l_ac].glcc011             #給予default值

            #給予arg

            CALL q_rtax001_1()                                #呼叫開窗

            LET g_glcc3_d[l_ac].glcc011 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_glcc3_d[l_ac].glcc011 TO glcc011_3              #顯示到畫面上

            NEXT FIELD glcc011_3                          #返回原欄位


            #END add-point
 
         #----<<glcc012>>----
         #Ctrlp:input.c.page1.glcc012
         ON ACTION controlp INFIELD glcc012_3
            #add-point:ON ACTION controlp INFIELD glcc012
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_glcc3_d[l_ac].glcc012             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "202" #

            CALL q_oocq002()                                #呼叫開窗

            LET g_glcc3_d[l_ac].glcc012 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_glcc3_d[l_ac].glcc012 TO glcc012_3              #顯示到畫面上

            NEXT FIELD glcc012_3                         #返回原欄位


            #END add-point
 
         #----<<glcc013>>----
         #Ctrlp:input.c.page1.glcc013
         ON ACTION controlp INFIELD glcc013_3
            #add-point:ON ACTION controlp INFIELD glcc013
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_glcc3_d[l_ac].glcc013             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "275" #

            CALL q_oocq002()                                #呼叫開窗

            LET g_glcc3_d[l_ac].glcc013 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_glcc3_d[l_ac].glcc013 TO glcc013_3              #顯示到畫面上

            NEXT FIELD glcc013_3                          #返回原欄位


            #END add-point
 
         #----<<glcc014>>----
         #Ctrlp:input.c.page1.glcc014
         ON ACTION controlp INFIELD glcc014_3
            #add-point:ON ACTION controlp INFIELD glcc014_3
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_glcc3_d[l_ac].glcc014             #給予default值

            #給予arg

            CALL q_ooef001()                                #呼叫開窗

            LET g_glcc3_d[l_ac].glcc014 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_glcc3_d[l_ac].glcc014 TO glcc014_3              #顯示到畫面上

            NEXT FIELD glcc014_3                          #返回原欄位


            #END add-point
 
         #----<<glcc015>>----
         #Ctrlp:input.c.page1.glcc015
         ON ACTION controlp INFIELD glcc015_3
            #add-point:ON ACTION controlp INFIELD glcc015
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_glcc3_d[l_ac].glcc015             #給予default值

            #給予arg

            CALL q_inaa001_8()                                #呼叫開窗

            LET g_glcc3_d[l_ac].glcc015 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_glcc3_d[l_ac].glcc015 TO glcc015_3              #顯示到畫面上

            NEXT FIELD glcc015_3                          #返回原欄位


            #END add-point
 
         #----<<glcc016>>----
         #Ctrlp:input.c.page1.glcc016
         ON ACTION controlp INFIELD glcc016_3
            #add-point:ON ACTION controlp INFIELD glcc016
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_glcc3_d[l_ac].glcc016             #給予default值

            #給予arg

            CALL q_imaa001()                                #呼叫開窗

            LET g_glcc3_d[l_ac].glcc016 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_glcc3_d[l_ac].glcc016 TO glcc016_3              #顯示到畫面上

            NEXT FIELD glcc016_3                          #返回原欄位


            #END add-point
 
        
         #----<<glcc003>>----
         #Ctrlp:input.c.page1.glcc003
         ON ACTION controlp INFIELD glcc003_3
            #add-point:ON ACTION controlp INFIELD glcc003
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " glac001='",g_glcc_m.glaa004,"'  AND glacstus='Y' AND glac003<>'1' "
            LET g_qryparam.default1 = g_glcc3_d[l_ac].glcc003             #給予default值
 
            #給予arg

            CALL aglt310_04()                                #呼叫開窗

            LET g_glcc3_d[l_ac].glcc003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_glcc3_d[l_ac].glcc003 TO glcc003_3              #顯示到畫面上

            NEXT FIELD glcc003_3                          #返回原欄位
            #END add-point
 
         #----<<glcc004>>----
         #Ctrlp:input.c.page1.glcc004
         ON ACTION controlp INFIELD glcc004_3
            #add-point:ON ACTION controlp INFIELD glcc004
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_glcc3_d[l_ac].glcc004             #給予default值
            LET g_qryparam.where = " glac001='",g_glcc_m.glaa004,"' AND glacstus='Y' AND glac003<>'1' "
            #給予arg

            CALL aglt310_04()                                #呼叫開窗

            LET g_glcc3_d[l_ac].glcc004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_glcc3_d[l_ac].glcc004 TO glcc004_3              #顯示到畫面上

            NEXT FIELD glcc004_3                          #返回原欄位
            #END add-point
 
         #----<<glcc007>>----
         #Ctrlp:input.c.page1.glcc007
         ON ACTION controlp INFIELD glcc007_3
            #add-point:ON ACTION controlp INFIELD glcc007_3

            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_glcc3_d[l_ac].* = g_glcc3_d_t.*
               CLOSE agli161_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_glcc3_d[l_ac].glcc001,-263,1)
               LET g_glcc3_d[l_ac].* = g_glcc3_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               LET g_glcc2_d[l_ac].glccmodid = g_user 
               LET g_glcc2_d[l_ac].glccmoddt = cl_get_current()
 
            
               #add-point:單身修改前

               #end add-point
         
               UPDATE glcc_t SET (glccld,glcc001,glccstus,glccseq,glcc011,glcc012,glcc013,glcc014,glcc015, 
glcc016,glcc003,glcc004,glcc007,glccownid,glccowndp,glcccrtid,glcccrtdp,glcccrtdt, 
                   glccmodid,glccmoddt) = (g_glcc_m.glccld,g_glcc3_d[l_ac].glcc001,g_glcc3_d[l_ac].glccstus, 
                   g_glcc3_d[l_ac].glccseq,g_glcc3_d[l_ac].glcc011,g_glcc3_d[l_ac].glcc012,g_glcc3_d[l_ac].glcc013, 
                   g_glcc3_d[l_ac].glcc014,g_glcc3_d[l_ac].glcc015,g_glcc3_d[l_ac].glcc016,
                   g_glcc3_d[l_ac].glcc003,g_glcc3_d[l_ac].glcc004,g_glcc3_d[l_ac].glcc007,g_glcc2_d[l_ac].glccownid, 
                   g_glcc2_d[l_ac].glccowndp,g_glcc2_d[l_ac].glcccrtid,g_glcc2_d[l_ac].glcccrtdp,g_glcc2_d[l_ac].glcccrtdt, 
                   g_glcc2_d[l_ac].glccmodid,g_glcc2_d[l_ac].glccmoddt)
                WHERE glccent = g_enterprise AND glccld = g_glcc_m.glccld 
                 AND glcc001 = g_glcc3_d_t.glcc001 #項次   
                 AND glccseq = g_glcc3_d_t.glccseq  
 
 
                 
               #add-point:單身修改中

               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("glcc_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   CALL cl_err("glcc_t",SQLCA.sqlcode,1)  
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_glcc_m.glccld
               LET gs_keys_bak[1] = g_glccld_t
               LET gs_keys[2] = g_glcc3_d[g_detail_idx].glcc001
               LET gs_keys_bak[2] = g_glcc3_d_t.glcc001
               LET gs_keys[3] = g_glcc3_d[g_detail_idx].glccseq
               LET gs_keys_bak[3] = g_glcc3_d_t.glccseq
               CALL agli161_update_b('glcc_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #add-point:單身修改後

               #end add-point
            END IF
            
         AFTER ROW
            IF cl_null(g_glcc3_d[l_ac].glcc011) THEN
               LET g_glcc3_d[l_ac].glcc011 = '*'
               DISPLAY BY NAME g_glcc3_d[l_ac].glcc011
            END IF 
            
         AFTER INPUT
            #若單身還沒有輸入資料, 強制切換至單身
            IF cl_null(g_glcc3_d[1].glcc001) THEN
               CALL g_glcc3_d.deleteElement(1)
               NEXT FIELD glcc001_3
            END IF
            #add-point:input段after input 

            #end add-point    
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_glcc3_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_glcc3_d.getLength()+1
            
      END INPUT
      
      ]]>
  </point>
  <point name="insert.after_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="insert.after_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="insert.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                              CALL g_glcc3_d.clear()]]>
  </point>
  <point name="insert.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="insert_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="lock_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="main.after_define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="main.before_close" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="main.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="main.define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="main.exit" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="main.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      LET g_glccld_p = g_argv[1]
   LET g_current_page = '1'   #page1]]>
  </point>
  <point name="main.servicecall" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="menu.delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="menu.insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="menu.modify" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="menu.modify_detail" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="menu.output" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="menu.query" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="menu.reproduce" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                            ]]>
  </point>
  <point name="modify.a_key_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="modify.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="modify.b_key_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="modify.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                             LET  g_glcc_m.chk01 = l_chk01 
     LET  g_glcc_m.chk02 = l_chk02 
     LET  g_glcc_m.chk03 = l_chk03 
     LET  g_glcc_m.chk04 = l_chk04 
     LET  g_glcc_m.chk05 = l_chk05 
     LET  g_glcc_m.chk06 = l_chk06
     DISPLAY BY NAME   g_glcc_m.chk01,g_glcc_m.chk02,g_glcc_m.chk03,
                       g_glcc_m.chk04,g_glcc_m.chk05,g_glcc_m.chk06     
     CALL agli161_set_comp_visible()]]>
  </point>
  <point name="modify.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            DEFINE l_chk01,l_chk02,l_chk03,l_chk04,l_chk05,l_chk06 LIKE type_t.chr1

    LET l_chk01 = g_glcc_m.chk01
    LET l_chk02 = g_glcc_m.chk02
    LET l_chk03 = g_glcc_m.chk03
    LET l_chk04 = g_glcc_m.chk04
    LET l_chk05 = g_glcc_m.chk05
    LET l_chk06 = g_glcc_m.chk06]]>
  </point>
  <point name="modify.m_key_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="modify_detail_chk.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="modify_detail_chk.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="modify_detail_chk.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="modify_detail_chk.page_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="query.befroe_query" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL g_glcc3_d.clear()]]>
  </point>
  <point name="query.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="ref_show.body.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc_d[l_ac].glcc011
            CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glcc_d[l_ac].glcc011_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc_d[l_ac].glcc011_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc_d[l_ac].glcc012
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='203' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glcc_d[l_ac].glcc012_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc_d[l_ac].glcc012_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc_d[l_ac].glcc013
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='275' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glcc_d[l_ac].glcc013_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc_d[l_ac].glcc013_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc_d[l_ac].glcc014
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glcc_d[l_ac].glcc014_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc_d[l_ac].glcc014_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc_d[l_ac].glcc015
            CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"'  AND inaa001=? AND ROWNUM=1","") RETURNING g_rtn_fields
            LET g_glcc_d[l_ac].glcc015_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc_d[l_ac].glcc015_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc_d[l_ac].glcc016
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glcc_d[l_ac].glcc016_desc = '', g_rtn_fields[1] , ''
            LET g_glcc_d[l_ac].glcc016_desc_desc = '', g_rtn_fields[2] , ''
            DISPLAY BY NAME g_glcc_d[l_ac].glcc016_desc
            DISPLAY BY NAME g_glcc_d[l_ac].glcc016_desc_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc_m.glaa004
            LET g_ref_fields[2] = g_glcc_d[l_ac].glcc002
            CALL ap_ref_array2(g_ref_fields,"SELECT glacl004 FROM glacl_t WHERE glaclent='"||g_enterprise||"' AND glacl001=? AND glacl002=? AND glacl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glcc_d[l_ac].glcc002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc_d[l_ac].glcc002_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc_m.glaa004
            LET g_ref_fields[2] = g_glcc_d[l_ac].glcc003
            CALL ap_ref_array2(g_ref_fields,"SELECT glacl004 FROM glacl_t WHERE glaclent='"||g_enterprise||"' AND glacl001=? AND glacl002=? AND glacl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glcc_d[l_ac].glcc003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc_d[l_ac].glcc003_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc_m.glaa004
            LET g_ref_fields[2] = g_glcc_d[l_ac].glcc004
            CALL ap_ref_array2(g_ref_fields,"SELECT glacl004 FROM glacl_t WHERE glaclent='"||g_enterprise||"' AND glacl001=? AND glacl002=? AND glacl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glcc_d[l_ac].glcc004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc_d[l_ac].glcc004_desc

]]>
  </point>
  <point name="ref_show.body2.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                    INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc2_d[l_ac].glccownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_glcc2_d[l_ac].glccownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc2_d[l_ac].glccownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc2_d[l_ac].glccowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glcc2_d[l_ac].glccowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc2_d[l_ac].glccowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc2_d[l_ac].glcccrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_glcc2_d[l_ac].glcccrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc2_d[l_ac].glcccrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc2_d[l_ac].glcccrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glcc2_d[l_ac].glcccrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc2_d[l_ac].glcccrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc2_d[l_ac].glccmodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_glcc2_d[l_ac].glccmodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc2_d[l_ac].glccmodid_desc

]]>
  </point>
  <point name="ref_show.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="ref_show.head.reference" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#               INITIALIZE g_ref_fields TO NULL
#   LET g_ref_fields[1] = g_glcc_m.glccld
#   CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
#   LET g_glcc_m.glccld_desc = '', g_rtn_fields[1] , ''
#   DISPLAY BY NAME g_glcc_m.glccld_desc
   CALL agli161_glccld_desc()

 #讀入ref值(單身)
   FOR l_ac = 1 TO g_glcc3_d.getLength()
      #add-point:ref_show段d_reference
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc3_d[l_ac].glcc011
            CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glcc3_d[l_ac].glcc011_3_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc3_d[l_ac].glcc011_3_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc3_d[l_ac].glcc012
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='202' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glcc3_d[l_ac].glcc012_3_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc3_d[l_ac].glcc012_3_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc3_d[l_ac].glcc013
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='275' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glcc3_d[l_ac].glcc013_3_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc3_d[l_ac].glcc013_3_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc3_d[l_ac].glcc014
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glcc3_d[l_ac].glcc014_3_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc3_d[l_ac].glcc014_3_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc3_d[l_ac].glcc015
            CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaa001=? AND ROWNUM=1","") RETURNING g_rtn_fields
            LET g_glcc3_d[l_ac].glcc015_3_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc3_d[l_ac].glcc015_3_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc3_d[l_ac].glcc016
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glcc3_d[l_ac].glcc016_3_desc = '', g_rtn_fields[1] , ''
            LET g_glcc3_d[l_ac].glcc016_3_desc_desc = '', g_rtn_fields[2] , ''
            DISPLAY BY NAME g_glcc3_d[l_ac].glcc016_3_desc
            DISPLAY BY NAME g_glcc3_d[l_ac].glcc016_3_desc_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc_m.glaa004
            LET g_ref_fields[2] = g_glcc3_d[l_ac].glcc003
            CALL ap_ref_array2(g_ref_fields,"SELECT glacl004 FROM glacl_t WHERE glaclent='"||g_enterprise||"' AND glacl001=? AND glacl002=? AND glacl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glcc3_d[l_ac].glcc003_3_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc3_d[l_ac].glcc003_3_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glcc_m.glaa004
            LET g_ref_fields[2] = g_glcc3_d[l_ac].glcc004
            CALL ap_ref_array2(g_ref_fields,"SELECT glacl004 FROM glacl_t WHERE glaclent='"||g_enterprise||"' AND glacl001=? AND glacl002=? AND glacl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glcc3_d[l_ac].glcc004_3_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glcc3_d[l_ac].glcc004_3_desc

      #end add-point
   END FOR   ]]>
  </point>
  <point name="reproduce.after_reproduce" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="reproduce.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="set_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="set_entry.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="set_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="set_entry_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="set_entry_b.set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="set_no_entry.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="set_no_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="set_no_entry_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="set_no_entry_b.set_no_entry_b段" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="show.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="show.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF cl_null(g_glcc_m.chk01) THEN  LET g_glcc_m.chk01 = 'Y' END IF
   IF cl_null(g_glcc_m.chk02) THEN  LET g_glcc_m.chk02 = 'Y' END IF
   IF cl_null(g_glcc_m.chk03) THEN  LET g_glcc_m.chk03 = 'N' END IF
   IF cl_null(g_glcc_m.chk04) THEN  LET g_glcc_m.chk04 = 'N' END IF
   IF cl_null(g_glcc_m.chk05) THEN  LET g_glcc_m.chk05 = 'Y' END IF
   IF cl_null(g_glcc_m.chk06) THEN  LET g_glcc_m.chk06 = 'N' END IF
   CALL agli161_set_comp_visible()
   CALL agli161_glccld_desc()]]>
  </point>
  <point name="show.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="ui_browser_refresh.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="ui_detailshow.after" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="ui_detailshow.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="ui_detailshow.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="ui_detailshow.more" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                        ]]>
  </point>
  <point name="ui_dialog.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="ui_dialog.before_dialog2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                                 ]]>
  </point>
  <point name="ui_dialog.body.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             LET l_page_cnt = g_glcc_d.getLength()
               DISPLAY  l_page_cnt TO FORMONLY.cnt              ]]>
  </point>
  <point name="ui_dialog.body2.action" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                            LET g_current_page = 2                         ]]>
  </point>
  <point name="ui_dialog.body2.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                              LET l_page_cnt = g_glcc2_d.getLength()
               DISPLAY  l_page_cnt TO FORMONLY.cnt                               ]]>
  </point>
  <point name="ui_dialog.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         DEFINE l_page_cnt  LIKE type_t.num5   ]]>
  </point>
  <point name="ui_dialog.more_displayarray" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                                             DISPLAY ARRAY g_glcc3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
         
            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL agli161_ui_detailshow()
               
               #add-point:page1自定義行為
               LET l_page_cnt = g_glcc3_d.getLength()
               DISPLAY  l_page_cnt TO FORMONLY.cnt   
               #end add-point
			
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)      
            
         
            #add-point:page3自定義行為
               LET g_current_page = 3       
            #end add-point
         
         END DISPLAY]]>
  </point>
  <point name="ui_dialog.page1.action" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                            LET g_current_page = 1                          ]]>
  </point>
  <point name="ui_headershow.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="unlock_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="update_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <section id="agli161.b_fill" ver="7" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION agli161_b_fill(p_wc2)
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   #先清空單身變數內容
   CALL g_glcc_d.clear()
   CALL g_glcc2_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   LET g_sql = "SELECT  UNIQUE glcc001,glccstus,glccseq,glcc011,glcc012,glcc013,glcc014,glcc015,glcc016, 
       glcc002,glcc003,glcc004,glcc007,glcc001,glccseq,glccownid,glccowndp,glcccrtid,glcccrtdp,glcccrtdt, 
       glccmodid,glccmoddt,t1.rtaxl003 ,t2.oocql004 ,t3.oocql004 ,t4.ooefl003 ,t5.inaa002 ,t6.imaal003 , 
       t7.imaal004 ,t8.oofa011 ,t9.ooefl003 ,t10.oofa011 ,t11.ooefl003 ,t12.oofa011 FROM glcc_t",    

               "",
               
                              " LEFT JOIN rtaxl_t t1 ON t1.rtaxlent='"||g_enterprise||"' AND t1.rtaxl001=glcc011 AND t1.rtaxl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t2 ON t2.oocqlent='"||g_enterprise||"' AND t2.oocql001='203' AND t2.oocql002=glcc012 AND t2.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t3 ON t3.oocqlent='"||g_enterprise||"' AND t3.oocql001='275' AND t3.oocql002=glcc013 AND t3.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=glcc014 AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN inaa_t t5 ON t5.inaaent='"||g_enterprise||"' AND t5.inaasite=glcc014 AND t5.inaa001=glcc015  ",
               " LEFT JOIN imaal_t t6 ON t6.imaalent='"||g_enterprise||"' AND t6.imaal001=glcc016 AND t6.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t7 ON t7.imaalent='"||g_enterprise||"' AND t7.imaal001=glcc016 AND t7.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t8 ON t8.oofaent='"||g_enterprise||"' AND t8.oofa002='2' AND t8.oofa003=glccownid  ",
               " LEFT JOIN ooefl_t t9 ON t9.ooeflent='"||g_enterprise||"' AND t9.ooefl001=glccowndp AND t9.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t10 ON t10.oofaent='"||g_enterprise||"' AND t10.oofa002='2' AND t10.oofa003=glcccrtid  ",
               " LEFT JOIN ooefl_t t11 ON t11.ooeflent='"||g_enterprise||"' AND t11.ooefl001=glcccrtdp AND t11.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t12 ON t12.oofaent='"||g_enterprise||"' AND t12.oofa002='2' AND t12.oofa003=glccmodid  ",
 
               " WHERE glccent= ? AND glccld=?"  
 
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table1 CLIPPED, cl_sql_add_filter("glcc_t")
   END IF
   
   #add-point:b_fill段sql_after
   {<point name="b_fill.sql_after"/>}
   #end add-point
   
   #子單身的WC
   
   
   #判斷是否填充
   IF agli161_fill_chk(1) THEN
      LET g_sql = g_sql, " ORDER BY glcc_t.glcc001,glcc_t.glccseq"
      
      #add-point:b_fill段fill_before
      {<point name="b_fill.fill_before"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE agli161_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR agli161_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_glcc_m.glccld
                                               
      FOREACH b_fill_cs INTO g_glcc_d[l_ac].glcc001,g_glcc_d[l_ac].glccstus,g_glcc_d[l_ac].glccseq,g_glcc_d[l_ac].glcc011, 
          g_glcc_d[l_ac].glcc012,g_glcc_d[l_ac].glcc013,g_glcc_d[l_ac].glcc014,g_glcc_d[l_ac].glcc015, 
          g_glcc_d[l_ac].glcc016,g_glcc_d[l_ac].glcc002,g_glcc_d[l_ac].glcc003,g_glcc_d[l_ac].glcc004, 
          g_glcc_d[l_ac].glcc007,g_glcc2_d[l_ac].glcc001,g_glcc2_d[l_ac].glccseq,g_glcc2_d[l_ac].glccownid, 
          g_glcc2_d[l_ac].glccowndp,g_glcc2_d[l_ac].glcccrtid,g_glcc2_d[l_ac].glcccrtdp,g_glcc2_d[l_ac].glcccrtdt, 
          g_glcc2_d[l_ac].glccmodid,g_glcc2_d[l_ac].glccmoddt,g_glcc_d[l_ac].glcc011_desc,g_glcc_d[l_ac].glcc012_desc, 
          g_glcc_d[l_ac].glcc013_desc,g_glcc_d[l_ac].glcc014_desc,g_glcc_d[l_ac].glcc015_desc,g_glcc_d[l_ac].glcc016_desc, 
          g_glcc_d[l_ac].glcc016_desc_desc,g_glcc2_d[l_ac].glccownid_desc,g_glcc2_d[l_ac].glccowndp_desc, 
          g_glcc2_d[l_ac].glcccrtid_desc,g_glcc2_d[l_ac].glcccrtdp_desc,g_glcc2_d[l_ac].glccmodid_desc 

                             
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
                           
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         #帶出公用欄位reference值
         
         
         #此段落由子樣板a12產生
      #LET g_glcc2_d[l_ac].glccownid_desc = cl_get_username(g_glcc2_d[l_ac].glccownid)
      #LET g_glcc2_d[l_ac].glccowndp_desc = cl_get_deptname(g_glcc2_d[l_ac].glccowndp)
      #LET g_glcc2_d[l_ac].glcccrtid_desc = cl_get_username(g_glcc2_d[l_ac].glcccrtid)
      #LET g_glcc2_d[l_ac].glcccrtdp_desc = cl_get_deptname(g_glcc2_d[l_ac].glcccrtdp)
      #LET g_glcc2_d[l_ac].glccmodid_desc = cl_get_username(g_glcc2_d[l_ac].glccmodid)
      
 
 
 
        
         #add-point:單身資料抓取
         {<point name="bfill.foreach"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      
            CALL g_glcc_d.deleteElement(g_glcc_d.getLength())
      CALL g_glcc2_d.deleteElement(g_glcc2_d.getLength())
 
   END IF
   
   #add-point:b_fill段more
   {<point name="b_fill.more"/>}
   #end add-point
   
   LET g_rec_b=l_ac-1
   DISPLAY g_rec_b TO FORMONLY.cnt  
   LET l_ac = g_cnt
   LET g_cnt = 0 
 
   FREE agli161_pb   
   
END FUNCTION
]]>
  </section>
  <section id="agli161.b_fill2" ver="2" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION agli161_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
END FUNCTION
]]>
  </section>
  <section id="agli161.before_delete" ver="2" status="" src="s">
    <![CDATA[#+ 單身db資料刪除
PRIVATE FUNCTION agli161_before_delete()
   #add-point:before_delete段define
   {<point name="before_delete.define"/>}
   #end add-point 
   
   #add-point:單筆刪除前
   {<point name="delete.body.b_single_delete" mark="Y"/>}
   #end add-point
   
   DELETE FROM glcc_t
    WHERE glccent = g_enterprise AND glccld = g_glcc_m.glccld AND
 
          glcc001 = g_glcc_d_t.glcc001
      AND glccseq = g_glcc_d_t.glccseq
 
      
   #add-point:單筆刪除中
   {<point name="delete.body.m_single_delete"/>}
   #end add-point
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("glcc_t",SQLCA.sqlcode,1)
      RETURN FALSE 
   END IF
   
   #add-point:單筆刪除後
   {<point name="delete.body.a_single_delete"/>}
   #end add-point
 
   LET g_rec_b = g_rec_b-1
   DISPLAY g_rec_b TO FORMONLY.cnt
 
   RETURN TRUE
    
END FUNCTION
]]>
  </section>
  <section id="agli161.browser_fill" ver="7" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION agli161_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point    
   
   CALL g_browser.clear()
 
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "glccld"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      LET l_wc = " 1=1"
   END IF
   IF cl_null(l_wc2) THEN  #p_wc 查詢條件
      LET l_wc2 = " 1=1"
   END IF
   
   IF l_wc2 <> " 1=1" OR NOT cl_null(l_wc2) THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE glccld ",
 
                      " FROM glcc_t ",
                      " ",
                      " ",
 
                      " WHERE glccent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("glcc_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE glccld ",
 
                      " FROM glcc_t ",
                      " ",
                      " ",
                      " WHERE glccent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("glcc_t")
   END IF 
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
 
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
   
   #若超過最大顯示筆數
   LET g_error_show = 0
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照glccld Browser欄位定義(取代原本bs_sql功能)
   LET g_sql  = "SELECT DISTINCT glccld",
                " FROM glcc_t ",
 
                
                " WHERE glccent = '" ||g_enterprise|| "' AND ", l_wc," AND ",l_wc2, cl_sql_add_filter("glcc_t")
 
   #add-point:browser_fill,sql_rank前
   {<point name="browser_fill.before_sql_rank"/>}
   #end add-point
    
   #定義browser_fill sql
   LET g_sql= g_sql, " ORDER BY ",l_searchcol, " ", g_order
                
   #add-point:browser_fill,pre前
   {<point name="browser_fill.before_pre"/>}
   #end add-point
    
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料    
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_glccld 
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      
      
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point    
      
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         EXIT FOREACH
      END IF
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   IF g_browser.getLength() = 0 AND l_wc THEN
      INITIALIZE g_glcc_m.* TO NULL
      CALL g_glcc_d.clear()
      CALL g_glcc2_d.clear()
 
      #add-point:browser_fill段after_clear
      {<point name="browser_fill.after_clear"/>}
      #end add-point 
      CLEAR FORM
   END IF
   
   LET g_header_cnt = g_browser.getLength()
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="agli161.browser_search" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION agli161_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1"
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY glccld"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL agli161_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="agli161.construct" ver="7" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION agli161_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面上相關資料
   CLEAR FORM                 
   INITIALIZE g_glcc_m.* TO NULL
   CALL g_glcc_d.clear()
   CALL g_glcc2_d.clear()
 
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   LET g_action_choice = ""
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段construct外
   {<point name="cs.head.before"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON glccld,glaacomp,glaacomp_desc,glaa014,glaa008,glaa004,glaa004_desc,chk01, 
          chk02,chk03,chk04,chk05,chk06
 
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
                 #Ctrlp:construct.c.glccld
         ON ACTION controlp INFIELD glccld
            #add-point:ON ACTION controlp INFIELD glccld
            {<point name="construct.c.glccld" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glccld
            #add-point:BEFORE FIELD glccld
            {<point name="construct.b.glccld" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glccld
            
            #add-point:AFTER FIELD glccld
            {<point name="construct.a.glccld" />}
            #END add-point
            
 
         #Ctrlp:construct.c.glaacomp
         ON ACTION controlp INFIELD glaacomp
            #add-point:ON ACTION controlp INFIELD glaacomp
            {<point name="construct.c.glaacomp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glaacomp
            #add-point:BEFORE FIELD glaacomp
            {<point name="construct.b.glaacomp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glaacomp
            
            #add-point:AFTER FIELD glaacomp
            {<point name="construct.a.glaacomp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD glaacomp_desc
            #add-point:BEFORE FIELD glaacomp_desc
            {<point name="construct.b.glaacomp_desc" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glaacomp_desc
            
            #add-point:AFTER FIELD glaacomp_desc
            {<point name="construct.a.glaacomp_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.glaacomp_desc
         ON ACTION controlp INFIELD glaacomp_desc
            #add-point:ON ACTION controlp INFIELD glaacomp_desc
            {<point name="construct.c.glaacomp_desc" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glaa014
            #add-point:BEFORE FIELD glaa014
            {<point name="construct.b.glaa014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glaa014
            
            #add-point:AFTER FIELD glaa014
            {<point name="construct.a.glaa014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.glaa014
         ON ACTION controlp INFIELD glaa014
            #add-point:ON ACTION controlp INFIELD glaa014
            {<point name="construct.c.glaa014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glaa008
            #add-point:BEFORE FIELD glaa008
            {<point name="construct.b.glaa008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glaa008
            
            #add-point:AFTER FIELD glaa008
            {<point name="construct.a.glaa008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.glaa008
         ON ACTION controlp INFIELD glaa008
            #add-point:ON ACTION controlp INFIELD glaa008
            {<point name="construct.c.glaa008" />}
            #END add-point
 
         #Ctrlp:construct.c.glaa004
         ON ACTION controlp INFIELD glaa004
            #add-point:ON ACTION controlp INFIELD glaa004
            {<point name="construct.c.glaa004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glaa004
            #add-point:BEFORE FIELD glaa004
            {<point name="construct.b.glaa004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glaa004
            
            #add-point:AFTER FIELD glaa004
            {<point name="construct.a.glaa004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD glaa004_desc
            #add-point:BEFORE FIELD glaa004_desc
            {<point name="construct.b.glaa004_desc" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glaa004_desc
            
            #add-point:AFTER FIELD glaa004_desc
            {<point name="construct.a.glaa004_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.glaa004_desc
         ON ACTION controlp INFIELD glaa004_desc
            #add-point:ON ACTION controlp INFIELD glaa004_desc
            {<point name="construct.c.glaa004_desc" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD chk01
            #add-point:BEFORE FIELD chk01
            {<point name="construct.b.chk01" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD chk01
            
            #add-point:AFTER FIELD chk01
            {<point name="construct.a.chk01" />}
            #END add-point
            
 
         #Ctrlp:construct.c.chk01
         ON ACTION controlp INFIELD chk01
            #add-point:ON ACTION controlp INFIELD chk01
            {<point name="construct.c.chk01" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD chk02
            #add-point:BEFORE FIELD chk02
            {<point name="construct.b.chk02" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD chk02
            
            #add-point:AFTER FIELD chk02
            {<point name="construct.a.chk02" />}
            #END add-point
            
 
         #Ctrlp:construct.c.chk02
         ON ACTION controlp INFIELD chk02
            #add-point:ON ACTION controlp INFIELD chk02
            {<point name="construct.c.chk02" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD chk03
            #add-point:BEFORE FIELD chk03
            {<point name="construct.b.chk03" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD chk03
            
            #add-point:AFTER FIELD chk03
            {<point name="construct.a.chk03" />}
            #END add-point
            
 
         #Ctrlp:construct.c.chk03
         ON ACTION controlp INFIELD chk03
            #add-point:ON ACTION controlp INFIELD chk03
            {<point name="construct.c.chk03" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD chk04
            #add-point:BEFORE FIELD chk04
            {<point name="construct.b.chk04" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD chk04
            
            #add-point:AFTER FIELD chk04
            {<point name="construct.a.chk04" />}
            #END add-point
            
 
         #Ctrlp:construct.c.chk04
         ON ACTION controlp INFIELD chk04
            #add-point:ON ACTION controlp INFIELD chk04
            {<point name="construct.c.chk04" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD chk05
            #add-point:BEFORE FIELD chk05
            {<point name="construct.b.chk05" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD chk05
            
            #add-point:AFTER FIELD chk05
            {<point name="construct.a.chk05" />}
            #END add-point
            
 
         #Ctrlp:construct.c.chk05
         ON ACTION controlp INFIELD chk05
            #add-point:ON ACTION controlp INFIELD chk05
            {<point name="construct.c.chk05" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD chk06
            #add-point:BEFORE FIELD chk06
            {<point name="construct.b.chk06" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD chk06
            
            #add-point:AFTER FIELD chk06
            {<point name="construct.a.chk06" />}
            #END add-point
            
 
         #Ctrlp:construct.c.chk06
         ON ACTION controlp INFIELD chk06
            #add-point:ON ACTION controlp INFIELD chk06
            {<point name="construct.c.chk06" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table1 ON glcc001,glccseq,glcc011,glcc012,glcc013,glcc014,glcc015,glcc016,glcc002, 
          glcc002_desc,glcc003,glcc003_desc,glcc004,glcc004_desc,glcc007,glccownid,glccowndp,glcccrtid, 
          glcccrtdp,glcccrtdt,glccmodid,glccmoddt
           FROM s_detail1[1].glcc001,s_detail1[1].glccseq,s_detail1[1].glcc011,s_detail1[1].glcc012, 
               s_detail1[1].glcc013,s_detail1[1].glcc014,s_detail1[1].glcc015,s_detail1[1].glcc016,s_detail1[1].glcc002, 
               s_detail1[1].glcc002_desc,s_detail1[1].glcc003,s_detail1[1].glcc003_desc,s_detail1[1].glcc004, 
               s_detail1[1].glcc004_desc,s_detail1[1].glcc007,s_detail2[1].glccownid,s_detail2[1].glccowndp, 
               s_detail2[1].glcccrtid,s_detail2[1].glcccrtdp,s_detail2[1].glcccrtdt,s_detail2[1].glccmodid, 
               s_detail2[1].glccmoddt
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
         #單身公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<glcccrtdt>>----
         AFTER FIELD glcccrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<glccmoddt>>----
         AFTER FIELD glccmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<glcccnfdt>>----
         
         #----<<glccpstdt>>----
 
 
           
         #單身一般欄位開窗相關處理
            
       
      END CONSTRUCT
  
 
  
      #add-point:cs段more_construct
      {<point name="cs.more_construct"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:ui_dialog段b_dialog
         {<point name="cs.before_dialog"/>}
         #end add-point
      
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
   
   #add-point:cs段after_construct
   {<point name="cs.after_construct"/>}
   #end add-point
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   LET g_current_row = 1
 
   IF INT_FLAG THEN
      RETURN
   END IF
   
   LET g_wc_filter = ""
 
END FUNCTION
]]>
  </section>
  <section id="agli161.default_search" ver="4" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION agli161_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " glccld = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="agli161.delete" ver="6" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION agli161_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_glcc_m.glccld IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE agli161_master_referesh USING g_glcc_m.glccld INTO g_glcc_m.glccld,g_glcc_m.glccld_desc
   
   CALL agli161_show()
   
   CALL s_transaction_begin()
   
   
 
   OPEN agli161_cl USING g_enterprise,g_glcc_m.glccld
 
   IF STATUS THEN
      CALL cl_err("OPEN agli161_cl:", STATUS, 1)
      CLOSE agli161_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH agli161_cl INTO g_glcc_m.glccld,g_glcc_m.glccld_desc,g_glcc_m.glaacomp,g_glcc_m.glaacomp_desc, 
       g_glcc_m.glaa014,g_glcc_m.glaa008,g_glcc_m.glaa004,g_glcc_m.glaa004_desc,g_glcc_m.chk01,g_glcc_m.chk02, 
       g_glcc_m.chk03,g_glcc_m.chk04,g_glcc_m.chk05,g_glcc_m.chk06
   
   #若資料已被他人LOCK
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_glcc_m.glccld,SQLCA.sqlcode,0)
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #IF NOT cl_ask_delete() THEN             #確認一下
   IF cl_ask_del_master() THEN              #確認一下
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL agli161_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM glcc_t WHERE glccent = g_enterprise AND glccld = g_glcc_m.glccld
 
                                                               
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
      
      IF SQLCA.sqlcode THEN
         CALL cl_err("glcc_t",SQLCA.sqlcode,0)
         CALL s_transaction_end('N','0')
      END IF
 
      
  
      #add-point:單身刪除後 
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
 
      
      CLEAR FORM
      CALL g_glcc_d.clear() 
      CALL g_glcc2_d.clear()       
 
     
      CALL agli161_ui_browser_refresh()  
      CALL agli161_ui_headershow()  
      CALL agli161_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL agli161_fetch('P')
      ELSE
         LET g_wc = " 1=1"
         LET g_wc2 = " 1=1"
         CALL agli161_browser_fill("F")
      END IF
       
   END IF
 
   CLOSE agli161_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_glcc_m.glccld,'D')
    
END FUNCTION
]]>
  </section>
  <section id="agli161.delete_b" ver="2" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION agli161_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
 
   
END FUNCTION
]]>
  </section>
  <section id="agli161.description" ver="39" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000133
#+ 
#+ Filename...: agli161
#+ Description: 產品科目依帳套設置作業
#+ Creator....: 02416(2014/02/07)
#+ Modifier...: 02599(2014/06/28)
#+ Buildtype..: 應用 i07 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="agli161.detail_reproduce" ver="2" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION agli161_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE glcc_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE agli161_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE agli161_detail AS ",
                "SELECT * FROM glcc_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO agli161_detail SELECT * FROM glcc_t 
                                         WHERE glccent = g_enterprise AND glccld = g_glccld_t
 
   
   #將key修正為調整後   
   UPDATE agli161_detail 
      #更新key欄位
      SET glccld = g_glcc_m.glccld
 
      #更新共用欄位
      #此段落由子樣板a13產生
       , glccownid = g_user
       , glccowndp = g_dept
       , glcccrtid = g_user
       , glcccrtdp = g_dept 
       , glcccrtdt = ld_date
       , glccmodid = "" 
       , glccmoddt = "" 
      #, glccstus = "Y"
 
 
                                       
  
   #將資料塞回原table   
   INSERT INTO glcc_t SELECT * FROM agli161_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE agli161_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_glccld_t = g_glcc_m.glccld
 
   
   DROP TABLE agli161_detail
   
END FUNCTION
]]>
  </section>
  <section id="agli161.fetch" ver="4" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION agli161_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   #add-point:fetch段動作開始前
   {<point name="fetch.before_fetch"/>}
   #end add-point    
 
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,': ' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF
            
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
            LET g_current_idx = g_jump
         END IF
 
         LET g_no_ask = FALSE  
   END CASE    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   CALL agli161_browser_fill(p_flag)
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身筆數顯示
   DISPLAY g_detail_cnt TO FORMONLY.cnt                      #設定page 總筆數 
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數
   
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_glcc_m.glccld = g_browser[g_current_idx].b_glccld
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE agli161_master_referesh USING g_glcc_m.glccld INTO g_glcc_m.glccld,g_glcc_m.glccld_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("glcc_t",SQLCA.sqlcode,1)
      INITIALIZE g_glcc_m.* TO NULL
      RETURN
   END IF
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL agli161_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="agli161.fill_chk" ver="3" status="" src="s">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION agli161_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   DEFINE lst_token     base.StringTokenizer
   DEFINE ls_token      STRING
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   
   #add-point:fill_chk段other
   {<point name="fill_chk.other"/>}
   #end add-point
   
   RETURN FALSE
 
END FUNCTION
]]>
  </section>
  <section id="agli161.filter" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION agli161_filter()
 
 
 
 
 
 
 
 
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
 
 
 
   
 
 
END FUNCTION
]]>
  </section>
  <section id="agli161.filter_parser" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION agli161_filter_parser(ps_field)
   {<Local define>}
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   {</Local define>}
 
 
 
 
END FUNCTION
]]>
  </section>
  <section id="agli161.global" ver="8" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_glcc_m        RECORD
       glccld LIKE glcc_t.glccld, 
   glccld_desc LIKE type_t.chr80, 
   glaacomp LIKE glaa_t.glaacomp, 
   glaacomp_desc LIKE type_t.chr80, 
   glaa014 LIKE glaa_t.glaa014, 
   glaa008 LIKE glaa_t.glaa008, 
   glaa004 LIKE glaa_t.glaa004, 
   glaa004_desc LIKE type_t.chr80, 
   chk01 LIKE type_t.chr80, 
   chk02 LIKE type_t.chr80, 
   chk03 LIKE type_t.chr80, 
   chk04 LIKE type_t.chr80, 
   chk05 LIKE type_t.chr80, 
   chk06 LIKE type_t.chr80
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_glcc_d        RECORD
       glcc001 LIKE glcc_t.glcc001, 
   glccstus LIKE glcc_t.glccstus, 
   glccseq LIKE glcc_t.glccseq, 
   glcc011 LIKE glcc_t.glcc011, 
   glcc011_desc LIKE type_t.chr500, 
   glcc012 LIKE glcc_t.glcc012, 
   glcc012_desc LIKE type_t.chr500, 
   glcc013 LIKE glcc_t.glcc013, 
   glcc013_desc LIKE type_t.chr500, 
   glcc014 LIKE glcc_t.glcc014, 
   glcc014_desc LIKE type_t.chr500, 
   glcc015 LIKE glcc_t.glcc015, 
   glcc015_desc LIKE type_t.chr500, 
   glcc016 LIKE glcc_t.glcc016, 
   glcc016_desc LIKE type_t.chr500, 
   glcc016_desc_desc LIKE type_t.chr500, 
   glcc002 LIKE glcc_t.glcc002, 
   glcc002_desc LIKE type_t.chr80, 
   glcc003 LIKE glcc_t.glcc003, 
   glcc003_desc LIKE type_t.chr80, 
   glcc004 LIKE glcc_t.glcc004, 
   glcc004_desc LIKE type_t.chr80, 
   glcc007 LIKE glcc_t.glcc007
       END RECORD
PRIVATE TYPE type_g_glcc2_d RECORD
       glcc001 LIKE glcc_t.glcc001, 
   glccseq LIKE glcc_t.glccseq, 
   glccownid LIKE glcc_t.glccownid, 
   glccownid_desc LIKE type_t.chr500, 
   glccowndp LIKE glcc_t.glccowndp, 
   glccowndp_desc LIKE type_t.chr500, 
   glcccrtid LIKE glcc_t.glcccrtid, 
   glcccrtid_desc LIKE type_t.chr500, 
   glcccrtdp LIKE glcc_t.glcccrtdp, 
   glcccrtdp_desc LIKE type_t.chr500, 
   glcccrtdt DATETIME YEAR TO SECOND, 
   glccmodid LIKE glcc_t.glccmodid, 
   glccmodid_desc LIKE type_t.chr500, 
   glccmoddt DATETIME YEAR TO SECOND
       END RECORD
 
 
 
#模組變數(Module Variables)
DEFINE g_glcc_m          type_g_glcc_m
DEFINE g_glcc_m_t        type_g_glcc_m
 
   DEFINE g_glccld_t LIKE glcc_t.glccld
 
 
DEFINE g_glcc_d          DYNAMIC ARRAY OF type_g_glcc_d
DEFINE g_glcc_d_t        type_g_glcc_d
DEFINE g_glcc2_d   DYNAMIC ARRAY OF type_g_glcc2_d
DEFINE g_glcc2_d_t type_g_glcc2_d
 
 
DEFINE g_browser      DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位  
       b_statepic     LIKE type_t.chr50,
          b_glccld LIKE glcc_t.glccld
       #,rank           LIKE type_t.num10
      END RECORD 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
 
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
DEFINE g_state               STRING                        
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page                    
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="agli161.init" ver="1" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION agli161_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
  
   LET g_bfill = "Y"
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
      CALL cl_set_combo_scc('glcc007','8315') 
 
   LET g_error_show = 1
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL agli161_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="agli161.input" ver="3" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION agli161_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point    
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF  
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT glcc001,glccstus,glccseq,glcc011,glcc012,glcc013,glcc014,glcc015,glcc016, 
       glcc002,glcc003,glcc004,glcc007,glcc001,glccseq,glccownid,glccowndp,glcccrtid,glcccrtdp,glcccrtdt, 
       glccmodid,glccmoddt FROM glcc_t WHERE glccent=? AND glccld=? AND glcc001=? AND glccseq=? FOR  
       UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE agli161_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
 
 
   
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL agli161_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL agli161_set_no_entry(p_cmd)
   #add-point:set_no_entry後
   {<point name="input.after_set_no_entry"/>}
   #end add-point
 
   DISPLAY BY NAME g_glcc_m.glccld,g_glcc_m.glaacomp,g_glcc_m.glaa014,g_glcc_m.glaa008,g_glcc_m.glaa004, 
       g_glcc_m.chk01,g_glcc_m.chk02,g_glcc_m.chk03,g_glcc_m.chk04,g_glcc_m.chk05,g_glcc_m.chk06
   
   LET lb_reproduce = FALSE
   
   #add-point:進入修改段前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="agli161.input.body" ver="7" status="" src="s">
    <![CDATA[      #Page1 預設值產生於此處
      INPUT ARRAY g_glcc_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂單身ACTION
         
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_glcc_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL agli161_b_fill(g_wc2) 
            IF g_rec_b != 0 THEN
               CALL fgl_set_arr_curr(l_ac)
            END IF
            #add-point:資料輸入前
            {<point name="input.body.before_input"/>}
            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN agli161_cl USING g_enterprise,
                                               g_glcc_m.glccld
 
                                               
               IF STATUS THEN
                  CALL cl_err("OPEN agli161_cl:", STATUS, 1)
                  CLOSE agli161_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            
            IF g_rec_b >= l_ac 
               AND g_glcc_d[l_ac].glcc001 IS NOT NULL
               AND g_glcc_d[l_ac].glccseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_glcc_d_t.* = g_glcc_d[l_ac].*  #BACKUP
               CALL agli161_set_entry_b(l_cmd)
               #add-point:set_entry_b後
               {<point name="input.body.before_row.set_entry_b"/>}
               #end add-point
               CALL agli161_set_no_entry_b(l_cmd)
               OPEN agli161_bcl USING g_enterprise,g_glcc_m.glccld,
 
                                                g_glcc_d_t.glcc001
                                                ,g_glcc_d_t.glccseq
 
               IF STATUS THEN
                  CALL cl_err("OPEN agli161_bcl:", STATUS, 1)
                  LET l_lock_sw='Y'
               ELSE
                  FETCH agli161_bcl INTO g_glcc_d[l_ac].glcc001,g_glcc_d[l_ac].glccstus,g_glcc_d[l_ac].glccseq, 
                      g_glcc_d[l_ac].glcc011,g_glcc_d[l_ac].glcc012,g_glcc_d[l_ac].glcc013,g_glcc_d[l_ac].glcc014, 
                      g_glcc_d[l_ac].glcc015,g_glcc_d[l_ac].glcc016,g_glcc_d[l_ac].glcc002,g_glcc_d[l_ac].glcc003, 
                      g_glcc_d[l_ac].glcc004,g_glcc_d[l_ac].glcc007
                  IF SQLCA.sqlcode THEN
                      CALL cl_err(g_glcc_d_t.glcc001,SQLCA.sqlcode,1)
                      LET l_lock_sw = "Y"
                  END IF
                  
                  CALL agli161_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            
        
         BEFORE INSERT
            
            INITIALIZE g_glcc_d_t.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_glcc_d[l_ac].* TO NULL
            
            #公用欄位預設值
            #此段落由子樣板a14產生    
      LET g_glcc2_d[l_ac].glccownid = g_user
      LET g_glcc2_d[l_ac].glccowndp = g_dept
      LET g_glcc2_d[l_ac].glcccrtid = g_user
      LET g_glcc2_d[l_ac].glcccrtdp = g_dept 
      LET g_glcc2_d[l_ac].glcccrtdt = cl_get_current()
      LET g_glcc2_d[l_ac].glccmodid = ""
      LET g_glcc2_d[l_ac].glccmoddt = ""
      LET g_glcc_d[l_ac].glccstus = ""
 
  
            
            #一般欄位預設值
                  LET g_glcc_d[l_ac].glcc007 = "1"
 
            
            
            LET g_glcc_d_t.* = g_glcc_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL agli161_set_entry_b(l_cmd)
            #add-point:set_entry_b後
            {<point name="input.body.before_insert.set_entry_b"/>}
            #end add-point
            CALL agli161_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_glcc_d[li_reproduce_target].* = g_glcc_d[li_reproduce].*
               LET g_glcc2_d[li_reproduce_target].* = g_glcc2_d[li_reproduce].*
 
               LET g_glcc_d[g_glcc_d.getLength()].glcc001 = NULL
               LET g_glcc_d[g_glcc_d.getLength()].glccseq = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM glcc_t 
             WHERE glccent = g_enterprise AND glccld = g_glcc_m.glccld
 
               AND glcc001 = g_glcc_d[l_ac].glcc001
               AND glccseq = g_glcc_d[l_ac].glccseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               #add-point:單身新增前
               {<point name="input.body.b_insert" mark="Y"/>}
               #end add-point
               INSERT INTO glcc_t
                           (glccent,
                            glccld,
                            glcc001,glccseq
                            ,glccstus,glcc011,glcc012,glcc013,glcc014,glcc015,glcc016,glcc002,glcc003,glcc004,glcc007,glccownid,glccowndp,glcccrtid,glcccrtdp,glcccrtdt,glccmodid,glccmoddt) 
                     VALUES(g_enterprise,
                            g_glcc_m.glccld,
                            g_glcc_d[l_ac].glcc001,g_glcc_d[l_ac].glccseq
                            ,g_glcc_d[l_ac].glccstus,g_glcc_d[l_ac].glcc011,g_glcc_d[l_ac].glcc012,g_glcc_d[l_ac].glcc013, 
                                g_glcc_d[l_ac].glcc014,g_glcc_d[l_ac].glcc015,g_glcc_d[l_ac].glcc016, 
                                g_glcc_d[l_ac].glcc002,g_glcc_d[l_ac].glcc003,g_glcc_d[l_ac].glcc004, 
                                g_glcc_d[l_ac].glcc007,g_glcc2_d[l_ac].glccownid,g_glcc2_d[l_ac].glccowndp, 
                                g_glcc2_d[l_ac].glcccrtid,g_glcc2_d[l_ac].glcccrtdp,g_glcc2_d[l_ac].glcccrtdt, 
                                g_glcc2_d[l_ac].glccmodid,g_glcc2_d[l_ac].glccmoddt)
               #add-point:單身新增中
               {<point name="input.body.m_insert"/>}
               #end add-point
               LET p_cmd = 'u'
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_glcc_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("glcc_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR "INSERT O.K"
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
            END IF
            
            #add-point:單身新增後
            {<point name="input.body.after_insert"/>}
            #end add-point
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_glcc_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_glcc_d.deleteElement(l_ac)
               NEXT FIELD glcc001
            END IF
            IF g_glcc_d_t.glcc001 IS NOT NULL
               AND g_glcc_d_t.glccseq IS NOT NULL
 
               THEN
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete"/>}
               #end add-point
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               IF agli161_before_delete() THEN 
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE agli161_bcl
               LET l_count = g_glcc_d.getLength()
            END IF 
            
            #add-point:單身刪除後
            {<point name="input.body.a_delete"/>}
            #end add-point
              
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body.after_delete"/>}
            #end add-point
 
                  #此段落由子樣板a01產生
         BEFORE FIELD glcc001
            #add-point:BEFORE FIELD glcc001
            {<point name="input.b.page1.glcc001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glcc001
            
            #add-point:AFTER FIELD glcc001
            {<point name="input.a.page1.glcc001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE glcc001
            #add-point:ON CHANGE glcc001
            {<point name="input.g.page1.glcc001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glccseq
            #add-point:BEFORE FIELD glccseq
            {<point name="input.b.page1.glccseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glccseq
            
            #add-point:AFTER FIELD glccseq
            {<point name="input.a.page1.glccseq" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE glccseq
            #add-point:ON CHANGE glccseq
            {<point name="input.g.page1.glccseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glcc011
            
            #add-point:AFTER FIELD glcc011
            {<point name="input.a.page1.glcc011" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD glcc011
            #add-point:BEFORE FIELD glcc011
            {<point name="input.b.page1.glcc011" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE glcc011
            #add-point:ON CHANGE glcc011
            {<point name="input.g.page1.glcc011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glcc012
            
            #add-point:AFTER FIELD glcc012
            {<point name="input.a.page1.glcc012" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD glcc012
            #add-point:BEFORE FIELD glcc012
            {<point name="input.b.page1.glcc012" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE glcc012
            #add-point:ON CHANGE glcc012
            {<point name="input.g.page1.glcc012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glcc013
            
            #add-point:AFTER FIELD glcc013
            {<point name="input.a.page1.glcc013" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD glcc013
            #add-point:BEFORE FIELD glcc013
            {<point name="input.b.page1.glcc013" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE glcc013
            #add-point:ON CHANGE glcc013
            {<point name="input.g.page1.glcc013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glcc014
            
            #add-point:AFTER FIELD glcc014
            {<point name="input.a.page1.glcc014" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD glcc014
            #add-point:BEFORE FIELD glcc014
            {<point name="input.b.page1.glcc014" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE glcc014
            #add-point:ON CHANGE glcc014
            {<point name="input.g.page1.glcc014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glcc015
            
            #add-point:AFTER FIELD glcc015
            {<point name="input.a.page1.glcc015" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD glcc015
            #add-point:BEFORE FIELD glcc015
            {<point name="input.b.page1.glcc015" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE glcc015
            #add-point:ON CHANGE glcc015
            {<point name="input.g.page1.glcc015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glcc016
            
            #add-point:AFTER FIELD glcc016
            {<point name="input.a.page1.glcc016" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD glcc016
            #add-point:BEFORE FIELD glcc016
            {<point name="input.b.page1.glcc016" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE glcc016
            #add-point:ON CHANGE glcc016
            {<point name="input.g.page1.glcc016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glcc002
            
            #add-point:AFTER FIELD glcc002
            {<point name="input.a.page1.glcc002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD glcc002
            #add-point:BEFORE FIELD glcc002
            {<point name="input.b.page1.glcc002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE glcc002
            #add-point:ON CHANGE glcc002
            {<point name="input.g.page1.glcc002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glcc003
            
            #add-point:AFTER FIELD glcc003
            {<point name="input.a.page1.glcc003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD glcc003
            #add-point:BEFORE FIELD glcc003
            {<point name="input.b.page1.glcc003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE glcc003
            #add-point:ON CHANGE glcc003
            {<point name="input.g.page1.glcc003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glcc004
            
            #add-point:AFTER FIELD glcc004
            {<point name="input.a.page1.glcc004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD glcc004
            #add-point:BEFORE FIELD glcc004
            {<point name="input.b.page1.glcc004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE glcc004
            #add-point:ON CHANGE glcc004
            {<point name="input.g.page1.glcc004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glcc007
            #add-point:BEFORE FIELD glcc007
            {<point name="input.b.page1.glcc007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glcc007
            
            #add-point:AFTER FIELD glcc007
            {<point name="input.a.page1.glcc007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE glcc007
            #add-point:ON CHANGE glcc007
            {<point name="input.g.page1.glcc007" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.glcc001
         ON ACTION controlp INFIELD glcc001
            #add-point:ON ACTION controlp INFIELD glcc001
            {<point name="input.c.page1.glcc001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.glccseq
         ON ACTION controlp INFIELD glccseq
            #add-point:ON ACTION controlp INFIELD glccseq
            {<point name="input.c.page1.glccseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.glcc011
         ON ACTION controlp INFIELD glcc011
            #add-point:ON ACTION controlp INFIELD glcc011
            {<point name="input.c.page1.glcc011" />}
            #END add-point
 
         #Ctrlp:input.c.page1.glcc012
         ON ACTION controlp INFIELD glcc012
            #add-point:ON ACTION controlp INFIELD glcc012
            {<point name="input.c.page1.glcc012" />}
            #END add-point
 
         #Ctrlp:input.c.page1.glcc013
         ON ACTION controlp INFIELD glcc013
            #add-point:ON ACTION controlp INFIELD glcc013
            {<point name="input.c.page1.glcc013" />}
            #END add-point
 
         #Ctrlp:input.c.page1.glcc014
         ON ACTION controlp INFIELD glcc014
            #add-point:ON ACTION controlp INFIELD glcc014
            {<point name="input.c.page1.glcc014" />}
            #END add-point
 
         #Ctrlp:input.c.page1.glcc015
         ON ACTION controlp INFIELD glcc015
            #add-point:ON ACTION controlp INFIELD glcc015
            {<point name="input.c.page1.glcc015" />}
            #END add-point
 
         #Ctrlp:input.c.page1.glcc016
         ON ACTION controlp INFIELD glcc016
            #add-point:ON ACTION controlp INFIELD glcc016
            {<point name="input.c.page1.glcc016" />}
            #END add-point
 
         #Ctrlp:input.c.page1.glcc002
         ON ACTION controlp INFIELD glcc002
            #add-point:ON ACTION controlp INFIELD glcc002
            {<point name="input.c.page1.glcc002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.glcc003
         ON ACTION controlp INFIELD glcc003
            #add-point:ON ACTION controlp INFIELD glcc003
            {<point name="input.c.page1.glcc003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.glcc004
         ON ACTION controlp INFIELD glcc004
            #add-point:ON ACTION controlp INFIELD glcc004
            {<point name="input.c.page1.glcc004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.glcc007
         ON ACTION controlp INFIELD glcc007
            #add-point:ON ACTION controlp INFIELD glcc007
            {<point name="input.c.page1.glcc007" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_glcc_d[l_ac].* = g_glcc_d_t.*
               CLOSE agli161_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_glcc_d[l_ac].glcc001,-263,1)
               LET g_glcc_d[l_ac].* = g_glcc_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               LET g_glcc2_d[l_ac].glccmodid = g_user 
LET g_glcc2_d[l_ac].glccmoddt = cl_get_current()
 
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
         
               UPDATE glcc_t SET (glccld,glcc001,glccstus,glccseq,glcc011,glcc012,glcc013,glcc014,glcc015, 
                   glcc016,glcc002,glcc003,glcc004,glcc007,glccownid,glccowndp,glcccrtid,glcccrtdp,glcccrtdt, 
                   glccmodid,glccmoddt) = (g_glcc_m.glccld,g_glcc_d[l_ac].glcc001,g_glcc_d[l_ac].glccstus, 
                   g_glcc_d[l_ac].glccseq,g_glcc_d[l_ac].glcc011,g_glcc_d[l_ac].glcc012,g_glcc_d[l_ac].glcc013, 
                   g_glcc_d[l_ac].glcc014,g_glcc_d[l_ac].glcc015,g_glcc_d[l_ac].glcc016,g_glcc_d[l_ac].glcc002, 
                   g_glcc_d[l_ac].glcc003,g_glcc_d[l_ac].glcc004,g_glcc_d[l_ac].glcc007,g_glcc2_d[l_ac].glccownid, 
                   g_glcc2_d[l_ac].glccowndp,g_glcc2_d[l_ac].glcccrtid,g_glcc2_d[l_ac].glcccrtdp,g_glcc2_d[l_ac].glcccrtdt, 
                   g_glcc2_d[l_ac].glccmodid,g_glcc2_d[l_ac].glccmoddt)
                WHERE glccent = g_enterprise AND glccld = g_glcc_m.glccld 
 
                 AND glcc001 = g_glcc_d_t.glcc001 #項次   
                 AND glccseq = g_glcc_d_t.glccseq  
 
                 
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("glcc_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   CALL cl_err("glcc_t",SQLCA.sqlcode,1)  
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_glcc_m.glccld
               LET gs_keys_bak[1] = g_glccld_t
               LET gs_keys[2] = g_glcc_d[g_detail_idx].glcc001
               LET gs_keys_bak[2] = g_glcc_d_t.glcc001
               LET gs_keys[3] = g_glcc_d[g_detail_idx].glccseq
               LET gs_keys_bak[3] = g_glcc_d_t.glccseq
               CALL agli161_update_b('glcc_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
                     LET g_log1 = util.JSON.stringify(g_glcc_m),util.JSON.stringify(g_glcc_d_t)
                     LET g_log2 = util.JSON.stringify(g_glcc_m),util.JSON.stringify(g_glcc_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
            END IF
 
         AFTER INPUT
            #若單身還沒有輸入資料, 強制切換至單身
            IF g_glcc_d.getLength() = 0 THEN
               NEXT FIELD glcc001
            END IF
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point    
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_glcc_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_glcc_d.getLength()+1
            
      END INPUT
 
 
      
      DISPLAY ARRAY g_glcc2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
      
         BEFORE ROW
            CALL agli161_b_fill(g_wc2) 
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = g_detail_idx
            DISPLAY g_detail_idx TO FORMONLY.idx
            CALL agli161_ui_detailshow()
        
         BEFORE DISPLAY 
            CALL FGL_SET_ARR_CURR(g_detail_idx)      
         
         #add-point:page2自定義行為
         {<point name="input.body2.action"/>}
         #end add-point
         
      END DISPLAY
 
      
 
      
      #add-point:input段more_input
      {<point name="input.more_inputarray"/>}
      #end add-point    
      
      BEFORE DIALOG
         #add-point:input段before_dialog
         {<point name="input.before_dialog"/>}
         #end add-point 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD glccld
        ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD glcc001
               WHEN "s_detail2"
                  NEXT FIELD glcc001_2
 
            END CASE
         END IF
   
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
   
   #add-point:input段after_input
   {<point name="input.after_input"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="agli161.input.head" ver="3" status="" src="s">
    <![CDATA[   
      #單頭段
      INPUT BY NAME g_glcc_m.glccld,g_glcc_m.glaacomp,g_glcc_m.glaa014,g_glcc_m.glaa008,g_glcc_m.glaa004, 
          g_glcc_m.chk01,g_glcc_m.chk02,g_glcc_m.chk03,g_glcc_m.chk04,g_glcc_m.chk05,g_glcc_m.chk06  

         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
         
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:單頭input前
            {<point name="input.head.b_input"/>}
            #end add-point
          
                  #此段落由子樣板a02產生
         AFTER FIELD glccld
            
            #add-point:AFTER FIELD glccld
            {<point name="input.a.glccld" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD glccld
            #add-point:BEFORE FIELD glccld
            {<point name="input.b.glccld" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE glccld
            #add-point:ON CHANGE glccld
            {<point name="input.g.glccld" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glaacomp
            
            #add-point:AFTER FIELD glaacomp
            {<point name="input.a.glaacomp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD glaacomp
            #add-point:BEFORE FIELD glaacomp
            {<point name="input.b.glaacomp" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE glaacomp
            #add-point:ON CHANGE glaacomp
            {<point name="input.g.glaacomp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glaa014
            #add-point:BEFORE FIELD glaa014
            {<point name="input.b.glaa014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glaa014
            
            #add-point:AFTER FIELD glaa014
            {<point name="input.a.glaa014" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE glaa014
            #add-point:ON CHANGE glaa014
            {<point name="input.g.glaa014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glaa008
            #add-point:BEFORE FIELD glaa008
            {<point name="input.b.glaa008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glaa008
            
            #add-point:AFTER FIELD glaa008
            {<point name="input.a.glaa008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE glaa008
            #add-point:ON CHANGE glaa008
            {<point name="input.g.glaa008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glaa004
            
            #add-point:AFTER FIELD glaa004
            {<point name="input.a.glaa004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD glaa004
            #add-point:BEFORE FIELD glaa004
            {<point name="input.b.glaa004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE glaa004
            #add-point:ON CHANGE glaa004
            {<point name="input.g.glaa004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD chk01
            #add-point:BEFORE FIELD chk01
            {<point name="input.b.chk01" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD chk01
            
            #add-point:AFTER FIELD chk01
            {<point name="input.a.chk01" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE chk01
            #add-point:ON CHANGE chk01
            {<point name="input.g.chk01" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD chk02
            #add-point:BEFORE FIELD chk02
            {<point name="input.b.chk02" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD chk02
            
            #add-point:AFTER FIELD chk02
            {<point name="input.a.chk02" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE chk02
            #add-point:ON CHANGE chk02
            {<point name="input.g.chk02" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD chk03
            #add-point:BEFORE FIELD chk03
            {<point name="input.b.chk03" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD chk03
            
            #add-point:AFTER FIELD chk03
            {<point name="input.a.chk03" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE chk03
            #add-point:ON CHANGE chk03
            {<point name="input.g.chk03" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD chk04
            #add-point:BEFORE FIELD chk04
            {<point name="input.b.chk04" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD chk04
            
            #add-point:AFTER FIELD chk04
            {<point name="input.a.chk04" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE chk04
            #add-point:ON CHANGE chk04
            {<point name="input.g.chk04" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD chk05
            #add-point:BEFORE FIELD chk05
            {<point name="input.b.chk05" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD chk05
            
            #add-point:AFTER FIELD chk05
            {<point name="input.a.chk05" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE chk05
            #add-point:ON CHANGE chk05
            {<point name="input.g.chk05" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD chk06
            #add-point:BEFORE FIELD chk06
            {<point name="input.b.chk06" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD chk06
            
            #add-point:AFTER FIELD chk06
            {<point name="input.a.chk06" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE chk06
            #add-point:ON CHANGE chk06
            {<point name="input.g.chk06" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.glccld
         ON ACTION controlp INFIELD glccld
            #add-point:ON ACTION controlp INFIELD glccld
            {<point name="input.c.glccld" />}
            #END add-point
 
         #Ctrlp:input.c.glaacomp
         ON ACTION controlp INFIELD glaacomp
            #add-point:ON ACTION controlp INFIELD glaacomp
            {<point name="input.c.glaacomp" />}
            #END add-point
 
         #Ctrlp:input.c.glaa014
         ON ACTION controlp INFIELD glaa014
            #add-point:ON ACTION controlp INFIELD glaa014
            {<point name="input.c.glaa014" />}
            #END add-point
 
         #Ctrlp:input.c.glaa008
         ON ACTION controlp INFIELD glaa008
            #add-point:ON ACTION controlp INFIELD glaa008
            {<point name="input.c.glaa008" />}
            #END add-point
 
         #Ctrlp:input.c.glaa004
         ON ACTION controlp INFIELD glaa004
            #add-point:ON ACTION controlp INFIELD glaa004
            {<point name="input.c.glaa004" />}
            #END add-point
 
         #Ctrlp:input.c.chk01
         ON ACTION controlp INFIELD chk01
            #add-point:ON ACTION controlp INFIELD chk01
            {<point name="input.c.chk01" />}
            #END add-point
 
         #Ctrlp:input.c.chk02
         ON ACTION controlp INFIELD chk02
            #add-point:ON ACTION controlp INFIELD chk02
            {<point name="input.c.chk02" />}
            #END add-point
 
         #Ctrlp:input.c.chk03
         ON ACTION controlp INFIELD chk03
            #add-point:ON ACTION controlp INFIELD chk03
            {<point name="input.c.chk03" />}
            #END add-point
 
         #Ctrlp:input.c.chk04
         ON ACTION controlp INFIELD chk04
            #add-point:ON ACTION controlp INFIELD chk04
            {<point name="input.c.chk04" />}
            #END add-point
 
         #Ctrlp:input.c.chk05
         ON ACTION controlp INFIELD chk05
            #add-point:ON ACTION controlp INFIELD chk05
            {<point name="input.c.chk05" />}
            #END add-point
 
         #Ctrlp:input.c.chk06
         ON ACTION controlp INFIELD chk06
            #add-point:ON ACTION controlp INFIELD chk06
            {<point name="input.c.chk06" />}
            #END add-point
 
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            
            IF s_transaction_chk("N",0) THEN
                CALL s_transaction_begin()
            END IF
 
            #多語言處理
            
                
            CALL cl_showmsg()
            DISPLAY BY NAME g_glcc_m.glccld             
 
 
            IF p_cmd = 'u' THEN
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
            
               UPDATE glcc_t SET (glccld) = (g_glcc_m.glccld)
                WHERE glccent = g_enterprise AND glccld = g_glccld_t
 
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("glcc_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("glcc_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                     #資料多語言用-增/改
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_glcc_m.glccld
               LET gs_keys_bak[1] = g_glccld_t
               LET gs_keys[2] = g_glcc_d[g_detail_idx].glcc001
               LET gs_keys_bak[2] = g_glcc_d_t.glcc001
               LET gs_keys[3] = g_glcc_d[g_detail_idx].glccseq
               LET gs_keys_bak[3] = g_glcc_d_t.glccseq
               CALL agli161_update_b('glcc_t',gs_keys,gs_keys_bak,"'1'")
                     
                     LET g_glccld_t = g_glcc_m.glccld
 
                     #add-point:單頭修改後
                     {<point name="input.head.a_update"/>}
                     #end add-point
                     
                     LET g_log1 = util.JSON.stringify(g_glcc_m_t)
                     LET g_log2 = util.JSON.stringify(g_glcc_m)
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     ELSE
                        CALL s_transaction_end('Y','0')
                     END IF
               END CASE
            
            ELSE    
               #add-point:單頭新增
               {<point name="input.head.a_insert"/>}
               #end add-point
                                 
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL agli161_detail_reproduce()
               END IF
            END IF
           #controlp
                     
           LET g_glccld_t = g_glcc_m.glccld
 
           
           #若單身還沒有輸入資料, 強制切換至單身
           #IF cl_null(g_glcc_d[1].glcc001) THEN
           #   CALL g_glcc_d.deleteElement(1)
           #   NEXT FIELD glcc001
           #END IF
           
           IF g_glcc_d.getLength() = 0 THEN
              NEXT FIELD glcc001
           END IF
 
      END INPUT
]]>
  </section>
  <section id="agli161.insert" ver="4" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION agli161_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   #清除相關資料
   CLEAR FORM                    
   CALL g_glcc_d.clear()
   CALL g_glcc2_d.clear()
 
 
   INITIALIZE g_glcc_m.* LIKE glcc_t.*             #DEFAULT 設定
   LET g_glccld_t = NULL
 
   CALL s_transaction_begin()
   WHILE TRUE
     
      #單頭預設值
            LET g_glcc_m.glaa014 = "N"
      LET g_glcc_m.glaa008 = "N"
      LET g_glcc_m.chk01 = "Y"
      LET g_glcc_m.chk02 = "Y"
      LET g_glcc_m.chk03 = "N"
      LET g_glcc_m.chk04 = "N"
      LET g_glcc_m.chk05 = "Y"
      LET g_glcc_m.chk06 = "Y"
 
     
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
 
      CALL agli161_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_glcc_m.* = g_glcc_m_t.*
         CALL agli161_show()
         CALL cl_err('',9001,0)
         EXIT WHILE
      END IF
      
      CALL g_glcc_d.clear()
      CALL g_glcc2_d.clear()
 
      
      #add-point:單頭輸入後2
      {<point name="insert.after_insert2"/>}
      #end add-point
 
      LET g_rec_b = 0
      EXIT WHILE
      
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_glccld_t = g_glcc_m.glccld
 
   
   LET g_wc = g_wc,  
              " OR ( glccent = '" ||g_enterprise|| "' AND ",
              " glccld = '", g_glcc_m.glccld CLIPPED, "' "
 
              , ") "
   
END FUNCTION
]]>
  </section>
  <section id="agli161.insert_b" ver="2" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION agli161_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
 
   
END FUNCTION
]]>
  </section>
  <section id="agli161.lock_b" ver="2" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION agli161_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL agli161_b_fill()
   
 
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="agli161.main" ver="5" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("agl","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT glccld,'','','','','','','','','','','','',''", 
                      " FROM glcc_t",
                      " WHERE glccent= ? AND glccld=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE agli161_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE glccld,t1.glaal002",
               " FROM glcc_t",
                              " LEFT JOIN glaal_t t1 ON t1.glaalent='"||g_enterprise||"' AND t1.glaalld=glccld AND t1.glaal001='"||g_dlang||"' ",
 
               " WHERE glccent = '" ||g_enterprise|| "' AND glccld = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE agli161_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_agli161 WITH FORM cl_ap_formpath("agl",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL agli161_init()   
 
      #進入選單 Menu (="N")
      CALL agli161_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_agli161
      
   END IF 
   
   CLOSE agli161_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="agli161.modify" ver="3" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION agli161_modify()
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_glcc_m.glccld IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE agli161_master_referesh USING g_glcc_m.glccld INTO g_glcc_m.glccld,g_glcc_m.glccld_desc
 
   ERROR ""
  
   LET g_glccld_t = g_glcc_m.glccld
 
   CALL s_transaction_begin()
   
   OPEN agli161_cl USING g_enterprise,g_glcc_m.glccld
 
   IF STATUS THEN
      CALL cl_err("OPEN agli161_cl:", STATUS, 1)
      CLOSE agli161_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH agli161_cl INTO g_glcc_m.glccld,g_glcc_m.glccld_desc,g_glcc_m.glaacomp,g_glcc_m.glaacomp_desc, 
       g_glcc_m.glaa014,g_glcc_m.glaa008,g_glcc_m.glaa004,g_glcc_m.glaa004_desc,g_glcc_m.chk01,g_glcc_m.chk02, 
       g_glcc_m.chk03,g_glcc_m.chk04,g_glcc_m.chk05,g_glcc_m.chk06
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_glcc_m.glccld,SQLCA.sqlcode,0)
      CLOSE agli161_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   CALL s_transaction_end('Y','0')
 
   CALL agli161_show()
   WHILE TRUE
      LET g_glccld_t = g_glcc_m.glccld
 
 
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      CALL agli161_input("u")     #欄位更改
      
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_glcc_m.* = g_glcc_m_t.*
         CALL agli161_show()
         CALL cl_err('',9001,0)
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更
      IF g_glcc_m.glccld != g_glccld_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單頭(偽)修改前
         {<point name="modify.b_key_update" mark="Y"/>}
         #end add-point
         
         #更新單頭key值
         UPDATE glcc_t SET glccld = g_glcc_m.glccld
 
          WHERE glccent = g_enterprise AND glccld = g_glccld_t
 
         #add-point:單頭(偽)修改中
         {<point name="modify.m_key_update"/>}
         #end add-point
         
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("glcc_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("glcc_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
 
 
         
         #add-point:單頭(偽)修改後
         {<point name="modify.a_key_update"/>}
         #end add-point
         
      END IF
      
      EXIT WHILE
      
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_glcc_m.glccld,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE agli161_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_glcc_m.glccld,'U')
 
   CALL agli161_b_fill("1=1")
   
END FUNCTION   
]]>
  </section>
  <section id="agli161.modify_detail_chk" ver="3" status="" src="s">
    <![CDATA[#+ 單身輸入判定
PRIVATE FUNCTION agli161_modify_detail_chk(ps_record)
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "glcc001"
      WHEN "s_detail2"
         LET ls_return = "glcc001_2"
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
]]>
  </section>
  <section id="agli161.other_function" ver="1" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="agli161.query" ver="4" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION agli161_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #add-point:query開始前
   {<point name="query.befroe_query"/>}
   #end add-point 
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
   
   LET ls_wc = g_wc
 
   LET INT_FLAG = 0    
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_glcc_d.clear()
   CALL g_glcc2_d.clear()
 
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL agli161_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL agli161_browser_fill(g_wc)
      CALL agli161_fetch("")
      RETURN
   END IF
   
   LET l_ac = 1
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   LET g_error_show = 1
   CALL agli161_browser_fill("F")
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||")")
   
   #備份搜尋條件
   LET ls_wc = g_wc
   
   IF g_browser.getLength() = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL agli161_fetch("F") 
   END IF
   
   LET g_wc_filter = ""
   
END FUNCTION
]]>
  </section>
  <section id="agli161.ref_show" ver="5" status="" src="s">
    <![CDATA[#+ 帶出reference資料
PRIVATE FUNCTION agli161_ref_show()
   DEFINE l_ac_t LIKE type_t.num10 #l_ac暫存用
   #add-point:ref_show段define
   {<point name="ref_show.define"/>}
   #end add-point
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:ref_show段m_reference
   {<point name="ref_show.head.reference"/>}
   #end add-point
 
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_glcc_d.getLength()
      #add-point:ref_show段d_reference
      {<point name="ref_show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_glcc2_d.getLength()
      #add-point:ref_show段d2_reference
      {<point name="ref_show.body2.reference"/>}
      #end add-point
   END FOR
 
   
   #add-point:ref_show段自訂
   {<point name="ref_show.other_reference"/>}
   #end add-point
   
   LET l_ac = l_ac_t
 
END FUNCTION
]]>
  </section>
  <section id="agli161.reproduce" ver="4" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION agli161_reproduce()
   DEFINE l_newno     LIKE glcc_t.glccld 
   DEFINE l_oldno     LIKE glcc_t.glccld 
 
   DEFINE l_master    RECORD LIKE glcc_t.*
   DEFINE l_detail    RECORD LIKE glcc_t.*
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
 
   IF g_glcc_m.glccld IS NULL
 
      THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   LET g_glccld_t = g_glcc_m.glccld
 
   
   LET g_glcc_m.glccld = ""
 
    
   CALL agli161_set_entry('a')
   CALL agli161_set_no_entry('a')
   
   CALL cl_set_head_visible("","YES")
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL agli161_input("r")
   
      LET g_glcc_m.glccld_desc = ''
   DISPLAY BY NAME g_glcc_m.glccld_desc
 
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = g_wc,  
              " OR (",
              " glccld = '", l_newno CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="agli161.set_entry" ver="2" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION agli161_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("glccld",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="agli161.set_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION agli161_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="agli161.set_no_entry" ver="3" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION agli161_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("glccld",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="agli161.set_no_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION agli161_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b段"/>}
   #end add-point 
   
END FUNCTION
]]>
  </section>
  <section id="agli161.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION agli161_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_glcc_m.glccld
   LET g_pk_array[1].column = 'glccld'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="agli161.show" ver="3" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION agli161_show()
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   IF g_bfill = "Y" THEN
      CALL agli161_b_fill(g_wc2) #單身填充
      CALL agli161_b_fill2('0') #單身填充
   END IF
   
   
 
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL agli161_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
 
   LET g_glcc_m_t.* = g_glcc_m.*      #保存單頭舊值
   
   DISPLAY BY NAME g_glcc_m.glccld,g_glcc_m.glccld_desc,g_glcc_m.glaacomp,g_glcc_m.glaacomp_desc,g_glcc_m.glaa014, 
       g_glcc_m.glaa008,g_glcc_m.glaa004,g_glcc_m.glaa004_desc,g_glcc_m.chk01,g_glcc_m.chk02,g_glcc_m.chk03, 
       g_glcc_m.chk04,g_glcc_m.chk05,g_glcc_m.chk06
   CALL agli161_b_fill(g_wc2_table1)                 #單身
   CALL agli161_b_fill2('0') #單身填充
 
   CALL agli161_ref_show()
 
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()  
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point   
   
END FUNCTION
]]>
  </section>
  <section id="agli161.state_change" ver="1" status="" src="s">
    <![CDATA[    
]]>
  </section>
  <section id="agli161.ui_browser_refresh" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION agli161_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_glccld = g_glcc_m.glccld 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="agli161.ui_detailshow" ver="2" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION agli161_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point  
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
      #add-point:ui_detailshow段more
      {<point name="ui_detailshow.more"/>}
      #end add-point 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point 
   
END FUNCTION
]]>
  </section>
  <section id="agli161.ui_dialog" ver="22" status="" src="s">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION agli161_ui_dialog()
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point  
   
   LET lb_first = TRUE
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      CALL agli161_browser_fill("")
 
      
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_glccld = g_glccld_t
 
               THEN
               LET g_current_row = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
      
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
        
         DISPLAY ARRAY g_glcc_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL agli161_ui_detailshow()
               
               #add-point:page1自定義行為
               {<point name="ui_dialog.body.before_row"/>}
               #end add-point
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               
               #控制stus哪個按鈕可以按
               
               
            
 
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_glcc2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
         
            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL agli161_ui_detailshow()
               
               #add-point:page1自定義行為
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)      
            
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL g_curr_diag.setSelectionMode("s_detail1",1)         
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LET g_current_idx = g_browser.getLength()
            END IF 
            
            IF g_current_idx = 0 AND g_browser.getLength() > 0 THEN
               LET g_current_idx = 1 
            END IF
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL agli161_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL agli161_ui_detailshow() #Setting the current row 
            
            #add-point:ui_dialog段before dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         
         
         ON ACTION first
            CALL agli161_fetch('F')
            LET g_current_row = g_current_idx         
          
         ON ACTION previous
            CALL agli161_fetch('P')
            LET g_current_row = g_current_idx
          
         ON ACTION jump
            CALL agli161_fetch('/')
            LET g_current_row = g_current_idx
        
         ON ACTION next
            CALL agli161_fetch('N')
            LET g_current_row = g_current_idx
         
         ON ACTION last
            CALL agli161_fetch('L')
            LET g_current_row = g_current_idx
          
         ON ACTION close
            LET INT_FLAG=FALSE        
            LET g_action_choice = "exit"
            EXIT DIALOG     
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
          
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
                CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD glcc001
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
            
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL agli161_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL agli161_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL agli161_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
               
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL agli161_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL agli161_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL agli161_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL agli161_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL agli161_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL agli161_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         
         
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL agli161_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL agli161_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL agli161_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
   
   CALL cl_set_act_visible("accept,cancel", TRUE)
   
END FUNCTION
]]>
  </section>
  <section id="agli161.ui_headershow" ver="3" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION agli161_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_glcc_m.glccld = g_browser[g_current_idx].b_glccld   
 
   EXECUTE agli161_master_referesh USING g_glcc_m.glccld INTO g_glcc_m.glccld,g_glcc_m.glccld_desc
   CALL agli161_show()
   
END FUNCTION
]]>
  </section>
  <section id="agli161.unlock_b" ver="2" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION agli161_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
 
 
END FUNCTION
]]>
  </section>
  <section id="agli161.update_b" ver="2" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION agli161_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
 
   
 
   
END FUNCTION
]]>
  </section>
</add_points>
