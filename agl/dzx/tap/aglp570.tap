<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="aglp570" std_prog="aglp570" erpver="1.0" module="AGL" ver="1" env="s" zone="t10dev" booking="Y" type="M" identity="s">
  <other>
    <code_template value="P" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="function.aglp570_glac001_desc" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#会计科目参照表号说明
PRIVATE FUNCTION aglp570_glac001_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = '0'
   LET g_ref_fields[2] = g_master.glac001
   CALL ap_ref_array2(g_ref_fields,"SELECT ooall004 FROM ooall_t WHERE ooallent='"||g_enterprise||"' AND ooall001=? AND ooall002=? AND ooall003='"||g_dlang||"'","") RETURNING g_rtn_fields
   RETURN  g_rtn_fields[1]  
END FUNCTION]]>
  </point>
  <point name="function.aglp570_glac002_desc" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#科目说明
PRIVATE FUNCTION aglp570_glac002_desc(p_glac002)
   DEFINE p_glac002    LIKE glac_t.glac002
    
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_glac002
   CALL ap_ref_array2(g_ref_fields,"SELECT glacl004 FROM glacl_t WHERE glaclent='"||g_enterprise||"' AND glacl001 = '"||g_glaa004||"' AND glacl002 = ? AND glacl003='"||g_dlang||"'","") RETURNING g_rtn_fields
   RETURN  g_rtn_fields[1]
END FUNCTION]]>
  </point>
  <point name="function.aglp570_glac001_chk" order="3" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#会计科目参照表号检查
PRIVATE FUNCTION aglp570_glac001_chk()
   DEFINE l_ooalstus    LIKE glaa_t.glaastus
    
    LET g_errno = ''
    SELECT ooalstus INTO l_ooalstus FROM ooal_t 
     WHERE ooalent = g_enterprise
       AND ooal001 = '0'
       AND ooal002 = g_glac001
    CASE
       WHEN sqlca.sqlcode  = 100    LET g_errno = 'agl-00007'
       WHEN l_ooalstus = 'N'        LET g_errno = 'agl-00004'  
    END CASE
END FUNCTION]]>
  </point>
  <point name="function.aglp570_glac002_chk" order="4" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#科目值检查
PRIVATE FUNCTION aglp570_glac002_chk(p_glac002,p_flag)
   DEFINE p_glac002    LIKE glap_t.glap006
   DEFINE p_flag       LIKE type_t.chr1         #标记是原科目还是过滤科目，1：原，2：过滤
   DEFINE l_glacstus   LIKE glac_t.glacstus
   DEFINE l_glac003    LIKE glac_t.glac003
   DEFINE l_glac006    LIKE glac_t.glac006
   
   LET g_errno = ''
   SELECT glacstus,glac003,glac006 INTO l_glacstus,l_glac003,l_glac006 FROM glac_t
    WHERE glacent = g_enterprise
      AND glac001 = g_glaa004  #会计科目参照表号
      AND glac002 = p_glac002
       
   CASE
      WHEN SQLCA.SQLCODE = 100   LET g_errno = 'agl-00011'
      WHEN l_glacstus = 'N'      LET g_errno = 'agl-00012'
      WHEN l_glac003 = '1'       LET g_errno = 'agl-00013'  #必须为非统治类科目
      WHEN l_glac006 <>'1'       LET g_errno = 'agl-00030'     #须为账户性质   
      WHEN l_glac003 <> '2'      
      IF p_flag = '2'  THEN
         LET g_errno  ='agl-00146'  #科目须为明细科目
      END IF     
      
   END CASE   
END FUNCTION]]>
  </point>
  <point name="function.aglp570_glac002_chk2" order="5" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#新明细科目检查
PRIVATE FUNCTION aglp570_glac002_chk2()
   DEFINE l_count        LIKE type_t.num5
    
    LET g_errno = ''
    SELECT count(*) INTO l_count FROM glac_t
     WHERE glacent = g_enterprise
       AND glac001 = g_glac001
       AND glac002 = g_glac002_p
    IF l_count > 0 THEN
       LET g_errno = 'agl-00147'
    END IF 
END FUNCTION]]>
  </point>
  <point name="function.aglp570_docno_chk" order="6" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#单别检查
PRIVATE FUNCTION aglp570_docno_chk()
   DEFINE p_glapdocno      LIKE glap_t.glapdocno
   DEFINE l_oobastus       LIKE ooba_t.oobastus
   
   SELECT oobastus INTO l_oobastus 
     FROM ooba_t LEFT OUTER JOIN oobx_t ON (oobaent=oobxent AND ooba002=oobx001)
    WHERE oobaent = g_enterprise
      AND ooba001 = g_glaa024        #单据别参照表号
      AND ooba002 = g_ooba002        #单据别
      AND oobx002 = 'AGL'
      AND oobx003 ='aglt310'         #单据性质
   CASE
      WHEN SQLCA.SQLCODE =100  LET g_errno = 'aim-00056'
      WHEN l_oobastus = 'N'    LET g_errno = 'aim-00057'
   END CASE
END FUNCTION]]>
  </point>
  <point name="function.aglp570_sel_1" order="7" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#更新會科基本資料及科目相關歷史資料
#※本作業提供獨立科目轉明細科目/明細科目轉統制科目的批次轉換程序
#新增的这个科目为旧科目的明细科目，层级99，旧科目转为统治，如果旧科目为明细则层级+1，否则层级不变
PRIVATE FUNCTION aglp570_sel_1()
   DEFINE l_sql       STRING
   
    #1.新增會計科目基本資料檔(glac_t,glacl_t,glacs_t)
    #  會計科目=劃面上輸入的新明細科目編號
　  #  其餘欄位=抓原科目編號的對應欄位值
    #2.更新原會計科目編號為統制科目
    #  
    #3.重新計算新舊科目對應的科目層級並回寫該欄位
    #4.新增帳別科目管理設定檔(glad_t)
    #針對使用本參照表的所有帳別,依上述會計科目的新增規則,同步更新帳別科目管理設定檔資料
    CALL aglp570_ins_acc()     
    #5.更新總帳模組各相關檔案.参照表号为当前营运中心参照表的所有帐别下的，原科目編號為新明細科目編號
    # -檔案清單如下:
    #  會計傳票單頭檔(glap_t).glap006
    #  會計傳票單身檔(glaq_t).glaq002
    #  會計科目期餘額檔(glar_t).glar001
    #  傳票摘要彈性預設檔(glah_t).glah001
    #  自由核算項彈性預設檔(glag_t).glag001
    #  會計科目設限檔(glak_t).glak003
    #  報表結構設定單身檔(glaj_t).glaj009/glaj010
    #  常用分攤傳票單身檔(glam_t).glam002/glam005/glam006
    #  常用分攤傳票金額來源檔(glan_t).glan001
    #  帳別科目對應檔(glaw_t).glaw002/glaw004
    UPDATE glap_t SET glap006 = g_glac002_p
                WHERE glapent = g_enterprise
                  AND glapld IN( SELECT glaald FROM glaa_t WHERE glaaent = g_enterprise
                                                             AND glaa004 = g_glaa004)
                  AND glap006 = g_glac002_s   
    IF SQLCA.SQLCODE THEN
       CALL cl_errmsg('UPD_glap006','','',SQLCA.SQLCODE,1) 
       LET g_success = 'N'
    END IF 
    
    UPDATE glaq_t SET glaq002 = g_glac002_p
                WHERE glaqent = g_enterprise
                  AND glaqld IN (SELECT glaald FROM glaa_t WHERE glaaent = g_enterprise
                                                             AND glaa004 = g_glaa004)
                  AND glaq002 = g_glac002_s     
    IF SQLCA.SQLCODE THEN
       CALL cl_errmsg('UPD_glaq002','','',SQLCA.SQLCODE,1) 
       LET g_success = 'N'
    END IF 
    
    UPDATE glar_t SET glar001 = g_glac002_p
                WHERE glarent = g_enterprise
                  AND glarld IN( SELECT glaald FROM glaa_t WHERE glaaent = g_enterprise
                                                             AND glaa004 = g_glaa004)
                  AND glar001 = g_glac002_s    
    IF SQLCA.SQLCODE THEN
       CALL cl_errmsg('UPD_glar001','','',SQLCA.SQLCODE,1) 
       LET g_success = 'N'
    END IF 
    
    UPDATE glah_t SET glah001 = g_glac002_p
                WHERE glahent = g_enterprise
                  AND glahld IN( SELECT glaald FROM glaa_t WHERE glaaent = g_enterprise
                                                             AND glaa004 = g_glaa004)
                  AND glah001 = g_glac002_s 
    IF SQLCA.SQLCODE THEN
       CALL cl_errmsg('UPD_glah001','','',SQLCA.SQLCODE,1) 
       LET g_success = 'N'
    END IF 
    
    UPDATE glag_t SET glag001 = g_glac002_p
                WHERE glagent = g_enterprise
                  AND glagld IN( SELECT glaald FROM glaa_t WHERE glaaent = g_enterprise
                                                             AND glaa004 = g_glaa004)
                  AND glag001 = g_glac002_s 
    IF SQLCA.SQLCODE THEN
       CALL cl_errmsg('UPD_glag001','','',SQLCA.SQLCODE,1) 
       LET g_success = 'N'
    END IF 

    UPDATE glak_t SET glak003 = g_glac002_p
                WHERE glakent = g_enterprise
                  AND glakld IN (SELECT glaald FROM glaa_t WHERE glaaent = g_enterprise
                                                             AND glaa004 = g_glaa004)
                  AND glak003 = g_glac002_s 
    IF SQLCA.SQLCODE THEN
       CALL cl_errmsg('UPD_glak003','','',SQLCA.SQLCODE,1) 
       LET g_success = 'N'
    END IF 
    
    #UPDATE glaj_t SET glaj009 = g_glac002_p
    #            WHERE glajent = g_enterprise
    #              AND glaj009 = g_glac002_s 
    #IF SQLCA.SQLCODE THEN
    #   CALL cl_errmsg('UPD_glaj009','','',SQLCA.SQLCODE,1) 
    #   LET g_success = 'N'
    #END IF 
    #
    #UPDATE glaj_t SET glaj010 = g_glac002_p
    #            WHERE glajent = g_enterprise
    #              AND glaj010 = g_glac002_s 
    #IF SQLCA.SQLCODE THEN
    #   CALL cl_errmsg('UPD_glaj010','','',SQLCA.SQLCODE,1) 
    #   LET g_success = 'N'
    #END IF 
    
    UPDATE glam_t SET glam002 = g_glac002_p
                WHERE glament = g_enterprise
                  AND glamld IN( SELECT glaald FROM glaa_t WHERE glaaent = g_enterprise
                                                             AND glaa004 = g_glaa004)
                  AND glam002 = g_glac002_s 
    IF SQLCA.SQLCODE THEN
       CALL cl_errmsg('UPD_glam002','','',SQLCA.SQLCODE,1) 
       LET g_success = 'N'
    END IF 
    
    UPDATE glam_t SET glam005 = g_glac002_p
                WHERE glament = g_enterprise
                  AND glamld IN( SELECT glaald FROM glaa_t WHERE glaaent = g_enterprise
                                                             AND glaa004 = g_glaa004)
                  AND glam005 = g_glac002_s 
    IF SQLCA.SQLCODE THEN
       CALL cl_errmsg('UPD_glam005','','',SQLCA.SQLCODE,1) 
       LET g_success = 'N'
    END IF 
    
    UPDATE glam_t SET glam006 = g_glac002_p
                WHERE glament = g_enterprise
                  AND glamld IN( SELECT glaald FROM glaa_t WHERE glaaent = g_enterprise
                                                             AND glaa004 = g_glaa004)
                  AND glam006 = g_glac002_s 
    IF SQLCA.SQLCODE THEN
       CALL cl_errmsg('UPD_glam006','','',SQLCA.SQLCODE,1) 
       LET g_success = 'N'
    END IF 
    
    UPDATE glan_t SET glan001 = g_glac002_p
                WHERE glanent = g_enterprise
                  AND glanld IN( SELECT glaald FROM glaa_t WHERE glaaent = g_enterprise
                                                             AND glaa004 = g_glaa004)
                  AND glan001 = g_glac002_s 
    IF SQLCA.SQLCODE THEN
       CALL cl_errmsg('UPD_glan001','','',SQLCA.SQLCODE,1) 
       LET g_success = 'N'
    END IF 
    
    UPDATE glaw_t SET glaw002 = g_glac002_p
                WHERE glawent = g_enterprise
                  AND glaw001 IN( SELECT glaald FROM glaa_t WHERE glaaent = g_enterprise
                                                             AND glaa004 = g_glaa004)                                         
                  AND glaw002 = g_glac002_s 
    IF SQLCA.SQLCODE THEN
       CALL cl_errmsg('UPD_glaw002','','',SQLCA.SQLCODE,1) 
       LET g_success = 'N'
    END IF 
    
    UPDATE glaw_t SET glaw004 = g_glac002_p
                WHERE glawent = g_enterprise
                  AND glaw003 IN ( SELECT glaald FROM glaa_t WHERE glaaent = g_enterprise
                                                             AND glaa004 = g_glaa004)   
                  AND glaw004 = g_glac002_s
    IF SQLCA.SQLCODE THEN
       CALL cl_errmsg('UPD_glaw004','','',SQLCA.SQLCODE,1) 
       LET g_success = 'N'
    END IF  

   #6.更新其它模組(非總帳)檔案中含會計科目編號欄位.原科目編號為新明細科目編號
   #  -檔案清單如下: (涉及其他模組規格,待補)

　 #7.依系統整體標準將上述更新寫入log檔(整體標準log機制未定,待補）
END FUNCTION]]>
  </point>
  <point name="function.aglp570_sel_2" order="8" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#更新會科基本資料並產生科餘結轉的傳票
PRIVATE FUNCTION aglp570_sel_2()
   DEFINE l_sql   STRING
   DEFINE l_sum           LIKE glar_t.glar005    
   DEFINE l_sum1          LIKE glar_t.glar005    #借方金额
   DEFINE l_sum2          LIKE glar_t.glar006    #贷方金额
   DEFINE l_today         DATETIME YEAR TO SECOND
   DEFINE l_glac005       LIKE glac_t.glac005     #层级
   DEFINE l_glac006       LIKE glac_t.glac006     #科目性质
   DEFINE l_success       LIKE type_t.num5
   DEFINE l_glapdocno     LIKE glap_t.glapdocno
   DEFINE l_cnt           LIKE type_t.num5
   DEFINE l_glaald        LIKE glaa_t.glaald
   DEFINE ld_date         DATETIME YEAR TO SECOND
   DEFINE l_glaq_m        RECORD LIKE glaq_t.*
   DEFINE l_glaq              DYNAMIC ARRAY OF RECORD 
          glaq002             LIKE glaq_t.glaq002,
          glaq003             LIKE glaq_t.glaq003,
          glaq004             LIKE glaq_t.glaq004,
          glaq010             LIKE glaq_t.glaq010  
          END RECORD
   

   #1.新增會計科目基本資料檔(glac_t,glacl_t,glacs_t)及帳別科目管理設定檔(glad_t)
      #規則同步驟A.1~4  
      CALL aglp570_ins_acc()
   #2.計算原會計科目截至'啟用年度期別'之前的餘額總合並產生一張將原會科餘額轉入過渡科目的傳票憑證(一借一貸)
   #  傳票單別=劃面上指定的單別,單號依標準取號
   #  傳票日期=劃面上指定的啟用年度期別第一日(如輸入年期= 2013/06, 則傳票日期=2013/06/01)
   #  傳票性質='TR'科餘結轉
   #  IF 原會計科目餘額總合=借餘
   #     傳票單身兩筆(一借一貸):
   #     科目編號(借)=劃面上輸入的過渡科目
   #     科目編號(貸)=原會計科目編號
   #  IF 原會計科目餘額總合=貸餘
   #     傳票單身兩筆(一借一貸):
   #     科目編號(借)=原會計科目編號
   #     科目編號(貸)=劃面上輸入的過渡科目
   #  借貸方金額=計算出的原會計科目餘額
    
      INITIALIZE g_glap.* TO NULL
      INITIALIZE g_glaq.* TO NULL
      INITIALIZE l_glaq_m.* TO NULL
      CALL l_glaq.clear()
      #==========传票单头赋值==================   
      LET g_glap.glapent = g_enterprise
      LET g_glap.glapdocno = g_master.ooba002
      LET g_glap.glapcomp = g_glaacomp
      LET g_glap.glapdocdt = MDY(g_master.glap004,1,g_master.glap002)    
      LET g_glap.glap001 = '1'
      LET g_glap.glap002 = g_master.glap002
      LET g_glap.glap004 = g_master.glap004
      LET g_glap.glap007 = 'TR'
      LET g_glap.glapstus = 'Y'
      LET g_glap.glapcrtid = g_user
      LET g_glap.glapcrtdt = cl_get_current()
      LET g_glap.glapownid = g_user
      LET g_glap.glapowndp = g_dept
      LET g_glap.glapcrtid = g_user
      LET g_glap.glapcrtdp = g_dept 
      LET g_glap.glapcrtdt = cl_get_current()
      LET g_glap.glapcnfid = g_user
      LET g_glap.glapcnfdt = cl_get_current()
      LET ld_date = cl_get_current()
      #=============单身给值=========================
      LET g_glaq.glaqent = g_enterprise
      LET g_glaq.glaqld=g_glap.glapld
      LET g_glaq.glaqdocno = g_glap.glapdocno
      LET g_glaq.glaqcomp = g_glap.glapcomp
      #科目+借贷金额+原币金额
      SELECT SUM(glar005),SUM(glar006) INTO l_sum1,l_sum2 FROM glar_t
       WHERE glarent = g_enterprise
         AND glarld IN (SELECT glaald FROM glaa_t WHERE glaaent = g_enterprise AND glaa004 = g_glaa004)
         AND glar001 = g_glac002_s
         AND ((glar002 = g_glap002 AND glar003 < g_glap004) OR (glar002 < g_glap002))
      IF cl_null(l_sum1) THEN LET l_sum1 = 0  END IF 
      IF cl_null(l_sum2) THEN LET l_sum2 = 0  END IF
      IF l_sum1 = 0 AND l_sum2 = 0  THEN
         CALL cl_err('','agl-00159',0)
         RETURN
      END IF     
      IF l_sum1 - l_sum2 > 0 THEN                 #借余
         LET l_glaq[1].glaq002 = g_master.glac002        #借：劃面上輸入的過渡科目
         LET l_glaq[1].glaq003 = l_sum1
         LET l_glaq[1].glaq004 = 0
         LET l_glaq[1].glaq010 = l_sum1
         LET l_glaq[2].glaq002 = g_master.glac002_s      #贷：原會計科目編號
         LET l_glaq[2].glaq003 = 0
         LET l_glaq[2].glaq004 = l_sum1
         LET l_glaq[2].glaq010 = l_sum1
         LET g_glap.glap010 = l_sum1
         LET g_glap.glap011 = l_sum1
      ELSE                                        #贷余，当借贷相等科目给那边都是一样 
         LET l_glaq[1].glaq002 = g_master.glac002_s      #借：原會計科目編號
         LET l_glaq[1].glaq003 = l_sum2
         LET l_glaq[1].glaq004 = 0
         LET l_glaq[1].glaq010 = l_sum2
         LET l_glaq[2].glaq002 = g_master.glac002        #贷：劃面上輸入的過渡科目
         LET l_glaq[2].glaq003 = 0
         LET l_glaq[2].glaq004 = l_sum2
         LET l_glaq[2].glaq010 = l_sum2
         LET g_glap.glap010 = l_sum2
         LET g_glap.glap011 = l_sum2
      END IF 
      LET g_glaq.glaq005 = g_glaa001
      LET g_glaq.glaq006 = 1
      
      #该参照表号下面的对应的帐别，每个帐别都要产生一套'TR'凭证
      LET l_glaald = ''
      LET l_sql = " SELECT glaald FROM glaa_t WHERE glaaent = '",g_enterprise,"'",
                                              " AND glaa004 = '",g_glaa004,"'",
                                              " ORDER BY glaald "
      PREPARE aglp570_ins_pre1 FROM l_sql
      DECLARE aglp570_ins_cs1  CURSOR FOR aglp570_ins_pre1
      IF SQLCA.SQLCODE THEN
         CALL cl_errmsg('','','',SQLCA.SQLCODE,1)
         LET g_success = 'N' 
      END IF  
      #抓取原會計科目截至'啟用年度期別'之前的餘額總合並產生一張將原會科餘額轉入過渡科目的傳票憑證(一借一貸)
      #抓取glaq的资料，将原资料借贷互置，并且将原科目编号用新科目代替
      LET l_sql = " SELECT * FROM glaq_t ",
                  "  WHERE glaqent = '",g_enterprise,"'",
                  "    AND glaqld = ? ",
                  "    AND glaqdocno = ? ",
                  " ORDER BY glaqseq "                  
      PREPARE aglp570_glaq_pre2  FROM l_sql
      DECLARE aglp570_glaq_cs2   CURSOR FOR aglp570_glaq_pre2
      IF SQLCA.SQLCODE THEN
         CALL cl_errmsg('','','',SQLCA.SQLCODE,1)
         LET g_success = 'N' 
      END IF  
      
      FOREACH aglp570_ins_cs1  INTO l_glaald   
         IF SQLCA.SQLCODE THEN
             CALL cl_errmsg('','FOREACH','',SQLCA.SQLCODE,1)
             LET g_success = 'N' 
             EXIT FOREACH
         END IF  
         LET g_glap.glapld = l_glaald 
         CALL s_aooi200_gen_docno(g_site,g_master.ooba002,g_glap.glapdocdt,'aglt310') RETURNING l_success,l_glapdocno
         IF l_success = FALSE THEN
            LET g_success = 'N'      
            RETURN
         END IF           
         LET g_glap.glapdocno = l_glapdocno           
         #============INSERT_glap============== 
         INSERT INTO glap_t VALUES(g_glap.*)
         IF SQLCA.sqlcode THEN
            CALL cl_errmsg('INS_glap_sel_2',g_glap.glapdocno,'',SQLCA.SQLCODE,1)
            LET g_success = 'N' 
         END IF
         UPDATE glap_t SET glapcrtdt = ld_date,
                           glapcnfdt = ld_date
         WHERE glapent = g_enterprise
           AND glapld = g_glap.glapld
           AND glapdocno = g_glap.glapdocno
        IF SQLCA.SQLCODE THEN
           CALL cl_errmsg('UPD_glap_sel_2',g_glap.glapdocno,'',SQLCA.SQLCODE,1)
           LET g_success = 'N' 
        END IF 
         #============INSERT_glaq==============
         LET g_glaq.glaqld = g_glap.glapld
         LET g_glaq.glaqdocno = g_glap.glapdocno
         IF g_success = 'Y' THEN    
            FOR l_cnt =1 TO 2
               #INS---glaq_t
               LET g_glaq.glaqseq = l_cnt 
               LET g_glaq.glaq002 = l_glaq[l_cnt].glaq002
               LET g_glaq.glaq003 = l_glaq[l_cnt].glaq003
               LET g_glaq.glaq004 = l_glaq[l_cnt].glaq004
               
               INSERT INTO glaq_t VALUES(g_glaq.*)
               IF SQLCA.SQLCODE THEN
                  CALL cl_errmsg('INS_glaq_sel_2',g_glap.glapdocno,'',SQLCA.SQLCODE,1)
                  LET g_success = 'N' 
               END IF 
            END FOR
         END IF 
         #RT传票过账
         CALL s_voucher_post_chk(g_glap.glapld,g_glap.glapdocno) RETURNING l_success
         IF l_success = TRUE THEN
            CALL s_voucher_post_upd(g_glap.glapld,g_glap.glapdocno) RETURNING l_success
         END IF 
         IF l_success = FALSE THEN
            LET g_success = 'N'
         END IF
         
         #3.產生一張將過渡科目餘額轉入新明細科目的傳票憑證(一借一貸)
         # 將步驟B.1.產生的傳票借貸反轉後, 原會計科目編號以新明細科目編號取代,其餘欄位取值方法同步驟B.1.     
         CALL s_aooi200_gen_docno(g_site,g_master.ooba002,g_glap.glapdocdt,'aglt310') RETURNING l_success,l_glapdocno
         IF l_success = FALSE THEN
            LET g_success = 'N'      
            RETURN
         END IF
         LET g_glap.glapdocno = l_glapdocno
         INSERT INTO glap_t VALUES(g_glap.*)
         IF SQLCA.sqlcode THEN
            CALL cl_errmsg('INS_glap_sel_22',g_glap.glapdocno,'',SQLCA.SQLCODE,1)
            LET g_success = 'N' 
         END IF
         UPDATE glap_t SET glapcrtdt = ld_date,
                           glapcnfdt = ld_date
         WHERE glapent = g_enterprise
           AND glapld = g_glap.glapld
           AND glapdocno = g_glap.glapdocno
        IF SQLCA.SQLCODE THEN
           CALL cl_errmsg('UPD_glap_sel_22',g_glap.glapdocno,'',SQLCA.SQLCODE,1)
           LET g_success = 'N' 
        END IF 
         #============INSERT_glaq==============
         OPEN aglp570_glaq_cs2 USING l_glaald,g_glaq.glaqdocno
         FOREACH aglp570_glaq_cs2  INTO l_glaq_m.*
            IF SQLCA.SQLCODE THEN
                CALL cl_errmsg('','FOREACH','',SQLCA.SQLCODE,1)
                LET g_success = 'N' 
                EXIT FOREACH
            END IF
            LET l_glaq_m.glaqdocno = l_glapdocno         
            LET l_sum = l_glaq_m.glaq003
            LET l_glaq_m.glaq003 = l_glaq_m.glaq004
            LET l_glaq_m.glaq004 = l_sum
            IF l_glaq_m.glaq002 == g_master.glac002_s  THEN
               LET l_glaq_m.glaq002 = g_master.glac002_p
            END IF 
            INSERT INTO glaq_t VALUES(l_glaq_m.*)
            IF SQLCA.SQLCODE THEN
               CALL cl_errmsg('INS_glaq_sel_22',l_glaq_m.glaqdocno,'',SQLCA.SQLCODE,1)
               LET g_success = 'N' 
            END IF 
         END FOREACH 
         #RT传票过账
         CALL s_voucher_post_chk(g_glap.glapld,g_glap.glapdocno) RETURNING l_success
         IF l_success = TRUE THEN
            CALL s_voucher_post_upd(g_glap.glapld,g_glap.glapdocno) RETURNING l_success
         END IF 
         IF l_success = FALSE THEN
            LET g_success = 'N'
         END IF 
      END FOREACH  
END FUNCTION]]>
  </point>
  <point name="function.aglp570_ins_acc" order="9" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#新增科目档
#新科目为旧科目的明细科目，层级99，旧科目转为统治，如果旧科目为明细则层级+1，否则层级不变
PRIVATE FUNCTION aglp570_ins_acc()
   DEFINE l_sql       STRING    
   DEFINE l_today     DATETIME YEAR TO SECOND
   DEFINE l_glac005   LIKE glac_t.glac005     #层级
   DEFINE l_glac003   LIKE glac_t.glac003     #科目性质
   DEFINE l_n         LIKE type_t.num5


   #1.新增會計科目基本資料檔(glac_t,glacl_t,glacs_t)
   #  會計科目=劃面上輸入的新明細科目編號
　 #  其餘欄位=抓原科目編號的對應欄位值
   #新增主档
   LET l_today = cl_get_current()
   LET l_sql = " INSERT INTO glac_t(glacent,glac001,glac002,glac003,glac004,glac005,glac006,glac007,glac008,",
               "                    glac009,glac010,glac011,glac012,glac013,glac014,glac015,glac016,glac017,",
               "                    glac018,glac019,glac020,glac021,glac022,glac023,glac024,glac025,glac026,",
               "                    glacstus,glaccrtid,glaccrtdt,glaccrtdp,glacownid,glacowndp)",
               " SELECT glacent,glac001,'",g_master.glac002_p,"','2','",g_master.glac002_s,"','99',glac006,glac007,glac008,",
               "        glac009,glac010,glac011,glac012,glac013,glac014,glac015,glac016,glac017,",
               "        glac018,glac019,glac020,glac021,glac022,glac023,glac024,glac025,glac026,",
               "        glacstus,'",g_user,"','",g_today,"','",g_dept,"','",g_user,"','",g_dept,"' ",
               "   FROM glac_t ",
               "  WHERE glacent = '",g_enterprise,"'",
               "    AND glac001 = '",g_master.glac001,"'",
               "    AND glac002 = '",g_master.glac002_s,"'"
    PREPARE aglp570_glac_pre   FROM l_sql
    EXECUTE aglp570_glac_pre
    IF SQLCA.SQLCODE THEN
       CALL cl_errmsg('glac002',g_master.glac002_s,'',SQLCA.SQLCODE,1) 
       LET g_success = 'N'
    END IF
    UPDATE glac_t SET glaccrtdt = l_today
     WHERE glacent = g_enterprise
       AND glac001 = g_master.glac001
       AND glac002 = g_master.glac002_p
    IF SQLCA.SQLCODE THEN
       CALL cl_errmsg('UPD date',g_master.glac002_p,'',SQLCA.SQLCODE,1)
       LET g_success = 'N' 
    END IF 
    #新增多语言档
    #先判断对语言是否已经存在
    SELECT COUNT(*) INTO l_n  FROM glacl_t WHERE glaclent = g_enterprise
                                             AND glacl001 = g_master.glac001
                                             AND glacl002 = g_master.glac002_p
    IF l_n = 0 THEN                                             
       LET l_sql = " INSERT INTO glacl_t(glaclent,glacl001,glacl002,glacl003,glacl004,glacl005)",
                   " SELECT glaclent,glacl001,'",g_master.glac002_p,"',glacl003,'",g_master.glacl004,"',glacl005",
                   "   FROM glacl_t ",
                   "  WHERE glaclent = '",g_enterprise,"'",
                   "    AND glacl001 = '",g_master.glac001,"'",
                   "    AND glacl002 = '",g_master.glac002_s,"'"
       PREPARE aglp570_glacl_pre   FROM l_sql
       EXECUTE aglp570_glacl_pre
       IF SQLCA.SQLCODE THEN
          CALL cl_errmsg('glacl002',g_master.glac002_s,'',SQLCA.SQLCODE,1) 
          LET g_success = 'N'
       END IF 
    END IF 
    #新增提速档
    LET l_sql = " INSERT INTO glacs_t(glacsent,glacs001,glacs002,glacs003,glacs004)",
                " SELECT glacsent,glacs001,'",g_master.glac002_p,"',glacs003,glacs004",
                "   FROM glacs_t ",
                "  WHERE glacsent = '",g_enterprise,"'",
                "    AND glacs001 = '",g_master.glac001,"'",
                "    AND glacs002 = '",g_master.glac002_s,"'"
    PREPARE aglp570_glacs_pre   FROM l_sql
    EXECUTE aglp570_glacs_pre
    IF SQLCA.SQLCODE THEN
       CALL cl_errmsg('glacs002',g_master.glac002_s,'',SQLCA.SQLCODE,1) 
       LET g_success = 'N'
    END IF 
    
    #2.更新原會計科目編號為統制科目,
    #3.重新計算新舊科目對應的科目層級並回寫該欄位
    #科目层级：统治下为统治最末层为明细 
    SELECT glac003 INTO l_glac003 FROM glac_t
     WHERE glacent = g_enterprise
       AND glac001 = g_master.glac001
       AND glac002 = g_master.glac002_s
    
    SELECT glac005 INTO l_glac005 FROM glac_t
     WHERE glacent = g_enterprise
       AND glac001 = g_master.glac001
       AND glac002 = ( SELECT glac004 FROM glac_t WHERE glacent = g_enterprise 
                                                    AND glac001 = g_master.glac001
                                                    AND glac002 = g_master.glac002_s)    
    #若为明细科目则产生的下一层级为明细，自己作为统治科目,层级+1，否则层级不变
    IF l_glac003 = '2' THEN  
       LET l_glac005 = l_glac005+1
    END IF  
    UPDATE glac_t SET glac003 = '1',
                      glac005 = l_glac005  
     WHERE glacent = g_enterprise
       AND glac001 = g_master.glac001
       AND glac002 = g_master.glac002_s
    IF SQLCA.SQLCODE THEN
       CALL cl_errmsg('glac003','','',SQLCA.SQLCODE,1) 
       LET g_success = 'N'
    END IF 
    
    #4.新增帳別科目管理設定檔(glad_t)
    #針對使用本參照表的所有帳別,依上述會計科目的新增規則,同步更新帳別科目管理設定檔資料
    LET l_sql = " SELECT * FROM glad_t  ",
                "  WHERE gladent = '",g_enterprise,"'",
                "    AND gladld IN (SELECT glaald FROM glaa_t WHERE glaaent = '",g_enterprise,"'
                                                                 AND glaa004 = '",g_glaa004,"')" ,
                "    AND glad001 = '",g_master.glac002_s,"'",
                "   ORDER BY gladld "      
    
    PREPARE aglp570_glad_pre FROM l_sql
    DECLARE aglp570_glad_cs CURSOR FOR aglp570_glad_pre
    IF SQLCA.SQLCODE THEN
       CALL cl_errmsg('','','',SQLCA.SQLCODE,1) 
       LET g_success = 'N'
    END IF 
    OPEN aglp570_glad_cs
    FOREACH  aglp570_glad_cs  INTO  g_glad.*
       IF SQLCA.SQLCODE THEN
          CALL cl_errmsg('','FOREACH','',SQLCA.SQLCODE,1) 
          LET g_success = 'N'
          EXIT FOREACH
       END IF 
       LET g_glad.glad001 = g_master.glac002_p
       LET g_glad.gladcrtid = g_user
       LET g_glad.gladcrtdt = cl_get_current()
       LET g_glad.gladcrtdp = g_dept
       LET g_glad.gladownid = g_user
       LET g_glad.gladowndp = g_dept
       
       INSERT INTO glad_t VALUES(g_glad.*)
       IF SQLCA.SQLCODE THEN
          CALL cl_errmsg('','INS_glad','',SQLCA.SQLCODE,1) 
          LET g_success = 'N'
       END IF 
    END FOREACH 
END FUNCTION]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[DEFINE g_ref_fields             DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列 
DEFINE g_rtn_fields             DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列

DEFINE g_glapld                  LIKE glap_t.glapld       #帐别
DEFINE g_glaacomp                LIKE glaa_t.glaacomp     #法人
DEFINE g_glaa001                 LIKE glaa_t.glaa001      #币别
DEFINE g_glaa004                 LIKE glaa_t.glaa004      #会计科目参照表号
DEFINE g_glaa024                 LIKE glaa_t.glaa024      #单据别参照表号
DEFINE g_glad                    RECORD LIKE glad_t.*
DEFINE g_glap                    RECORD LIKE glap_t.*
DEFINE g_glaq                    RECORD LIKE glaq_t.*]]>
  </point>
  <point name="init.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_success     LIKE type_t.num5]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   #當前營運據點對應的法人編號之主帳別設置的科目參照表號
   #获取账别
   CALL s_ld_bookno()  RETURNING l_success,g_glapld
   IF l_success = FALSE THEN
      RETURN 
   END IF 
   #依据对应的主账套编码，抓取法人,账簿币别，会计科目参照编号
   SELECT glaacomp,glaa001,glaa004,glaa024 INTO g_glaacomp,g_glaa001,g_glaa004,g_glaa024
     FROM glaa_t
    WHERE glaaent = g_enterprise
      AND glaald = g_glapld]]>
  </point>
  <point name="input.a.glac001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            DISPLAY '' TO glac001_desc
            IF NOT cl_null(g_master.glac001) THEN
               CALL aglp570_glac001_chk()
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_master.glac001,g_errno,0)
                  LET g_master.glac001 = ''
                  DISPLAY '' TO glac001_desc
                  NEXT FIELD glac001
               END IF 
            END IF 
            CALL aglp570_glac001_desc() RETURNING g_master.glac001_desc
            DISPLAY g_master.glac001_desc TO glac001_desc ]]>
  </point>
  <point name="input.a.glac002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            DISPLAY '' TO glac002_desc
            IF NOT cl_null(g_master.glac002) THEN
               CALL aglp570_glac002_chk(g_master.glac002,'2')
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_master.glac002,g_errno,0)
                  LET g_master.glac002 = ''
                  DISPLAY '' TO glac002_desc
                  NEXT FIELD glac002
               END IF
               IF g_master.glac002_s == g_master.glac002 THEN
                  CALL cl_err(g_master.glac002,'agl-00152',0)
                  NEXT FIELD glac002
               END IF                
            END IF 
            CALL aglp570_glac002_desc(g_master.glac002) RETURNING g_master.glac002_desc
            DISPLAY g_master.glac002_desc TO glac002_desc]]>
  </point>
  <point name="input.a.glac002_p" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_master.glac002_p) THEN
               CALL aglp570_glac002_chk2()
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_master.glac002_p,g_errno,0)
                  LET g_master.glac002_p = ''
                  NEXT FIELD glac002_p
               END IF 
            END IF ]]>
  </point>
  <point name="input.a.glac002_s" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            DISPLAY '' TO glac002_s_desc
            IF NOT cl_null(g_master.glac002_s) THEN
               CALL aglp570_glac002_chk(g_master.glac002_s,'1')
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_master.glac002_s,g_errno,0)
                  LET g_master.glac002_s = ''
                  DISPLAY '' TO glac002_s_desc
                  NEXT FIELD glac002_s
               END IF
               IF g_master.glac002_s == g_master.glac002 THEN
                  CALL cl_err(g_master.glac002_s,'agl-00152',0)
                  NEXT FIELD glac002_s
               END IF 
            END IF 
            CALL aglp570_glac002_desc(g_master.glac002_s) RETURNING g_master.glac002_s_desc
            DISPLAY g_master.glac002_s_desc TO glac002_s_desc]]>
  </point>
  <point name="input.a.glap002" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_master.glap002) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.glap004" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_master.glap004) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.ooba002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_master.ooba002)  THEN
               CALL aglp570_docno_chk()
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_master.ooba002,g_errno,0)
                  LET g_master.ooba002 = ''
                  NEXT FIELD ooba002
               END IF 
            END IF ]]>
  </point>
  <point name="input.c.glac001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_master.glac001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_glac001()                                #呼叫開窗

            LET g_master.glac001 = g_qryparam.return1              
            CALL aglp570_glac001_desc() RETURNING g_master.glac001_desc
            DISPLAY g_master.glac001_desc TO glac001_desc
            DISPLAY g_master.glac001 TO glac001              #

            NEXT FIELD glac001                          #返回原欄位

]]>
  </point>
  <point name="input.c.glac002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_master.glac002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #
            LET g_qryparam.where = "glac001 = '",g_master.glac001,"' AND glac003='2' AND glac006 = '1'"    #须为明细科目+账户性质
            
            CALL q_glac002()                                #呼叫開窗

            LET g_master.glac002 = g_qryparam.return1              
            CALL aglp570_glac002_desc(g_master.glac002) RETURNING g_master.glac002_desc
            DISPLAY g_master.glac002_desc TO glac002_desc
            DISPLAY g_master.glac002 TO glac002              #

            NEXT FIELD glac002                          #返回原欄位

]]>
  </point>
  <point name="input.c.glac002_s" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_master.glac002_s             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #
            LET g_qryparam.where = "glac001 = '",g_master.glac001,"' AND glac003<>'1' AND glac006 = '1'"    #须为明细活独立科目+账户性质
            
            CALL q_glac002()                                #呼叫開窗

            LET g_master.glac002_s = g_qryparam.return1              
            CALL aglp570_glac002_desc(g_master.glac002_s) RETURNING g_master.glac002_s_desc
            DISPLAY g_master.glac002_s_desc TO glac002_s_desc
            DISPLAY g_master.glac002_s TO glac002_s              #

            NEXT FIELD glac002_s                          #返回原欄位

]]>
  </point>
  <point name="input.c.ooba002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_master.ooba002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #
            LET g_qryparam.where = "ooba001 = '",g_glaa024,"' AND oobx002 = 'AGL' AND oobx003 = 'aglt310' "
            
            CALL q_ooba002_4()                                #呼叫開窗

            LET g_master.ooba002 = g_qryparam.return1              

            DISPLAY g_master.ooba002 TO ooba002              #

            NEXT FIELD ooba002                          #返回原欄位

]]>
  </point>
  <point name="input.g.sel" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF g_master.sel = '1' THEN
               CALL cl_set_comp_entry('ooba002,glap002,glap004,glac002',FALSE)
               LET g_master.ooba002 = ''
               LET g_master.glap002 = ''
               LET g_master.glap004 = ''
            ELSE
               CALL cl_set_comp_entry('ooba002,glap002,glap004,glac002',TRUE)
               LET g_master.ooba002 = 'GL1'             #该单别维护的几个账套下先给默认的
               LET g_master.glap002 = YEAR(g_today)
               LET g_master.glap004 = MONTH(g_today)
            END IF]]>
  </point>
  <point name="input.m.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               #预设值
               LET g_master.glac001 =  g_glaa004
               CALL aglp570_glac001_desc() RETURNING g_master.glac001_desc
               DISPLAY g_master.glac001_desc TO glac001_desc
               LET g_master.sel = 1
               LET g_master.glap002 = ''
               LET g_master.glap004 = ''
               CALL cl_set_comp_entry('ooba002,glap002,glap004,glac002',FALSE)]]>
  </point>
  <point name="input.master_input.update_item" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_master.glac002_p)  THEN
                  CALL n_glacl(g_master.glac001,g_master.glac002_p)
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_master.glac002_p
                  CALL ap_ref_array2(g_ref_fields," SELECT glacl004 FROM glacl_t WHERE glaclent = '"
                      ||g_enterprise||"' AND glacl001 ='"||g_master.glac001||"'  AND glacl002 = ? AND glacl003 = '"||g_dlang||"'","") RETURNING g_rtn_fields
                  LET g_master.glacl004 = g_rtn_fields[1]
                  DISPLAY g_master.glacl004 TO glacl004
               END IF]]>
  </point>
  <point name="process.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_flag      LIKE type_t.num5]]>
  </point>
  <point name="process.pre_process" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   INITIALIZE g_glad.* TO NULL
   #错误信息汇总初始化
   CALL cl_showmsg_init()
   CALL s_transaction_begin() 
   LET g_success = 'Y'
   IF g_master.sel = '1'  THEN
     #更新會科基本資料及科目相關歷史資料
      CALL aglp570_sel_1()
   ELSE
     #更新會科基本資料並產生科餘結轉的傳票
      CALL aglp570_sel_2()
   END IF 
   IF g_success = 'N' THEN
      CALL s_transaction_end('N','0')
      CALL cl_err_showmsg() 
      CALL cl_ask_end2(2) RETURNING l_flag
   ELSE
      CALL s_transaction_end('Y','0')
      CALL cl_err_showmsg() 
      CALL cl_ask_end2(1) RETURNING l_flag
   END IF]]>
  </point>
  <point name="ui_dialog.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CLEAR FORM
   INITIALIZE g_master.* TO NULL]]>
  </point>
  <point name="ui_dialog.more_action" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <section id="aglp570.description" ver="1" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000195
#+ 
#+ Filename...: aglp570
#+ Description: 會計科目轉換作業
#+ Creator....: 02599(2014/07/04)
#+ Modifier...: 02599(2014/07/07)
#+ Buildtype..: 應用 p01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="aglp570.global" ver="2" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_schedule
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
END GLOBALS
 
PRIVATE TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
   {<point name="global.parameter"/>}
   #end add-point
        wc               STRING
                     END RECORD
 
DEFINE g_sql             STRING        #組 sql 用
DEFINE g_forupd_sql      STRING        #SELECT ... FOR UPDATE  SQL
DEFINE g_error_show      LIKE type_t.num5
DEFINE g_jobid           STRING
DEFINE g_wc              STRING
 
PRIVATE TYPE type_master RECORD
       glac001 LIKE glac_t.glac001, 
   glac001_desc LIKE type_t.chr80, 
   glac002_s LIKE type_t.chr80, 
   glac002_s_desc LIKE type_t.chr80, 
   glac002_p LIKE type_t.chr500, 
   glacl004 LIKE type_t.chr500, 
   sel LIKE type_t.chr80, 
   ooba002 LIKE ooba_t.ooba002, 
   glap002 LIKE glap_t.glap002, 
   glap004 LIKE glap_t.glap004, 
   glac002 LIKE glac_t.glac002, 
   glac002_desc LIKE type_t.chr80, 
   stagenow LIKE type_t.chr80,
       wc               STRING
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_master type_master
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="aglp570.init" ver="1" status="" src="s">
    <![CDATA[#+ 初始化作業
PRIVATE FUNCTION aglp570_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point
 
   LET g_error_show = 1
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aglp570.main" ver="1" status="" src="s">
    <![CDATA[MAIN
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter  
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point 
  
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("agl","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   {<point name="main.background"/>}
   #end add-point
 
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
      CALL aglp570_process(ls_js)
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aglp570 WITH FORM cl_ap_formpath("agl",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL aglp570_init()
 
      #進入選單 Menu (="N")
      CALL aglp570_ui_dialog()
 
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_aglp570
   END IF
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
]]>
  </section>
  <section id="aglp570.other_function" ver="1" status="" src="s">
    <![CDATA[#add-point:自定義元件(Function)
{<point name="other.function"/>}
#end add-point
]]>
  </section>
  <section id="aglp570.process" ver="1" status="" src="s">
    <![CDATA[#+ 資料處理
PRIVATE FUNCTION aglp570_process(ls_js)
   DEFINE ls_js       STRING
   DEFINE lc_param    type_parameter
   DEFINE li_stus     LIKE type_t.num5
   DEFINE li_count    LIKE type_t.num10  #progressbar計量
   DEFINE ls_sql      STRING             #主SQL
   #add-point:process段define
   {<point name="process.define"/>}
   #end add-point
 
   CALL util.JSON.parse(ls_js,lc_param)
 
   #add-point:process段前處理
   {<point name="process.pre_process"/>}
   #end add-point
 
   #預先計算progressbar迴圈次數
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress
      {<point name="process.count_progress"/>}
      #end add-point
   END IF
 
   #主SQL及相關FOREACH前置處理
#  DECLARE aglp570_process_cs CURSOR FROM ls_sql
#  FOREACH aglp570_process_cs INTO
   #add-point:process段process
   {<point name="process.process"/>}
   #end add-point
#  END FOREACH
 
   IF g_bgjob = "N" THEN
      #前景作業完成處理
      #add-point:process段foreground完成處理
      {<point name="process.foreground_finish"/>}
      #end add-point
      CALL cl_ask_confirm3("std-00012","")
   ELSE
      #背景作業完成處理
      #add-point:process段background完成處理
      {<point name="process.background_finish"/>}
      #end add-point
   END IF
END FUNCTION
]]>
  </section>
  <section id="aglp570.transfer_argv" ver="1" status="" src="s">
    <![CDATA[#+ 轉換本地參數至cmdrun參數內,準備進入背景執行
PRIVATE FUNCTION aglp570_transfer_argv(ls_js)
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog     STRING,
             param    DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter
 
   CALL util.JSON.parse(ls_js,la_param)
 
   LET la_cmdrun.prog = g_prog
   #add-point:transfer.argv段define
   {<point name="transfer.argv.define"/>}
   #end add-point
 
   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION
]]>
  </section>
  <section id="aglp570.ui_dialog" ver="3" status="" src="s">
    <![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION aglp570_ui_dialog()
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx   LIKE type_t.num5
   DEFINE ls_js    STRING
   DEFINE ls_wc    STRING
   DEFINE lc_param type_parameter
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
 
   #add-point:ui_dialog段before dialog
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   WHILE TRUE
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #+ 此段落由子樣板a57產生
         INPUT BY NAME g_master.glac001,g_master.glac002_s,g_master.glac002_p,g_master.glacl004,g_master.sel, 
             g_master.ooba002,g_master.glap002,g_master.glap004,g_master.glac002 
            ATTRIBUTE(WITHOUT DEFAULTS)
            
            #自訂ACTION(master_input)
            
         #+ 此段落由子樣板a43產生
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.master_input.update_item" />}
               #END add-point
            END IF
 
 
         
            BEFORE INPUT
               #add-point:資料輸入前
               {<point name="input.m.before_input"/>}
               #end add-point
         
                     #此段落由子樣板a02產生
         AFTER FIELD glac001
            
            #add-point:AFTER FIELD glac001
            {<point name="input.a.glac001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD glac001
            #add-point:BEFORE FIELD glac001
            {<point name="input.b.glac001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE glac001
            #add-point:ON CHANGE glac001
            {<point name="input.g.glac001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glac002_s
            
            #add-point:AFTER FIELD glac002_s
            {<point name="input.a.glac002_s" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD glac002_s
            #add-point:BEFORE FIELD glac002_s
            {<point name="input.b.glac002_s" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE glac002_s
            #add-point:ON CHANGE glac002_s
            {<point name="input.g.glac002_s" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glac002_p
            #add-point:BEFORE FIELD glac002_p
            {<point name="input.b.glac002_p" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glac002_p
            
            #add-point:AFTER FIELD glac002_p
            {<point name="input.a.glac002_p" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE glac002_p
            #add-point:ON CHANGE glac002_p
            {<point name="input.g.glac002_p" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glacl004
            #add-point:BEFORE FIELD glacl004
            {<point name="input.b.glacl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glacl004
            
            #add-point:AFTER FIELD glacl004
            {<point name="input.a.glacl004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE glacl004
            #add-point:ON CHANGE glacl004
            {<point name="input.g.glacl004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD sel
            #add-point:BEFORE FIELD sel
            {<point name="input.b.sel" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD sel
            
            #add-point:AFTER FIELD sel
            {<point name="input.a.sel" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE sel
            #add-point:ON CHANGE sel
            {<point name="input.g.sel" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD ooba002
            #add-point:BEFORE FIELD ooba002
            {<point name="input.b.ooba002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD ooba002
            
            #add-point:AFTER FIELD ooba002
            {<point name="input.a.ooba002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE ooba002
            #add-point:ON CHANGE ooba002
            {<point name="input.g.ooba002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glap002
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_master.glap002,"1000.000","1","9999.000","1","azz-00087",1) THEN
               NEXT FIELD glap002
            END IF
 
 
            #add-point:AFTER FIELD glap002
            {<point name="input.a.glap002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD glap002
            #add-point:BEFORE FIELD glap002
            {<point name="input.b.glap002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE glap002
            #add-point:ON CHANGE glap002
            {<point name="input.g.glap002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glap004
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_master.glap004,"1.000","1","13.000","1","azz-00087",1) THEN
               NEXT FIELD glap004
            END IF
 
 
            #add-point:AFTER FIELD glap004
            {<point name="input.a.glap004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD glap004
            #add-point:BEFORE FIELD glap004
            {<point name="input.b.glap004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE glap004
            #add-point:ON CHANGE glap004
            {<point name="input.g.glap004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glac002
            
            #add-point:AFTER FIELD glac002
            {<point name="input.a.glac002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD glac002
            #add-point:BEFORE FIELD glac002
            {<point name="input.b.glac002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE glac002
            #add-point:ON CHANGE glac002
            {<point name="input.g.glac002" />}
            #END add-point
 
 
                     #Ctrlp:input.c.glac001
         ON ACTION controlp INFIELD glac001
            #add-point:ON ACTION controlp INFIELD glac001
            {<point name="input.c.glac001" />}
            #END add-point
 
         #Ctrlp:input.c.glac002_s
         ON ACTION controlp INFIELD glac002_s
            #add-point:ON ACTION controlp INFIELD glac002_s
            {<point name="input.c.glac002_s" />}
            #END add-point
 
         #Ctrlp:input.c.glac002_p
         ON ACTION controlp INFIELD glac002_p
            #add-point:ON ACTION controlp INFIELD glac002_p
            {<point name="input.c.glac002_p" />}
            #END add-point
 
         #Ctrlp:input.c.glacl004
         ON ACTION controlp INFIELD glacl004
            #add-point:ON ACTION controlp INFIELD glacl004
            {<point name="input.c.glacl004" />}
            #END add-point
 
         #Ctrlp:input.c.sel
         ON ACTION controlp INFIELD sel
            #add-point:ON ACTION controlp INFIELD sel
            {<point name="input.c.sel" />}
            #END add-point
 
         #Ctrlp:input.c.ooba002
         ON ACTION controlp INFIELD ooba002
            #add-point:ON ACTION controlp INFIELD ooba002
            {<point name="input.c.ooba002" />}
            #END add-point
 
         #Ctrlp:input.c.glap002
         ON ACTION controlp INFIELD glap002
            #add-point:ON ACTION controlp INFIELD glap002
            {<point name="input.c.glap002" />}
            #END add-point
 
         #Ctrlp:input.c.glap004
         ON ACTION controlp INFIELD glap004
            #add-point:ON ACTION controlp INFIELD glap004
            {<point name="input.c.glap004" />}
            #END add-point
 
         #Ctrlp:input.c.glac002
         ON ACTION controlp INFIELD glac002
            #add-point:ON ACTION controlp INFIELD glac002
            {<point name="input.c.glac002" />}
            #END add-point
 
 
               
            AFTER INPUT
               #add-point:資料輸入後
               {<point name="input.m.after_input"/>}
               #end add-point
               
            #add-point:其他管控(on row change, etc...)
            {<point name="input.other"/>}
            #end add-point
               
         END INPUT
 
 
         
         #+ 此段落由子樣板a57產生
         CONSTRUCT BY NAME g_master.wc ON glacl004
         
            BEFORE CONSTRUCT
               #add-point:cs段before_construct
               {<point name="cs.head.before_construct"/>}
               #end add-point 
         
            #公用欄位開窗相關處理
            
               
            #一般欄位開窗相關處理    
                     #此段落由子樣板a01產生
         BEFORE FIELD glacl004
            #add-point:BEFORE FIELD glacl004
            {<point name="construct.b.glacl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glacl004
            
            #add-point:AFTER FIELD glacl004
            {<point name="construct.a.glacl004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.glacl004
         ON ACTION controlp INFIELD glacl004
            #add-point:ON ACTION controlp INFIELD glacl004
            {<point name="construct.c.glacl004" />}
            #END add-point
 
 
            
            #add-point:其他管控
            {<point name="cs.other"/>}
            #end add-point
            
         END CONSTRUCT
 
 
      
         #add-point:ui_dialog段construct
         {<point name="ui_dialog.more_construct"/>}
         #end add-point
         #add-point:ui_dialog段input
         {<point name="ui_dialog.more_input"/>}
         #end add-point
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
 
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET lc_param.wc = ls_wc
               #取得條件後需要執行項目,應新增於下方adp
               #add-point:ui_dialog段qbe_select後
               {<point name="ui_dialog.qbe_select"/>}
               #end add-point
            END IF
 
         ON ACTION qbe_save
            CALL cl_qbe_save()
 
         ON ACTION batch_execute
            ACCEPT DIALOG
 
         ON ACTION qbeclear         
            CLEAR FORM
            INITIALIZE lc_param.* TO NULL
            #add-point:ui_dialog段qbeclear
            {<point name="ui_dialog.qbeclear"/>}
            #end add-point
 
         ON ACTION history_fill
            CALL cl_schedule_history_fill()
 
         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT DIALOG
         
         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT DIALOG
 
         #add-point:ui_dialog段action
         {<point name="ui_dialog.more_action"/>}
         #end add-point
 
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      #add-point:ui_dialog段exit dialog
      {<point name="process.exit_dialog"/>}
      #end add-point
 
      LET ls_js = util.JSON.stringify(lc_param)
 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      ELSE
         LET g_jobid = cl_schedule_get_jobid(g_prog)
         CASE 
            WHEN g_schedule.gzpa003 = "0"
                 CALL aglp570_process(ls_js)
            WHEN g_schedule.gzpa003 = "1"
            #    CALL cl_schedule_update_data(g_jobid,ls_js)
                 LET ls_js = aglp570_transfer_argv(ls_js)
                 CALL cl_cmdrun(ls_js)
            WHEN g_schedule.gzpa003 = "2"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
            WHEN g_schedule.gzpa003 = "3"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
         END CASE    
         LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
         INITIALIZE lc_param.*  TO NULL 
         #欄位初始資訊 
         CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
         LET gi_hiden_asign = FALSE 
         LET gi_hiden_exec = FALSE 
         LET gi_hiden_spec = FALSE 
         LET gi_hiden_exec_end = FALSE 
         CALL cl_schedule_hidden()
      END IF
   END WHILE
 
END FUNCTION
]]>
  </section>
</add_points>
