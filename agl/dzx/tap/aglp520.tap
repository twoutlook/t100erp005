<add_points prog="aglp520" std_prog="aglp520" erpver="1.0" module="AGL" ver="1" env="s" zone="t10dev" booking="Y" type="M" identity="s">
  <other>
    <code_template value="P" status="" />
    <free_style value="N" status="" />
  </other>
  <point name="global.variable" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[DEFINE g_glaald         LIKE glaa_t.glaald      #主账套
DEFINE g_glaa003        LIKE glaa_t.glaa003     #會計週期
DEFINE g_ooef004        LIKE ooef_t.ooef004     #单据别参照表号
DEFINE g_ref_fields     DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields     DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE l_success     LIKE type_t.num5
   DEFINE l_pass        LIKE type_t.num5]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   #抓取单据别参照表号
   SELECT ooef004 INTO g_ooef004 FROM ooef_t
   WHERE ooefent = g_enterprise
     AND ooef001 = g_site
     AND ooefstus = 'Y'   
     
   #获取预设主帐别
   CALL s_ld_bookno()  RETURNING l_success,g_glaald
   IF l_success = FALSE THEN
      RETURN
   END IF
   
   #權限檢查
   CALL s_ld_chk_authorization(g_user,g_glaald) RETURNING l_pass
   IF l_pass = FALSE THEN
      CALL cl_err(g_glaald,'agl-00164',1)
      RETURN
   END IF
   #會計科目參照表
   SELECT glaa003 INTO g_glaa003 FROM glaa_t 
    WHERE glaaent = g_enterprise
      AND glaald = g_glaald ]]>
</point>
  <point name="input.a.glap009" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.a.glapld" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_master.glapld) THEN
               CALL aglp520_glapld_chk(g_master.glapld)
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_master.glapld,g_errno,0)
                  LET g_master.glapld = ''
                  DISPLAY '' TO glapld_desc
                  NEXT FIELD glapld
               END IF
               #检查使用者权限
               CALL s_ld_chk_authorization(g_user,g_master.glapld)  RETURNING l_pass
               IF l_pass = FALSE THEN
                  CALL cl_err(g_master.glapld,'axr-00022',0)
                  LET g_master.glapld = ''
                  DISPLAY '' TO glapld_desc
                  NEXT FIELD glapld
               END IF 
               #抓取會計週期
               LET g_glaa003 = ''
               SELECT glaa003 INTO g_glaa003 FROM glaa_t 
                WHERE glaaent = g_enterprise
                  AND glaald = g_master.glapld
            END IF 
            CALL aglp520_glapld_desc()]]>
</point>
  <point name="input.c.glapdocno" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_master.glapdocno             #給予default值
            #給予arg
            LET g_qryparam.where = "ooba001 = '",g_ooef004,"' AND oobx002 = 'AGL' AND oobx003 IN ('aglt310','aglt320','aglt330','aglt340','aglt350')"
            CALL q_ooba002()                                #呼叫開窗
            LET g_master.glapdocno = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_master.glapdocno TO glapdocno              #顯示到畫面上
            NEXT FIELD glapdocno                          #返回原欄位

]]>
</point>
  <point name="input.c.glapld" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_master.glapld       #給予default值
            #給予arg
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept
            CALL q_authorised_ld()
            LET g_master.glapld = g_qryparam.return1        #將開窗取得的值回傳到變數
            CALL aglp520_glapld_desc() 
            DISPLAY g_master.glapld_desc TO glapld_desc
            DISPLAY g_master.glapld TO glapld               #顯示到畫面上
            NEXT FIELD glapld 

]]>
</point>
  <point name="input.m.before_input" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               #预设值
               LET g_master.glapld =  g_glaald
               CALL aglp520_glapld_desc() 
               LET g_master.glap002 = YEAR(g_today)
               LET g_master.glap004 = MONTH(g_today)
               LET g_master.glapdocno = 'ALL'
               LET g_master.glap009 = 1    ]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.parameter" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.background" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[   DEFINE l_cnt     LIKE type_t.num5
   DEFINE l_pass    LIKE type_t.num5
   DEFINE l_glav003 LIKE glav_t.glav003]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.glapld" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.glapld" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.glap002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.glap002" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[            IF NOT cl_null(g_master.glap002) THEN
               IF g_master.glap002 <1000 OR g_master.glap002 >9999 THEN
                  CALL cl_err(g_master.glap002,'aoo-00113',0)
                  LET g_master.glap002 =''
                  NEXT FIELD glap002
               END IF  
            END IF]]>
</point>
  <point name="input.g.glap002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.glap004" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[            IF cl_null(g_master.glap002) THEN
               CALL cl_err('','agl-00183',0)
               NEXT FIELD glap002
            END IF]]>
</point>
  <point name="input.a.glap004" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[            IF NOT cl_null(g_master.glap004) THEN
                #资料检查,期别依据agli100对应年度设置不同，分12期和13期
                SELECT glav003 INTO l_glav003 FROM glav_t
                 WHERE glavent = g_enterprise
                   AND glav001 = g_glaa003
                   AND glav002 = g_master.glap002
                #1.月，2.周，3.445式   
                IF cl_null(l_glav003) OR l_glav003 = '1' OR l_glav003 = '3' THEN
                   IF (g_master.glap004 < 1) OR (g_master.glap004 > 12) THEN
                      CALL cl_err(g_master.glap004,'agl-00127',0)
                      LET g_master.glap004 = ''
                      NEXT FIELD glap004
                   END IF
                ELSE
                   IF g_master.glap004 <1 OR g_master.glap004 >13 THEN
                      CALL cl_err(g_master.glap004,'agl-00143',0)
                      LET g_master.glap004 = ''
                      NEXT FIELD glap004
                   END IF
                END IF
            END IF ]]>
</point>
  <point name="input.g.glap004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.glapdocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.glapdocno" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[            IF NOT cl_null(g_master.glapdocno) AND g_master.glapdocno<>'ALL' THEN
               CALL aglp520_glapdocno_chk(g_master.glapdocno)
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_master.glapdocno,g_errno,0)
                  LET g_master.glapdocno = ''
                  NEXT FIELD glapdocno
               END IF
            END IF ]]>
</point>
  <point name="input.g.glapdocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.glap009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.glap009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.glap002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.glap004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.glap009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.m.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.qbe_select" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.qbeclear" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="process.exit_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="transfer.argv.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="process.define" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[   DEFINE l_sql           STRING 
   DEFINE l_glapdocno     LIKE glap_t.glapdocno
   DEFINE l_flag          LIKE type_t.num5    #标记是否有资料0:无，1：有
   DEFINE l_pass          LIKE type_t.num5 ]]>
</point>
  <point name="process.pre_process" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[   #资料处理
   #1.資料篩選
   #　(1).找出所有符合條件選項的傳票
   #  (2).重排單別='ALL'時表示針對所有該月傳票進行重排總號的動作
   
   #2.更新傳票憑證單頭檔.總號
   #  SQL = 符合條件選項的傳票單頭檔資料(glap_t)
   #  Where 帳別/會計年度/期別/重排單別(IF 'ALL'表全部)/未作廢
   #  Order by 傳票日期+單號
   #  依序 UPDATE 每筆傳票單頭檔(glap_t).總號=起始總號(依序累加1)
   
   #开启事务
   CALL s_transaction_begin()
   #错误信息汇总初始化
   CALL cl_showmsg_init()
   LET g_success = 'Y'
   
   #给标记位赋值
   LET l_flag = 0
   #依据画面条件筛选资料
   LET l_sql = " SELECT glapdocno FROM glap_t ",
               "  WHERE glapent = ",g_enterprise,"",
               "    AND glapld = '",g_master.glapld,"'",
               "    AND glap002 = ",g_master.glap002," ",
               "    AND glap004 = ",g_master.glap004," ",
               "    AND glapstus <> 'X'" 
   #单别为ALL则不需过滤单别条件，否则的话过滤为当前单别下的资料            
   IF g_master.glapdocno <> 'ALL' THEN
      LET l_sql = l_sql," AND glapdocno LIKE '%",g_master.glapdocno,"%' "
   END IF 
   #排序
   LET l_sql = l_sql," ORDER BY glapdocdt,glapdocno "
   
   PREPARE aglp520_pre FROM l_sql
   
   DECLARE aglp520_cs CURSOR FOR aglp520_pre
   FOREACH aglp520_cs INTO l_glapdocno
      IF SQLCA.sqlcode THEN
          CALL cl_errmsg('','foreach','',SQLCA.SQLCODE,1)
          LET g_success = 'N'
          EXIT FOREACH
       END IF
       
	   #走到foreach内说明有资料
       LET l_flag = 1  
       
       UPDATE glap_t SET glap009 = g_master.glap009
                   WHERE glapent = g_enterprise
                     AND glapld = g_master.glapld
                     AND glapdocno = l_glapdocno
       IF SQLCA.SQLCODE THEN
          CALL cl_errmsg('glap009','update','',SQLCA.SQLCODE,1)
          LET g_success = 'N'        
       END IF 
       
       LET g_master.glap009 = g_master.glap009 + 1
   END FOREACH
   #标记位为0则没走foreach，说明无资料
   IF l_flag = 0 THEN
      CALL cl_errmsg('','FROEACH','','abm-00028',1)
      LET g_success = 'N'   
   END IF
   
   IF g_success = 'Y' THEN
      CALL s_transaction_end('Y','0')
   ELSE
     CALL s_transaction_end('N','0')
     CALL cl_err_showmsg()      
   END IF ]]>
</point>
  <point name="process.count_progress" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="process.process" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="process.foreground_finish" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="process.background_finish" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="function.aglp520_glapld_desc" cite_std="N" status="u" ver="" src="s" new="Y" order="1">
<![CDATA[
################################################################################
# Descriptions...: 獲取帳別說明
# Memo...........:
# Usage..........: CALL aglp520_glapld_desc()
# Input parameter: 
# Return code....:  
# Date & Author..: 2014/07/02 By 01531
# Modify.........:
################################################################################
PRIVATE FUNCTION aglp520_glapld_desc()
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_master.glapld
            CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_master.glapld_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_master.glapld_desc
END FUNCTION]]>
</point>
  <point name="function.aglp520_glapld_chk" cite_std="N" status="u" ver="" src="s" new="Y" order="2">
<![CDATA[
################################################################################
# Descriptions...: 檢查帳別
# Memo...........:
# Usage..........: CALL aglp520_glapld_chk(p_glapld)
# Input parameter:  
# Return code....:  
# Date & Author..: 2014/07/02 By 01531
# Modify.........:
################################################################################
PRIVATE FUNCTION aglp520_glapld_chk(p_glapld)
   DEFINE p_glapld    LIKE glap_t.glapld
   DEFINE l_glaastus  LIKE glaa_t.glaastus
   
   LET g_errno = ''
   SELECT glaastus INTO l_glaastus FROM glaa_t
    WHERE glaaent = g_enterprise
      AND glaald = p_glapld
   CASE
      WHEN SQLCA.SQLCODE = 100   LET g_errno = 'agl-00016'
      WHEN l_glaastus = 'N'      LET g_errno = 'agl-00051'
   END CASE
END FUNCTION]]>
</point>
  <point name="function.aglp520_glapdocno_chk" cite_std="N" status="u" ver="" src="s" new="Y" order="3">
<![CDATA[
################################################################################
# Descriptions...: 單據檢查
# Memo...........:
# Usage..........: CALL aglp520_glapdocno_chk(p_glapdocno)
# Input parameter:  
# Return code....:  
# Date & Author..: 2014/07/02 By 01531
# Modify.........:
################################################################################
PRIVATE FUNCTION aglp520_glapdocno_chk(p_glapdocno)
   DEFINE p_glapdocno      LIKE glap_t.glapdocno
   DEFINE l_oobastus       LIKE ooba_t.oobastus
   
   SELECT oobastus INTO l_oobastus 
     FROM ooba_t LEFT OUTER JOIN oobx_t ON (oobaent=oobxent AND ooba002=oobx001)
    WHERE oobaent = g_enterprise
      AND ooba001 = g_ooef004      #单据别参照表号
      AND ooba002 = p_glapdocno    #单据别
      AND oobx002 = 'AGL'
      AND oobx003 IN ('aglt310','aglt320','aglt330','aglt340','aglt350')      #单据性质
   CASE
      WHEN SQLCA.SQLCODE =100  LET g_errno = 'aim-00056'
      WHEN l_oobastus = 'N'    LET g_errno = 'aim-00057'
   END CASE
END FUNCTION]]>
</point>
  <section id="aglp520.description" ver="1" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000104
#+ 
#+ Filename...: aglp520
#+ Description: 傳票總號重排作業
#+ Creator....: 01531(2014/07/02)
#+ Modifier...: 01531(2014/07/02)
#+ Buildtype..: 應用 p01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="aglp520.global" ver="3" status="" src="s">
<![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_schedule
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
END GLOBALS
 
PRIVATE TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
   {<point name="global.parameter"/>}
   #end add-point
        wc               STRING
                     END RECORD
 
DEFINE g_sql             STRING        #組 sql 用
DEFINE g_forupd_sql      STRING        #SELECT ... FOR UPDATE  SQL
DEFINE g_error_show      LIKE type_t.num5
DEFINE g_jobid           STRING
DEFINE g_wc              STRING
 
PRIVATE TYPE type_master RECORD
       glapld LIKE glap_t.glapld, 
   glapld_desc LIKE type_t.chr80, 
   glap002 LIKE glap_t.glap002, 
   glap004 LIKE glap_t.glap004, 
   glapdocno LIKE glap_t.glapdocno, 
   glap009 LIKE glap_t.glap009, 
   stagenow LIKE type_t.chr80,
       wc               STRING
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_master type_master
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="aglp520.init" ver="1" status="" src="s">
<![CDATA[#+ 初始化作業
PRIVATE FUNCTION aglp520_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point
 
   LET g_error_show = 1
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="aglp520.main" ver="1" status="" src="s">
<![CDATA[MAIN
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter  
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point 
  
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("agl","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   {<point name="main.background"/>}
   #end add-point
 
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
      CALL aglp520_process(ls_js)
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aglp520 WITH FORM cl_ap_formpath("agl",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL aglp520_init()
 
      #進入選單 Menu (="N")
      CALL aglp520_ui_dialog()
 
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_aglp520
   END IF
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
]]>
</section>
  <section id="aglp520.other_function" ver="1" status="" src="s">
<![CDATA[#add-point:自定義元件(Function)
{<point name="other.function"/>}
#end add-point
]]>
</section>
  <section id="aglp520.process" ver="1" status="" src="s">
<![CDATA[#+ 資料處理
PRIVATE FUNCTION aglp520_process(ls_js)
   DEFINE ls_js       STRING
   DEFINE lc_param    type_parameter
   DEFINE li_stus     LIKE type_t.num5
   DEFINE li_count    LIKE type_t.num10  #progressbar計量
   DEFINE ls_sql      STRING             #主SQL
   #add-point:process段define
   {<point name="process.define"/>}
   #end add-point
 
   CALL util.JSON.parse(ls_js,lc_param)
 
   #add-point:process段前處理
   {<point name="process.pre_process"/>}
   #end add-point
 
   #預先計算progressbar迴圈次數
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress
      {<point name="process.count_progress"/>}
      #end add-point
   END IF
 
   #主SQL及相關FOREACH前置處理
#  DECLARE aglp520_process_cs CURSOR FROM ls_sql
#  FOREACH aglp520_process_cs INTO
   #add-point:process段process
   {<point name="process.process"/>}
   #end add-point
#  END FOREACH
 
   IF g_bgjob = "N" THEN
      #前景作業完成處理
      #add-point:process段foreground完成處理
      {<point name="process.foreground_finish"/>}
      #end add-point
      CALL cl_ask_confirm3("std-00012","")
   ELSE
      #背景作業完成處理
      #add-point:process段background完成處理
      {<point name="process.background_finish"/>}
      #end add-point
   END IF
END FUNCTION
]]>
</section>
  <section id="aglp520.transfer_argv" ver="1" status="" src="s">
<![CDATA[#+ 轉換本地參數至cmdrun參數內,準備進入背景執行
PRIVATE FUNCTION aglp520_transfer_argv(ls_js)
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog     STRING,
             param    DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter
 
   CALL util.JSON.parse(ls_js,la_param)
 
   LET la_cmdrun.prog = g_prog
   #add-point:transfer.argv段define
   {<point name="transfer.argv.define"/>}
   #end add-point
 
   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION
]]>
</section>
  <section id="aglp520.ui_dialog" ver="3" status="" src="s">
<![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION aglp520_ui_dialog()
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx   LIKE type_t.num5
   DEFINE ls_js    STRING
   DEFINE ls_wc    STRING
   DEFINE lc_param type_parameter
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
 
   #add-point:ui_dialog段before dialog
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   WHILE TRUE
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #+ 此段落由子樣板a57產生
         INPUT BY NAME g_master.glapld,g_master.glap002,g_master.glap004,g_master.glapdocno,g_master.glap009  

            ATTRIBUTE(WITHOUT DEFAULTS)
            
            #自訂ACTION(master_input)
            
         
            BEFORE INPUT
               #add-point:資料輸入前
               {<point name="input.m.before_input"/>}
               #end add-point
         
                     #此段落由子樣板a02產生
         AFTER FIELD glapld
            
            #add-point:AFTER FIELD glapld
            {<point name="input.a.glapld" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD glapld
            #add-point:BEFORE FIELD glapld
            {<point name="input.b.glapld" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE glapld
            #add-point:ON CHANGE glapld
            {<point name="input.g.glapld" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glap002
            #add-point:BEFORE FIELD glap002
            {<point name="input.b.glap002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glap002
            
            #add-point:AFTER FIELD glap002
            {<point name="input.a.glap002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE glap002
            #add-point:ON CHANGE glap002
            {<point name="input.g.glap002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glap004
            #add-point:BEFORE FIELD glap004
            {<point name="input.b.glap004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glap004
            
            #add-point:AFTER FIELD glap004
            {<point name="input.a.glap004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE glap004
            #add-point:ON CHANGE glap004
            {<point name="input.g.glap004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glapdocno
            #add-point:BEFORE FIELD glapdocno
            {<point name="input.b.glapdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glapdocno
            
            #add-point:AFTER FIELD glapdocno
            {<point name="input.a.glapdocno" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE glapdocno
            #add-point:ON CHANGE glapdocno
            {<point name="input.g.glapdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glap009
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_master.glap009,"0","1","","","azz-00079",1) THEN
               NEXT FIELD glap009
            END IF
 
 
            #add-point:AFTER FIELD glap009
            {<point name="input.a.glap009" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD glap009
            #add-point:BEFORE FIELD glap009
            {<point name="input.b.glap009" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE glap009
            #add-point:ON CHANGE glap009
            {<point name="input.g.glap009" />}
            #END add-point
 
 
                     #Ctrlp:input.c.glapld
         ON ACTION controlp INFIELD glapld
            #add-point:ON ACTION controlp INFIELD glapld
            {<point name="input.c.glapld" />}
            #END add-point
 
         #Ctrlp:input.c.glap002
         ON ACTION controlp INFIELD glap002
            #add-point:ON ACTION controlp INFIELD glap002
            {<point name="input.c.glap002" />}
            #END add-point
 
         #Ctrlp:input.c.glap004
         ON ACTION controlp INFIELD glap004
            #add-point:ON ACTION controlp INFIELD glap004
            {<point name="input.c.glap004" />}
            #END add-point
 
         #Ctrlp:input.c.glapdocno
         ON ACTION controlp INFIELD glapdocno
            #add-point:ON ACTION controlp INFIELD glapdocno
            {<point name="input.c.glapdocno" />}
            #END add-point
 
         #Ctrlp:input.c.glap009
         ON ACTION controlp INFIELD glap009
            #add-point:ON ACTION controlp INFIELD glap009
            {<point name="input.c.glap009" />}
            #END add-point
 
 
               
            AFTER INPUT
               #add-point:資料輸入後
               {<point name="input.m.after_input"/>}
               #end add-point
               
            #add-point:其他管控(on row change, etc...)
            {<point name="input.other"/>}
            #end add-point
               
         END INPUT
 
 
         
         
      
         #add-point:ui_dialog段construct
         {<point name="ui_dialog.more_construct"/>}
         #end add-point
         #add-point:ui_dialog段input
         {<point name="ui_dialog.more_input"/>}
         #end add-point
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
 
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET lc_param.wc = ls_wc
               #取得條件後需要執行項目,應新增於下方adp
               #add-point:ui_dialog段qbe_select後
               {<point name="ui_dialog.qbe_select"/>}
               #end add-point
            END IF
 
         ON ACTION qbe_save
            CALL cl_qbe_save()
 
         ON ACTION batch_execute
            ACCEPT DIALOG
 
         ON ACTION qbeclear         
            CLEAR FORM
            INITIALIZE lc_param.* TO NULL
            #add-point:ui_dialog段qbeclear
            {<point name="ui_dialog.qbeclear"/>}
            #end add-point
 
         ON ACTION history_fill
            CALL cl_schedule_history_fill()
 
         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT DIALOG
         
         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT DIALOG
 
         #add-point:ui_dialog段action
         {<point name="ui_dialog.more_action"/>}
         #end add-point
 
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      #add-point:ui_dialog段exit dialog
      {<point name="process.exit_dialog"/>}
      #end add-point
 
      LET ls_js = util.JSON.stringify(lc_param)
 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      ELSE
         LET g_jobid = cl_schedule_get_jobid(g_prog)
         CASE 
            WHEN g_schedule.gzpa003 = "0"
                 CALL aglp520_process(ls_js)
            WHEN g_schedule.gzpa003 = "1"
            #    CALL cl_schedule_update_data(g_jobid,ls_js)
                 LET ls_js = aglp520_transfer_argv(ls_js)
                 CALL cl_cmdrun(ls_js)
            WHEN g_schedule.gzpa003 = "2"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
            WHEN g_schedule.gzpa003 = "3"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
         END CASE    
         LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
         INITIALIZE lc_param.*  TO NULL 
         #欄位初始資訊 
         CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
         LET gi_hiden_asign = FALSE 
         LET gi_hiden_exec = FALSE 
         LET gi_hiden_spec = FALSE 
         LET gi_hiden_exec_end = FALSE 
         CALL cl_schedule_hidden()
      END IF
   END WHILE
 
END FUNCTION
]]>
</section>
</add_points>