<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="agli070" std_prog="agli070" erpver="1.0" module="AGL" ver="8" env="s" zone="t10prd" booking="N" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="F" status="u"/>
    <free_style value="N" status="u"/>
    <start_arg value="" status="u"/>
  </other>
  <point name="function.agli070_sel_glfbl004" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 抓取項目說明欄位
# Memo...........:
# Usage..........: CALL agli070_sel_glfbl004(p_glfbseq,p_glfb002)
#                  RETURNING r_glfbl004
# Input parameter: p_glfbseq      行次
#                : p_glfb002      項目編號
# Return code....: r_glfbl004     說明
# Date & Author..: 2014/5/14 By wangrr
# Modify.........:
################################################################################
PRIVATE FUNCTION agli070_sel_glfbl004(p_glfbseq,p_glfb002)
   DEFINE p_glfbseq        LIKE glfb_t.glfbseq
   DEFINE p_glfb002        LIKE glfb_t.glfb002
   DEFINE r_glfbl004       LIKE glfbl_t.glfbl004
   
   INITIALIZE g_ref_fields TO NULL 
   LET g_ref_fields[1] = g_glfa_m.glfa001
   LET g_ref_fields[2] = p_glfbseq
   LET g_ref_fields[3] = p_glfb002
   CALL ap_ref_array2(g_ref_fields," SELECT glfbl004 FROM glfbl_t WHERE glfblent = '"||g_enterprise||"' AND glfbl001 = ? AND glfblseq = ? AND glfbl002 = ? AND glfbl003 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET r_glfbl004 = g_rtn_fields[1]
   RETURN r_glfbl004
END FUNCTION]]>
  </point>
  <point name="function.agli070_insert_glfb" order="2" ver="8" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 
# Memo...........:
# Usage..........: CALL agli070_insert_glfb(p_cmd)
#                  RETURNING r_success
# Input parameter: p_cmd          類型:1.資產，2.負債
# Return code....: r_success      執行结果
# Date & Author..: 2014/5/14 By wangrr
# Modify.........:
################################################################################
PRIVATE FUNCTION agli070_insert_glfb(p_cmd)
   DEFINE p_cmd        LIKE type_t.chr1
   DEFINE l_glfb       RECORD LIKE glfb_t.*
   DEFINE r_success    LIKE type_t.num5
   DEFINE l_cnt        LIKE type_t.num5
   
   LET r_success=TRUE
   
   LET l_glfb.glfbent=g_enterprise
   LET l_glfb.glfb001=g_glfa_m.glfa001
   
   CASE p_cmd
      WHEN '1' #資產
         LET l_glfb.glfbseq = g_glfb_d[l_ac].glfbseq
         LET l_glfb.glfbseq1= g_glfb_d[l_ac].glfbseq1
         LET l_glfb.glfb002 = g_glfb_d[l_ac].glfb002
         LET l_glfb.glfb003 = g_glfb_d[l_ac].glfb003
         IF g_glfb_d[l_ac].glfbseq1='A' THEN
            LET l_glfb.glfb004 = g_glfb004_a
            LET l_glfb.glfb005 = g_glfb005_a
         ELSE
            LET l_glfb.glfb004 = g_glfb004_b
            LET l_glfb.glfb005 = g_glfb005_b
         END IF
      WHEN '2' #負債
         LET l_glfb.glfbseq = g_glfb2_d[l_ac2].glfbseq
         LET l_glfb.glfbseq1= g_glfb2_d[l_ac2].glfbseq1
         LET l_glfb.glfb002 = g_glfb2_d[l_ac2].glfb002
         LET l_glfb.glfb003 = g_glfb2_d[l_ac2].glfb003
         IF g_glfb2_d[l_ac2].glfbseq1='C' THEN
            LET l_glfb.glfb004 = g_glfb004_c
            LET l_glfb.glfb005 = g_glfb005_c
         ELSE
            LET l_glfb.glfb004 = g_glfb004_d
            LET l_glfb.glfb005 = g_glfb005_d
         END IF
   END CASE
   LET l_glfb.glfb006 = ''
   LET l_glfb.glfb007 = ''
   
   INSERT INTO glfb_t VALUES(l_glfb.*)
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "glfb_t"
      LET g_errparam.popup = FALSE
      CALL cl_err()

      LET r_success=FALSE
   END IF
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.agli070_set_glfb002" order="3" ver="8" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 產生項目編號
# Memo...........:
# Usage..........: CALL agli070_set_glfb002(p_type,p_glfbseq)
#                  RETURNING r_glfbseq,r_glfb002
# Input parameter: p_type         類型:1.資產，2.負債
#                : p_glfbseq      行次
# Return code....: r_glfb002      項目編號
# Date & Author..: 2014/5/14 By wangrr
# Modify.........:
################################################################################
PRIVATE FUNCTION agli070_set_glfb002(p_type,p_glfbseq)
   DEFINE p_type         LIKE type_t.chr1
   DEFINE p_glfbseq      LIKE glfb_t.glfbseq
   DEFINE r_glfb002      LIKE glfb_t.glfb002
   DEFINE l_str          STRING
   
#   CASE p_type
#      WHEN '1'
##         SELECT MAX(glfbseq)+1 INTO r_glfbseq FROM glfb_t
##          WHERE glfbent=g_enterprise AND glfb001=g_glfa_m.glfa001
##            AND glfbseq1 IN ('A','B')
#          LET r_glfbseq=g_glfb_d[l_ac].glfbseq
#       WHEN '2'
##          SELECT MAX(glfbseq)+1 INTO r_glfbseq FROM glfb_t
##          WHERE glfbent=g_enterprise AND glfb001=g_glfa_m.glfa001
##            AND glfbseq1 IN ('C','D')
#         LET r_glfbseq=g_glfb2_d[l_ac2].glfbseq
#   END CASE
##   IF cl_null(r_glfbseq) OR r_glfbseq=0 THEN
##      LET r_glfbseq=1
##   END IF 
   LET l_str=p_glfbseq USING '<<<<'
   CASE 
      WHEN l_str.getLength()=1
         LET r_glfb002='X','0000',l_str
      WHEN l_str.getLength()=2
         LET r_glfb002='X','000',l_str 
      WHEN l_str.getLength()=3
         LET r_glfb002='X','00',l_str
      WHEN l_str.getLength()=4
         LET r_glfb002='X','0',l_str
      WHEN l_str.getLength()=5
         LET r_glfb002='X',l_str
   END CASE
   #負債
   IF p_type='2' THEN
      LET r_glfb002=cl_replace_str(r_glfb002,"X","Y")
   END IF
   RETURN r_glfb002
END FUNCTION]]>
  </point>
  <point name="function.agli070_update_glfb" order="4" ver="8" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL agli070_update_glfb(p_cmd)
#                  RETURNING r_success
# Input parameter: p_cmd          類型:1.資產，2.負債
# Return code....: r_success      執行結果
# Date & Author..: 2014/5/14 By wangrr
# Modify.........:
################################################################################
PRIVATE FUNCTION agli070_update_glfb(p_cmd)
   DEFINE p_cmd        LIKE type_t.chr1
   DEFINE r_success    LIKE type_t.num5
   DEFINE l_cnt        LIKE type_t.num5
   DEFINE l_glfb004    LIKE glfb_t.glfb004
   DEFINE l_glfb005    LIKE glfb_t.glfb005
   
   LET r_success=TRUE
   CASE p_cmd
      WHEN '1' #資產
         IF g_glfb_d[l_ac].glfbseq1='A' THEN
            LET l_glfb004=g_glfb004_a
            LET l_glfb005=g_glfb005_a
         ELSE
            LET l_glfb004=g_glfb004_b
            LET l_glfb005=g_glfb005_b
         END IF
         UPDATE glfb_t SET glfb004 = l_glfb004,
                           glfb005 = l_glfb005 
          WHERE glfbent = g_enterprise AND glfb001 = g_glfa_m.glfa001
            AND glfbseq = g_glfb_d_t.glfbseq #行次
            AND glfbseq1= g_glfb_d[l_ac].glfbseq1 #列次
      WHEN '2' #負債
         IF g_glfb2_d[l_ac2].glfbseq1='C' THEN
            LET l_glfb004=g_glfb004_c
            LET l_glfb005=g_glfb005_c
         ELSE
            LET l_glfb004=g_glfb004_d
            LET l_glfb005=g_glfb005_d
         END IF
         UPDATE glfb_t SET glfb004 = l_glfb004,
                           glfb005 = l_glfb005  
          WHERE glfbent = g_enterprise AND glfb001 = g_glfa_m.glfa001
            AND glfbseq = g_glfb2_d_t.glfbseq #行次
            AND glfbseq1= g_glfb2_d[l_ac2].glfbseq1 #列次
   END CASE
   
   CASE
      WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = "std-00009"
         LET g_errparam.extend = "glfb_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

         LET r_success=FALSE
      WHEN SQLCA.sqlcode #其他錯誤
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "glfb_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

         LET r_success=FALSE                    
   END CASE
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.agli070_get_glfb004_glfb005" order="5" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 抓取取數公式來源和數值取數公式
# Memo...........:
# Usage..........: CALL agli070_get_glfb004_glfb005(p_glfbseq,p_glfbseq1)
# Input parameter: p_glfbseq      行次
#                : p_glfbseq1     列次
# Date & Author..: 2014/5/14 By wangrr
# Modify.........:
################################################################################
PRIVATE FUNCTION agli070_get_glfb004_glfb005(p_glfbseq,p_glfbseq1)
   DEFINE p_glfbseq       LIKE glfb_t.glfbseq
   DEFINE p_glfbseq1      LIKE glfb_t.glfbseq1
   DEFINE l_glfb004       LIKE glfb_t.glfb004
   DEFINE l_glfb005       LIKE glfb_t.glfb005
   
   LET l_glfb004=''
   LET l_glfb005=''
   SELECT glfb004,glfb005 INTO l_glfb004,l_glfb005
     FROM glfb_t
    WHERE glfbent=g_enterprise AND glfb001=g_glfa_m.glfa001
      AND glfbseq=p_glfbseq AND glfbseq1=p_glfbseq1
   CASE p_glfbseq1
      WHEN 'A'
         LET g_glfb004_a=l_glfb004
         LET g_glfb005_a=l_glfb005
      WHEN 'B'
         LET g_glfb004_b=l_glfb004
         LET g_glfb005_b=l_glfb005
      WHEN 'C'
         LET g_glfb004_c=l_glfb004
         LET g_glfb005_c=l_glfb005
      WHEN 'D'
         LET g_glfb004_d=l_glfb004
         LET g_glfb005_d=l_glfb005
   END CASE
END FUNCTION]]>
  </point>
  <point name="function.agli070_b_fill1" order="6" ver="8" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 单身填充
# Memo...........:
# Usage..........: CALL agli070_b_fill1()
# Date & Author..: 2014/5/15 By wangrr
# Modify.........:
################################################################################
PRIVATE FUNCTION agli070_b_fill1()
   
   #判斷是否填充
   IF agli070_fill_chk(1) THEN
      #單身一
      LET g_sql = "SELECT  UNIQUE glfbseq,'',glfb002,'',glfb003,'','' FROM glfb_t",   
                  " INNER JOIN glfa_t ON glfa001 = glfb001 ",
                  " LEFT JOIN glfbl_t ON glfbent = glfblent AND glfb001 = glfbl001 AND glfbseq = glfblseq AND glfb002 = glfbl002 AND glfbl003 = '",g_lang,"'",
                  " WHERE glfbent=",g_enterprise," AND glfb001='",g_glfa_m.glfa001,"'"
      
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF     
      LET g_sql = g_sql, " AND glfbseq1 IN ('A','B')",
                         " ORDER BY glfb_t.glfbseq"
      
      PREPARE agli070_pb1 FROM g_sql
      DECLARE b_fill_cs1 CURSOR FOR agli070_pb1
      #單身二
      LET g_sql = "SELECT  UNIQUE glfbseq,'',glfb002,'',glfb003,'','' FROM glfb_t",   
                  " INNER JOIN glfa_t ON glfa001 = glfb001 ",
                  " LEFT JOIN glfbl_t ON glfbent = glfblent AND glfb001 = glfbl001 AND glfbseq = glfblseq AND glfb002 = glfbl002 AND glfbl003 = '",g_lang,"'",
                  " WHERE glfbent=",g_enterprise," AND glfb001='",g_glfa_m.glfa001,"'"
      
      IF NOT cl_null(g_wc3_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc3_table1 CLIPPED
      END IF     
      LET g_sql = g_sql, " AND glfbseq1 IN ('C','D')",
                         " ORDER BY glfb_t.glfbseq"
      
      PREPARE agli070_pb2 FROM g_sql
      DECLARE b_fill_cs2 CURSOR FOR agli070_pb2
      
      LET g_cnt = l_ac
      LET l_ac = 1
      CALL cl_err_collect_init()
      #單身一                                         
      FOREACH b_fill_cs1 INTO g_glfb_d[l_ac].glfbseq,g_glfb_d[l_ac].glfbseq1,g_glfb_d[l_ac].glfb002,
          g_glfb_d[l_ac].glfbl004,g_glfb_d[l_ac].glfb003,g_glfb_d[l_ac].amt1,g_glfb_d[l_ac].amt2
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "FOREACH:"
            LET g_errparam.popup = TRUE
            CALL cl_err()

            EXIT FOREACH
         END IF
         #列次
         LET g_glfb_d[l_ac].glfbseq1='A'
         #項目說明
         CALL agli070_sel_glfbl004(g_glfb_d[l_ac].glfbseq,g_glfb_d[l_ac].glfb002) RETURNING g_glfb_d[l_ac].glfbl004
         
         #當點擊‘測試’按鈕時才計算金額
         IF g_test = TRUE THEN
            #年初數
            CALL agli070_get_amt(g_glfb_d[l_ac].glfbseq,'A') RETURNING g_glfb_d[l_ac].amt1
            #期末數
            CALL agli070_get_amt(g_glfb_d[l_ac].glfbseq,'B') RETURNING g_glfb_d[l_ac].amt2
         END IF
         
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code =  9035
               LET g_errparam.extend =  ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

            END IF
            EXIT FOREACH
         END IF 
      END FOREACH
      LET g_error_show = 0
      #單身二
      LET l_ac2=1
      FOREACH b_fill_cs2 INTO g_glfb2_d[l_ac2].glfbseq,g_glfb2_d[l_ac2].glfbseq1,g_glfb2_d[l_ac2].glfb002,
          g_glfb2_d[l_ac2].glfbl004,g_glfb2_d[l_ac2].glfb003,g_glfb2_d[l_ac2].amt3,g_glfb2_d[l_ac2].amt4 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "FOREACH:"
            LET g_errparam.popup = TRUE
            CALL cl_err()

            EXIT FOREACH
         END IF
         #列次
         LET g_glfb2_d[l_ac2].glfbseq1='C'
         #項目說明
         CALL agli070_sel_glfbl004(g_glfb2_d[l_ac2].glfbseq,g_glfb2_d[l_ac2].glfb002) RETURNING g_glfb2_d[l_ac2].glfbl004
         
         #當點擊‘測試’按鈕時才計算金額
         IF g_test = TRUE THEN
            #年初數
            CALL agli070_get_amt(g_glfb2_d[l_ac2].glfbseq,'C') RETURNING g_glfb2_d[l_ac2].amt3
            #期末數
            CALL agli070_get_amt(g_glfb2_d[l_ac2].glfbseq,'D') RETURNING g_glfb2_d[l_ac2].amt4
         END IF
         
         LET l_ac2 = l_ac2 + 1
         IF l_ac2 > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code =  9035
               LET g_errparam.extend =  ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

            END IF
            EXIT FOREACH
         END IF
      END FOREACH
      LET g_error_show = 0
   
   END IF 
   CALL g_glfb_d.deleteElement(g_glfb_d.getLength())
   CALL g_glfb2_d.deleteElement(g_glfb2_d.getLength())
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
END FUNCTION]]>
  </point>
  <point name="function.agli070_get_amt" order="7" ver="3" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 計算金額
# Memo...........:
# Usage..........: CALL agli070_get_amt(p_glfbseq,p_glfbseq1)
#                  RETURNING r_amt
# Input parameter: p_glfbseq      行次
#                : p_glfbseq1     列次
# Return code....: r_amt          計算結果
# Date & Author..: 2014/5/15 By wangrr
# Modify.........:
################################################################################
PRIVATE FUNCTION agli070_get_amt(p_glfbseq,p_glfbseq1)
   DEFINE p_glfbseq         LIKE glfb_t.glfbseq
   DEFINE p_glfbseq1        LIKE glfb_t.glfbseq1
   DEFINE r_amt             LIKE type_t.num20_6
   DEFINE l_glfb004         LIKE glfb_t.glfb004
   DEFINE l_glfb005         LIKE glfb_t.glfb005
   DEFINE l_glfa007         LIKE glfa_t.glfa007
   DEFINE l_success         LIKE type_t.num5
   
   SELECT glfb004,glfb005 INTO l_glfb004,l_glfb005 
     FROM glfb_t
    WHERE glfbent=g_enterprise AND glfb001=g_glfa_m.glfa001
      AND glfbseq=p_glfbseq AND glfbseq1=p_glfbseq1
   IF NOT cl_null(l_glfb005) THEN
      CASE
         WHEN g_glfa_m.glfa002='1' OR g_glfa_m.glfa002='3' 
            IF p_glfbseq1='A' OR p_glfbseq1='C' THEN
               LET l_glfa007=0
            ELSE
               LET l_glfa007=g_glfa_m.glfa007
            END IF
                              #帳別            #年度             #起始期別 #截止期別         #小數位數           
            CALL s_analy_form(g_glfa_m.glfa005,g_glfa_m.glfa006,l_glfa007,l_glfa007,g_glfa_m.glfa009,
                              #單位            #報表模板編號     #取數公式來源 #計算公式  #法人
                              g_glfa_m.glfa008,g_glfa_m.glfa001, l_glfb004,  l_glfb005,'')
            RETURNING l_success,r_amt
         WHEN g_glfa_m.glfa002='2'
            #本期數
            IF p_glfbseq1='A' THEN
                                 #帳別            #年度             #起始期別        #截止期別         #小數位數           
               CALL s_analy_form(g_glfa_m.glfa005,g_glfa_m.glfa010,g_glfa_m.glfa011,g_glfa_m.glfa012,g_glfa_m.glfa009,
                                 #單位            #報表模板編號     #取數公式來源 #計算公式  #法人
                                 g_glfa_m.glfa008,g_glfa_m.glfa001, l_glfb004,  l_glfb005,'')
               RETURNING l_success,r_amt
            END IF
            #上期數
            IF p_glfbseq1='B' THEN
                                 #帳別            #年度             #起始期別        #截止期別         #小數位數           
               CALL s_analy_form(g_glfa_m.glfa005,g_glfa_m.glfa013,g_glfa_m.glfa014,g_glfa_m.glfa015,g_glfa_m.glfa009,
                                 #單位            #報表模板編號     #取數公式來源 #計算公式  #法人
                                 g_glfa_m.glfa008,g_glfa_m.glfa001, l_glfb004,  l_glfb005,'')
               RETURNING l_success,r_amt
            END IF
      END CASE
   ELSE
      LET r_amt=' '
   END IF 
   RETURN r_amt
END FUNCTION]]>
  </point>
  <point name="function.agli070_update_glfbseq" order="8" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 更新行次，使行次以1遞增
# Memo...........:
# Usage..........: CALL agli070_update_glfbseq(p_glfbseq,p_type,p_cmd)
#                  RETURNING r_success
# Input parameter: p_glfbseq      行次
#                : p_type         類型1：資產，2：負債
#                : p_cmd          i:新增，d:刪除
# Return code....: r_success      更新結果
# Date & Author..: 2014/5/21 By wangrr
# Modify.........:
################################################################################
PRIVATE FUNCTION agli070_update_glfbseq(p_glfbseq,p_type,p_cmd)
   DEFINE p_glfbseq         LIKE glfb_t.glfbseq
   DEFINE p_type            LIKE type_t.chr1
   DEFINE p_cmd             LIKE type_t.chr1
   DEFINE l_sql             STRING
   DEFINE l_glfbseq         LIKE glfb_t.glfbseq
   DEFINE l_glfbseq_n       LIKE glfb_t.glfbseq
   DEFINE l_glfb002         LIKE glfb_t.glfb002
   DEFINE l_glfb002_n       LIKE glfb_t.glfb002
   DEFINE l_glfb003         LIKE glfb_t.glfb003
   DEFINE r_success         LIKE type_t.num5
   
   LET r_success=TRUE
   LET l_sql=" SELECT glfbseq,glfb002,glfb003 FROM glfb_t ",
             "  WHERE glfbent = ",g_enterprise," AND glfb001='",g_glfa_m.glfa001,"'"
             
   IF p_type='1' THEN
      LET l_sql=l_sql," AND glfbseq1='A' "
   ELSE
      LET l_sql=l_sql," AND glfbseq1='C' "
   END IF
   IF p_cmd='i' THEN
      LET l_sql=l_sql,"   AND glfbseq >=",p_glfbseq,
                      " ORDER BY glfbseq DESC "
   ELSE
      LET l_sql=l_sql,"   AND glfbseq >",p_glfbseq,
                      " ORDER BY glfbseq ASC "
   END IF
   
   PREPARE agli070_01_upd_pr FROM l_sql
   DECLARE agli070_01_upd_cs CURSOR FOR agli070_01_upd_pr
   
   FOREACH agli070_01_upd_cs INTO l_glfbseq,l_glfb002,l_glfb003
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.SQLCODE
         LET g_errparam.extend = 'FOREACH'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET r_success=FALSE
         EXIT FOREACH
      END IF
      IF p_cmd='i' THEN
         LET l_glfbseq_n=l_glfbseq+1
         LET l_glfb003=l_glfb003+1
      ELSE
         LET l_glfbseq_n=l_glfbseq-1
         LET l_glfb003=l_glfb003-1
      END IF
      CALL agli070_set_glfb002(p_type,l_glfbseq_n) RETURNING l_glfb002_n
      IF p_type='1' THEN
         UPDATE glfb_t SET glfbseq=l_glfbseq_n,
                           glfb002=l_glfb002_n,
                           glfb003=l_glfb003
          WHERE glfbent=g_enterprise AND glfb001=g_glfa_m.glfa001
            AND glfbseq=l_glfbseq    AND glfbseq1 IN ('A','B')
      ELSE
         UPDATE glfb_t SET glfbseq=l_glfbseq_n,
                           glfb002=l_glfb002_n,
                           glfb003=l_glfb003
          WHERE glfbent=g_enterprise AND glfb001=g_glfa_m.glfa001
            AND glfbseq=l_glfbseq    AND glfbseq1 IN ('C','D')
      END IF
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = "std-00009"
            LET g_errparam.extend = "glfb_t"
            LET g_errparam.popup = FALSE
            CALL cl_err()

            LET r_success=FALSE
            EXIT FOREACH
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "glfb_t"
            LET g_errparam.popup = FALSE
            CALL cl_err()

            LET r_success=FALSE
            EXIT FOREACH            
      END CASE
      #更新多語言
      UPDATE glfbl_t SET glfblseq=l_glfbseq_n,
                         glfbl002=l_glfb002_n
       WHERE glfblent=g_enterprise AND glfbl001=g_glfa_m.glfa001
         AND glfblseq=l_glfbseq    AND glfbl002=l_glfb002
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = "std-00009"
            LET g_errparam.extend = "glfb1_t"
            LET g_errparam.popup = FALSE
            CALL cl_err()

            LET r_success=FALSE
            EXIT FOREACH
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "glfb1_t"
            LET g_errparam.popup = FALSE
            CALL cl_err()

            LET r_success=FALSE
            EXIT FOREACH            
      END CASE
   END FOREACH
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.agli070_glfb005_desc" order="9" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 公式说明
# Memo...........:
# Usage..........: CALL agli070_glfb005_desc(p_glfb004,p_glfb005)
#                  RETURNING r_desc
# Input parameter: p_glfb004      變量類型
#                : p_glfb005      公式
# Return code....: r_desc         公式說明
# Date & Author..: 2014/5/23 By wangrr
# Modify.........:
################################################################################
PRIVATE FUNCTION agli070_glfb005_desc(p_glfb004,p_glfb005)
   DEFINE p_glfb004             LIKE glfb_t.glfb004
   DEFINE p_glfb005             LIKE glfb_t.glfb005
   DEFINE l_sql                 STRING
   DEFINE l_str                 STRING
   DEFINE r_desc                STRING
   DEFINE l_delimiter           STRING
   DEFINE l_str1,l_str2,l_str3  STRING
   DEFINE l_str4,l_str5,l_str6  STRING   
   DEFINE tok                   base.StringTokenizer
   DEFINE l_glfbl004            LIKE glfbl_t.glfbl004
   DEFINE l_glfcl003            LIKE glfcl_t.glfcl003
   DEFINE l_n                   LIKE type_t.num5
   DEFINE l_glfbseq             LIKE glfb_t.glfbseq
   DEFINE l_glfbseq1            LIKE glfb_t.glfbseq1
   DEFINE l_glfc001             LIKE glfc_t.glfc001
   
   LET r_desc=""
   IF cl_null(p_glfb005) THEN
      RETURN r_desc
   END IF
   LET l_str=p_glfb005
   LET l_str=l_str.trim()   #去括號
   LET l_str4=l_str
   LET l_delimiter = "+-*/()"                                    #運算符、括號作為分隔符
   LET tok = base.StringTokenizer.create(l_str,l_delimiter)  #運算符、括號作為分隔符,取出字母數字
   
   LET l_str2=l_str.substring(1,1)
   IF l_str2 MATCHES '[\\(]' THEN
      LET r_desc=l_str2
      LET l_str4=l_str4.substring(2,l_str4.getLength())
   END IF
   #公式變量說明
   LET l_sql=" SELECT glfcl003 FROM glfcl_t ",
             "  WHERE glfclent = ",g_enterprise," AND glfcl001=? ",
             "    AND glfcl002 ='",g_lang,"'"
   PREPARE agli070_get_glfcl003_pr FROM l_sql
   #表內項目說明
   LET l_sql=" SELECT glfbl004 FROM glfb_t ",
             "   LEFT JOIN glfbl_t ON glfbent = glfblent AND glfb001 = glfbl001 AND glfbseq = glfblseq AND glfb002 = glfbl002 AND glfbl003 = '",g_lang,"' ",
             "  WHERE glfblent = ",g_enterprise," AND glfbl001 = '",g_glfa_m.glfa001,"'",
             "   AND glfbseq=? AND glfbseq1=? "
   PREPARE agli070_get_glfbl004_pr FROM l_sql
   
   WHILE tok.hasMoreTokens()
     LET l_str1 = tok.nextToken()
     IF p_glfb004='1' THEN
        LET l_glfbseq1=l_str1.substring(1,1)
        LET l_glfbseq=l_str1.substring(2,l_str1.getLength())
        
        EXECUTE agli070_get_glfbl004_pr USING l_glfbseq,l_glfbseq1 INTO l_glfbl004
        LET r_desc=r_desc,l_glfbl004,l_str1
     ELSE
        LET l_glfc001=l_str1
        EXECUTE agli070_get_glfcl003_pr USING l_glfc001 INTO l_glfcl003
        LET r_desc=r_desc,l_glfcl003,l_str1
     END IF
     #運算符
     LET l_n=l_str1.getLength() #變量長度
     LET l_str5=l_str4.substring(l_n+1,l_n+1)
     LET l_str6=l_str4.substring(l_n+2,l_n+2)
     LET l_str4=l_str4.substring(l_n+2,l_str4.getLength())
     LET r_desc=r_desc,l_str5
     IF l_str6 MATCHES '[\\+\\-\\*\\/\\(\\)]' OR l_str6='-' THEN
        LET l_str4=l_str4.substring(2,l_str4.getLength())
        LET r_desc=r_desc,l_str6
     END IF
   END WHILE
   #最後一個字符為右括號）
   IF NOT cl_null(l_str4) AND l_str4 MATCHES '[\\)]' THEN
      LET r_desc=r_desc,l_str4
   END IF
   RETURN r_desc
END FUNCTION]]>
  </point>
  <point name="function.agli070_comp_set" order="10" ver="6" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 欄位顯示與否，欄位說明設置
# Memo...........:
# Usage..........: CALL agli070_comp_set()
################################################################################
PRIVATE FUNCTION agli070_comp_set()
   DEFINE l_gzze003  LIKE gzze_t.gzze003
   
   IF g_glfa_m.glfa003='2' THEN
      CALL cl_set_comp_visible('folder_3,page_2',FALSE)
   ELSE
      CALL cl_set_comp_visible('folder_3,page_2',TRUE)
   END IF
   CALL cl_set_comp_entry("glfa003",TRUE)
   CASE g_glfa_m.glfa002
      WHEN '1'
         LET l_gzze003 = cl_getmsg('agl-00243',g_dlang)
         CALL cl_set_comp_att_text('bpage_1',l_gzze003)
         LET l_gzze003 = cl_getmsg('agl-00244',g_dlang)
         CALL cl_set_comp_att_text('page_2',l_gzze003)
         #年初數
         LET l_gzze003 = cl_getmsg('agl-00267',g_dlang)
         CALL cl_set_comp_att_text('amt1',l_gzze003)
         #期末數
         LET l_gzze003 = cl_getmsg('agl-00268',g_dlang)
         CALL cl_set_comp_att_text('amt2',l_gzze003)
#         LET g_glfa_m.glfa003='1' #左右式
#         DISPLAY BY NAME g_glfa_m.glfa003
      WHEN '2'
         LET l_gzze003 = cl_getmsg('agl-00245',g_dlang)
         CALL cl_set_comp_att_text('bpage_1',l_gzze003)
         #本期數
         LET l_gzze003 = cl_getmsg('agl-00269',g_dlang)
         CALL cl_set_comp_att_text('amt1',l_gzze003)
         #上期數
         LET l_gzze003 = cl_getmsg('agl-00270',g_dlang)
         CALL cl_set_comp_att_text('amt2',l_gzze003)
         LET g_glfa_m.glfa003='2' #上下式
         DISPLAY BY NAME g_glfa_m.glfa003
         CALL cl_set_comp_entry("glfa003",FALSE)
         CALL cl_set_comp_visible('folder_3,page_2',FALSE)
      WHEN '3'
         LET l_gzze003 = cl_getmsg('agl-00246',g_dlang)
         CALL cl_set_comp_att_text('bpage_1',l_gzze003)
         CALL cl_set_comp_att_text('page_2',l_gzze003)
         #年初數
         LET l_gzze003 = cl_getmsg('agl-00267',g_dlang)
         CALL cl_set_comp_att_text('amt1',l_gzze003)
         #期末數
         LET l_gzze003 = cl_getmsg('agl-00268',g_dlang)
         CALL cl_set_comp_att_text('amt2',l_gzze003)
   END CASE
   #資產負債表
   IF g_glfa_m.glfa002='1' OR g_glfa_m.glfa002='3' THEN
      CALL cl_set_comp_visible("glfa006,glfa007",TRUE)
   ELSE
      CALL cl_set_comp_visible("glfa006,glfa007",FALSE)
   END IF
   #損益表
   IF g_glfa_m.glfa002='2' THEN
      CALL cl_set_comp_visible("grid_4",TRUE)
   ELSE
      CALL cl_set_comp_visible("grid_4",FALSE)
   END IF
END FUNCTION]]>
  </point>
  <point name="b_fill.body.fill_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="b_fill.define" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="b_fill.sql_before" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL g_glfb2_d.clear() 
   CALL agli070_b_fill1()
   RETURN]]>
  </point>
  <point name="browser_fill.add_browse.other" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL g_glfb2_d.clear() ]]>
  </point>
  <point name="browser_fill.define" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="construct.a.glfa002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="construct.c.glfa001" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_glfa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glfa001  #顯示到畫面上
            NEXT FIELD glfa001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.glfa004" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooal002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glfa004  #顯示到畫面上
            NEXT FIELD glfa004                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.glfa005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept
            CALL q_authorised_ld()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glfa005  #顯示到畫面上
            NEXT FIELD glfa005                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.glfacrtdp" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glfacrtdp  #顯示到畫面上
            NEXT FIELD glfacrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.glfacrtid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glfacrtid  #顯示到畫面上
            NEXT FIELD glfacrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.glfamodid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glfamodid  #顯示到畫面上
            NEXT FIELD glfamodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.glfaowndp" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glfaowndp  #顯示到畫面上
            NEXT FIELD glfaowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.glfaownid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glfaownid  #顯示到畫面上
            NEXT FIELD glfaownid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.glfb002" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_glfc001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glfb002  #顯示到畫面上
            NEXT FIELD glfb002                     #返回原欄位
    

]]>
  </point>
  <point name="cs.add_cs" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CONSTRUCT g_wc3_table1 ON glfbseq_2,glfbseq1_2,glfb002_2,glfbl004_2,glfb003_2
           FROM s_detail2[1].glfbseq_2,s_detail2[1].glfbseq1_2,s_detail2[1].glfb002_2,s_detail2[1].glfbl004_2, 
               s_detail2[1].glfb003_2
                      
         BEFORE CONSTRUCT
      END CONSTRUCT]]>
  </point>
  <point name="cs.after_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF NOT cl_null(g_wc3_table1) AND g_wc3_table1 <> " 1=1" THEN
      LET g_wc3_table1=cl_replace_str(g_wc3_table1,"glfbl004_2","glfbl004")
      LET g_wc3_table1=cl_replace_str(g_wc3_table1,"glfb003_2","glfb003")
      IF NOT cl_null(g_wc2)THEN
         LET g_wc2=g_wc2," AND ",g_wc3_table1
      ELSE
         LET g_wc2=g_wc3_table1
      END IF
   END IF]]>
  </point>
  <point name="cs.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL g_glfb2_d.clear() 
   INITIALIZE g_wc3_table1 TO NULL]]>
  </point>
  <point name="delete.body.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL g_glfb2_d.clear() ]]>
  </point>
  <point name="fetch.action_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL agli070_comp_set()]]>
  </point>
  <point name="fetch.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="fill_chk.before_chk" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF (cl_null(g_wc3_table1) OR g_wc3_table1.trim() = '1=1') THEN
      RETURN TRUE
   END IF
   #第二單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc3_table1) AND g_wc3_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF]]>
  </point>
  <point name="global.variable" order="" ver="8" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE g_glfb004_a           LIKE glfb_t.glfb004
DEFINE g_glfb005_a           LIKE glfb_t.glfb005
DEFINE g_glfb004_b           LIKE glfb_t.glfb004
DEFINE g_glfb005_b           LIKE glfb_t.glfb005
DEFINE g_glfb004_c           LIKE glfb_t.glfb004
DEFINE g_glfb005_c           LIKE glfb_t.glfb005
DEFINE g_glfb004_d           LIKE glfb_t.glfb004
DEFINE g_glfb005_d           LIKE glfb_t.glfb005
 TYPE type_g_glfb2_d RECORD
       glfbseq LIKE glfb_t.glfbseq, 
   glfbseq1 LIKE glfb_t.glfbseq1, 
   glfb002 LIKE glfb_t.glfb002, 
   glfbl004 LIKE glfbl_t.glfbl004, 
   glfb003 LIKE glfb_t.glfb003, 
   amt3 LIKE type_t.num20_6, 
   amt4 LIKE type_t.num20_6
       END RECORD
DEFINE g_glfb2_d      DYNAMIC ARRAY OF type_g_glfb2_d
DEFINE g_glfb2_d_t    type_g_glfb2_d
DEFINE g_wc3_table1   STRING
DEFINE g_test         LIKE type_t.num5
DEFINE l_ac2          LIKE type_t.num10]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_visible("grid",FALSE)]]>
  </point>
  <point name="input.a.glfa001" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_glfa_m.glfa001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_glfa_m.glfa001 != g_glfa001_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM glfa_t WHERE "||"glfaent = '" ||g_enterprise|| "' AND "||"glfa001 = '"||g_glfa_m.glfa001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
  </point>
  <point name="input.a.glfa004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_glfa_m.glfa004) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1=g_glfa_m.glfa004
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooal002_7") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_glfa_m.glfa004=g_glfa_m_t.glfa004
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glfa_m.glfa004
            CALL ap_ref_array2(g_ref_fields,"SELECT ooall004 FROM ooall_t WHERE ooallent='"||g_enterprise||"' AND ooall001='0' AND ooall002=? AND ooall003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glfa_m.glfa004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glfa_m.glfa004_desc

]]>
  </point>
  <point name="input.a.glfa005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_glfa_m.glfa005) THEN
               SELECT COUNT(*) INTO l_cnt FROM glaa_t WHERE glaaent=g_enterprise AND glaald=g_glfa_m.glfa005
               IF l_cnt=0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'agl-00055'
                  LET g_errparam.extend = g_glfa_m.glfa005
                  LET g_errparam.popup = FALSE
                  CALL cl_err()

                  LET g_glfa_m.glfa005=g_glfa_m_t.glfa005
                  NEXT FIELD glfa005
               END IF
               SELECT COUNT(*) INTO l_cnt FROM glaa_t 
               WHERE glaaent=g_enterprise AND glaald=g_glfa_m.glfa005 AND glaa004=g_glfa_m.glfa004
               IF l_cnt=0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'agl-00242'
                  LET g_errparam.extend = g_glfa_m.glfa005
                  LET g_errparam.popup = FALSE
                  CALL cl_err()

                  LET g_glfa_m.glfa005=g_glfa_m_t.glfa005
                  NEXT FIELD glfa005
               END IF
            END IF
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glfa_m.glfa005
            CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glfa_m.glfa005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glfa_m.glfa005_desc

]]>
  </point>
  <point name="input.a.glfa009" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_glfa_m.glfa009) THEN
               IF cl_null(g_glfa_m_t.glfa009) OR ( NOT cl_null(g_glfa_m_t.glfa009 AND g_glfa_m_t.glfa009 <> g_glfa_m.glfa009)) THEN
                  #設置單身金額欄位格式
                  LET l_format = "---,---,---,--&"
                  LET l_str = ""
                  FOR l_i=1 TO g_glfa_m.glfa009
                      LET l_str = l_str,"&"
                  END FOR
                  IF NOT cl_null(l_str) THEN
                     LET l_format = l_format,'.',l_str
                  END IF
                  CALL cl_set_comp_format("amt1,amt2,amt3,amt4",l_format)
               END IF
            END IF]]>
  </point>
  <point name="input.a.page1.amt1" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF l_cmd = 'u' THEN
               CALL agli070_update_glfb('1') RETURNING l_success
               IF l_success=FALSE THEN
                  NEXT FIELD amt1
               END IF
            END IF
           ]]>
  </point>
  <point name="input.a.page1.amt2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF l_cmd = 'u' THEN
               CALL agli070_update_glfb('1') RETURNING l_success
               IF l_success=FALSE THEN
                  NEXT FIELD amt2
               END IF
            END IF
]]>
  </point>
  <point name="input.a.page1.glfb002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.a.page1.glfb003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_glfb_d[l_ac].glfb003) THEN
               SELECT COUNT(*) INTO l_cnt FROM glfb_t
               WHERE glfbent=g_enterprise AND glfb001=g_glfa_m.glfa001
                 AND glfbseq<>g_glfb_d[l_ac].glfbseq AND glfbseq1 IN ('A','B')
                 AND glfb003=g_glfb_d[l_ac].glfb003
               IF l_cnt>0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'agl-00247'
                  LET g_errparam.extend = g_glfb_d[l_ac].glfb003
                  LET g_errparam.popup = FALSE
                  CALL cl_err()

#                  LET g_glfb_d[l_ac].glfb003=g_glfb_d_t.glfb003
#                  NEXT FIELD glfb003
               END IF
               IF l_ac>1 THEN
                  LET l_n=l_ac-1
                  LET l_count=g_glfb_d[l_n].glfb003+1
                  IF g_glfb_d[l_ac].glfb003<>l_count THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'agl-00248'
                     LET g_errparam.extend = g_glfb_d[l_ac].glfb003
                     LET g_errparam.popup = FALSE
                     CALL cl_err()

                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.a.page1.glfbseq" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_glfa_m.glfa001 IS NOT NULL AND g_glfb_d[g_detail_idx].glfbseq IS NOT NULL AND g_glfb_d[g_detail_idx].glfbseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfa_m.glfa001 != g_glfa001_t OR g_glfb_d[g_detail_idx].glfbseq != g_glfb_d_t.glfbseq OR g_glfb_d[g_detail_idx].glfbseq1 != g_glfb_d_t.glfbseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM glfb_t WHERE "||"glfbent = '" ||g_enterprise|| "' AND "||"glfb001 = '"||g_glfa_m.glfa001 ||"' AND "|| "glfbseq = '"||g_glfb_d[g_detail_idx].glfbseq ||"' AND "|| "glfbseq1 = '"||g_glfb_d[g_detail_idx].glfbseq1 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.glfbseq1" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_glfa_m.glfa001 IS NOT NULL AND g_glfb_d[g_detail_idx].glfbseq IS NOT NULL AND g_glfb_d[g_detail_idx].glfbseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfa_m.glfa001 != g_glfa001_t OR g_glfb_d[g_detail_idx].glfbseq != g_glfb_d_t.glfbseq OR g_glfb_d[g_detail_idx].glfbseq1 != g_glfb_d_t.glfbseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM glfb_t WHERE "||"glfbent = '" ||g_enterprise|| "' AND "||"glfb001 = '"||g_glfa_m.glfa001 ||"' AND "|| "glfbseq = '"||g_glfb_d[g_detail_idx].glfbseq ||"' AND "|| "glfbseq1 = '"||g_glfb_d[g_detail_idx].glfbseq1 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.amt3" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF cl_null(g_glfb2_d[l_ac].amt3) THEN
               LET g_glfb2_d[l_ac].amt3=0
            END IF
            IF l_cmd = 'a' THEN
               CALL agli070_insert_glfb('2') RETURNING l_success
            END IF
            IF l_cmd = 'u' THEN
               CALL agli070_update_glfb('2') RETURNING l_success
            END IF
            IF l_success=FALSE THEN
               NEXT FIELD amt3
            END IF]]>
  </point>
  <point name="input.a.page2.amt4" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF cl_null(g_glfb2_d[l_ac].amt4) THEN
               LET g_glfb2_d[l_ac].amt4=0
            END IF
            IF l_cmd = 'a' THEN
               CALL agli070_insert_glfb('2') RETURNING l_success
            END IF
            IF l_cmd = 'u' THEN
               CALL agli070_update_glfb('2') RETURNING l_success
            END IF
            IF l_success=FALSE THEN
               NEXT FIELD amt4
            END IF ]]>
  </point>
  <point name="input.a.page2.glfbseq1_2" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_glfa_m.glfa001 IS NOT NULL AND g_glfb2_d[g_detail_idx].glfbseq IS NOT NULL AND g_glfb2_d[g_detail_idx].glfbseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfa_m.glfa001 != g_glfa001_t OR g_glfb2_d[g_detail_idx].glfbseq != g_glfb2_d_t.glfbseq OR g_glfb2_d[g_detail_idx].glfbseq1 != g_glfb2_d_t.glfbseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM glfb_t WHERE "||"glfbent = '" ||g_enterprise|| "' AND "||"glfb001 = '"||g_glfa_m.glfa001 ||"' AND "|| "glfbseq = '"||g_glfb2_d[g_detail_idx].glfbseq ||"' AND "|| "glfbseq1 = '"||g_glfb2_d[g_detail_idx].glfbseq1 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.glfbseq_2" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_glfa_m.glfa001 IS NOT NULL AND g_glfb2_d[g_detail_idx].glfbseq IS NOT NULL AND g_glfb2_d[g_detail_idx].glfbseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glfa_m.glfa001 != g_glfa001_t OR g_glfb2_d[g_detail_idx].glfbseq != g_glfb2_d_t.glfbseq OR g_glfb2_d[g_detail_idx].glfbseq1 != g_glfb2_d_t.glfbseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM glfb_t WHERE "||"glfbent = '" ||g_enterprise|| "' AND "||"glfb001 = '"||g_glfa_m.glfa001 ||"' AND "|| "glfbseq = '"||g_glfb2_d[g_detail_idx].glfbseq ||"' AND "|| "glfbseq1 = '"||g_glfb2_d[g_detail_idx].glfbseq1 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.after_define_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_forupd_sql = "SELECT glfbseq,'',glfb002,'',glfb003,'','' FROM glfb_t  
       WHERE glfbent=? AND glfb001=? AND glfbseq=? AND glfbseq1 IN ('A','B') FOR UPDATE"]]>
  </point>
  <point name="input.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_visible("grid",FALSE)]]>
  </point>
  <point name="input.b.page1.amt1" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_glfb_d[l_ac].glfbseq1='A'
            CALL agli070_get_glfb004_glfb005(g_glfb_d[l_ac].glfbseq,g_glfb_d[l_ac].glfbseq1)
            CALL cl_set_comp_visible("grid",TRUE)
            LET l_desc=""
            IF NOT cl_null(g_glfb005_a) THEN
               CALL agli070_glfb005_desc(g_glfb004_a,g_glfb005_a) RETURNING l_desc
            END IF
            DISPLAY l_desc TO desc]]>
  </point>
  <point name="input.b.page1.amt2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_glfb_d[l_ac].glfbseq1='B'
            CALL agli070_get_glfb004_glfb005(g_glfb_d[l_ac].glfbseq,g_glfb_d[l_ac].glfbseq1)
            CALL cl_set_comp_visible("grid",TRUE)
            LET l_desc=""
            IF NOT cl_null(g_glfb005_b) THEN
               CALL agli070_glfb005_desc(g_glfb004_b,g_glfb005_b) RETURNING l_desc
            END IF
            DISPLAY l_desc TO desc]]>
  </point>
  <point name="input.b.page1.glfbl004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.b.page2.amt3" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_glfb2_d[l_ac].glfbseq1='C'
            CALL agli070_get_glfb004_glfb005(g_glfb2_d[l_ac].glfbseq,g_glfb2_d[l_ac].glfbseq1)]]>
  </point>
  <point name="input.b.page2.amt4" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_glfb2_d[l_ac].glfbseq1='D'
            CALL agli070_get_glfb004_glfb005(g_glfb2_d[l_ac].glfbseq,g_glfb2_d[l_ac].glfbseq1)]]>
  </point>
  <point name="input.body.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  CALL agli070_update_glfbseq(g_glfb_d_t.glfbseq,'1','d') RETURNING l_success1
                  IF l_success1=FALSE THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "glfb_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     CALL s_transaction_end('N','0')
                     CANCEL DELETE
                  END IF]]>
  </point>
  <point name="input.body.a_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               END IF
               END IF
               LET l_success1=TRUE
               LET l_success2=TRUE
#               #年初数
#               LET l_count = 1  
#               SELECT COUNT(*) INTO l_count FROM glfb_t 
#                WHERE glfbent = g_enterprise AND glfb001 = g_glfa_m.glfa001
#                  AND glfbseq = g_glfb_d[l_ac].glfbseq AND glfbseq1='A'
#               IF l_count=0 THEN
#                  LET g_glfb_d[l_ac].glfbseq1='A'
#                  CALL agli070_insert_glfb('1') RETURNING l_success1
#               END IF
#               #期末数
#               LET l_count = 1  
#               SELECT COUNT(*) INTO l_count FROM glfb_t 
#                WHERE glfbent = g_enterprise AND glfb001 = g_glfa_m.glfa001
#                  AND glfbseq = g_glfb_d[l_ac].glfbseq AND glfbseq1='B'
#               IF l_count=0 THEN
#                  LET g_glfb_d[l_ac].glfbseq1='B'
#                  CALL agli070_insert_glfb('1') RETURNING l_success2
#               END IF
               #判斷是否已存在
               SELECT COUNT(*) INTO l_count FROM glfb_t 
                WHERE glfbent = g_enterprise AND glfb001 = g_glfa_m.glfa001
                  AND glfbseq = g_glfb_d[l_ac].glfbseq AND glfbseq1 IN ('A','B')
               IF l_count>0 THEN
                  CALL agli070_update_glfbseq(g_glfb_d[l_ac].glfbseq,'1','i') RETURNING l_success1
               END IF
               IF l_success1=TRUE THEN
                  LET g_glfb_d[l_ac].glfbseq1='A'
                  CALL agli070_insert_glfb('1') RETURNING l_success1
                  LET g_glfb_d[l_ac].glfbseq1='B'
                  CALL agli070_insert_glfb('1') RETURNING l_success2
               END IF
               IF SQLCA.SQLcode OR l_success1=FALSE OR l_success1=FALSE THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "glfb_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
  
                  CALL s_transaction_end('N','0')                    
                  CANCEL INSERT
               ELSE
                  #先刷新資料
                  #CALL agli070_b_fill()
                  #資料多語言用-增/改
                  INITIALIZE l_var_keys TO NULL 
                  INITIALIZE l_field_keys TO NULL 
                  INITIALIZE l_vars TO NULL 
                  INITIALIZE l_fields TO NULL 
                  INITIALIZE l_var_keys_bak TO NULL 
                  IF g_glfa_m.glfa001 = g_detail_multi_table_t.glfbl001 AND
                     g_glfb_d[l_ac].glfbseq = g_detail_multi_table_t.glfblseq AND
                     g_glfb_d[l_ac].glfb002 = g_detail_multi_table_t.glfbl002 AND
                     g_glfb_d[l_ac].glfbl004 = g_detail_multi_table_t.glfbl004 THEN
                  ELSE 
                     LET l_var_keys[01] = g_glfa_m.glfa001
                     LET l_field_keys[01] = 'glfbl001'
                     LET l_var_keys[02] = g_glfb_d[l_ac].glfbseq
                     LET l_field_keys[02] = 'glfblseq'
                     LET l_var_keys[03] = g_glfb_d[l_ac].glfb002
                     LET l_field_keys[03] = 'glfbl002'
                     LET l_var_keys[04] = g_dlang
                     LET l_field_keys[04] = 'glfbl003'
                     LET l_vars[01] = g_glfb_d[l_ac].glfbl004
                     LET l_fields[01] = 'glfbl004'
                     LET l_vars[02] = g_enterprise 
                     LET l_fields[02] = 'glfblent'
                     LET l_var_keys_bak[01] = g_detail_multi_table_t.glfbl001
                     LET l_var_keys_bak[02] = g_detail_multi_table_t.glfblseq
                     LET l_var_keys_bak[03] = g_detail_multi_table_t.glfbl002
                     LET l_var_keys_bak[04] = g_detail_multi_table_t.glfbl003
                     CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'glfbl_t')
                  END IF
                  CALL agli070_b_fill()]]>
  </point>
  <point name="input.body.after_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL agli070_b_fill()]]>
  </point>
  <point name="input.body.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="input.body.b_a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF l_flag=FALSE THEN]]>
  </point>
  <point name="input.body.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF l_flag=TRUE THEN
                  DELETE FROM glfb_t
                   WHERE glfbent = g_enterprise AND glfb001 = g_glfa_m.glfa001 
                     AND glfbseq = g_glfb_d_t.glfbseq AND glfbseq1 IN ('A','B')
               ELSE]]>
  </point>
  <point name="input.body.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF l_flag=TRUE THEN
                  UPDATE glfb_t SET (glfb001,glfbseq,glfb002,glfb003) = (g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq, 
                      g_glfb_d[l_ac].glfb002,g_glfb_d[l_ac].glfb003)
                   WHERE glfbent = g_enterprise AND glfb001 = g_glfa_m.glfa001 
                     AND glfbseq = g_glfb_d_t.glfbseq #項次   
                     AND glfbseq1 IN ('A','B')   #列次
               ELSE]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF cl_null(g_glfb_d[l_ac].glfbseq) OR g_glfb_d[l_ac].glfbseq=0 THEN
               LET g_glfb_d[l_ac].glfbseq=l_ac
               CALL agli070_set_glfb002('1',g_glfb_d[l_ac].glfbseq) RETURNING g_glfb_d[l_ac].glfb002
               #行序
               IF l_ac>1 THEN
                  LET l_n=l_ac-1
                  LET g_glfb_d[l_ac].glfb003=g_glfb_d[l_n].glfb003+1
               ELSE
                  LET g_glfb_d[l_ac].glfb003=l_ac
               END IF
            END IF
            LET g_glfb004_a=''
            LET g_glfb005_a=''
            LET g_glfb004_b=''
            LET g_glfb005_b='']]>
  </point>
  <point name="input.body.before_row" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ELSE
               LET l_insert = FALSE
               LET l_cmd = ''
               LET l_ac = ARR_CURR()
               LET g_detail_idx = l_ac
               
               LET l_lock_sw = 'N'            #DEFAULT
               LET l_n = ARR_COUNT()
               DISPLAY l_ac TO FORMONLY.idx
               
               CALL s_transaction_begin()
               OPEN agli070_cl USING g_enterprise,g_glfa_m.glfa001
               
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  STATUS
                  LET g_errparam.extend = "OPEN agli070_cl:"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CLOSE agli070_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
               
               LET g_rec_b = g_glfb_d.getLength()
            
               IF g_rec_b >= l_ac 
                  AND g_glfb_d[l_ac].glfbseq IS NOT NULL
               THEN
                  LET l_cmd='u'
                  LET g_glfb_d_t.* = g_glfb_d[l_ac].*  #BACKUP
                  CALL agli070_set_entry_b(l_cmd)
                  CALL agli070_set_no_entry_b(l_cmd)
                  IF NOT agli070_lock_b("glfb_t","'1'") THEN
                     LET l_lock_sw='Y'
                  ELSE
                     FETCH agli070_bcl INTO g_glfb_d[l_ac].glfbseq,g_glfb_d[l_ac].glfbseq1,g_glfb_d[l_ac].glfb002, 
                         g_glfb_d[l_ac].glfbl004,g_glfb_d[l_ac].glfb003,g_glfb_d[l_ac].amt1,g_glfb_d[l_ac].amt2
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = g_glfb_d_t.glfbseq
                        LET g_errparam.popup = TRUE
                        CALL cl_err()

                        LET l_lock_sw = "Y"
                     END IF
                     
                     LET g_bfill = "N"
                     CALL agli070_show()
                     LET g_bfill = "Y"
                     
                     CALL cl_show_fld_cont()
                  END IF
               ELSE
                  LET l_cmd='a'
               END IF
            END IF
            IF l_cmd='u' THEN
               CALL agli070_sel_glfbl004(g_glfb_d[l_ac].glfbseq,g_glfb_d[l_ac].glfb002) RETURNING g_glfb_d[l_ac].glfbl004
               CALL cl_err_collect_init()
               CALL agli070_get_amt(g_glfb_d[l_ac].glfbseq,'A') RETURNING g_glfb_d[l_ac].amt1
               CALL agli070_get_amt(g_glfb_d[l_ac].glfbseq,'B') RETURNING g_glfb_d[l_ac].amt2
               CALL cl_err_collect_show()
               DISPLAY BY NAME g_glfb_d[l_ac].glfbl004,g_glfb_d[l_ac].amt1,g_glfb_d[l_ac].amt2
            END IF]]>
  </point>
  <point name="input.body.before_row2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF l_flag=FALSE THEN]]>
  </point>
  <point name="input.body.insert.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.body.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               END IF]]>
  </point>
  <point name="input.body.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               END IF]]>
  </point>
  <point name="input.body2.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body2.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF l_flag=TRUE THEN
                  UPDATE glfb_t SET (glfb001,glfbseq,glfb002,glfb003) = (g_glfa_m.glfa001,g_glfb2_d[l_ac].glfbseq, 
                                    g_glfb2_d[l_ac].glfb002,g_glfb2_d[l_ac].glfb003) #自訂欄位頁簽 
                   WHERE glfbent = g_enterprise AND glfb001 = g_glfa_m.glfa001
                     AND glfbseq = g_glfb2_d_t.glfbseq #行次 
               ELSE]]>
  </point>
  <point name="input.body2.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF g_rec_b >= l_ac 
               AND g_glfb2_d[l_ac].glfbseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_glfb2_d_t.* = g_glfb2_d[l_ac].*  #BACKUP
               CALL agli070_set_entry_b(l_cmd)  
               CALL agli070_set_no_entry_b(l_cmd)
               IF NOT agli070_lock_b("glfb_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH agli070_bcl INTO g_glfb2_d[l_ac].glfbseq,g_glfb2_d[l_ac].glfbseq1,
                                         g_glfb2_d[l_ac].glfb002,g_glfb2_d[l_ac].glfbl004, 
                                         g_glfb2_d[l_ac].glfb003,g_glfb2_d[l_ac].amt3,
                                         g_glfb2_d[l_ac].amt4
                   IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL agli070_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF]]>
  </point>
  <point name="input.body2.insert.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL agli070_b_default() RETURNING g_glfb2_d[l_ac].glfbseq,g_glfb2_d[l_ac].glfb002]]>
  </point>
  <point name="input.body2.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               END IF]]>
  </point>
  <point name="input.c.glfa004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_glfa_m.glfa004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #
            LET g_qryparam.where = " ooal001='0' "
            
            CALL q_ooal002()                                #呼叫開窗

            LET g_glfa_m.glfa004 = g_qryparam.return1              

            DISPLAY g_glfa_m.glfa004 TO glfa004              #

            NEXT FIELD glfa004                          #返回原欄位

]]>
  </point>
  <point name="input.c.glfa005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_glfa_m.glfa005             #給予default值
            LET g_qryparam.default2 = "" #g_glfa_m.glaald #帳別編號
            #給予arg
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept
            IF NOT cl_null(g_glfa_m.glfa004) THEN
               LET g_qryparam.where = " glaa004='",g_glfa_m.glfa004,"'"
            END IF
            CALL q_authorised_ld()                                #呼叫開窗

            LET g_glfa_m.glfa005 = g_qryparam.return1              
            #LET g_glfa_m.glaald = g_qryparam.return2 
            DISPLAY g_glfa_m.glfa005 TO glfa005              #
            #DISPLAY g_glfa_m.glaald TO glaald #帳別編號
            NEXT FIELD glfa005                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.amt1" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'A')
            RETURNING g_glfb004_a,g_glfb005_a,g_glfb_d[l_ac].amt1
            DISPLAY BY NAME g_glfb_d[l_ac].amt1
            CALL agli070_glfb005_desc(g_glfb004_a,g_glfb005_a) RETURNING l_desc
            DISPLAY l_desc TO desc]]>
  </point>
  <point name="input.c.page1.amt2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL agli070_01(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,'B')
            RETURNING g_glfb004_b,g_glfb005_b,g_glfb_d[l_ac].amt2
            DISPLAY BY NAME g_glfb_d[l_ac].amt2
            CALL agli070_glfb005_desc(g_glfb004_b,g_glfb005_b) RETURNING l_desc
            DISPLAY l_desc TO desc]]>
  </point>
  <point name="input.c.page1.glfb002" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_glfb_d[l_ac].glfb002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_glfc001()                                #呼叫開窗

            LET g_glfb_d[l_ac].glfb002 = g_qryparam.return1              

            DISPLAY g_glfb_d[l_ac].glfb002 TO glfb002              #

            NEXT FIELD glfb002                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.amt3" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL agli070_01(g_glfa_m.glfa001,g_glfb2_d[l_ac].glfbseq)
            RETURNING g_glfb004,g_glfb005,g_glfb2_d[l_ac].amt3
            DISPLAY BY NAME g_glfb2_d[l_ac].amt3]]>
  </point>
  <point name="input.c.page2.amt4" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL agli070_01(g_glfa_m.glfa001,g_glfb2_d[l_ac].glfbseq)
            RETURNING g_glfb004,g_glfb005,g_glfb2_d[l_ac].amt4
            DISPLAY BY NAME g_glfb2_d[l_ac].amt4]]>
  </point>
  <point name="input.d.before_input" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #設置單身金額欄位格式
            LET l_format = "---,---,---,--&"
            LET l_str = ""
            FOR l_i=1 TO g_glfa_m.glfa009
                LET l_str = l_str,"&"
            END FOR
            IF NOT cl_null(l_str) THEN
               LET l_format = l_format,'.',l_str
            END IF
            CALL cl_set_comp_format("amt1,amt2,amt3,amt4",l_format)]]>
  </point>
  <point name="input.define" order="" ver="8" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE  l_flag                LIKE type_t.num5
   DEFINE  l_success             LIKE type_t.num5
   DEFINE  l_success1            LIKE type_t.num5
   DEFINE  l_success2            LIKE type_t.num5
   DEFINE  l_desc                STRING
   DEFINE  l_format              STRING
   DEFINE  l_str                 STRING
   DEFINE  l_lineno              LIKE type_t.num5
   
   LET l_flag=TRUE]]>
  </point>
  <point name="input.detail_input.page1.update_item" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_glfb_d[l_ac].glfb002)  THEN
                  CALL n_glfbl(g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq,g_glfb_d[l_ac].glfb002)
                  CALL agli070_sel_glfbl004(g_glfb_d[l_ac].glfbseq,g_glfb_d[l_ac].glfb002) RETURNING g_glfb_d[l_ac].glfbl004
                  DISPLAY BY NAME g_glfb_d[l_ac].glfbl004
               END IF]]>
  </point>
  <point name="input.detail_input.page2.update_item" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_glfb2_d[l_ac].glfb002)  THEN
                  CALL n_glfbl(g_glfa_m.glfa001,g_glfb2_d[l_ac].glfbseq,g_glfb2_d[l_ac].glfb002)
                  CALL agli070_sel_glfbl004(g_glfb2_d[l_ac].glfbseq,g_glfb2_d[l_ac].glfb002) RETURNING g_glfb2_d[l_ac].glfbl004
                  DISPLAY BY NAME g_glfb2_d[l_ac].glfbl004
               END IF]]>
  </point>
  <point name="input.g.glfa002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL agli070_comp_set()]]>
  </point>
  <point name="input.g.glfa003" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF g_glfa_m.glfa003='2' THEN
               CALL cl_set_comp_visible('folder_3,page_2',FALSE)
            ELSE
               CALL cl_set_comp_visible('folder_3,page_2',TRUE)
            END IF]]>
  </point>
  <point name="input.g.page2.amt4" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         
         AFTER FIELD glfbl004
         
         AFTER FIELD glfb003
         ]]>
  </point>
  <point name="input.m.before_input" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL cl_err_collect_init()]]>
  </point>
  <point name="input.master_input.update_item" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_glfa_m.glfa001)  THEN
                  CALL n_glfal(g_glfa_m.glfa001)
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_glfa_m.glfa001
                  CALL ap_ref_array2(g_ref_fields," SELECT glfal003 FROM glfal_t WHERE glfalent = '"
                      ||g_enterprise||"' AND glfal001 = ? AND glfal002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
                  LET g_glfa_m.glfal003 = g_rtn_fields[1]
                  DISPLAY BY NAME g_glfa_m.glfal003
               END IF]]>
  </point>
  <point name="input.more_input" order="" ver="8" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[      INPUT ARRAY g_glfb2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert,
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
 
         #+ 此段落由子樣板a43產生
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               IF NOT cl_null(g_glfb2_d[l_ac2].glfb002)  THEN
                  CALL n_glfbl(g_glfa_m.glfa001,g_glfb2_d[l_ac2].glfbseq,g_glfb2_d[l_ac2].glfb002)
                  CALL agli070_sel_glfbl004(g_glfb2_d[l_ac2].glfbseq,g_glfb2_d[l_ac2].glfb002) RETURNING g_glfb2_d[l_ac2].glfbl004
                  DISPLAY BY NAME g_glfb2_d[l_ac2].glfbl004
               END IF
               #END add-point
            END IF
 
 
         
         BEFORE INPUT
            
            CALL agli070_b_fill()
            LET g_rec_b = g_glfb2_d.getLength()
            #add-point:資料輸入前

            #end add-point
            
         BEFORE INSERT
            LET g_insert = 'Y' 
#            NEXT FIELD glfbseq_2
 
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_glfb2_d[l_ac2].* TO NULL 
            
            LET g_glfb2_d_t.* = g_glfb2_d[l_ac2].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL agli070_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            
            #end add-point
            CALL agli070_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_glfb_d[li_reproduce_target].* = g_glfb_d[li_reproduce].*
               LET g_glfb2_d[li_reproduce_target].* = g_glfb2_d[li_reproduce].*
 
               LET g_glfb2_d[li_reproduce_target].glfbseq = NULL
               LET g_glfb2_d[li_reproduce_target].glfbseq1 = NULL
            END IF
            #公用欄位給值(單身2)
            
            LET g_detail_multi_table_t.glfbl001 = g_glfa_m.glfa001
LET g_detail_multi_table_t.glfblseq = g_glfb2_d[l_ac2].glfbseq
LET g_detail_multi_table_t.glfbl002 = g_glfb2_d[l_ac2].glfb002
LET g_detail_multi_table_t.glfbl003 = g_dlang
LET g_detail_multi_table_t.glfbl004 = g_glfb2_d[l_ac2].glfbl004
 
            #add-point:modify段before insert
            IF cl_null(g_glfb2_d[l_ac2].glfbseq) OR g_glfb2_d[l_ac2].glfbseq=0 THEN
               LET g_glfb2_d[l_ac2].glfbseq=l_ac2
               CALL agli070_set_glfb002('2',g_glfb2_d[l_ac2].glfbseq) RETURNING g_glfb2_d[l_ac2].glfb002
               #行序
               IF l_ac2>1 THEN
                  LET l_n=l_ac2-1
                  LET l_count=g_glfb2_d[l_n].glfb003+1
               ELSE
                  LET l_count=l_ac2
               END IF
               SELECT COUNT(*) INTO l_cnt FROM glfb_t
               WHERE glfbent=g_enterprise AND glfb001=g_glfa_m.glfa001
                 AND glfb003=l_count AND glfbseq1 IN ('C','D')
               IF l_cnt=0 THEN
                  LET g_glfb2_d[l_ac2].glfb003=l_count
               END IF
            END IF
            LET g_glfb004_c=''
            LET g_glfb005_c=''
            LET g_glfb004_d=''
            LET g_glfb005_d=''
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2

            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac2 = ARR_CURR()
            LET g_detail_idx2 = l_ac2
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac2 TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN agli070_cl USING g_enterprise,g_glfa_m.glfa001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code =  STATUS
               LET g_errparam.extend = "OPEN agli070_cl:"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CLOSE agli070_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_glfb2_d.getLength()
            
            IF g_rec_b >= l_ac2 
               AND g_glfb2_d[l_ac2].glfbseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_glfb2_d_t.* = g_glfb2_d[l_ac2].*  #BACKUP
               CALL agli070_set_entry_b(l_cmd)  
               CALL agli070_set_no_entry_b(l_cmd)
               IF NOT agli070_lock_b("glfb_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH agli070_2_bcl INTO g_glfb2_d[l_ac2].glfbseq,g_glfb2_d[l_ac2].glfbseq1,
                                         g_glfb2_d[l_ac2].glfb002,g_glfb2_d[l_ac2].glfbl004, 
                                         g_glfb2_d[l_ac2].glfb003,g_glfb2_d[l_ac2].amt3,
                                         g_glfb2_d[l_ac2].amt4
                   IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL agli070_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            IF l_cmd='u' THEN
               CALL agli070_sel_glfbl004(g_glfb2_d[l_ac2].glfbseq,g_glfb2_d[l_ac2].glfb002) RETURNING g_glfb2_d[l_ac2].glfbl004
               CALL cl_err_collect_init()
               CALL agli070_get_amt(g_glfb2_d[l_ac2].glfbseq,'C') RETURNING g_glfb2_d[l_ac2].amt3
               CALL agli070_get_amt(g_glfb2_d[l_ac2].glfbseq,'D') RETURNING g_glfb2_d[l_ac2].amt4
               CALL cl_err_collect_show()
               DISPLAY BY NAME g_glfb2_d[l_ac2].glfbl004,g_glfb2_d[l_ac2].amt3,g_glfb2_d[l_ac2].amt4
            END IF
            #add-point:modify段before row
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            LET g_detail_multi_table_t.glfbl001 = g_glfa_m.glfa001
LET g_detail_multi_table_t.glfblseq = g_glfb2_d[l_ac2].glfbseq
LET g_detail_multi_table_t.glfbl002 = g_glfb2_d[l_ac2].glfb002
LET g_detail_multi_table_t.glfbl003 = g_dlang
LET g_detail_multi_table_t.glfbl004 = g_glfb2_d[l_ac2].glfbl004
 
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_glfb2_d.getLength() < l_ac2 THEN
               CALL FGL_SET_ARR_CURR(l_ac2-1)
               CALL g_glfb2_d.deleteElement(l_ac2)
               NEXT FIELD glfbseq_2
            END IF
         
            IF g_glfb2_d[l_ac2].glfbseq IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  -263
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前

               #end add-point    
               
               DELETE FROM glfb_t
                WHERE glfbent = g_enterprise AND glfb001 = g_glfa_m.glfa001 AND
                      glfbseq = g_glfb2_d_t.glfbseq AND glfbseq1 IN ('C','D')
                  
               #add-point:單身2刪除中
               
               #end add-point    
                  
               IF SQLCA.sqlcode  THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "glfb_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  INITIALIZE l_var_keys_bak TO NULL 
                  INITIALIZE l_field_keys TO NULL 
                  LET l_field_keys[01] = 'glfbl001'
                  LET l_field_keys[02] = 'glfblseq'
                  LET l_field_keys[03] = 'glfbl002'
                  LET l_field_keys[04] = 'glfbl003'
                  LET l_var_keys_bak[01] = g_detail_multi_table_t.glfbl001
                  LET l_var_keys_bak[02] = g_detail_multi_table_t.glfblseq
                  LET l_var_keys_bak[03] = g_detail_multi_table_t.glfbl002
                  LET l_var_keys_bak[04] = g_detail_multi_table_t.glfbl003
                  CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'glfbl_t')
 
                  #add-point:單身2刪除後
                  CALL agli070_update_glfbseq(g_glfb2_d_t.glfbseq,'2','d') RETURNING l_success1
                  IF l_success1=FALSE THEN
                     INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "glfb_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                     CALL s_transaction_end('N','0')
                     CANCEL DELETE 
                  END IF
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE agli070_2_bcl
               LET l_count = g_glfb_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_glfa_m.glfa001
               LET gs_keys[2] = g_glfb2_d[g_detail_idx2].glfbseq
               LET gs_keys[3] = g_glfb2_d[g_detail_idx2].glfbseq1
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            CALL agli070_b_fill()
            #end add-point
            #如果是最後一筆
            IF l_ac2 = (g_glfb_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac2-1)
            END IF
#                           CALL agli070_delete_b('glfb_t',gs_keys,"'2'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
            LET l_success1=TRUE
            LET l_success2=TRUE
            #判斷是否已存在
            SELECT COUNT(*) INTO l_count FROM glfb_t 
             WHERE glfbent = g_enterprise AND glfb001 = g_glfa_m.glfa001
               AND glfbseq = g_glfb2_d[l_ac2].glfbseq AND glfbseq1 IN ('C','D')
            IF l_count>0 THEN
               CALL agli070_update_glfbseq(g_glfb2_d[l_ac2].glfbseq,'2','i') RETURNING l_success1
            END IF
            IF l_success1=TRUE THEN
               LET g_glfb2_d[l_ac2].glfbseq1='C'
               CALL agli070_insert_glfb('2') RETURNING l_success1
               LET g_glfb2_d[l_ac2].glfbseq1='D'
               CALL agli070_insert_glfb('2') RETURNING l_success2
            END IF
            
            IF SQLCA.SQLcode OR l_success1=FALSE OR l_success2=FALSE THEN
               INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "glfb_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL agli070_b_fill()
               #資料多語言用-增/改
               INITIALIZE l_var_keys TO NULL 
               INITIALIZE l_field_keys TO NULL 
               INITIALIZE l_vars TO NULL 
               INITIALIZE l_fields TO NULL 
               INITIALIZE l_var_keys_bak TO NULL 
               IF g_glfa_m.glfa001 = g_detail_multi_table_t.glfbl001 AND
                  g_glfb2_d[l_ac2].glfbseq = g_detail_multi_table_t.glfblseq AND
                  g_glfb2_d[l_ac2].glfb002 = g_detail_multi_table_t.glfbl002 AND
                  g_glfb2_d[l_ac2].glfbl004 = g_detail_multi_table_t.glfbl004 THEN
               ELSE 
                  LET l_var_keys[01] = g_glfa_m.glfa001
                  LET l_field_keys[01] = 'glfbl001'
                  LET l_var_keys[02] = g_glfb2_d[l_ac2].glfbseq
                  LET l_field_keys[02] = 'glfblseq'
                  LET l_var_keys[03] = g_glfb2_d[l_ac2].glfb002
                  LET l_field_keys[03] = 'glfbl002'
                  LET l_var_keys[04] = g_dlang
                  LET l_field_keys[04] = 'glfbl003'
                  LET l_vars[01] = g_glfb2_d[l_ac2].glfbl004
                  LET l_fields[01] = 'glfbl004'
                  LET l_vars[02] = g_enterprise 
                  LET l_fields[02] = 'glfblent'
                  LET l_var_keys_bak[01] = g_detail_multi_table_t.glfbl001
                  LET l_var_keys_bak[02] = g_detail_multi_table_t.glfblseq
                  LET l_var_keys_bak[03] = g_detail_multi_table_t.glfbl002
                  LET l_var_keys_bak[04] = g_detail_multi_table_t.glfbl003
                  CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'glfbl_t')
               END IF
               #add-point:單身新增後
               CALL agli070_b_fill()
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               LET g_glfb2_d[l_ac2].* = g_glfb2_d_t.*
               CLOSE agli070_2_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = -263
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_glfb2_d[l_ac2].* = g_glfb2_d_t.*
            ELSE
               #add-point:單身page2修改前
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               UPDATE glfb_t SET (glfb001,glfbseq,glfb002,glfb003) = (g_glfa_m.glfa001,g_glfb2_d[l_ac2].glfbseq, 
                   g_glfb2_d[l_ac2].glfb002,g_glfb2_d[l_ac2].glfb003) #自訂欄位頁簽 

                WHERE glfbent = g_enterprise AND glfb001 = g_glfa_m.glfa001
                  AND glfbseq = g_glfb2_d_t.glfbseq #項次 
                  AND glfbseq1 IN ('C','D')
                  
               #add-point:單身page2修改中

               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "std-00009"
                     LET g_errparam.extend = "glfb_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     CALL s_transaction_end('N','0')
                     LET g_glfb2_d[l_ac2].* = g_glfb2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "glfb_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
  
                     CALL s_transaction_end('N','0')
                     LET g_glfb2_d[l_ac2].* = g_glfb2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_glfa_m.glfa001
               LET gs_keys_bak[1] = g_glfa001_t
               LET gs_keys[2] = g_glfb2_d[g_detail_idx2].glfbseq
               LET gs_keys_bak[2] = g_glfb2_d_t.glfbseq
               LET gs_keys[3] = g_glfb2_d[g_detail_idx2].glfbseq1
               LET gs_keys_bak[3] = g_glfb2_d_t.glfbseq1
               CALL agli070_update_b('glfb_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_glfa_m.glfa001 = g_detail_multi_table_t.glfbl001 AND
         g_glfb2_d[l_ac2].glfbseq = g_detail_multi_table_t.glfblseq AND
         g_glfb2_d[l_ac2].glfb002 = g_detail_multi_table_t.glfbl002 AND
         g_glfb2_d[l_ac2].glfbl004 = g_detail_multi_table_t.glfbl004 THEN
         ELSE 
            LET l_var_keys[01] = g_glfa_m.glfa001
            LET l_field_keys[01] = 'glfbl001'
            LET l_var_keys[02] = g_glfb2_d[l_ac2].glfbseq
            LET l_field_keys[02] = 'glfblseq'
            LET l_var_keys[03] = g_glfb2_d[l_ac2].glfb002
            LET l_field_keys[03] = 'glfbl002'
            LET l_var_keys[04] = g_dlang
            LET l_field_keys[04] = 'glfbl003'
            LET l_vars[01] = g_glfb2_d[l_ac2].glfbl004
            LET l_fields[01] = 'glfbl004'
            LET l_vars[02] = g_enterprise 
            LET l_fields[02] = 'glfblent'
            LET l_var_keys_bak[01] = g_detail_multi_table_t.glfbl001
            LET l_var_keys_bak[02] = g_detail_multi_table_t.glfblseq
            LET l_var_keys_bak[03] = g_detail_multi_table_t.glfbl002
            LET l_var_keys_bak[04] = g_detail_multi_table_t.glfbl003
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'glfbl_t')
         END IF
               END CASE
               #add-point:單身page2修改後

               #end add-point
            END IF
         
         #---------------------<  Detail: page2  >---------------------
         
         AFTER FIELD glfb003_2
            IF NOT cl_null(g_glfb2_d[l_ac2].glfb003) THEN
               SELECT COUNT(*) INTO l_cnt FROM glfb_t
               WHERE glfbent=g_enterprise AND glfb001=g_glfa_m.glfa001
                 AND glfb003=g_glfb2_d[l_ac2].glfb003 AND glfbseq1 IN ('C','D')
                 AND glfbseq<>g_glfb2_d[l_ac2].glfbseq
               IF l_cnt>0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'agl-00247'
                  LET g_errparam.extend = g_glfb2_d[l_ac2].glfb003
                  LET g_errparam.popup = FALSE
                  CALL cl_err()

#                  LET g_glfb2_d[l_ac2].glfb003=g_glfb2_d_t.glfb003
#                  NEXT FIELD glfb003_2
               END IF
               IF l_ac2>1 THEN
                  LET l_n=l_ac2-1
                  LET l_count=g_glfb2_d[l_n].glfb003+1
                  IF g_glfb2_d[l_ac2].glfb003<>l_count THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'agl-00248'
                     LET g_errparam.extend = g_glfb2_d[l_ac2].glfb003
                     LET g_errparam.popup = FALSE
                     CALL cl_err()

                  END IF
               END IF
            END IF
            
         #----<<amt3>>----
         #此段落由子樣板a01產生
         BEFORE FIELD amt3
            #add-point:BEFORE FIELD amt3
            LET g_glfb2_d[l_ac2].glfbseq1='C'
            CALL agli070_get_glfb004_glfb005(g_glfb2_d[l_ac2].glfbseq,g_glfb2_d[l_ac2].glfbseq1)
            CALL cl_set_comp_visible("grid",TRUE)
            LET l_desc=""
            IF NOT cl_null(g_glfb005_c) THEN
               CALL agli070_glfb005_desc(g_glfb004_c,g_glfb005_c) RETURNING l_desc
            END IF
            DISPLAY l_desc TO desc
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD amt3
            
            #add-point:AFTER FIELD amt3
            IF l_cmd = 'u' THEN
               CALL agli070_update_glfb('2') RETURNING l_success
               IF l_success=FALSE THEN
                  NEXT FIELD amt3
               END IF
            END IF
            
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE amt3
            #add-point:ON CHANGE amt3

            #END add-point
 
         #----<<amt4>>----
         #此段落由子樣板a01產生
         BEFORE FIELD amt4
            #add-point:BEFORE FIELD amt4
            LET g_glfb2_d[l_ac2].glfbseq1='D'
            CALL agli070_get_glfb004_glfb005(g_glfb2_d[l_ac2].glfbseq,g_glfb2_d[l_ac2].glfbseq1)
            CALL cl_set_comp_visible("grid",TRUE)
            LET l_desc=""
            IF NOT cl_null(g_glfb005_d) THEN
               CALL agli070_glfb005_desc(g_glfb004_d,g_glfb005_d) RETURNING l_desc
            END IF
            DISPLAY l_desc TO desc
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD amt4
            
            #add-point:AFTER FIELD amt4
            IF l_cmd = 'u' THEN
               CALL agli070_update_glfb('2') RETURNING l_success
               IF l_success=FALSE THEN
                  NEXT FIELD amt4
               END IF
            END IF
             
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE amt4
            #add-point:ON CHANGE amt4
         
            #END add-point
 
         BEFORE FIELD glfbl004
            DISPLAY BY NAME g_glfb_d[l_ac2].glfbl004
            
         #---------------------<  Detail: page2  >---------------------
         #----<<amt3>>----
         #Ctrlp:input.c.page2.amt3
         ON ACTION controlp INFIELD amt3
            #add-point:ON ACTION controlp INFIELD amt3
            CALL agli070_01(g_glfa_m.glfa001,g_glfb2_d[l_ac2].glfbseq,'C')
            RETURNING g_glfb004_c,g_glfb005_c,g_glfb2_d[l_ac2].amt3
            DISPLAY BY NAME g_glfb2_d[l_ac2].amt3
            CALL agli070_glfb005_desc(g_glfb004_c,g_glfb005_c) RETURNING l_desc
            DISPLAY l_desc TO desc
            #END add-point
 
         #----<<amt4>>----
         #Ctrlp:input.c.page2.amt4
         ON ACTION controlp INFIELD amt4
            #add-point:ON ACTION controlp INFIELD amt4
            CALL agli070_01(g_glfa_m.glfa001,g_glfb2_d[l_ac2].glfbseq,'D')
            RETURNING g_glfb004_d,g_glfb005_d,g_glfb2_d[l_ac2].amt4
            DISPLAY BY NAME g_glfb2_d[l_ac2].amt4
            CALL agli070_glfb005_desc(g_glfb004_d,g_glfb005_d) RETURNING l_desc
            DISPLAY l_desc TO desc
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row

            #end add-point
            LET l_ac2 = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_glfb2_d[l_ac2].* = g_glfb2_d_t.*
               END IF
               CLOSE agli070_2_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL agli070_unlock_b("glfb_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2

            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 

            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_glfb2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac2
            LET li_reproduce_target = g_glfb2_d.getLength()+1
 
      END INPUT]]>
  </point>
  <point name="input.other_sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_forupd_sql = "SELECT glfbseq,'',glfb002,'',glfb003,'','' FROM glfb_t  
       WHERE glfbent=? AND glfb001=? AND glfbseq=? AND glfbseq1 IN ('C','D') FOR UPDATE"
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE agli070_2_bcl CURSOR FROM g_forupd_sql]]>
  </point>
  <point name="insert.default" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL cl_set_comp_visible("glfa006,glfa007",TRUE)
      CALL cl_set_comp_visible("grid_4",FALSE)
      CALL agli070_comp_set()]]>
  </point>
  <point name="insert.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
   CALL g_glfb2_d.clear() ]]>
  </point>
  <point name="lock_b.define" order="" ver="8" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_flag      LIKE type_t.num5
   
   LET l_flag=TRUE
   
   IF l_flag=TRUE THEN
      LET ls_group = "glfb_t"
      IF ls_group.getIndexOf(ps_table,1) THEN
         IF ps_page="'1'" THEN
            OPEN agli070_bcl USING g_enterprise,g_glfa_m.glfa001,g_glfb_d[g_detail_idx].glfbseq
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "agli070_bcl"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               RETURN FALSE
            END IF
         ELSE
            OPEN agli070_2_bcl USING g_enterprise,g_glfa_m.glfa001,g_glfb2_d[g_detail_idx2].glfbseq
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "agli070_2_bcl"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               RETURN FALSE
            END IF
         END IF
      END IF
      RETURN TRUE
   END IF]]>
  </point>
  <point name="menu.btn_test" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               LET g_test = TRUE
               CALL agli070_b_fill()
               LET g_test = FALSE ]]>
  </point>
  <point name="menu.exporttoexcel" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  LET g_export_node[2] = base.typeInfo.create(g_glfb2_d)
                  LET g_export_id[2]   = "s_detail2"]]>
  </point>
  <point name="menu.modify" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF g_bfill = "N" THEN
                  LET g_bfill = "Y"
               END IF]]>
  </point>
  <point name="menu.modify_detail" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF g_bfill = "N" THEN
                  LET g_bfill = "Y"
               END IF]]>
  </point>
  <point name="modify.after_input" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      IF INT_FLAG THEN     
         LET g_bfill = "N"
      END IF]]>
  </point>
  <point name="query.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL g_glfb2_d.clear()   ]]>
  </point>
  <point name="show.before" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_err_collect_init()]]>
  </point>
  <point name="show.body.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="show.body2.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="show.define" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_format        STRING
   DEFINE l_str           STRING
   DEFINE l_i             LIKE type_t.num5]]>
  </point>
  <point name="show.follow_pic" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_action_choice="modify" OR g_action_choice="modify_detail" THEN
      CALL cl_err_collect_init()
   END IF
   CALL cl_err_collect_show()
   
   #設置單身金額欄位格式
   LET l_format = "---,---,---,--&"
   LET l_str = ""
   FOR l_i=1 TO g_glfa_m.glfa009
       LET l_str = l_str,"&"
   END FOR
   IF NOT cl_null(l_str) THEN
      LET l_format = l_format,'.',l_str
   END IF
   CALL cl_set_comp_format("amt1,amt2,amt3,amt4",l_format)
   ]]>
  </point>
  <point name="show.head.reference" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_glfa_m.glfa001
   CALL ap_ref_array2(g_ref_fields," SELECT glfal003 FROM glfal_t WHERE glfalent = '"
       ||g_enterprise||"' AND glfal001 = ? AND glfal002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_glfa_m.glfal003 = g_rtn_fields[1]]]>
  </point>
  <point name="ui_dialog.more_displayarray" order="" ver="8" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[         DISPLAY ARRAY g_glfb2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL agli070_idx_chk()
               LET l_ac2 = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx2 = l_ac2
               
               #add-point:page2, before row動作

               #end add-point
               
            BEFORE DISPLAY
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx2)
               END IF
               LET g_loc = 'm'
               LET l_ac2 = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               CALL agli070_idx_chk()
               #add-point:page2自定義行為

               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為

            #end add-point
         
         END DISPLAY]]>
  </point>
  <point name="unlock_b.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET ls_group = "'2',"
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE agli070_2_bcl
   END IF]]>
  </point>
  <point name="update_b.before_update" order="" ver="8" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[      IF l_flag=TRUE THEN
         IF ps_keys[3] = 'A' OR ps_keys[3] = 'B' THEN
            UPDATE glfb_t 
            SET (glfb001,glfbseq,
                 glfb002,glfb003) 
                 = 
                (ps_keys[1],ps_keys[2],
                 g_glfb_d[g_detail_idx].glfb002,g_glfb_d[g_detail_idx].glfb003 
                ) 
            WHERE glfbent = g_enterprise AND glfb001 = ps_keys_bak[1] 
              AND glfbseq = ps_keys_bak[2] 
              AND glfbseq1 IN ('A','B')
         ELSE
            UPDATE glfb_t 
            SET (glfb001,glfbseq,
                 glfb002,glfb003) 
                 = 
                (ps_keys[1],ps_keys[2],
                 g_glfb_d[g_detail_idx2].glfb002,g_glfb_d[g_detail_idx2].glfb003 
                ) 
            WHERE glfbent = g_enterprise AND glfb001 = ps_keys_bak[1] 
              AND glfbseq = ps_keys_bak[2] 
              AND glfbseq1 IN ('C','D')
         END IF
      ELSE]]>
  </point>
  <point name="update_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_flag           LIKE type_t.num5 ]]>
  </point>
  <point name="update_b.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      END IF]]>
  </point>
  <section id="agli070.action_chk" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION agli070_action_chk()
   #add-point:action_chk段define
   {<point name="action_chk.define" edit="s"/>}
   #end add-point
   #add-point:action_chk段define(客製用)
   {<point name="action_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:action_chk段action_chk
   {<point name="action_chk.action_chk"/>}
   #end add-point
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="agli070.b_fill" ver="21" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION agli070_b_fill()
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define
   {<point name="b_fill.define" edit="s"/>}
   #end add-point     
   #add-point:b_fill段define(客製用)
   {<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point     
 
   CALL g_glfb_d.clear()    #g_glfb_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF agli070_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE glfbseq,glfbseq1,glfb002,glfb003  FROM glfb_t",   
                     " INNER JOIN glfa_t ON glfa001 = glfb001 ",
 
                     #" LEFT JOIN glfbl_t ON glfblent = '"||g_enterprise||"' AND glfa001 = glfbl001 AND glfbseq = glfblseq AND glfb002 = glfbl002 AND glfbl003 = '",g_dlang,"'",
                     
                     " LEFT JOIN glfbl_t ON glfblent = '"||g_enterprise||"' AND glfa001 = glfbl001 AND glfbseq = glfblseq AND glfb002 = glfbl002 AND glfbl003 = '",g_dlang,"'",
                     
                     " WHERE glfbent=? AND glfb001=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY glfb_t.glfbseq,glfb_t.glfbseq1"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE agli070_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR agli070_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_glfa_m.glfa001
                                               
      FOREACH b_fill_cs INTO g_glfb_d[l_ac].glfbseq,g_glfb_d[l_ac].glfbseq1,g_glfb_d[l_ac].glfb002,g_glfb_d[l_ac].glfb003 

         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_glfb_d.deleteElement(g_glfb_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE agli070_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_glfb_d.getLength()
      LET g_glfb_d_mask_o[l_ac].* =  g_glfb_d[l_ac].*
      CALL agli070_glfb_t_mask()
      LET g_glfb_d_mask_n[l_ac].* =  g_glfb_d[l_ac].*
   END FOR
   
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
]]>
  </section>
  <section id="agli070.b_fill2" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION agli070_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define" edit="s"/>}
   #end add-point
   #add-point:b_fill2段define(客製用)
   {<point name="b_fill2.define_customerization" edit="c"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL agli070_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="agli070.browser_fill" ver="21" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION agli070_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define" edit="s"/>}
   #end add-point   
   #add-point:browser_fill段define(客製用)
   {<point name="browser_fill.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE glfa001 ",
                      " FROM glfa_t ",
                      " ",
                      " LEFT JOIN glfb_t ON glfbent = glfaent AND glfa001 = glfb001 ", "  ",
                      #add-point:browser_fill段sql(glfb_t1)
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
 
 
                      " LEFT JOIN glfal_t ON glfalent = '"||g_enterprise||"' AND glfa001 = glfal001 AND glfal002 = '",g_dlang,"' ", 
                      " LEFT JOIN glfbl_t ON glfblent = '"||g_enterprise||"' AND glfa001 = glfbl001 AND glfbseq = glfblseq AND glfb002 = glfbl002 AND glfbl003 = '",g_dlang,"' ", 
                      " WHERE glfaent = '" ||g_enterprise|| "' AND glfbent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("glfa_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE glfa001 ",
                      " FROM glfa_t ", 
                      "  ",
                      "  LEFT JOIN glfal_t ON glfalent = '"||g_enterprise||"' AND glfa001 = glfal001 AND glfal002 = '",g_dlang,"' ",
                      " WHERE glfaent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("glfa_t")
   END IF
   
   #add-point:browser_fill,cnt wc
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_glfa_m.* TO NULL
      CALL g_glfb_d.clear()        
 
      #add-point:browser_fill g_add_browse段額外處理
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.glfa001 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   LET g_sql = " SELECT DISTINCT '',t0.glfa001 ",
               " FROM glfa_t t0",
               "  ",
               "  LEFT JOIN glfb_t ON glfbent = glfaent AND glfa001 = glfb001 ", "  ", 
               #add-point:browser_fill段sql(glfb_t1)
               {<point name="browser_fill.join.glfb_t1"/>}
               #end add-point
 
 
               "  LEFT JOIN glfbl_t ON glfblent = '"||g_enterprise||"' AND glfa001 = glfbl001 AND glfbseq = glfblseq AND glfb002 = glfbl002 AND glfbl003 = '",g_dlang,"' ",
               
               " LEFT JOIN glfal_t ON glfalent = '"||g_enterprise||"' AND glfa001 = glfal001 AND glfal002 = '",g_dlang,"' ",
               " WHERE t0.glfaent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("glfa_t")
   #add-point:browser_fill,sql wc
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY glfa001 ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"glfa_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill段open cursor
   {<point name="browser_fill.open"/>}
   #end add-point
   
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_glfa001
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
  
      
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_browse THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_glfa001) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION
]]>
  </section>
  <section id="agli070.construct" ver="22" status="" src="s" readonly="">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION agli070_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define
   {<point name="cs.define" edit="s"/>}
   #end add-point    
   #add-point:cs段define(客製用)
   {<point name="cs.define_customerization" edit="c"/>}
   #end add-point    
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_glfa_m.* TO NULL
   CALL g_glfb_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON glfa001,glfal003,glfa004,glfa002,glfa003,glfa005,glfa006,glfa007,glfa010, 
          glfa013,glfa011,glfa012,glfa014,glfa015,glfa009,glfa008,glfaownid,glfacrtid,glfacrtdt,glfaowndp, 
          glfacrtdp,glfamodid,glfamoddt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<glfacrtdt>>----
         AFTER FIELD glfacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<glfamoddt>>----
         AFTER FIELD glfamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<glfacnfdt>>----
         
         #----<<glfapstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.glfa001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfa001
            #add-point:ON ACTION controlp INFIELD glfa001
            {<point name="construct.c.glfa001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfa001
            #add-point:BEFORE FIELD glfa001
            {<point name="construct.b.glfa001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfa001
            
            #add-point:AFTER FIELD glfa001
            {<point name="construct.a.glfa001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfal003
            #add-point:BEFORE FIELD glfal003
            {<point name="construct.b.glfal003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfal003
            
            #add-point:AFTER FIELD glfal003
            {<point name="construct.a.glfal003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.glfal003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfal003
            #add-point:ON ACTION controlp INFIELD glfal003
            {<point name="construct.c.glfal003" />}
            #END add-point
 
         #Ctrlp:construct.c.glfa004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfa004
            #add-point:ON ACTION controlp INFIELD glfa004
            {<point name="construct.c.glfa004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfa004
            #add-point:BEFORE FIELD glfa004
            {<point name="construct.b.glfa004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfa004
            
            #add-point:AFTER FIELD glfa004
            {<point name="construct.a.glfa004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfa002
            #add-point:BEFORE FIELD glfa002
            {<point name="construct.b.glfa002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfa002
            
            #add-point:AFTER FIELD glfa002
            {<point name="construct.a.glfa002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.glfa002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfa002
            #add-point:ON ACTION controlp INFIELD glfa002
            {<point name="construct.c.glfa002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfa003
            #add-point:BEFORE FIELD glfa003
            {<point name="construct.b.glfa003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfa003
            
            #add-point:AFTER FIELD glfa003
            {<point name="construct.a.glfa003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.glfa003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfa003
            #add-point:ON ACTION controlp INFIELD glfa003
            {<point name="construct.c.glfa003" />}
            #END add-point
 
         #Ctrlp:construct.c.glfa005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfa005
            #add-point:ON ACTION controlp INFIELD glfa005
            {<point name="construct.c.glfa005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfa005
            #add-point:BEFORE FIELD glfa005
            {<point name="construct.b.glfa005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfa005
            
            #add-point:AFTER FIELD glfa005
            {<point name="construct.a.glfa005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfa006
            #add-point:BEFORE FIELD glfa006
            {<point name="construct.b.glfa006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfa006
            
            #add-point:AFTER FIELD glfa006
            {<point name="construct.a.glfa006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.glfa006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfa006
            #add-point:ON ACTION controlp INFIELD glfa006
            {<point name="construct.c.glfa006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfa007
            #add-point:BEFORE FIELD glfa007
            {<point name="construct.b.glfa007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfa007
            
            #add-point:AFTER FIELD glfa007
            {<point name="construct.a.glfa007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.glfa007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfa007
            #add-point:ON ACTION controlp INFIELD glfa007
            {<point name="construct.c.glfa007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfa010
            #add-point:BEFORE FIELD glfa010
            {<point name="construct.b.glfa010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfa010
            
            #add-point:AFTER FIELD glfa010
            {<point name="construct.a.glfa010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.glfa010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfa010
            #add-point:ON ACTION controlp INFIELD glfa010
            {<point name="construct.c.glfa010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfa013
            #add-point:BEFORE FIELD glfa013
            {<point name="construct.b.glfa013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfa013
            
            #add-point:AFTER FIELD glfa013
            {<point name="construct.a.glfa013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.glfa013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfa013
            #add-point:ON ACTION controlp INFIELD glfa013
            {<point name="construct.c.glfa013" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfa011
            #add-point:BEFORE FIELD glfa011
            {<point name="construct.b.glfa011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfa011
            
            #add-point:AFTER FIELD glfa011
            {<point name="construct.a.glfa011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.glfa011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfa011
            #add-point:ON ACTION controlp INFIELD glfa011
            {<point name="construct.c.glfa011" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfa012
            #add-point:BEFORE FIELD glfa012
            {<point name="construct.b.glfa012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfa012
            
            #add-point:AFTER FIELD glfa012
            {<point name="construct.a.glfa012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.glfa012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfa012
            #add-point:ON ACTION controlp INFIELD glfa012
            {<point name="construct.c.glfa012" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfa014
            #add-point:BEFORE FIELD glfa014
            {<point name="construct.b.glfa014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfa014
            
            #add-point:AFTER FIELD glfa014
            {<point name="construct.a.glfa014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.glfa014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfa014
            #add-point:ON ACTION controlp INFIELD glfa014
            {<point name="construct.c.glfa014" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfa015
            #add-point:BEFORE FIELD glfa015
            {<point name="construct.b.glfa015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfa015
            
            #add-point:AFTER FIELD glfa015
            {<point name="construct.a.glfa015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.glfa015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfa015
            #add-point:ON ACTION controlp INFIELD glfa015
            {<point name="construct.c.glfa015" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfa009
            #add-point:BEFORE FIELD glfa009
            {<point name="construct.b.glfa009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfa009
            
            #add-point:AFTER FIELD glfa009
            {<point name="construct.a.glfa009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.glfa009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfa009
            #add-point:ON ACTION controlp INFIELD glfa009
            {<point name="construct.c.glfa009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfa008
            #add-point:BEFORE FIELD glfa008
            {<point name="construct.b.glfa008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfa008
            
            #add-point:AFTER FIELD glfa008
            {<point name="construct.a.glfa008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.glfa008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfa008
            #add-point:ON ACTION controlp INFIELD glfa008
            {<point name="construct.c.glfa008" />}
            #END add-point
 
         #Ctrlp:construct.c.glfaownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfaownid
            #add-point:ON ACTION controlp INFIELD glfaownid
            {<point name="construct.c.glfaownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfaownid
            #add-point:BEFORE FIELD glfaownid
            {<point name="construct.b.glfaownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfaownid
            
            #add-point:AFTER FIELD glfaownid
            {<point name="construct.a.glfaownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.glfacrtid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfacrtid
            #add-point:ON ACTION controlp INFIELD glfacrtid
            {<point name="construct.c.glfacrtid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfacrtid
            #add-point:BEFORE FIELD glfacrtid
            {<point name="construct.b.glfacrtid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfacrtid
            
            #add-point:AFTER FIELD glfacrtid
            {<point name="construct.a.glfacrtid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfacrtdt
            #add-point:BEFORE FIELD glfacrtdt
            {<point name="construct.b.glfacrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.glfaowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfaowndp
            #add-point:ON ACTION controlp INFIELD glfaowndp
            {<point name="construct.c.glfaowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfaowndp
            #add-point:BEFORE FIELD glfaowndp
            {<point name="construct.b.glfaowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfaowndp
            
            #add-point:AFTER FIELD glfaowndp
            {<point name="construct.a.glfaowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.glfacrtdp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfacrtdp
            #add-point:ON ACTION controlp INFIELD glfacrtdp
            {<point name="construct.c.glfacrtdp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfacrtdp
            #add-point:BEFORE FIELD glfacrtdp
            {<point name="construct.b.glfacrtdp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfacrtdp
            
            #add-point:AFTER FIELD glfacrtdp
            {<point name="construct.a.glfacrtdp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.glfamodid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfamodid
            #add-point:ON ACTION controlp INFIELD glfamodid
            {<point name="construct.c.glfamodid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfamodid
            #add-point:BEFORE FIELD glfamodid
            {<point name="construct.b.glfamodid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfamodid
            
            #add-point:AFTER FIELD glfamodid
            {<point name="construct.a.glfamodid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfamoddt
            #add-point:BEFORE FIELD glfamoddt
            {<point name="construct.b.glfamoddt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON glfbseq,glfbseq1,glfb002,glfbl004,glfb003
           FROM s_detail1[1].glfbseq,s_detail1[1].glfbseq1,s_detail1[1].glfb002,s_detail1[1].glfbl004, 
               s_detail1[1].glfb003
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfbseq
            #add-point:BEFORE FIELD glfbseq
            {<point name="construct.b.page1.glfbseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfbseq
            
            #add-point:AFTER FIELD glfbseq
            {<point name="construct.a.page1.glfbseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.glfbseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfbseq
            #add-point:ON ACTION controlp INFIELD glfbseq
            {<point name="construct.c.page1.glfbseq" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfbseq1
            #add-point:BEFORE FIELD glfbseq1
            {<point name="construct.b.page1.glfbseq1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfbseq1
            
            #add-point:AFTER FIELD glfbseq1
            {<point name="construct.a.page1.glfbseq1" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.glfbseq1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfbseq1
            #add-point:ON ACTION controlp INFIELD glfbseq1
            {<point name="construct.c.page1.glfbseq1" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfb002
            #add-point:BEFORE FIELD glfb002
            {<point name="construct.b.page1.glfb002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfb002
            
            #add-point:AFTER FIELD glfb002
            {<point name="construct.a.page1.glfb002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.glfb002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfb002
            #add-point:ON ACTION controlp INFIELD glfb002
            {<point name="construct.c.page1.glfb002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfbl004
            #add-point:BEFORE FIELD glfbl004
            {<point name="construct.b.page1.glfbl004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfbl004
            
            #add-point:AFTER FIELD glfbl004
            {<point name="construct.a.page1.glfbl004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.glfbl004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfbl004
            #add-point:ON ACTION controlp INFIELD glfbl004
            {<point name="construct.c.page1.glfbl004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfb003
            #add-point:BEFORE FIELD glfb003
            {<point name="construct.b.page1.glfb003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfb003
            
            #add-point:AFTER FIELD glfb003
            {<point name="construct.a.page1.glfb003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.glfb003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfb003
            #add-point:ON ACTION controlp INFIELD glfb003
            {<point name="construct.c.page1.glfb003" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "glfa_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "glfb_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="agli070.default_search" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION agli070_default_search()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point  
   #add-point:default_search段define(客製用)
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " glfa001 = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "glfa_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "glfb_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
]]>
  </section>
  <section id="agli070.delete" ver="26" status="" src="s" readonly="">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION agli070_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define" edit="s"/>}
   #end add-point     
   #add-point:delete段define(客製用)
   {<point name="delete.define_customerization" edit="c"/>}
   #end add-point     
   
   IF g_glfa_m.glfa001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   LET g_master_multi_table_t.glfal001 = g_glfa_m.glfa001
LET g_master_multi_table_t.glfal003 = g_glfa_m.glfal003
 
   
   CALL s_transaction_begin()
 
   OPEN agli070_cl USING g_enterprise,g_glfa_m.glfa001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN agli070_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE agli070_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE agli070_master_referesh USING g_glfa_m.glfa001 INTO g_glfa_m.glfa001,g_glfa_m.glfa004,g_glfa_m.glfa002, 
       g_glfa_m.glfa003,g_glfa_m.glfa005,g_glfa_m.glfa006,g_glfa_m.glfa007,g_glfa_m.glfa010,g_glfa_m.glfa013, 
       g_glfa_m.glfa011,g_glfa_m.glfa012,g_glfa_m.glfa014,g_glfa_m.glfa015,g_glfa_m.glfa009,g_glfa_m.glfa008, 
       g_glfa_m.glfaownid,g_glfa_m.glfacrtid,g_glfa_m.glfacrtdt,g_glfa_m.glfaowndp,g_glfa_m.glfacrtdp, 
       g_glfa_m.glfamodid,g_glfa_m.glfamoddt,g_glfa_m.glfa004_desc,g_glfa_m.glfa005_desc,g_glfa_m.glfaownid_desc, 
       g_glfa_m.glfacrtid_desc,g_glfa_m.glfaowndp_desc,g_glfa_m.glfacrtdp_desc,g_glfa_m.glfamodid_desc 

   
   #檢查是否允許此動作
   IF NOT agli070_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_glfa_m_mask_o.* =  g_glfa_m.*
   CALL agli070_glfa_t_mask()
   LET g_glfa_m_mask_n.* =  g_glfa_m.*
   
   CALL agli070_show()
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL agli070_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
  
  
      #資料備份
      LET g_glfa001_t = g_glfa_m.glfa001
 
 
      DELETE FROM glfa_t
       WHERE glfaent = g_enterprise AND glfa001 = g_glfa_m.glfa001
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_glfa_m.glfa001 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM glfb_t
       WHERE glfbent = g_enterprise AND glfb001 = g_glfa_m.glfa001
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "glfb_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE agli070_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_glfb_d.clear() 
 
     
      CALL agli070_ui_browser_refresh()  
      #CALL agli070_ui_headershow()  
      #CALL agli070_ui_detailshow()
      
      IF g_browser_cnt > 0 THEN 
         #CALL agli070_browser_fill("")
         CALL agli070_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
 
      #add-point:多語言刪除
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_enterprise
   LET l_field_keys[01] = 'glfalent'
   LET l_var_keys_bak[02] = g_master_multi_table_t.glfal001
   LET l_field_keys[02] = 'glfal001'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'glfal_t')
 
      
      #單身多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
         INITIALIZE l_field_keys TO NULL 
         LET l_field_keys[01] = 'glfblent'
         LET l_var_keys_bak[01] = g_enterprise
         LET l_field_keys[02] = 'glfbl001'
         LET l_var_keys_bak[02] = g_detail_multi_table_t.glfbl001
         CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'glfbl_t')
 
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   CLOSE agli070_cl
 
   #功能已完成,通報訊息中心
   CALL agli070_msgcentre_notify('delete')
    
END FUNCTION
]]>
  </section>
  <section id="agli070.delete_b" ver="9" status="" src="s" readonly="">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION agli070_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define(客製用)
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point     
 
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM glfb_t
       WHERE glfbent = g_enterprise AND
         glfb001 = ps_keys_bak[1] AND glfbseq = ps_keys_bak[2] AND glfbseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_glfb_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="agli070.description" ver="147" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:8,PR版次:8) Build-000295
#+ 
#+ Filename...: agli070
#+ Description: 財務報表結構設置作業
#+ Creator....: 02599(2014-05-13 18:29:25)
#+ Modifier...: 02599(2015-02-12 11:13:55) -SD/PR-
]]>
  </section>
  <section id="agli070.detail_reproduce" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION agli070_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE glfb_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define" edit="s"/>}
   #end add-point    
   #add-point:delete段define(客製用)
   {<point name="detail_reproduce.define_customerization" edit="c"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE agli070_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE agli070_detail AS ",
                "SELECT * FROM glfb_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO agli070_detail SELECT * FROM glfb_t 
                                         WHERE glfbent = g_enterprise AND glfb001 = g_glfa001_t
 
   
   #將key修正為調整後   
   UPDATE agli070_detail 
      #更新key欄位
      SET glfb001 = g_glfa_m.glfa001
 
      #更新共用欄位
      
 
   #add-point:單身修改前
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO glfb_t SELECT * FROM agli070_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE agli070_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
      #應用 a38 樣板自動產生(Version:2)
   #單身多語言複製
   DROP TABLE agli070_detail_lang
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.lang0.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE agli070_detail_lang AS ",
                "SELECT * FROM glfbl_t "
   PREPARE repro_glfbl_t FROM ls_sql
   EXECUTE repro_glfbl_t
   FREE repro_glfbl_t
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO agli070_detail_lang SELECT * FROM glfbl_t 
                                             WHERE glfblent = g_enterprise AND glfbl001 = g_glfa001_t
 
   #將key修正為調整後   
   UPDATE agli070_detail_lang 
      #更新key欄位
      SET glfbl001 = g_glfa_m.glfa001
 
  
   #將資料塞回原table   
   INSERT INTO glfbl_t SELECT * FROM agli070_detail_lang
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.lang0.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE agli070_detail_lang
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.lang0.table1.a_insert"/>}
   #end add-point
 
 
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_glfa001_t = g_glfa_m.glfa001
 
   
END FUNCTION
]]>
  </section>
  <section id="agli070.detail_show" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION agli070_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define" edit="s"/>}
   #end add-point  
   #add-point:detail_show段define(客製用)
   {<point name="detail_show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="agli070.fetch" ver="21" status="" src="s" readonly="">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION agli070_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define" edit="s"/>}
   #end add-point    
   #add-point:fetch段define(客製用)
   {<point name="fetch.define_customerization" edit="c"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_pagestart = g_current_idx
   DISPLAY g_pagestart TO FORMONLY.b_index   #當下筆數
   DISPLAY g_pagestart TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_pagestart, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_glfa_m.glfa001 = g_browser[g_current_idx].b_glfa001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE agli070_master_referesh USING g_glfa_m.glfa001 INTO g_glfa_m.glfa001,g_glfa_m.glfa004,g_glfa_m.glfa002, 
       g_glfa_m.glfa003,g_glfa_m.glfa005,g_glfa_m.glfa006,g_glfa_m.glfa007,g_glfa_m.glfa010,g_glfa_m.glfa013, 
       g_glfa_m.glfa011,g_glfa_m.glfa012,g_glfa_m.glfa014,g_glfa_m.glfa015,g_glfa_m.glfa009,g_glfa_m.glfa008, 
       g_glfa_m.glfaownid,g_glfa_m.glfacrtid,g_glfa_m.glfacrtdt,g_glfa_m.glfaowndp,g_glfa_m.glfacrtdp, 
       g_glfa_m.glfamodid,g_glfa_m.glfamoddt,g_glfa_m.glfa004_desc,g_glfa_m.glfa005_desc,g_glfa_m.glfaownid_desc, 
       g_glfa_m.glfacrtid_desc,g_glfa_m.glfaowndp_desc,g_glfa_m.glfacrtdp_desc,g_glfa_m.glfamodid_desc 

   
   #遮罩相關處理
   LET g_glfa_m_mask_o.* =  g_glfa_m.*
   CALL agli070_glfa_t_mask()
   LET g_glfa_m_mask_n.* =  g_glfa_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL agli070_set_act_visible()   
   CALL agli070_set_act_no_visible()
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_glfa_m_t.* = g_glfa_m.*
   LET g_glfa_m_o.* = g_glfa_m.*
   
   LET g_data_owner = g_glfa_m.glfaownid      
   LET g_data_dept  = g_glfa_m.glfaowndp
   
   #重新顯示   
   CALL agli070_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="agli070.fill_chk" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION agli070_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define" edit="s"/>}
   #end add-point
   #add-point:fill_chk段define(客製用)
   {<point name="fill_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="agli070.global" ver="32" status="" src="s" readonly="">
    <![CDATA[#應用 t01 樣板自動產生(Version:39)
{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_glfa_m        RECORD
       glfa001 LIKE glfa_t.glfa001, 
   glfal003 LIKE glfal_t.glfal003, 
   glfa004 LIKE glfa_t.glfa004, 
   glfa004_desc LIKE type_t.chr80, 
   glfa002 LIKE glfa_t.glfa002, 
   glfa003 LIKE glfa_t.glfa003, 
   glfa005 LIKE glfa_t.glfa005, 
   glfa005_desc LIKE type_t.chr80, 
   glfa006 LIKE glfa_t.glfa006, 
   glfa007 LIKE glfa_t.glfa007, 
   glfa010 LIKE glfa_t.glfa010, 
   glfa013 LIKE glfa_t.glfa013, 
   glfa011 LIKE glfa_t.glfa011, 
   glfa012 LIKE glfa_t.glfa012, 
   glfa014 LIKE glfa_t.glfa014, 
   glfa015 LIKE glfa_t.glfa015, 
   glfa009 LIKE glfa_t.glfa009, 
   glfa008 LIKE glfa_t.glfa008, 
   glfaownid LIKE glfa_t.glfaownid, 
   glfaownid_desc LIKE type_t.chr80, 
   glfacrtid LIKE glfa_t.glfacrtid, 
   glfacrtid_desc LIKE type_t.chr80, 
   glfacrtdt LIKE glfa_t.glfacrtdt, 
   glfaowndp LIKE glfa_t.glfaowndp, 
   glfaowndp_desc LIKE type_t.chr80, 
   glfacrtdp LIKE glfa_t.glfacrtdp, 
   glfacrtdp_desc LIKE type_t.chr80, 
   glfamodid LIKE glfa_t.glfamodid, 
   glfamodid_desc LIKE type_t.chr80, 
   glfamoddt LIKE glfa_t.glfamoddt, 
   desc LIKE type_t.chr500
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_glfb_d        RECORD
       glfbseq LIKE glfb_t.glfbseq, 
   glfbseq1 LIKE glfb_t.glfbseq1, 
   glfb002 LIKE glfb_t.glfb002, 
   glfbl004 LIKE glfbl_t.glfbl004, 
   glfb003 LIKE glfb_t.glfb003, 
   amt1 LIKE type_t.num20_6, 
   amt2 LIKE type_t.num20_6
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_glfa001 LIKE glfa_t.glfa001
       END RECORD
       
#模組變數(Module Variables)
DEFINE g_glfa_m          type_g_glfa_m
DEFINE g_glfa_m_t        type_g_glfa_m
DEFINE g_glfa_m_o        type_g_glfa_m
DEFINE g_glfa_m_mask_o   type_g_glfa_m #轉換遮罩前資料
DEFINE g_glfa_m_mask_n   type_g_glfa_m #轉換遮罩後資料
 
   DEFINE g_glfa001_t LIKE glfa_t.glfa001
 
 
DEFINE g_glfb_d          DYNAMIC ARRAY OF type_g_glfb_d
DEFINE g_glfb_d_t        type_g_glfb_d
DEFINE g_glfb_d_o        type_g_glfb_d
DEFINE g_glfb_d_mask_o   DYNAMIC ARRAY OF type_g_glfb_d #轉換遮罩前資料
DEFINE g_glfb_d_mask_n   DYNAMIC ARRAY OF type_g_glfb_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
DEFINE g_master_multi_table_t    RECORD
      glfal001 LIKE glfal_t.glfal001,
      glfal003 LIKE glfal_t.glfal003
      END RECORD
DEFINE g_detail_multi_table_t    RECORD
      glfbl001 LIKE glfbl_t.glfbl001,
      glfblseq LIKE glfbl_t.glfblseq,
      glfbl002 LIKE glfbl_t.glfbl002,
      glfbl003 LIKE glfbl_t.glfbl003,
      glfbl004 LIKE glfbl_t.glfbl004
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10              #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="agli070.idx_chk" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION agli070_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define" edit="s"/>}
   #end add-point  
   #add-point:idx_chk段define(客製用)
   {<point name="idx_chk.define_customerization" edit="c"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_glfb_d.getLength() THEN
         LET g_detail_idx = g_glfb_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_glfb_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_glfb_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="agli070.init" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION agli070_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point    
   #add-point:init段define(客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point    
 
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
   
      CALL cl_set_combo_scc('glfa002','9930') 
   CALL cl_set_combo_scc('glfa003','9931') 
   CALL cl_set_combo_scc('glfa008','8705') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL agli070_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="agli070.input" ver="21" status="" src="s" readonly="">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION agli070_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define
   {<point name="input.define" edit="s"/>}
   #end add-point  
   #add-point:input段define(客製用)
   {<point name="input.define_customerization" edit="c"/>}
   #end add-point  
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_glfa_m.glfa001,g_glfa_m.glfal003,g_glfa_m.glfa004,g_glfa_m.glfa004_desc,g_glfa_m.glfa002, 
       g_glfa_m.glfa003,g_glfa_m.glfa005,g_glfa_m.glfa005_desc,g_glfa_m.glfa006,g_glfa_m.glfa007,g_glfa_m.glfa010, 
       g_glfa_m.glfa013,g_glfa_m.glfa011,g_glfa_m.glfa012,g_glfa_m.glfa014,g_glfa_m.glfa015,g_glfa_m.glfa009, 
       g_glfa_m.glfa008,g_glfa_m.glfaownid,g_glfa_m.glfaownid_desc,g_glfa_m.glfacrtid,g_glfa_m.glfacrtid_desc, 
       g_glfa_m.glfacrtdt,g_glfa_m.glfaowndp,g_glfa_m.glfaowndp_desc,g_glfa_m.glfacrtdp,g_glfa_m.glfacrtdp_desc, 
       g_glfa_m.glfamodid,g_glfa_m.glfamodid_desc,g_glfa_m.glfamoddt,g_glfa_m.desc
   
   #切換畫面
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT glfbseq,glfbseq1,glfb002,glfb003 FROM glfb_t WHERE glfbent=? AND glfb001=?  
       AND glfbseq=? AND glfbseq1=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE agli070_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL agli070_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL agli070_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_glfa_m.glfa001,g_glfa_m.glfal003,g_glfa_m.glfa004,g_glfa_m.glfa002,g_glfa_m.glfa003, 
       g_glfa_m.glfa005,g_glfa_m.glfa006,g_glfa_m.glfa007,g_glfa_m.glfa010,g_glfa_m.glfa013,g_glfa_m.glfa011, 
       g_glfa_m.glfa012,g_glfa_m.glfa014,g_glfa_m.glfa015,g_glfa_m.glfa009,g_glfa_m.glfa008
   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="agli070.input.body" ver="28" status="" src="s" readonly="">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_glfb_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.detail_input.page1.update_item" />}
               #END add-point
            END IF
 
 
 
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_glfb_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL agli070_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_glfb_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN agli070_cl USING g_enterprise,g_glfa_m.glfa001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN agli070_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE agli070_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_glfb_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_glfb_d[l_ac].glfbseq IS NOT NULL
               AND g_glfb_d[l_ac].glfbseq1 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_glfb_d_t.* = g_glfb_d[l_ac].*  #BACKUP
               LET g_glfb_d_o.* = g_glfb_d[l_ac].*  #BACKUP
               CALL agli070_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL agli070_set_no_entry_b(l_cmd)
               IF NOT agli070_lock_b("glfb_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH agli070_bcl INTO g_glfb_d[l_ac].glfbseq,g_glfb_d[l_ac].glfbseq1,g_glfb_d[l_ac].glfb002, 
                      g_glfb_d[l_ac].glfb003
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_glfb_d_t.glfbseq 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_glfb_d_mask_o[l_ac].* =  g_glfb_d[l_ac].*
                  CALL agli070_glfb_t_mask()
                  LET g_glfb_d_mask_n[l_ac].* =  g_glfb_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL agli070_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            LET g_detail_multi_table_t.glfbl001 = g_glfa_m.glfa001
LET g_detail_multi_table_t.glfblseq = g_glfb_d[l_ac].glfbseq
LET g_detail_multi_table_t.glfbl002 = g_glfb_d[l_ac].glfb002
LET g_detail_multi_table_t.glfbl003 = g_dlang
LET g_detail_multi_table_t.glfbl004 = g_glfb_d[l_ac].glfbl004
 
            #其他table進行lock
                        INITIALIZE l_var_keys TO NULL 
            INITIALIZE l_field_keys TO NULL 
            LET l_field_keys[01] = 'glfblent'
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[02] = 'glfbl001'
            LET l_var_keys[02] = g_glfa_m.glfa001
            LET l_field_keys[03] = 'glfblseq'
            LET l_var_keys[03] = g_glfb_d[l_ac].glfbseq
            LET l_field_keys[04] = 'glfbl002'
            LET l_var_keys[04] = g_glfb_d[l_ac].glfb002
            LET l_field_keys[05] = 'glfbl003'
            LET l_var_keys[05] = g_dlang
            IF NOT cl_multitable_lock(l_var_keys,l_field_keys,'glfbl_t') THEN
               RETURN 
            END IF 
 
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_glfb_d[l_ac].* TO NULL 
            INITIALIZE g_glfb_d_t.* TO NULL 
            INITIALIZE g_glfb_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
            
            #add-point:modify段before備份
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_glfb_d_t.* = g_glfb_d[l_ac].*     #新輸入資料
            LET g_glfb_d_o.* = g_glfb_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL agli070_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL agli070_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_glfb_d[li_reproduce_target].* = g_glfb_d[li_reproduce].*
 
               LET g_glfb_d[li_reproduce_target].glfbseq = NULL
               LET g_glfb_d[li_reproduce_target].glfbseq1 = NULL
 
            END IF
            LET g_detail_multi_table_t.glfbl001 = g_glfa_m.glfa001
LET g_detail_multi_table_t.glfblseq = g_glfb_d[l_ac].glfbseq
LET g_detail_multi_table_t.glfbl002 = g_glfb_d[l_ac].glfb002
LET g_detail_multi_table_t.glfbl003 = g_dlang
LET g_detail_multi_table_t.glfbl004 = g_glfb_d[l_ac].glfbl004
 
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM glfb_t 
             WHERE glfbent = g_enterprise AND glfb001 = g_glfa_m.glfa001
 
               AND glfbseq = g_glfb_d[l_ac].glfbseq
               AND glfbseq1 = g_glfb_d[l_ac].glfbseq1
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_glfa_m.glfa001
               LET gs_keys[2] = g_glfb_d[g_detail_idx].glfbseq
               LET gs_keys[3] = g_glfb_d[g_detail_idx].glfbseq1
               CALL agli070_insert_b('glfb_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_glfb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "glfb_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL agli070_b_fill()
               #資料多語言用-增/改
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_glfa_m.glfa001 = g_detail_multi_table_t.glfbl001 AND
         g_glfb_d[l_ac].glfbseq = g_detail_multi_table_t.glfblseq AND
         g_glfb_d[l_ac].glfb002 = g_detail_multi_table_t.glfbl002 AND
         g_glfb_d[l_ac].glfbl004 = g_detail_multi_table_t.glfbl004 THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'glfblent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_glfa_m.glfa001
            LET l_field_keys[02] = 'glfbl001'
            LET l_var_keys_bak[02] = g_detail_multi_table_t.glfbl001
            LET l_var_keys[03] = g_glfb_d[l_ac].glfbseq
            LET l_field_keys[03] = 'glfblseq'
            LET l_var_keys_bak[03] = g_detail_multi_table_t.glfblseq
            LET l_var_keys[04] = g_glfb_d[l_ac].glfb002
            LET l_field_keys[04] = 'glfbl002'
            LET l_var_keys_bak[04] = g_detail_multi_table_t.glfbl002
            LET l_var_keys[05] = g_dlang
            LET l_field_keys[05] = 'glfbl003'
            LET l_var_keys_bak[05] = g_detail_multi_table_t.glfbl003
            LET l_vars[01] = g_glfb_d[l_ac].glfbl004
            LET l_fields[01] = 'glfbl004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'glfbl_t')
         END IF 
 
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d)
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_glfa_m.glfa001
 
               LET gs_keys[gs_keys.getLength()+1] = g_glfb_d_t.glfbseq
               LET gs_keys[gs_keys.getLength()+1] = g_glfb_d_t.glfbseq1
 
            
               #刪除同層單身
               IF NOT agli070_delete_b('glfb_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE agli070_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT agli070_key_delete_b(gs_keys,'glfb_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE agli070_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               INITIALIZE l_var_keys_bak TO NULL 
                  INITIALIZE l_field_keys TO NULL 
                  LET l_field_keys[01] = 'glfblent'
                  LET l_var_keys_bak[01] = g_enterprise
                  LET l_field_keys[02] = 'glfbl001'
                  LET l_var_keys_bak[02] = g_detail_multi_table_t.glfbl001
                  LET l_field_keys[03] = 'glfblseq'
                  LET l_var_keys_bak[03] = g_detail_multi_table_t.glfblseq
                  LET l_field_keys[04] = 'glfbl002'
                  LET l_var_keys_bak[04] = g_detail_multi_table_t.glfbl002
                  CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'glfbl_t')
 
               
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE agli070_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_glfb_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_glfb_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfbseq
            #add-point:BEFORE FIELD glfbseq
            {<point name="input.b.page1.glfbseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfbseq
            
            #add-point:AFTER FIELD glfbseq
            {<point name="input.a.page1.glfbseq" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE glfbseq
            #add-point:ON CHANGE glfbseq
            {<point name="input.g.page1.glfbseq" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfbseq1
            #add-point:BEFORE FIELD glfbseq1
            {<point name="input.b.page1.glfbseq1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfbseq1
            
            #add-point:AFTER FIELD glfbseq1
            {<point name="input.a.page1.glfbseq1" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE glfbseq1
            #add-point:ON CHANGE glfbseq1
            {<point name="input.g.page1.glfbseq1" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfb002
            #add-point:BEFORE FIELD glfb002
            {<point name="input.b.page1.glfb002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfb002
            
            #add-point:AFTER FIELD glfb002
            {<point name="input.a.page1.glfb002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE glfb002
            #add-point:ON CHANGE glfb002
            {<point name="input.g.page1.glfb002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfbl004
            #add-point:BEFORE FIELD glfbl004
            {<point name="input.b.page1.glfbl004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfbl004
            
            #add-point:AFTER FIELD glfbl004
            {<point name="input.a.page1.glfbl004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE glfbl004
            #add-point:ON CHANGE glfbl004
            {<point name="input.g.page1.glfbl004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfb003
            #add-point:BEFORE FIELD glfb003
            {<point name="input.b.page1.glfb003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfb003
            
            #add-point:AFTER FIELD glfb003
            {<point name="input.a.page1.glfb003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE glfb003
            #add-point:ON CHANGE glfb003
            {<point name="input.g.page1.glfb003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD amt1
            #add-point:BEFORE FIELD amt1
            {<point name="input.b.page1.amt1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD amt1
            
            #add-point:AFTER FIELD amt1
            {<point name="input.a.page1.amt1" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE amt1
            #add-point:ON CHANGE amt1
            {<point name="input.g.page1.amt1" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD amt2
            #add-point:BEFORE FIELD amt2
            {<point name="input.b.page1.amt2" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD amt2
            
            #add-point:AFTER FIELD amt2
            {<point name="input.a.page1.amt2" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE amt2
            #add-point:ON CHANGE amt2
            {<point name="input.g.page1.amt2" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.glfbseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfbseq
            #add-point:ON ACTION controlp INFIELD glfbseq
            {<point name="input.c.page1.glfbseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.glfbseq1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfbseq1
            #add-point:ON ACTION controlp INFIELD glfbseq1
            {<point name="input.c.page1.glfbseq1" />}
            #END add-point
 
         #Ctrlp:input.c.page1.glfb002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfb002
            #add-point:ON ACTION controlp INFIELD glfb002
            {<point name="input.c.page1.glfb002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.glfbl004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfbl004
            #add-point:ON ACTION controlp INFIELD glfbl004
            {<point name="input.c.page1.glfbl004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.glfb003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfb003
            #add-point:ON ACTION controlp INFIELD glfb003
            {<point name="input.c.page1.glfb003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.amt1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD amt1
            #add-point:ON ACTION controlp INFIELD amt1
            {<point name="input.c.page1.amt1" />}
            #END add-point
 
         #Ctrlp:input.c.page1.amt2
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD amt2
            #add-point:ON ACTION controlp INFIELD amt2
            {<point name="input.c.page1.amt2" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_glfb_d[l_ac].* = g_glfb_d_t.*
               CLOSE agli070_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_glfb_d[l_ac].glfbseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_glfb_d[l_ac].* = g_glfb_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL agli070_glfb_t_mask_restore('restore_mask_o')
      
               UPDATE glfb_t SET (glfb001,glfbseq,glfbseq1,glfb002,glfb003) = (g_glfa_m.glfa001,g_glfb_d[l_ac].glfbseq, 
                   g_glfb_d[l_ac].glfbseq1,g_glfb_d[l_ac].glfb002,g_glfb_d[l_ac].glfb003)
                WHERE glfbent = g_enterprise AND glfb001 = g_glfa_m.glfa001 
 
                  AND glfbseq = g_glfb_d_t.glfbseq #項次   
                  AND glfbseq1 = g_glfb_d_t.glfbseq1  
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "glfb_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_glfb_d[l_ac].* = g_glfb_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "glfb_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_glfb_d[l_ac].* = g_glfb_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_glfa_m.glfa001
               LET gs_keys_bak[1] = g_glfa001_t
               LET gs_keys[2] = g_glfb_d[g_detail_idx].glfbseq
               LET gs_keys_bak[2] = g_glfb_d_t.glfbseq
               LET gs_keys[3] = g_glfb_d[g_detail_idx].glfbseq1
               LET gs_keys_bak[3] = g_glfb_d_t.glfbseq1
               CALL agli070_update_b('glfb_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                              INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_glfa_m.glfa001 = g_detail_multi_table_t.glfbl001 AND
         g_glfb_d[l_ac].glfbseq = g_detail_multi_table_t.glfblseq AND
         g_glfb_d[l_ac].glfb002 = g_detail_multi_table_t.glfbl002 AND
         g_glfb_d[l_ac].glfbl004 = g_detail_multi_table_t.glfbl004 THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'glfblent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_glfa_m.glfa001
            LET l_field_keys[02] = 'glfbl001'
            LET l_var_keys_bak[02] = g_detail_multi_table_t.glfbl001
            LET l_var_keys[03] = g_glfb_d[l_ac].glfbseq
            LET l_field_keys[03] = 'glfblseq'
            LET l_var_keys_bak[03] = g_detail_multi_table_t.glfblseq
            LET l_var_keys[04] = g_glfb_d[l_ac].glfb002
            LET l_field_keys[04] = 'glfbl002'
            LET l_var_keys_bak[04] = g_detail_multi_table_t.glfbl002
            LET l_var_keys[05] = g_dlang
            LET l_field_keys[05] = 'glfbl003'
            LET l_var_keys_bak[05] = g_detail_multi_table_t.glfbl003
            LET l_vars[01] = g_glfb_d[l_ac].glfbl004
            LET l_fields[01] = 'glfbl004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'glfbl_t')
         END IF 
 
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL agli070_glfb_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_glfb_d[g_detail_idx].glfbseq = g_glfb_d_t.glfbseq 
                  AND g_glfb_d[g_detail_idx].glfbseq1 = g_glfb_d_t.glfbseq1 
 
                  ) THEN
                  LET gs_keys[01] = g_glfa_m.glfa001
 
                  LET gs_keys[gs_keys.getLength()+1] = g_glfb_d_t.glfbseq
                  LET gs_keys[gs_keys.getLength()+1] = g_glfb_d_t.glfbseq1
 
                  CALL agli070_key_update_b(gs_keys,'glfb_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_glfa_m),util.JSON.stringify(g_glfb_d_t)
               LET g_log2 = util.JSON.stringify(g_glfa_m),util.JSON.stringify(g_glfb_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL agli070_unlock_b("glfb_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_glfb_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_glfb_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
 
 
]]>
  </section>
  <section id="agli070.input.head" ver="29" status="" src="s" readonly="">
    <![CDATA[      #單頭段
      INPUT BY NAME g_glfa_m.glfa001,g_glfa_m.glfal003,g_glfa_m.glfa004,g_glfa_m.glfa002,g_glfa_m.glfa003, 
          g_glfa_m.glfa005,g_glfa_m.glfa006,g_glfa_m.glfa007,g_glfa_m.glfa010,g_glfa_m.glfa013,g_glfa_m.glfa011, 
          g_glfa_m.glfa012,g_glfa_m.glfa014,g_glfa_m.glfa015,g_glfa_m.glfa009,g_glfa_m.glfa008 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.master_input.update_item" />}
               #END add-point
            END IF
 
 
 
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN agli070_cl USING g_enterprise,g_glfa_m.glfa001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN agli070_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE agli070_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            LET g_master_multi_table_t.glfal001 = g_glfa_m.glfa001
LET g_master_multi_table_t.glfal003 = g_glfa_m.glfal003
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.glfal001 = ''
LET g_master_multi_table_t.glfal003 = ''
 
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL agli070_set_entry(p_cmd)
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL agli070_set_no_entry(p_cmd)
    
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfa001
            #add-point:BEFORE FIELD glfa001
            {<point name="input.b.glfa001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfa001
            
            #add-point:AFTER FIELD glfa001
            {<point name="input.a.glfa001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE glfa001
            #add-point:ON CHANGE glfa001
            {<point name="input.g.glfa001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfal003
            #add-point:BEFORE FIELD glfal003
            {<point name="input.b.glfal003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfal003
            
            #add-point:AFTER FIELD glfal003
            {<point name="input.a.glfal003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE glfal003
            #add-point:ON CHANGE glfal003
            {<point name="input.g.glfal003" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfa004
            
            #add-point:AFTER FIELD glfa004
            {<point name="input.a.glfa004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfa004
            #add-point:BEFORE FIELD glfa004
            {<point name="input.b.glfa004" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE glfa004
            #add-point:ON CHANGE glfa004
            {<point name="input.g.glfa004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfa002
            #add-point:BEFORE FIELD glfa002
            {<point name="input.b.glfa002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfa002
            
            #add-point:AFTER FIELD glfa002
            {<point name="input.a.glfa002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE glfa002
            #add-point:ON CHANGE glfa002
            {<point name="input.g.glfa002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfa003
            #add-point:BEFORE FIELD glfa003
            {<point name="input.b.glfa003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfa003
            
            #add-point:AFTER FIELD glfa003
            {<point name="input.a.glfa003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE glfa003
            #add-point:ON CHANGE glfa003
            {<point name="input.g.glfa003" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfa005
            
            #add-point:AFTER FIELD glfa005
            {<point name="input.a.glfa005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfa005
            #add-point:BEFORE FIELD glfa005
            {<point name="input.b.glfa005" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE glfa005
            #add-point:ON CHANGE glfa005
            {<point name="input.g.glfa005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfa006
            #add-point:BEFORE FIELD glfa006
            {<point name="input.b.glfa006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfa006
            
            #add-point:AFTER FIELD glfa006
            {<point name="input.a.glfa006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE glfa006
            #add-point:ON CHANGE glfa006
            {<point name="input.g.glfa006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfa007
            #add-point:BEFORE FIELD glfa007
            {<point name="input.b.glfa007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfa007
            
            #add-point:AFTER FIELD glfa007
            {<point name="input.a.glfa007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE glfa007
            #add-point:ON CHANGE glfa007
            {<point name="input.g.glfa007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfa010
            #add-point:BEFORE FIELD glfa010
            {<point name="input.b.glfa010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfa010
            
            #add-point:AFTER FIELD glfa010
            {<point name="input.a.glfa010" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE glfa010
            #add-point:ON CHANGE glfa010
            {<point name="input.g.glfa010" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfa013
            #add-point:BEFORE FIELD glfa013
            {<point name="input.b.glfa013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfa013
            
            #add-point:AFTER FIELD glfa013
            {<point name="input.a.glfa013" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE glfa013
            #add-point:ON CHANGE glfa013
            {<point name="input.g.glfa013" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfa011
            #add-point:BEFORE FIELD glfa011
            {<point name="input.b.glfa011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfa011
            
            #add-point:AFTER FIELD glfa011
            {<point name="input.a.glfa011" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE glfa011
            #add-point:ON CHANGE glfa011
            {<point name="input.g.glfa011" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfa012
            #add-point:BEFORE FIELD glfa012
            {<point name="input.b.glfa012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfa012
            
            #add-point:AFTER FIELD glfa012
            {<point name="input.a.glfa012" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE glfa012
            #add-point:ON CHANGE glfa012
            {<point name="input.g.glfa012" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfa014
            #add-point:BEFORE FIELD glfa014
            {<point name="input.b.glfa014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfa014
            
            #add-point:AFTER FIELD glfa014
            {<point name="input.a.glfa014" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE glfa014
            #add-point:ON CHANGE glfa014
            {<point name="input.g.glfa014" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfa015
            #add-point:BEFORE FIELD glfa015
            {<point name="input.b.glfa015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfa015
            
            #add-point:AFTER FIELD glfa015
            {<point name="input.a.glfa015" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE glfa015
            #add-point:ON CHANGE glfa015
            {<point name="input.g.glfa015" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfa009
            #add-point:BEFORE FIELD glfa009
            {<point name="input.b.glfa009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfa009
            
            #add-point:AFTER FIELD glfa009
            {<point name="input.a.glfa009" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE glfa009
            #add-point:ON CHANGE glfa009
            {<point name="input.g.glfa009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD glfa008
            #add-point:BEFORE FIELD glfa008
            {<point name="input.b.glfa008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD glfa008
            
            #add-point:AFTER FIELD glfa008
            {<point name="input.a.glfa008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE glfa008
            #add-point:ON CHANGE glfa008
            {<point name="input.g.glfa008" />}
            #END add-point 
 
 #欄位檢查
                  #Ctrlp:input.c.glfa001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfa001
            #add-point:ON ACTION controlp INFIELD glfa001
            {<point name="input.c.glfa001" />}
            #END add-point
 
         #Ctrlp:input.c.glfal003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfal003
            #add-point:ON ACTION controlp INFIELD glfal003
            {<point name="input.c.glfal003" />}
            #END add-point
 
         #Ctrlp:input.c.glfa004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfa004
            #add-point:ON ACTION controlp INFIELD glfa004
            {<point name="input.c.glfa004" />}
            #END add-point
 
         #Ctrlp:input.c.glfa002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfa002
            #add-point:ON ACTION controlp INFIELD glfa002
            {<point name="input.c.glfa002" />}
            #END add-point
 
         #Ctrlp:input.c.glfa003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfa003
            #add-point:ON ACTION controlp INFIELD glfa003
            {<point name="input.c.glfa003" />}
            #END add-point
 
         #Ctrlp:input.c.glfa005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfa005
            #add-point:ON ACTION controlp INFIELD glfa005
            {<point name="input.c.glfa005" />}
            #END add-point
 
         #Ctrlp:input.c.glfa006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfa006
            #add-point:ON ACTION controlp INFIELD glfa006
            {<point name="input.c.glfa006" />}
            #END add-point
 
         #Ctrlp:input.c.glfa007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfa007
            #add-point:ON ACTION controlp INFIELD glfa007
            {<point name="input.c.glfa007" />}
            #END add-point
 
         #Ctrlp:input.c.glfa010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfa010
            #add-point:ON ACTION controlp INFIELD glfa010
            {<point name="input.c.glfa010" />}
            #END add-point
 
         #Ctrlp:input.c.glfa013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfa013
            #add-point:ON ACTION controlp INFIELD glfa013
            {<point name="input.c.glfa013" />}
            #END add-point
 
         #Ctrlp:input.c.glfa011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfa011
            #add-point:ON ACTION controlp INFIELD glfa011
            {<point name="input.c.glfa011" />}
            #END add-point
 
         #Ctrlp:input.c.glfa012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfa012
            #add-point:ON ACTION controlp INFIELD glfa012
            {<point name="input.c.glfa012" />}
            #END add-point
 
         #Ctrlp:input.c.glfa014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfa014
            #add-point:ON ACTION controlp INFIELD glfa014
            {<point name="input.c.glfa014" />}
            #END add-point
 
         #Ctrlp:input.c.glfa015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfa015
            #add-point:ON ACTION controlp INFIELD glfa015
            {<point name="input.c.glfa015" />}
            #END add-point
 
         #Ctrlp:input.c.glfa009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfa009
            #add-point:ON ACTION controlp INFIELD glfa009
            {<point name="input.c.glfa009" />}
            #END add-point
 
         #Ctrlp:input.c.glfa008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD glfa008
            #add-point:ON ACTION controlp INFIELD glfa008
            {<point name="input.c.glfa008" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_glfa_m.glfa001
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO glfa_t (glfaent,glfa001,glfa004,glfa002,glfa003,glfa005,glfa006,glfa007,glfa010, 
                   glfa013,glfa011,glfa012,glfa014,glfa015,glfa009,glfa008,glfaownid,glfacrtid,glfacrtdt, 
                   glfaowndp,glfacrtdp,glfamodid,glfamoddt)
               VALUES (g_enterprise,g_glfa_m.glfa001,g_glfa_m.glfa004,g_glfa_m.glfa002,g_glfa_m.glfa003, 
                   g_glfa_m.glfa005,g_glfa_m.glfa006,g_glfa_m.glfa007,g_glfa_m.glfa010,g_glfa_m.glfa013, 
                   g_glfa_m.glfa011,g_glfa_m.glfa012,g_glfa_m.glfa014,g_glfa_m.glfa015,g_glfa_m.glfa009, 
                   g_glfa_m.glfa008,g_glfa_m.glfaownid,g_glfa_m.glfacrtid,g_glfa_m.glfacrtdt,g_glfa_m.glfaowndp, 
                   g_glfa_m.glfacrtdp,g_glfa_m.glfamodid,g_glfa_m.glfamoddt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_glfa_m" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_glfa_m.glfa001 = g_master_multi_table_t.glfal001 AND
         g_glfa_m.glfal003 = g_master_multi_table_t.glfal003  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'glfalent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_glfa_m.glfa001
            LET l_field_keys[02] = 'glfal001'
            LET l_var_keys_bak[02] = g_master_multi_table_t.glfal001
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'glfal002'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_glfa_m.glfal003
            LET l_fields[01] = 'glfal003'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'glfal_t')
         END IF 
 
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL agli070_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL agli070_b_fill()
                  CALL agli070_b_fill2('0')
               END IF
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL agli070_glfa_t_mask_restore('restore_mask_o')
               
               UPDATE glfa_t SET (glfa001,glfa004,glfa002,glfa003,glfa005,glfa006,glfa007,glfa010,glfa013, 
                   glfa011,glfa012,glfa014,glfa015,glfa009,glfa008,glfaownid,glfacrtid,glfacrtdt,glfaowndp, 
                   glfacrtdp,glfamodid,glfamoddt) = (g_glfa_m.glfa001,g_glfa_m.glfa004,g_glfa_m.glfa002, 
                   g_glfa_m.glfa003,g_glfa_m.glfa005,g_glfa_m.glfa006,g_glfa_m.glfa007,g_glfa_m.glfa010, 
                   g_glfa_m.glfa013,g_glfa_m.glfa011,g_glfa_m.glfa012,g_glfa_m.glfa014,g_glfa_m.glfa015, 
                   g_glfa_m.glfa009,g_glfa_m.glfa008,g_glfa_m.glfaownid,g_glfa_m.glfacrtid,g_glfa_m.glfacrtdt, 
                   g_glfa_m.glfaowndp,g_glfa_m.glfacrtdp,g_glfa_m.glfamodid,g_glfa_m.glfamoddt)
                WHERE glfaent = g_enterprise AND glfa001 = g_glfa001_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "glfa_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_glfa_m.glfa001 = g_master_multi_table_t.glfal001 AND
         g_glfa_m.glfal003 = g_master_multi_table_t.glfal003  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'glfalent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_glfa_m.glfa001
            LET l_field_keys[02] = 'glfal001'
            LET l_var_keys_bak[02] = g_master_multi_table_t.glfal001
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'glfal002'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_glfa_m.glfal003
            LET l_fields[01] = 'glfal003'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'glfal_t')
         END IF 
 
               
               #將遮罩欄位進行遮蔽
               CALL agli070_glfa_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_glfa_m_t)
               LET g_log2 = util.JSON.stringify(g_glfa_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_glfa001_t = g_glfa_m.glfa001
 
            
      END INPUT
   
]]>
  </section>
  <section id="agli070.input.other" ver="8" status="" src="s" readonly="">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD glfa001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD glfbseq
 
               #add-point:input段modify_detail 
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog
         {<point name="input.after_dialog"/>}
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel
         {<point name="input.cancel"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close
         {<point name="input.close"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit
         {<point name="input.exit"/>}
         #end add-point
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="agli070.insert" ver="20" status="" src="s" readonly="">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION agli070_insert()
   #add-point:insert段define
   {<point name="insert.define" edit="s"/>}
   #end add-point    
   #add-point:insert段define(客製用)
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_glfb_d.clear()   
 
 
   INITIALIZE g_glfa_m.* LIKE glfa_t.*             #DEFAULT 設定
   
   LET g_glfa001_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_glfa_m.glfaownid = g_user
      LET g_glfa_m.glfaowndp = g_dept
      LET g_glfa_m.glfacrtid = g_user
      LET g_glfa_m.glfacrtdp = g_dept 
      LET g_glfa_m.glfacrtdt = cl_get_current()
      LET g_glfa_m.glfamodid = g_user
      LET g_glfa_m.glfamoddt = cl_get_current()
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_glfa_m.glfa002 = "1"
      LET g_glfa_m.glfa003 = "1"
      LET g_glfa_m.glfa009 = "2"
      LET g_glfa_m.glfa008 = "1"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_glfa_m_t.* = g_glfa_m.*
      LET g_glfa_m_o.* = g_glfa_m.*
      
      #顯示狀態(stus)圖片
      
    
      CALL agli070_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_glfa_m.* TO NULL
         INITIALIZE g_glfb_d TO NULL
 
         #add-point:取消新增後
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL agli070_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_glfb_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL agli070_set_act_visible()   
   CALL agli070_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_glfa001_t = g_glfa_m.glfa001
 
   
   #組合新增資料的條件
   LET g_add_browse = " glfaent = '" ||g_enterprise|| "' AND",
                      " glfa001 = '", g_glfa_m.glfa001, "' "
 
                      
   #add-point:組合新增資料的條件後
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL agli070_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE agli070_cl
   
   CALL agli070_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE agli070_master_referesh USING g_glfa_m.glfa001 INTO g_glfa_m.glfa001,g_glfa_m.glfa004,g_glfa_m.glfa002, 
       g_glfa_m.glfa003,g_glfa_m.glfa005,g_glfa_m.glfa006,g_glfa_m.glfa007,g_glfa_m.glfa010,g_glfa_m.glfa013, 
       g_glfa_m.glfa011,g_glfa_m.glfa012,g_glfa_m.glfa014,g_glfa_m.glfa015,g_glfa_m.glfa009,g_glfa_m.glfa008, 
       g_glfa_m.glfaownid,g_glfa_m.glfacrtid,g_glfa_m.glfacrtdt,g_glfa_m.glfaowndp,g_glfa_m.glfacrtdp, 
       g_glfa_m.glfamodid,g_glfa_m.glfamoddt,g_glfa_m.glfa004_desc,g_glfa_m.glfa005_desc,g_glfa_m.glfaownid_desc, 
       g_glfa_m.glfacrtid_desc,g_glfa_m.glfaowndp_desc,g_glfa_m.glfacrtdp_desc,g_glfa_m.glfamodid_desc 

   
   #遮罩相關處理
   LET g_glfa_m_mask_o.* =  g_glfa_m.*
   CALL agli070_glfa_t_mask()
   LET g_glfa_m_mask_n.* =  g_glfa_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_glfa_m.glfa001,g_glfa_m.glfal003,g_glfa_m.glfa004,g_glfa_m.glfa004_desc,g_glfa_m.glfa002, 
       g_glfa_m.glfa003,g_glfa_m.glfa005,g_glfa_m.glfa005_desc,g_glfa_m.glfa006,g_glfa_m.glfa007,g_glfa_m.glfa010, 
       g_glfa_m.glfa013,g_glfa_m.glfa011,g_glfa_m.glfa012,g_glfa_m.glfa014,g_glfa_m.glfa015,g_glfa_m.glfa009, 
       g_glfa_m.glfa008,g_glfa_m.glfaownid,g_glfa_m.glfaownid_desc,g_glfa_m.glfacrtid,g_glfa_m.glfacrtid_desc, 
       g_glfa_m.glfacrtdt,g_glfa_m.glfaowndp,g_glfa_m.glfaowndp_desc,g_glfa_m.glfacrtdp,g_glfa_m.glfacrtdp_desc, 
       g_glfa_m.glfamodid,g_glfa_m.glfamodid_desc,g_glfa_m.glfamoddt,g_glfa_m.desc
   
   #add-point:新增結束後
   {<point name="insert.after"/>}
   #end add-point 
   
   #功能已完成,通報訊息中心
   CALL agli070_msgcentre_notify('insert')
   
END FUNCTION
]]>
  </section>
  <section id="agli070.insert_b" ver="10" status="" src="s" readonly="">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION agli070_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define
   {<point name="insert_b.define" edit="s"/>}
   #end add-point     
   #add-point:insert_b段define(客製用)
   {<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point     
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO glfb_t
                  (glfbent,
                   glfb001,
                   glfbseq,glfbseq1
                   ,glfb002,glfb003) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_glfb_d[g_detail_idx].glfb002,g_glfb_d[g_detail_idx].glfb003)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "glfb_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_glfb_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="agli070.key_delete_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION agli070_key_delete_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define
   {<point name="key_delete_b.define" edit="s"/>}
   #end add-point
   #add-point:delete_b段define(客製用)
   {<point name="key_delete_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="agli070.key_update_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION agli070_key_update_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:update_b段define
   {<point name="key_update_b.define" edit="s"/>}
   #end add-point
   #add-point:update_b段define(客製用)
   {<point name="key_update_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
END FUNCTION
]]>
  </section>
  <section id="agli070.lock_b" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION agli070_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define(客製用)
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point   
    
   #先刷新資料
   #CALL agli070_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "glfb_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN agli070_bcl USING g_enterprise,
                                       g_glfa_m.glfa001,g_glfb_d[g_detail_idx].glfbseq,g_glfb_d[g_detail_idx].glfbseq1  
                                               
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "agli070_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="agli070.main" ver="20" status="" src="s" readonly="">
    <![CDATA[#應用 a26 樣板自動產生(Version:4)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("agl","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT glfa001,'',glfa004,'',glfa002,glfa003,glfa005,'',glfa006,glfa007,glfa010, 
       glfa013,glfa011,glfa012,glfa014,glfa015,glfa009,glfa008,glfaownid,'',glfacrtid,'',glfacrtdt,glfaowndp, 
       '',glfacrtdp,'',glfamodid,'',glfamoddt,''", 
                      " FROM glfa_t",
                      " WHERE glfaent= ? AND glfa001=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE agli070_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.glfa001,t0.glfa004,t0.glfa002,t0.glfa003,t0.glfa005,t0.glfa006,t0.glfa007, 
       t0.glfa010,t0.glfa013,t0.glfa011,t0.glfa012,t0.glfa014,t0.glfa015,t0.glfa009,t0.glfa008,t0.glfaownid, 
       t0.glfacrtid,t0.glfacrtdt,t0.glfaowndp,t0.glfacrtdp,t0.glfamodid,t0.glfamoddt,t1.ooall004 ,t2.glaal002 , 
       t3.ooag011 ,t4.ooag011 ,t5.ooefl003 ,t6.ooefl003 ,t7.ooag011",
               " FROM glfa_t t0",
                              " LEFT JOIN ooall_t t1 ON t1.ooallent='"||g_enterprise||"' AND t1.ooall001='0' AND t1.ooall002=t0.glfa004 AND t1.ooall003='"||g_dlang||"' ",
               " LEFT JOIN glaal_t t2 ON t2.glaalent='"||g_enterprise||"' AND t2.glaalld=t0.glfa005 AND t2.glaal001='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent='"||g_enterprise||"' AND t3.ooag001=t0.glfaownid  ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent='"||g_enterprise||"' AND t4.ooag001=t0.glfacrtid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=t0.glfaowndp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent='"||g_enterprise||"' AND t6.ooefl001=t0.glfacrtdp AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent='"||g_enterprise||"' AND t7.ooag001=t0.glfamodid  ",
 
               " WHERE t0.glfaent = '" ||g_enterprise|| "' AND t0.glfa001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE agli070_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_agli070 WITH FORM cl_ap_formpath("agl",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL agli070_init()   
 
      #進入選單 Menu (="N")
      CALL agli070_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_agli070
      
   END IF 
   
   CLOSE agli070_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
]]>
  </section>
  <section id="agli070.mask_functions" ver="1" status="" src="s" readonly="">
    <![CDATA[&include "erp/agl/agli070_mask.4gl"
]]>
  </section>
  <section id="agli070.modify" ver="22" status="" src="s" readonly="">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION agli070_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
 
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point    
   #add-point:modify段define(客製用)
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point    
   
   #保存單頭舊值
   LET g_glfa_m_t.* = g_glfa_m.*
   LET g_glfa_m_o.* = g_glfa_m.*
   
   IF g_glfa_m.glfa001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_glfa001_t = g_glfa_m.glfa001
 
   CALL s_transaction_begin()
   
   OPEN agli070_cl USING g_enterprise,g_glfa_m.glfa001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN agli070_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE agli070_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE agli070_master_referesh USING g_glfa_m.glfa001 INTO g_glfa_m.glfa001,g_glfa_m.glfa004,g_glfa_m.glfa002, 
       g_glfa_m.glfa003,g_glfa_m.glfa005,g_glfa_m.glfa006,g_glfa_m.glfa007,g_glfa_m.glfa010,g_glfa_m.glfa013, 
       g_glfa_m.glfa011,g_glfa_m.glfa012,g_glfa_m.glfa014,g_glfa_m.glfa015,g_glfa_m.glfa009,g_glfa_m.glfa008, 
       g_glfa_m.glfaownid,g_glfa_m.glfacrtid,g_glfa_m.glfacrtdt,g_glfa_m.glfaowndp,g_glfa_m.glfacrtdp, 
       g_glfa_m.glfamodid,g_glfa_m.glfamoddt,g_glfa_m.glfa004_desc,g_glfa_m.glfa005_desc,g_glfa_m.glfaownid_desc, 
       g_glfa_m.glfacrtid_desc,g_glfa_m.glfaowndp_desc,g_glfa_m.glfacrtdp_desc,g_glfa_m.glfamodid_desc 

   
   #檢查是否允許此動作
   IF NOT agli070_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_glfa_m_mask_o.* =  g_glfa_m.*
   CALL agli070_glfa_t_mask()
   LET g_glfa_m_mask_n.* =  g_glfa_m.*
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
 
   
   CALL agli070_show()
   #add-point:modify段show之後
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
 
    
   WHILE TRUE
      LET g_glfa001_t = g_glfa_m.glfa001
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_glfa_m.glfamodid = g_user 
LET g_glfa_m.glfamoddt = cl_get_current()
LET g_glfa_m.glfamodid_desc = cl_get_username(g_glfa_m.glfamodid)
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      CALL agli070_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE glfa_t SET (glfamodid,glfamoddt) = (g_glfa_m.glfamodid,g_glfa_m.glfamoddt)
          WHERE glfaent = g_enterprise AND glfa001 = g_glfa001_t
 
      END IF
    
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_glfa_m.* = g_glfa_m_t.*
         CALL agli070_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_glfa_m.glfa001 != g_glfa001_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE glfb_t SET glfb001 = g_glfa_m.glfa001
 
          WHERE glfbent = g_enterprise AND glfb001 = g_glfa001_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "glfb_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "glfb_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL agli070_set_act_visible()   
   CALL agli070_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " glfaent = '" ||g_enterprise|| "' AND",
                      " glfa001 = '", g_glfa_m.glfa001, "' "
 
   #填到對應位置
   CALL agli070_browser_fill("")
 
   CLOSE agli070_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL agli070_msgcentre_notify('modify')
 
END FUNCTION   
]]>
  </section>
  <section id="agli070.msgcentre_notify" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a66 樣板自動產生(Version:3)
PRIVATE FUNCTION agli070_msgcentre_notify(lc_state)
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define" edit="s"/>}
   #end add-point
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define_customerization" edit="c"/>}
   #end add-point   
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL agli070_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_glfa_m)
 
   #add-point:msgcentre其他通知
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
]]>
  </section>
  <section id="agli070.other_dialog" ver="2" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="agli070.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="agli070.query" ver="9" status="" src="s" readonly="">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION agli070_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point   
   #add-point:query段define(客製用)
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_glfb_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL agli070_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL agli070_browser_fill("")
      CALL agli070_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
   CALL agli070_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL agli070_fetch("F") 
      #顯示單身筆數
      CALL agli070_idx_chk()
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="agli070.reproduce" ver="16" status="" src="s" readonly="">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION agli070_reproduce()
   DEFINE l_newno     LIKE glfa_t.glfa001 
   DEFINE l_oldno     LIKE glfa_t.glfa001 
 
   DEFINE l_master    RECORD LIKE glfa_t.*
   DEFINE l_detail    RECORD LIKE glfb_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define
   {<point name="reproduce.define" edit="s"/>}
   #end add-point   
   #add-point:reproduce段define(客製用)
   {<point name="reproduce.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   
   LET g_master_insert = FALSE
   
   IF g_glfa_m.glfa001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_glfa001_t = g_glfa_m.glfa001
 
    
   LET g_glfa_m.glfa001 = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_glfa_m.glfaownid = g_user
      LET g_glfa_m.glfaowndp = g_dept
      LET g_glfa_m.glfacrtid = g_user
      LET g_glfa_m.glfacrtdp = g_dept 
      LET g_glfa_m.glfacrtdt = cl_get_current()
      LET g_glfa_m.glfamodid = g_user
      LET g_glfa_m.glfamoddt = cl_get_current()
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
   
   
   #清空key欄位的desc
   
   
   CALL agli070_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_glfa_m.* TO NULL
      INITIALIZE g_glfb_d TO NULL
 
      #add-point:複製取消後
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL agli070_show()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL agli070_set_act_visible()   
   CALL agli070_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_glfa001_t = g_glfa_m.glfa001
 
   
   #組合新增資料的條件
   LET g_add_browse = " glfaent = '" ||g_enterprise|| "' AND",
                      " glfa001 = '", g_glfa_m.glfa001, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL agli070_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL agli070_idx_chk()
   
   #功能已完成,通報訊息中心
   CALL agli070_msgcentre_notify('reproduce')
 
END FUNCTION
]]>
  </section>
  <section id="agli070.set_act_no_visible" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限關閉
PRIVATE FUNCTION agli070_set_act_no_visible()
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible段define(客製用)
   {<point name="set_act_no_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible段
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="agli070.set_act_no_visible_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限關閉
PRIVATE FUNCTION agli070_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define(客製用)
   {<point name="set_act_no_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="agli070.set_act_visible" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限開啟
PRIVATE FUNCTION agli070_set_act_visible()
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible段define(客製用)
   {<point name="set_act_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible段
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="agli070.set_act_visible_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限開啟
PRIVATE FUNCTION agli070_set_act_visible_b()
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible_b段define(客製用)
   {<point name="set_act_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible_b段
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="agli070.set_entry" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION agli070_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define" edit="s"/>}
   #end add-point       
   #add-point:set_entry段define(客製用)
   {<point name="set_entry.define_customerization" edit="c"/>}
   #end add-point       
   
   CALL cl_set_comp_entry("",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("glfa001",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="agli070.set_entry_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION agli070_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define" edit="s"/>}
   #end add-point     
   #add-point:set_entry_b段define(客製用)
   {<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point     
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="agli070.set_no_entry" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION agli070_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define" edit="s"/>}
   #end add-point     
   #add-point:set_no_entry段define(客製用)
   {<point name="set_no_entry.define_customerization" edit="c"/>}
   #end add-point     
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("glfa001",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("",FALSE)
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="agli070.set_no_entry_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION agli070_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point    
   #add-point:set_no_entry_b段define(客製用)
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point    
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="agli070.set_pk_array" ver="4" status="" src="s" readonly="">
    <![CDATA[   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION agli070_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_glfa_m.glfa001
   LET g_pk_array[1].column = 'glfa001'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="agli070.show" ver="17" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION agli070_show()
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define
   {<point name="show.define" edit="s"/>}
   #end add-point  
   #add-point:show段define(客製用)
   {<point name="show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL agli070_b_fill() #單身填充
      CALL agli070_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:3)
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:2)
   CALL agli070_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_glfa_m_mask_o.* =  g_glfa_m.*
   CALL agli070_glfa_t_mask()
   LET g_glfa_m_mask_n.* =  g_glfa_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_glfa_m.glfa001,g_glfa_m.glfal003,g_glfa_m.glfa004,g_glfa_m.glfa004_desc,g_glfa_m.glfa002, 
       g_glfa_m.glfa003,g_glfa_m.glfa005,g_glfa_m.glfa005_desc,g_glfa_m.glfa006,g_glfa_m.glfa007,g_glfa_m.glfa010, 
       g_glfa_m.glfa013,g_glfa_m.glfa011,g_glfa_m.glfa012,g_glfa_m.glfa014,g_glfa_m.glfa015,g_glfa_m.glfa009, 
       g_glfa_m.glfa008,g_glfa_m.glfaownid,g_glfa_m.glfaownid_desc,g_glfa_m.glfacrtid,g_glfa_m.glfacrtid_desc, 
       g_glfa_m.glfacrtdt,g_glfa_m.glfaowndp,g_glfa_m.glfaowndp_desc,g_glfa_m.glfacrtdp,g_glfa_m.glfacrtdp_desc, 
       g_glfa_m.glfamodid,g_glfa_m.glfamodid_desc,g_glfa_m.glfamoddt,g_glfa_m.desc
   
   #顯示狀態(stus)圖片
   
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_glfb_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL agli070_detail_show()
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="agli070.signature" ver="1" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="agli070.state_change" ver="1" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="agli070.status_show" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION agli070_status_show()
   #add-point:status_show段define
   {<point name="status_show.define" edit="s"/>}
   #end add-point
   #add-point:status_show段define(客製用)
   {<point name="status_show.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:status_show段status_show
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="agli070.ui_browser_refresh" ver="9" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION agli070_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define" edit="s"/>}
   #end add-point    
   #add-point:ui_browser_refresh段define(客製用)
   {<point name="ui_browser_refresh.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_glfa001 = g_glfa_m.glfa001 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="agli070.ui_detailshow" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION agli070_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_detailshow段define(客製用)
   {<point name="ui_detailshow.define_customerization" edit="c"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="agli070.ui_dialog" ver="16" status="" src="s" readonly="">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION agli070_ui_dialog()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define(客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   
   #action default動作
   #應用 a42 樣板自動產生(Version:2)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL agli070_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_glfa_m.* TO NULL
         CALL g_glfb_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL agli070_init()
      END IF
   
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
    
         DISPLAY ARRAY g_glfb_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL agli070_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL agli070_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
      
         BEFORE DIALOG
            #先填充browser資料
            CALL agli070_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL agli070_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL agli070_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL agli070_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
 
 
         
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "glfa_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "glfb_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL agli070_browser_fill("F")   #browser_fill()會將notice區塊清空
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "glfa_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "glfb_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL agli070_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL agli070_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
          
         
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL agli070_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL agli070_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL agli070_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL agli070_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL agli070_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL agli070_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL agli070_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL agli070_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL agli070_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL agli070_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_glfb_d)
                  LET g_export_id[1]   = "s_detail1"
 
                  #add-point:ON ACTION exporttoexcel
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL agli070_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL agli070_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL agli070_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
 
 
 
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL agli070_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION btn_test
            LET g_action_choice="btn_test"
            IF cl_auth_chk_act("btn_test") THEN
               
               #add-point:ON ACTION btn_test
               {<point name="menu.btn_test" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL agli070_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL agli070_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               
            END IF
 
 
 
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL agli070_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL agli070_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL agli070_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="agli070.ui_headershow" ver="10" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION agli070_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_headershow段define(客製用)
   {<point name="ui_headershow.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_glfa_m.glfa001 = g_browser[g_current_idx].b_glfa001   
 
   EXECUTE agli070_master_referesh USING g_glfa_m.glfa001 INTO g_glfa_m.glfa001,g_glfa_m.glfa004,g_glfa_m.glfa002, 
       g_glfa_m.glfa003,g_glfa_m.glfa005,g_glfa_m.glfa006,g_glfa_m.glfa007,g_glfa_m.glfa010,g_glfa_m.glfa013, 
       g_glfa_m.glfa011,g_glfa_m.glfa012,g_glfa_m.glfa014,g_glfa_m.glfa015,g_glfa_m.glfa009,g_glfa_m.glfa008, 
       g_glfa_m.glfaownid,g_glfa_m.glfacrtid,g_glfa_m.glfacrtdt,g_glfa_m.glfaowndp,g_glfa_m.glfacrtdp, 
       g_glfa_m.glfamodid,g_glfa_m.glfamoddt,g_glfa_m.glfa004_desc,g_glfa_m.glfa005_desc,g_glfa_m.glfaownid_desc, 
       g_glfa_m.glfacrtid_desc,g_glfa_m.glfaowndp_desc,g_glfa_m.glfacrtdp_desc,g_glfa_m.glfamodid_desc 

   CALL agli070_glfa_t_mask()
   CALL agli070_show()
      
END FUNCTION
]]>
  </section>
  <section id="agli070.unlock_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION agli070_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define(客製用)
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point  
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE agli070_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="agli070.update_b" ver="12" status="" src="s" readonly="">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION agli070_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define" edit="s"/>}
   #end add-point   
   #add-point:update_b段define(客製用)
   {<point name="update_b.define_customerization" edit="c"/>}
   #end add-point   
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "glfb_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL agli070_glfb_t_mask_restore('restore_mask_o')
               
      UPDATE glfb_t 
         SET (glfb001,
              glfbseq,glfbseq1
              ,glfb002,glfb003) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_glfb_d[g_detail_idx].glfb002,g_glfb_d[g_detail_idx].glfb003) 
         WHERE glfbent = g_enterprise AND glfb001 = ps_keys_bak[1] AND glfbseq = ps_keys_bak[2] AND glfbseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "glfb_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "glfb_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            LET l_new_key[01] = ps_keys[01] 
LET l_old_key[01] = ps_keys_bak[01] 
LET l_field_key[01] = 'glfbl001'
LET l_new_key[02] = ps_keys[02] 
LET l_old_key[02] = ps_keys_bak[02] 
LET l_field_key[02] = 'glfblseq'
LET l_new_key[03] = ps_keys[03] 
LET l_old_key[03] = ps_keys_bak[03] 
LET l_field_key[03] = 'glfbl002'
LET l_new_key[04] = g_dlang 
LET l_old_key[04] = g_dlang 
LET l_field_key[04] = 'glfbl003'
CALL cl_multitable_key_upd(l_new_key, l_old_key, l_field_key, 'glfbl_t')
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL agli070_glfb_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
