<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="agli060_01" std_prog="agli060_01" erpver="1.0" module="AGL" ver="1" env="s" zone="t10dev" normal_style="N" booking="Y">
  <point name="free_style.variable" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[{<Module define>}
#單頭 type 宣告
PRIVATE type type_g_glak_m        RECORD
       glak003 LIKE glak_t.glak003,
       glak004 LIKE glak_t.glak004
       END RECORD
DEFINE g_glak_m        type_g_glak_m
DEFINE g_wc1           STRING
DEFINE g_wc2           STRING
{</Module define>}]]>
  </point>
  <point name="function.agli060_01" order="1" ver="1" cite_std="N" cite_ver="" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PUBLIC FUNCTION agli060_01(--)
   #add-point:construct段變數傳入
   p_glakld,p_glak001,p_glak002
   #end add-point
   )
   {<Local define>}
   DEFINE l_ac_t          LIKE type_t.num5        #未取消的ARRAY CNT
   DEFINE l_allow_insert  LIKE type_t.num5        #可新增否
   DEFINE l_allow_delete  LIKE type_t.num5        #可刪除否
   DEFINE l_count         LIKE type_t.num5
   DEFINE l_insert        LIKE type_t.num5
   {</Local define>}
   #add-point:construct段define
   DEFINE p_glakld        LIKE glak_t.glakld
   DEFINE p_glak001       LIKE glak_t.glak001
   DEFINE p_glak002       LIKE glak_t.glak002
   #end add-point

   #畫面開啟 (identifier)
   OPEN WINDOW w_agli060_01 WITH FORM cl_ap_formpath("agl","agli060_01")

   #瀏覽頁簽資料初始化
   CALL cl_ui_init()

   #輸入前處理
   #add-point:單頭前置處理
   LET g_glakld = p_glakld
   LET g_glak001 = p_glak001
   LET g_glak002 = p_glak002
   #end add-point

   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

      #輸入開始
      CONSTRUCT BY NAME g_wc1 ON glak003

         BEFORE CONSTRUCT
            #add-point:單頭輸入前處理
            {<point name="construct.before_construct"/>}
            #end add-point
            
         ON ACTION controlp INFIELD glak003
            #add-point:ON ACTION controlp INFIELD glak003
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            #LET g_qryparam.arg1 = g_glakld
            LET g_qryparam.where = " glac001 = (SELECT glaa004 FROM glaa_t WHERE glaald = '",g_glakld,"') AND glac003 <> '1' AND glac006 = 1 ",
                                   " AND glac002 IN (SELECT glad001 FROM glad_t WHERE gladld = '",g_glakld,"')"
            
            CALL aglt310_04()                                #呼叫開窗
            DISPLAY g_qryparam.return1 TO glak003
            NEXT FIELD glak003                     #返回原欄位
            
         AFTER CONSTRUCT
            #add-point:單頭輸入後處理
            {<point name="construct.after_construct"/>}
            #end add-point



         #---------------------------<  Master  >---------------------------


      END CONSTRUCT
      CONSTRUCT BY NAME g_wc2 ON glak004

         BEFORE CONSTRUCT
         ON ACTION controlp INFIELD glak004
            #add-point:ON ACTION controlp INFIELD glak004
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CASE p_glak001
               WHEN 1                       #營運據點
                  LET g_qryparam.where = " ooefstus = 'Y'"
                  CALL q_ooef001()             
               WHEN 2                       #部門管理
                  CALL q_ooea001_1()
               WHEN 3                       #利潤成本管理
                  LET g_qryparam.where = " ooea005 = 'Y' AND ooeastus = 'Y'" 
                  CALL q_ooea001()
                  LET g_qryparam.where = '' 
               WHEN 4                       #區域管理
                  LET g_qryparam.arg1 = '287'
                  LET g_qryparam.where = " oocqstus = 'Y'"
                  CALL q_oocq002()                         
               WHEN 5                       #交易客商
                  LET g_qryparam.where = " pmaastus = 'Y'"
                  CALL q_pmaa001()         
               WHEN 6                       #帳款客商
                  LET g_qryparam.where = " pmaastus = 'Y'"
                  CALL q_pmaa001()                  
               WHEN 7                       #客群管理
                  LET g_qryparam.arg1 = '281'
                  LET g_qryparam.where = " oocqstus = 'Y'"
                  CALL q_oocq002()                        
               WHEN 8                       #產品類別管理
                  LET g_qryparam.where = " rtaxstus = 'Y'"
                  CALL q_rtax001_1()                         
               WHEN 9                       #人員管理
                  LET g_qryparam.where = " ooagstus = 'Y'"
                  CALL q_ooag001_2()                         
               WHEN 10                      #預算管理
                  LET g_qryparam.where = " bgaastus = 'Y'"
                  CALL q_bgaa001()                         
               WHEN 11                      #專案管理
                                           
               WHEN 10                      #WBS
              
            END CASE 
            DISPLAY g_qryparam.return1 TO glak004
            NEXT FIELD glak004 
            
         AFTER CONSTRUCT

      END CONSTRUCT
	
      ON ACTION accept
         ACCEPT DIALOG

      ON ACTION cancel
         LET INT_FLAG = TRUE
         EXIT DIALOG

      ON ACTION close
         LET INT_FLAG = TRUE
         EXIT DIALOG

      ON ACTION exit
         LET INT_FLAG = TRUE
         EXIT DIALOG

      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG

   END DIALOG

   #add-point:畫面關閉前
   {<point name="construct.before_close"/>}
   #end add-point

   #畫面關閉
   CLOSE WINDOW w_agli060_01

   IF NOT INT_FLAG THEN
      CALL agli060_01_get_glak()
   END IF

END FUNCTION]]>
  </point>
  <point name="function.agli060_01_get_glak" order="2" ver="1" cite_std="N" cite_ver="" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION agli060_01_get_glak()
DEFINE l_sql     STRING
DEFINE l_glak003 LIKE glak_t.glak003
DEFINE l_glak004 LIKE glak_t.glak004
DEFINE l_success LIKE type_t.chr1


   CALL s_transaction_begin()
   IF g_wc1 IS NULL THEN LET g_wc1 = " 1=1" END IF
   IF g_wc2 IS NULL THEN LET g_wc2 = " 1=1" END IF
   LET g_wc1 = cl_replace_str(g_wc1,"glak003","glac002")   
   LET l_sql = "SELECT glac002 FROM glac_t ",
               " WHERE glacent = ",g_enterprise," AND glacstus = 'Y' AND ",g_wc1,
               " AND glac001 = (SELECT glaa004 FROM glaa_t WHERE glaald = '",g_glakld,"') AND glac003 <> '1' AND glac006 = 1 ",
               " AND glac002 IN (SELECT glad001 FROM glad_t WHERE gladld = '",g_glakld,"')"  
   PREPARE glak003_pre FROM l_sql
   DECLARE glak003_cur CURSOR FOR glak003_pre
   
   CASE g_glak001
      WHEN 1                       #營運據點
         LET g_wc2 = cl_replace_str(g_wc2,"glak004","ooef001")
         LET l_sql = "SELECT ooef001 FROM ooef_t WHERE ooefent='",g_enterprise,"' AND ",g_wc2," AND ooefstus = 'Y' " 
      WHEN 2                       #部門管理
         LET g_wc2 = cl_replace_str(g_wc2,"glak004","ooea001")
         LET l_sql = "SELECT ooea001 FROM ooea_t WHERE ooeaent='",g_enterprise,"' AND ",g_wc2," AND ooea016 = 'Y' AND ooeastus = 'Y' "
      WHEN 3                       #利潤成本管理
         LET g_wc2 = cl_replace_str(g_wc2,"glak004","ooea001")
         LET l_sql = "SELECT ooea001 FROM ooea_t WHERE ooeaent='",g_enterprise,"' AND ",g_wc2," AND ooea005 = 'Y' AND ooeastus = 'Y' " 
      WHEN 4                       #區域管理
         LET g_wc2 = cl_replace_str(g_wc2,"glak004","oocq002")
         LET l_sql = "SELECT oocq002 FROM oocq_t WHERE oocqent='",g_enterprise,"' AND oocq001= '287' AND ",g_wc2," AND oocqstus= 'Y' "         
      WHEN 5                       #交易客商
         LET g_wc2 = cl_replace_str(g_wc2,"glak004","pmaa001")      
         LET l_sql = "SELECT pmaa001 FROM pmaa_t WHERE pmaaent='",g_enterprise,"' AND ",g_wc2," AND pmaastus = 'Y'"        
      WHEN 6                       #帳款客商
         LET g_wc2 = cl_replace_str(g_wc2,"glak004","pmaa001")      
         LET l_sql = "SELECT pmaa001 FROM pmaa_t WHERE pmaaent='",g_enterprise,"' AND ",g_wc2," AND pmaastus = 'Y'"                 
      WHEN 7                       #客群管理
         LET g_wc2 = cl_replace_str(g_wc2,"glak004","oocq002")
         LET l_sql = "SELECT oocq002 FROM oocq_t WHERE oocqent='",g_enterprise,"' AND oocq001= '281' AND ",g_wc2," AND oocqstus= 'Y' "        
      WHEN 8                       #產品類別管理
         LET g_wc2 = cl_replace_str(g_wc2,"glak004","rtax001")
         LET l_sql = "SELECT rtax001 FROM rtax_t WHERE rtaxent='",g_enterprise,"' AND ",g_wc2," AND rtaxstus = 'Y' "        
      WHEN 9                       #人員管理
         LET g_wc2 = cl_replace_str(g_wc2,"glak004","ooag001")
         LET l_sql = "SELECT ooag001 FROM ooag_t WHERE ooagent='",g_enterprise,"' AND ",g_wc2," AND ooagstus = 'Y' "        
      WHEN 10                      #預算管理
         LET g_wc2 = cl_replace_str(g_wc2,"glak004","bgaa001")  
         LET l_sql = "SELECT bgaa001 FROM bgaa_t WHERE bgaaent='",g_enterprise,"' AND ",g_wc2," AND bgaastus = 'Y' "         
      WHEN 11                      #專案管理
         RETURN                         
      WHEN 10                      #WBS
         RETURN
   END CASE
   PREPARE glak004_pre FROM l_sql
   DECLARE glak004_cur CURSOR FOR glak004_pre      
   LET l_success = 'Y'
   FOREACH glak003_cur INTO l_glak003
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         LET l_success = 'N'
         EXIT FOREACH
      END IF   
      FOREACH glak004_cur INTO l_glak004
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            LET l_success = 'N'
            EXIT FOREACH
         END IF      
         IF NOT agli060_01_ins_glak(l_glak003,l_glak004) THEN 
            LET l_success = 'N'
            EXIT FOREACH 
         END IF         
      END FOREACH
      IF l_success = 'N' THEN 
         EXIT FOREACH
      END IF
   END FOREACH
   IF l_success = 'N' THEN 
      CALL cl_err('','agl-00167',1)
      CALL s_transaction_end('N','0')                    
   ELSE
      CALL s_transaction_end('Y','0')    
   END IF      

END FUNCTION]]>
  </point>
  <point name="function.agli060_01_ins_glak" order="3" ver="1" cite_std="N" cite_ver="" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL agli060_01_ins_glak(p_glak003,p_glak004)
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION agli060_01_ins_glak(p_glak003,p_glak004)
DEFINE p_glak003   LIKE glak_t.glak003
DEFINE p_glak004   LIKE glak_t.glak004
DEFINE l_glak      RECORD LIKE glak_t.*


   IF NOT agli060_01_key_chk(p_glak003,p_glak004) THEN RETURN FALSE END IF
   LET l_glak.glakld = g_glakld
   LET l_glak.glak001 = g_glak001
   LET l_glak.glak002 = g_glak002
   LET l_glak.glak003 = p_glak003
   LET l_glak.glak004 = p_glak004
   LET l_glak.glakownid = g_user
   LET l_glak.glakowndp = g_dept
   LET l_glak.glakcrtid = g_user
   LET l_glak.glakcrtdp = g_dept 
   LET l_glak.glakcrtdt = cl_get_current()
   LET l_glak.glakmodid = ''
   LET l_glak.glakmoddt = ''
   LET l_glak.glakstus = "Y"
   LET l_glak.glakent = g_enterprise
   
   INSERT INTO glak_t VALUES(l_glak.*)
   IF SQLCA.SQLcode  THEN
      CALL cl_err("glak_t",SQLCA.sqlcode,1)  
      RETURN FALSE      
   END IF
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.agli060_01_key_chk" order="4" ver="1" cite_std="N" cite_ver="" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL agli060_01_key_chk(p_glak003,p_glak004)
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION agli060_01_key_chk(p_glak003,p_glak004)
DEFINE p_glak003   LIKE glak_t.glak003
DEFINE p_glak004   LIKE glak_t.glak004

   IF NOT cl_null(g_glakld) AND NOT cl_null(g_glak001) AND NOT cl_null(p_glak003) AND NOT cl_null(p_glak004) THEN 
      IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM glak_t WHERE "||"glakent = '" ||g_enterprise|| "' AND "||"glak001 = '"||g_glak001 ||"' AND "|| "glakld = '"||g_glakld ||"' AND "|| "glak003 = '"||p_glak003 ||"' AND "|| "glak004 = '"||p_glak004 ||"'",'std-00004',0) THEN 
         RETURN FALSE
      END IF
   END IF
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[DEFINE g_glakld        LIKE glak_t.glakld
DEFINE g_glak001       LIKE glak_t.glak001
DEFINE g_glak002       LIKE glak_t.glak002]]>
  </point>
</add_points>
