<add_points prog="aglp500" std_prog="aglp500" erpver="1.0" module="AGL" ver="2" env="s" zone="t10dev" booking="Y" type="M" identity="s">
  <other>
    <code_template value="P" status="" />
    <free_style value="N" status="" />
  </other>
  <point name="function.aglp500_init" cite_std="N" status="d" ver="1" src="s" new="Y" order="2" mark_hard="N">
<![CDATA[#程式初始化
PRIVATE FUNCTION aglp500_init()

END FUNCTION]]>
</point>
  <point name="function.aglp500_qbe" cite_std="N" status="d" ver="1" src="s" new="Y" order="4" mark_hard="N">
<![CDATA[#qbe條件
PRIVATE FUNCTION aglp500_qbe()
   CLEAR FORM 
   INITIALIZE g_glapcrtid TO NULL
   INITIALIZE g_glapld TO NULL
   INITIALIZE g_glapdocdt TO NULL
   INITIALIZE g_glapdocno TO NULL

   DIALOG ATTRIBUTES(UNBUFFERED)
       CONSTRUCT BY NAME g_glapcrtid ON glapcrtid
         BEFORE CONSTRUCT
            CALL cl_qbe_init()           
       END CONSTRUCT
     
      CONSTRUCT BY NAME g_glapld ON glapld
         BEFORE CONSTRUCT
            CALL cl_qbe_init()           
       END CONSTRUCT
       
      CONSTRUCT BY NAME g_glapdocdt ON glapdocdt
         BEFORE CONSTRUCT
            CALL cl_qbe_init()            
      END CONSTRUCT 
      
      CONSTRUCT BY NAME g_glapdocno ON glapdocno
         BEFORE CONSTRUCT
            CALL cl_qbe_init()            
      END CONSTRUCT 
      
      ON ACTION controlp
         CASE
            WHEN INFIELD(glapcrtid)
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_ooag001()                         #呼叫開窗
               DISPLAY g_qryparam.return1 TO glapcrtid  #顯示到畫面上
               NEXT FIELD glapcrtid                     #返回原欄位
         
            
            WHEN INFIELD(glapld)
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.arg1 = g_user
               LET g_qryparam.arg2 = g_dept
               CALL q_authorised_ld()                           #呼叫開窗
               DISPLAY g_qryparam.return1 TO glapld      #顯示到畫面上
               NEXT FIELD glapld
               
            WHEN INFIELD(glapdocno)   
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.where = " glapstus='Y' AND ",g_glapld    #账套
               CALL q_glapdocno()                                #呼叫開窗
               LET g_qryparam.where =" "            #呼叫開窗
               DISPLAY g_qryparam.return1 TO glapdocno           #顯示到畫面上
               NEXT FIELD glapdocno
         END CASE
         
      ON ACTION qbe_select
#         CALL cl_qbe_select()
      
       ON ACTION qbe_save
          CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
         
       ON ACTION exit
         LET INT_FLAG = 1
         EXIT DIALOG    
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
     
   IF INT_FLAG THEN
      LET INT_FLAG = FALSE
      CLOSE WINDOW w_aglp500
      EXIT PROGRAM
   END IF
   
END FUNCTION]]>
</point>
  <point name="construct.c.glapcrtid" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glapcrtid  #顯示到畫面上

            NEXT FIELD glapcrtid                     #返回原欄位

]]>
</point>
  <point name="construct.c.glapdocno" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " glapstus='Y'  "    #账套
            CALL q_glapdocno()                                #呼叫開窗                        #呼叫開窗
            DISPLAY g_qryparam.return1 TO glapdocno  #顯示到畫面上

            NEXT FIELD glapdocno                     #返回原欄位

]]>
</point>
  <point name="construct.c.glapld" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
		      LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept
            CALL q_authorised_ld()                            #呼叫開窗
            DISPLAY g_qryparam.return1 TO glapld  #顯示到畫面上

            NEXT FIELD glapld                     #返回原欄位

]]>
</point>
  <point name="free_style.variable" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[{<Module define>}

#單頭 type 宣告
DEFINE g_glapcrtid   STRING
DEFINE g_glapld      STRING
DEFINE g_glapdocno   STRING 
DEFINE g_glapdocdt   STRING
{</Module define>}]]>
</point>
  <point name="input.a.glapdocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_glap_m.glapdocno) AND NOT cl_null(g_glap_m.glapld) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_glap_m.glapdocno != g_glapdocno_t  OR g_glap_m.glapld != g_glapld_t ))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM glap_t WHERE "||"glapent = '" ||g_enterprise|| "' AND "||"glapdocno = '"||g_glap_m.glapdocno ||"' AND "|| "glapld = '"||g_glap_m.glapld ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
</point>
  <point name="input.a.glapld" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_glap_m.glapdocno) AND NOT cl_null(g_glap_m.glapld) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_glap_m.glapdocno != g_glapdocno_t  OR g_glap_m.glapld != g_glapld_t ))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM glap_t WHERE "||"glapent = '" ||g_enterprise|| "' AND "||"glapdocno = '"||g_glap_m.glapdocno ||"' AND "|| "glapld = '"||g_glap_m.glapld ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glap_m.glapld
            CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glap_m.glapld_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glap_m.glapld_desc
]]>
</point>
  <point name="input.c.glapdocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_glap_m.glapdocno             #給予default值

            #給予arg

            CALL q_ooba002()                                #呼叫開窗

            LET g_glap_m.glapdocno = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_glap_m.glapdocno TO glapdocno              #顯示到畫面上

            NEXT FIELD glapdocno                          #返回原欄位

]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="show.head.reference" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glap_m.glapld
            CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glap_m.glapld_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glap_m.glapld_desc
]]>
</point>
  <point name="function.aglp500_p" cite_std="N" status="u" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[#资料处理
PRIVATE FUNCTION aglp500_p()
    DEFINE l_sql          STRING
    DEFINE l_glapld       LIKE glap_t.glapld
    DEFINE l_glapdocno    LIKE glap_t.glapdocno
    DEFINE l_success      LIKE type_t.num5
    DEFINE l_flag         LIKE type_t.num5   #标记所下条件是否有资料，0：无，1：有
    
    #错误信息汇总初始化
	CALL cl_showmsg_init()
	LET g_success = 'Y'
	#给标记位赋值
	LET l_flag = 0
	#开启事务
    CALL s_transaction_begin()
    LET l_sql = " SELECT glapld,glapdocno FROM glap_t ",
                "  WHERE glapent = '",g_enterprise,"'",
                "    AND ",g_master.wc,
                "    AND glapstus='Y' "
               
    PREPARE aglp500_pre FROM l_sql
    DECLARE aglp500_cs CURSOR FOR aglp500_pre
    FOREACH aglp500_cs INTO l_glapld,l_glapdocno
       IF SQLCA.sqlcode THEN
          CALL cl_errmsg('','FROEACH','',SQLCA.SQLCODE,1)
          LET g_success = 'N'
          EXIT FOREACH
       END IF
       #走到foreach内说明有资料
       LET l_flag = 1   
       CALL s_voucher_post_chk(l_glapld,l_glapdocno) RETURNING l_success
       IF l_success = TRUE  THEN
          CALL s_voucher_post_upd(l_glapld,l_glapdocno) RETURNING l_success
       END IF
       IF l_success=FALSE THEN
          LET g_success = 'N'
       END IF
   END FOREACH
   #标记位为0则没走foreach，说明无资料
   IF l_flag = 0 THEN
      CALL cl_errmsg('','FROEACH','','abm-00028',1)
      LET l_success = FALSE
   END IF 
   
   IF g_success = 'Y' THEN 
      CALL s_transaction_end('Y','0')
   ELSE
     CALL s_transaction_end('N','0')  
     CALL cl_err_showmsg()      
   END IF 
        
END FUNCTION]]>
</point>
  <point name="global.variable" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[DEFINE g_success      LIKE type_t.chr1]]>
</point>
  <point name="main.servicecall" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[ ]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.parameter" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[        ]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.background" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.head.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.glapcrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.glapcrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.glapld" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.glapld" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.glapdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.glapdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.glapdocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.glapdocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.glapdocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.qbe_select" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.qbeclear" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="process.exit_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="transfer.argv.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="process.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="process.pre_process" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="process.count_progress" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[      CALL aglp500_p() ]]>
</point>
  <point name="process.process" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="process.foreground_finish" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[      CALL aglp500_p() ]]>
</point>
  <point name="process.background_finish" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="aglp500.description" ver="21" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000117
#+ 
#+ Filename...: aglp500
#+ Description: 傳票整批過帳作業
#+ Creator....: 02114(2014/06/19)
#+ Modifier...: 02114(2014/07/06)
#+ Buildtype..: 應用 p01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="aglp500.free_style_function" ver="1" status="" src="s">
<![CDATA[#add-point:free_style
{<point name="free_style.function"/>}
#end add-point
]]>
</section>
  <section id="aglp500.global" ver="6" status="" src="s">
<![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_schedule
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
END GLOBALS
 
PRIVATE TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
   {<point name="global.parameter"/>}
   #end add-point
        wc               STRING
                     END RECORD
 
DEFINE g_sql             STRING        #組 sql 用
DEFINE g_forupd_sql      STRING        #SELECT ... FOR UPDATE  SQL
DEFINE g_error_show      LIKE type_t.num5
DEFINE g_jobid           STRING
DEFINE g_wc              STRING
 
PRIVATE TYPE type_master RECORD
       glapcrtid LIKE glap_t.glapcrtid, 
   glapld LIKE glap_t.glapld, 
   glapdocdt LIKE glap_t.glapdocdt, 
   glapdocno LIKE glap_t.glapdocno, 
   stagenow LIKE type_t.chr80,
       wc               STRING
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_master type_master
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="aglp500.init" ver="1" status="" src="s">
<![CDATA[#+ 初始化作業
PRIVATE FUNCTION aglp500_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point
 
   LET g_error_show = 1
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="aglp500.main" ver="2" status="" src="s">
<![CDATA[MAIN
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter  
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point 
  
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("agl","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   {<point name="main.background"/>}
   #end add-point
 
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
      CALL aglp500_process(ls_js)
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aglp500 WITH FORM cl_ap_formpath("agl",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL aglp500_init()
 
      #進入選單 Menu (="N")
      CALL aglp500_ui_dialog()
 
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_aglp500
   END IF
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
]]>
</section>
  <section id="aglp500.other_function" ver="1" status="" src="s">
<![CDATA[#add-point:自定義元件(Function)
{<point name="other.function"/>}
#end add-point
]]>
</section>
  <section id="aglp500.process" ver="1" status="" src="s">
<![CDATA[#+ 資料處理
PRIVATE FUNCTION aglp500_process(ls_js)
   DEFINE ls_js       STRING
   DEFINE lc_param    type_parameter
   DEFINE li_stus     LIKE type_t.num5
   DEFINE li_count    LIKE type_t.num10  #progressbar計量
   DEFINE ls_sql      STRING             #主SQL
   #add-point:process段define
   {<point name="process.define"/>}
   #end add-point
 
   CALL util.JSON.parse(ls_js,lc_param)
 
   #add-point:process段前處理
   {<point name="process.pre_process"/>}
   #end add-point
 
   #預先計算progressbar迴圈次數
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress
      {<point name="process.count_progress"/>}
      #end add-point
   END IF
 
   #主SQL及相關FOREACH前置處理
#  DECLARE aglp500_process_cs CURSOR FROM ls_sql
#  FOREACH aglp500_process_cs INTO
   #add-point:process段process
   {<point name="process.process"/>}
   #end add-point
#  END FOREACH
 
   IF g_bgjob = "N" THEN
      #前景作業完成處理
      #add-point:process段foreground完成處理
      {<point name="process.foreground_finish"/>}
      #end add-point
      CALL cl_ask_confirm3("std-00012","")
   ELSE
      #背景作業完成處理
      #add-point:process段background完成處理
      {<point name="process.background_finish"/>}
      #end add-point
   END IF
END FUNCTION
]]>
</section>
  <section id="aglp500.transfer_argv" ver="1" status="" src="s">
<![CDATA[#+ 轉換本地參數至cmdrun參數內,準備進入背景執行
PRIVATE FUNCTION aglp500_transfer_argv(ls_js)
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog     STRING,
             param    DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter
 
   CALL util.JSON.parse(ls_js,la_param)
 
   LET la_cmdrun.prog = g_prog
   #add-point:transfer.argv段define
   {<point name="transfer.argv.define"/>}
   #end add-point
 
   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION
]]>
</section>
  <section id="aglp500.ui_dialog" ver="5" status="" src="s">
<![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION aglp500_ui_dialog()
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx   LIKE type_t.num5
   DEFINE ls_js    STRING
   DEFINE ls_wc    STRING
   DEFINE lc_param type_parameter
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
 
   #add-point:ui_dialog段before dialog
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   WHILE TRUE
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         
         
         #+ 此段落由子樣板a57產生
         CONSTRUCT BY NAME g_master.wc ON glapcrtid,glapld,glapdocdt,glapdocno
         
            BEFORE CONSTRUCT
               #add-point:cs段before_construct
               {<point name="cs.head.before_construct"/>}
               #end add-point 
         
            #公用欄位開窗相關處理
            
               
            #一般欄位開窗相關處理    
                     #Ctrlp:construct.c.glapcrtid
         ON ACTION controlp INFIELD glapcrtid
            #add-point:ON ACTION controlp INFIELD glapcrtid
            {<point name="construct.c.glapcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glapcrtid
            #add-point:BEFORE FIELD glapcrtid
            {<point name="construct.b.glapcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glapcrtid
            
            #add-point:AFTER FIELD glapcrtid
            {<point name="construct.a.glapcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.glapld
         ON ACTION controlp INFIELD glapld
            #add-point:ON ACTION controlp INFIELD glapld
            {<point name="construct.c.glapld" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glapld
            #add-point:BEFORE FIELD glapld
            {<point name="construct.b.glapld" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glapld
            
            #add-point:AFTER FIELD glapld
            {<point name="construct.a.glapld" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD glapdocdt
            #add-point:BEFORE FIELD glapdocdt
            {<point name="construct.b.glapdocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glapdocdt
            
            #add-point:AFTER FIELD glapdocdt
            {<point name="construct.a.glapdocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.glapdocdt
         ON ACTION controlp INFIELD glapdocdt
            #add-point:ON ACTION controlp INFIELD glapdocdt
            {<point name="construct.c.glapdocdt" />}
            #END add-point
 
         #Ctrlp:construct.c.glapdocno
         ON ACTION controlp INFIELD glapdocno
            #add-point:ON ACTION controlp INFIELD glapdocno
            {<point name="construct.c.glapdocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glapdocno
            #add-point:BEFORE FIELD glapdocno
            {<point name="construct.b.glapdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glapdocno
            
            #add-point:AFTER FIELD glapdocno
            {<point name="construct.a.glapdocno" />}
            #END add-point
            
 
 
            
            #add-point:其他管控
            {<point name="cs.other"/>}
            #end add-point
            
         END CONSTRUCT
 
 
      
         #add-point:ui_dialog段construct
         {<point name="ui_dialog.more_construct"/>}
         #end add-point
         #add-point:ui_dialog段input
         {<point name="ui_dialog.more_input"/>}
         #end add-point
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
 
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET lc_param.wc = ls_wc
               #取得條件後需要執行項目,應新增於下方adp
               #add-point:ui_dialog段qbe_select後
               {<point name="ui_dialog.qbe_select"/>}
               #end add-point
            END IF
 
         ON ACTION qbe_save
            CALL cl_qbe_save()
 
         ON ACTION batch_execute
            ACCEPT DIALOG
 
         ON ACTION qbeclear         
            CLEAR FORM
            INITIALIZE lc_param.* TO NULL
            #add-point:ui_dialog段qbeclear
            {<point name="ui_dialog.qbeclear"/>}
            #end add-point
 
         ON ACTION history_fill
            CALL cl_schedule_history_fill()
 
         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT DIALOG
         
         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT DIALOG
 
         #add-point:ui_dialog段action
         {<point name="ui_dialog.more_action"/>}
         #end add-point
 
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      #add-point:ui_dialog段exit dialog
      {<point name="process.exit_dialog"/>}
      #end add-point
 
      LET ls_js = util.JSON.stringify(lc_param)
 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      ELSE
         LET g_jobid = cl_schedule_get_jobid(g_prog)
         CASE 
            WHEN g_schedule.gzpa003 = "0"
                 CALL aglp500_process(ls_js)
            WHEN g_schedule.gzpa003 = "1"
            #    CALL cl_schedule_update_data(g_jobid,ls_js)
                 LET ls_js = aglp500_transfer_argv(ls_js)
                 CALL cl_cmdrun(ls_js)
            WHEN g_schedule.gzpa003 = "2"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
            WHEN g_schedule.gzpa003 = "3"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
         END CASE    
         LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
         INITIALIZE lc_param.*  TO NULL 
         #欄位初始資訊 
         CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
         LET gi_hiden_asign = FALSE 
         LET gi_hiden_exec = FALSE 
         LET gi_hiden_spec = FALSE 
         LET gi_hiden_exec_end = FALSE 
         CALL cl_schedule_hidden()
      END IF
   END WHILE
 
END FUNCTION
]]>
</section>
</add_points>