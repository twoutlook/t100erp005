<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="aglq840_x01" std_prog="aglq840_x01" erpver="1.0" module="AGL" ver="1" env="s" zone="t10prd" booking="N" type="X" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="X" status=""/>
    <free_style value="N" status=""/>
    <start_arg value="" status=""/>
  </other>
  <point name="component.arg.prep" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="ins_data.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[    LET g_xgrid.visible_column = NULL

    IF tm.a2 < 50 THEN
       FOR l_i = 50 TO tm.a2 STEP -1
       IF NOT cl_null(g_xgrid.visible_column)THEN       
          LET g_xgrid.visible_column = g_xgrid.visible_column CLIPPED,"|"
       END IF
       LET g_xgrid.visible_column = g_xgrid.visible_column CLIPPED ,"l_mon" CLIPPED,l_i USING '<<<<<' CLIPPED
       END FOR
    END IF
]]>
  </point>
  <point name="ins_data.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_i      LIKE type_t.num5]]>
  </point>
  <point name="sel_prep.sql.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_sql = " SELECT * FROM ", tm.a1 CLIPPED]]>
  </point>
  <section id="aglq840_x01.create_tmptable" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION aglq840_x01_create_tmptable()
 
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.before
   {<point name="create_tmp.before"/>}
   #end add-point:create_tmp.before
 
   #主報表TEMP TABLE的欄位SQL   
   LET g_sql = "glfbseq.glfb_t.glfbseq,glfbseq1.glfb_t.glfbseq1,glfb002.glfb_t.glfb002,l_glfb002_desc.type_t.chr80,glfb003.glfb_t.glfb003,l_mon1.type_t.num20_6,l_mon2.type_t.num20_6,l_mon3.type_t.num20_6,l_mon4.type_t.num20_6,l_mon5.type_t.num20_6,l_mon6.type_t.num20_6,l_mon7.type_t.num20_6,l_mon8.type_t.num20_6,l_mon9.type_t.num20_6,l_mon10.type_t.num20_6,l_mon11.type_t.num20_6,l_mon12.type_t.num20_6,l_mon13.type_t.num20_6,l_mon14.type_t.num20_6,l_mon15.type_t.num20_6,l_mon16.type_t.num20_6,l_mon17.type_t.num20_6,l_mon18.type_t.num20_6,l_mon19.type_t.num20_6,l_mon20.type_t.num20_6,l_mon21.type_t.num20_6,l_mon22.type_t.num20_6,l_mon23.type_t.num20_6,l_mon24.type_t.num20_6,l_mon25.type_t.num20_6,l_mon26.type_t.num20_6,l_mon27.type_t.num20_6,l_mon28.type_t.num20_6,l_mon29.type_t.num20_6,l_mon30.type_t.num20_6,l_mon31.type_t.num20_6,l_mon32.type_t.num20_6,l_mon33.type_t.num20_6,l_mon34.type_t.num20_6,l_mon35.type_t.num20_6,l_mon36.type_t.num20_6,l_mon37.type_t.num20_6,l_mon38.type_t.num20_6,l_mon39.type_t.num20_6,l_mon40.type_t.num20_6,l_mon41.type_t.num20_6,l_mon42.type_t.num20_6,l_mon43.type_t.num20_6,l_mon44.type_t.num20_6,l_mon45.type_t.num20_6,l_mon46.type_t.num20_6,l_mon47.type_t.num20_6,l_mon48.type_t.num20_6,l_mon49.type_t.num20_6,l_mon50.type_t.num20_6" 
   
   #建立TEMP TABLE,主報表序號1 
   IF NOT cl_xg_create_tmptable(g_sql,1) THEN
      LET g_rep_success = 'N'            
   END IF
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.after
   {<point name="create_tmp.after"/>}
   #end add-point:create_tmp.after
END FUNCTION
]]>
  </section>
  <section id="aglq840_x01.description" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000001
#+ 
#+ Filename...: aglq840_x01
#+ Description: 跨帳套跨組織損益和資產負債查詢
#+ Creator....: 01727(2015-05-27 10:47:00)
#+ Modifier...: 01727(2015-05-27 15:31:00) -SD/PR-
]]>
  </section>
  <section id="aglq840_x01.global" ver="3" status="" src="s" readonly="">
    <![CDATA[#報表 x01 樣板自動產生(Version:1)
 
IMPORT os
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
DEFINE tm RECORD
       wc STRING,                  #where condition 
       a1 LIKE type_t.chr20,         #xrea_tmp 
       a2 LIKE type_t.num5          #hide_flag
       END RECORD
 
DEFINE g_str           STRING,                      #列印條件回傳值              
       g_sql           STRING  
 
 
#add-point:自定義環境變數(Global Variable)
{<point name="global.variable"/>}
#end add-point
]]>
  </section>
  <section id="aglq840_x01.ins_data" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION aglq840_x01_ins_data()
DEFINE sr RECORD 
   glfbseq LIKE glfb_t.glfbseq, 
   glfbseq1 LIKE glfb_t.glfbseq1, 
   glfb002 LIKE glfb_t.glfb002, 
   l_glfb002_desc LIKE type_t.chr80, 
   glfb003 LIKE glfb_t.glfb003, 
   l_mon1 LIKE type_t.num20_6, 
   l_mon2 LIKE type_t.num20_6, 
   l_mon3 LIKE type_t.num20_6, 
   l_mon4 LIKE type_t.num20_6, 
   l_mon5 LIKE type_t.num20_6, 
   l_mon6 LIKE type_t.num20_6, 
   l_mon7 LIKE type_t.num20_6, 
   l_mon8 LIKE type_t.num20_6, 
   l_mon9 LIKE type_t.num20_6, 
   l_mon10 LIKE type_t.num20_6, 
   l_mon11 LIKE type_t.num20_6, 
   l_mon12 LIKE type_t.num20_6, 
   l_mon13 LIKE type_t.num20_6, 
   l_mon14 LIKE type_t.num20_6, 
   l_mon15 LIKE type_t.num20_6, 
   l_mon16 LIKE type_t.num20_6, 
   l_mon17 LIKE type_t.num20_6, 
   l_mon18 LIKE type_t.num20_6, 
   l_mon19 LIKE type_t.num20_6, 
   l_mon20 LIKE type_t.num20_6, 
   l_mon21 LIKE type_t.num20_6, 
   l_mon22 LIKE type_t.num20_6, 
   l_mon23 LIKE type_t.num20_6, 
   l_mon24 LIKE type_t.num20_6, 
   l_mon25 LIKE type_t.num20_6, 
   l_mon26 LIKE type_t.num20_6, 
   l_mon27 LIKE type_t.num20_6, 
   l_mon28 LIKE type_t.num20_6, 
   l_mon29 LIKE type_t.num20_6, 
   l_mon30 LIKE type_t.num20_6, 
   l_mon31 LIKE type_t.num20_6, 
   l_mon32 LIKE type_t.num20_6, 
   l_mon33 LIKE type_t.num20_6, 
   l_mon34 LIKE type_t.num20_6, 
   l_mon35 LIKE type_t.num20_6, 
   l_mon36 LIKE type_t.num20_6, 
   l_mon37 LIKE type_t.num20_6, 
   l_mon38 LIKE type_t.num20_6, 
   l_mon39 LIKE type_t.num20_6, 
   l_mon40 LIKE type_t.num20_6, 
   l_mon41 LIKE type_t.num20_6, 
   l_mon42 LIKE type_t.num20_6, 
   l_mon43 LIKE type_t.num20_6, 
   l_mon44 LIKE type_t.num20_6, 
   l_mon45 LIKE type_t.num20_6, 
   l_mon46 LIKE type_t.num20_6, 
   l_mon47 LIKE type_t.num20_6, 
   l_mon48 LIKE type_t.num20_6, 
   l_mon49 LIKE type_t.num20_6, 
   l_mon50 LIKE type_t.num20_6
 END RECORD
#add-point:ins_data段define
{<point name="ins_data.define"/>}
#end add-point
 
    #add-point:ins_data段before
    {<point name="ins_data.before"/>}
    #end add-point
 
    LET g_rep_success = 'Y'
 
    FOREACH aglq840_x01_curs INTO sr.*                               
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach
       {<point name="ins_data.foreach"/>}
       #end add-point
 
       #add-point:ins_data段before.save
       {<point name="ins_data.before.save"/>}
       #end add-point
 
       #EXECUTE
       EXECUTE insert_prep USING sr.glfbseq,sr.glfbseq1,sr.glfb002,sr.l_glfb002_desc,sr.glfb003,sr.l_mon1,sr.l_mon2,sr.l_mon3,sr.l_mon4,sr.l_mon5,sr.l_mon6,sr.l_mon7,sr.l_mon8,sr.l_mon9,sr.l_mon10,sr.l_mon11,sr.l_mon12,sr.l_mon13,sr.l_mon14,sr.l_mon15,sr.l_mon16,sr.l_mon17,sr.l_mon18,sr.l_mon19,sr.l_mon20,sr.l_mon21,sr.l_mon22,sr.l_mon23,sr.l_mon24,sr.l_mon25,sr.l_mon26,sr.l_mon27,sr.l_mon28,sr.l_mon29,sr.l_mon30,sr.l_mon31,sr.l_mon32,sr.l_mon33,sr.l_mon34,sr.l_mon35,sr.l_mon36,sr.l_mon37,sr.l_mon38,sr.l_mon39,sr.l_mon40,sr.l_mon41,sr.l_mon42,sr.l_mon43,sr.l_mon44,sr.l_mon45,sr.l_mon46,sr.l_mon47,sr.l_mon48,sr.l_mon49,sr.l_mon50
 
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = "aglq840_x01_execute"
          LET g_errparam.code   = SQLCA.sqlcode
          LET g_errparam.popup  = FALSE
          CALL cl_err()       
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段after_save
       {<point name="ins_data.after.save"/>}
       #end add-point
       
    END FOREACH
    
    #add-point:ins_data段after
    {<point name="ins_data.after"/>}
    #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="aglq840_x01.ins_prep" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION aglq840_x01_ins_prep()
DEFINE i              INTEGER
DEFINE l_prep_str     STRING
#add-point:ins_prep.define
{<point name="ins_prep.define"/>}
#end add-point:ins_prep.define
 
   FOR i = 1 TO g_rep_tmpname.getLength()
      CALL cl_xg_del_data(g_rep_tmpname[i])
      #LET g_sql = g_rep_ins_prep[i]              #透過此lib取得prepare字串 lib精簡
      CASE i
         WHEN 1
         #INSERT INTO PREP
         LET g_sql = " INSERT INTO ",g_rep_db CLIPPED,g_rep_tmpname[1] CLIPPED," VALUES(?,?,?,?,?,?, 
             ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?, 
             ?,?,?,?,?)"
         PREPARE insert_prep FROM g_sql
         IF STATUS THEN
            LET l_prep_str ="insert_prep",i
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = l_prep_str
            LET g_errparam.code   = status
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CALL cl_xg_drop_tmptable()
            LET g_rep_success = 'N'           
         END IF 
         #add-point:insert_prep段
         {<point name="insert_prep"/>}
         #end add-point                  
 
 
      END CASE
   END FOR
END FUNCTION
]]>
  </section>
  <section id="aglq840_x01.main" ver="3" status="" src="s" readonly="">
    <![CDATA[PUBLIC FUNCTION aglq840_x01(p_arg1,p_arg2,p_arg3)
DEFINE  p_arg1 STRING                  #tm.wc  where condition 
DEFINE  p_arg2 LIKE type_t.chr20         #tm.a1  xrea_tmp 
DEFINE  p_arg3 LIKE type_t.num5         #tm.a2  hide_flag
#add-point:init段define
{<point name="component.define"/>}
#end add-point
 
   LET tm.wc = p_arg1
   LET tm.a1 = p_arg2
   LET tm.a2 = p_arg3
 
   #add-point:報表元件參數準備
   {<point name="component.arg.prep" />}
   #end add-point
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'
   
   #報表元件代號      
   LET g_rep_code = "aglq840_x01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #create 暫存檔
   CALL aglq840_x01_create_tmptable()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #報表select欄位準備
   CALL aglq840_x01_sel_prep()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #報表insert的prepare
   CALL aglq840_x01_ins_prep()  
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #將資料存入tmptable
   CALL aglq840_x01_ins_data() 
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #將tmptable資料印出
   CALL aglq840_x01_rep_data()
 
END FUNCTION
]]>
  </section>
  <section id="aglq840_x01.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="aglq840_x01.rep_data" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION aglq840_x01_rep_data()
#add-point:rep_data.define
{<point name="rep_data.define"/>}
#end add-point:rep_data.define
 
    #add-point:rep_data.before
    {<point name="rep_data.before"/>}
    #end add-point:rep_data.before
    
    CALL cl_xg_view()
    #add-point:rep_data.after
    {<point name="rep_data.after"/>}
    #end add-point:rep_data.after
END FUNCTION
]]>
  </section>
  <section id="aglq840_x01.sel_prep" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION aglq840_x01_sel_prep()
DEFINE g_select      STRING
DEFINE g_from        STRING
DEFINE g_where       STRING
#add-point:sel_prep段define
{<point name="sel_prep.define"/>}
#end add-point
 
   #add-point:sel_prep before
   {<point name="sel_prep.before" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep g_select
   {<point name="sel_prep.g_select" mark="Y"/>}
   #end add-point
   LET g_select = " SELECT glfbseq,glfbseq1,glfb002,'',glfb003,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 
       0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"
 
   #add-point:sel_prep g_from
   {<point name="sel_prep.g_from" mark="Y"/>}
   #end add-point
    LET g_from = " FROM glfb_t"
 
   #add-point:sel_prep g_where
   {<point name="sel_prep.g_where" mark="Y"/>}
   #end add-point
    LET g_where = " WHERE " ,tm.wc CLIPPED
 
   #add-point:sel_prep g_order
   {<point name="sel_prep.g_order" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep.sql.before
   {<point name="sel_prep.sql.before" mark="Y"/>}
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("glfb_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段
 
   #add-point:sel_prep.sql.after
   {<point name="sel_prep.sql.after" mark="Y"/>}
   #end add-point
   PREPARE aglq840_x01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET g_rep_success = 'N' 
   END IF
   DECLARE aglq840_x01_curs CURSOR FOR aglq840_x01_prepare
 
END FUNCTION
]]>
  </section>
</add_points>
