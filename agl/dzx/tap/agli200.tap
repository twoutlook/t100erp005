<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="agli200" std_prog="agli200" erpver="1.0" module="AGL" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="construct.c.page1.glbd001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE  
			IF g_ooef011 <> 'CN' THEN
               LET g_qryparam.arg1 = '8027'
               CALL q_glbd001()                           #呼叫開窗
            ELSE
               CALL q_glbd001_1()
            END IF 
            DISPLAY g_qryparam.return1 TO glbd001  #顯示到畫面上

            NEXT FIELD glbd001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.glbdcrtdp" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glbdcrtdp  #顯示到畫面上

            NEXT FIELD glbdcrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.glbdcrtid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glbdcrtid  #顯示到畫面上

            NEXT FIELD glbdcrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.glbdmodid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glbdmodid  #顯示到畫面上

            NEXT FIELD glbdmodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.glbdowndp" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glbdowndp  #顯示到畫面上

            NEXT FIELD glbdowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.glbdownid" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO glbdownid  #顯示到畫面上

            NEXT FIELD glbdownid                     #返回原欄位

]]>
  </point>
  <point name="detail_show.body.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   INITIALIZE g_ref_fields TO NULL 
   LET g_ref_fields[1] = g_glbd_d[l_ac].glbd001
   CALL ap_ref_array2(g_ref_fields," SELECT glbdl003 FROM glbdl_t WHERE glbdlent = '"||g_enterprise||"' AND glbdl001 = ? AND glbdl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_glbd_d[l_ac].glbdl003 = g_rtn_fields[1] 
   DISPLAY BY NAME g_glbd_d[l_ac].glbdl003]]>
  </point>
  <point name="detail_show.body2.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glbd2_d[l_ac].glbdmodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_glbd2_d[l_ac].glbdmodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glbd2_d[l_ac].glbdmodid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glbd2_d[l_ac].glbdownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_glbd2_d[l_ac].glbdownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glbd2_d[l_ac].glbdownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glbd2_d[l_ac].glbdowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glbd2_d[l_ac].glbdowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glbd2_d[l_ac].glbdowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glbd2_d[l_ac].glbdcrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_glbd2_d[l_ac].glbdcrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glbd2_d[l_ac].glbdcrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_glbd2_d[l_ac].glbdcrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_glbd2_d[l_ac].glbdcrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_glbd2_d[l_ac].glbdcrtdp_desc
]]>
  </point>
  <point name="detail_show.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   INITIALIZE g_ref_fields TO NULL 
   LET g_ref_fields[1] = g_glbd_d[l_ac].glbd001
   CALL ap_ref_array2(g_ref_fields," SELECT glbdl003 FROM glbdl_t WHERE glbdlent = '"||g_enterprise||"' AND glbdl001 = ? AND glbdl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_glbd_d[l_ac].glbdl003 = g_rtn_fields[1] 
   DISPLAY BY NAME g_glbd_d[l_ac].glbdl003]]>
  </point>
  <point name="input.a.page1.glbd001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_glbd_d[g_detail_idx].glbd001 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glbd_d[g_detail_idx].glbd001 != g_glbd_d_t.glbd001)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM glbd_t WHERE "||"glbdent = '" ||g_enterprise|| "' AND "||"glbd001 = '"||g_glbd_d[g_detail_idx].glbd001 ||"'",'std-00004',0) THEN 
                     LET g_glbd_d[g_detail_idx].glbd001 = g_glbd_d_t.glbd001
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.glbd001_2" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_glbd2_d[g_detail_idx].glbd001 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_glbd2_d[g_detail_idx].glbd001 != g_glbd2_d_t.glbd001)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM glbd_t WHERE "||"glbdent = '" ||g_enterprise|| "' AND "||"glbd001 = '"||g_glbd2_d[g_detail_idx].glbd001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[DEFINE g_ooef011    LIKE ooef_t.ooef011]]>
  </point>
  <point name="init.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   SELECT ooef011 INTO g_ooef011 FROM ooef_t
    WHERE ooefent = g_enterprise
      AND ooef001 = g_site
   IF g_ooef011 = 'CN' THEN   
      CALL cl_set_comp_visible('glbd002',FALSE)
   ELSE
      CALL cl_set_combo_scc('glbd002',TRUE)
   END IF 
   CALL cl_set_combo_scc('glbd002','8027')]]>
  </point>
  <point name="input.a.page1.glbd003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_glbd_d[g_detail_idx].glbd003) THEN
               #重复性检查
               SELECT count(*) INTO l_cnt FROM glbd_t 
                WHERE glbdent = g_enterprise
                  AND glbd003 = g_glbd_d[g_detail_idx].glbd003
               IF l_cmd = 'a' OR (l_cmd = 'u' AND g_glbd_d[g_detail_idx].glbd003 != g_glbd_d_t.glbd003) THEN              
                  IF l_cnt > 0  THEN
                     CALL cl_err(g_glbd_d[g_detail_idx].glbd003,'agl-00174',0)
                     LET g_glbd_d[g_detail_idx].glbd003 = g_glbd_d_t.glbd003
                     NEXT FIELD glbd003
                  END IF
               END IF                                  
            END IF ]]>
  </point>
  <point name="input.a.page1.glbdl003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.body.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  #删除其他语言别的多语言资料                
                  DELETE FROM glbdl_t WHERE glbdlent = g_enterprise
                                        AND glbdl001 = g_glbd_d[l_ac].glbd001 
                  IF SQLCA.sqlcode THEN
                     CALL cl_err("glbdl_t",SQLCA.sqlcode,1)
                     CALL s_transaction_end('N','0')
                     CANCEL DELETE 
                  END IF                       ]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF cl_null(g_glbd_d[g_detail_idx].glbd003) THEN
                  SELECT MAX(glbd003) INTO g_glbd_d[g_detail_idx].glbd003
                    FROM glbd_t

                  IF cl_null(g_glbd_d[g_detail_idx].glbd003) THEN
                     LET g_glbd_d[g_detail_idx].glbd003 = 1
                  ELSE
                     LET g_glbd_d[g_detail_idx].glbd003= g_glbd_d[g_detail_idx].glbd003 + 1
                  END IF
               END IF
]]>
  </point>
  <point name="input.detail_input.page1.update_item" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_glbd_d[l_ac].glbd001) THEN
                  CALL n_glbdl(g_glbd_d[l_ac].glbd001)
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_glbd_d[l_ac].glbd001
                  CALL ap_ref_array2(g_ref_fields," SELECT glbdl003 FROM glbdl_t WHERE glbdlent = '"
                      ||g_enterprise||"' AND glbdl001 = ? AND glbdl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
                  LET g_glbd_d[l_ac].glbdl003 = g_rtn_fields[1]
                  DISPLAY BY NAME g_glbd_d[l_ac].glbdl003
               END IF          ]]>
  </point>
  <section id="agli200.b_fill" ver="1" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION agli200_b_fill(p_wc2)              #BODY FILL UP
   {<Local define>}
   DEFINE p_wc2           STRING
   {</Local define>}
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point
   
   IF cl_null(p_wc2) THEN
      LET p_wc2 = " 1=1"
   END IF
   
   #add-point:b_fill段sql之前
   {<point name="b_fill.sql_before"/>}
   #end add-point
 
   LET g_sql = "SELECT  UNIQUE glbdstus,glbd001,'',glbd002,glbd003,glbd004,'',glbdmodid,'',glbdmoddt, 
       glbdownid,'',glbdowndp,'',glbdcrtid,'',glbdcrtdp,'',glbdcrtdt FROM glbd_t",
               " LEFT JOIN glbdl_t ON glbd001 = glbdl001 AND glbdl002 = '",g_lang,"'",
               " WHERE glbdent= ? AND 1=1 AND ", p_wc2
    
   LET g_sql = g_sql, " ORDER BY glbd_t.glbd001"
  
   #add-point:b_fill段sql之後
   {<point name="b_fill.sql_after"/>}
   #end add-point
  
   PREPARE agli200_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR agli200_pb
   
   OPEN b_fill_curs USING g_enterprise
 
   CALL g_glbd_d.clear()
   CALL g_glbd2_d.clear()   
 
 
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs INTO g_glbd_d[l_ac].glbdstus,g_glbd_d[l_ac].glbd001,g_glbd_d[l_ac].glbdl003,g_glbd_d[l_ac].glbd002, 
       g_glbd_d[l_ac].glbd003,g_glbd_d[l_ac].glbd004,g_glbd2_d[l_ac].glbd001,g_glbd2_d[l_ac].glbdmodid, 
       g_glbd2_d[l_ac].glbdmodid_desc,g_glbd2_d[l_ac].glbdmoddt,g_glbd2_d[l_ac].glbdownid,g_glbd2_d[l_ac].glbdownid_desc, 
       g_glbd2_d[l_ac].glbdowndp,g_glbd2_d[l_ac].glbdowndp_desc,g_glbd2_d[l_ac].glbdcrtid,g_glbd2_d[l_ac].glbdcrtid_desc, 
       g_glbd2_d[l_ac].glbdcrtdp,g_glbd2_d[l_ac].glbdcrtdp_desc,g_glbd2_d[l_ac].glbdcrtdt
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point
      
      CALL agli200_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   IF l_ac > g_max_rec AND g_error_show = 1 THEN
      CALL cl_err("glbd_t",9035,1)
   END IF 
   LET g_error_show = 0
   
 
  
   
   CALL g_glbd_d.deleteElement(g_glbd_d.getLength())   
   CALL g_glbd2_d.deleteElement(g_glbd2_d.getLength())
 
 
   
   #將key欄位填到每個page
   FOR l_ac = 1 TO g_glbd_d.getLength()
      LET g_glbd2_d[l_ac].glbd001 = g_glbd_d[l_ac].glbd001 
 
 
   END FOR
   
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.others.fill"/>}
   #end add-point
 
   LET g_detail_cnt = l_ac - 1
   DISPLAY g_detail_cnt TO FORMONLY.cnt
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE agli200_pb
   
END FUNCTION
]]>
  </section>
  <section id="agli200.default_search" ver="1" status="" src="s">
    <![CDATA[#+ 外部參數搜尋, 施工中
PRIVATE FUNCTION agli200_default_search()
   {<Local define>}
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   {</Local define>}
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " glbd001 = '", g_argv[1], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc2 = ls_wc
   ELSE
      LET g_wc2 = " 1=1"
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="agli200.delete" ver="1" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION agli200_delete()
   DEFINE li_ac LIKE type_t.num5
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point 
   
   IF NOT cl_ask_delete() THEN
      LET INT_FLAG = 1 #不刪除
   ELSE
      LET INT_FLAG = 0 #要刪除
   END IF
   
   LET li_ac = ARR_CURR()
   
   CALL s_transaction_begin()  
 
   #add-point:delete段刪除前
   {<point name="delete.b_delete" mark="Y"/>}
   #end add-point 
   DELETE FROM glbd_t 
         WHERE glbd001 = g_glbd_d[li_ac].glbd001
 
   #add-point:delete段刪除中
   {<point name="delete.m_delete"/>}
   #end add-point 
   IF SQLCA.sqlcode THEN
      CALL cl_err("glbd_t",SQLCA.sqlcode,1) 
      CALL s_transaction_end('N','0')
   ELSE
      CALL s_transaction_end('Y','0')
   END IF
   #add-point:delete段刪除後
   {<point name="delete.a_delete"/>}
   #end add-point 
   
END FUNCTION
]]>
  </section>
  <section id="agli200.delete_b" ver="1" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION agli200_delete_b(ps_table,ps_keys_bak,ps_page)
   {<Local define>}
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "glbd_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN
   
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point     
   
      DELETE FROM glbd_t
       WHERE glbdent = g_enterprise AND
         glbd001 = ps_keys_bak[1]
 
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point  
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point
      
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
  </section>
  <section id="agli200.description" ver="1" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(版次:1) Build-000041
#+ 
#+ Filename...: agli200
#+ Description: 間接法群組維護作業
#+ Creator....: 02298(13/12/16)
#+ Modifier...: 02298(13/12/16)
#+ Buildtype..: 應用 i02 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="agli200.detail_show" ver="1" status="" src="s">
    <![CDATA[#+ 顯示相關資料
PRIVATE FUNCTION agli200_detail_show()
   #add-point:show段define
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   
   
   #帶出公用欄位reference值page1
   
    
   #帶出公用欄位reference值page2
   #此段落由子樣板a12產生
      #LET g_glbd2_d[l_ac].glbdownid_desc = cl_get_username(g_glbd2_d[l_ac].glbdownid)
      #LET g_glbd2_d[l_ac].glbdowndp_desc = cl_get_deptname(g_glbd2_d[l_ac].glbdowndp)
      #LET g_glbd2_d[l_ac].glbdcrtid_desc = cl_get_username(g_glbd2_d[l_ac].glbdcrtid)
      #LET g_glbd2_d[l_ac].glbdcrtdp_desc = cl_get_deptname(g_glbd2_d[l_ac].glbdcrtdp)
      #LET g_glbd2_d[l_ac].glbdmodid_desc = cl_get_username(g_glbd2_d[l_ac].glbdmodid)
      ##LET g_glbd_d[l_ac].glbdcnfid_desc = cl_get_deptname(g_glbd_d[l_ac].glbdcnfid)
      ##LET g_glbd_d[l_ac].glbdpstid_desc = cl_get_deptname(g_glbd_d[l_ac].glbdpstid)
      
 
 
 
 
   
   #讀入ref值
   #add-point:show段單身reference
   {<point name="detail_show.reference"/>}
   #end add-point
   
   #add-point:show段單身reference
   {<point name="detail_show.body2.reference"/>}
   #end add-point
 
 
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="agli200.global" ver="1" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
{<Module define>}
 
#單身 type 宣告
PRIVATE TYPE type_g_glbd_d RECORD
       glbdstus LIKE glbd_t.glbdstus, 
   glbd001 LIKE glbd_t.glbd001, 
   glbdl003 LIKE glbdl_t.glbdl003, 
   glbd002 LIKE glbd_t.glbd002, 
   glbd003 LIKE glbd_t.glbd003, 
   glbd004 LIKE glbd_t.glbd004
       END RECORD
PRIVATE TYPE type_g_glbd2_d RECORD
       glbd001 LIKE glbd_t.glbd001, 
   glbdmodid LIKE glbd_t.glbdmodid, 
   glbdmodid_desc LIKE type_t.chr500, 
   glbdmoddt DATETIME YEAR TO SECOND, 
   glbdownid LIKE glbd_t.glbdownid, 
   glbdownid_desc LIKE type_t.chr500, 
   glbdowndp LIKE glbd_t.glbdowndp, 
   glbdowndp_desc LIKE type_t.chr500, 
   glbdcrtid LIKE glbd_t.glbdcrtid, 
   glbdcrtid_desc LIKE type_t.chr500, 
   glbdcrtdp LIKE glbd_t.glbdcrtdp, 
   glbdcrtdp_desc LIKE type_t.chr500, 
   glbdcrtdt DATETIME YEAR TO SECOND
       END RECORD
 
 
 
DEFINE g_detail_multi_table_t    RECORD
      glbdl001 LIKE glbdl_t.glbdl001,
      glbdl002 LIKE glbdl_t.glbdl002,
      glbdl003 LIKE glbdl_t.glbdl003
      END RECORD
 
#模組變數(Module Variables)
DEFINE g_glbd_d          DYNAMIC ARRAY OF type_g_glbd_d
DEFINE g_glbd_d_t        type_g_glbd_d
DEFINE g_glbd2_d   DYNAMIC ARRAY OF type_g_glbd2_d
DEFINE g_glbd2_d_t type_g_glbd2_d
 
 
      
DEFINE g_wc2                STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num5              #目前處理的ARRAY CNT 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_temp_idx           LIKE type_t.num5              #單身 所在筆數(暫存用)
DEFINE g_detail_idx         LIKE type_t.num5              #單身 所在筆數(所有資料)
DEFINE g_detail_cnt         LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_chk                BOOLEAN
DEFINE g_aw                 STRING                        #確定當下點擊的單身
 
#多table用wc
DEFINE g_wc_table           STRING
 
 
{</Module define>}
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="agli200.init" ver="1" status="" src="s">
    <![CDATA[#+ 畫面資料初始化
PRIVATE FUNCTION agli200_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point   
   
   
   
   LET g_error_show = 1
   
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
   CALL agli200_default_search()
   
END FUNCTION
]]>
  </section>
  <section id="agli200.insert" ver="1" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION agli200_insert()
   {<Local define>}
   DEFINE li_ac LIKE type_t.num5
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:delete段define
   {<point name="insert.define"/>}
   #end add-point 
   
   #輸入前動作  
   LET li_ac = l_ac 
   LET l_ac = 1   
   LET g_before_input_done = FALSE                                        
   CALL agli200_set_entry_b("a")  
   
   CALL agli200_set_no_entry_b("a")                                          
   LET g_before_input_done = TRUE                                            
   
   #append欄位         
      
 
      
 
 
   
   #add-point:insert段before insert
   {<point name="insert.before_insert"/>}
   #end add-point  
 
   #資料輸入
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM) 
      INPUT g_glbd_d[1].* FROM s_detail1[1].*
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         BEFORE INPUT
         
      END INPUT
      
 
      
      BEFORE DIALOG 
   
   END DIALOG
   
   #輸入後動作
   IF INT_FLAG THEN
      CALL cl_err("",9001,0)
      LET INT_FLAG = 1
      RETURN
   END IF
   
   CALL s_transaction_begin()                    
   
   #add-point:單身新增前
   {<point name="insert.b_insert"/>}
   #end add-point
   
   
   #add-point:單身新增後
   {<point name="insert.a_insert"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="agli200.insert_b" ver="1" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION agli200_insert_b(ps_table,ps_keys,ps_page)
   {<Local define>}
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "glbd_t,"
   #IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      
      #add-point:insert_b段新增前
      {<point name="insert_b.b_insert" mark="Y"/>}
      #end add-point    
      INSERT INTO glbd_t
                  (glbdent,
                   glbd001
                   ,glbdstus,glbd002,glbd003,glbd004,glbdmodid,glbdmoddt,glbdownid,glbdowndp,glbdcrtid,glbdcrtdp,glbdcrtdt) 
            VALUES(g_enterprise,
                   ps_keys[1]
                   ,g_glbd_d[l_ac].glbdstus,g_glbd_d[l_ac].glbd002,g_glbd_d[l_ac].glbd003,g_glbd_d[l_ac].glbd004, 
                       g_glbd2_d[l_ac].glbdmodid,g_glbd2_d[l_ac].glbdmoddt,g_glbd2_d[l_ac].glbdownid, 
                       g_glbd2_d[l_ac].glbdowndp,g_glbd2_d[l_ac].glbdcrtid,g_glbd2_d[l_ac].glbdcrtdp, 
                       g_glbd2_d[l_ac].glbdcrtdt)
      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("glbd_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.a_insert"/>}
      #end add-point    
   #END IF
   
 
   
END FUNCTION
]]>
  </section>
  <section id="agli200.link_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動單身idx
PRIVATE FUNCTION agli200_link_b(ps_table,pi_idx)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   DEFINE pi_idx   INTEGER
   #add-point:link_b段define
   {<point name="link_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   IF ls_group.getIndexOf(ps_table,1) THEN
 
   END IF
   
 
 
END FUNCTION
]]>
  </section>
  <section id="agli200.lock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION agli200_lock_b(ps_table)
 
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL agli200_b_fill(g_wc2)
   
   #鎖定整組table
   #LET ls_group = ""
   #僅鎖定自身table
   LET ls_group = "glbd_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN agli200_bcl USING g_enterprise,
                                       g_glbd_d[g_detail_idx].glbd001
                                       
      IF SQLCA.sqlcode THEN
         CALL cl_err("agli200_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   
   END IF
                                    
 
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="agli200.main" ver="1" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("agl","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   #LET g_forupd_sql = ""
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   #LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   #DECLARE agli200_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_agli200 WITH FORM cl_ap_formpath("agl",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL agli200_init()   
 
      #進入選單 Menu (="N")
      CALL agli200_ui_dialog() 
	  
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_agli200
      
   END IF 
   
   #CLOSE agli200_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="agli200.modify" ver="1" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION agli200_modify()
   {<Local define>}
   DEFINE  l_cmd                  LIKE type_t.chr1
   DEFINE  l_ac_t                 LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                    LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                  LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw              LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert         LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete         LIKE type_t.num5                #可刪除否  
   DEFINE  l_count                LIKE type_t.num5
   DEFINE  l_i                    LIKE type_t.num5
   DEFINE  ls_return              STRING
   DEFINE  l_var_keys             DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys           DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                 DYNAMIC ARRAY OF STRING
   DEFINE  l_fields               DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak         DYNAMIC ARRAY OF STRING
   DEFINE  li_reproduce           LIKE type_t.num5
   DEFINE  li_reproduce_target    LIKE type_t.num5
   DEFINE  lb_reproduce           BOOLEAN
   {</Local define>}
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point 
   
   LET g_action_choice = ""
   
   LET g_qryparam.state = "i"
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
 
   #add-point:modify段define_sql
   {<point name="modify.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT glbdstus,glbd001,'',glbd002,glbd003,glbd004,'',glbdmodid,'',glbdmoddt, 
       glbdownid,'',glbdowndp,'',glbdcrtid,'',glbdcrtdp,'',glbdcrtdt FROM glbd_t WHERE glbdent=? AND  
       glbd001=? FOR UPDATE"
   #add-point:modify段define_sql
   {<point name="modify.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE agli200_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
   
 
   
   LET INT_FLAG = FALSE
   LET lb_reproduce = FALSE
 
   #add-point:modify段修改前
   {<point name="modify.before_input"/>}
   #end add-point
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #Page1 預設值產生於此處
      INPUT ARRAY g_glbd_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
 
 
         ON ACTION update_item
            #add-point:ON ACTION update_item
            {<point name="input.detail_input.page1.update_item" />}
            #END add-point
 
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_glbd_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL agli200_b_fill(g_wc2)
            LET g_detail_cnt = g_glbd_d.getLength()
         
         BEFORE ROW
            #add-point:modify段before row
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            DISPLAY g_glbd_d.getLength() TO FORMONLY.cnt
         
            CALL s_transaction_begin()
            LET g_detail_cnt = g_glbd_d.getLength()
            
            IF g_detail_cnt >= l_ac 
               AND g_glbd_d[l_ac].glbd001 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_glbd_d_t.* = g_glbd_d[l_ac].*  #BACKUP
               IF NOT agli200_lock_b("glbd_t") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH agli200_bcl INTO g_glbd_d[l_ac].glbdstus,g_glbd_d[l_ac].glbd001,g_glbd_d[l_ac].glbdl003, 
                      g_glbd_d[l_ac].glbd002,g_glbd_d[l_ac].glbd003,g_glbd_d[l_ac].glbd004,g_glbd2_d[l_ac].glbd001, 
                      g_glbd2_d[l_ac].glbdmodid,g_glbd2_d[l_ac].glbdmodid_desc,g_glbd2_d[l_ac].glbdmoddt, 
                      g_glbd2_d[l_ac].glbdownid,g_glbd2_d[l_ac].glbdownid_desc,g_glbd2_d[l_ac].glbdowndp, 
                      g_glbd2_d[l_ac].glbdowndp_desc,g_glbd2_d[l_ac].glbdcrtid,g_glbd2_d[l_ac].glbdcrtid_desc, 
                      g_glbd2_d[l_ac].glbdcrtdp,g_glbd2_d[l_ac].glbdcrtdp_desc,g_glbd2_d[l_ac].glbdcrtdt 

                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_glbd_d_t.glbd001,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  CALL agli200_detail_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            LET g_detail_multi_table_t.glbdl001 = g_glbd_d[l_ac].glbd001
LET g_detail_multi_table_t.glbdl002 = g_dlang
LET g_detail_multi_table_t.glbdl003 = g_glbd_d[l_ac].glbdl003
 
            #其他table進行lock
                        INITIALIZE l_var_keys TO NULL 
            INITIALIZE l_field_keys TO NULL 
            LET l_field_keys[01] = 'glbdl001'
            LET l_var_keys[01] = g_glbd_d[l_ac].glbd001
            LET l_field_keys[02] = 'glbdl002'
            LET l_var_keys[02] = g_dlang
            IF NOT cl_multitable_lock(l_var_keys,l_field_keys,'glbdl_t') THEN
               RETURN 
            END IF 
 
        
         BEFORE INSERT
            
            CALL s_transaction_begin()
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_glbd_d_t.* TO NULL
            INITIALIZE g_glbd_d[l_ac].* TO NULL 
                  LET g_glbd_d[l_ac].glbdstus = "Y"
      LET g_glbd_d[l_ac].glbd004 = "1"
 
 
            LET g_glbd_d_t.* = g_glbd_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL agli200_set_entry_b("a")
            CALL agli200_set_no_entry_b("a")
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_glbd_d[li_reproduce_target].* = g_glbd_d[li_reproduce].*
               LET g_glbd2_d[li_reproduce_target].* = g_glbd2_d[li_reproduce].*
 
               LET g_glbd_d[g_glbd_d.getLength()].glbd001 = NULL
 
            END IF
            #公用欄位給值(單身)
            #此段落由子樣板a14產生    
      LET g_glbd2_d[l_ac].glbdownid = g_user
      LET g_glbd2_d[l_ac].glbdowndp = g_dept
      LET g_glbd2_d[l_ac].glbdcrtid = g_user
      LET g_glbd2_d[l_ac].glbdcrtdp = g_dept 
      LET g_glbd2_d[l_ac].glbdcrtdt = cl_get_current()
      LET g_glbd2_d[l_ac].glbdmodid = ""
      LET g_glbd2_d[l_ac].glbdmoddt = ""
      #LET g_glbd_d[l_ac].glbdstus = ""
 
 
            LET g_detail_multi_table_t.glbdl001 = g_glbd_d[l_ac].glbd001
LET g_detail_multi_table_t.glbdl002 = g_dlang
LET g_detail_multi_table_t.glbdl003 = g_glbd_d[l_ac].glbdl003
 
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM glbd_t 
             WHERE glbdent = g_enterprise AND glbd001 = g_glbd_d[l_ac].glbd001
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_glbd_d[g_detail_idx].glbd001
               CALL agli200_insert_b('glbd_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_glbd_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("glbd_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL agli200_b_fill(g_wc2)
               #資料多語言用-增/改
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_glbd_d[l_ac].glbd001 = g_detail_multi_table_t.glbdl001 AND
         g_glbd_d[l_ac].glbdl003 = g_detail_multi_table_t.glbdl003 THEN
         ELSE 
            LET l_var_keys[01] = g_glbd_d[l_ac].glbd001
            LET l_field_keys[01] = 'glbdl001'
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'glbdl002'
            LET l_vars[01] = g_glbd_d[l_ac].glbdl003
            LET l_fields[01] = 'glbdl003'
            LET l_vars[02] = g_enterprise 
            LET l_fields[02] = 'glbdlent'
            LET l_var_keys_bak[01] = g_detail_multi_table_t.glbdl001
            LET l_var_keys_bak[02] = g_detail_multi_table_t.glbdl002
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'glbdl_t')
         END IF 
 
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_detail_cnt = g_detail_cnt + 1
               
               LET g_wc2 = g_wc2, " OR (glbd001 = '", g_glbd_d[l_ac].glbd001, "' "
 
                                  ,")"
            END IF                
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_glbd_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_glbd_d.deleteElement(l_ac)
               NEXT FIELD glbd001
            END IF
            IF g_glbd_d[l_ac].glbd001 IS NOT NULL
 
               THEN     
			   
               #add-point:單身刪除ask前
               {<point name="input.body.b_delete_ask"/>}
               #end add-point   
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point   
               
               DELETE FROM glbd_t
                WHERE glbdent = g_enterprise AND 
                      glbd001 = g_glbd_d_t.glbd001
 
                      
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point  
                      
               IF SQLCA.sqlcode THEN
                  CALL cl_err("glbd_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_detail_cnt = g_detail_cnt-1
                  INITIALIZE l_var_keys_bak TO NULL 
                  INITIALIZE l_field_keys TO NULL 
                  LET l_field_keys[01] = 'glbdl001'
                  LET l_field_keys[02] = 'glbdl002'
                  LET l_var_keys_bak[01] = g_detail_multi_table_t.glbdl001
                  LET l_var_keys_bak[02] = g_detail_multi_table_t.glbdl002
                  CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'glbdl_t')
 
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE agli200_bcl
               LET l_count = g_glbd_d.getLength()
            END IF 
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_glbd_d[g_detail_idx].glbd001
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL agli200_delete_b('glbd_t',gs_keys,"'1'")
 
         #---------------------<  Detail: page1  >---------------------
         #----<<glbdstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD glbdstus
            #add-point:BEFORE FIELD glbdstus
            {<point name="input.b.page1.glbdstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glbdstus
            
            #add-point:AFTER FIELD glbdstus
            {<point name="input.a.page1.glbdstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE glbdstus
            #add-point:ON CHANGE glbdstus
            {<point name="input.g.page1.glbdstus" />}
            #END add-point
 
         #----<<glbd001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD glbd001
            #add-point:BEFORE FIELD glbd001
            {<point name="input.b.page1.glbd001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glbd001
            
            #add-point:AFTER FIELD glbd001
            {<point name="input.a.page1.glbd001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE glbd001
            #add-point:ON CHANGE glbd001
            {<point name="input.g.page1.glbd001" />}
            #END add-point
 
         #----<<glbdl003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD glbdl003
            #add-point:BEFORE FIELD glbdl003
            {<point name="input.b.page1.glbdl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glbdl003
            
            #add-point:AFTER FIELD glbdl003
            {<point name="input.a.page1.glbdl003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE glbdl003
            #add-point:ON CHANGE glbdl003
            {<point name="input.g.page1.glbdl003" />}
            #END add-point
 
         #----<<glbd002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD glbd002
            #add-point:BEFORE FIELD glbd002
            {<point name="input.b.page1.glbd002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glbd002
            
            #add-point:AFTER FIELD glbd002
            {<point name="input.a.page1.glbd002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE glbd002
            #add-point:ON CHANGE glbd002
            {<point name="input.g.page1.glbd002" />}
            #END add-point
 
         #----<<glbd003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD glbd003
            #add-point:BEFORE FIELD glbd003
            {<point name="input.b.page1.glbd003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glbd003
            
            #add-point:AFTER FIELD glbd003
            {<point name="input.a.page1.glbd003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE glbd003
            #add-point:ON CHANGE glbd003
            {<point name="input.g.page1.glbd003" />}
            #END add-point
 
         #----<<glbd004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD glbd004
            #add-point:BEFORE FIELD glbd004
            {<point name="input.b.page1.glbd004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glbd004
            
            #add-point:AFTER FIELD glbd004
            {<point name="input.a.page1.glbd004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE glbd004
            #add-point:ON CHANGE glbd004
            {<point name="input.g.page1.glbd004" />}
            #END add-point
 
 
         #---------------------<  Detail: page1  >---------------------
         #----<<glbdstus>>----
         #Ctrlp:input.c.page1.glbdstus
         ON ACTION controlp INFIELD glbdstus
            #add-point:ON ACTION controlp INFIELD glbdstus
            {<point name="input.c.page1.glbdstus" />}
            #END add-point
 
         #----<<glbd001>>----
         #Ctrlp:input.c.page1.glbd001
         ON ACTION controlp INFIELD glbd001
            #add-point:ON ACTION controlp INFIELD glbd001
            {<point name="input.c.page1.glbd001" />}
            #END add-point
 
         #----<<glbdl003>>----
         #Ctrlp:input.c.page1.glbdl003
         ON ACTION controlp INFIELD glbdl003
            #add-point:ON ACTION controlp INFIELD glbdl003
            {<point name="input.c.page1.glbdl003" />}
            #END add-point
 
         #----<<glbd002>>----
         #Ctrlp:input.c.page1.glbd002
         ON ACTION controlp INFIELD glbd002
            #add-point:ON ACTION controlp INFIELD glbd002
            {<point name="input.c.page1.glbd002" />}
            #END add-point
 
         #----<<glbd003>>----
         #Ctrlp:input.c.page1.glbd003
         ON ACTION controlp INFIELD glbd003
            #add-point:ON ACTION controlp INFIELD glbd003
            {<point name="input.c.page1.glbd003" />}
            #END add-point
 
         #----<<glbd004>>----
         #Ctrlp:input.c.page1.glbd004
         ON ACTION controlp INFIELD glbd004
            #add-point:ON ACTION controlp INFIELD glbd004
            {<point name="input.c.page1.glbd004" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_glbd_d[l_ac].* = g_glbd_d_t.*
               CLOSE agli200_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_glbd_d[l_ac].glbd001,-263,1)
               LET g_glbd_d[l_ac].* = g_glbd_d_t.*
            ELSE
               
               #寫入修改者/修改日期資訊(單身)
               LET g_glbd2_d[l_ac].glbdmodid = g_user 
LET g_glbd2_d[l_ac].glbdmoddt = cl_get_current()
 
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE glbd_t SET (glbdstus,glbd001,glbd002,glbd003,glbd004,glbdmodid,glbdmoddt,glbdownid, 
                   glbdowndp,glbdcrtid,glbdcrtdp,glbdcrtdt) = (g_glbd_d[l_ac].glbdstus,g_glbd_d[l_ac].glbd001, 
                   g_glbd_d[l_ac].glbd002,g_glbd_d[l_ac].glbd003,g_glbd_d[l_ac].glbd004,g_glbd2_d[l_ac].glbdmodid, 
                   g_glbd2_d[l_ac].glbdmoddt,g_glbd2_d[l_ac].glbdownid,g_glbd2_d[l_ac].glbdowndp,g_glbd2_d[l_ac].glbdcrtid, 
                   g_glbd2_d[l_ac].glbdcrtdp,g_glbd2_d[l_ac].glbdcrtdt)
                WHERE glbdent = g_enterprise AND
                  glbd001 = g_glbd_d_t.glbd001 #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("glbd_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                    WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("glbd_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_glbd_d[g_detail_idx].glbd001
               LET gs_keys_bak[1] = g_glbd_d_t.glbd001
               CALL agli200_update_b('glbd_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                              INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_glbd_d[l_ac].glbd001 = g_detail_multi_table_t.glbdl001 AND
         g_glbd_d[l_ac].glbdl003 = g_detail_multi_table_t.glbdl003 THEN
         ELSE 
            LET l_var_keys[01] = g_glbd_d[l_ac].glbd001
            LET l_field_keys[01] = 'glbdl001'
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'glbdl002'
            LET l_vars[01] = g_glbd_d[l_ac].glbdl003
            LET l_fields[01] = 'glbdl003'
            LET l_vars[02] = g_enterprise 
            LET l_fields[02] = 'glbdlent'
            LET l_var_keys_bak[01] = g_detail_multi_table_t.glbdl001
            LET l_var_keys_bak[02] = g_detail_multi_table_t.glbdl002
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'glbdl_t')
         END IF 
 
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            CALL agli200_unlock_b("glbd_t")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            CALL cl_multitable_unlock()
            
         AFTER INPUT
            #add-point:單身input後
            {<point name="input.body.a_input"/>}
            #end add-point
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_glbd_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_glbd_d.getLength()+1
            
      END INPUT
      
 
      
      DISPLAY ARRAY g_glbd2_d TO s_detail2.*
         ATTRIBUTES(COUNT=g_detail_cnt)  
      
         BEFORE DISPLAY 
            CALL agli200_b_fill(g_wc2)
            CALL FGL_SET_ARR_CURR(g_detail_idx)
      
         BEFORE ROW
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = g_detail_idx
            LET g_temp_idx = l_ac
            DISPLAY g_detail_idx TO FORMONLY.idx
            CALL cl_show_fld_cont() 
            
         #add-point:page2自定義行為
         {<point name="input.body2.action"/>}
         #end add-point
            
      END DISPLAY
 
 
      
      #add-point:before_more_input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         IF g_temp_idx > 0 THEN
            LET l_ac = g_temp_idx
            CALL DIALOG.setCurrentRow("s_detail1",l_ac)
            LET g_temp_idx = 1
         END IF
         LET g_curr_diag = ui.DIALOG.getCurrent()
         #add-point:before_dialog
         {<point name="input.before_dialog"/>}
         #end add-point
         CASE g_aw
            WHEN "s_detail1"
               NEXT FIELD glbdstus
            WHEN "s_detail2"
               NEXT FIELD glbd001_2
 
 
         END CASE
   
      ON ACTION accept
         ACCEPT DIALOG
      
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) 
              RETURNING g_fld_name,g_frm_name 
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang) 
           
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   
   END DIALOG 
   
   #add-point:modify段修改後
   {<point name="modify.after_input"/>}
   #end add-point
 
   CLOSE agli200_bcl
   CALL s_transaction_end('Y','0')
   
END FUNCTION
]]>
  </section>
  <section id="agli200.modify_detail_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身輸入判定
PRIVATE FUNCTION agli200_modify_detail_chk(ps_record)
   {<Local define>}
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   {</Local define>}
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "glbdstus"
      WHEN "s_detail2"
         LET ls_return = "glbd001_2"
 
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
]]>
  </section>
  <section id="agli200.other_dialog" ver="1" status="" src="s">
    <![CDATA[ 
]]>
  </section>
  <section id="agli200.other_function" ver="1" status="" src="s">
    <![CDATA[   
{<point name="other.function"/>}
]]>
  </section>
  <section id="agli200.query" ver="1" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION agli200_query()
   {<Local define>}
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   {</Local define>}
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point 
   
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_glbd_d.clear()
   
   LET g_qryparam.state = "c"
   
   #wc備份
   LET ls_wc = g_wc2
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      CONSTRUCT g_wc2 ON glbdstus,glbd001,glbdl003,glbd002,glbd003,glbd004,glbdmodid,glbdmoddt,glbdownid, 
          glbdowndp,glbdcrtid,glbdcrtdp,glbdcrtdt 
 
         FROM s_detail1[1].glbdstus,s_detail1[1].glbd001,s_detail1[1].glbdl003,s_detail1[1].glbd002, 
             s_detail1[1].glbd003,s_detail1[1].glbd004,s_detail2[1].glbdmodid,s_detail2[1].glbdmoddt, 
             s_detail2[1].glbdownid,s_detail2[1].glbdowndp,s_detail2[1].glbdcrtid,s_detail2[1].glbdcrtdp, 
             s_detail2[1].glbdcrtdt 
      
         #此段落由子樣板a11產生
         ##----<<glbdownid>>----
         #ON ACTION controlp INFIELD glbdownid
         #   CALL q_common('','glbdownid',TRUE,FALSE,g_glbd2_d[1].glbdownid) RETURNING ls_return
         #   DISPLAY ls_return TO glbdownid
         #   NEXT FIELD glbdownid  
         #
         ##----<<glbdowndp>>----
         #ON ACTION controlp INFIELD glbdowndp
         #   CALL q_common('','glbdowndp',TRUE,FALSE,g_glbd2_d[1].glbdowndp) RETURNING ls_return
         #   DISPLAY ls_return TO glbdowndp
         #   NEXT FIELD glbdowndp
         #
         ##----<<glbdcrtid>>----
         #ON ACTION controlp INFIELD glbdcrtid
         #   CALL q_common('','glbdcrtid',TRUE,FALSE,g_glbd2_d[1].glbdcrtid) RETURNING ls_return
         #   DISPLAY ls_return TO glbdcrtid
         #   NEXT FIELD glbdcrtid
         #
         ##----<<glbdcrtdp>>----
         #ON ACTION controlp INFIELD glbdcrtdp
         #   CALL q_common('','glbdcrtdp',TRUE,FALSE,g_glbd2_d[1].glbdcrtdp) RETURNING ls_return
         #   DISPLAY ls_return TO glbdcrtdp
         #   NEXT FIELD glbdcrtdp
         #
         ##----<<glbdmodid>>----
         #ON ACTION controlp INFIELD glbdmodid
         #   CALL q_common('','glbdmodid',TRUE,FALSE,g_glbd2_d[1].glbdmodid) RETURNING ls_return
         #   DISPLAY ls_return TO glbdmodid
         #   NEXT FIELD glbdmodid
         #
         ##----<<glbdcnfid>>----
         ##ON ACTION controlp INFIELD glbdcnfid
         ##   CALL q_common('','glbdcnfid',TRUE,FALSE,g_glbd_d[1].glbdcnfid) RETURNING ls_return
         ##   DISPLAY ls_return TO glbdcnfid
         ##   NEXT FIELD glbdcnfid
         #
         ##----<<glbdpstid>>----
         ##ON ACTION controlp INFIELD glbdpstid
         ##   CALL q_common('','glbdpstid',TRUE,FALSE,g_glbd_d[1].glbdpstid) RETURNING ls_return
         ##   DISPLAY ls_return TO glbdpstid
         ##   NEXT FIELD glbdpstid
         
         ##----<<glbdcrtdt>>----
         AFTER FIELD glbdcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<glbdmoddt>>----
         AFTER FIELD glbdmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<glbdcnfdt>>----
         #AFTER FIELD glbdcnfdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<glbdpstdt>>----
         #AFTER FIELD glbdpstdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
      
         #---------------------<  Detail: page1  >---------------------
         #----<<glbdstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD glbdstus
            #add-point:BEFORE FIELD glbdstus
            {<point name="query.b.page1.glbdstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glbdstus
            
            #add-point:AFTER FIELD glbdstus
            {<point name="query.a.page1.glbdstus" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.glbdstus
         ON ACTION controlp INFIELD glbdstus
            #add-point:ON ACTION controlp INFIELD glbdstus
            {<point name="query.c.page1.glbdstus" />}
            #END add-point
 
         #----<<glbd001>>----
         #Ctrlp:construct.c.page1.glbd001
         ON ACTION controlp INFIELD glbd001
            #add-point:ON ACTION controlp INFIELD glbd001
            {<point name="construct.c.page1.glbd001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD glbd001
            #add-point:BEFORE FIELD glbd001
            {<point name="query.b.page1.glbd001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glbd001
            
            #add-point:AFTER FIELD glbd001
            {<point name="query.a.page1.glbd001" />}
            #END add-point
            
 
         #----<<glbdl003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD glbdl003
            #add-point:BEFORE FIELD glbdl003
            {<point name="query.b.page1.glbdl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glbdl003
            
            #add-point:AFTER FIELD glbdl003
            {<point name="query.a.page1.glbdl003" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.glbdl003
         ON ACTION controlp INFIELD glbdl003
            #add-point:ON ACTION controlp INFIELD glbdl003
            {<point name="query.c.page1.glbdl003" />}
            #END add-point
 
         #----<<glbd002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD glbd002
            #add-point:BEFORE FIELD glbd002
            {<point name="query.b.page1.glbd002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glbd002
            
            #add-point:AFTER FIELD glbd002
            {<point name="query.a.page1.glbd002" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.glbd002
         ON ACTION controlp INFIELD glbd002
            #add-point:ON ACTION controlp INFIELD glbd002
            {<point name="query.c.page1.glbd002" />}
            #END add-point
 
         #----<<glbd003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD glbd003
            #add-point:BEFORE FIELD glbd003
            {<point name="query.b.page1.glbd003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glbd003
            
            #add-point:AFTER FIELD glbd003
            {<point name="query.a.page1.glbd003" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.glbd003
         ON ACTION controlp INFIELD glbd003
            #add-point:ON ACTION controlp INFIELD glbd003
            {<point name="query.c.page1.glbd003" />}
            #END add-point
 
         #----<<glbd004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD glbd004
            #add-point:BEFORE FIELD glbd004
            {<point name="query.b.page1.glbd004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD glbd004
            
            #add-point:AFTER FIELD glbd004
            {<point name="query.a.page1.glbd004" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.glbd004
         ON ACTION controlp INFIELD glbd004
            #add-point:ON ACTION controlp INFIELD glbd004
            {<point name="query.c.page1.glbd004" />}
            #END add-point
 
  
         
         #---------------------<  Detail: page2  >---------------------
  
 
 
      
         BEFORE CONSTRUCT
#saki            CALL cl_qbe_init()
            #add-point:cs段more_construct
            {<point name="cs.before_construct"/>}
            #end add-point 
      
         ON ACTION qbe_select
#saki            CALL cl_qbe_select()
      
         ON ACTION qbe_save
#saki            CALL cl_qbe_save()
      
      END CONSTRUCT
  
      #add-point:query段more_construct
      {<point name="query.more_construct"/>}
      #end add-point 
      
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG 
   END DIALOG
 
   #add-point:query段after_construct
   {<point name="query.after_construct"/>}
   #end add-point
   
   #LET g_wc2 = g_wc2 CLIPPED, cl_get_extra_cond("", "")
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc2 = ls_wc
   END IF
    
   LET g_error_show = 1
   CALL agli200_b_fill(g_wc2)
   
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      CALL cl_err("",-100,1)
   END IF
   
   LET INT_FLAG = FALSE
   
END FUNCTION
]]>
  </section>
  <section id="agli200.set_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION agli200_set_entry_b(p_cmd)                                                  
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1         
   {</Local define>}
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   
   #add-point:set_entry_b段control
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point                                                                   
                                                                                
END FUNCTION                                                                    
]]>
  </section>
  <section id="agli200.set_no_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION agli200_set_no_entry_b(p_cmd)                                               
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1           
   {</Local define>}
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point  
 
   #add-point:set_no_entry_b段control
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point       
                                                                                
END FUNCTION  
]]>
  </section>
  <section id="agli200.state_change" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="agli200.ui_dialog" ver="1" status="" src="s">
    <![CDATA[#+ 功能選單 
PRIVATE FUNCTION agli200_ui_dialog()
   {<Local define>}
   DEFINE li_idx   LIKE type_t.num5
   {</Local define>}
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point 
 
   LET g_action_choice = " "  
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()      
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   LET g_detail_idx = 1
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      CALL agli200_b_fill(g_wc2)
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_glbd_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
      
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               
            #自訂ACTION(detail_show,page_1)
            
               
         END DISPLAY
      
         DISPLAY ARRAY g_glbd2_d TO s_detail2.*
            ATTRIBUTES(COUNT=g_detail_cnt)  
         
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               
            #自訂ACTION(detail_show,page_2)
            
               
         END DISPLAY
 
 
      
         #add-point:ui_dialog段more_displayarray
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         BEFORE DIALOG
            IF g_temp_idx > 0 THEN
               LET l_ac = g_temp_idx
               CALL DIALOG.setCurrentRow("s_detail1",l_ac)
               LET g_temp_idx = 1
            END IF
            LET g_curr_diag = ui.DIALOG.getCurrent()         
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            #add-point:ui_dialog段before
            {<point name="ui_dialog.b_dialog"/>}
            #end add-point
            NEXT FIELD CURRENT
      
         
 
 
 
         ON ACTION modify
 
            LET g_aw = ''
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN 
               CALL agli200_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION modify_detail
 
            LET g_aw = g_curr_diag.getCurrentItem()
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN 
               CALL agli200_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION output
 
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN 
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION query
 
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN 
               CALL agli200_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
            END IF
 
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice="exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
            
         
      
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
]]>
  </section>
  <section id="agli200.unlock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION agli200_unlock_b(ps_table)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   #IF ls_group.getIndexOf(ps_table,1) THEN
      CLOSE agli200_bcl
   #END IF
   
 
 
END FUNCTION
]]>
  </section>
  <section id="agli200.update_b" ver="1" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION agli200_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   {<Local define>}
   DEFINE ps_page          STRING
   DEFINE ps_table         STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
    
   #判斷是否是同一群組的table
   LET ls_group = "glbd_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> "glbd_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.b_update" mark="Y"/>}
      #end add-point     
      UPDATE glbd_t 
         SET (glbd001
              ,glbdstus,glbd002,glbd003,glbd004,glbdmodid,glbdmoddt,glbdownid,glbdowndp,glbdcrtid,glbdcrtdp,glbdcrtdt) 
              = 
             (ps_keys[1]
              ,g_glbd_d[l_ac].glbdstus,g_glbd_d[l_ac].glbd002,g_glbd_d[l_ac].glbd003,g_glbd_d[l_ac].glbd004, 
                  g_glbd2_d[l_ac].glbdmodid,g_glbd2_d[l_ac].glbdmoddt,g_glbd2_d[l_ac].glbdownid,g_glbd2_d[l_ac].glbdowndp, 
                  g_glbd2_d[l_ac].glbdcrtid,g_glbd2_d[l_ac].glbdcrtdp,g_glbd2_d[l_ac].glbdcrtdt) 
         WHERE glbd001 = ps_keys_bak[1]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point 
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("glbd_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("glbd_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.a_update"/>}
      #end add-point 
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
  </section>
</add_points>
