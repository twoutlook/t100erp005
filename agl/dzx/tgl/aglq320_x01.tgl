#該程式未解開Section, 採用最新樣板產出!
{<section id="aglq320_x01.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:1(2015-12-28 18:28:46), PR版次:
#+ Customerized Version.: SD版次:(), PR版次:
#+ Build......: 000032
#+ Filename...: aglq320_x01
#+ Description: ...
#+ Creator....: 05016(2015-12-28 14:49:25)
#+ Modifier...: 05016 -SD/PR-

{</section>}

{<section id="aglq320_x01.global" readonly="Y" >}
#報表 x01 樣板自動產生(Version:8)
#add-point:填寫註解說明 name="global.memo"
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明 name="global.memo_customerization"
{<point name="global.memo_customerization" edit="c"/>}
#end add-point
 
IMPORT os
#add-point:增加匯入項目 name="global.import"
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
DEFINE tm RECORD
       wc STRING,                  #where condition 
       a1 STRING,                  #print temp_table 
       a2 LIKE type_t.chr100,         #g_j 
       a3 LIKE type_t.chr100,         #g_k 
       a4 LIKE type_t.chr1          #currchk
       END RECORD
 
DEFINE g_str           STRING,                      #列印條件回傳值              
       g_sql           STRING  
 
#add-point:自定義環境變數(Global Variable)(客製用) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:自定義環境變數(Global Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>}
#end add-point

{</section>}

{<section id="aglq320_x01.main" readonly="Y" >}
PUBLIC FUNCTION aglq320_x01(p_arg1,p_arg2,p_arg3,p_arg4,p_arg5)
DEFINE  p_arg1 STRING                  #tm.wc  where condition 
DEFINE  p_arg2 STRING                  #tm.a1  print temp_table 
DEFINE  p_arg3 LIKE type_t.chr100         #tm.a2  g_j 
DEFINE  p_arg4 LIKE type_t.chr100         #tm.a3  g_k 
DEFINE  p_arg5 LIKE type_t.chr1         #tm.a4  currchk
#add-point:init段define(客製用) name="component.define_customerization"
{<point name="component.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="component.define"
{<point name="component.define"/>}
#end add-point
 
   LET tm.wc = p_arg1
   LET tm.a1 = p_arg2
   LET tm.a2 = p_arg3
   LET tm.a3 = p_arg4
   LET tm.a4 = p_arg5
 
   #add-point:報表元件參數準備 name="component.arg.prep"
   {<point name="component.arg.prep" />}
   #end add-point
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'
   
   #報表元件代號      
   LET g_rep_code = "aglq320_x01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #create 暫存檔
   CALL aglq320_x01_create_tmptable()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #報表select欄位準備
   CALL aglq320_x01_sel_prep()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #報表insert的prepare
   CALL aglq320_x01_ins_prep()  
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #將資料存入tmptable
   CALL aglq320_x01_ins_data() 
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #將tmptable資料印出
   CALL aglq320_x01_rep_data()
 
END FUNCTION

{</section>}

{<section id="aglq320_x01.create_tmptable" readonly="Y" >}
PRIVATE FUNCTION aglq320_x01_create_tmptable()
 
   #清除temptable 陣列
   CALL g_rep_tmpname.clear()
   
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.before name="create_tmp.before"
   {<point name="create_tmp.before"/>}
   #end add-point:create_tmp.before
 
   #主報表TEMP TABLE的欄位SQL   
   LET g_sql = "l_glapld_desc.type_t.chr500,l_glapcomp_desc.type_t.chr500,l_glaa_desc.type_t.chr500,l_sdate_desc.type_t.chr500,l_edate_desc.type_t.chr500,l_stus_desc.type_t.chr500,l_show_ad_desc.type_t.chr500,l_show_ce_desc.type_t.chr500,l_show_ye_desc.type_t.chr500,l_glap002.glap_t.glap002,l_glap004.glap_t.glap004,l_glapdocdt.glap_t.glapcrtdt,l_glapdocno.glap_t.glapdocno,glaq001.glaq_t.glaq001,glaq005.glaq_t.glaq005,glaq010.glaq_t.glaq010,glaq006.glaq_t.glaq006,l_glaq003_0.glaq_t.glaq003,l_glaq003_1.glaq_t.glaq003,l_glaq003_2.glaq_t.glaq003,l_glaq003_3.glaq_t.glaq003,l_glaq003_4.glaq_t.glaq003,l_glaq003_5.glaq_t.glaq003,l_glaq003_6.glaq_t.glaq003,l_glaq003_7.glaq_t.glaq003,l_glaq003_8.glaq_t.glaq003,l_glaq003_9.glaq_t.glaq003,l_glaq003_10.glaq_t.glaq003,l_glaq003_11.glaq_t.glaq003,l_glaq003_12.glaq_t.glaq003,l_glaq003_13.glaq_t.glaq003,l_glaq003_14.glaq_t.glaq003,l_glaq003_15.glaq_t.glaq003,l_glaq003_16.glaq_t.glaq003,l_glaq003_17.glaq_t.glaq003,l_glaq003_18.glaq_t.glaq003,l_glaq003_19.glaq_t.glaq003,l_glaq003_20.glaq_t.glaq003,l_glaq003_21.glaq_t.glaq003,l_glaq003_22.glaq_t.glaq003,l_glaq003_23.glaq_t.glaq003,l_glaq003_24.glaq_t.glaq003,l_glaq003_25.glaq_t.glaq003,l_glaq003_26.glaq_t.glaq003,l_glaq003_27.glaq_t.glaq003,l_glaq003_28.glaq_t.glaq003,l_glaq003_29.glaq_t.glaq003,l_glaq003_30.glaq_t.glaq003,l_glaq004_0.glaq_t.glaq003,l_glaq004_1.glaq_t.glaq003,l_glaq004_2.glaq_t.glaq003,l_glaq004_3.glaq_t.glaq003,l_glaq004_4.glaq_t.glaq004,l_glaq004_5.glaq_t.glaq005,l_glaq004_6.glaq_t.glaq004,l_glaq004_7.glaq_t.glaq003,l_glaq004_8.glaq_t.glaq003,l_glaq004_9.glaq_t.glaq004,l_glaq004_10.glaq_t.glaq004,l_glaq004_11.glaq_t.glaq004,l_glaq004_12.glaq_t.glaq004,l_glaq004_13.glaq_t.glaq004,l_glaq004_14.glaq_t.glaq004,l_glaq004_15.glaq_t.glaq004,l_glaq004_16.glaq_t.glaq004,l_glaq004_17.glaq_t.glaq004,l_glaq004_18.glaq_t.glaq004,l_glaq004_19.glaq_t.glaq003,l_glaq004_20.glaq_t.glaq004,l_glaq004_21.glaq_t.glaq004,l_glaq004_22.glaq_t.glaq004,l_glaq004_23.glaq_t.glaq004,l_glaq004_24.glaq_t.glaq004,l_glaq004_25.glaq_t.glaq004,l_glaq004_26.glaq_t.glaq004,l_glaq004_27.glaq_t.glaq004,l_glaq004_28.glaq_t.glaq004,l_glaq004_29.glaq_t.glaq004,l_glaq004_30.glaq_t.glaq004,l_dc.type_t.chr100,l_amt.type_t.num20_6" 
   
   #建立TEMP TABLE,主報表序號1 
   IF NOT cl_xg_create_tmptable(g_sql,1) THEN
      LET g_rep_success = 'N'            
   END IF
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.after name="create_tmp.after"
   {<point name="create_tmp.after"/>}
   #end add-point:create_tmp.after
END FUNCTION

{</section>}

{<section id="aglq320_x01.ins_prep" readonly="Y" >}
PRIVATE FUNCTION aglq320_x01_ins_prep()
DEFINE i              INTEGER
DEFINE l_prep_str     STRING
#add-point:ins_prep.define (客製用) name="ins_prep.define_customerization"
{<point name="ins_prep.define_customerization" edit="c" mark="Y"/>}
#end add-point:ins_prep.define
#add-point:ins_prep.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_prep.define"
{<point name="ins_prep.define"/>}
#end add-point:ins_prep.define
 
   FOR i = 1 TO g_rep_tmpname.getLength()
      CALL cl_xg_del_data(g_rep_tmpname[i])
      #LET g_sql = g_rep_ins_prep[i]              #透過此lib取得prepare字串 lib精簡
      CASE i
         WHEN 1
         #INSERT INTO PREP
         LET g_sql = " INSERT INTO ",g_rep_db CLIPPED,g_rep_tmpname[1] CLIPPED," VALUES(?,?,?,?,?,?, 
             ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?, 
             ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)"
         PREPARE insert_prep FROM g_sql
         IF STATUS THEN
            LET l_prep_str ="insert_prep",i
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = l_prep_str
            LET g_errparam.code   = status
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CALL cl_xg_drop_tmptable()
            LET g_rep_success = 'N'           
         END IF 
         #add-point:insert_prep段 name="insert_prep"
         {<point name="insert_prep"/>}
         #end add-point                  
 
 
      END CASE
   END FOR
END FUNCTION

{</section>}

{<section id="aglq320_x01.sel_prep" readonly="Y" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION aglq320_x01_sel_prep()
DEFINE g_select      STRING
DEFINE g_from        STRING
DEFINE g_where       STRING
#add-point:sel_prep段define(客製用) name="sel_prep.define_customerization"
{<point name="sel_prep.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:sel_prep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sel_prep.define"
{<point name="sel_prep.define"/>}
#end add-point
 
   #add-point:sel_prep before name="sel_prep.before"
   {<point name="sel_prep.before" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep g_select name="sel_prep.g_select"
   {<point name="sel_prep.g_select" mark="Y"/>}
   #end add-point
   LET g_select = " SELECT '','','','','','','','','',NULL,'','','',glaq001,glaq005,glaq010,glaq006, 
       0,'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','', 
       '','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','', 
       ''"
 
   #add-point:sel_prep g_from name="sel_prep.g_from"
   {<point name="sel_prep.g_from" mark="Y"/>}
   #end add-point
    LET g_from = " FROM glaq_t"
 
   #add-point:sel_prep g_where name="sel_prep.g_where"
   {<point name="sel_prep.g_where" mark="Y"/>}
   #end add-point
    LET g_where = " WHERE " ,tm.wc CLIPPED
 
   #add-point:sel_prep g_order name="sel_prep.g_order"
   {<point name="sel_prep.g_order" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep.sql.before name="sel_prep.sql.before"
   {<point name="sel_prep.sql.before" mark="Y"/>}
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("glaq_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段
 
   #add-point:sel_prep.sql.after name="sel_prep.sql.after"
   {<point name="sel_prep.sql.after" mark="Y"/>}
   #end add-point
   PREPARE aglq320_x01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET g_rep_success = 'N' 
   END IF
   DECLARE aglq320_x01_curs CURSOR FOR aglq320_x01_prepare
 
END FUNCTION

{</section>}

{<section id="aglq320_x01.ins_data" readonly="Y" >}
PRIVATE FUNCTION aglq320_x01_ins_data()
DEFINE sr RECORD 
   l_glapld_desc LIKE type_t.chr500, 
   l_glapcomp_desc LIKE type_t.chr500, 
   l_glaa_desc LIKE type_t.chr500, 
   l_sdate_desc LIKE type_t.chr500, 
   l_edate_desc LIKE type_t.chr500, 
   l_stus_desc LIKE type_t.chr500, 
   l_show_ad_desc LIKE type_t.chr500, 
   l_show_ce_desc LIKE type_t.chr500, 
   l_show_ye_desc LIKE type_t.chr500, 
   l_glap002 LIKE glap_t.glap002, 
   l_glap004 LIKE glap_t.glap004, 
   l_glapdocdt LIKE glap_t.glapcrtdt, 
   l_glapdocno LIKE glap_t.glapdocno, 
   glaq001 LIKE glaq_t.glaq001, 
   glaq005 LIKE glaq_t.glaq005, 
   glaq010 LIKE glaq_t.glaq010, 
   glaq006 LIKE glaq_t.glaq006, 
   l_glaq003_0 LIKE glaq_t.glaq003, 
   l_glaq003_1 LIKE glaq_t.glaq003, 
   l_glaq003_2 LIKE glaq_t.glaq003, 
   l_glaq003_3 LIKE glaq_t.glaq003, 
   l_glaq003_4 LIKE glaq_t.glaq003, 
   l_glaq003_5 LIKE glaq_t.glaq003, 
   l_glaq003_6 LIKE glaq_t.glaq003, 
   l_glaq003_7 LIKE glaq_t.glaq003, 
   l_glaq003_8 LIKE glaq_t.glaq003, 
   l_glaq003_9 LIKE glaq_t.glaq003, 
   l_glaq003_10 LIKE glaq_t.glaq003, 
   l_glaq003_11 LIKE glaq_t.glaq003, 
   l_glaq003_12 LIKE glaq_t.glaq003, 
   l_glaq003_13 LIKE glaq_t.glaq003, 
   l_glaq003_14 LIKE glaq_t.glaq003, 
   l_glaq003_15 LIKE glaq_t.glaq003, 
   l_glaq003_16 LIKE glaq_t.glaq003, 
   l_glaq003_17 LIKE glaq_t.glaq003, 
   l_glaq003_18 LIKE glaq_t.glaq003, 
   l_glaq003_19 LIKE glaq_t.glaq003, 
   l_glaq003_20 LIKE glaq_t.glaq003, 
   l_glaq003_21 LIKE glaq_t.glaq003, 
   l_glaq003_22 LIKE glaq_t.glaq003, 
   l_glaq003_23 LIKE glaq_t.glaq003, 
   l_glaq003_24 LIKE glaq_t.glaq003, 
   l_glaq003_25 LIKE glaq_t.glaq003, 
   l_glaq003_26 LIKE glaq_t.glaq003, 
   l_glaq003_27 LIKE glaq_t.glaq003, 
   l_glaq003_28 LIKE glaq_t.glaq003, 
   l_glaq003_29 LIKE glaq_t.glaq003, 
   l_glaq003_30 LIKE glaq_t.glaq003, 
   l_glaq004_0 LIKE glaq_t.glaq003, 
   l_glaq004_1 LIKE glaq_t.glaq003, 
   l_glaq004_2 LIKE glaq_t.glaq003, 
   l_glaq004_3 LIKE glaq_t.glaq003, 
   l_glaq004_4 LIKE glaq_t.glaq004, 
   l_glaq004_5 LIKE glaq_t.glaq005, 
   l_glaq004_6 LIKE glaq_t.glaq004, 
   l_glaq004_7 LIKE glaq_t.glaq003, 
   l_glaq004_8 LIKE glaq_t.glaq003, 
   l_glaq004_9 LIKE glaq_t.glaq004, 
   l_glaq004_10 LIKE glaq_t.glaq004, 
   l_glaq004_11 LIKE glaq_t.glaq004, 
   l_glaq004_12 LIKE glaq_t.glaq004, 
   l_glaq004_13 LIKE glaq_t.glaq004, 
   l_glaq004_14 LIKE glaq_t.glaq004, 
   l_glaq004_15 LIKE glaq_t.glaq004, 
   l_glaq004_16 LIKE glaq_t.glaq004, 
   l_glaq004_17 LIKE glaq_t.glaq004, 
   l_glaq004_18 LIKE glaq_t.glaq004, 
   l_glaq004_19 LIKE glaq_t.glaq003, 
   l_glaq004_20 LIKE glaq_t.glaq004, 
   l_glaq004_21 LIKE glaq_t.glaq004, 
   l_glaq004_22 LIKE glaq_t.glaq004, 
   l_glaq004_23 LIKE glaq_t.glaq004, 
   l_glaq004_24 LIKE glaq_t.glaq004, 
   l_glaq004_25 LIKE glaq_t.glaq004, 
   l_glaq004_26 LIKE glaq_t.glaq004, 
   l_glaq004_27 LIKE glaq_t.glaq004, 
   l_glaq004_28 LIKE glaq_t.glaq004, 
   l_glaq004_29 LIKE glaq_t.glaq004, 
   l_glaq004_30 LIKE glaq_t.glaq004, 
   l_dc LIKE type_t.chr100, 
   l_amt LIKE type_t.num20_6
 END RECORD
#add-point:ins_data段define (客製用) name="ins_data.define_customerization"
{<point name="ins_data.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:ins_data段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_data.define"
{<point name="ins_data.define"/>}
#end add-point
 
    #add-point:ins_data段before name="ins_data.before"
    {<point name="ins_data.before"/>}
    #end add-point
 
    LET g_rep_success = 'Y'
 
    FOREACH aglq320_x01_curs INTO sr.*                               
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach name="ins_data.foreach"
       {<point name="ins_data.foreach"/>}
       #end add-point
 
       #add-point:ins_data段before.save name="ins_data.before.save"
       {<point name="ins_data.before.save"/>}
       #end add-point
 
       #EXECUTE
       EXECUTE insert_prep USING sr.l_glapld_desc,sr.l_glapcomp_desc,sr.l_glaa_desc,sr.l_sdate_desc,sr.l_edate_desc,sr.l_stus_desc,sr.l_show_ad_desc,sr.l_show_ce_desc,sr.l_show_ye_desc,sr.l_glap002,sr.l_glap004,sr.l_glapdocdt,sr.l_glapdocno,sr.glaq001,sr.glaq005,sr.glaq010,sr.glaq006,sr.l_glaq003_0,sr.l_glaq003_1,sr.l_glaq003_2,sr.l_glaq003_3,sr.l_glaq003_4,sr.l_glaq003_5,sr.l_glaq003_6,sr.l_glaq003_7,sr.l_glaq003_8,sr.l_glaq003_9,sr.l_glaq003_10,sr.l_glaq003_11,sr.l_glaq003_12,sr.l_glaq003_13,sr.l_glaq003_14,sr.l_glaq003_15,sr.l_glaq003_16,sr.l_glaq003_17,sr.l_glaq003_18,sr.l_glaq003_19,sr.l_glaq003_20,sr.l_glaq003_21,sr.l_glaq003_22,sr.l_glaq003_23,sr.l_glaq003_24,sr.l_glaq003_25,sr.l_glaq003_26,sr.l_glaq003_27,sr.l_glaq003_28,sr.l_glaq003_29,sr.l_glaq003_30,sr.l_glaq004_0,sr.l_glaq004_1,sr.l_glaq004_2,sr.l_glaq004_3,sr.l_glaq004_4,sr.l_glaq004_5,sr.l_glaq004_6,sr.l_glaq004_7,sr.l_glaq004_8,sr.l_glaq004_9,sr.l_glaq004_10,sr.l_glaq004_11,sr.l_glaq004_12,sr.l_glaq004_13,sr.l_glaq004_14,sr.l_glaq004_15,sr.l_glaq004_16,sr.l_glaq004_17,sr.l_glaq004_18,sr.l_glaq004_19,sr.l_glaq004_20,sr.l_glaq004_21,sr.l_glaq004_22,sr.l_glaq004_23,sr.l_glaq004_24,sr.l_glaq004_25,sr.l_glaq004_26,sr.l_glaq004_27,sr.l_glaq004_28,sr.l_glaq004_29,sr.l_glaq004_30,sr.l_dc,sr.l_amt
 
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = "aglq320_x01_execute"
          LET g_errparam.code   = SQLCA.sqlcode
          LET g_errparam.popup  = FALSE
          CALL cl_err()       
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段after_save name="ins_data.after.save"
       {<point name="ins_data.after.save"/>}
       #end add-point
       
    END FOREACH
    
    #add-point:ins_data段after name="ins_data.after"
    {<point name="ins_data.after"/>}
    #end add-point
 
END FUNCTION

{</section>}

{<section id="aglq320_x01.rep_data" readonly="Y" >}
PRIVATE FUNCTION aglq320_x01_rep_data()
#add-point:rep_data.define (客製用) name="rep_data.define_customerization"
{<point name="rep_data.define_customerization" edit="c" mark="Y"/>}
#end add-point:rep_data.define
#add-point:rep_data.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="rep_data.define"
{<point name="rep_data.define"/>}
#end add-point:rep_data.define
 
    #add-point:rep_data.before name="rep_data.before"
    {<point name="rep_data.before"/>}
    #end add-point:rep_data.before
    
    CALL cl_xg_view()
    #add-point:rep_data.after name="rep_data.after"
    {<point name="rep_data.after"/>}
    #end add-point:rep_data.after
END FUNCTION

{</section>}

{<section id="aglq320_x01.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

