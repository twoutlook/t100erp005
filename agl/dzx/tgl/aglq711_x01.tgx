{<section id="aglq711_x01.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:1(2016-12-08 13:45:30), PR版次:
#+ Customerized Version.: SD版次:(), PR版次:
#+ Build......: 000000
#+ Filename...: aglq711_x01
#+ Description: ...
#+ Creator....: 02114(2016-12-07 21:36:37)
#+ Modifier...: 02114 -SD/PR-
{</section>}



{<section id="aglq711_x01.global" readonly="Y" >}
#報表 x01 樣板自動產生(Version:8)
#add-point:填寫註解說明 name="global.memo"
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明 name="global.memo_customerization"
{<point name="global.memo_customerization" edit="c"/>}
#end add-point
 
IMPORT os
#add-point:增加匯入項目 name="global.import"
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
DEFINE tm RECORD
       wc STRING,                  #condition:where 
       a1 STRING,                  #print_tmp 
       a2 STRING                   #visible:where
       END RECORD
 
DEFINE g_str           STRING,                      #列印條件回傳值              
       g_sql           STRING  
 
#add-point:自定義環境變數(Global Variable)(客製用) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:自定義環境變數(Global Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>}
#end add-point
{</section>}
 
{<section id="aglq711_x01.main" readonly="Y" >}
PUBLIC FUNCTION aglq711_x01(p_arg1,p_arg2,p_arg3)
DEFINE  p_arg1 STRING                  #tm.wc  condition:where 
DEFINE  p_arg2 STRING                  #tm.a1  print_tmp 
DEFINE  p_arg3 STRING                  #tm.a2  visible:where
#add-point:init段define(客製用) name="component.define_customerization"
{<point name="component.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="component.define"
{<point name="component.define"/>}
#end add-point
 
   LET tm.wc = p_arg1
   LET tm.a1 = p_arg2
   LET tm.a2 = p_arg3

   #add-point:報表元件參數準備 name="component.arg.prep"
   {<point name="component.arg.prep" />}
   #end add-point
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'
   
   #報表元件代號      
   LET g_rep_code = "aglq711_x01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #create 暫存檔
   CALL aglq711_x01_create_tmptable()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #報表select欄位準備
   CALL aglq711_x01_sel_prep()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #報表insert的prepare
   CALL aglq711_x01_ins_prep()  
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #將資料存入tmptable
   CALL aglq711_x01_ins_data() 
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #將tmptable資料印出
   CALL aglq711_x01_rep_data()
 
END FUNCTION
{</section>}
 
{<section id="aglq711_x01.create_tmptable" readonly="Y" >}
PRIVATE FUNCTION aglq711_x01_create_tmptable()
 
   #清除temptable 陣列
   CALL g_rep_tmpname.clear()
   
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.before name="create_tmp.before"
   {<point name="create_tmp.before"/>}
   #end add-point:create_tmp.before
 
   #主報表TEMP TABLE的欄位SQL   
   LET g_sql = "l_glaald_desc.type_t.chr500,l_glaacomp_desc.type_t.chr500,l_glaa001_desc.type_t.chr500,l_year.type_t.chr500,l_mm.type_t.chr500,l_ctype.type_t.chr500,l_stus.type_t.chr500,glar001.glar_t.glar001,l_glar001_desc.type_t.chr500,glar017.glar_t.glar017,l_glar017_desc.type_t.chr500,glar009.glar_t.glar009,l_dir1.type_t.chr500,l_oqc.glaq_t.glaq003,l_qc.glaq_t.glaq003,l_qc2.glaq_t.glaq003,l_qc3.glaq_t.glaq003,l_oqjd.glaq_t.glaq003,l_oqjc.glaq_t.glaq003,l_qjd.glaq_t.glaq003,l_qjc.glaq_t.glaq003,l_qjd2.glaq_t.glaq003,l_qjc2.glaq_t.glaq003,l_qjd3.glaq_t.glaq003,l_qjc3.glaq_t.glaq003,l_dir2.type_t.chr500,l_oqm.glaq_t.glaq003,l_qm.glaq_t.glaq003,l_qm2.glaq_t.glaq003,l_qm3.glaq_t.glaq003" 
   
   #建立TEMP TABLE,主報表序號1 
   IF NOT cl_xg_create_tmptable(g_sql,1) THEN
      LET g_rep_success = 'N'            
   END IF
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.after name="create_tmp.after"
   {<point name="create_tmp.after"/>}
   #end add-point:create_tmp.after
END FUNCTION
{</section>}
 
{<section id="aglq711_x01.ins_prep" readonly="Y" >}
PRIVATE FUNCTION aglq711_x01_ins_prep()
DEFINE i              INTEGER
DEFINE l_prep_str     STRING
#add-point:ins_prep.define (客製用) name="ins_prep.define_customerization"
{<point name="ins_prep.define_customerization" edit="c" mark="Y"/>}
#end add-point:ins_prep.define
#add-point:ins_prep.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_prep.define"
{<point name="ins_prep.define"/>}
#end add-point:ins_prep.define
 
   FOR i = 1 TO g_rep_tmpname.getLength()
      CALL cl_xg_del_data(g_rep_tmpname[i])
      #LET g_sql = g_rep_ins_prep[i]              #透過此lib取得prepare字串 lib精簡
      CASE i
         WHEN 1
         #INSERT INTO PREP
         LET g_sql = " INSERT INTO ",g_rep_db CLIPPED,g_rep_tmpname[1] CLIPPED," VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)"
         PREPARE insert_prep FROM g_sql
         IF STATUS THEN
            LET l_prep_str ="insert_prep",i
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = l_prep_str
            LET g_errparam.code   = status
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CALL cl_xg_drop_tmptable()
            LET g_rep_success = 'N'           
         END IF 
         #add-point:insert_prep段 name="insert_prep"
         {<point name="insert_prep"/>}
         #end add-point                  


      END CASE
   END FOR
END FUNCTION
{</section>}
 
{<section id="aglq711_x01.sel_prep" readonly="Y" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION aglq711_x01_sel_prep()
DEFINE g_select      STRING
DEFINE g_from        STRING
DEFINE g_where       STRING
#add-point:sel_prep段define(客製用) name="sel_prep.define_customerization"
{<point name="sel_prep.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:sel_prep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sel_prep.define"
{<point name="sel_prep.define"/>}
#end add-point
 
   #add-point:sel_prep before name="sel_prep.before"
   {<point name="sel_prep.before" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep g_select name="sel_prep.g_select"
   {<point name="sel_prep.g_select" mark="Y"/>}
   #end add-point
   LET g_select = " SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,glar001,NULL,glar017,NULL,glar009,NULL,0,0,0,0,0,0,0,0,0,0,0,0,NULL,0,0,0,0"
 
   #add-point:sel_prep g_from name="sel_prep.g_from"
   {<point name="sel_prep.g_from" mark="Y"/>}
   #end add-point
    LET g_from = " FROM glar_t"
 
   #add-point:sel_prep g_where name="sel_prep.g_where"
   {<point name="sel_prep.g_where" mark="Y"/>}
   #end add-point
    LET g_where = " WHERE " ,tm.wc CLIPPED
 
   #add-point:sel_prep g_order name="sel_prep.g_order"
   {<point name="sel_prep.g_order" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep.sql.before name="sel_prep.sql.before"
   {<point name="sel_prep.sql.before" mark="Y"/>}
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("glar_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段
 
   #add-point:sel_prep.sql.after name="sel_prep.sql.after"
   {<point name="sel_prep.sql.after" mark="Y"/>}
   #end add-point
   PREPARE aglq711_x01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET g_rep_success = 'N' 
   END IF
   DECLARE aglq711_x01_curs CURSOR FOR aglq711_x01_prepare
 
END FUNCTION
{</section>}
 
{<section id="aglq711_x01.ins_data" readonly="Y" >}
PRIVATE FUNCTION aglq711_x01_ins_data()
DEFINE sr RECORD 
   l_glaald_desc LIKE type_t.chr500, 
   l_glaacomp_desc LIKE type_t.chr500, 
   l_glaa001_desc LIKE type_t.chr500, 
   l_year LIKE type_t.chr500, 
   l_mm LIKE type_t.chr500, 
   l_ctype LIKE type_t.chr500, 
   l_stus LIKE type_t.chr500, 
   glar001 LIKE glar_t.glar001, 
   l_glar001_desc LIKE type_t.chr500, 
   glar017 LIKE glar_t.glar017, 
   l_glar017_desc LIKE type_t.chr500, 
   glar009 LIKE glar_t.glar009, 
   l_dir1 LIKE type_t.chr500, 
   l_oqc LIKE glaq_t.glaq003, 
   l_qc LIKE glaq_t.glaq003, 
   l_qc2 LIKE glaq_t.glaq003, 
   l_qc3 LIKE glaq_t.glaq003, 
   l_oqjd LIKE glaq_t.glaq003, 
   l_oqjc LIKE glaq_t.glaq003, 
   l_qjd LIKE glaq_t.glaq003, 
   l_qjc LIKE glaq_t.glaq003, 
   l_qjd2 LIKE glaq_t.glaq003, 
   l_qjc2 LIKE glaq_t.glaq003, 
   l_qjd3 LIKE glaq_t.glaq003, 
   l_qjc3 LIKE glaq_t.glaq003, 
   l_dir2 LIKE type_t.chr500, 
   l_oqm LIKE glaq_t.glaq003, 
   l_qm LIKE glaq_t.glaq003, 
   l_qm2 LIKE glaq_t.glaq003, 
   l_qm3 LIKE glaq_t.glaq003
 END RECORD
#add-point:ins_data段define (客製用) name="ins_data.define_customerization"
{<point name="ins_data.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:ins_data段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_data.define"
{<point name="ins_data.define"/>}
#end add-point
 
    #add-point:ins_data段before name="ins_data.before"
    {<point name="ins_data.before"/>}
    #end add-point
 
    LET g_rep_success = 'Y'
 
    FOREACH aglq711_x01_curs INTO sr.*                               
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach name="ins_data.foreach"
       {<point name="ins_data.foreach"/>}
       #end add-point
 
       #add-point:ins_data段before.save name="ins_data.before.save"
       {<point name="ins_data.before.save"/>}
       #end add-point
 
       #EXECUTE
       EXECUTE insert_prep USING sr.l_glaald_desc,sr.l_glaacomp_desc,sr.l_glaa001_desc,sr.l_year,sr.l_mm,sr.l_ctype,sr.l_stus,sr.glar001,sr.l_glar001_desc,sr.glar017,sr.l_glar017_desc,sr.glar009,sr.l_dir1,sr.l_oqc,sr.l_qc,sr.l_qc2,sr.l_qc3,sr.l_oqjd,sr.l_oqjc,sr.l_qjd,sr.l_qjc,sr.l_qjd2,sr.l_qjc2,sr.l_qjd3,sr.l_qjc3,sr.l_dir2,sr.l_oqm,sr.l_qm,sr.l_qm2,sr.l_qm3
 
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = "aglq711_x01_execute"
          LET g_errparam.code   = SQLCA.sqlcode
          LET g_errparam.popup  = FALSE
          CALL cl_err()       
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段after_save name="ins_data.after.save"
       {<point name="ins_data.after.save"/>}
       #end add-point
       
    END FOREACH
    
    #add-point:ins_data段after name="ins_data.after"
    {<point name="ins_data.after"/>}
    #end add-point
 
END FUNCTION
{</section>}
 
{<section id="aglq711_x01.rep_data" readonly="Y" >}
PRIVATE FUNCTION aglq711_x01_rep_data()
#add-point:rep_data.define (客製用) name="rep_data.define_customerization"
{<point name="rep_data.define_customerization" edit="c" mark="Y"/>}
#end add-point:rep_data.define
#add-point:rep_data.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="rep_data.define"
{<point name="rep_data.define"/>}
#end add-point:rep_data.define
 
    #add-point:rep_data.before name="rep_data.before"
    {<point name="rep_data.before"/>}
    #end add-point:rep_data.before
    
    CALL cl_xg_view()
    #add-point:rep_data.after name="rep_data.after"
    {<point name="rep_data.after"/>}
    #end add-point:rep_data.after
END FUNCTION
{</section>}
 
{<section id="aglq711_x01.other_function" readonly="Y" >} 
{<point name="other.function"/>}
{</section>}
