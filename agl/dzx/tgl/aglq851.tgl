#該程式未解開Section, 採用最新樣板產出!
{<section id="aglq851.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:8(2015-03-05 17:34:39), PR版次:
#+ Customerized Version.: SD版次:(), PR版次:
#+ Build......: 000056
#+ Filename...: aglq851
#+ Description: 科目多期間二維查詢
#+ Creator....: 02599(2015-03-03 16:57:36)
#+ Modifier...: 02599 -SD/PR-

{</section>}

{<section id="aglq851.global" >}
#應用 q04 樣板自動產生(Version:32)
#add-point:填寫註解說明 name="global.memo"
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"
{<point name="global.memo_customerization" edit="c"/>}
#end add-point
 
IMPORT os
IMPORT util
#add-point:增加匯入項目 name="global.import"
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"
{<point name="global.inc" mark="Y"/>}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_master        RECORD
       glaald LIKE type_t.chr500, 
   glaald_desc LIKE type_t.chr80, 
   glaacomp LIKE type_t.chr500, 
   glaacomp_desc LIKE type_t.chr80, 
   glaa001 LIKE type_t.chr500, 
   glaa016 LIKE type_t.chr500, 
   glaa020 LIKE type_t.chr500
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_detail RECORD
       
       sel LIKE type_t.chr1, 
   glaq002 LIKE glaq_t.glaq002, 
   glaq002_desc LIKE type_t.chr500, 
   amt1 LIKE type_t.num20_6, 
   amt2 LIKE type_t.num20_6, 
   amt3 LIKE type_t.num20_6, 
   amt4 LIKE type_t.num20_6, 
   amt5 LIKE type_t.num20_6, 
   amt6 LIKE type_t.num20_6, 
   amt7 LIKE type_t.num20_6, 
   amt8 LIKE type_t.num20_6, 
   amt9 LIKE type_t.num20_6, 
   amt10 LIKE type_t.num20_6, 
   amt11 LIKE type_t.num20_6, 
   amt12 LIKE type_t.num20_6, 
   amt13 LIKE type_t.num20_6, 
   amt14 LIKE type_t.num20_6, 
   amt15 LIKE type_t.num20_6, 
   amt16 LIKE type_t.num20_6, 
   amt17 LIKE type_t.num20_6, 
   amt18 LIKE type_t.num20_6, 
   amt19 LIKE type_t.num20_6, 
   amt20 LIKE type_t.num20_6, 
   amt21 LIKE type_t.num20_6, 
   amt22 LIKE type_t.num20_6, 
   amt23 LIKE type_t.num20_6, 
   amt24 LIKE type_t.num20_6, 
   amt25 LIKE type_t.num20_6, 
   amt26 LIKE type_t.num20_6, 
   amt27 LIKE type_t.num20_6, 
   amt28 LIKE type_t.num20_6, 
   amt29 LIKE type_t.num20_6, 
   amt30 LIKE type_t.num20_6, 
   amt31 LIKE type_t.num20_6, 
   amt32 LIKE type_t.num20_6, 
   amt33 LIKE type_t.num20_6, 
   amt34 LIKE type_t.num20_6, 
   amt35 LIKE type_t.num20_6, 
   amt36 LIKE type_t.num20_6, 
   amt37 LIKE type_t.num20_6, 
   amt38 LIKE type_t.num20_6, 
   amt39 LIKE type_t.num20_6, 
   amt40 LIKE type_t.num20_6, 
   amt41 LIKE type_t.num20_6, 
   amt42 LIKE type_t.num20_6, 
   amt43 LIKE type_t.num20_6, 
   amt44 LIKE type_t.num20_6, 
   amt45 LIKE type_t.num20_6, 
   amt46 LIKE type_t.num20_6, 
   amt47 LIKE type_t.num20_6, 
   amt48 LIKE type_t.num20_6, 
   amt49 LIKE type_t.num20_6, 
   amt50 LIKE type_t.num20_6, 
   amt51 LIKE type_t.num20_6, 
   amt52 LIKE type_t.num20_6, 
   amt53 LIKE type_t.num20_6, 
   amt54 LIKE type_t.num20_6, 
   amt55 LIKE type_t.num20_6, 
   amt56 LIKE type_t.num20_6, 
   amt57 LIKE type_t.num20_6, 
   amt58 LIKE type_t.num20_6, 
   amt59 LIKE type_t.num20_6, 
   amt60 LIKE type_t.num20_6, 
   amt61 LIKE type_t.num20_6, 
   amt62 LIKE type_t.num20_6, 
   amt63 LIKE type_t.num20_6, 
   amt64 LIKE type_t.num20_6, 
   amt65 LIKE type_t.num20_6, 
   amt66 LIKE type_t.num20_6, 
   amt67 LIKE type_t.num20_6, 
   amt68 LIKE type_t.num20_6, 
   amt69 LIKE type_t.num20_6, 
   amt70 LIKE type_t.num20_6, 
   amt71 LIKE type_t.num20_6, 
   amt72 LIKE type_t.num20_6, 
   amt73 LIKE type_t.num20_6, 
   amt74 LIKE type_t.num20_6, 
   amt75 LIKE type_t.num20_6, 
   amt76 LIKE type_t.num20_6, 
   amt77 LIKE type_t.num20_6, 
   amt78 LIKE type_t.num20_6, 
   amt79 LIKE type_t.num20_6, 
   amt80 LIKE type_t.num20_6, 
   amt81 LIKE type_t.num20_6, 
   amt82 LIKE type_t.num20_6, 
   amt83 LIKE type_t.num20_6, 
   amt84 LIKE type_t.num20_6, 
   amt85 LIKE type_t.num20_6, 
   amt86 LIKE type_t.num20_6, 
   amt87 LIKE type_t.num20_6, 
   amt88 LIKE type_t.num20_6, 
   amt89 LIKE type_t.num20_6, 
   amt90 LIKE type_t.num20_6, 
   amt91 LIKE type_t.num20_6, 
   amt92 LIKE type_t.num20_6, 
   amt93 LIKE type_t.num20_6, 
   amt94 LIKE type_t.num20_6, 
   amt95 LIKE type_t.num20_6, 
   amt96 LIKE type_t.num20_6, 
   amt97 LIKE type_t.num20_6, 
   amt98 LIKE type_t.num20_6, 
   amt99 LIKE type_t.num20_6, 
   amt100 LIKE type_t.num20_6
       END RECORD
PRIVATE TYPE type_g_detail2 RECORD
       glaq002 LIKE glaq_t.glaq002, 
   glaq002_2_desc LIKE type_t.chr500, 
   amt101 LIKE type_t.num20_6, 
   amt102 LIKE type_t.num20_6, 
   amt103 LIKE type_t.num20_6, 
   amt104 LIKE type_t.num20_6, 
   amt105 LIKE type_t.num20_6, 
   amt106 LIKE type_t.num20_6, 
   amt107 LIKE type_t.num20_6, 
   amt108 LIKE type_t.num20_6, 
   amt109 LIKE type_t.num20_6, 
   amt110 LIKE type_t.num20_6, 
   amt111 LIKE type_t.num20_6, 
   amt112 LIKE type_t.num20_6, 
   amt113 LIKE type_t.num20_6, 
   amt114 LIKE type_t.num20_6, 
   amt115 LIKE type_t.num20_6, 
   amt116 LIKE type_t.num20_6, 
   amt117 LIKE type_t.num20_6, 
   amt118 LIKE type_t.num20_6, 
   amt119 LIKE type_t.num20_6, 
   amt120 LIKE type_t.num20_6, 
   amt121 LIKE type_t.num20_6, 
   amt122 LIKE type_t.num20_6, 
   amt123 LIKE type_t.num20_6, 
   amt124 LIKE type_t.num20_6, 
   amt125 LIKE type_t.num20_6, 
   amt126 LIKE type_t.num20_6, 
   amt127 LIKE type_t.num20_6, 
   amt128 LIKE type_t.num20_6, 
   amt129 LIKE type_t.num20_6, 
   amt130 LIKE type_t.num20_6, 
   amt131 LIKE type_t.num20_6, 
   amt132 LIKE type_t.num20_6, 
   amt133 LIKE type_t.num20_6, 
   amt134 LIKE type_t.num20_6, 
   amt135 LIKE type_t.num20_6, 
   amt136 LIKE type_t.num20_6, 
   amt137 LIKE type_t.num20_6, 
   amt138 LIKE type_t.num20_6, 
   amt139 LIKE type_t.num20_6, 
   amt140 LIKE type_t.num20_6, 
   amt141 LIKE type_t.num20_6, 
   amt142 LIKE type_t.num20_6, 
   amt143 LIKE type_t.num20_6, 
   amt144 LIKE type_t.num20_6, 
   amt145 LIKE type_t.num20_6, 
   amt146 LIKE type_t.num20_6, 
   amt147 LIKE type_t.num20_6, 
   amt148 LIKE type_t.num20_6, 
   amt149 LIKE type_t.num20_6, 
   amt150 LIKE type_t.num20_6, 
   amt151 LIKE type_t.num20_6, 
   amt152 LIKE type_t.num20_6, 
   amt153 LIKE type_t.num20_6, 
   amt154 LIKE type_t.num20_6, 
   amt155 LIKE type_t.num20_6, 
   amt156 LIKE type_t.num20_6, 
   amt157 LIKE type_t.num20_6, 
   amt158 LIKE type_t.num20_6, 
   amt159 LIKE type_t.num20_6, 
   amt160 LIKE type_t.num20_6, 
   amt161 LIKE type_t.num20_6, 
   amt162 LIKE type_t.num20_6, 
   amt163 LIKE type_t.num20_6, 
   amt164 LIKE type_t.num20_6, 
   amt165 LIKE type_t.num20_6, 
   amt166 LIKE type_t.num20_6, 
   amt167 LIKE type_t.num20_6, 
   amt168 LIKE type_t.num20_6, 
   amt169 LIKE type_t.num20_6, 
   amt170 LIKE type_t.num20_6, 
   amt171 LIKE type_t.num20_6, 
   amt172 LIKE type_t.num20_6, 
   amt173 LIKE type_t.num20_6, 
   amt174 LIKE type_t.num20_6, 
   amt175 LIKE type_t.num20_6, 
   amt176 LIKE type_t.num20_6, 
   amt177 LIKE type_t.num20_6, 
   amt178 LIKE type_t.num20_6, 
   amt179 LIKE type_t.num20_6, 
   amt180 LIKE type_t.num20_6, 
   amt181 LIKE type_t.num20_6, 
   amt182 LIKE type_t.num20_6, 
   amt183 LIKE type_t.num20_6, 
   amt184 LIKE type_t.num20_6, 
   amt185 LIKE type_t.num20_6, 
   amt186 LIKE type_t.num20_6, 
   amt187 LIKE type_t.num20_6, 
   amt188 LIKE type_t.num20_6, 
   amt189 LIKE type_t.num20_6, 
   amt190 LIKE type_t.num20_6, 
   amt191 LIKE type_t.num20_6, 
   amt192 LIKE type_t.num20_6, 
   amt193 LIKE type_t.num20_6, 
   amt194 LIKE type_t.num20_6, 
   amt195 LIKE type_t.num20_6, 
   amt196 LIKE type_t.num20_6, 
   amt197 LIKE type_t.num20_6, 
   amt198 LIKE type_t.num20_6, 
   amt199 LIKE type_t.num20_6, 
   amt200 LIKE type_t.num20_6
       END RECORD
 
PRIVATE TYPE type_g_detail3 RECORD
       glaq002 LIKE glaq_t.glaq002, 
   glaq002_3_desc LIKE type_t.chr500, 
   amt201 LIKE type_t.num20_6, 
   amt202 LIKE type_t.num20_6, 
   amt203 LIKE type_t.num20_6, 
   amt204 LIKE type_t.num20_6, 
   amt205 LIKE type_t.num20_6, 
   amt206 LIKE type_t.num20_6, 
   amt207 LIKE type_t.num20_6, 
   amt208 LIKE type_t.num20_6, 
   amt209 LIKE type_t.num20_6, 
   amt210 LIKE type_t.num20_6, 
   amt211 LIKE type_t.num20_6, 
   amt212 LIKE type_t.num20_6, 
   amt213 LIKE type_t.num20_6, 
   amt214 LIKE type_t.num20_6, 
   amt215 LIKE type_t.num20_6, 
   amt216 LIKE type_t.num20_6, 
   amt217 LIKE type_t.num20_6, 
   amt218 LIKE type_t.num20_6, 
   amt219 LIKE type_t.num20_6, 
   amt220 LIKE type_t.num20_6, 
   amt221 LIKE type_t.num20_6, 
   amt222 LIKE type_t.num20_6, 
   amt223 LIKE type_t.num20_6, 
   amt224 LIKE type_t.num20_6, 
   amt225 LIKE type_t.num20_6, 
   amt226 LIKE type_t.num20_6, 
   amt227 LIKE type_t.num20_6, 
   amt228 LIKE type_t.num20_6, 
   amt229 LIKE type_t.num20_6, 
   amt230 LIKE type_t.num20_6, 
   amt231 LIKE type_t.num20_6, 
   amt232 LIKE type_t.num20_6, 
   amt233 LIKE type_t.num20_6, 
   amt234 LIKE type_t.num20_6, 
   amt235 LIKE type_t.num20_6, 
   amt236 LIKE type_t.num20_6, 
   amt237 LIKE type_t.num20_6, 
   amt238 LIKE type_t.num20_6, 
   amt239 LIKE type_t.num20_6, 
   amt240 LIKE type_t.num20_6, 
   amt241 LIKE type_t.num20_6, 
   amt242 LIKE type_t.num20_6, 
   amt243 LIKE type_t.num20_6, 
   amt244 LIKE type_t.num20_6, 
   amt245 LIKE type_t.num20_6, 
   amt246 LIKE type_t.num20_6, 
   amt247 LIKE type_t.num20_6, 
   amt248 LIKE type_t.num20_6, 
   amt249 LIKE type_t.num20_6, 
   amt250 LIKE type_t.num20_6, 
   amt251 LIKE type_t.num20_6, 
   amt252 LIKE type_t.num20_6, 
   amt253 LIKE type_t.num20_6, 
   amt254 LIKE type_t.num20_6, 
   amt255 LIKE type_t.num20_6, 
   amt256 LIKE type_t.num20_6, 
   amt257 LIKE type_t.num20_6, 
   amt258 LIKE type_t.num20_6, 
   amt259 LIKE type_t.num20_6, 
   amt260 LIKE type_t.num20_6, 
   amt261 LIKE type_t.num20_6, 
   amt262 LIKE type_t.num20_6, 
   amt263 LIKE type_t.num20_6, 
   amt264 LIKE type_t.num20_6, 
   amt265 LIKE type_t.num20_6, 
   amt266 LIKE type_t.num20_6, 
   amt267 LIKE type_t.num20_6, 
   amt268 LIKE type_t.num20_6, 
   amt269 LIKE type_t.num20_6, 
   amt270 LIKE type_t.num20_6, 
   amt271 LIKE type_t.num20_6, 
   amt272 LIKE type_t.num20_6, 
   amt273 LIKE type_t.num20_6, 
   amt274 LIKE type_t.num20_6, 
   amt275 LIKE type_t.num20_6, 
   amt276 LIKE type_t.num20_6, 
   amt277 LIKE type_t.num20_6, 
   amt278 LIKE type_t.num20_6, 
   amt279 LIKE type_t.num20_6, 
   amt280 LIKE type_t.num20_6, 
   amt281 LIKE type_t.num20_6, 
   amt282 LIKE type_t.num20_6, 
   amt283 LIKE type_t.num20_6, 
   amt284 LIKE type_t.num20_6, 
   amt285 LIKE type_t.num20_6, 
   amt286 LIKE type_t.num20_6, 
   amt287 LIKE type_t.num20_6, 
   amt288 LIKE type_t.num20_6, 
   amt289 LIKE type_t.num20_6, 
   amt290 LIKE type_t.num20_6, 
   amt291 LIKE type_t.num20_6, 
   amt292 LIKE type_t.num20_6, 
   amt293 LIKE type_t.num20_6, 
   amt294 LIKE type_t.num20_6, 
   amt295 LIKE type_t.num20_6, 
   amt296 LIKE type_t.num20_6, 
   amt297 LIKE type_t.num20_6, 
   amt298 LIKE type_t.num20_6, 
   amt299 LIKE type_t.num20_6, 
   amt300 LIKE type_t.num20_6
       END RECORD
 
 
 
#add-point:自定義模組變數-標準(Module Variable)  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>}
#end add-point
 
#模組變數(Module Variables)
DEFINE g_master            type_g_master
DEFINE g_master_t          type_g_master
 
   
 
DEFINE g_detail            DYNAMIC ARRAY OF type_g_detail
DEFINE g_detail_t          type_g_detail
DEFINE g_detail2     DYNAMIC ARRAY OF type_g_detail2
DEFINE g_detail2_t   type_g_detail2
 
DEFINE g_detail3     DYNAMIC ARRAY OF type_g_detail3
DEFINE g_detail3_t   type_g_detail3
 
 
 
DEFINE g_wc                  STRING                        #儲存 user 的查詢條件
DEFINE g_wc_t                STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                 STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
DEFINE g_sql                 STRING                        #組 sql 用 
DEFINE g_cnt_sql             STRING                        #組 sql 用 
DEFINE g_forupd_sql          STRING                        #SELECT ... FOR UPDATE  SQL    
DEFINE g_cnt                 LIKE type_t.num10              
DEFINE l_ac                  LIKE type_t.num10             #目前處理的ARRAY CNT 
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog     
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_current_row         LIKE type_t.num10             #目前所在筆數
DEFINE g_current_idx         LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10             #單身 總筆數(所有資料)
DEFINE g_page                STRING                        #第幾頁
DEFINE g_ch                  base.Channel                  #外串程式用
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE g_master_idx          LIKE type_t.num10
DEFINE g_detail_idx          LIKE type_t.num10             #單身 所在筆數(所有資料)
DEFINE g_detail_idx2         LIKE type_t.num10
DEFINE g_hyper_url           STRING                        #hyperlink的主要網址
DEFINE g_msg                 STRING
DEFINE g_jump                LIKE type_t.num10
DEFINE g_no_ask              LIKE type_t.num5
DEFINE g_row_count           LIKE type_t.num10
DEFINE g_qbe_hidden          LIKE type_t.num5              #qbe頁籤折疊
DEFINE g_tot_cnt             LIKE type_t.num10             #計算總筆數
DEFINE g_num_in_page         LIKE type_t.num10             #每頁筆數
DEFINE g_page_act_list       STRING                        #分頁ACTION清單
DEFINE g_current_row_tot     LIKE type_t.num10             #目前所在總筆數
DEFINE g_page_start_num      LIKE type_t.num10             #目前頁面起始筆數
DEFINE g_page_end_num        LIKE type_t.num10             #目前頁面結束筆數
DEFINE g_master_row_move     LIKE type_t.chr1              #是否為單頭筆數更動
 
#多table用wc
DEFINE g_wc_table           STRING
DEFINE g_detail_page_action STRING
DEFINE g_pagestart          LIKE type_t.num10
 
 
 
DEFINE g_wc_filter_table           STRING
 
 
 
#add-point:自定義模組變數-客製(Module Variable) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明 name="global.argv"
{<point name="global.argv"/>}
#end add-point

{</section>}

{<section id="aglq851.main" >}
 #應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   {<point name="main.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   {<point name="main.define"/>}
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("agl","")
 
   #add-point:作業初始化 name="main.init"
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " ", 
                      " FROM ",
                      " "
   #add-point:SQL_define name="main.after_define_sql"
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aglq851_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT  ",
               " FROM  t0",
               
               " WHERE  "
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE aglq851_master_referesh FROM g_sql
 
   #add-point:main段define_sql name="main.body.define_sql"
   {<point name="main.body.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = ""
   #add-point:main段define_sql name="main.body.after_define_sql"
   {<point name="main.body.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aglq851_bcl CURSOR FROM g_forupd_sql
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aglq851 WITH FORM cl_ap_formpath("agl",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aglq851_init()   
 
      #進入選單 Menu (="N")
      CALL aglq851_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aglq851
      
   END IF 
   
   CLOSE aglq851_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 

{</section>}

{<section id="aglq851.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aglq851_init()
   #add-point:init段define-客製 name="init.define_customerization"
   {<point name="init.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:init段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   {<point name="init.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="init.before_function"
   {<point name="init.before_function" />}
   #end add-point
 
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1" 
   LET g_error_show  = 1
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_master_row_move = "Y"
   
     
 
   #add-point:畫面資料初始化 name="init.init"
   {<point name="init.init" />}
   #end add-point
 
   CALL aglq851_default_search()
END FUNCTION

{</section>}

{<section id="aglq851.default_search" >}
PRIVATE FUNCTION aglq851_default_search()
   #add-point:default_search段define-客製 name="default_search.define_customerization"
   {<point name="default_search.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:default_search段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   {<point name="default_search.define"/>}
   #end add-point
 
 
   #add-point:default_search段開始前 name="default_search.before"
   {<point name="default_search.before"/>}
   #end add-point
 
   
 
   IF NOT cl_null(g_wc) THEN
      LET g_wc = g_wc.subString(1,g_wc.getLength()-5)
   ELSE
      #預設查詢條件
      LET g_wc = " 1=2"
   END IF
 
   #add-point:default_search段結束前 name="default_search.after"
   {<point name="default_search.after"/>}
   #end add-point
 
END FUNCTION

{</section>}

{<section id="aglq851.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION aglq851_ui_dialog() 
   #add-point:ui_dialog段define-客製 name="ui_dialog.define_customerization"
   {<point name="ui_dialog.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_exit   LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx    LIKE type_t.num10
   DEFINE ls_result STRING
   DEFINE la_param  RECORD
                    prog       STRING,
                    actionid   STRING,
                    background LIKE type_t.chr1,
                    param      DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   DEFINE ls_wc     STRING
   DEFINE lc_action_choice_old    STRING
   #add-point:ui_dialog段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   {<point name="ui_dialog.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="ui_dialog.before_function"
   {<point name="ui_dialog.before_function" />}
   #end add-point
 
   CLEAR FORM  
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   CALL cl_get_num_in_page() RETURNING g_num_in_page
 
   LET li_exit = FALSE
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   LET g_current_idx = 1
   LET g_action_choice = " "
   LET lc_action_choice_old = ""
   LET g_current_row_tot = 0
   LET g_page_start_num = 1
   LET g_page_end_num = g_num_in_page
   LET g_master_row_move = "Y"
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   LET l_ac = 1
 
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   
 
   IF NOT cl_null(g_wc) AND g_wc != " 1=2" THEN
      CALL aglq851_cs()
   END IF
 
   WHILE li_exit = FALSE
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         INITIALIZE g_master.* TO NULL
         CALL g_detail.clear()
         CALL g_detail2.clear()
 
         CALL g_detail3.clear()
 
 
         LET g_wc  = " 1=2"
         LET g_wc2 = " 1=1"
         LET g_action_choice = ""
         LET g_detail_page_action = "detail_first"
         LET g_pagestart = 1
         LET g_current_row_tot = 0
         LET g_page_start_num = 1
         LET g_page_end_num = g_num_in_page
         LET g_master_row_move = "Y"
         LET g_detail_idx = 1
         LET g_detail_idx2 = 1
 
         CALL aglq851_init()
      END IF
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #add-point:input段落 name="ui_dialog.input"
         {<point name="ui_dialog.input"/>}
         #end add-point
 
         #add-point:construct段落 name="ui_dialog.construct"
         {<point name="ui_dialog.construct"/>}
         #end add-point
     
         DISPLAY ARRAY g_detail TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt)
 
            BEFORE DISPLAY
               LET g_current_page = 1
 
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               CALL aglq851_detail_action_trans()
               LET g_master_idx = l_ac
               CALL aglq851_b_fill2()
 
               #add-point:input段before row name="input.body.before_row"
               {<point name="input.body.before_row"/>}
               #end add-point
 
            #自訂ACTION(detail_show,page_1)
            
 
            #add-point:page1自定義行為 name="ui_dialog.body.page1.action"
            {<point name="ui_dialog.body.page1.action"/>}
            #end add-point
 
         END DISPLAY
 
         DISPLAY ARRAY g_detail2 TO s_detail2.*
            ATTRIBUTES(COUNT=g_detail_cnt)
 
            BEFORE DISPLAY
               LET g_current_page = 2
 
            BEFORE ROW
               LET g_detail_idx2 = DIALOG.getCurrentRow("s_detail2")
               LET l_ac = g_detail_idx2
               LET g_detail_idx2 = l_ac
               DISPLAY g_detail_idx2 TO FORMONLY.idx
 
               #add-point:input段before row name="input.body2.before_row"
               {<point name="input.body2.before_row"/>}
               #end add-point
 
            #自訂ACTION(detail_show,page_2)
            
 
            #add-point:page2自定義行為 name="ui_dialog.body2.action"
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
 
         END DISPLAY
 
         DISPLAY ARRAY g_detail3 TO s_detail3.*
            ATTRIBUTES(COUNT=g_detail_cnt)
 
            BEFORE DISPLAY
               LET g_current_page = 3
 
            BEFORE ROW
               LET g_detail_idx2 = DIALOG.getCurrentRow("s_detail3")
               LET l_ac = g_detail_idx2
               LET g_detail_idx2 = l_ac
               DISPLAY g_detail_idx2 TO FORMONLY.idx
 
               #add-point:input段before row name="input.body3.before_row"
               {<point name="input.body3.before_row"/>}
               #end add-point
 
            #自訂ACTION(detail_show,page_3)
            
 
            #add-point:page3自定義行為 name="ui_dialog.body3.action"
            {<point name="ui_dialog.body3.action"/>}
            #end add-point
 
         END DISPLAY
 
 
 
         #add-point:ui_dialog段define name="ui_dialog.more_displayarray"
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
    
         BEFORE DIALOG
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            CALL aglq851_fetch('')
 
            #add-point:ui_dialog段before dialog name="ui_dialog.bef_dialog"
            {<point name="ui_dialog.bef_dialog"/>}
            #end add-point
            NEXT FIELD glaald
 
         AFTER DIALOG
            #add-point:ui_dialog段 after dialog name="ui_dialog.after_dialog"
            {<point name="ui_dialog.after_dialog"/>}
            #end add-point
            
         ON ACTION exit
            LET g_action_choice="exit"
            LET INT_FLAG = FALSE
            LET li_exit = TRUE
            EXIT DIALOG 
      
         ON ACTION close
            LET INT_FLAG=FALSE
            LET li_exit = TRUE
            EXIT DIALOG
 
         ON ACTION accept
            INITIALIZE g_wc_filter TO NULL
            IF cl_null(g_wc) THEN
               LET g_wc = " 1=1"
            END IF
 
 
   
            IF cl_null(g_wc2) THEN
               LET g_wc2 = " 1=1"
            END IF
 
 
 
            #add-point:ON ACTION accept name="ui_dialog.accept"
            {<point name="ui_dialog.accept"/>}
            #end add-point
 
            CALL aglq851_cs()
 
         ON ACTION agendum   # 待辦事項
            #add-point:ON ACTION agendum name="ui_dialog.agendum"
            {<point name="ui_dialog.agendum"/>}
            #end add-point
            CALL cl_user_overview()
 
         ON ACTION exporttoexcel   #匯出excel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               CALL g_export_node.clear()
               LET g_export_node[1] = base.typeInfo.create(g_detail)
               LET g_export_id[1]   = "s_detail1"
               LET g_export_node[2] = base.typeInfo.create(g_detail2)
               LET g_export_id[2]   = "s_detail2"
 
               LET g_export_node[3] = base.typeInfo.create(g_detail3)
               LET g_export_id[3]   = "s_detail3"
 
 
               #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
               {<point name="menu.exporttoexcel" />}
               #end add-point
               CALL cl_export_to_excel_getpage()
               CALL cl_export_to_excel()
            END IF
 
 
         ON ACTION datarefresh   # 重新整理
            #為避免按上下筆影響效能，所以有作一些處理
            LET lc_action_choice_old = g_action_choice
            LET g_action_choice = "fetch"
            CALL aglq851_fetch('F')
            LET g_action_choice = lc_action_choice_old
 
         ON ACTION qbehidden     #qbe頁籤折疊
            IF g_qbe_hidden THEN
               CALL gfrm_curr.setElementHidden("qbe",0)
               CALL gfrm_curr.setElementImage("qbehidden","16/mainhidden.png")
               LET g_qbe_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("qbe",1)
               CALL gfrm_curr.setElementImage("qbehidden","16/worksheethidden.png")
               LET g_qbe_hidden = 1     #hidden
            END IF
 
         ON ACTION datainfo   #串查至主維護程式
            #add-point:ON ACTION datainfo name="ui_dialog.datainfo"
            {<point name="ui_dialog.datainfo"/>}
            #end add-point
            CALL aglq851_maintain_prog()
 
         ON ACTION first   # 第一筆
            #為避免按上下筆影響效能，所以有作一些處理
            LET lc_action_choice_old = g_action_choice
            LET g_action_choice = "fetch"
            CALL aglq851_fetch('F')
            LET g_action_choice = lc_action_choice_old
 
         ON ACTION previous   # 上一筆
            #為避免按上下筆影響效能，所以有作一些處理
            LET lc_action_choice_old = g_action_choice
            LET g_action_choice = "fetch"
            CALL aglq851_fetch('P')
            LET g_action_choice = lc_action_choice_old
 
         ON ACTION jump   # 跳至第幾筆
            #為避免按上下筆影響效能，所以有作一些處理
            LET lc_action_choice_old = g_action_choice
            LET g_action_choice = "fetch"
            CALL aglq851_fetch('/')
            LET g_action_choice = lc_action_choice_old
 
         ON ACTION next   # 下一筆
            #為避免按上下筆影響效能，所以有作一些處理
            LET lc_action_choice_old = g_action_choice
            LET g_action_choice = "fetch"
            CALL aglq851_fetch('N')
            LET g_action_choice = lc_action_choice_old
 
         ON ACTION last   # 最後一筆
            #為避免按上下筆影響效能，所以有作一些處理
            LET lc_action_choice_old = g_action_choice
            LET g_action_choice = "fetch"
            CALL aglq851_fetch('L')
            LET g_action_choice = lc_action_choice_old
 
         ON ACTION detail_first               #page first
            LET g_action_choice = "detail_first"
            LET g_detail_page_action = "detail_first"
            LET g_master_row_move = "N"
            CALL aglq851_b_fill()
 
         ON ACTION detail_previous                #page previous
            LET g_action_choice = "detail_previous"
            LET g_detail_page_action = "detail_previous"
            LET g_master_row_move = "N"
            CALL aglq851_b_fill()
 
         ON ACTION detail_next                #page next
            LET g_action_choice = "detail_next"
            LET g_detail_page_action = "detail_next"
            LET g_master_row_move = "N"
            CALL aglq851_b_fill()
 
         ON ACTION detail_last                #page last
            LET g_action_choice = "detail_last"
            LET g_detail_page_action = "detail_last"
            LET g_master_row_move = "N"
            CALL aglq851_b_fill()
 
         
         #應用 qs19 樣板自動產生(Version:3)
         #有關於sel欄位選取的action段落
         #選擇全部
         ON ACTION selall
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 1)
            FOR li_idx = 1 TO g_detail.getLength()
               LET g_detail[li_idx].sel = "Y"
            END FOR
 
            #add-point:ui_dialog段on action selall name="ui_dialog.onaction_selall"
            {<point name="ui_dialog.onaction_selall"/>}
            #end add-point
 
         #取消全部
         ON ACTION selnone
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 0)
            FOR li_idx = 1 TO g_detail.getLength()
               LET g_detail[li_idx].sel = "N"
            END FOR
 
            #add-point:ui_dialog段on action selnone name="ui_dialog.onaction_selnone"
            {<point name="ui_dialog.onaction_selnone"/>}
            #end add-point
 
         #勾選所選資料
         ON ACTION sel
            FOR li_idx = 1 TO g_detail.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_detail[li_idx].sel = "Y"
               END IF
            END FOR
 
            #add-point:ui_dialog段on action sel name="ui_dialog.onaction_sel"
            {<point name="ui_dialog.onaction_sel"/>}
            #end add-point
 
         #取消所選資料
         ON ACTION unsel
            FOR li_idx = 1 TO g_detail.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_detail[li_idx].sel = "N"
               END IF
            END FOR
 
            #add-point:ui_dialog段on action unsel name="ui_dialog.onaction_unsel"
            {<point name="ui_dialog.onaction_unsel"/>}
            #end add-point
 
 
 
 
 
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               {<point name="menu.output" mark="Y"/>}
               #END add-point
               
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION quickprint
            LET g_action_choice="quickprint"
            IF cl_auth_chk_act("quickprint") THEN
               
               #add-point:ON ACTION quickprint name="menu.quickprint"
               {<point name="menu.quickprint" mark="Y"/>}
               #END add-point
               
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               
               #add-point:ON ACTION query name="menu.query"
               {<point name="menu.query" mark="Y"/>}
               #END add-point
               
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION exchange_ld
            LET g_action_choice="exchange_ld"
            IF cl_auth_chk_act("exchange_ld") THEN
               
               #add-point:ON ACTION exchange_ld name="menu.exchange_ld"
               {<point name="menu.exchange_ld" mark="Y"/>}
               #END add-point
               
               
            END IF
 
 
 
 
      
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
 
         #add-point:查詢方案相關ACTION設定前 name="ui_dialog.set_qbe_action_before"
         {<point name="ui_dialog.set_qbe_action_before" mark="Y"/>}
         #end add-point
 
         ON ACTION qbeclear   # 條件清除
            CLEAR FORM
            #add-point:條件清除後 name="ui_dialog.qbeclear"
            {<point name="ui_dialog.qbeclear"/>}
            #end add-point 
 
         #add-point:查詢方案相關ACTION設定後 name="ui_dialog.set_qbe_action_after"
         {<point name="ui_dialog.set_qbe_action_after"/>}
         #end add-point 
 
      END DIALOG 
   
   END WHILE
 
END FUNCTION

{</section>}

{<section id="aglq851.cs" >}
#+ 組單頭CURSOR
PRIVATE FUNCTION aglq851_cs()
   #add-point:cs段define-客製 name="cs.define_customerization"
   {<point name="cs.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:cs段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   {<point name="cs.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="cs.before_function"
   {<point name="cs.before_function" />}
   #end add-point
 
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
 
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
 
   IF g_wc2 = " 1=1" THEN
      #add-point:cs段單頭sql組成(未下單身條件) name="cs.sql_define_1"
      {<point name="cs.sql_define_1"/>}
      #end add-point
   ELSE
      #add-point:cs段單頭sql組成(有下單身條件) name="cs.sql_define_2"
      {<point name="cs.sql_define_2"/>}
      #end add-point
   END IF
 
   PREPARE aglq851_pre FROM g_sql
   DECLARE aglq851_curs SCROLL CURSOR WITH HOLD FOR aglq851_pre
   OPEN aglq851_curs
 
   #add-point:cs段單頭總筆數計算 name="cs.head_total_row_count"
   {<point name="cs.head_total_row_count"/>}
   #end add-point
   PREPARE aglq851_precount FROM g_cnt_sql
   EXECUTE aglq851_precount INTO g_row_count
 
   IF SQLCA.SQLCODE THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = SQLCA.SQLCODE 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
 
   ELSE
      CALL aglq851_fetch("F")
   END IF
END FUNCTION

{</section>}

{<section id="aglq851.fetch" >}
#+ 抓取單頭資料
PRIVATE FUNCTION aglq851_fetch(p_flag)
   #add-point:fetch段define-客製 name="fetch.define_customerization"
   {<point name="fetch.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   {<point name="fetch.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="fetch.before_function"
   {<point name="fetch.before_function" />}
   #end add-point
 
   MESSAGE ""
 
   #FETCH段CURSOR移動
   #應用 qs18 樣板自動產生(Version:3)
   #add-point:fetch段CURSOR移動 name="fetch.cursor_action"
   {<point name="fetch.cursor_action"/>}
   #end add-point
 
 
 
 
 
   IF SQLCA.sqlcode THEN
      # 清空右側畫面欄位值，但須保留左側qbe查詢條件
      INITIALIZE g_master.* TO NULL
      DISPLAY g_master.* TO glaald,glaald_desc,glaacomp,glaacomp_desc,glaa001,glaa016,glaa020
      CALL g_detail.clear()
      CALL g_detail2.clear()
 
      CALL g_detail3.clear()
 
 
      #add-point:陣列清空 name="fetch.array_clear"
      {<point name="fetch.array_clear" />}
      #end add-point
      DISPLAY '' TO FORMONLY.h_index
      DISPLAY '' TO FORMONLY.h_count
      DISPLAY '' TO FORMONLY.idx
      DISPLAY '' TO FORMONLY.cnt
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = '-100' 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      RETURN
   ELSE
      CASE p_flag
         WHEN 'F' LET g_current_idx = 1
         WHEN 'P' LET g_current_idx = g_current_idx - 1
         WHEN 'N' LET g_current_idx = g_current_idx + 1
         WHEN 'L' LET g_current_idx = g_row_count
         WHEN '/' LET g_current_idx = g_jump
      END CASE
      DISPLAY g_current_idx TO FORMONLY.h_index
      DISPLAY g_row_count TO FORMONLY.h_count
      CALL cl_navigator_setting( g_current_idx, g_row_count )
   END IF
 
   #add-point:fetch結束前 name="fetch.after"
   {<point name="fetch.after" />}
   #end add-point
 
   LET g_master_row_move = "Y"
   #重新顯示
   CALL aglq851_show()
 
END FUNCTION

{</section>}

{<section id="aglq851.show" >}
PRIVATE FUNCTION aglq851_show()
   #add-point:show段define-客製 name="show.define_customerization"
   {<point name="show.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ls_sql    STRING
   #add-point:show段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   {<point name="show.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="show.before_function"
   {<point name="show.before_function" />}
   #end add-point
 
   DISPLAY g_master.* TO glaald,glaald_desc,glaacomp,glaacomp_desc,glaa001,glaa016,glaa020
 
   #讀入ref值
   #add-point:show段單身reference name="show.head.reference"
   {<point name="show.head.reference"/>}
   #end add-point
 
   LET g_detail_page_action = "detail_first"
   LET g_pagestart = 1
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   CALL aglq851_b_fill()
 
END FUNCTION

{</section>}

{<section id="aglq851.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION aglq851_b_fill()
   #add-point:b_fill段define-客製 name="b_fill.define_customerization"
   {<point name="b_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ls_wc           STRING
   DEFINE ls_sql_rank     STRING
   #add-point:b_fill段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   {<point name="b_fill.define"/>}
   #end add-point
 
   LET g_wc = g_wc, cl_sql_auth_filter()   #(ver:32) add cl_sql_auth_filter()
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   {<point name="b_fill.sql_before"/>}
   #end add-point
 
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
 
   CALL g_detail.clear()
 
   #add-point:陣列清空 name="b_fill.array_clear"
   {<point name="b_fill.array_clear" />}
   #end add-point
 
   LET l_ac = 1
 
   # b_fill段sql組成及FOREACH撰寫
   #應用 qs09 樣板自動產生(Version:3)
   #+ b_fill段資料取得(包含sql組成及FOREACH段撰寫)
   #add-point:b_fill段sql name="b_fill.sql"
   {<point name="b_fill.sql"/>}
   #end add-point
 
 
 
 
 
   #add-point:b_fill段資料填充(其他單身) name="b_fill.others.fill"
   {<point name="b_fill.others.fill"/>}
   #end add-point
 
   CALL g_detail.deleteElement(g_detail.getLength())
 
   #add-point:陣列長度調整 name="b_fill.array_deleteElement"
   {<point name="b_fill.array_deleteElement" />}
   #end add-point
 
   LET g_error_show = 0
 
   #單身總筆數顯示
   LET g_detail_cnt = g_detail.getLength()
 
   #調整單身index指標，避免翻頁後指到空白筆數
   CALL aglq851_detail_index_setting()
 
   #重新計算單身筆數並呈現
   CALL aglq851_detail_action_trans()
 
   CALL aglq851_b_fill2()
 
   
 
END FUNCTION

{</section>}

{<section id="aglq851.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION aglq851_b_fill2()
   #add-point:b_fill2段define-客製 name="b_fill2.define_customerization"
   {<point name="b_fill2.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_ac           LIKE type_t.num10
   #add-point:b_fill2段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   {<point name="b_fill2.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="b_fill2.before_function"
   {<point name="b_fill2.before_function" />}
   #end add-point
 
   LET li_ac = 1
 
   #單身組成
   #應用 qs11 樣板自動產生(Version:3)
   #+ b_fill2段table資料取得(包含sql組成及資料填充)
   #add-point:sql組成 name="b_fill2.fill"
   {<point name="b_fill2.fill" />}
   #end add-point
 
 
 
 
 
 
   #add-point:單身填充後 name="b_fill2.after_fill"
   {<point name="b_fill2.after_fill" />}
   #end add-point
 
END FUNCTION

{</section>}

{<section id="aglq851.detail_show" >}
#+ 顯示相關資料
PRIVATE FUNCTION aglq851_detail_show(ps_page)
   #add-point:show段define-客製 name="detail_show.define_customerization"
   {<point name="detail_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_page    STRING
   DEFINE ls_sql     STRING
   #add-point:show段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前 name="detail_show.before"
   {<point name="detail_show.before"/>}
   #end add-point
 
   
 
   #讀入ref值
   IF ps_page.getIndexOf("'1'",1) > 0 THEN
      #帶出公用欄位reference值page1
      
 
      #add-point:show段單身reference name="detail_show.body.reference"
      {<point name="detail_show.body.reference"/>}
      #end add-point
   END IF
 
   IF ps_page.getIndexOf("'2'",1) > 0 THEN
      #帶出公用欄位reference值page2
      
 
      #add-point:show段單身reference name="detail_show.body2.reference"
      {<point name="detail_show.body2.reference"/>}
      #end add-point
   END IF
 
   IF ps_page.getIndexOf("'3'",1) > 0 THEN
      #帶出公用欄位reference值page3
      
 
      #add-point:show段單身reference name="detail_show.body3.reference"
      {<point name="detail_show.body3.reference"/>}
      #end add-point
   END IF
 
 
 
   #add-point:detail_show段之後 name="detail_show.after"
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION

{</section>}

{<section id="aglq851.maintain_prog" >}
#+ 串查至主維護程式
PRIVATE FUNCTION aglq851_maintain_prog()
   #add-point:maintain_prog段define-客製 name="maintain_prog.define_customerization"
   {<point name="maintain_prog.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ls_js      STRING
   DEFINE la_param   RECORD
                     prog       STRING,
                     actionid   STRING,
                     background LIKE type_t.chr1,
                     param      DYNAMIC ARRAY OF STRING
                     END RECORD
   DEFINE ls_j       LIKE type_t.num5
   #add-point:maintain_prog段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="maintain_prog.define"
   {<point name="maintain_prog.define"/>}
   #end add-point
 
 
   #add-point:maintain_prog段開始前 name="maintain_prog.before"
   {<point name="maintain_prog.before"/>}
   #end add-point
 
   LET la_param.prog = ""
 
 
 
   IF NOT cl_null(la_param.prog) THEN
      LET ls_js = util.JSON.stringify(la_param)
      CALL cl_cmdrun_wait(ls_js)
   END IF
 
   #add-point:maintain_prog段結束前 name="maintain_prog.after"
   {<point name="maintain_prog.after"/>}
   #end add-point
END FUNCTION

{</section>}

{<section id="aglq851.detail_action_trans" >}
#+ 單身分頁筆數顯示及action圖片顯示切換功能
PRIVATE FUNCTION aglq851_detail_action_trans()
   #add-point:detail_action_trans段define-客製 name="detail_action_trans.define_customerization"
   {<point name="detail_action_trans.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:detail_action_trans段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_action_trans.define"
   {<point name="detail_action_trans.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="detail_action_trans.before_function"
   {<point name="detail_action_trans.before_function" />}
   #end add-point
 
   #因應單身切頁功能，筆數計算方式調整
   LET g_current_row_tot = g_pagestart + g_detail_idx - 1
   DISPLAY g_current_row_tot TO FORMONLY.idx
   DISPLAY g_tot_cnt TO FORMONLY.cnt
 
   #顯示單身頁面的起始與結束筆數
   LET g_page_start_num = g_pagestart
   LET g_page_end_num = g_pagestart + g_num_in_page - 1
   DISPLAY g_page_start_num TO FORMONLY.p_start
   DISPLAY g_page_end_num TO FORMONLY.p_end
 
   #目前不支援跳頁功能
   LET g_page_act_list = "detail_first,detail_previous,'',detail_next,detail_last"
   CALL cl_navigator_detail_page_setting(g_page_act_list,g_current_row_tot,g_pagestart,g_num_in_page,g_tot_cnt)
 
END FUNCTION

{</section>}

{<section id="aglq851.detail_index_setting" >}
#+ 單身切頁後，index重新調整，避免翻頁後指到空白筆數
PRIVATE FUNCTION aglq851_detail_index_setting()
   #add-point:detail_index_setting段define-客製 name="detail_index_setting.define_customerization"
   {<point name="detail_index_setting.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_redirect     BOOLEAN
   DEFINE ldig_curr       ui.Dialog
   #add-point:detail_index_setting段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_index_setting.define"
   {<point name="detail_index_setting.define"/>}
   #end add-point
 
 
   #add-point:FUNCTION前置處理 name="detail_index_setting.before_function"
   {<point name="detail_index_setting.before_function" />}
   #end add-point
 
   IF g_master_row_move = "Y" THEN
      LET g_detail_idx = 1
      LET li_redirect = TRUE
   ELSE
      IF g_curr_diag IS NOT NULL THEN
         CASE
            WHEN g_curr_diag.getCurrentRow("s_detail1") <= "0"
               LET g_detail_idx = 1
               IF g_detail.getLength() THEN
                  LET li_redirect = TRUE
               END IF
            WHEN g_curr_diag.getCurrentRow("s_detail1") > g_detail.getLength() AND g_detail.getLength() > 0
               LET g_detail_idx = g_detail.getLength()
               LET li_redirect = TRUE
            WHEN g_curr_diag.getCurrentRow("s_detail1") != g_detail_idx
               IF g_detail_idx > g_detail.getLength() THEN
                  LET g_detail_idx = g_detail.getLength()
               END IF
               LET li_redirect = TRUE
         END CASE
      END IF
   END IF
 
   IF li_redirect THEN
      LET ldig_curr = ui.Dialog.getCurrent()
      CALL ldig_curr.setCurrentRow("s_detail1", g_detail_idx)
   END IF
 
END FUNCTION

{</section>}

{<section id="aglq851.mask_functions" >}
 &include "erp/agl/aglq851_mask.4gl"

{</section>}

{<section id="aglq851.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

