{<section id="aglq930.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:3(2015-12-21 16:51:35), PR版次:
#+ Customerized Version.: SD版次:(), PR版次:
#+ Build......: 000038
#+ Filename...: aglq930
#+ Description: 合併報表資產負債工作底稿查詢
#+ Creator....: 05016(2015-12-14 10:18:35)
#+ Modifier...: 05016 -SD/PR-
{</section>}



{<section id="aglq930.global" >}
#應用 q02 樣板自動產生(Version:42)
#add-point:填寫註解說明 name="global.memo"
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"
{<point name="global.memo_customerization" edit="c"/>}
#end add-point
 
IMPORT os
IMPORT util
#add-point:增加匯入項目 name="global.import"
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"
{<point name="global.inc" mark="Y"/>}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_gldn_d RECORD
       #statepic       LIKE type_t.chr1,
       
       l_assest1 LIKE type_t.chr500, 
   l_glfb0311 LIKE type_t.num5, 
   l_gldn010_01 LIKE type_t.num20_6, 
   l_gldn010_02 LIKE type_t.num20_6, 
   l_gldn010_03 LIKE type_t.num20_6, 
   l_gldn010_04 LIKE type_t.num20_6, 
   l_gldn010_05 LIKE type_t.num20_6, 
   l_gldn010_06 LIKE type_t.num20_6, 
   l_gldn010_07 LIKE type_t.num20_6, 
   l_gldn010_08 LIKE type_t.num20_6, 
   l_gldn010_09 LIKE type_t.num20_6, 
   l_gldn010_10 LIKE type_t.num20_6, 
   l_gldn010_11 LIKE type_t.num20_6, 
   l_gldn010_12 LIKE type_t.num20_6, 
   l_gldn010_13 LIKE type_t.num20_6, 
   l_gldn010_14 LIKE type_t.num20_6, 
   l_gldn010_15 LIKE type_t.num20_6, 
   l_gldn010_16 LIKE type_t.num20_6, 
   l_gldn010_17 LIKE type_t.num20_6, 
   l_gldn010_18 LIKE type_t.num20_6, 
   l_gldn010_19 LIKE type_t.num20_6, 
   l_gldn010_20 LIKE type_t.num20_6, 
   l_gldq0171 LIKE type_t.num20_6, 
   l_gldq0181 LIKE type_t.num20_6, 
   l_gldq0172 LIKE type_t.num20_6, 
   l_gldq0182 LIKE type_t.num20_6, 
   l_gldq0173 LIKE type_t.num20_6, 
   l_gldq0183 LIKE type_t.num20_6, 
   l_amt1 LIKE type_t.num20_6, 
   l_assest2 LIKE type_t.chr500, 
   l_glfb0312 LIKE type_t.num5, 
   l_gldn010_21 LIKE type_t.num20_6, 
   l_gldn010_22 LIKE type_t.num20_6, 
   l_gldn010_23 LIKE type_t.num20_6, 
   l_gldn010_24 LIKE type_t.num20_6, 
   l_gldn010_25 LIKE type_t.num20_6, 
   l_gldn010_26 LIKE type_t.num20_6, 
   l_gldn010_27 LIKE type_t.num20_6, 
   l_gldn010_28 LIKE type_t.num20_6, 
   l_gldn010_29 LIKE type_t.num20_6, 
   l_gldn010_30 LIKE type_t.num20_6, 
   l_gldn010_31 LIKE type_t.num20_6, 
   l_gldn010_32 LIKE type_t.num20_6, 
   l_gldn010_33 LIKE type_t.num20_6, 
   l_gldn010_34 LIKE type_t.num20_6, 
   l_gldn010_35 LIKE type_t.num20_6, 
   l_gldn010_36 LIKE type_t.num20_6, 
   l_gldn010_37 LIKE type_t.num20_6, 
   l_gldn010_38 LIKE type_t.num20_6, 
   l_gldn010_39 LIKE type_t.num20_6, 
   l_gldn010_40 LIKE type_t.num20_6, 
   l_gldq0174 LIKE type_t.num20_6, 
   l_gldq0184 LIKE type_t.num20_6, 
   l_gldq0175 LIKE type_t.num20_6, 
   l_gldq0185 LIKE type_t.num20_6, 
   l_gldq0176 LIKE type_t.num20_6, 
   l_gldq0186 LIKE type_t.num20_6, 
   l_amt2 LIKE type_t.num20_6, 
   gldn001 LIKE gldn_t.gldn001, 
   gldn002 LIKE gldn_t.gldn002, 
   gldn003 LIKE gldn_t.gldn003, 
   gldn004 LIKE gldn_t.gldn004, 
   gldn005 LIKE gldn_t.gldn005, 
   gldn006 LIKE gldn_t.gldn006, 
   gldn007 LIKE gldn_t.gldn007, 
   gldn008 LIKE gldn_t.gldn008, 
   gldn032 LIKE gldn_t.gldn032, 
   gldn033 LIKE gldn_t.gldn033, 
   gldn040 LIKE gldn_t.gldn040, 
   gldn041 LIKE gldn_t.gldn041, 
   gldnld LIKE gldn_t.gldnld, 
   l_glfbseq LIKE type_t.num10 
       END RECORD

 
#add-point:自定義模組變數-標準(Module Variable)  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>}
#end add-point
 
#模組變數(Module Variables)
DEFINE g_master                     type_g_gldn_d
DEFINE g_master_t                   type_g_gldn_d
DEFINE g_gldn_d          DYNAMIC ARRAY OF type_g_gldn_d
DEFINE g_gldn_d_t        type_g_gldn_d

      
DEFINE g_wc                 STRING
DEFINE g_wc_t               STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                STRING
DEFINE g_wc_filter          STRING
DEFINE g_wc_filter_t        STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num10              
DEFINE l_ac_d               LIKE type_t.num10              #單身idx 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_current_page       LIKE type_t.num5              #目前所在頁數
DEFINE g_detail_cnt         LIKE type_t.num10             #單身 總筆數(所有資料)
DEFINE g_detail_cnt2        LIKE type_t.num10             #單身 總筆數(所有資料)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_master_idx         LIKE type_t.num10
DEFINE g_detail_idx         LIKE type_t.num10
DEFINE g_detail_idx2        LIKE type_t.num10
DEFINE g_hyper_url          STRING                        #hyperlink的主要網址
DEFINE g_tot_cnt            LIKE type_t.num10             #計算總筆數
DEFINE g_num_in_page        LIKE type_t.num10             #每頁筆數
DEFINE g_current_row_tot    LIKE type_t.num10             #目前所在總筆數
DEFINE g_page_act_list      STRING                        #分頁ACTION清單
DEFINE g_page_start_num     LIKE type_t.num10             #目前頁面起始筆數
DEFINE g_page_end_num       LIKE type_t.num10             #目前頁面結束筆數
 
#多table用wc
DEFINE g_wc_table           STRING
DEFINE g_wc_filter_table    STRING
DEFINE g_detail_page_action STRING
DEFINE g_pagestart          LIKE type_t.num10


 
#add-point:自定義模組變數-客製(Module Variable) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c"/>}
##end add-point
 
#add-point:傳入參數說明 name="global.argv"
{<point name="global.argv"/>}
#end add-point
{</section>}
 
{<section id="aglq930.main" >}
 #應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   {<point name="main.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   {<point name="main.define"/>}
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("agl","")
 
   #add-point:作業初始化 name="main.init"
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " ", 
                      " FROM ",
                      " "
   #add-point:SQL_define name="main.after_define_sql"
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aglq930_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT  ",
               " FROM  t0",
               
               " WHERE  "
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE aglq930_master_referesh FROM g_sql
 
   #add-point:main段define_sql name="main.body.define_sql"
   {<point name="main.body.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = ""
   #add-point:main段define_sql name="main.body.after_define_sql"
   {<point name="main.body.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aglq930_bcl CURSOR FROM g_forupd_sql
    

   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aglq930 WITH FORM cl_ap_formpath("agl",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aglq930_init()   
 
      #進入選單 Menu (="N")
      CALL aglq930_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aglq930
      
   END IF 
   
   CLOSE aglq930_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN



{</section>}
 
{<section id="aglq930.init" >}
#+ 畫面資料初始化
PRIVATE FUNCTION aglq930_init()
   #add-point:init段define-客製 name="init.define_customerization"
   {<point name="init.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:init段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   {<point name="init.define"/>}
   #end add-point
   
 
   #add-point:FUNCTION前置處理 name="init.before_function"
   {<point name="init.before_function" />}
   #end add-point
 
   LET g_error_show  = 1
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1"
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   
   
   #add-point:畫面資料初始化 name="init.init"
   {<point name="init.init" />}
   #end add-point
 
   CALL aglq930_default_search()  
END FUNCTION
{</section>}
 
 
{<section id="aglq930.default_search" >}
PRIVATE FUNCTION aglq930_default_search()
   #add-point:default_search段define-客製 name="default_search.define_customerization"
   {<point name="default_search.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:default_search段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   {<point name="default_search.define"/>}
   #end add-point
 
   #add-point:default_search段開始前 name="default_search.before"
   {<point name="default_search.before"/>}
   #end add-point
 
   #應用 qs27 樣板自動產生(Version:3)
   #+ 組承接外部參數時資料庫欄位對應條件(單身)
   IF NOT cl_null(g_argv[01]) THEN
      LET g_wc = g_wc, " gldnld = '", g_argv[01], "' AND "
   END IF
 
   IF NOT cl_null(g_argv[02]) THEN
      LET g_wc = g_wc, " gldn001 = '", g_argv[02], "' AND "
   END IF
   IF NOT cl_null(g_argv[03]) THEN
      LET g_wc = g_wc, " gldn002 = '", g_argv[03], "' AND "
   END IF
   IF NOT cl_null(g_argv[04]) THEN
      LET g_wc = g_wc, " gldn003 = '", g_argv[04], "' AND "
   END IF
   IF NOT cl_null(g_argv[05]) THEN
      LET g_wc = g_wc, " gldn004 = '", g_argv[05], "' AND "
   END IF
   IF NOT cl_null(g_argv[06]) THEN
      LET g_wc = g_wc, " gldn005 = '", g_argv[06], "' AND "
   END IF
   IF NOT cl_null(g_argv[07]) THEN
      LET g_wc = g_wc, " gldn006 = '", g_argv[07], "' AND "
   END IF
   IF NOT cl_null(g_argv[08]) THEN
      LET g_wc = g_wc, " gldn007 = '", g_argv[08], "' AND "
   END IF
   IF NOT cl_null(g_argv[09]) THEN
      LET g_wc = g_wc, " gldn008 = '", g_argv[09], "' AND "
   END IF
   IF NOT cl_null(g_argv[10]) THEN
      LET g_wc = g_wc, " gldn032 = '", g_argv[10], "' AND "
   END IF
   IF NOT cl_null(g_argv[11]) THEN
      LET g_wc = g_wc, " gldn033 = '", g_argv[11], "' AND "
   END IF
   IF NOT cl_null(g_argv[12]) THEN
      LET g_wc = g_wc, " gldn040 = '", g_argv[12], "' AND "
   END IF
   IF NOT cl_null(g_argv[13]) THEN
      LET g_wc = g_wc, " gldn041 = '", g_argv[13], "' AND "
   END IF

 



 
   IF NOT cl_null(g_wc) THEN
      LET g_wc = g_wc.subString(1,g_wc.getLength()-5)
   ELSE
      #預設查詢條件
      LET g_wc = " 1=2"
   END IF
 
   #add-point:default_search段開始後 name="default_search.after"
   {<point name="default_search.after"/>}
   #end add-point
 
END FUNCTION
{</section>}
 
{<section id="aglq930.ui_dialog" >}
#+ 功能選單 
PRIVATE FUNCTION aglq930_ui_dialog()
   #add-point:ui_dialog段define-客製 name="ui_dialog.define_customerization"
   {<point name="ui_dialog.define_customerization" edit="c" mark="Y"/>}
   #end add-point 
   DEFINE ls_wc      STRING
   DEFINE li_idx     LIKE type_t.num10
   DEFINE lc_action_choice_old     STRING
   DEFINE lc_current_row           LIKE type_t.num10
   DEFINE ls_js      STRING
   DEFINE la_param   RECORD
                     prog       STRING,
                     actionid   STRING,
                     background LIKE type_t.chr1,
                     param      DYNAMIC ARRAY OF STRING
                     END RECORD
   #add-point:ui_dialog段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   {<point name="ui_dialog.define"/>}
   #end add-point 
 
   #add-point:FUNCTION前置處理 name="ui_dialog.before_function"
   {<point name="ui_dialog.before_function" />}
   #end add-point
 
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   
   LET g_action_choice = " "
   LET lc_action_choice_old = ""
   CALL cl_set_act_visible("accept,cancel", FALSE)
   CALL cl_get_num_in_page() RETURNING g_num_in_page
         
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   LET g_detail_page_action = "detail_first"
   LET g_pagestart = 1
   LET g_current_row_tot = 1
   LET g_page_start_num = 1
   LET g_page_end_num = g_num_in_page
   IF NOT cl_null(g_wc) AND g_wc != " 1=2" THEN
      LET g_detail_idx = 1
      LET g_detail_idx2 = 1
      CALL aglq930_b_fill()
   ELSE
      CALL aglq930_query()
   END IF
   
   WHILE TRUE
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_gldn_d.clear()

         LET g_wc  = " 1=2"
         LET g_wc2 = " 1=1"
         LET g_action_choice = ""
         LET g_detail_page_action = "detail_first"
         LET g_pagestart = 1
         LET g_current_row_tot = 1
         LET g_page_start_num = 1
         LET g_page_end_num = g_num_in_page
         LET g_detail_idx = 1
         LET g_detail_idx2 = 1
 
         CALL aglq930_init()
      END IF
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_gldn_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               LET g_current_page = 1
 
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
 
               #為避免按上下筆影響執行效能，所以有作一些處理
               LET lc_action_choice_old = g_action_choice
               LET g_action_choice = "fetch"
               CALL aglq930_fetch()
               LET g_action_choice = lc_action_choice_old
               LET g_master_idx = l_ac
               CALL aglq930_detail_action_trans()
               #add-point:input段before row name="input.body.before_row"
               {<point name="input.body.before_row"/>}
               #end add-point  
            
            #自訂ACTION(detail_show,page_1)
            
 
            #add-point:page1自定義行為 name="ui_dialog.body.page1.action"
            {<point name="ui_dialog.body.page1.action"/>}
            #end add-point
 
         END DISPLAY
      

         

      
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         BEFORE DIALOG
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            CALL aglq930_detail_action_trans()
 
            #add-point:ui_dialog段before dialog name="ui_dialog.bef_dialog"
            {<point name="ui_dialog.bef_dialog"/>}
            #end add-point
 
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               #該樣板不需此段落
               CALL aglq930_query()
               #add-point:ON ACTION query name="menu.query"
               {<point name="menu.query" mark="Y"/>}
               #END add-point
               
               
            END IF
 



         #應用 a43 樣板自動產生(Version:4)
         ON ACTION datainfo
            LET g_action_choice="datainfo"
            IF cl_auth_chk_act("datainfo") THEN
               #該樣板不需此段落
               
               #add-point:ON ACTION datainfo name="menu.datainfo"
               {<point name="menu.datainfo" mark="Y"/>}
               #END add-point
               
               
            END IF
 



      
         ON ACTION filter
            LET g_action_choice="filter"
            CALL aglq930_filter()
            #add-point:ON ACTION filter name="menu.filter"
            {<point name="menu.filter" />}
            #END add-point
 
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice = "exit"
            EXIT DIALOG
 
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
 
         ON ACTION datarefresh   # 重新整理
            LET g_error_show = 1
            CALL aglq930_b_fill()
 
         ON ACTION exporttoexcel   #匯出excel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               CALL g_export_node.clear()
               LET g_export_node[1] = base.typeInfo.create(g_gldn_d)
               LET g_export_id[1]   = "s_detail1"

               #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
               {<point name="menu.exporttoexcel" />}
               #END add-point
               CALL cl_export_to_excel_getpage()
               CALL cl_export_to_excel()
            END IF
 
 
         ON ACTION agendum   # 待辦事項
            #add-point:ON ACTION agendum name="ui_dialog.agendum"
            {<point name="ui_dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
 
         ON ACTION detail_first               #page first
            LET g_action_choice = "detail_first"
            LET g_detail_page_action = "detail_first"
            CALL aglq930_b_fill()
 
         ON ACTION detail_previous                #page previous
            LET g_action_choice = "detail_previous"
            LET g_detail_page_action = "detail_previous"
            CALL aglq930_b_fill()
 
         ON ACTION detail_next                #page next
            LET g_action_choice = "detail_next"
            LET g_detail_page_action = "detail_next"
            CALL aglq930_b_fill()
 
         ON ACTION detail_last                #page last
            LET g_action_choice = "detail_last"
            LET g_detail_page_action = "detail_last"
            CALL aglq930_b_fill()
 
         
         
 
         #add-point:ui_dialog段自定義action name="ui_dialog.more_action"
         {<point name="ui_dialog.more_action"/>}
         #end add-point
      
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
 
         #add-point:查詢方案相關ACTION設定前 name="ui_dialog.set_qbe_action_before"
         {<point name="ui_dialog.set_qbe_action_before" mark="Y"/>}
         #end add-point
 
         #add-point:查詢方案相關ACTION設定後 name="ui_dialog.set_qbe_action_after"
         {<point name="ui_dialog.set_qbe_action_after"/>}
         #end add-point
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
{</section>}
 
 
{<section id="aglq930.query" >}
#+ QBE資料查詢
PRIVATE FUNCTION aglq930_query()
   #add-point:query段define-客製 name="query.define_customerization"
   {<point name="query.define_customerization" edit="c" mark="Y"/>}
   #end add-point 
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_wc2     LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   {<point name="query.define"/>}
   #end add-point 
   
   #add-point:FUNCTION前置處理 name="query.before_function"
   {<point name="query.before_function" />}
   #end add-point
 
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_gldn_d.clear()

   
   CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
   
   LET g_qryparam.state = "c"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_wc_filter = " 1=1"
   LET g_detail_page_action = ""
   LET g_pagestart = 1
   
   #wc備份
   LET ls_wc = g_wc
   LET ls_wc2 = g_wc2
   LET g_master_idx = l_ac
 
   
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單身根據table分拆construct
      CONSTRUCT g_wc_table ON gldn001,gldn002,gldn003,gldn004,gldn005,gldn006,gldn007,gldn008,gldn032,gldn033,gldn040,gldn041,gldnld
           FROM s_detail1[1].b_gldn001,s_detail1[1].b_gldn002,s_detail1[1].b_gldn003,s_detail1[1].b_gldn004,s_detail1[1].b_gldn005,s_detail1[1].b_gldn006,s_detail1[1].b_gldn007,s_detail1[1].b_gldn008,s_detail1[1].b_gldn032,s_detail1[1].b_gldn033,s_detail1[1].b_gldn040,s_detail1[1].b_gldn041,s_detail1[1].b_gldnld
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct name="cs.head.before_construct"
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #----<<l_assest1>>----
         #----<<l_glfb0311>>----
         #----<<l_gldn010_01>>----
         #----<<l_gldn010_02>>----
         #----<<l_gldn010_03>>----
         #----<<l_gldn010_04>>----
         #----<<l_gldn010_05>>----
         #----<<l_gldn010_06>>----
         #----<<l_gldn010_07>>----
         #----<<l_gldn010_08>>----
         #----<<l_gldn010_09>>----
         #----<<l_gldn010_10>>----
         #----<<l_gldn010_11>>----
         #----<<l_gldn010_12>>----
         #----<<l_gldn010_13>>----
         #----<<l_gldn010_14>>----
         #----<<l_gldn010_15>>----
         #----<<l_gldn010_16>>----
         #----<<l_gldn010_17>>----
         #----<<l_gldn010_18>>----
         #----<<l_gldn010_19>>----
         #----<<l_gldn010_20>>----
         #----<<l_gldq0171>>----
         #----<<l_gldq0181>>----
         #----<<l_gldq0172>>----
         #----<<l_gldq0182>>----
         #----<<l_gldq0173>>----
         #----<<l_gldq0183>>----
         #----<<l_amt1>>----
         #----<<l_assest2>>----
         #----<<l_glfb0312>>----
         #----<<l_gldn010_21>>----
         #----<<l_gldn010_22>>----
         #----<<l_gldn010_23>>----
         #----<<l_gldn010_24>>----
         #----<<l_gldn010_25>>----
         #----<<l_gldn010_26>>----
         #----<<l_gldn010_27>>----
         #----<<l_gldn010_28>>----
         #----<<l_gldn010_29>>----
         #----<<l_gldn010_30>>----
         #----<<l_gldn010_31>>----
         #----<<l_gldn010_32>>----
         #----<<l_gldn010_33>>----
         #----<<l_gldn010_34>>----
         #----<<l_gldn010_35>>----
         #----<<l_gldn010_36>>----
         #----<<l_gldn010_37>>----
         #----<<l_gldn010_38>>----
         #----<<l_gldn010_39>>----
         #----<<l_gldn010_40>>----
         #----<<l_gldq0174>>----
         #----<<l_gldq0184>>----
         #----<<l_gldq0175>>----
         #----<<l_gldq0185>>----
         #----<<l_gldq0176>>----
         #----<<l_gldq0186>>----
         #----<<l_amt2>>----
         #----<<b_gldn001>>----
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD b_gldn001
            #add-point:BEFORE FIELD b_gldn001 name="construct.b.page1.b_gldn001"
            {<point name="construct.b.page1.b_gldn001" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD b_gldn001
            
            #add-point:AFTER FIELD b_gldn001 name="construct.a.page1.b_gldn001"
            {<point name="construct.a.page1.b_gldn001" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.b_gldn001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_gldn001
            #add-point:ON ACTION controlp INFIELD b_gldn001 name="construct.c.page1.b_gldn001"
            {<point name="construct.c.page1.b_gldn001" />}
            #END add-point


         #----<<b_gldn002>>----
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD b_gldn002
            #add-point:BEFORE FIELD b_gldn002 name="construct.b.page1.b_gldn002"
            {<point name="construct.b.page1.b_gldn002" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD b_gldn002
            
            #add-point:AFTER FIELD b_gldn002 name="construct.a.page1.b_gldn002"
            {<point name="construct.a.page1.b_gldn002" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.b_gldn002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_gldn002
            #add-point:ON ACTION controlp INFIELD b_gldn002 name="construct.c.page1.b_gldn002"
            {<point name="construct.c.page1.b_gldn002" />}
            #END add-point


         #----<<b_gldn003>>----
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD b_gldn003
            #add-point:BEFORE FIELD b_gldn003 name="construct.b.page1.b_gldn003"
            {<point name="construct.b.page1.b_gldn003" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD b_gldn003
            
            #add-point:AFTER FIELD b_gldn003 name="construct.a.page1.b_gldn003"
            {<point name="construct.a.page1.b_gldn003" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.b_gldn003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_gldn003
            #add-point:ON ACTION controlp INFIELD b_gldn003 name="construct.c.page1.b_gldn003"
            {<point name="construct.c.page1.b_gldn003" />}
            #END add-point


         #----<<b_gldn004>>----
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD b_gldn004
            #add-point:BEFORE FIELD b_gldn004 name="construct.b.page1.b_gldn004"
            {<point name="construct.b.page1.b_gldn004" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD b_gldn004
            
            #add-point:AFTER FIELD b_gldn004 name="construct.a.page1.b_gldn004"
            {<point name="construct.a.page1.b_gldn004" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.b_gldn004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_gldn004
            #add-point:ON ACTION controlp INFIELD b_gldn004 name="construct.c.page1.b_gldn004"
            {<point name="construct.c.page1.b_gldn004" />}
            #END add-point


         #----<<b_gldn005>>----
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD b_gldn005
            #add-point:BEFORE FIELD b_gldn005 name="construct.b.page1.b_gldn005"
            {<point name="construct.b.page1.b_gldn005" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD b_gldn005
            
            #add-point:AFTER FIELD b_gldn005 name="construct.a.page1.b_gldn005"
            {<point name="construct.a.page1.b_gldn005" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.b_gldn005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_gldn005
            #add-point:ON ACTION controlp INFIELD b_gldn005 name="construct.c.page1.b_gldn005"
            {<point name="construct.c.page1.b_gldn005" />}
            #END add-point


         #----<<b_gldn006>>----
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD b_gldn006
            #add-point:BEFORE FIELD b_gldn006 name="construct.b.page1.b_gldn006"
            {<point name="construct.b.page1.b_gldn006" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD b_gldn006
            
            #add-point:AFTER FIELD b_gldn006 name="construct.a.page1.b_gldn006"
            {<point name="construct.a.page1.b_gldn006" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.b_gldn006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_gldn006
            #add-point:ON ACTION controlp INFIELD b_gldn006 name="construct.c.page1.b_gldn006"
            {<point name="construct.c.page1.b_gldn006" />}
            #END add-point


         #----<<b_gldn007>>----
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD b_gldn007
            #add-point:BEFORE FIELD b_gldn007 name="construct.b.page1.b_gldn007"
            {<point name="construct.b.page1.b_gldn007" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD b_gldn007
            
            #add-point:AFTER FIELD b_gldn007 name="construct.a.page1.b_gldn007"
            {<point name="construct.a.page1.b_gldn007" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.b_gldn007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_gldn007
            #add-point:ON ACTION controlp INFIELD b_gldn007 name="construct.c.page1.b_gldn007"
            {<point name="construct.c.page1.b_gldn007" />}
            #END add-point


         #----<<b_gldn008>>----
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD b_gldn008
            #add-point:BEFORE FIELD b_gldn008 name="construct.b.page1.b_gldn008"
            {<point name="construct.b.page1.b_gldn008" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD b_gldn008
            
            #add-point:AFTER FIELD b_gldn008 name="construct.a.page1.b_gldn008"
            {<point name="construct.a.page1.b_gldn008" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.b_gldn008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_gldn008
            #add-point:ON ACTION controlp INFIELD b_gldn008 name="construct.c.page1.b_gldn008"
            {<point name="construct.c.page1.b_gldn008" />}
            #END add-point


         #----<<b_gldn032>>----
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD b_gldn032
            #add-point:BEFORE FIELD b_gldn032 name="construct.b.page1.b_gldn032"
            {<point name="construct.b.page1.b_gldn032" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD b_gldn032
            
            #add-point:AFTER FIELD b_gldn032 name="construct.a.page1.b_gldn032"
            {<point name="construct.a.page1.b_gldn032" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.b_gldn032
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_gldn032
            #add-point:ON ACTION controlp INFIELD b_gldn032 name="construct.c.page1.b_gldn032"
            {<point name="construct.c.page1.b_gldn032" />}
            #END add-point


         #----<<b_gldn033>>----
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD b_gldn033
            #add-point:BEFORE FIELD b_gldn033 name="construct.b.page1.b_gldn033"
            {<point name="construct.b.page1.b_gldn033" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD b_gldn033
            
            #add-point:AFTER FIELD b_gldn033 name="construct.a.page1.b_gldn033"
            {<point name="construct.a.page1.b_gldn033" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.b_gldn033
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_gldn033
            #add-point:ON ACTION controlp INFIELD b_gldn033 name="construct.c.page1.b_gldn033"
            {<point name="construct.c.page1.b_gldn033" />}
            #END add-point


         #----<<b_gldn040>>----
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD b_gldn040
            #add-point:BEFORE FIELD b_gldn040 name="construct.b.page1.b_gldn040"
            {<point name="construct.b.page1.b_gldn040" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD b_gldn040
            
            #add-point:AFTER FIELD b_gldn040 name="construct.a.page1.b_gldn040"
            {<point name="construct.a.page1.b_gldn040" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.b_gldn040
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_gldn040
            #add-point:ON ACTION controlp INFIELD b_gldn040 name="construct.c.page1.b_gldn040"
            {<point name="construct.c.page1.b_gldn040" />}
            #END add-point


         #----<<b_gldn041>>----
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD b_gldn041
            #add-point:BEFORE FIELD b_gldn041 name="construct.b.page1.b_gldn041"
            {<point name="construct.b.page1.b_gldn041" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD b_gldn041
            
            #add-point:AFTER FIELD b_gldn041 name="construct.a.page1.b_gldn041"
            {<point name="construct.a.page1.b_gldn041" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.b_gldn041
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_gldn041
            #add-point:ON ACTION controlp INFIELD b_gldn041 name="construct.c.page1.b_gldn041"
            {<point name="construct.c.page1.b_gldn041" />}
            #END add-point


         #----<<b_gldnld>>----
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD b_gldnld
            #add-point:BEFORE FIELD b_gldnld name="construct.b.page1.b_gldnld"
            {<point name="construct.b.page1.b_gldnld" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD b_gldnld
            
            #add-point:AFTER FIELD b_gldnld name="construct.a.page1.b_gldnld"
            {<point name="construct.a.page1.b_gldnld" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.b_gldnld
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_gldnld
            #add-point:ON ACTION controlp INFIELD b_gldnld name="construct.c.page1.b_gldnld"
            {<point name="construct.c.page1.b_gldnld" />}
            #END add-point


         #----<<l_glfbseq>>----
   
       
      END CONSTRUCT
      

      

  
      #add-point:query段more_construct name="query.more_construct"
      {<point name="query.more_construct"/>}
      #end add-point 
 
      ON ACTION accept
         #add-point:ON ACTION accept name="query.accept"
         {<point name="query.accept"/>}
         #end add-point
 
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG 
 
      #add-point:query段查詢方案相關ACTION設定前 name="query.set_qbe_action_before"
      {<point name="query.set_qbe_action_before" mark="Y"/>}
      #end add-point 
 
      ON ACTION qbeclear   # 條件清除
         CLEAR FORM
         #add-point:條件清除後 name="query.qbeclear"
         {<point name="query.qbeclear"/>}
         #end add-point 
 
      #add-point:query段查詢方案相關ACTION設定後 name="query.set_qbe_action_after"
      {<point name="query.set_qbe_action_after"/>}
      #end add-point 
 
   END DIALOG
 
   
 
   LET g_wc = g_wc_table 


   
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
 

 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc = " 1=2"
      LET g_wc2 = " 1=1"
      LET g_wc_filter = g_wc_filter_t
      RETURN
   ELSE
      LET g_master_idx = 1
   END IF
        
   #add-point:cs段after_construct name="cs.after_construct"
   {<point name="cs.after_construct"/>}
   #end add-point
        
   LET g_error_show = 1
   CALL aglq930_b_fill()
   LET l_ac = g_master_idx
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = -100 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
   END IF
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
   
END FUNCTION
{</section>}
 
{<section id="aglq930.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION aglq930_b_fill()
   #add-point:b_fill段define-客製 name="b_fill.define_customerization"
   {<point name="b_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ls_wc           STRING
   DEFINE ls_wc2          STRING
   DEFINE ls_sql_rank     STRING
   #add-point:b_fill段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   {<point name="b_fill.define"/>}
   #end add-point
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   {<point name="b_fill.sql_before"/>}
   #end add-point
 
   IF cl_null(g_wc_filter) THEN
      LET g_wc_filter = " 1=1"
   END IF
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   
   LET ls_wc = g_wc, " AND ", g_wc2, " AND ", g_wc_filter, cl_sql_auth_filter()   #(ver:40) add cl_sql_auth_filter()
 
   LET ls_sql_rank = "SELECT  UNIQUE '','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',gldn001,gldn002,gldn003,gldn004,gldn005,gldn006,gldn007,gldn008,gldn032,gldn033,gldn040,gldn041,gldnld,''  ,DENSE_RANK() OVER( ORDER BY gldn_t.gldnld,gldn_t.gldn001,gldn_t.gldn002,gldn_t.gldn003,gldn_t.gldn004,gldn_t.gldn005,gldn_t.gldn006,gldn_t.gldn007,gldn_t.gldn008,gldn_t.gldn032,gldn_t.gldn033,gldn_t.gldn040,gldn_t.gldn041) AS RANK FROM gldn_t",


                     "",
                     " WHERE gldnent= ? AND 1=1 AND ", ls_wc
    
   LET ls_sql_rank = ls_sql_rank, cl_sql_add_filter("gldn_t"),
                     " ORDER BY gldn_t.gldnld,gldn_t.gldn001,gldn_t.gldn002,gldn_t.gldn003,gldn_t.gldn004,gldn_t.gldn005,gldn_t.gldn006,gldn_t.gldn007,gldn_t.gldn008,gldn_t.gldn032,gldn_t.gldn033,gldn_t.gldn040,gldn_t.gldn041"
 
   #add-point:b_fill段rank_sql_after name="b_fill.rank_sql_after"
   {<point name="b_fill.rank_sql_after"/>}
   #end add-point
 
   LET g_sql = "SELECT COUNT(1) FROM (",ls_sql_rank,")"
 
   PREPARE b_fill_cnt_pre FROM g_sql
   EXECUTE b_fill_cnt_pre USING g_enterprise INTO g_tot_cnt
   FREE b_fill_cnt_pre
 
   #add-point:b_fill段rank_sql_after_count name="b_fill.rank_sql_after_count"
   {<point name="b_fill.rank_sql_after_count"/>}
   #end add-point
 
   CASE g_detail_page_action
      WHEN "detail_first"
          LET g_pagestart = 1
 
      WHEN "detail_previous"
          LET g_pagestart = g_pagestart - g_num_in_page
          IF g_pagestart < 1 THEN
              LET g_pagestart = 1
          END IF
 
      WHEN "detail_next"
         LET g_pagestart = g_pagestart + g_num_in_page
         IF g_pagestart > g_tot_cnt THEN
            LET g_pagestart = g_tot_cnt - (g_tot_cnt mod g_num_in_page) + 1
            WHILE g_pagestart > g_tot_cnt
               LET g_pagestart = g_pagestart - g_num_in_page
            END WHILE
         END IF
 
      WHEN "detail_last"
         LET g_pagestart = g_tot_cnt - (g_tot_cnt mod g_num_in_page) + 1
         WHILE g_pagestart > g_tot_cnt
            LET g_pagestart = g_pagestart - g_num_in_page
         END WHILE
 
      OTHERWISE
         LET g_pagestart = 1
 
   END CASE
 
   LET g_sql = "SELECT '','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',gldn001,gldn002,gldn003,gldn004,gldn005,gldn006,gldn007,gldn008,gldn032,gldn033,gldn040,gldn041,gldnld,''",
               " FROM (",ls_sql_rank,")",
              " WHERE RANK >= ",g_pagestart,
                " AND RANK < ",g_pagestart + g_num_in_page
 
   #add-point:b_fill段sql_after name="b_fill.sql_after"
   {<point name="b_fill.sql_after"/>}
   #end add-point
 
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE aglq930_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR aglq930_pb
   
   OPEN b_fill_curs USING g_enterprise
 
   CALL g_gldn_d.clear()

   #add-point:陣列清空 name="b_fill.array_clear"
   {<point name="b_fill.array_clear" />}
   #end add-point
 
   LET g_cnt = l_ac
   IF g_cnt = 0 THEN
      LET g_cnt = 1
   END IF
   LET l_ac = 1   
 
   FOREACH b_fill_curs INTO g_gldn_d[l_ac].l_assest1,g_gldn_d[l_ac].l_glfb0311,g_gldn_d[l_ac].l_gldn010_01,g_gldn_d[l_ac].l_gldn010_02,g_gldn_d[l_ac].l_gldn010_03,g_gldn_d[l_ac].l_gldn010_04,g_gldn_d[l_ac].l_gldn010_05,g_gldn_d[l_ac].l_gldn010_06,g_gldn_d[l_ac].l_gldn010_07,g_gldn_d[l_ac].l_gldn010_08,g_gldn_d[l_ac].l_gldn010_09,g_gldn_d[l_ac].l_gldn010_10,g_gldn_d[l_ac].l_gldn010_11,g_gldn_d[l_ac].l_gldn010_12,g_gldn_d[l_ac].l_gldn010_13,g_gldn_d[l_ac].l_gldn010_14,g_gldn_d[l_ac].l_gldn010_15,g_gldn_d[l_ac].l_gldn010_16,g_gldn_d[l_ac].l_gldn010_17,g_gldn_d[l_ac].l_gldn010_18,g_gldn_d[l_ac].l_gldn010_19,g_gldn_d[l_ac].l_gldn010_20,g_gldn_d[l_ac].l_gldq0171,g_gldn_d[l_ac].l_gldq0181,g_gldn_d[l_ac].l_gldq0172,g_gldn_d[l_ac].l_gldq0182,g_gldn_d[l_ac].l_gldq0173,g_gldn_d[l_ac].l_gldq0183,g_gldn_d[l_ac].l_amt1,g_gldn_d[l_ac].l_assest2,g_gldn_d[l_ac].l_glfb0312,g_gldn_d[l_ac].l_gldn010_21,g_gldn_d[l_ac].l_gldn010_22,g_gldn_d[l_ac].l_gldn010_23,g_gldn_d[l_ac].l_gldn010_24,g_gldn_d[l_ac].l_gldn010_25,g_gldn_d[l_ac].l_gldn010_26,g_gldn_d[l_ac].l_gldn010_27,g_gldn_d[l_ac].l_gldn010_28,g_gldn_d[l_ac].l_gldn010_29,g_gldn_d[l_ac].l_gldn010_30,g_gldn_d[l_ac].l_gldn010_31,g_gldn_d[l_ac].l_gldn010_32,g_gldn_d[l_ac].l_gldn010_33,g_gldn_d[l_ac].l_gldn010_34,g_gldn_d[l_ac].l_gldn010_35,g_gldn_d[l_ac].l_gldn010_36,g_gldn_d[l_ac].l_gldn010_37,g_gldn_d[l_ac].l_gldn010_38,g_gldn_d[l_ac].l_gldn010_39,g_gldn_d[l_ac].l_gldn010_40,g_gldn_d[l_ac].l_gldq0174,g_gldn_d[l_ac].l_gldq0184,g_gldn_d[l_ac].l_gldq0175,g_gldn_d[l_ac].l_gldq0185,g_gldn_d[l_ac].l_gldq0176,g_gldn_d[l_ac].l_gldq0186,g_gldn_d[l_ac].l_amt2,g_gldn_d[l_ac].gldn001,g_gldn_d[l_ac].gldn002,g_gldn_d[l_ac].gldn003,g_gldn_d[l_ac].gldn004,g_gldn_d[l_ac].gldn005,g_gldn_d[l_ac].gldn006,g_gldn_d[l_ac].gldn007,g_gldn_d[l_ac].gldn008,g_gldn_d[l_ac].gldn032,g_gldn_d[l_ac].gldn033,g_gldn_d[l_ac].gldn040,g_gldn_d[l_ac].gldn041,g_gldn_d[l_ac].gldnld,g_gldn_d[l_ac].l_glfbseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
      
      #LET g_gldn_d[l_ac].statepic = cl_get_actipic(g_gldn_d[l_ac].statepic)
 
      
 
      #add-point:b_fill段資料填充 name="b_fill.fill"
      {<point name="b_fill.fill"/>}
      #end add-point
 
      CALL aglq930_detail_show("'1'")      
 
      CALL aglq930_gldn_t_mask()
 
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "" 
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
         END IF
         EXIT FOREACH
      END IF
      LET l_ac = l_ac + 1
      
   END FOREACH
   LET g_error_show = 0
   

   
   CALL g_gldn_d.deleteElement(g_gldn_d.getLength())   

   #add-point:陣列長度調整 name="b_fill.array_deleteElement"
   {<point name="b_fill.array_deleteElement" />}
   #end add-point
   
   #add-point:b_fill段資料填充(其他單身) name="b_fill.others.fill"
   {<point name="b_fill.others.fill"/>}
   #end add-point
 
   LET g_detail_cnt = g_gldn_d.getLength()
#  DISPLAY g_detail_cnt TO FORMONLY.h_count
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE aglq930_pb
 
   #調整單身index指標，避免翻頁後指到空白筆數
   CALL aglq930_detail_index_setting()
 
   #重新計算單身筆數並呈現
   CALL aglq930_detail_action_trans()
 
   IF g_gldn_d.getLength() > 0 THEN
      LET l_ac = 1
      CALL aglq930_fetch()
   END IF
   
      CALL aglq930_filter_show('gldn001','b_gldn001')
   CALL aglq930_filter_show('gldn002','b_gldn002')
   CALL aglq930_filter_show('gldn003','b_gldn003')
   CALL aglq930_filter_show('gldn004','b_gldn004')
   CALL aglq930_filter_show('gldn005','b_gldn005')
   CALL aglq930_filter_show('gldn006','b_gldn006')
   CALL aglq930_filter_show('gldn007','b_gldn007')
   CALL aglq930_filter_show('gldn008','b_gldn008')
   CALL aglq930_filter_show('gldn032','b_gldn032')
   CALL aglq930_filter_show('gldn033','b_gldn033')
   CALL aglq930_filter_show('gldn040','b_gldn040')
   CALL aglq930_filter_show('gldn041','b_gldn041')
   CALL aglq930_filter_show('gldnld','b_gldnld')

 
   #add-point:b_fill段結束前 name="b_fill.after"
   {<point name="b_fill.after"/>}
   #end add-point
 
END FUNCTION
{</section>}
 
{<section id="aglq930.fetch" >}
#+ 單身陣列填充2
PRIVATE FUNCTION aglq930_fetch()
   #add-point:fetch段define-客製 name="fetch.define_customerization"
   {<point name="fetch.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_ac           LIKE type_t.num10
   #add-point:fetch段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   {<point name="fetch.define"/>}
   #end add-point
   
   #add-point:FUNCTION前置處理 name="fetch.before_function"
   {<point name="fetch.before_function" />}
   #end add-point
 

   #add-point:陣列清空 name="fetch.array_clear"
   {<point name="fetch.array_clear" />}
   #end add-point
   
   LET li_ac = l_ac 
   

   
   #add-point:單身填充後 name="fetch.after_fill"
   {<point name="fetch.after_fill" />}
   #end add-point 
   

   #add-point:陣列筆數調整 name="fetch.array_deleteElement"
   {<point name="fetch.array_deleteElement" />}
   #end add-point
 
   LET l_ac = li_ac
   
END FUNCTION
{</section>}
 
{<section id="aglq930.detail_show" >}
#+ 顯示相關資料
PRIVATE FUNCTION aglq930_detail_show(ps_page)
   #add-point:show段define-客製 name="detail_show.define_customerization"
   {<point name="detail_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_page    STRING
   DEFINE ls_sql     STRING
   #add-point:show段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前 name="detail_show.before"
   {<point name="detail_show.before"/>}
   #end add-point
   
   
 
   #讀入ref值
   IF ps_page.getIndexOf("'1'",1) > 0 THEN
      #帶出公用欄位reference值page1
      
 
      #add-point:show段單身reference name="detail_show.body.reference"
      {<point name="detail_show.body.reference"/>}
      #end add-point
   END IF
   

 
   #add-point:detail_show段之後 name="detail_show.after"
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION
{</section>}
 
{<section id="aglq930.filter" >}
#+ filter過濾功能
PRIVATE FUNCTION aglq930_filter()
   #add-point:filter段define-客製 name="filter.define_customerization"
   {<point name="filter.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE  ls_result   STRING
   #add-point:filter段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   {<point name="filter.define"/>}
   #end add-point
   
   #add-point:FUNCTION前置處理 name="filter.before_function"
   {<point name="filter.before_function" />}
   #end add-point
 
   LET l_ac = 1
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON gldn001,gldn002,gldn003,gldn004,gldn005,gldn006,gldn007,gldn008,gldn032,gldn033,gldn040,gldn041,gldnld
                          FROM s_detail1[1].b_gldn001,s_detail1[1].b_gldn002,s_detail1[1].b_gldn003,s_detail1[1].b_gldn004,s_detail1[1].b_gldn005,s_detail1[1].b_gldn006,s_detail1[1].b_gldn007,s_detail1[1].b_gldn008,s_detail1[1].b_gldn032,s_detail1[1].b_gldn033,s_detail1[1].b_gldn040,s_detail1[1].b_gldn041,s_detail1[1].b_gldnld
 
         BEFORE CONSTRUCT
                     DISPLAY aglq930_filter_parser('gldn001') TO s_detail1[1].b_gldn001
            DISPLAY aglq930_filter_parser('gldn002') TO s_detail1[1].b_gldn002
            DISPLAY aglq930_filter_parser('gldn003') TO s_detail1[1].b_gldn003
            DISPLAY aglq930_filter_parser('gldn004') TO s_detail1[1].b_gldn004
            DISPLAY aglq930_filter_parser('gldn005') TO s_detail1[1].b_gldn005
            DISPLAY aglq930_filter_parser('gldn006') TO s_detail1[1].b_gldn006
            DISPLAY aglq930_filter_parser('gldn007') TO s_detail1[1].b_gldn007
            DISPLAY aglq930_filter_parser('gldn008') TO s_detail1[1].b_gldn008
            DISPLAY aglq930_filter_parser('gldn032') TO s_detail1[1].b_gldn032
            DISPLAY aglq930_filter_parser('gldn033') TO s_detail1[1].b_gldn033
            DISPLAY aglq930_filter_parser('gldn040') TO s_detail1[1].b_gldn040
            DISPLAY aglq930_filter_parser('gldn041') TO s_detail1[1].b_gldn041
            DISPLAY aglq930_filter_parser('gldnld') TO s_detail1[1].b_gldnld

 
         #單身公用欄位開窗相關處理
         
           
         #單身一般欄位開窗相關處理
                  #----<<l_assest1>>----
         #----<<l_glfb0311>>----
         #----<<l_gldn010_01>>----
         #----<<l_gldn010_02>>----
         #----<<l_gldn010_03>>----
         #----<<l_gldn010_04>>----
         #----<<l_gldn010_05>>----
         #----<<l_gldn010_06>>----
         #----<<l_gldn010_07>>----
         #----<<l_gldn010_08>>----
         #----<<l_gldn010_09>>----
         #----<<l_gldn010_10>>----
         #----<<l_gldn010_11>>----
         #----<<l_gldn010_12>>----
         #----<<l_gldn010_13>>----
         #----<<l_gldn010_14>>----
         #----<<l_gldn010_15>>----
         #----<<l_gldn010_16>>----
         #----<<l_gldn010_17>>----
         #----<<l_gldn010_18>>----
         #----<<l_gldn010_19>>----
         #----<<l_gldn010_20>>----
         #----<<l_gldq0171>>----
         #----<<l_gldq0181>>----
         #----<<l_gldq0172>>----
         #----<<l_gldq0182>>----
         #----<<l_gldq0173>>----
         #----<<l_gldq0183>>----
         #----<<l_amt1>>----
         #----<<l_assest2>>----
         #----<<l_glfb0312>>----
         #----<<l_gldn010_21>>----
         #----<<l_gldn010_22>>----
         #----<<l_gldn010_23>>----
         #----<<l_gldn010_24>>----
         #----<<l_gldn010_25>>----
         #----<<l_gldn010_26>>----
         #----<<l_gldn010_27>>----
         #----<<l_gldn010_28>>----
         #----<<l_gldn010_29>>----
         #----<<l_gldn010_30>>----
         #----<<l_gldn010_31>>----
         #----<<l_gldn010_32>>----
         #----<<l_gldn010_33>>----
         #----<<l_gldn010_34>>----
         #----<<l_gldn010_35>>----
         #----<<l_gldn010_36>>----
         #----<<l_gldn010_37>>----
         #----<<l_gldn010_38>>----
         #----<<l_gldn010_39>>----
         #----<<l_gldn010_40>>----
         #----<<l_gldq0174>>----
         #----<<l_gldq0184>>----
         #----<<l_gldq0175>>----
         #----<<l_gldq0185>>----
         #----<<l_gldq0176>>----
         #----<<l_gldq0186>>----
         #----<<l_amt2>>----
         #----<<b_gldn001>>----
         #Ctrlp:construct.c.filter.page1.b_gldn001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_gldn001
            #add-point:ON ACTION controlp INFIELD b_gldn001 name="construct.c.filter.page1.b_gldn001"
            {<point name="construct.c.filter.page1.b_gldn001" />}
            #END add-point


         #----<<b_gldn002>>----
         #Ctrlp:construct.c.filter.page1.b_gldn002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_gldn002
            #add-point:ON ACTION controlp INFIELD b_gldn002 name="construct.c.filter.page1.b_gldn002"
            {<point name="construct.c.filter.page1.b_gldn002" />}
            #END add-point


         #----<<b_gldn003>>----
         #Ctrlp:construct.c.filter.page1.b_gldn003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_gldn003
            #add-point:ON ACTION controlp INFIELD b_gldn003 name="construct.c.filter.page1.b_gldn003"
            {<point name="construct.c.filter.page1.b_gldn003" />}
            #END add-point


         #----<<b_gldn004>>----
         #Ctrlp:construct.c.filter.page1.b_gldn004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_gldn004
            #add-point:ON ACTION controlp INFIELD b_gldn004 name="construct.c.filter.page1.b_gldn004"
            {<point name="construct.c.filter.page1.b_gldn004" />}
            #END add-point


         #----<<b_gldn005>>----
         #Ctrlp:construct.c.filter.page1.b_gldn005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_gldn005
            #add-point:ON ACTION controlp INFIELD b_gldn005 name="construct.c.filter.page1.b_gldn005"
            {<point name="construct.c.filter.page1.b_gldn005" />}
            #END add-point


         #----<<b_gldn006>>----
         #Ctrlp:construct.c.filter.page1.b_gldn006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_gldn006
            #add-point:ON ACTION controlp INFIELD b_gldn006 name="construct.c.filter.page1.b_gldn006"
            {<point name="construct.c.filter.page1.b_gldn006" />}
            #END add-point


         #----<<b_gldn007>>----
         #Ctrlp:construct.c.filter.page1.b_gldn007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_gldn007
            #add-point:ON ACTION controlp INFIELD b_gldn007 name="construct.c.filter.page1.b_gldn007"
            {<point name="construct.c.filter.page1.b_gldn007" />}
            #END add-point


         #----<<b_gldn008>>----
         #Ctrlp:construct.c.filter.page1.b_gldn008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_gldn008
            #add-point:ON ACTION controlp INFIELD b_gldn008 name="construct.c.filter.page1.b_gldn008"
            {<point name="construct.c.filter.page1.b_gldn008" />}
            #END add-point


         #----<<b_gldn032>>----
         #Ctrlp:construct.c.filter.page1.b_gldn032
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_gldn032
            #add-point:ON ACTION controlp INFIELD b_gldn032 name="construct.c.filter.page1.b_gldn032"
            {<point name="construct.c.filter.page1.b_gldn032" />}
            #END add-point


         #----<<b_gldn033>>----
         #Ctrlp:construct.c.filter.page1.b_gldn033
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_gldn033
            #add-point:ON ACTION controlp INFIELD b_gldn033 name="construct.c.filter.page1.b_gldn033"
            {<point name="construct.c.filter.page1.b_gldn033" />}
            #END add-point


         #----<<b_gldn040>>----
         #Ctrlp:construct.c.filter.page1.b_gldn040
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_gldn040
            #add-point:ON ACTION controlp INFIELD b_gldn040 name="construct.c.filter.page1.b_gldn040"
            {<point name="construct.c.filter.page1.b_gldn040" />}
            #END add-point


         #----<<b_gldn041>>----
         #Ctrlp:construct.c.filter.page1.b_gldn041
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_gldn041
            #add-point:ON ACTION controlp INFIELD b_gldn041 name="construct.c.filter.page1.b_gldn041"
            {<point name="construct.c.filter.page1.b_gldn041" />}
            #END add-point


         #----<<b_gldnld>>----
         #Ctrlp:construct.c.filter.page1.b_gldnld
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_gldnld
            #add-point:ON ACTION controlp INFIELD b_gldnld name="construct.c.filter.page1.b_gldnld"
            {<point name="construct.c.filter.page1.b_gldnld" />}
            #END add-point


         #----<<l_glfbseq>>----
   
 
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         {<point name="filter.b_dialog"/>}
         #end add-point  
 
      ON ACTION accept
         ACCEPT DIALOG 
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
 
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = g_wc_filter, " "
      LET g_wc_filter_t = g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
   END IF
   
      CALL aglq930_filter_show('gldn001','b_gldn001')
   CALL aglq930_filter_show('gldn002','b_gldn002')
   CALL aglq930_filter_show('gldn003','b_gldn003')
   CALL aglq930_filter_show('gldn004','b_gldn004')
   CALL aglq930_filter_show('gldn005','b_gldn005')
   CALL aglq930_filter_show('gldn006','b_gldn006')
   CALL aglq930_filter_show('gldn007','b_gldn007')
   CALL aglq930_filter_show('gldn008','b_gldn008')
   CALL aglq930_filter_show('gldn032','b_gldn032')
   CALL aglq930_filter_show('gldn033','b_gldn033')
   CALL aglq930_filter_show('gldn040','b_gldn040')
   CALL aglq930_filter_show('gldn041','b_gldn041')
   CALL aglq930_filter_show('gldnld','b_gldnld')

    
   CALL aglq930_b_fill()
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
 
END FUNCTION
{</section>}
    
{<section id="aglq930.filter_parser" >}
#+ filter欄位解析
PRIVATE FUNCTION aglq930_filter_parser(ps_field)
   #add-point:filter段define-客製 name="filter_parser.define_customerization"
   {<point name="filter_parser.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   {<point name="filter_parser.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="filter_parser.before_function"
   {<point name="filter_parser.before_function" />}
   #end add-point
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
{</section>}
 
{<section id="aglq930.filter_show" >}
#+ Browser標題欄位顯示搜尋條件
PRIVATE FUNCTION aglq930_filter_show(ps_field,ps_object)
   #add-point:filter_show段define-客製 name="filter_show.define_customerization"
   {<point name="filter_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_field         STRING
   DEFINE ps_object        STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
   #add-point:filter_show段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_show.define"
   {<point name="filter_show.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="filter_show.before_function"
   {<point name="filter_show.before_function" />}
   #end add-point
 
   LET ls_name = "formonly.", ps_object
 
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aglq930_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
{</section>}
 
{<section id="aglq930.insert" >}
#+ insert
PRIVATE FUNCTION aglq930_insert()
   #add-point:insert段define-客製 name="insert.define_customerization"
   {<point name="insert.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:insert段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   {<point name="insert.define"/>}
   #end add-point
 
   #add-point:insert段control name="insert.control"
   {<point name="insert.control"/>}
   #end add-point    
   
END FUNCTION
{</section>}
 
{<section id="aglq930.modify" >}
#+ modify
PRIVATE FUNCTION aglq930_modify()
   #add-point:modify段define-客製 name="modify.define_customerization"
   {<point name="modify.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:modify段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   {<point name="modify.define"/>}
   #end add-point
 
   #add-point:modify段control name="modify.control"
   {<point name="modify.control"/>}
   #end add-point 
END FUNCTION
{</section>}
 
{<section id="aglq930.reproduce" >}
#+ reproduce
PRIVATE FUNCTION aglq930_reproduce()
   #add-point:reproduce段define-客製 name="reproduce.define_customerization"
   {<point name="reproduce.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:reproduce段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   {<point name="reproduce.define"/>}
   #end add-point
 
   #add-point:reproduce段control name="reproduce.control"
   {<point name="reproduce.control"/>}
   #end add-point 
END FUNCTION
{</section>}
 
{<section id="aglq930.delete" >}
#+ delete
PRIVATE FUNCTION aglq930_delete()
   #add-point:delete段define-客製 name="delete.define_customerization"
   {<point name="delete.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:delete段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   {<point name="delete.define"/>}
   #end add-point
 
   #add-point:delete段control name="delete.control"
   {<point name="delete.control"/>}
   #end add-point 
END FUNCTION
{</section>}
 
 
 
{<section id="aglq930.detail_action_trans" >}
#+ 單身分頁筆數顯示及action圖片顯示切換功能
PRIVATE FUNCTION aglq930_detail_action_trans()
   #add-point:detail_action_trans段define-客製 name="detail_action_trans.define_customerization"
   {<point name="detail_action_trans.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:detail_action_trans段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_action_trans.define"
   {<point name="detail_action_trans.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="detail_action_trans.before_function"
   {<point name="detail_action_trans.before_function" />}
   #end add-point
 
   #因應單身切頁功能，筆數計算方式調整
   LET g_current_row_tot = g_pagestart + g_detail_idx - 1
   DISPLAY g_current_row_tot TO FORMONLY.h_index
   DISPLAY g_tot_cnt TO FORMONLY.h_count
 
   #顯示單身頁面的起始與結束筆數
   LET g_page_start_num = g_pagestart
   LET g_page_end_num = g_pagestart + g_num_in_page - 1
   DISPLAY g_page_start_num TO FORMONLY.p_start
   DISPLAY g_page_end_num TO FORMONLY.p_end
 
   #目前不支援跳頁功能
   LET g_page_act_list = "detail_first,detail_previous,'',detail_next,detail_last"
   CALL cl_navigator_detail_page_setting(g_page_act_list,g_current_row_tot,g_pagestart,g_num_in_page,g_tot_cnt)
 
END FUNCTION
{</section>}
 
{<section id="aglq930.detail_index_setting" >}
#+ 單身切頁後，index重新調整，避免翻頁後指到空白筆數
PRIVATE FUNCTION aglq930_detail_index_setting()
   #add-point:detail_index_setting段define-客製 name="deatil_index_setting.define_customerization"
   {<point name="deatil_index_setting.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_redirect     BOOLEAN
   DEFINE ldig_curr       ui.Dialog
   #add-point:detail_index_setting段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_index_setting.define"
   {<point name="detail_index_setting.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="detail_index_setting.before_function"
   {<point name="detail_index_setting.before_function" />}
   #end add-point
 
   IF g_curr_diag IS NOT NULL THEN
      CASE
         WHEN g_curr_diag.getCurrentRow("s_detail1") <= "0"
            LET g_detail_idx = 1
            IF g_gldn_d.getLength() > 0 THEN
               LET li_redirect = TRUE
            END IF
         WHEN g_curr_diag.getCurrentRow("s_detail1") > g_gldn_d.getLength() AND g_gldn_d.getLength() > 0
            LET g_detail_idx = g_gldn_d.getLength()
            LET li_redirect = TRUE
         WHEN g_curr_diag.getCurrentRow("s_detail1") != g_detail_idx
            IF g_detail_idx > g_gldn_d.getLength() THEN
               LET g_detail_idx = g_gldn_d.getLength()
            END IF
            LET li_redirect = TRUE
      END CASE
   END IF
 
   IF li_redirect THEN
      LET ldig_curr = ui.Dialog.getCurrent()
      CALL ldig_curr.setCurrentRow("s_detail1", g_detail_idx)
   END IF
 
END FUNCTION
{</section>}
 
{<section id="aglq930.mask_functions" >}
 &include "erp/agl/aglq930_mask.4gl"
{</section>}
 
{<section id="aglq930.other_function" readonly="Y" >}
{<point name="other.function"/>}
{</section>}
 

