#該程式未解開Section, 採用最新樣板產出!
{<section id="astt401.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0015(2017-01-16 16:28:55), PR版次:
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:
#+ Build......: 000327
#+ Filename...: astt401
#+ Description: 專櫃合約異動申請作業
#+ Creator....: 01533(2015-04-26 16:06:49)
#+ Modifier...: 06540 -SD/PR-

{</section>}

{<section id="astt401.global" >}
#應用 t01 樣板自動產生(Version:79)
#add-point:填寫註解說明 name="global.memo" 
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"
{<point name="global.memo_customerization" edit="c"/>}
#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"
{<point name="global.import"/>}
#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"
{<point name="global.inc" mark="Y"/>}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_stea_m        RECORD
       steasite LIKE stea_t.steasite, 
   steasite_desc LIKE type_t.chr80, 
   steadocdt LIKE stea_t.steadocdt, 
   steadocno LIKE stea_t.steadocno, 
   stea000 LIKE stea_t.stea000, 
   stea054 LIKE stea_t.stea054, 
   steaunit LIKE stea_t.steaunit, 
   steaunit_desc LIKE type_t.chr80, 
   stea001 LIKE stea_t.stea001, 
   stea002 LIKE stea_t.stea002, 
   stea003 LIKE stea_t.stea003, 
   stea004 LIKE stea_t.stea004, 
   stea009 LIKE stea_t.stea009, 
   steastus LIKE stea_t.steastus, 
   stea010 LIKE stea_t.stea010, 
   stea010_desc LIKE type_t.chr80, 
   stea005 LIKE stea_t.stea005, 
   steal002 LIKE type_t.chr500, 
   steal003 LIKE type_t.chr500, 
   stea006 LIKE stea_t.stea006, 
   stea006_desc LIKE type_t.chr80, 
   stea007 LIKE stea_t.stea007, 
   stea008 LIKE stea_t.stea008, 
   stea047 LIKE stea_t.stea047, 
   stea047_desc LIKE type_t.chr80, 
   stea048 LIKE stea_t.stea048, 
   stea048_desc LIKE type_t.chr80, 
   stea044 LIKE stea_t.stea044, 
   stea044_desc LIKE type_t.chr80, 
   stea051 LIKE stea_t.stea051, 
   stea051_desc LIKE type_t.chr80, 
   stea011 LIKE stea_t.stea011, 
   stea011_desc LIKE type_t.chr80, 
   stea012 LIKE stea_t.stea012, 
   stea012_desc LIKE type_t.chr80, 
   stea056 LIKE stea_t.stea056, 
   stea013 LIKE stea_t.stea013, 
   stea013_desc LIKE type_t.chr80, 
   stea014 LIKE stea_t.stea014, 
   stea014_desc LIKE type_t.chr80, 
   stea015 LIKE stea_t.stea015, 
   stea015_desc LIKE type_t.chr80, 
   stea016 LIKE stea_t.stea016, 
   stea045 LIKE stea_t.stea045, 
   stea045_desc LIKE type_t.chr80, 
   stea046 LIKE stea_t.stea046, 
   stea053 LIKE stea_t.stea053, 
   stea029 LIKE stea_t.stea029, 
   stea030 LIKE stea_t.stea030, 
   stea032 LIKE stea_t.stea032, 
   stea032_desc LIKE type_t.chr80, 
   stea033 LIKE stea_t.stea033, 
   stea033_desc LIKE type_t.chr80, 
   stea034 LIKE stea_t.stea034, 
   stea034_desc LIKE type_t.chr80, 
   stea035 LIKE stea_t.stea035, 
   stea035_desc LIKE type_t.chr80, 
   stea036 LIKE stea_t.stea036, 
   stea036_desc LIKE type_t.chr80, 
   stea037 LIKE stea_t.stea037, 
   stea037_desc LIKE type_t.chr80, 
   stea038 LIKE stea_t.stea038, 
   stea038_desc LIKE type_t.chr80, 
   stea050 LIKE stea_t.stea050, 
   stea058 LIKE type_t.chr1, 
   stea059 LIKE type_t.chr1, 
   stea039 LIKE stea_t.stea039, 
   stea040 LIKE stea_t.stea040, 
   stea052 LIKE stea_t.stea052, 
   stea028 LIKE stea_t.stea028, 
   next_b LIKE type_t.dat, 
   stea017 LIKE stea_t.stea017, 
   stea021 LIKE stea_t.stea021, 
   stea024 LIKE stea_t.stea024, 
   stea018 LIKE stea_t.stea018, 
   stea022 LIKE stea_t.stea022, 
   stea025 LIKE stea_t.stea025, 
   stea019 LIKE stea_t.stea019, 
   stea023 LIKE stea_t.stea023, 
   stea026 LIKE stea_t.stea026, 
   stea020 LIKE stea_t.stea020, 
   stea049 LIKE stea_t.stea049, 
   stea057 LIKE stea_t.stea057, 
   stea055 LIKE stea_t.stea055, 
   stea027 LIKE stea_t.stea027, 
   stea031 LIKE stea_t.stea031, 
   stea042 LIKE stea_t.stea042, 
   steaownid LIKE stea_t.steaownid, 
   steaownid_desc LIKE type_t.chr80, 
   steaowndp LIKE stea_t.steaowndp, 
   steaowndp_desc LIKE type_t.chr80, 
   steacrtid LIKE stea_t.steacrtid, 
   steacrtid_desc LIKE type_t.chr80, 
   steacrtdp LIKE stea_t.steacrtdp, 
   steacrtdp_desc LIKE type_t.chr80, 
   steacrtdt LIKE stea_t.steacrtdt, 
   steamodid LIKE stea_t.steamodid, 
   steamodid_desc LIKE type_t.chr80, 
   steamoddt LIKE stea_t.steamoddt, 
   steacnfid LIKE stea_t.steacnfid, 
   steacnfid_desc LIKE type_t.chr80, 
   steacnfdt LIKE stea_t.steacnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_steb_d        RECORD
       stebseq LIKE steb_t.stebseq, 
   steb001 LIKE steb_t.steb001, 
   steb002 LIKE steb_t.steb002, 
   steb002_desc LIKE type_t.chr500, 
   steb018 LIKE steb_t.steb018, 
   steb019 LIKE steb_t.steb019, 
   steb003 LIKE steb_t.steb003, 
   steb004 LIKE steb_t.steb004, 
   steb005 LIKE steb_t.steb005, 
   steb006 LIKE steb_t.steb006, 
   steb007 LIKE steb_t.steb007, 
   steb020 LIKE steb_t.steb020, 
   steb008 LIKE steb_t.steb008, 
   steb008_desc LIKE type_t.chr500, 
   steb009 LIKE steb_t.steb009, 
   steb009_desc LIKE type_t.chr500, 
   steb010 LIKE steb_t.steb010, 
   steb011 LIKE steb_t.steb011, 
   steb012 LIKE steb_t.steb012, 
   steb013 LIKE steb_t.steb013, 
   steb014 LIKE steb_t.steb014, 
   steb026 LIKE steb_t.steb026, 
   steb015 LIKE steb_t.steb015, 
   steb016 LIKE steb_t.steb016, 
   steb017 LIKE steb_t.steb017, 
   steb021 LIKE steb_t.steb021, 
   steb022 LIKE steb_t.steb022, 
   steb023 LIKE steb_t.steb023, 
   steb024 LIKE steb_t.steb024, 
   steb025 LIKE steb_t.steb025, 
   stebsite LIKE steb_t.stebsite, 
   stebunit LIKE steb_t.stebunit
       END RECORD
PRIVATE TYPE type_g_steb10_d RECORD
       steksite LIKE stek_t.steksite, 
   stekunit LIKE stek_t.stekunit, 
   stek001 LIKE stek_t.stek001, 
   stekseq LIKE stek_t.stekseq, 
   stek002 LIKE stek_t.stek002, 
   stek002_desc LIKE type_t.chr500, 
   stek020 LIKE stek_t.stek020, 
   stek021 LIKE stek_t.stek021, 
   stek003 LIKE stek_t.stek003, 
   stek004 LIKE stek_t.stek004, 
   stek018 LIKE stek_t.stek018, 
   stek019 LIKE stek_t.stek019, 
   stek019_desc LIKE type_t.chr500, 
   stek005 LIKE stek_t.stek005, 
   stek006 LIKE stek_t.stek006, 
   stek007 LIKE stek_t.stek007, 
   stek008 LIKE stek_t.stek008, 
   stek008_desc LIKE type_t.chr500, 
   stek009 LIKE stek_t.stek009, 
   stek009_desc LIKE type_t.chr500, 
   stek010 LIKE stek_t.stek010, 
   stek011 LIKE stek_t.stek011, 
   stek012 LIKE stek_t.stek012, 
   stek013 LIKE stek_t.stek013, 
   stek014 LIKE stek_t.stek014, 
   stekacti LIKE stek_t.stekacti, 
   stek015 LIKE stek_t.stek015, 
   stek016 LIKE stek_t.stek016, 
   stek017 LIKE stek_t.stek017, 
   stek022 LIKE stek_t.stek022, 
   stek023 LIKE stek_t.stek023, 
   stek024 LIKE stek_t.stek024, 
   stek025 LIKE stek_t.stek025, 
   stek026 LIKE stek_t.stek026
       END RECORD
PRIVATE TYPE type_g_steb11_d RECORD
       stelunit LIKE stel_t.stelunit, 
   stelsite LIKE stel_t.stelsite, 
   stel001 LIKE stel_t.stel001, 
   stelacti LIKE stel_t.stelacti, 
   stelseq LIKE stel_t.stelseq, 
   stel003 LIKE stel_t.stel003, 
   stel002 LIKE stel_t.stel002, 
   stel002_desc LIKE type_t.chr500, 
   stel004 LIKE stel_t.stel004, 
   stel005 LIKE stel_t.stel005, 
   stel006 LIKE stel_t.stel006, 
   stel007 LIKE stel_t.stel007, 
   stel008 LIKE stel_t.stel008, 
   stel009 LIKE stel_t.stel009
       END RECORD
PRIVATE TYPE type_g_steb12_d RECORD
       stewunit LIKE stew_t.stewunit, 
   stewsite LIKE stew_t.stewsite, 
   stewseq LIKE stew_t.stewseq, 
   stew001 LIKE stew_t.stew001, 
   stew002 LIKE stew_t.stew002, 
   stew003 LIKE stew_t.stew003, 
   stew004 LIKE stew_t.stew004, 
   stew004_desc LIKE type_t.chr500, 
   stew005 LIKE stew_t.stew005, 
   stew006 LIKE stew_t.stew006, 
   stew007 LIKE stew_t.stew007, 
   stew008 LIKE stew_t.stew008, 
   stewacti LIKE stew_t.stewacti
       END RECORD
PRIVATE TYPE type_g_steb2_d RECORD
       stecseq LIKE stec_t.stecseq, 
   stec001 LIKE stec_t.stec001, 
   stecacti LIKE stec_t.stecacti, 
   stec024 LIKE stec_t.stec024, 
   stec002 LIKE stec_t.stec002, 
   stec003 LIKE stec_t.stec003, 
   stec025 LIKE stec_t.stec025, 
   stec004 LIKE stec_t.stec004, 
   stec004_desc LIKE type_t.chr500, 
   stec005 LIKE stec_t.stec005, 
   stec005_desc LIKE type_t.chr500, 
   stec006 LIKE stec_t.stec006, 
   stec006_desc LIKE type_t.chr500, 
   stec007 LIKE stec_t.stec007, 
   stec007_desc LIKE type_t.chr500, 
   stec008 LIKE stec_t.stec008, 
   stec009 LIKE stec_t.stec009, 
   stec009_desc LIKE type_t.chr500, 
   stec026 LIKE stec_t.stec026, 
   stec027 LIKE stec_t.stec027, 
   stec010 LIKE stec_t.stec010, 
   stec011 LIKE stec_t.stec011, 
   stec012 LIKE stec_t.stec012, 
   stec013 LIKE stec_t.stec013, 
   stec014 LIKE stec_t.stec014, 
   stec015 LIKE stec_t.stec015, 
   stec015_desc LIKE type_t.chr500, 
   stec016 LIKE stec_t.stec016, 
   stec016_desc LIKE type_t.chr500, 
   stec017 LIKE stec_t.stec017, 
   stec018 LIKE stec_t.stec018, 
   stec019 LIKE stec_t.stec019, 
   stec020 LIKE stec_t.stec020, 
   stec021 LIKE stec_t.stec021, 
   stec022 LIKE stec_t.stec022, 
   stec023 LIKE stec_t.stec023, 
   stecsite LIKE stec_t.stecsite, 
   stecunit LIKE stec_t.stecunit
       END RECORD
PRIVATE TYPE type_g_steb3_d RECORD
       stee001 LIKE stee_t.stee001, 
   stee002 LIKE stee_t.stee002, 
   steeseq LIKE stee_t.steeseq, 
   stee003 LIKE stee_t.stee003, 
   stee003_desc LIKE type_t.chr500, 
   stee004 LIKE stee_t.stee004, 
   stee005 LIKE stee_t.stee005, 
   stee006 LIKE stee_t.stee006, 
   stee012 LIKE stee_t.stee012, 
   stee007 LIKE stee_t.stee007, 
   stee008 LIKE stee_t.stee008, 
   stee009 LIKE stee_t.stee009, 
   stee010 LIKE stee_t.stee010, 
   stee011 LIKE stee_t.stee011, 
   steesite LIKE stee_t.steesite, 
   steeunit LIKE stee_t.steeunit
       END RECORD
PRIVATE TYPE type_g_steb4_d RECORD
       stegseq LIKE steg_t.stegseq, 
   steg001 LIKE steg_t.steg001, 
   steg002 LIKE steg_t.steg002, 
   steg002_desc LIKE type_t.chr500, 
   steg003 LIKE steg_t.steg003, 
   steg003_desc LIKE type_t.chr500, 
   steg004 LIKE steg_t.steg004, 
   steg005 LIKE steg_t.steg005, 
   stegacti LIKE steg_t.stegacti, 
   stegsite LIKE steg_t.stegsite, 
   stegunit LIKE steg_t.stegunit
       END RECORD
PRIVATE TYPE type_g_steb5_d RECORD
       stehseq LIKE steh_t.stehseq, 
   steh001 LIKE steh_t.steh001, 
   steh002 LIKE steh_t.steh002, 
   steh003 LIKE steh_t.steh003, 
   stehacti LIKE steh_t.stehacti, 
   stehsite LIKE steh_t.stehsite, 
   stehunit LIKE steh_t.stehunit
       END RECORD
PRIVATE TYPE type_g_steb6_d RECORD
       steiseq LIKE stei_t.steiseq, 
   stei001 LIKE stei_t.stei001, 
   stei002 LIKE stei_t.stei002, 
   stei003 LIKE stei_t.stei003, 
   stei003_desc LIKE type_t.chr500, 
   stei005 LIKE stei_t.stei005, 
   stei006 LIKE stei_t.stei006, 
   stei004 LIKE stei_t.stei004, 
   stei010 LIKE stei_t.stei010, 
   stei010_desc LIKE type_t.chr500, 
   stei007 LIKE stei_t.stei007, 
   stei008 LIKE stei_t.stei008, 
   stei009 LIKE stei_t.stei009, 
   steiacti LIKE stei_t.steiacti, 
   stei011 LIKE stei_t.stei011, 
   stei012 LIKE stei_t.stei012, 
   steisite LIKE stei_t.steisite, 
   steiunit LIKE stei_t.steiunit
       END RECORD
PRIVATE TYPE type_g_steb7_d RECORD
       stejseq LIKE stej_t.stejseq, 
   stej001 LIKE stej_t.stej001, 
   stej002 LIKE stej_t.stej002, 
   stej003 LIKE stej_t.stej003, 
   stej004 LIKE stej_t.stej004, 
   stej005 LIKE stej_t.stej005, 
   stej006 LIKE stej_t.stej006, 
   stejsite LIKE stej_t.stejsite, 
   stejunit LIKE stej_t.stejunit
       END RECORD
PRIVATE TYPE type_g_steb8_d RECORD
       stedseq1 LIKE sted_t.stedseq1, 
   sted001 LIKE sted_t.sted001, 
   sted002 LIKE sted_t.sted002, 
   sted003 LIKE sted_t.sted003, 
   sted003_desc LIKE type_t.chr500, 
   sted004 LIKE sted_t.sted004, 
   sted004_desc LIKE type_t.chr500, 
   sted005 LIKE sted_t.sted005, 
   sted006 LIKE sted_t.sted006, 
   sted007 LIKE sted_t.sted007, 
   sted008 LIKE sted_t.sted008, 
   sted009 LIKE sted_t.sted009, 
   stedsite LIKE sted_t.stedsite, 
   stedunit LIKE sted_t.stedunit
       END RECORD
PRIVATE TYPE type_g_steb9_d RECORD
       stef001 LIKE stef_t.stef001, 
   stefseq LIKE stef_t.stefseq, 
   stef002 LIKE stef_t.stef002, 
   stef003 LIKE stef_t.stef003, 
   stef004 LIKE stef_t.stef004, 
   stef005 LIKE stef_t.stef005, 
   stef005_desc LIKE type_t.chr500, 
   stef006 LIKE stef_t.stef006, 
   stef007 LIKE stef_t.stef007, 
   stef010 LIKE stef_t.stef010, 
   stef008 LIKE stef_t.stef008, 
   stef011 LIKE stef_t.stef011, 
   stef009 LIKE stef_t.stef009, 
   stefsite LIKE stef_t.stefsite, 
   stefunit LIKE stef_t.stefunit
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_steadocno LIKE stea_t.steadocno,
      b_steadocdt LIKE stea_t.steadocdt,
      b_stea000 LIKE stea_t.stea000,
      b_stea001 LIKE stea_t.stea001,
      b_stea002 LIKE stea_t.stea002,
      b_stea003 LIKE stea_t.stea003,
      b_stea004 LIKE stea_t.stea004,
      b_stea005 LIKE stea_t.stea005,
      b_stea006 LIKE stea_t.stea006,
      b_stea007 LIKE stea_t.stea007,
      b_stea008 LIKE stea_t.stea008,
      b_stea009 LIKE stea_t.stea009,
      b_stea010 LIKE stea_t.stea010,
   b_stea010_desc LIKE type_t.chr80,
      b_stea011 LIKE stea_t.stea011,
      b_stea012 LIKE stea_t.stea012,
      b_stea013 LIKE stea_t.stea013,
      b_stea014 LIKE stea_t.stea014,
      b_stea015 LIKE stea_t.stea015,
      b_stea016 LIKE stea_t.stea016,
      b_stea017 LIKE stea_t.stea017,
      b_stea018 LIKE stea_t.stea018,
      b_stea019 LIKE stea_t.stea019,
      b_stea020 LIKE stea_t.stea020,
      b_stea021 LIKE stea_t.stea021,
      b_stea022 LIKE stea_t.stea022,
      b_stea023 LIKE stea_t.stea023,
      b_stea024 LIKE stea_t.stea024,
      b_stea025 LIKE stea_t.stea025,
      b_stea026 LIKE stea_t.stea026,
      b_stea027 LIKE stea_t.stea027,
      b_stea028 LIKE stea_t.stea028,
      b_stea029 LIKE stea_t.stea029,
      b_stea030 LIKE stea_t.stea030,
      b_stea031 LIKE stea_t.stea031,
      b_stea032 LIKE stea_t.stea032,
      b_stea033 LIKE stea_t.stea033,
      b_stea034 LIKE stea_t.stea034,
      b_stea035 LIKE stea_t.stea035,
      b_stea036 LIKE stea_t.stea036,
      b_stea037 LIKE stea_t.stea037,
      b_stea038 LIKE stea_t.stea038,
      b_stea039 LIKE stea_t.stea039,
      b_stea040 LIKE stea_t.stea040,
      b_stea041 LIKE stea_t.stea041,
      b_stea042 LIKE stea_t.stea042,
      b_stea043 LIKE stea_t.stea043,
      b_stea044 LIKE stea_t.stea044,
      b_stea045 LIKE stea_t.stea045,
      b_stea046 LIKE stea_t.stea046,
      b_stea047 LIKE stea_t.stea047,
      b_stea048 LIKE stea_t.stea048,
      b_stea049 LIKE stea_t.stea049,
      b_steaunit LIKE stea_t.steaunit,
      b_steasite LIKE stea_t.steasite
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>} 
#end add-point
       
#模組變數(Module Variables)
DEFINE g_stea_m          type_g_stea_m
DEFINE g_stea_m_t        type_g_stea_m
DEFINE g_stea_m_o        type_g_stea_m
DEFINE g_stea_m_mask_o   type_g_stea_m #轉換遮罩前資料
DEFINE g_stea_m_mask_n   type_g_stea_m #轉換遮罩後資料
 
   DEFINE g_steadocno_t LIKE stea_t.steadocno
 
 
DEFINE g_steb_d          DYNAMIC ARRAY OF type_g_steb_d
DEFINE g_steb_d_t        type_g_steb_d
DEFINE g_steb_d_o        type_g_steb_d
DEFINE g_steb_d_mask_o   DYNAMIC ARRAY OF type_g_steb_d #轉換遮罩前資料
DEFINE g_steb_d_mask_n   DYNAMIC ARRAY OF type_g_steb_d #轉換遮罩後資料
DEFINE g_steb10_d          DYNAMIC ARRAY OF type_g_steb10_d
DEFINE g_steb10_d_t        type_g_steb10_d
DEFINE g_steb10_d_o        type_g_steb10_d
DEFINE g_steb10_d_mask_o   DYNAMIC ARRAY OF type_g_steb10_d #轉換遮罩前資料
DEFINE g_steb10_d_mask_n   DYNAMIC ARRAY OF type_g_steb10_d #轉換遮罩後資料
DEFINE g_steb11_d          DYNAMIC ARRAY OF type_g_steb11_d
DEFINE g_steb11_d_t        type_g_steb11_d
DEFINE g_steb11_d_o        type_g_steb11_d
DEFINE g_steb11_d_mask_o   DYNAMIC ARRAY OF type_g_steb11_d #轉換遮罩前資料
DEFINE g_steb11_d_mask_n   DYNAMIC ARRAY OF type_g_steb11_d #轉換遮罩後資料
DEFINE g_steb12_d          DYNAMIC ARRAY OF type_g_steb12_d
DEFINE g_steb12_d_t        type_g_steb12_d
DEFINE g_steb12_d_o        type_g_steb12_d
DEFINE g_steb12_d_mask_o   DYNAMIC ARRAY OF type_g_steb12_d #轉換遮罩前資料
DEFINE g_steb12_d_mask_n   DYNAMIC ARRAY OF type_g_steb12_d #轉換遮罩後資料
DEFINE g_steb2_d          DYNAMIC ARRAY OF type_g_steb2_d
DEFINE g_steb2_d_t        type_g_steb2_d
DEFINE g_steb2_d_o        type_g_steb2_d
DEFINE g_steb2_d_mask_o   DYNAMIC ARRAY OF type_g_steb2_d #轉換遮罩前資料
DEFINE g_steb2_d_mask_n   DYNAMIC ARRAY OF type_g_steb2_d #轉換遮罩後資料
DEFINE g_steb3_d          DYNAMIC ARRAY OF type_g_steb3_d
DEFINE g_steb3_d_t        type_g_steb3_d
DEFINE g_steb3_d_o        type_g_steb3_d
DEFINE g_steb3_d_mask_o   DYNAMIC ARRAY OF type_g_steb3_d #轉換遮罩前資料
DEFINE g_steb3_d_mask_n   DYNAMIC ARRAY OF type_g_steb3_d #轉換遮罩後資料
DEFINE g_steb4_d          DYNAMIC ARRAY OF type_g_steb4_d
DEFINE g_steb4_d_t        type_g_steb4_d
DEFINE g_steb4_d_o        type_g_steb4_d
DEFINE g_steb4_d_mask_o   DYNAMIC ARRAY OF type_g_steb4_d #轉換遮罩前資料
DEFINE g_steb4_d_mask_n   DYNAMIC ARRAY OF type_g_steb4_d #轉換遮罩後資料
DEFINE g_steb5_d          DYNAMIC ARRAY OF type_g_steb5_d
DEFINE g_steb5_d_t        type_g_steb5_d
DEFINE g_steb5_d_o        type_g_steb5_d
DEFINE g_steb5_d_mask_o   DYNAMIC ARRAY OF type_g_steb5_d #轉換遮罩前資料
DEFINE g_steb5_d_mask_n   DYNAMIC ARRAY OF type_g_steb5_d #轉換遮罩後資料
DEFINE g_steb6_d          DYNAMIC ARRAY OF type_g_steb6_d
DEFINE g_steb6_d_t        type_g_steb6_d
DEFINE g_steb6_d_o        type_g_steb6_d
DEFINE g_steb6_d_mask_o   DYNAMIC ARRAY OF type_g_steb6_d #轉換遮罩前資料
DEFINE g_steb6_d_mask_n   DYNAMIC ARRAY OF type_g_steb6_d #轉換遮罩後資料
DEFINE g_steb7_d          DYNAMIC ARRAY OF type_g_steb7_d
DEFINE g_steb7_d_t        type_g_steb7_d
DEFINE g_steb7_d_o        type_g_steb7_d
DEFINE g_steb7_d_mask_o   DYNAMIC ARRAY OF type_g_steb7_d #轉換遮罩前資料
DEFINE g_steb7_d_mask_n   DYNAMIC ARRAY OF type_g_steb7_d #轉換遮罩後資料
DEFINE g_steb8_d          DYNAMIC ARRAY OF type_g_steb8_d
DEFINE g_steb8_d_t        type_g_steb8_d
DEFINE g_steb8_d_o        type_g_steb8_d
DEFINE g_steb8_d_mask_o   DYNAMIC ARRAY OF type_g_steb8_d #轉換遮罩前資料
DEFINE g_steb8_d_mask_n   DYNAMIC ARRAY OF type_g_steb8_d #轉換遮罩後資料
DEFINE g_steb9_d          DYNAMIC ARRAY OF type_g_steb9_d
DEFINE g_steb9_d_t        type_g_steb9_d
DEFINE g_steb9_d_o        type_g_steb9_d
DEFINE g_steb9_d_mask_o   DYNAMIC ARRAY OF type_g_steb9_d #轉換遮罩前資料
DEFINE g_steb9_d_mask_n   DYNAMIC ARRAY OF type_g_steb9_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
DEFINE g_master_multi_table_t    RECORD
      stealdocno LIKE steal_t.stealdocno,
      steal002 LIKE steal_t.steal002,
      steal003 LIKE steal_t.steal003
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
DEFINE g_wc2_table4   STRING
 
DEFINE g_wc2_table5   STRING
 
DEFINE g_wc2_table6   STRING
 
DEFINE g_wc2_table7   STRING
 
DEFINE g_wc2_table8   STRING
 
DEFINE g_wc2_table9   STRING
 
DEFINE g_wc2_table10   STRING
 
DEFINE g_wc2_table11   STRING
 
 
DEFINE g_wc2_table12   STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"
{<point name="global.argv"/>}
#end add-point

{</section>}

{<section id="astt401.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   {<point name="main.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   {<point name="main.define"/>}
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ast","")
 
   #add-point:作業初始化 name="main.init"
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT steasite,'',steadocdt,steadocno,stea000,stea054,steaunit,'',stea001,stea002, 
       stea003,stea004,stea009,steastus,stea010,'',stea005,'','',stea006,'',stea007,stea008,stea047, 
       '',stea048,'',stea044,'',stea051,'',stea011,'',stea012,'',stea056,stea013,'',stea014,'',stea015, 
       '',stea016,stea045,'',stea046,stea053,stea029,stea030,stea032,'',stea033,'',stea034,'',stea035, 
       '',stea036,'',stea037,'',stea038,'',stea050,'','',stea039,stea040,stea052,stea028,'',stea017, 
       stea021,stea024,stea018,stea022,stea025,stea019,stea023,stea026,stea020,stea049,stea057,stea055, 
       stea027,stea031,stea042,steaownid,'',steaowndp,'',steacrtid,'',steacrtdp,'',steacrtdt,steamodid, 
       '',steamoddt,steacnfid,'',steacnfdt", 
                      " FROM stea_t",
                      " WHERE steaent= ? AND steadocno=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt401_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.steasite,t0.steadocdt,t0.steadocno,t0.stea000,t0.stea054,t0.steaunit, 
       t0.stea001,t0.stea002,t0.stea003,t0.stea004,t0.stea009,t0.steastus,t0.stea010,t0.stea005,t0.stea006, 
       t0.stea007,t0.stea008,t0.stea047,t0.stea048,t0.stea044,t0.stea051,t0.stea011,t0.stea012,t0.stea056, 
       t0.stea013,t0.stea014,t0.stea015,t0.stea016,t0.stea045,t0.stea046,t0.stea053,t0.stea029,t0.stea030, 
       t0.stea032,t0.stea033,t0.stea034,t0.stea035,t0.stea036,t0.stea037,t0.stea038,t0.stea050,t0.stea058, 
       t0.stea059,t0.stea039,t0.stea040,t0.stea052,t0.stea028,t0.stea017,t0.stea021,t0.stea024,t0.stea018, 
       t0.stea022,t0.stea025,t0.stea019,t0.stea023,t0.stea026,t0.stea020,t0.stea049,t0.stea057,t0.stea055, 
       t0.stea027,t0.stea031,t0.stea042,t0.steaownid,t0.steaowndp,t0.steacrtid,t0.steacrtdp,t0.steacrtdt, 
       t0.steamodid,t0.steamoddt,t0.steacnfid,t0.steacnfdt,t1.ooefl003 ,t2.ooefl003 ,t3.pmaal004 ,t4.oocql004 , 
       t5.mhaal003 ,t6.mhabl004 ,t7.ooefl003 ,t8.rtaxl003 ,t9.rtaxl003 ,t10.oocql004 ,t11.stagl003 , 
       t12.ooefl003 ,t13.ooag011 ,t14.oocql004 ,t15.ooail003 ,t16.ooibl004 ,t17.staal003 ,t18.oocql004 , 
       t19.ooefl003 ,t20.ooag011 ,t21.ooefl003 ,t22.ooag011 ,t23.ooefl003 ,t24.ooag011 ,t25.ooag011", 

               " FROM stea_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.steasite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=t0.steaunit AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t3 ON t3.pmaalent="||g_enterprise||" AND t3.pmaal001=t0.stea010 AND t3.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t4 ON t4.oocqlent="||g_enterprise||" AND t4.oocql001='2126' AND t4.oocql002=t0.stea006 AND t4.oocql003='"||g_dlang||"' ",
               " LEFT JOIN mhaal_t t5 ON t5.mhaalent="||g_enterprise||" AND t5.mhaal001=t0.stea047 AND t5.mhaal002='"||g_dlang||"' ",
               " LEFT JOIN mhabl_t t6 ON t6.mhablent="||g_enterprise||" AND t6.mhabl001=t0.stea047 AND t6.mhabl002=t0.stea048 AND t6.mhabl003='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent="||g_enterprise||" AND t7.ooefl001=t0.stea044 AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN rtaxl_t t8 ON t8.rtaxlent="||g_enterprise||" AND t8.rtaxl001=t0.stea051 AND t8.rtaxl002='"||g_dlang||"' ",
               " LEFT JOIN rtaxl_t t9 ON t9.rtaxlent="||g_enterprise||" AND t9.rtaxl001=t0.stea011 AND t9.rtaxl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t10 ON t10.oocqlent="||g_enterprise||" AND t10.oocql001='2002' AND t10.oocql002=t0.stea012 AND t10.oocql003='"||g_dlang||"' ",
               " LEFT JOIN stagl_t t11 ON t11.staglent="||g_enterprise||" AND t11.stagl001=t0.stea013 AND t11.stagl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t12 ON t12.ooeflent="||g_enterprise||" AND t12.ooefl001=t0.stea014 AND t12.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t13 ON t13.ooagent="||g_enterprise||" AND t13.ooag001=t0.stea015  ",
               " LEFT JOIN oocql_t t14 ON t14.oocqlent="||g_enterprise||" AND t14.oocql001='2127' AND t14.oocql002=t0.stea045 AND t14.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t15 ON t15.ooailent="||g_enterprise||" AND t15.ooail001=t0.stea032 AND t15.ooail002='"||g_dlang||"' ",
               " LEFT JOIN ooibl_t t16 ON t16.ooiblent="||g_enterprise||" AND t16.ooibl002=t0.stea035 AND t16.ooibl003='"||g_dlang||"' ",
               " LEFT JOIN staal_t t17 ON t17.staalent="||g_enterprise||" AND t17.staal001=t0.stea036 AND t17.staal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t18 ON t18.oocqlent="||g_enterprise||" AND t18.oocql001='2060' AND t18.oocql002=t0.stea037 AND t18.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t19 ON t19.ooeflent="||g_enterprise||" AND t19.ooefl001=t0.stea038 AND t19.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t20 ON t20.ooagent="||g_enterprise||" AND t20.ooag001=t0.steaownid  ",
               " LEFT JOIN ooefl_t t21 ON t21.ooeflent="||g_enterprise||" AND t21.ooefl001=t0.steaowndp AND t21.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t22 ON t22.ooagent="||g_enterprise||" AND t22.ooag001=t0.steacrtid  ",
               " LEFT JOIN ooefl_t t23 ON t23.ooeflent="||g_enterprise||" AND t23.ooefl001=t0.steacrtdp AND t23.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t24 ON t24.ooagent="||g_enterprise||" AND t24.ooag001=t0.steamodid  ",
               " LEFT JOIN ooag_t t25 ON t25.ooagent="||g_enterprise||" AND t25.ooag001=t0.steacnfid  ",
 
               " WHERE t0.steaent = " ||g_enterprise|| " AND t0.steadocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE astt401_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_astt401 WITH FORM cl_ap_formpath("ast",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL astt401_init()   
 
      #進入選單 Menu (="N")
      CALL astt401_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_astt401
      
   END IF 
   
   CLOSE astt401_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 

{</section>}

{<section id="astt401.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION astt401_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   {<point name="init.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   {<point name="init.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   {<point name="init.pre_function"/>}
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
   LET g_detail_idx_list[4] = 1
   LET g_detail_idx_list[5] = 1
   LET g_detail_idx_list[6] = 1
   LET g_detail_idx_list[7] = 1
   LET g_detail_idx_list[8] = 1
   LET g_detail_idx_list[9] = 1
   LET g_detail_idx_list[10] = 1
   LET g_detail_idx_list[11] = 1
   LET g_detail_idx_list[12] = 1
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('steastus','13','N,Y,A,D,R,W,X')
 
      CALL cl_set_combo_scc('stea000','6863') 
   CALL cl_set_combo_scc('stea003','6013') 
   CALL cl_set_combo_scc('stea004','6785') 
   CALL cl_set_combo_scc('stea046','6201') 
   CALL cl_set_combo_scc('stea029','6202') 
   CALL cl_set_combo_scc('stea030','6786') 
   CALL cl_set_combo_scc('stea031','36') 
   CALL cl_set_combo_scc('steb004','6006') 
   CALL cl_set_combo_scc('steb005','6007') 
   CALL cl_set_combo_scc('steb006','6008') 
   CALL cl_set_combo_scc('steb007','6009') 
   CALL cl_set_combo_scc('stek004','6006') 
   CALL cl_set_combo_scc('stek018','8310') 
   CALL cl_set_combo_scc('stek005','6007') 
   CALL cl_set_combo_scc('stek006','6008') 
   CALL cl_set_combo_scc('stek007','6009') 
   CALL cl_set_combo_scc('stel003','6848') 
   CALL cl_set_combo_scc('stel004','6006') 
   CALL cl_set_combo_scc('stew002','6868') 
   CALL cl_set_combo_scc('stew007','6869') 
   CALL cl_set_combo_scc('stec024','6781') 
   CALL cl_set_combo_scc('stec011','6006') 
   CALL cl_set_combo_scc('stec012','6007') 
   CALL cl_set_combo_scc('stec013','6008') 
   CALL cl_set_combo_scc('stec014','6009') 
   CALL cl_set_combo_scc('stee004','6793') 
   CALL cl_set_combo_scc('stee005','6011') 
   CALL cl_set_combo_scc('stee006','6794') 
   CALL cl_set_combo_scc('stee012','6851') 
   CALL cl_set_combo_scc('stei002','6880') 
   CALL cl_set_combo_scc('stef010','6864') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1',","1")
   CALL g_idx_group.addAttribute("'2',","1")
   CALL g_idx_group.addAttribute("'3',","1")
   CALL g_idx_group.addAttribute("'4',","1")
   CALL g_idx_group.addAttribute("'5',","1")
   CALL g_idx_group.addAttribute("'6',","1")
   CALL g_idx_group.addAttribute("'7',","1")
   CALL g_idx_group.addAttribute("'8',","1")
   CALL g_idx_group.addAttribute("'9',","1")
   CALL g_idx_group.addAttribute("'10',","1")
   CALL g_idx_group.addAttribute("'12',","1")
   CALL g_idx_group.addAttribute("'11',","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL astt401_default_search()
    
END FUNCTION

{</section>}

{<section id="astt401.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION astt401_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   {<point name="ui_dialog.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   {<point name="ui_dialog.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   {<point name="ui_dialog.pre_function"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL astt401_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_stea_m.* TO NULL
         CALL g_steb_d.clear()
         CALL g_steb10_d.clear()
         CALL g_steb11_d.clear()
         CALL g_steb12_d.clear()
         CALL g_steb2_d.clear()
         CALL g_steb3_d.clear()
         CALL g_steb4_d.clear()
         CALL g_steb5_d.clear()
         CALL g_steb6_d.clear()
         CALL g_steb7_d.clear()
         CALL g_steb8_d.clear()
         CALL g_steb9_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL astt401_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL astt401_fetch('') # reload data
               LET l_ac = 1
               CALL astt401_ui_detailshow() #Setting the current row 
         
               CALL astt401_idx_chk()
               #NEXT FIELD stebseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_steb_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astt401_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL astt401_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_steb10_d TO s_detail10.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astt401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail10")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[2] = l_ac
               CALL g_idx_group.addAttribute("'2',",l_ac)
               
               #add-point:page2, before row動作 name="ui_dialog.body10.before_row"
               {<point name="ui_dialog.body10.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail10")
               LET g_current_page = 2
               #顯示單身筆數
               CALL astt401_idx_chk()
               #add-point:page2自定義行為 name="ui_dialog.body10.before_display"
               {<point name="ui_dialog.body10.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為 name="ui_dialog.body10.action"
            {<point name="ui_dialog.body10.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_steb11_d TO s_detail11.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astt401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail11")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[3] = l_ac
               CALL g_idx_group.addAttribute("'3',",l_ac)
               
               #add-point:page3, before row動作 name="ui_dialog.body11.before_row"
               {<point name="ui_dialog.body11.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail11")
               LET g_current_page = 3
               #顯示單身筆數
               CALL astt401_idx_chk()
               #add-point:page3自定義行為 name="ui_dialog.body11.before_display"
               {<point name="ui_dialog.body11.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為 name="ui_dialog.body11.action"
            {<point name="ui_dialog.body11.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_steb12_d TO s_detail12.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astt401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail12")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[4] = l_ac
               CALL g_idx_group.addAttribute("'4',",l_ac)
               
               #add-point:page4, before row動作 name="ui_dialog.body12.before_row"
               {<point name="ui_dialog.body12.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'4',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail12")
               LET g_current_page = 4
               #顯示單身筆數
               CALL astt401_idx_chk()
               #add-point:page4自定義行為 name="ui_dialog.body12.before_display"
               {<point name="ui_dialog.body12.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_4)
            
         
            #add-point:page4自定義行為 name="ui_dialog.body12.action"
            {<point name="ui_dialog.body12.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_steb2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astt401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[5] = l_ac
               CALL g_idx_group.addAttribute("'5',",l_ac)
               CALL astt401_b_fill2('12')
 
               #add-point:page5, before row動作 name="ui_dialog.body2.before_row"
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'5',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 5
               #顯示單身筆數
               CALL astt401_idx_chk()
               #add-point:page5自定義行為 name="ui_dialog.body2.before_display"
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_5)
            
         
            #add-point:page5自定義行為 name="ui_dialog.body2.action"
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_steb3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astt401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[6] = l_ac
               CALL g_idx_group.addAttribute("'6',",l_ac)
               
               #add-point:page6, before row動作 name="ui_dialog.body3.before_row"
               {<point name="ui_dialog.body3.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'6',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 6
               #顯示單身筆數
               CALL astt401_idx_chk()
               #add-point:page6自定義行為 name="ui_dialog.body3.before_display"
               {<point name="ui_dialog.body3.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_6)
            
         
            #add-point:page6自定義行為 name="ui_dialog.body3.action"
            {<point name="ui_dialog.body3.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_steb4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astt401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[7] = l_ac
               CALL g_idx_group.addAttribute("'7',",l_ac)
               
               #add-point:page7, before row動作 name="ui_dialog.body4.before_row"
               {<point name="ui_dialog.body4.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'7',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_current_page = 7
               #顯示單身筆數
               CALL astt401_idx_chk()
               #add-point:page7自定義行為 name="ui_dialog.body4.before_display"
               {<point name="ui_dialog.body4.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_7)
            
         
            #add-point:page7自定義行為 name="ui_dialog.body4.action"
            {<point name="ui_dialog.body4.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_steb5_d TO s_detail5.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astt401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[8] = l_ac
               CALL g_idx_group.addAttribute("'8',",l_ac)
               
               #add-point:page8, before row動作 name="ui_dialog.body5.before_row"
               {<point name="ui_dialog.body5.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'8',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               LET g_current_page = 8
               #顯示單身筆數
               CALL astt401_idx_chk()
               #add-point:page8自定義行為 name="ui_dialog.body5.before_display"
               {<point name="ui_dialog.body5.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_8)
            
         
            #add-point:page8自定義行為 name="ui_dialog.body5.action"
            {<point name="ui_dialog.body5.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_steb6_d TO s_detail6.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astt401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail6")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[9] = l_ac
               CALL g_idx_group.addAttribute("'9',",l_ac)
               
               #add-point:page9, before row動作 name="ui_dialog.body6.before_row"
               {<point name="ui_dialog.body6.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'9',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail6")
               LET g_current_page = 9
               #顯示單身筆數
               CALL astt401_idx_chk()
               #add-point:page9自定義行為 name="ui_dialog.body6.before_display"
               {<point name="ui_dialog.body6.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_9)
            
         
            #add-point:page9自定義行為 name="ui_dialog.body6.action"
            {<point name="ui_dialog.body6.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_steb7_d TO s_detail7.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astt401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail7")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[10] = l_ac
               CALL g_idx_group.addAttribute("'10',",l_ac)
               
               #add-point:page10, before row動作 name="ui_dialog.body7.before_row"
               {<point name="ui_dialog.body7.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'10',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail7")
               LET g_current_page = 10
               #顯示單身筆數
               CALL astt401_idx_chk()
               #add-point:page10自定義行為 name="ui_dialog.body7.before_display"
               {<point name="ui_dialog.body7.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_10)
            
         
            #add-point:page10自定義行為 name="ui_dialog.body7.action"
            {<point name="ui_dialog.body7.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_steb9_d TO s_detail9.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astt401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail9")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[12] = l_ac
               CALL g_idx_group.addAttribute("'11',",l_ac)
               
               #add-point:page12, before row動作 name="ui_dialog.body9.before_row"
               {<point name="ui_dialog.body9.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'11',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail9")
               LET g_current_page = 12
               #顯示單身筆數
               CALL astt401_idx_chk()
               #add-point:page12自定義行為 name="ui_dialog.body9.before_display"
               {<point name="ui_dialog.body9.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_12)
            
         
            #add-point:page12自定義行為 name="ui_dialog.body9.action"
            {<point name="ui_dialog.body9.action"/>}
            #end add-point
         
         END DISPLAY
 
         
         #第二階單身段落
         DISPLAY ARRAY g_steb8_d TO s_detail8.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astt401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail8")
               LET g_detail_idx2 = l_ac
               LET g_detail_idx_list[11] = l_ac
               CALL g_idx_group.addAttribute("'12',",l_ac)
               
               #add-point:page11, before row動作 name="ui_dialog.body8.before_row"
               {<point name="ui_dialog.body8.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在下階單身則控制筆數位置
               IF g_loc = 'd' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'12',"))
               END IF
               LET g_loc = 'd'
               LET l_ac = DIALOG.getCurrentRow("s_detail8")
               LET g_current_page = 11
               #顯示單身筆數
               CALL astt401_idx_chk()
               #add-point:page11自定義行為 name="ui_dialog.body8.before_display"
               {<point name="ui_dialog.body8.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_11)
            
         
            #add-point:page11自定義行為 name="ui_dialog.body8.action"
            {<point name="ui_dialog.body8.action"/>}
            #end add-point
         
         END DISPLAY
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL astt401_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL astt401_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL astt401_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL astt401_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         {<point name="ui_dialog.more_action"/>}
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL astt401_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL astt401_set_act_visible()   
            CALL astt401_set_act_no_visible()
            IF NOT (g_stea_m.steadocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " steaent = " ||g_enterprise|| " AND",
                                  " steadocno = '", g_stea_m.steadocno, "' "
 
               #填到對應位置
               CALL astt401_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:3)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status name="menu.bpm_status"
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
               INITIALIZE g_wc2_table4 TO NULL
 
               INITIALIZE g_wc2_table5 TO NULL
 
               INITIALIZE g_wc2_table6 TO NULL
 
               INITIALIZE g_wc2_table7 TO NULL
 
               INITIALIZE g_wc2_table8 TO NULL
 
               INITIALIZE g_wc2_table9 TO NULL
 
               INITIALIZE g_wc2_table10 TO NULL
 
               INITIALIZE g_wc2_table11 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "stea_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "steb_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "stek_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stel_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stew_t" 
                        LET g_wc2_table4 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stec_t" 
                        LET g_wc2_table5 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stee_t" 
                        LET g_wc2_table6 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "steg_t" 
                        LET g_wc2_table7 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "steh_t" 
                        LET g_wc2_table8 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stei_t" 
                        LET g_wc2_table9 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stej_t" 
                        LET g_wc2_table10 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stef_t" 
                        LET g_wc2_table11 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
                  OR NOT cl_null(g_wc2_table4)
 
                  OR NOT cl_null(g_wc2_table5)
 
                  OR NOT cl_null(g_wc2_table6)
 
                  OR NOT cl_null(g_wc2_table7)
 
                  OR NOT cl_null(g_wc2_table8)
 
                  OR NOT cl_null(g_wc2_table9)
 
                  OR NOT cl_null(g_wc2_table10)
 
                  OR NOT cl_null(g_wc2_table11)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
                  IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
                  END IF
 
                  IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
                  END IF
 
                  IF g_wc2_table6 <> " 1=1" AND NOT cl_null(g_wc2_table6) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
                  END IF
 
                  IF g_wc2_table7 <> " 1=1" AND NOT cl_null(g_wc2_table7) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
                  END IF
 
                  IF g_wc2_table8 <> " 1=1" AND NOT cl_null(g_wc2_table8) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table8
                  END IF
 
                  IF g_wc2_table9 <> " 1=1" AND NOT cl_null(g_wc2_table9) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table9
                  END IF
 
                  IF g_wc2_table10 <> " 1=1" AND NOT cl_null(g_wc2_table10) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table10
                  END IF
 
                  IF g_wc2_table11 <> " 1=1" AND NOT cl_null(g_wc2_table11) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table11
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL astt401_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
               INITIALIZE g_wc2_table4 TO NULL
 
               INITIALIZE g_wc2_table5 TO NULL
 
               INITIALIZE g_wc2_table6 TO NULL
 
               INITIALIZE g_wc2_table7 TO NULL
 
               INITIALIZE g_wc2_table8 TO NULL
 
               INITIALIZE g_wc2_table9 TO NULL
 
               INITIALIZE g_wc2_table10 TO NULL
 
               INITIALIZE g_wc2_table11 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "stea_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "steb_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "stek_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stel_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stew_t" 
                        LET g_wc2_table4 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stec_t" 
                        LET g_wc2_table5 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stee_t" 
                        LET g_wc2_table6 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "steg_t" 
                        LET g_wc2_table7 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "steh_t" 
                        LET g_wc2_table8 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stei_t" 
                        LET g_wc2_table9 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stej_t" 
                        LET g_wc2_table10 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stef_t" 
                        LET g_wc2_table11 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
                  OR NOT cl_null(g_wc2_table4)
 
                  OR NOT cl_null(g_wc2_table5)
 
                  OR NOT cl_null(g_wc2_table6)
 
                  OR NOT cl_null(g_wc2_table7)
 
                  OR NOT cl_null(g_wc2_table8)
 
                  OR NOT cl_null(g_wc2_table9)
 
                  OR NOT cl_null(g_wc2_table10)
 
                  OR NOT cl_null(g_wc2_table11)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
                  IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
                  END IF
 
                  IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
                  END IF
 
                  IF g_wc2_table6 <> " 1=1" AND NOT cl_null(g_wc2_table6) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
                  END IF
 
                  IF g_wc2_table7 <> " 1=1" AND NOT cl_null(g_wc2_table7) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
                  END IF
 
                  IF g_wc2_table8 <> " 1=1" AND NOT cl_null(g_wc2_table8) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table8
                  END IF
 
                  IF g_wc2_table9 <> " 1=1" AND NOT cl_null(g_wc2_table9) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table9
                  END IF
 
                  IF g_wc2_table10 <> " 1=1" AND NOT cl_null(g_wc2_table10) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table10
                  END IF
 
                  IF g_wc2_table11 <> " 1=1" AND NOT cl_null(g_wc2_table11) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table11
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL astt401_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code = "-100" 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL astt401_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL astt401_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL astt401_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astt401_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL astt401_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astt401_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL astt401_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astt401_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL astt401_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astt401_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL astt401_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astt401_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_steb_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_steb10_d)
                  LET g_export_id[2]   = "s_detail10"
                  LET g_export_node[3] = base.typeInfo.create(g_steb11_d)
                  LET g_export_id[3]   = "s_detail11"
                  LET g_export_node[4] = base.typeInfo.create(g_steb12_d)
                  LET g_export_id[4]   = "s_detail12"
                  LET g_export_node[5] = base.typeInfo.create(g_steb2_d)
                  LET g_export_id[5]   = "s_detail2"
                  LET g_export_node[6] = base.typeInfo.create(g_steb3_d)
                  LET g_export_id[6]   = "s_detail3"
                  LET g_export_node[7] = base.typeInfo.create(g_steb4_d)
                  LET g_export_id[7]   = "s_detail4"
                  LET g_export_node[8] = base.typeInfo.create(g_steb5_d)
                  LET g_export_id[8]   = "s_detail5"
                  LET g_export_node[9] = base.typeInfo.create(g_steb6_d)
                  LET g_export_id[9]   = "s_detail6"
                  LET g_export_node[10] = base.typeInfo.create(g_steb7_d)
                  LET g_export_id[10]   = "s_detail7"
                  LET g_export_node[11] = base.typeInfo.create(g_steb8_d)
                  LET g_export_id[11]   = "s_detail8"
                  LET g_export_node[12] = base.typeInfo.create(g_steb9_d)
                  LET g_export_id[12]   = "s_detail9"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD stebseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL astt401_modify()
               #add-point:ON ACTION modify name="menu.modify"
               {<point name="menu.modify" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL astt401_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               {<point name="menu.modify_detail" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION astt401_04
            LET g_action_choice="astt401_04"
            IF cl_auth_chk_act("astt401_04") THEN
               
               #add-point:ON ACTION astt401_04 name="menu.astt401_04"
               {<point name="menu.astt401_04" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION astt401_01
            LET g_action_choice="astt401_01"
            IF cl_auth_chk_act("astt401_01") THEN
               
               #add-point:ON ACTION astt401_01 name="menu.astt401_01"
               {<point name="menu.astt401_01" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL astt401_delete()
               #add-point:ON ACTION delete name="menu.delete"
               {<point name="menu.delete" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL astt401_insert()
               #add-point:ON ACTION insert name="menu.insert"
               {<point name="menu.insert" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION astt401_02
            LET g_action_choice="astt401_02"
            IF cl_auth_chk_act("astt401_02") THEN
               
               #add-point:ON ACTION astt401_02 name="menu.astt401_02"
               {<point name="menu.astt401_02" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               {<point name="menu.output" mark="Y"/>}
               #END add-point
               &include "erp/ast/astt401_rep.4gl"
               #add-point:ON ACTION output.after name="menu.after_output"
               {<point name="menu.after_output" />}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION quickprint
            LET g_action_choice="quickprint"
            IF cl_auth_chk_act("quickprint") THEN
               
               #add-point:ON ACTION quickprint name="menu.quickprint"
               {<point name="menu.quickprint" mark="Y"/>}
               #END add-point
               &include "erp/ast/astt401_rep.4gl"
               #add-point:ON ACTION quickprint.after name="menu.after_quickprint"
               {<point name="menu.after_quickprint" />}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL astt401_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               {<point name="menu.reproduce" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL astt401_query()
               #add-point:ON ACTION query name="menu.query"
               {<point name="menu.query" mark="Y"/>}
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail10",1)
               CALL g_curr_diag.setCurrentRow("s_detail11",1)
               CALL g_curr_diag.setCurrentRow("s_detail12",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
               CALL g_curr_diag.setCurrentRow("s_detail3",1)
               CALL g_curr_diag.setCurrentRow("s_detail4",1)
               CALL g_curr_diag.setCurrentRow("s_detail5",1)
               CALL g_curr_diag.setCurrentRow("s_detail6",1)
               CALL g_curr_diag.setCurrentRow("s_detail7",1)
               CALL g_curr_diag.setCurrentRow("s_detail8",1)
               CALL g_curr_diag.setCurrentRow("s_detail9",1)
 
 
 
 
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION astt401_03
            LET g_action_choice="astt401_03"
            IF cl_auth_chk_act("astt401_03") THEN
               
               #add-point:ON ACTION astt401_03 name="menu.astt401_03"
               {<point name="menu.astt401_03" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL astt401_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL astt401_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL astt401_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_stea_m.steadocdt)
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
 
      #(ver:79) ---add start---
      #add-point:ui_dialog段 after dialog name="ui_dialog.exit_dialog"
      {<point name="ui_dialog.exit_dialog"/>}
      #end add-point
      #(ver:79) --- add end ---
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION

{</section>}

{<section id="astt401.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION astt401_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   {<point name="browser_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   {<point name="browser_fill.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT steadocno ",
                      " FROM stea_t ",
                      " ",
                      " LEFT JOIN steb_t ON stebent = steaent AND steadocno = stebdocno ", "  ",
                      #add-point:browser_fill段sql(steb_t1) name="browser_fill.cnt.join.}"
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
                      " LEFT JOIN stek_t ON stekent = steaent AND steadocno = stekdocno", "  ",
                      #add-point:browser_fill段sql(stek_t1) name="browser_fill.cnt.join.stek_t1"
                      {<point name="browser_fill.cnt.join.stek_t1"/>}
                      #end add-point
 
                      " LEFT JOIN stel_t ON stelent = steaent AND steadocno = steldocno", "  ",
                      #add-point:browser_fill段sql(stel_t1) name="browser_fill.cnt.join.stel_t1"
                      {<point name="browser_fill.cnt.join.stel_t1"/>}
                      #end add-point
 
                      " LEFT JOIN stew_t ON stewent = steaent AND steadocno = stewdocno", "  ",
                      #add-point:browser_fill段sql(stew_t1) name="browser_fill.cnt.join.stew_t1"
                      {<point name="browser_fill.cnt.join.stew_t1"/>}
                      #end add-point
 
                      " LEFT JOIN stec_t ON stecent = steaent AND steadocno = stecdocno", "  ",
                      #add-point:browser_fill段sql(stec_t1) name="browser_fill.cnt.join.stec_t1"
                      {<point name="browser_fill.cnt.join.stec_t1"/>}
                      #end add-point
 
                      " LEFT JOIN stee_t ON steeent = steaent AND steadocno = steedocno", "  ",
                      #add-point:browser_fill段sql(stee_t1) name="browser_fill.cnt.join.stee_t1"
                      {<point name="browser_fill.cnt.join.stee_t1"/>}
                      #end add-point
 
                      " LEFT JOIN steg_t ON stegent = steaent AND steadocno = stegdocno", "  ",
                      #add-point:browser_fill段sql(steg_t1) name="browser_fill.cnt.join.steg_t1"
                      {<point name="browser_fill.cnt.join.steg_t1"/>}
                      #end add-point
 
                      " LEFT JOIN steh_t ON stehent = steaent AND steadocno = stehdocno", "  ",
                      #add-point:browser_fill段sql(steh_t1) name="browser_fill.cnt.join.steh_t1"
                      {<point name="browser_fill.cnt.join.steh_t1"/>}
                      #end add-point
 
                      " LEFT JOIN stei_t ON steient = steaent AND steadocno = steidocno", "  ",
                      #add-point:browser_fill段sql(stei_t1) name="browser_fill.cnt.join.stei_t1"
                      {<point name="browser_fill.cnt.join.stei_t1"/>}
                      #end add-point
 
                      " LEFT JOIN stej_t ON stejent = steaent AND steadocno = stejdocno", "  ",
                      #add-point:browser_fill段sql(stej_t1) name="browser_fill.cnt.join.stej_t1"
                      {<point name="browser_fill.cnt.join.stej_t1"/>}
                      #end add-point
 
                      " LEFT JOIN stef_t ON stefent = steaent AND steadocno = stefdocno", "  ",
                      #add-point:browser_fill段sql(stef_t1) name="browser_fill.cnt.join.stef_t1"
                      {<point name="browser_fill.cnt.join.stef_t1"/>}
                      #end add-point
 
 
                      " LEFT JOIN sted_t ON stedent = steaent AND stecdocno = steddocno AND stecseq = stedseq", "  ",
                      #add-point:browser_fill段sql(sted_t1) name="browser_fill.cnt.join.sted_t1"
                      {<point name="browser_fill.cnt.join.sted_t1"/>}
                      #end add-point
 
 
                      " LEFT JOIN steal_t ON stealent = "||g_enterprise||" AND steadocno = stealdocno AND steal001 = '",g_dlang,"' ", 
                      " ", 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
 
                      " ",
 
 
                      " WHERE steaent = " ||g_enterprise|| " AND stebent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("stea_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT steadocno ",
                      " FROM stea_t ", 
                      "  ",
                      "  LEFT JOIN steal_t ON stealent = "||g_enterprise||" AND steadocno = stealdocno AND steal001 = '",g_dlang,"' ",
                      " WHERE steaent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("stea_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code = 9035 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_stea_m.* TO NULL
      CALL g_steb_d.clear()        
      CALL g_steb10_d.clear() 
      CALL g_steb11_d.clear() 
      CALL g_steb12_d.clear() 
      CALL g_steb2_d.clear() 
      CALL g_steb3_d.clear() 
      CALL g_steb4_d.clear() 
      CALL g_steb5_d.clear() 
      CALL g_steb6_d.clear() 
      CALL g_steb7_d.clear() 
      CALL g_steb8_d.clear() 
      CALL g_steb9_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.steadocno,t0.steadocdt,t0.stea000,t0.stea001,t0.stea002,t0.stea003,t0.stea004,t0.stea005,t0.stea006,t0.stea007,t0.stea008,t0.stea009,t0.stea010,t0.stea011,t0.stea012,t0.stea013,t0.stea014,t0.stea015,t0.stea016,t0.stea017,t0.stea018,t0.stea019,t0.stea020,t0.stea021,t0.stea022,t0.stea023,t0.stea024,t0.stea025,t0.stea026,t0.stea027,t0.stea028,t0.stea029,t0.stea030,t0.stea031,t0.stea032,t0.stea033,t0.stea034,t0.stea035,t0.stea036,t0.stea037,t0.stea038,t0.stea039,t0.stea040,t0.stea041,t0.stea042,t0.stea043,t0.stea044,t0.stea045,t0.stea046,t0.stea047,t0.stea048,t0.stea049,t0.steaunit,t0.steasite Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.steastus,t0.steadocno,t0.steadocdt,t0.stea000,t0.stea001,t0.stea002, 
          t0.stea003,t0.stea004,t0.stea005,t0.stea006,t0.stea007,t0.stea008,t0.stea009,t0.stea010,t0.stea011, 
          t0.stea012,t0.stea013,t0.stea014,t0.stea015,t0.stea016,t0.stea017,t0.stea018,t0.stea019,t0.stea020, 
          t0.stea021,t0.stea022,t0.stea023,t0.stea024,t0.stea025,t0.stea026,t0.stea027,t0.stea028,t0.stea029, 
          t0.stea030,t0.stea031,t0.stea032,t0.stea033,t0.stea034,t0.stea035,t0.stea036,t0.stea037,t0.stea038, 
          t0.stea039,t0.stea040,t0.stea041,t0.stea042,t0.stea043,t0.stea044,t0.stea045,t0.stea046,t0.stea047, 
          t0.stea048,t0.stea049,t0.steaunit,t0.steasite,t1.pmaal004 ",
                  " FROM stea_t t0",
                  "  ",
                  "  LEFT JOIN steb_t ON stebent = steaent AND steadocno = stebdocno ", "  ", 
                  #add-point:browser_fill段sql(steb_t1) name="browser_fill.join.steb_t1"
                  {<point name="browser_fill.join.steb_t1"/>}
                  #end add-point
                  "  LEFT JOIN stek_t ON stekent = steaent AND steadocno = stekdocno", "  ", 
                  #add-point:browser_fill段sql(stek_t1) name="browser_fill.join.stek_t1"
                  {<point name="browser_fill.join.stek_t1"/>}
                  #end add-point
 
                  "  LEFT JOIN stel_t ON stelent = steaent AND steadocno = steldocno", "  ", 
                  #add-point:browser_fill段sql(stel_t1) name="browser_fill.join.stel_t1"
                  {<point name="browser_fill.join.stel_t1"/>}
                  #end add-point
 
                  "  LEFT JOIN stew_t ON stewent = steaent AND steadocno = stewdocno", "  ", 
                  #add-point:browser_fill段sql(stew_t1) name="browser_fill.join.stew_t1"
                  {<point name="browser_fill.join.stew_t1"/>}
                  #end add-point
 
                  "  LEFT JOIN stec_t ON stecent = steaent AND steadocno = stecdocno", "  ", 
                  #add-point:browser_fill段sql(stec_t1) name="browser_fill.join.stec_t1"
                  {<point name="browser_fill.join.stec_t1"/>}
                  #end add-point
 
                  "  LEFT JOIN stee_t ON steeent = steaent AND steadocno = steedocno", "  ", 
                  #add-point:browser_fill段sql(stee_t1) name="browser_fill.join.stee_t1"
                  {<point name="browser_fill.join.stee_t1"/>}
                  #end add-point
 
                  "  LEFT JOIN steg_t ON stegent = steaent AND steadocno = stegdocno", "  ", 
                  #add-point:browser_fill段sql(steg_t1) name="browser_fill.join.steg_t1"
                  {<point name="browser_fill.join.steg_t1"/>}
                  #end add-point
 
                  "  LEFT JOIN steh_t ON stehent = steaent AND steadocno = stehdocno", "  ", 
                  #add-point:browser_fill段sql(steh_t1) name="browser_fill.join.steh_t1"
                  {<point name="browser_fill.join.steh_t1"/>}
                  #end add-point
 
                  "  LEFT JOIN stei_t ON steient = steaent AND steadocno = steidocno", "  ", 
                  #add-point:browser_fill段sql(stei_t1) name="browser_fill.join.stei_t1"
                  {<point name="browser_fill.join.stei_t1"/>}
                  #end add-point
 
                  "  LEFT JOIN stej_t ON stejent = steaent AND steadocno = stejdocno", "  ", 
                  #add-point:browser_fill段sql(stej_t1) name="browser_fill.join.stej_t1"
                  {<point name="browser_fill.join.stej_t1"/>}
                  #end add-point
 
                  "  LEFT JOIN stef_t ON stefent = steaent AND steadocno = stefdocno", "  ", 
                  #add-point:browser_fill段sql(stef_t1) name="browser_fill.join.stef_t1"
                  {<point name="browser_fill.join.stef_t1"/>}
                  #end add-point
 
 
                  "  LEFT JOIN sted_t ON stedent = steaent AND stecdocno = steddocno AND stecseq = stedseq", "  ", 
                  #add-point:browser_fill段sql(sted_t1) name="browser_fill.join.sted_t1"
                  {<point name="browser_fill.join.sted_t1"/>}
                  #end add-point
 
 
                  " ", 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
 
                  " ",
 
 
                                 " LEFT JOIN pmaal_t t1 ON t1.pmaalent="||g_enterprise||" AND t1.pmaal001=t0.stea010 AND t1.pmaal002='"||g_dlang||"' ",
 
               " LEFT JOIN steal_t ON stealent = "||g_enterprise||" AND steadocno = stealdocno AND steal001 = '",g_dlang,"' ",
                  " WHERE t0.steaent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("stea_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.steastus,t0.steadocno,t0.steadocdt,t0.stea000,t0.stea001,t0.stea002, 
          t0.stea003,t0.stea004,t0.stea005,t0.stea006,t0.stea007,t0.stea008,t0.stea009,t0.stea010,t0.stea011, 
          t0.stea012,t0.stea013,t0.stea014,t0.stea015,t0.stea016,t0.stea017,t0.stea018,t0.stea019,t0.stea020, 
          t0.stea021,t0.stea022,t0.stea023,t0.stea024,t0.stea025,t0.stea026,t0.stea027,t0.stea028,t0.stea029, 
          t0.stea030,t0.stea031,t0.stea032,t0.stea033,t0.stea034,t0.stea035,t0.stea036,t0.stea037,t0.stea038, 
          t0.stea039,t0.stea040,t0.stea041,t0.stea042,t0.stea043,t0.stea044,t0.stea045,t0.stea046,t0.stea047, 
          t0.stea048,t0.stea049,t0.steaunit,t0.steasite,t1.pmaal004 ",
                  " FROM stea_t t0",
                  "  ",
                                 " LEFT JOIN pmaal_t t1 ON t1.pmaalent="||g_enterprise||" AND t1.pmaal001=t0.stea010 AND t1.pmaal002='"||g_dlang||"' ",
 
               " LEFT JOIN steal_t ON stealent = "||g_enterprise||" AND steadocno = stealdocno AND steal001 = '",g_dlang,"' ",
                  " WHERE t0.steaent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("stea_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY steadocno ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"stea_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      {<point name="browser_fill.open"/>}
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_steadocno,g_browser[g_cnt].b_steadocdt, 
          g_browser[g_cnt].b_stea000,g_browser[g_cnt].b_stea001,g_browser[g_cnt].b_stea002,g_browser[g_cnt].b_stea003, 
          g_browser[g_cnt].b_stea004,g_browser[g_cnt].b_stea005,g_browser[g_cnt].b_stea006,g_browser[g_cnt].b_stea007, 
          g_browser[g_cnt].b_stea008,g_browser[g_cnt].b_stea009,g_browser[g_cnt].b_stea010,g_browser[g_cnt].b_stea011, 
          g_browser[g_cnt].b_stea012,g_browser[g_cnt].b_stea013,g_browser[g_cnt].b_stea014,g_browser[g_cnt].b_stea015, 
          g_browser[g_cnt].b_stea016,g_browser[g_cnt].b_stea017,g_browser[g_cnt].b_stea018,g_browser[g_cnt].b_stea019, 
          g_browser[g_cnt].b_stea020,g_browser[g_cnt].b_stea021,g_browser[g_cnt].b_stea022,g_browser[g_cnt].b_stea023, 
          g_browser[g_cnt].b_stea024,g_browser[g_cnt].b_stea025,g_browser[g_cnt].b_stea026,g_browser[g_cnt].b_stea027, 
          g_browser[g_cnt].b_stea028,g_browser[g_cnt].b_stea029,g_browser[g_cnt].b_stea030,g_browser[g_cnt].b_stea031, 
          g_browser[g_cnt].b_stea032,g_browser[g_cnt].b_stea033,g_browser[g_cnt].b_stea034,g_browser[g_cnt].b_stea035, 
          g_browser[g_cnt].b_stea036,g_browser[g_cnt].b_stea037,g_browser[g_cnt].b_stea038,g_browser[g_cnt].b_stea039, 
          g_browser[g_cnt].b_stea040,g_browser[g_cnt].b_stea041,g_browser[g_cnt].b_stea042,g_browser[g_cnt].b_stea043, 
          g_browser[g_cnt].b_stea044,g_browser[g_cnt].b_stea045,g_browser[g_cnt].b_stea046,g_browser[g_cnt].b_stea047, 
          g_browser[g_cnt].b_stea048,g_browser[g_cnt].b_stea049,g_browser[g_cnt].b_steaunit,g_browser[g_cnt].b_steasite, 
          g_browser[g_cnt].b_stea010_desc
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         {<point name="browser_fill.reference"/>}
         #end add-point
      
         #遮罩相關處理
         CALL astt401_browser_mask()
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_steadocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION

{</section>}

{<section id="astt401.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION astt401_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   {<point name="ui_headershow.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   {<point name="ui_headershow.define"/>} 
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   {<point name="ui_headershow.pre_function"/>}
   #end add-point
   
   LET g_stea_m.steadocno = g_browser[g_current_idx].b_steadocno   
 
   EXECUTE astt401_master_referesh USING g_stea_m.steadocno INTO g_stea_m.steasite,g_stea_m.steadocdt, 
       g_stea_m.steadocno,g_stea_m.stea000,g_stea_m.stea054,g_stea_m.steaunit,g_stea_m.stea001,g_stea_m.stea002, 
       g_stea_m.stea003,g_stea_m.stea004,g_stea_m.stea009,g_stea_m.steastus,g_stea_m.stea010,g_stea_m.stea005, 
       g_stea_m.stea006,g_stea_m.stea007,g_stea_m.stea008,g_stea_m.stea047,g_stea_m.stea048,g_stea_m.stea044, 
       g_stea_m.stea051,g_stea_m.stea011,g_stea_m.stea012,g_stea_m.stea056,g_stea_m.stea013,g_stea_m.stea014, 
       g_stea_m.stea015,g_stea_m.stea016,g_stea_m.stea045,g_stea_m.stea046,g_stea_m.stea053,g_stea_m.stea029, 
       g_stea_m.stea030,g_stea_m.stea032,g_stea_m.stea033,g_stea_m.stea034,g_stea_m.stea035,g_stea_m.stea036, 
       g_stea_m.stea037,g_stea_m.stea038,g_stea_m.stea050,g_stea_m.stea058,g_stea_m.stea059,g_stea_m.stea039, 
       g_stea_m.stea040,g_stea_m.stea052,g_stea_m.stea028,g_stea_m.stea017,g_stea_m.stea021,g_stea_m.stea024, 
       g_stea_m.stea018,g_stea_m.stea022,g_stea_m.stea025,g_stea_m.stea019,g_stea_m.stea023,g_stea_m.stea026, 
       g_stea_m.stea020,g_stea_m.stea049,g_stea_m.stea057,g_stea_m.stea055,g_stea_m.stea027,g_stea_m.stea031, 
       g_stea_m.stea042,g_stea_m.steaownid,g_stea_m.steaowndp,g_stea_m.steacrtid,g_stea_m.steacrtdp, 
       g_stea_m.steacrtdt,g_stea_m.steamodid,g_stea_m.steamoddt,g_stea_m.steacnfid,g_stea_m.steacnfdt, 
       g_stea_m.steasite_desc,g_stea_m.steaunit_desc,g_stea_m.stea010_desc,g_stea_m.stea006_desc,g_stea_m.stea047_desc, 
       g_stea_m.stea048_desc,g_stea_m.stea044_desc,g_stea_m.stea051_desc,g_stea_m.stea011_desc,g_stea_m.stea012_desc, 
       g_stea_m.stea013_desc,g_stea_m.stea014_desc,g_stea_m.stea015_desc,g_stea_m.stea045_desc,g_stea_m.stea032_desc, 
       g_stea_m.stea035_desc,g_stea_m.stea036_desc,g_stea_m.stea037_desc,g_stea_m.stea038_desc,g_stea_m.steaownid_desc, 
       g_stea_m.steaowndp_desc,g_stea_m.steacrtid_desc,g_stea_m.steacrtdp_desc,g_stea_m.steamodid_desc, 
       g_stea_m.steacnfid_desc
   
   CALL astt401_stea_t_mask()
   CALL astt401_show()
      
END FUNCTION

{</section>}

{<section id="astt401.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION astt401_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   {<point name="ui_detailshow.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   {<point name="ui_detailshow.define"/>} 
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail10",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail11",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail12",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail5",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail6",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail7",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail8",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail9",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION

{</section>}

{<section id="astt401.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION astt401_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   {<point name="ui_browser_refresh.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   {<point name="ui_browser_refresh.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   {<point name="ui_browser_refresh.pre_function"/>}
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_steadocno = g_stea_m.steadocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION

{</section>}

{<section id="astt401.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION astt401_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   {<point name="cs.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   {<point name="cs.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   {<point name="cs.pre_function"/>}
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_stea_m.* TO NULL
   CALL g_steb_d.clear()        
   CALL g_steb10_d.clear() 
   CALL g_steb11_d.clear() 
   CALL g_steb12_d.clear() 
   CALL g_steb2_d.clear() 
   CALL g_steb3_d.clear() 
   CALL g_steb4_d.clear() 
   CALL g_steb5_d.clear() 
   CALL g_steb6_d.clear() 
   CALL g_steb7_d.clear() 
   CALL g_steb8_d.clear() 
   CALL g_steb9_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
   INITIALIZE g_wc2_table4 TO NULL
 
   INITIALIZE g_wc2_table5 TO NULL
 
   INITIALIZE g_wc2_table6 TO NULL
 
   INITIALIZE g_wc2_table7 TO NULL
 
   INITIALIZE g_wc2_table8 TO NULL
 
   INITIALIZE g_wc2_table9 TO NULL
 
   INITIALIZE g_wc2_table10 TO NULL
 
   INITIALIZE g_wc2_table11 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON steasite,steadocdt,steadocno,stea000,stea054,steaunit,stea001,stea002, 
          stea003,stea004,stea009,steastus,stea010,stea005,steal002,steal003,stea006,stea007,stea008, 
          stea047,stea048,stea044,stea051,stea011,stea012,stea056,stea013,stea014,stea015,stea016,stea045, 
          stea046,stea053,stea029,stea030,stea032,stea033,stea033_desc,stea034,stea034_desc,stea035, 
          stea036,stea037,stea038,stea050,stea058,stea059,stea039,stea040,stea052,stea028,stea017,stea021, 
          stea024,stea018,stea022,stea025,stea019,stea023,stea026,stea020,stea049,stea057,stea055,stea027, 
          stea031,stea042,steaownid,steaowndp,steacrtid,steacrtdp,steacrtdt,steamodid,steamoddt,steacnfid, 
          steacnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<steacrtdt>>----
         AFTER FIELD steacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<steamoddt>>----
         AFTER FIELD steamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<steacnfdt>>----
         AFTER FIELD steacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<steapstdt>>----
 
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.steasite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steasite
            #add-point:ON ACTION controlp INFIELD steasite name="construct.c.steasite"
            {<point name="construct.c.steasite" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steasite
            #add-point:BEFORE FIELD steasite name="construct.b.steasite"
            {<point name="construct.b.steasite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steasite
            
            #add-point:AFTER FIELD steasite name="construct.a.steasite"
            {<point name="construct.a.steasite" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steadocdt
            #add-point:BEFORE FIELD steadocdt name="construct.b.steadocdt"
            {<point name="construct.b.steadocdt" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steadocdt
            
            #add-point:AFTER FIELD steadocdt name="construct.a.steadocdt"
            {<point name="construct.a.steadocdt" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.steadocdt
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steadocdt
            #add-point:ON ACTION controlp INFIELD steadocdt name="construct.c.steadocdt"
            {<point name="construct.c.steadocdt" />}
            #END add-point
 
 
         #Ctrlp:construct.c.steadocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steadocno
            #add-point:ON ACTION controlp INFIELD steadocno name="construct.c.steadocno"
            {<point name="construct.c.steadocno" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steadocno
            #add-point:BEFORE FIELD steadocno name="construct.b.steadocno"
            {<point name="construct.b.steadocno" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steadocno
            
            #add-point:AFTER FIELD steadocno name="construct.a.steadocno"
            {<point name="construct.a.steadocno" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea000
            #add-point:BEFORE FIELD stea000 name="construct.b.stea000"
            {<point name="construct.b.stea000" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea000
            
            #add-point:AFTER FIELD stea000 name="construct.a.stea000"
            {<point name="construct.a.stea000" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea000
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea000
            #add-point:ON ACTION controlp INFIELD stea000 name="construct.c.stea000"
            {<point name="construct.c.stea000" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea054
            #add-point:BEFORE FIELD stea054 name="construct.b.stea054"
            {<point name="construct.b.stea054" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea054
            
            #add-point:AFTER FIELD stea054 name="construct.a.stea054"
            {<point name="construct.a.stea054" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea054
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea054
            #add-point:ON ACTION controlp INFIELD stea054 name="construct.c.stea054"
            {<point name="construct.c.stea054" />}
            #END add-point
 
 
         #Ctrlp:construct.c.steaunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steaunit
            #add-point:ON ACTION controlp INFIELD steaunit name="construct.c.steaunit"
            {<point name="construct.c.steaunit" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steaunit
            #add-point:BEFORE FIELD steaunit name="construct.b.steaunit"
            {<point name="construct.b.steaunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steaunit
            
            #add-point:AFTER FIELD steaunit name="construct.a.steaunit"
            {<point name="construct.a.steaunit" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea001
            #add-point:ON ACTION controlp INFIELD stea001 name="construct.c.stea001"
            {<point name="construct.c.stea001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea001
            #add-point:BEFORE FIELD stea001 name="construct.b.stea001"
            {<point name="construct.b.stea001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea001
            
            #add-point:AFTER FIELD stea001 name="construct.a.stea001"
            {<point name="construct.a.stea001" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea002
            #add-point:BEFORE FIELD stea002 name="construct.b.stea002"
            {<point name="construct.b.stea002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea002
            
            #add-point:AFTER FIELD stea002 name="construct.a.stea002"
            {<point name="construct.a.stea002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea002
            #add-point:ON ACTION controlp INFIELD stea002 name="construct.c.stea002"
            {<point name="construct.c.stea002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea003
            #add-point:BEFORE FIELD stea003 name="construct.b.stea003"
            {<point name="construct.b.stea003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea003
            
            #add-point:AFTER FIELD stea003 name="construct.a.stea003"
            {<point name="construct.a.stea003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea003
            #add-point:ON ACTION controlp INFIELD stea003 name="construct.c.stea003"
            {<point name="construct.c.stea003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea004
            #add-point:BEFORE FIELD stea004 name="construct.b.stea004"
            {<point name="construct.b.stea004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea004
            
            #add-point:AFTER FIELD stea004 name="construct.a.stea004"
            {<point name="construct.a.stea004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea004
            #add-point:ON ACTION controlp INFIELD stea004 name="construct.c.stea004"
            {<point name="construct.c.stea004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea009
            #add-point:BEFORE FIELD stea009 name="construct.b.stea009"
            {<point name="construct.b.stea009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea009
            
            #add-point:AFTER FIELD stea009 name="construct.a.stea009"
            {<point name="construct.a.stea009" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea009
            #add-point:ON ACTION controlp INFIELD stea009 name="construct.c.stea009"
            {<point name="construct.c.stea009" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steastus
            #add-point:BEFORE FIELD steastus name="construct.b.steastus"
            {<point name="construct.b.steastus" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steastus
            
            #add-point:AFTER FIELD steastus name="construct.a.steastus"
            {<point name="construct.a.steastus" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.steastus
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steastus
            #add-point:ON ACTION controlp INFIELD steastus name="construct.c.steastus"
            {<point name="construct.c.steastus" />}
            #END add-point
 
 
         #Ctrlp:construct.c.stea010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea010
            #add-point:ON ACTION controlp INFIELD stea010 name="construct.c.stea010"
            {<point name="construct.c.stea010" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea010
            #add-point:BEFORE FIELD stea010 name="construct.b.stea010"
            {<point name="construct.b.stea010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea010
            
            #add-point:AFTER FIELD stea010 name="construct.a.stea010"
            {<point name="construct.a.stea010" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea005
            #add-point:ON ACTION controlp INFIELD stea005 name="construct.c.stea005"
            {<point name="construct.c.stea005" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea005
            #add-point:BEFORE FIELD stea005 name="construct.b.stea005"
            {<point name="construct.b.stea005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea005
            
            #add-point:AFTER FIELD stea005 name="construct.a.stea005"
            {<point name="construct.a.stea005" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steal002
            #add-point:BEFORE FIELD steal002 name="construct.b.steal002"
            {<point name="construct.b.steal002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steal002
            
            #add-point:AFTER FIELD steal002 name="construct.a.steal002"
            {<point name="construct.a.steal002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.steal002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steal002
            #add-point:ON ACTION controlp INFIELD steal002 name="construct.c.steal002"
            {<point name="construct.c.steal002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steal003
            #add-point:BEFORE FIELD steal003 name="construct.b.steal003"
            {<point name="construct.b.steal003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steal003
            
            #add-point:AFTER FIELD steal003 name="construct.a.steal003"
            {<point name="construct.a.steal003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.steal003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steal003
            #add-point:ON ACTION controlp INFIELD steal003 name="construct.c.steal003"
            {<point name="construct.c.steal003" />}
            #END add-point
 
 
         #Ctrlp:construct.c.stea006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea006
            #add-point:ON ACTION controlp INFIELD stea006 name="construct.c.stea006"
            {<point name="construct.c.stea006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea006
            #add-point:BEFORE FIELD stea006 name="construct.b.stea006"
            {<point name="construct.b.stea006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea006
            
            #add-point:AFTER FIELD stea006 name="construct.a.stea006"
            {<point name="construct.a.stea006" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea007
            #add-point:BEFORE FIELD stea007 name="construct.b.stea007"
            {<point name="construct.b.stea007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea007
            
            #add-point:AFTER FIELD stea007 name="construct.a.stea007"
            {<point name="construct.a.stea007" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea007
            #add-point:ON ACTION controlp INFIELD stea007 name="construct.c.stea007"
            {<point name="construct.c.stea007" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea008
            #add-point:BEFORE FIELD stea008 name="construct.b.stea008"
            {<point name="construct.b.stea008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea008
            
            #add-point:AFTER FIELD stea008 name="construct.a.stea008"
            {<point name="construct.a.stea008" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea008
            #add-point:ON ACTION controlp INFIELD stea008 name="construct.c.stea008"
            {<point name="construct.c.stea008" />}
            #END add-point
 
 
         #Ctrlp:construct.c.stea047
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea047
            #add-point:ON ACTION controlp INFIELD stea047 name="construct.c.stea047"
            {<point name="construct.c.stea047" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea047
            #add-point:BEFORE FIELD stea047 name="construct.b.stea047"
            {<point name="construct.b.stea047" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea047
            
            #add-point:AFTER FIELD stea047 name="construct.a.stea047"
            {<point name="construct.a.stea047" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea048
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea048
            #add-point:ON ACTION controlp INFIELD stea048 name="construct.c.stea048"
            {<point name="construct.c.stea048" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea048
            #add-point:BEFORE FIELD stea048 name="construct.b.stea048"
            {<point name="construct.b.stea048" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea048
            
            #add-point:AFTER FIELD stea048 name="construct.a.stea048"
            {<point name="construct.a.stea048" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea044
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea044
            #add-point:ON ACTION controlp INFIELD stea044 name="construct.c.stea044"
            {<point name="construct.c.stea044" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea044
            #add-point:BEFORE FIELD stea044 name="construct.b.stea044"
            {<point name="construct.b.stea044" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea044
            
            #add-point:AFTER FIELD stea044 name="construct.a.stea044"
            {<point name="construct.a.stea044" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea051
            #add-point:BEFORE FIELD stea051 name="construct.b.stea051"
            {<point name="construct.b.stea051" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea051
            
            #add-point:AFTER FIELD stea051 name="construct.a.stea051"
            {<point name="construct.a.stea051" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea051
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea051
            #add-point:ON ACTION controlp INFIELD stea051 name="construct.c.stea051"
            {<point name="construct.c.stea051" />}
            #END add-point
 
 
         #Ctrlp:construct.c.stea011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea011
            #add-point:ON ACTION controlp INFIELD stea011 name="construct.c.stea011"
            {<point name="construct.c.stea011" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea011
            #add-point:BEFORE FIELD stea011 name="construct.b.stea011"
            {<point name="construct.b.stea011" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea011
            
            #add-point:AFTER FIELD stea011 name="construct.a.stea011"
            {<point name="construct.a.stea011" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea012
            #add-point:ON ACTION controlp INFIELD stea012 name="construct.c.stea012"
            {<point name="construct.c.stea012" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea012
            #add-point:BEFORE FIELD stea012 name="construct.b.stea012"
            {<point name="construct.b.stea012" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea012
            
            #add-point:AFTER FIELD stea012 name="construct.a.stea012"
            {<point name="construct.a.stea012" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea056
            #add-point:BEFORE FIELD stea056 name="construct.b.stea056"
            {<point name="construct.b.stea056" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea056
            
            #add-point:AFTER FIELD stea056 name="construct.a.stea056"
            {<point name="construct.a.stea056" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea056
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea056
            #add-point:ON ACTION controlp INFIELD stea056 name="construct.c.stea056"
            {<point name="construct.c.stea056" />}
            #END add-point
 
 
         #Ctrlp:construct.c.stea013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea013
            #add-point:ON ACTION controlp INFIELD stea013 name="construct.c.stea013"
            {<point name="construct.c.stea013" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea013
            #add-point:BEFORE FIELD stea013 name="construct.b.stea013"
            {<point name="construct.b.stea013" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea013
            
            #add-point:AFTER FIELD stea013 name="construct.a.stea013"
            {<point name="construct.a.stea013" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea014
            #add-point:ON ACTION controlp INFIELD stea014 name="construct.c.stea014"
            {<point name="construct.c.stea014" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea014
            #add-point:BEFORE FIELD stea014 name="construct.b.stea014"
            {<point name="construct.b.stea014" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea014
            
            #add-point:AFTER FIELD stea014 name="construct.a.stea014"
            {<point name="construct.a.stea014" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea015
            #add-point:ON ACTION controlp INFIELD stea015 name="construct.c.stea015"
            {<point name="construct.c.stea015" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea015
            #add-point:BEFORE FIELD stea015 name="construct.b.stea015"
            {<point name="construct.b.stea015" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea015
            
            #add-point:AFTER FIELD stea015 name="construct.a.stea015"
            {<point name="construct.a.stea015" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea016
            #add-point:BEFORE FIELD stea016 name="construct.b.stea016"
            {<point name="construct.b.stea016" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea016
            
            #add-point:AFTER FIELD stea016 name="construct.a.stea016"
            {<point name="construct.a.stea016" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea016
            #add-point:ON ACTION controlp INFIELD stea016 name="construct.c.stea016"
            {<point name="construct.c.stea016" />}
            #END add-point
 
 
         #Ctrlp:construct.c.stea045
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea045
            #add-point:ON ACTION controlp INFIELD stea045 name="construct.c.stea045"
            {<point name="construct.c.stea045" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea045
            #add-point:BEFORE FIELD stea045 name="construct.b.stea045"
            {<point name="construct.b.stea045" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea045
            
            #add-point:AFTER FIELD stea045 name="construct.a.stea045"
            {<point name="construct.a.stea045" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea046
            #add-point:BEFORE FIELD stea046 name="construct.b.stea046"
            {<point name="construct.b.stea046" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea046
            
            #add-point:AFTER FIELD stea046 name="construct.a.stea046"
            {<point name="construct.a.stea046" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea046
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea046
            #add-point:ON ACTION controlp INFIELD stea046 name="construct.c.stea046"
            {<point name="construct.c.stea046" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea053
            #add-point:BEFORE FIELD stea053 name="construct.b.stea053"
            {<point name="construct.b.stea053" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea053
            
            #add-point:AFTER FIELD stea053 name="construct.a.stea053"
            {<point name="construct.a.stea053" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea053
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea053
            #add-point:ON ACTION controlp INFIELD stea053 name="construct.c.stea053"
            {<point name="construct.c.stea053" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea029
            #add-point:BEFORE FIELD stea029 name="construct.b.stea029"
            {<point name="construct.b.stea029" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea029
            
            #add-point:AFTER FIELD stea029 name="construct.a.stea029"
            {<point name="construct.a.stea029" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea029
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea029
            #add-point:ON ACTION controlp INFIELD stea029 name="construct.c.stea029"
            {<point name="construct.c.stea029" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea030
            #add-point:BEFORE FIELD stea030 name="construct.b.stea030"
            {<point name="construct.b.stea030" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea030
            
            #add-point:AFTER FIELD stea030 name="construct.a.stea030"
            {<point name="construct.a.stea030" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea030
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea030
            #add-point:ON ACTION controlp INFIELD stea030 name="construct.c.stea030"
            {<point name="construct.c.stea030" />}
            #END add-point
 
 
         #Ctrlp:construct.c.stea032
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea032
            #add-point:ON ACTION controlp INFIELD stea032 name="construct.c.stea032"
            {<point name="construct.c.stea032" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea032
            #add-point:BEFORE FIELD stea032 name="construct.b.stea032"
            {<point name="construct.b.stea032" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea032
            
            #add-point:AFTER FIELD stea032 name="construct.a.stea032"
            {<point name="construct.a.stea032" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea033
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea033
            #add-point:ON ACTION controlp INFIELD stea033 name="construct.c.stea033"
            {<point name="construct.c.stea033" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea033
            #add-point:BEFORE FIELD stea033 name="construct.b.stea033"
            {<point name="construct.b.stea033" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea033
            
            #add-point:AFTER FIELD stea033 name="construct.a.stea033"
            {<point name="construct.a.stea033" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea033_desc
            #add-point:BEFORE FIELD stea033_desc name="construct.b.stea033_desc"
            {<point name="construct.b.stea033_desc" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea033_desc
            
            #add-point:AFTER FIELD stea033_desc name="construct.a.stea033_desc"
            {<point name="construct.a.stea033_desc" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea033_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea033_desc
            #add-point:ON ACTION controlp INFIELD stea033_desc name="construct.c.stea033_desc"
            {<point name="construct.c.stea033_desc" />}
            #END add-point
 
 
         #Ctrlp:construct.c.stea034
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea034
            #add-point:ON ACTION controlp INFIELD stea034 name="construct.c.stea034"
            {<point name="construct.c.stea034" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea034
            #add-point:BEFORE FIELD stea034 name="construct.b.stea034"
            {<point name="construct.b.stea034" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea034
            
            #add-point:AFTER FIELD stea034 name="construct.a.stea034"
            {<point name="construct.a.stea034" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea034_desc
            #add-point:BEFORE FIELD stea034_desc name="construct.b.stea034_desc"
            {<point name="construct.b.stea034_desc" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea034_desc
            
            #add-point:AFTER FIELD stea034_desc name="construct.a.stea034_desc"
            {<point name="construct.a.stea034_desc" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea034_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea034_desc
            #add-point:ON ACTION controlp INFIELD stea034_desc name="construct.c.stea034_desc"
            {<point name="construct.c.stea034_desc" />}
            #END add-point
 
 
         #Ctrlp:construct.c.stea035
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea035
            #add-point:ON ACTION controlp INFIELD stea035 name="construct.c.stea035"
            {<point name="construct.c.stea035" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea035
            #add-point:BEFORE FIELD stea035 name="construct.b.stea035"
            {<point name="construct.b.stea035" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea035
            
            #add-point:AFTER FIELD stea035 name="construct.a.stea035"
            {<point name="construct.a.stea035" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea036
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea036
            #add-point:ON ACTION controlp INFIELD stea036 name="construct.c.stea036"
            {<point name="construct.c.stea036" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea036
            #add-point:BEFORE FIELD stea036 name="construct.b.stea036"
            {<point name="construct.b.stea036" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea036
            
            #add-point:AFTER FIELD stea036 name="construct.a.stea036"
            {<point name="construct.a.stea036" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea037
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea037
            #add-point:ON ACTION controlp INFIELD stea037 name="construct.c.stea037"
            {<point name="construct.c.stea037" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea037
            #add-point:BEFORE FIELD stea037 name="construct.b.stea037"
            {<point name="construct.b.stea037" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea037
            
            #add-point:AFTER FIELD stea037 name="construct.a.stea037"
            {<point name="construct.a.stea037" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea038
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea038
            #add-point:ON ACTION controlp INFIELD stea038 name="construct.c.stea038"
            {<point name="construct.c.stea038" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea038
            #add-point:BEFORE FIELD stea038 name="construct.b.stea038"
            {<point name="construct.b.stea038" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea038
            
            #add-point:AFTER FIELD stea038 name="construct.a.stea038"
            {<point name="construct.a.stea038" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea050
            #add-point:BEFORE FIELD stea050 name="construct.b.stea050"
            {<point name="construct.b.stea050" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea050
            
            #add-point:AFTER FIELD stea050 name="construct.a.stea050"
            {<point name="construct.a.stea050" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea050
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea050
            #add-point:ON ACTION controlp INFIELD stea050 name="construct.c.stea050"
            {<point name="construct.c.stea050" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea058
            #add-point:BEFORE FIELD stea058 name="construct.b.stea058"
            {<point name="construct.b.stea058" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea058
            
            #add-point:AFTER FIELD stea058 name="construct.a.stea058"
            {<point name="construct.a.stea058" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea058
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea058
            #add-point:ON ACTION controlp INFIELD stea058 name="construct.c.stea058"
            {<point name="construct.c.stea058" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea059
            #add-point:BEFORE FIELD stea059 name="construct.b.stea059"
            {<point name="construct.b.stea059" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea059
            
            #add-point:AFTER FIELD stea059 name="construct.a.stea059"
            {<point name="construct.a.stea059" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea059
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea059
            #add-point:ON ACTION controlp INFIELD stea059 name="construct.c.stea059"
            {<point name="construct.c.stea059" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea039
            #add-point:BEFORE FIELD stea039 name="construct.b.stea039"
            {<point name="construct.b.stea039" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea039
            
            #add-point:AFTER FIELD stea039 name="construct.a.stea039"
            {<point name="construct.a.stea039" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea039
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea039
            #add-point:ON ACTION controlp INFIELD stea039 name="construct.c.stea039"
            {<point name="construct.c.stea039" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea040
            #add-point:BEFORE FIELD stea040 name="construct.b.stea040"
            {<point name="construct.b.stea040" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea040
            
            #add-point:AFTER FIELD stea040 name="construct.a.stea040"
            {<point name="construct.a.stea040" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea040
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea040
            #add-point:ON ACTION controlp INFIELD stea040 name="construct.c.stea040"
            {<point name="construct.c.stea040" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea052
            #add-point:BEFORE FIELD stea052 name="construct.b.stea052"
            {<point name="construct.b.stea052" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea052
            
            #add-point:AFTER FIELD stea052 name="construct.a.stea052"
            {<point name="construct.a.stea052" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea052
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea052
            #add-point:ON ACTION controlp INFIELD stea052 name="construct.c.stea052"
            {<point name="construct.c.stea052" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea028
            #add-point:BEFORE FIELD stea028 name="construct.b.stea028"
            {<point name="construct.b.stea028" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea028
            
            #add-point:AFTER FIELD stea028 name="construct.a.stea028"
            {<point name="construct.a.stea028" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea028
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea028
            #add-point:ON ACTION controlp INFIELD stea028 name="construct.c.stea028"
            {<point name="construct.c.stea028" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea017
            #add-point:BEFORE FIELD stea017 name="construct.b.stea017"
            {<point name="construct.b.stea017" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea017
            
            #add-point:AFTER FIELD stea017 name="construct.a.stea017"
            {<point name="construct.a.stea017" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea017
            #add-point:ON ACTION controlp INFIELD stea017 name="construct.c.stea017"
            {<point name="construct.c.stea017" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea021
            #add-point:BEFORE FIELD stea021 name="construct.b.stea021"
            {<point name="construct.b.stea021" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea021
            
            #add-point:AFTER FIELD stea021 name="construct.a.stea021"
            {<point name="construct.a.stea021" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea021
            #add-point:ON ACTION controlp INFIELD stea021 name="construct.c.stea021"
            {<point name="construct.c.stea021" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea024
            #add-point:BEFORE FIELD stea024 name="construct.b.stea024"
            {<point name="construct.b.stea024" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea024
            
            #add-point:AFTER FIELD stea024 name="construct.a.stea024"
            {<point name="construct.a.stea024" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea024
            #add-point:ON ACTION controlp INFIELD stea024 name="construct.c.stea024"
            {<point name="construct.c.stea024" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea018
            #add-point:BEFORE FIELD stea018 name="construct.b.stea018"
            {<point name="construct.b.stea018" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea018
            
            #add-point:AFTER FIELD stea018 name="construct.a.stea018"
            {<point name="construct.a.stea018" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea018
            #add-point:ON ACTION controlp INFIELD stea018 name="construct.c.stea018"
            {<point name="construct.c.stea018" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea022
            #add-point:BEFORE FIELD stea022 name="construct.b.stea022"
            {<point name="construct.b.stea022" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea022
            
            #add-point:AFTER FIELD stea022 name="construct.a.stea022"
            {<point name="construct.a.stea022" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea022
            #add-point:ON ACTION controlp INFIELD stea022 name="construct.c.stea022"
            {<point name="construct.c.stea022" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea025
            #add-point:BEFORE FIELD stea025 name="construct.b.stea025"
            {<point name="construct.b.stea025" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea025
            
            #add-point:AFTER FIELD stea025 name="construct.a.stea025"
            {<point name="construct.a.stea025" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea025
            #add-point:ON ACTION controlp INFIELD stea025 name="construct.c.stea025"
            {<point name="construct.c.stea025" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea019
            #add-point:BEFORE FIELD stea019 name="construct.b.stea019"
            {<point name="construct.b.stea019" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea019
            
            #add-point:AFTER FIELD stea019 name="construct.a.stea019"
            {<point name="construct.a.stea019" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea019
            #add-point:ON ACTION controlp INFIELD stea019 name="construct.c.stea019"
            {<point name="construct.c.stea019" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea023
            #add-point:BEFORE FIELD stea023 name="construct.b.stea023"
            {<point name="construct.b.stea023" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea023
            
            #add-point:AFTER FIELD stea023 name="construct.a.stea023"
            {<point name="construct.a.stea023" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea023
            #add-point:ON ACTION controlp INFIELD stea023 name="construct.c.stea023"
            {<point name="construct.c.stea023" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea026
            #add-point:BEFORE FIELD stea026 name="construct.b.stea026"
            {<point name="construct.b.stea026" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea026
            
            #add-point:AFTER FIELD stea026 name="construct.a.stea026"
            {<point name="construct.a.stea026" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea026
            #add-point:ON ACTION controlp INFIELD stea026 name="construct.c.stea026"
            {<point name="construct.c.stea026" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea020
            #add-point:BEFORE FIELD stea020 name="construct.b.stea020"
            {<point name="construct.b.stea020" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea020
            
            #add-point:AFTER FIELD stea020 name="construct.a.stea020"
            {<point name="construct.a.stea020" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea020
            #add-point:ON ACTION controlp INFIELD stea020 name="construct.c.stea020"
            {<point name="construct.c.stea020" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea049
            #add-point:BEFORE FIELD stea049 name="construct.b.stea049"
            {<point name="construct.b.stea049" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea049
            
            #add-point:AFTER FIELD stea049 name="construct.a.stea049"
            {<point name="construct.a.stea049" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea049
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea049
            #add-point:ON ACTION controlp INFIELD stea049 name="construct.c.stea049"
            {<point name="construct.c.stea049" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea057
            #add-point:BEFORE FIELD stea057 name="construct.b.stea057"
            {<point name="construct.b.stea057" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea057
            
            #add-point:AFTER FIELD stea057 name="construct.a.stea057"
            {<point name="construct.a.stea057" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea057
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea057
            #add-point:ON ACTION controlp INFIELD stea057 name="construct.c.stea057"
            {<point name="construct.c.stea057" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea055
            #add-point:BEFORE FIELD stea055 name="construct.b.stea055"
            {<point name="construct.b.stea055" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea055
            
            #add-point:AFTER FIELD stea055 name="construct.a.stea055"
            {<point name="construct.a.stea055" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea055
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea055
            #add-point:ON ACTION controlp INFIELD stea055 name="construct.c.stea055"
            {<point name="construct.c.stea055" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea027
            #add-point:BEFORE FIELD stea027 name="construct.b.stea027"
            {<point name="construct.b.stea027" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea027
            
            #add-point:AFTER FIELD stea027 name="construct.a.stea027"
            {<point name="construct.a.stea027" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea027
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea027
            #add-point:ON ACTION controlp INFIELD stea027 name="construct.c.stea027"
            {<point name="construct.c.stea027" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea031
            #add-point:BEFORE FIELD stea031 name="construct.b.stea031"
            {<point name="construct.b.stea031" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea031
            
            #add-point:AFTER FIELD stea031 name="construct.a.stea031"
            {<point name="construct.a.stea031" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea031
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea031
            #add-point:ON ACTION controlp INFIELD stea031 name="construct.c.stea031"
            {<point name="construct.c.stea031" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea042
            #add-point:BEFORE FIELD stea042 name="construct.b.stea042"
            {<point name="construct.b.stea042" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea042
            
            #add-point:AFTER FIELD stea042 name="construct.a.stea042"
            {<point name="construct.a.stea042" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.stea042
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea042
            #add-point:ON ACTION controlp INFIELD stea042 name="construct.c.stea042"
            {<point name="construct.c.stea042" />}
            #END add-point
 
 
         #Ctrlp:construct.c.steaownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steaownid
            #add-point:ON ACTION controlp INFIELD steaownid name="construct.c.steaownid"
            {<point name="construct.c.steaownid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steaownid
            #add-point:BEFORE FIELD steaownid name="construct.b.steaownid"
            {<point name="construct.b.steaownid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steaownid
            
            #add-point:AFTER FIELD steaownid name="construct.a.steaownid"
            {<point name="construct.a.steaownid" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.steaowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steaowndp
            #add-point:ON ACTION controlp INFIELD steaowndp name="construct.c.steaowndp"
            {<point name="construct.c.steaowndp" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steaowndp
            #add-point:BEFORE FIELD steaowndp name="construct.b.steaowndp"
            {<point name="construct.b.steaowndp" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steaowndp
            
            #add-point:AFTER FIELD steaowndp name="construct.a.steaowndp"
            {<point name="construct.a.steaowndp" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.steacrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steacrtid
            #add-point:ON ACTION controlp INFIELD steacrtid name="construct.c.steacrtid"
            {<point name="construct.c.steacrtid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steacrtid
            #add-point:BEFORE FIELD steacrtid name="construct.b.steacrtid"
            {<point name="construct.b.steacrtid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steacrtid
            
            #add-point:AFTER FIELD steacrtid name="construct.a.steacrtid"
            {<point name="construct.a.steacrtid" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.steacrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steacrtdp
            #add-point:ON ACTION controlp INFIELD steacrtdp name="construct.c.steacrtdp"
            {<point name="construct.c.steacrtdp" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steacrtdp
            #add-point:BEFORE FIELD steacrtdp name="construct.b.steacrtdp"
            {<point name="construct.b.steacrtdp" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steacrtdp
            
            #add-point:AFTER FIELD steacrtdp name="construct.a.steacrtdp"
            {<point name="construct.a.steacrtdp" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steacrtdt
            #add-point:BEFORE FIELD steacrtdt name="construct.b.steacrtdt"
            {<point name="construct.b.steacrtdt" />}
            #END add-point
 
 
         #Ctrlp:construct.c.steamodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steamodid
            #add-point:ON ACTION controlp INFIELD steamodid name="construct.c.steamodid"
            {<point name="construct.c.steamodid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steamodid
            #add-point:BEFORE FIELD steamodid name="construct.b.steamodid"
            {<point name="construct.b.steamodid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steamodid
            
            #add-point:AFTER FIELD steamodid name="construct.a.steamodid"
            {<point name="construct.a.steamodid" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steamoddt
            #add-point:BEFORE FIELD steamoddt name="construct.b.steamoddt"
            {<point name="construct.b.steamoddt" />}
            #END add-point
 
 
         #Ctrlp:construct.c.steacnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steacnfid
            #add-point:ON ACTION controlp INFIELD steacnfid name="construct.c.steacnfid"
            {<point name="construct.c.steacnfid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steacnfid
            #add-point:BEFORE FIELD steacnfid name="construct.b.steacnfid"
            {<point name="construct.b.steacnfid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steacnfid
            
            #add-point:AFTER FIELD steacnfid name="construct.a.steacnfid"
            {<point name="construct.a.steacnfid" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steacnfdt
            #add-point:BEFORE FIELD steacnfdt name="construct.b.steacnfdt"
            {<point name="construct.b.steacnfdt" />}
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON stebseq,steb001,steb002,steb018,steb019,steb003,steb004,steb005,steb006, 
          steb007,steb020,steb008,steb009,steb010,steb011,steb012,steb013,steb014,steb026,steb015,steb016, 
          steb017,steb021,steb022,steb023,steb024,steb025,stebsite,stebunit
           FROM s_detail1[1].stebseq,s_detail1[1].steb001,s_detail1[1].steb002,s_detail1[1].steb018, 
               s_detail1[1].steb019,s_detail1[1].steb003,s_detail1[1].steb004,s_detail1[1].steb005,s_detail1[1].steb006, 
               s_detail1[1].steb007,s_detail1[1].steb020,s_detail1[1].steb008,s_detail1[1].steb009,s_detail1[1].steb010, 
               s_detail1[1].steb011,s_detail1[1].steb012,s_detail1[1].steb013,s_detail1[1].steb014,s_detail1[1].steb026, 
               s_detail1[1].steb015,s_detail1[1].steb016,s_detail1[1].steb017,s_detail1[1].steb021,s_detail1[1].steb022, 
               s_detail1[1].steb023,s_detail1[1].steb024,s_detail1[1].steb025,s_detail1[1].stebsite, 
               s_detail1[1].stebunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stebseq
            #add-point:BEFORE FIELD stebseq name="construct.b.page1.stebseq"
            {<point name="construct.b.page1.stebseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stebseq
            
            #add-point:AFTER FIELD stebseq name="construct.a.page1.stebseq"
            {<point name="construct.a.page1.stebseq" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stebseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stebseq
            #add-point:ON ACTION controlp INFIELD stebseq name="construct.c.page1.stebseq"
            {<point name="construct.c.page1.stebseq" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb001
            #add-point:BEFORE FIELD steb001 name="construct.b.page1.steb001"
            {<point name="construct.b.page1.steb001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb001
            
            #add-point:AFTER FIELD steb001 name="construct.a.page1.steb001"
            {<point name="construct.a.page1.steb001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.steb001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb001
            #add-point:ON ACTION controlp INFIELD steb001 name="construct.c.page1.steb001"
            {<point name="construct.c.page1.steb001" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page1.steb002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb002
            #add-point:ON ACTION controlp INFIELD steb002 name="construct.c.page1.steb002"
            {<point name="construct.c.page1.steb002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb002
            #add-point:BEFORE FIELD steb002 name="construct.b.page1.steb002"
            {<point name="construct.b.page1.steb002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb002
            
            #add-point:AFTER FIELD steb002 name="construct.a.page1.steb002"
            {<point name="construct.a.page1.steb002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb018
            #add-point:BEFORE FIELD steb018 name="construct.b.page1.steb018"
            {<point name="construct.b.page1.steb018" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb018
            
            #add-point:AFTER FIELD steb018 name="construct.a.page1.steb018"
            {<point name="construct.a.page1.steb018" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.steb018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb018
            #add-point:ON ACTION controlp INFIELD steb018 name="construct.c.page1.steb018"
            {<point name="construct.c.page1.steb018" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb019
            #add-point:BEFORE FIELD steb019 name="construct.b.page1.steb019"
            {<point name="construct.b.page1.steb019" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb019
            
            #add-point:AFTER FIELD steb019 name="construct.a.page1.steb019"
            {<point name="construct.a.page1.steb019" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.steb019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb019
            #add-point:ON ACTION controlp INFIELD steb019 name="construct.c.page1.steb019"
            {<point name="construct.c.page1.steb019" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb003
            #add-point:BEFORE FIELD steb003 name="construct.b.page1.steb003"
            {<point name="construct.b.page1.steb003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb003
            
            #add-point:AFTER FIELD steb003 name="construct.a.page1.steb003"
            {<point name="construct.a.page1.steb003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.steb003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb003
            #add-point:ON ACTION controlp INFIELD steb003 name="construct.c.page1.steb003"
            {<point name="construct.c.page1.steb003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb004
            #add-point:BEFORE FIELD steb004 name="construct.b.page1.steb004"
            {<point name="construct.b.page1.steb004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb004
            
            #add-point:AFTER FIELD steb004 name="construct.a.page1.steb004"
            {<point name="construct.a.page1.steb004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.steb004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb004
            #add-point:ON ACTION controlp INFIELD steb004 name="construct.c.page1.steb004"
            {<point name="construct.c.page1.steb004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb005
            #add-point:BEFORE FIELD steb005 name="construct.b.page1.steb005"
            {<point name="construct.b.page1.steb005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb005
            
            #add-point:AFTER FIELD steb005 name="construct.a.page1.steb005"
            {<point name="construct.a.page1.steb005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.steb005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb005
            #add-point:ON ACTION controlp INFIELD steb005 name="construct.c.page1.steb005"
            {<point name="construct.c.page1.steb005" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb006
            #add-point:BEFORE FIELD steb006 name="construct.b.page1.steb006"
            {<point name="construct.b.page1.steb006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb006
            
            #add-point:AFTER FIELD steb006 name="construct.a.page1.steb006"
            {<point name="construct.a.page1.steb006" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.steb006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb006
            #add-point:ON ACTION controlp INFIELD steb006 name="construct.c.page1.steb006"
            {<point name="construct.c.page1.steb006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb007
            #add-point:BEFORE FIELD steb007 name="construct.b.page1.steb007"
            {<point name="construct.b.page1.steb007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb007
            
            #add-point:AFTER FIELD steb007 name="construct.a.page1.steb007"
            {<point name="construct.a.page1.steb007" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.steb007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb007
            #add-point:ON ACTION controlp INFIELD steb007 name="construct.c.page1.steb007"
            {<point name="construct.c.page1.steb007" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb020
            #add-point:BEFORE FIELD steb020 name="construct.b.page1.steb020"
            {<point name="construct.b.page1.steb020" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb020
            
            #add-point:AFTER FIELD steb020 name="construct.a.page1.steb020"
            {<point name="construct.a.page1.steb020" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.steb020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb020
            #add-point:ON ACTION controlp INFIELD steb020 name="construct.c.page1.steb020"
            {<point name="construct.c.page1.steb020" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page1.steb008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb008
            #add-point:ON ACTION controlp INFIELD steb008 name="construct.c.page1.steb008"
            {<point name="construct.c.page1.steb008" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb008
            #add-point:BEFORE FIELD steb008 name="construct.b.page1.steb008"
            {<point name="construct.b.page1.steb008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb008
            
            #add-point:AFTER FIELD steb008 name="construct.a.page1.steb008"
            {<point name="construct.a.page1.steb008" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.steb009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb009
            #add-point:ON ACTION controlp INFIELD steb009 name="construct.c.page1.steb009"
            {<point name="construct.c.page1.steb009" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb009
            #add-point:BEFORE FIELD steb009 name="construct.b.page1.steb009"
            {<point name="construct.b.page1.steb009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb009
            
            #add-point:AFTER FIELD steb009 name="construct.a.page1.steb009"
            {<point name="construct.a.page1.steb009" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb010
            #add-point:BEFORE FIELD steb010 name="construct.b.page1.steb010"
            {<point name="construct.b.page1.steb010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb010
            
            #add-point:AFTER FIELD steb010 name="construct.a.page1.steb010"
            {<point name="construct.a.page1.steb010" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.steb010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb010
            #add-point:ON ACTION controlp INFIELD steb010 name="construct.c.page1.steb010"
            {<point name="construct.c.page1.steb010" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb011
            #add-point:BEFORE FIELD steb011 name="construct.b.page1.steb011"
            {<point name="construct.b.page1.steb011" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb011
            
            #add-point:AFTER FIELD steb011 name="construct.a.page1.steb011"
            {<point name="construct.a.page1.steb011" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.steb011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb011
            #add-point:ON ACTION controlp INFIELD steb011 name="construct.c.page1.steb011"
            {<point name="construct.c.page1.steb011" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb012
            #add-point:BEFORE FIELD steb012 name="construct.b.page1.steb012"
            {<point name="construct.b.page1.steb012" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb012
            
            #add-point:AFTER FIELD steb012 name="construct.a.page1.steb012"
            {<point name="construct.a.page1.steb012" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.steb012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb012
            #add-point:ON ACTION controlp INFIELD steb012 name="construct.c.page1.steb012"
            {<point name="construct.c.page1.steb012" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb013
            #add-point:BEFORE FIELD steb013 name="construct.b.page1.steb013"
            {<point name="construct.b.page1.steb013" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb013
            
            #add-point:AFTER FIELD steb013 name="construct.a.page1.steb013"
            {<point name="construct.a.page1.steb013" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.steb013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb013
            #add-point:ON ACTION controlp INFIELD steb013 name="construct.c.page1.steb013"
            {<point name="construct.c.page1.steb013" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb014
            #add-point:BEFORE FIELD steb014 name="construct.b.page1.steb014"
            {<point name="construct.b.page1.steb014" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb014
            
            #add-point:AFTER FIELD steb014 name="construct.a.page1.steb014"
            {<point name="construct.a.page1.steb014" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.steb014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb014
            #add-point:ON ACTION controlp INFIELD steb014 name="construct.c.page1.steb014"
            {<point name="construct.c.page1.steb014" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb026
            #add-point:BEFORE FIELD steb026 name="construct.b.page1.steb026"
            {<point name="construct.b.page1.steb026" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb026
            
            #add-point:AFTER FIELD steb026 name="construct.a.page1.steb026"
            {<point name="construct.a.page1.steb026" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.steb026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb026
            #add-point:ON ACTION controlp INFIELD steb026 name="construct.c.page1.steb026"
            {<point name="construct.c.page1.steb026" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb015
            #add-point:BEFORE FIELD steb015 name="construct.b.page1.steb015"
            {<point name="construct.b.page1.steb015" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb015
            
            #add-point:AFTER FIELD steb015 name="construct.a.page1.steb015"
            {<point name="construct.a.page1.steb015" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.steb015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb015
            #add-point:ON ACTION controlp INFIELD steb015 name="construct.c.page1.steb015"
            {<point name="construct.c.page1.steb015" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb016
            #add-point:BEFORE FIELD steb016 name="construct.b.page1.steb016"
            {<point name="construct.b.page1.steb016" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb016
            
            #add-point:AFTER FIELD steb016 name="construct.a.page1.steb016"
            {<point name="construct.a.page1.steb016" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.steb016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb016
            #add-point:ON ACTION controlp INFIELD steb016 name="construct.c.page1.steb016"
            {<point name="construct.c.page1.steb016" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb017
            #add-point:BEFORE FIELD steb017 name="construct.b.page1.steb017"
            {<point name="construct.b.page1.steb017" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb017
            
            #add-point:AFTER FIELD steb017 name="construct.a.page1.steb017"
            {<point name="construct.a.page1.steb017" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.steb017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb017
            #add-point:ON ACTION controlp INFIELD steb017 name="construct.c.page1.steb017"
            {<point name="construct.c.page1.steb017" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb021
            #add-point:BEFORE FIELD steb021 name="construct.b.page1.steb021"
            {<point name="construct.b.page1.steb021" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb021
            
            #add-point:AFTER FIELD steb021 name="construct.a.page1.steb021"
            {<point name="construct.a.page1.steb021" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.steb021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb021
            #add-point:ON ACTION controlp INFIELD steb021 name="construct.c.page1.steb021"
            {<point name="construct.c.page1.steb021" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb022
            #add-point:BEFORE FIELD steb022 name="construct.b.page1.steb022"
            {<point name="construct.b.page1.steb022" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb022
            
            #add-point:AFTER FIELD steb022 name="construct.a.page1.steb022"
            {<point name="construct.a.page1.steb022" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.steb022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb022
            #add-point:ON ACTION controlp INFIELD steb022 name="construct.c.page1.steb022"
            {<point name="construct.c.page1.steb022" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb023
            #add-point:BEFORE FIELD steb023 name="construct.b.page1.steb023"
            {<point name="construct.b.page1.steb023" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb023
            
            #add-point:AFTER FIELD steb023 name="construct.a.page1.steb023"
            {<point name="construct.a.page1.steb023" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.steb023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb023
            #add-point:ON ACTION controlp INFIELD steb023 name="construct.c.page1.steb023"
            {<point name="construct.c.page1.steb023" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page1.steb024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb024
            #add-point:ON ACTION controlp INFIELD steb024 name="construct.c.page1.steb024"
            {<point name="construct.c.page1.steb024" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb024
            #add-point:BEFORE FIELD steb024 name="construct.b.page1.steb024"
            {<point name="construct.b.page1.steb024" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb024
            
            #add-point:AFTER FIELD steb024 name="construct.a.page1.steb024"
            {<point name="construct.a.page1.steb024" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb025
            #add-point:BEFORE FIELD steb025 name="construct.b.page1.steb025"
            {<point name="construct.b.page1.steb025" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb025
            
            #add-point:AFTER FIELD steb025 name="construct.a.page1.steb025"
            {<point name="construct.a.page1.steb025" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.steb025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb025
            #add-point:ON ACTION controlp INFIELD steb025 name="construct.c.page1.steb025"
            {<point name="construct.c.page1.steb025" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stebsite
            #add-point:BEFORE FIELD stebsite name="construct.b.page1.stebsite"
            {<point name="construct.b.page1.stebsite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stebsite
            
            #add-point:AFTER FIELD stebsite name="construct.a.page1.stebsite"
            {<point name="construct.a.page1.stebsite" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stebsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stebsite
            #add-point:ON ACTION controlp INFIELD stebsite name="construct.c.page1.stebsite"
            {<point name="construct.c.page1.stebsite" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stebunit
            #add-point:BEFORE FIELD stebunit name="construct.b.page1.stebunit"
            {<point name="construct.b.page1.stebunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stebunit
            
            #add-point:AFTER FIELD stebunit name="construct.a.page1.stebunit"
            {<point name="construct.a.page1.stebunit" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stebunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stebunit
            #add-point:ON ACTION controlp INFIELD stebunit name="construct.c.page1.stebunit"
            {<point name="construct.c.page1.stebunit" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON steksite,stekunit,stek001,stekseq,stek002,stek020,stek021,stek003,stek004, 
          stek018,stek019,stek005,stek006,stek007,stek008,stek009,stek010,stek011,stek012,stek013,stek014, 
          stekacti,stek015,stek016,stek017,stek022,stek023,stek024,stek025,stek026
           FROM s_detail10[1].steksite,s_detail10[1].stekunit,s_detail10[1].stek001,s_detail10[1].stekseq, 
               s_detail10[1].stek002,s_detail10[1].stek020,s_detail10[1].stek021,s_detail10[1].stek003, 
               s_detail10[1].stek004,s_detail10[1].stek018,s_detail10[1].stek019,s_detail10[1].stek005, 
               s_detail10[1].stek006,s_detail10[1].stek007,s_detail10[1].stek008,s_detail10[1].stek009, 
               s_detail10[1].stek010,s_detail10[1].stek011,s_detail10[1].stek012,s_detail10[1].stek013, 
               s_detail10[1].stek014,s_detail10[1].stekacti,s_detail10[1].stek015,s_detail10[1].stek016, 
               s_detail10[1].stek017,s_detail10[1].stek022,s_detail10[1].stek023,s_detail10[1].stek024, 
               s_detail10[1].stek025,s_detail10[1].stek026
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body2.before_construct"
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steksite
            #add-point:BEFORE FIELD steksite name="construct.b.page10.steksite"
            {<point name="construct.b.page10.steksite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steksite
            
            #add-point:AFTER FIELD steksite name="construct.a.page10.steksite"
            {<point name="construct.a.page10.steksite" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.steksite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steksite
            #add-point:ON ACTION controlp INFIELD steksite name="construct.c.page10.steksite"
            {<point name="construct.c.page10.steksite" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stekunit
            #add-point:BEFORE FIELD stekunit name="construct.b.page10.stekunit"
            {<point name="construct.b.page10.stekunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stekunit
            
            #add-point:AFTER FIELD stekunit name="construct.a.page10.stekunit"
            {<point name="construct.a.page10.stekunit" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stekunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stekunit
            #add-point:ON ACTION controlp INFIELD stekunit name="construct.c.page10.stekunit"
            {<point name="construct.c.page10.stekunit" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek001
            #add-point:BEFORE FIELD stek001 name="construct.b.page10.stek001"
            {<point name="construct.b.page10.stek001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek001
            
            #add-point:AFTER FIELD stek001 name="construct.a.page10.stek001"
            {<point name="construct.a.page10.stek001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stek001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek001
            #add-point:ON ACTION controlp INFIELD stek001 name="construct.c.page10.stek001"
            {<point name="construct.c.page10.stek001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stekseq
            #add-point:BEFORE FIELD stekseq name="construct.b.page10.stekseq"
            {<point name="construct.b.page10.stekseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stekseq
            
            #add-point:AFTER FIELD stekseq name="construct.a.page10.stekseq"
            {<point name="construct.a.page10.stekseq" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stekseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stekseq
            #add-point:ON ACTION controlp INFIELD stekseq name="construct.c.page10.stekseq"
            {<point name="construct.c.page10.stekseq" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page10.stek002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek002
            #add-point:ON ACTION controlp INFIELD stek002 name="construct.c.page10.stek002"
            {<point name="construct.c.page10.stek002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek002
            #add-point:BEFORE FIELD stek002 name="construct.b.page10.stek002"
            {<point name="construct.b.page10.stek002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek002
            
            #add-point:AFTER FIELD stek002 name="construct.a.page10.stek002"
            {<point name="construct.a.page10.stek002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek020
            #add-point:BEFORE FIELD stek020 name="construct.b.page10.stek020"
            {<point name="construct.b.page10.stek020" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek020
            
            #add-point:AFTER FIELD stek020 name="construct.a.page10.stek020"
            {<point name="construct.a.page10.stek020" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stek020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek020
            #add-point:ON ACTION controlp INFIELD stek020 name="construct.c.page10.stek020"
            {<point name="construct.c.page10.stek020" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek021
            #add-point:BEFORE FIELD stek021 name="construct.b.page10.stek021"
            {<point name="construct.b.page10.stek021" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek021
            
            #add-point:AFTER FIELD stek021 name="construct.a.page10.stek021"
            {<point name="construct.a.page10.stek021" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stek021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek021
            #add-point:ON ACTION controlp INFIELD stek021 name="construct.c.page10.stek021"
            {<point name="construct.c.page10.stek021" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek003
            #add-point:BEFORE FIELD stek003 name="construct.b.page10.stek003"
            {<point name="construct.b.page10.stek003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek003
            
            #add-point:AFTER FIELD stek003 name="construct.a.page10.stek003"
            {<point name="construct.a.page10.stek003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stek003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek003
            #add-point:ON ACTION controlp INFIELD stek003 name="construct.c.page10.stek003"
            {<point name="construct.c.page10.stek003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek004
            #add-point:BEFORE FIELD stek004 name="construct.b.page10.stek004"
            {<point name="construct.b.page10.stek004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek004
            
            #add-point:AFTER FIELD stek004 name="construct.a.page10.stek004"
            {<point name="construct.a.page10.stek004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stek004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek004
            #add-point:ON ACTION controlp INFIELD stek004 name="construct.c.page10.stek004"
            {<point name="construct.c.page10.stek004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek018
            #add-point:BEFORE FIELD stek018 name="construct.b.page10.stek018"
            {<point name="construct.b.page10.stek018" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek018
            
            #add-point:AFTER FIELD stek018 name="construct.a.page10.stek018"
            {<point name="construct.a.page10.stek018" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stek018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek018
            #add-point:ON ACTION controlp INFIELD stek018 name="construct.c.page10.stek018"
            {<point name="construct.c.page10.stek018" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek019
            #add-point:BEFORE FIELD stek019 name="construct.b.page10.stek019"
            {<point name="construct.b.page10.stek019" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek019
            
            #add-point:AFTER FIELD stek019 name="construct.a.page10.stek019"
            {<point name="construct.a.page10.stek019" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stek019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek019
            #add-point:ON ACTION controlp INFIELD stek019 name="construct.c.page10.stek019"
            {<point name="construct.c.page10.stek019" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek005
            #add-point:BEFORE FIELD stek005 name="construct.b.page10.stek005"
            {<point name="construct.b.page10.stek005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek005
            
            #add-point:AFTER FIELD stek005 name="construct.a.page10.stek005"
            {<point name="construct.a.page10.stek005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stek005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek005
            #add-point:ON ACTION controlp INFIELD stek005 name="construct.c.page10.stek005"
            {<point name="construct.c.page10.stek005" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek006
            #add-point:BEFORE FIELD stek006 name="construct.b.page10.stek006"
            {<point name="construct.b.page10.stek006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek006
            
            #add-point:AFTER FIELD stek006 name="construct.a.page10.stek006"
            {<point name="construct.a.page10.stek006" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stek006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek006
            #add-point:ON ACTION controlp INFIELD stek006 name="construct.c.page10.stek006"
            {<point name="construct.c.page10.stek006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek007
            #add-point:BEFORE FIELD stek007 name="construct.b.page10.stek007"
            {<point name="construct.b.page10.stek007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek007
            
            #add-point:AFTER FIELD stek007 name="construct.a.page10.stek007"
            {<point name="construct.a.page10.stek007" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stek007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek007
            #add-point:ON ACTION controlp INFIELD stek007 name="construct.c.page10.stek007"
            {<point name="construct.c.page10.stek007" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page10.stek008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek008
            #add-point:ON ACTION controlp INFIELD stek008 name="construct.c.page10.stek008"
            {<point name="construct.c.page10.stek008" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek008
            #add-point:BEFORE FIELD stek008 name="construct.b.page10.stek008"
            {<point name="construct.b.page10.stek008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek008
            
            #add-point:AFTER FIELD stek008 name="construct.a.page10.stek008"
            {<point name="construct.a.page10.stek008" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stek009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek009
            #add-point:ON ACTION controlp INFIELD stek009 name="construct.c.page10.stek009"
            {<point name="construct.c.page10.stek009" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek009
            #add-point:BEFORE FIELD stek009 name="construct.b.page10.stek009"
            {<point name="construct.b.page10.stek009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek009
            
            #add-point:AFTER FIELD stek009 name="construct.a.page10.stek009"
            {<point name="construct.a.page10.stek009" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek010
            #add-point:BEFORE FIELD stek010 name="construct.b.page10.stek010"
            {<point name="construct.b.page10.stek010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek010
            
            #add-point:AFTER FIELD stek010 name="construct.a.page10.stek010"
            {<point name="construct.a.page10.stek010" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stek010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek010
            #add-point:ON ACTION controlp INFIELD stek010 name="construct.c.page10.stek010"
            {<point name="construct.c.page10.stek010" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek011
            #add-point:BEFORE FIELD stek011 name="construct.b.page10.stek011"
            {<point name="construct.b.page10.stek011" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek011
            
            #add-point:AFTER FIELD stek011 name="construct.a.page10.stek011"
            {<point name="construct.a.page10.stek011" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stek011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek011
            #add-point:ON ACTION controlp INFIELD stek011 name="construct.c.page10.stek011"
            {<point name="construct.c.page10.stek011" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek012
            #add-point:BEFORE FIELD stek012 name="construct.b.page10.stek012"
            {<point name="construct.b.page10.stek012" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek012
            
            #add-point:AFTER FIELD stek012 name="construct.a.page10.stek012"
            {<point name="construct.a.page10.stek012" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stek012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek012
            #add-point:ON ACTION controlp INFIELD stek012 name="construct.c.page10.stek012"
            {<point name="construct.c.page10.stek012" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek013
            #add-point:BEFORE FIELD stek013 name="construct.b.page10.stek013"
            {<point name="construct.b.page10.stek013" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek013
            
            #add-point:AFTER FIELD stek013 name="construct.a.page10.stek013"
            {<point name="construct.a.page10.stek013" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stek013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek013
            #add-point:ON ACTION controlp INFIELD stek013 name="construct.c.page10.stek013"
            {<point name="construct.c.page10.stek013" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek014
            #add-point:BEFORE FIELD stek014 name="construct.b.page10.stek014"
            {<point name="construct.b.page10.stek014" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek014
            
            #add-point:AFTER FIELD stek014 name="construct.a.page10.stek014"
            {<point name="construct.a.page10.stek014" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stek014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek014
            #add-point:ON ACTION controlp INFIELD stek014 name="construct.c.page10.stek014"
            {<point name="construct.c.page10.stek014" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stekacti
            #add-point:BEFORE FIELD stekacti name="construct.b.page10.stekacti"
            {<point name="construct.b.page10.stekacti" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stekacti
            
            #add-point:AFTER FIELD stekacti name="construct.a.page10.stekacti"
            {<point name="construct.a.page10.stekacti" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stekacti
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stekacti
            #add-point:ON ACTION controlp INFIELD stekacti name="construct.c.page10.stekacti"
            {<point name="construct.c.page10.stekacti" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek015
            #add-point:BEFORE FIELD stek015 name="construct.b.page10.stek015"
            {<point name="construct.b.page10.stek015" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek015
            
            #add-point:AFTER FIELD stek015 name="construct.a.page10.stek015"
            {<point name="construct.a.page10.stek015" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stek015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek015
            #add-point:ON ACTION controlp INFIELD stek015 name="construct.c.page10.stek015"
            {<point name="construct.c.page10.stek015" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek016
            #add-point:BEFORE FIELD stek016 name="construct.b.page10.stek016"
            {<point name="construct.b.page10.stek016" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek016
            
            #add-point:AFTER FIELD stek016 name="construct.a.page10.stek016"
            {<point name="construct.a.page10.stek016" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stek016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek016
            #add-point:ON ACTION controlp INFIELD stek016 name="construct.c.page10.stek016"
            {<point name="construct.c.page10.stek016" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek017
            #add-point:BEFORE FIELD stek017 name="construct.b.page10.stek017"
            {<point name="construct.b.page10.stek017" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek017
            
            #add-point:AFTER FIELD stek017 name="construct.a.page10.stek017"
            {<point name="construct.a.page10.stek017" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stek017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek017
            #add-point:ON ACTION controlp INFIELD stek017 name="construct.c.page10.stek017"
            {<point name="construct.c.page10.stek017" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek022
            #add-point:BEFORE FIELD stek022 name="construct.b.page10.stek022"
            {<point name="construct.b.page10.stek022" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek022
            
            #add-point:AFTER FIELD stek022 name="construct.a.page10.stek022"
            {<point name="construct.a.page10.stek022" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stek022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek022
            #add-point:ON ACTION controlp INFIELD stek022 name="construct.c.page10.stek022"
            {<point name="construct.c.page10.stek022" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek023
            #add-point:BEFORE FIELD stek023 name="construct.b.page10.stek023"
            {<point name="construct.b.page10.stek023" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek023
            
            #add-point:AFTER FIELD stek023 name="construct.a.page10.stek023"
            {<point name="construct.a.page10.stek023" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stek023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek023
            #add-point:ON ACTION controlp INFIELD stek023 name="construct.c.page10.stek023"
            {<point name="construct.c.page10.stek023" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek024
            #add-point:BEFORE FIELD stek024 name="construct.b.page10.stek024"
            {<point name="construct.b.page10.stek024" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek024
            
            #add-point:AFTER FIELD stek024 name="construct.a.page10.stek024"
            {<point name="construct.a.page10.stek024" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stek024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek024
            #add-point:ON ACTION controlp INFIELD stek024 name="construct.c.page10.stek024"
            {<point name="construct.c.page10.stek024" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page10.stek025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek025
            #add-point:ON ACTION controlp INFIELD stek025 name="construct.c.page10.stek025"
            {<point name="construct.c.page10.stek025" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek025
            #add-point:BEFORE FIELD stek025 name="construct.b.page10.stek025"
            {<point name="construct.b.page10.stek025" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek025
            
            #add-point:AFTER FIELD stek025 name="construct.a.page10.stek025"
            {<point name="construct.a.page10.stek025" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek026
            #add-point:BEFORE FIELD stek026 name="construct.b.page10.stek026"
            {<point name="construct.b.page10.stek026" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek026
            
            #add-point:AFTER FIELD stek026 name="construct.a.page10.stek026"
            {<point name="construct.a.page10.stek026" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stek026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek026
            #add-point:ON ACTION controlp INFIELD stek026 name="construct.c.page10.stek026"
            {<point name="construct.c.page10.stek026" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON stelunit,stelsite,stel001,stelacti,stelseq,stel003,stel002,stel004,stel005, 
          stel006,stel007,stel008,stel009
           FROM s_detail11[1].stelunit,s_detail11[1].stelsite,s_detail11[1].stel001,s_detail11[1].stelacti, 
               s_detail11[1].stelseq,s_detail11[1].stel003,s_detail11[1].stel002,s_detail11[1].stel004, 
               s_detail11[1].stel005,s_detail11[1].stel006,s_detail11[1].stel007,s_detail11[1].stel008, 
               s_detail11[1].stel009
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body3.before_construct"
            {<point name="cs.body3.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stelunit
            #add-point:BEFORE FIELD stelunit name="construct.b.page11.stelunit"
            {<point name="construct.b.page11.stelunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stelunit
            
            #add-point:AFTER FIELD stelunit name="construct.a.page11.stelunit"
            {<point name="construct.a.page11.stelunit" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page11.stelunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stelunit
            #add-point:ON ACTION controlp INFIELD stelunit name="construct.c.page11.stelunit"
            {<point name="construct.c.page11.stelunit" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stelsite
            #add-point:BEFORE FIELD stelsite name="construct.b.page11.stelsite"
            {<point name="construct.b.page11.stelsite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stelsite
            
            #add-point:AFTER FIELD stelsite name="construct.a.page11.stelsite"
            {<point name="construct.a.page11.stelsite" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page11.stelsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stelsite
            #add-point:ON ACTION controlp INFIELD stelsite name="construct.c.page11.stelsite"
            {<point name="construct.c.page11.stelsite" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stel001
            #add-point:BEFORE FIELD stel001 name="construct.b.page11.stel001"
            {<point name="construct.b.page11.stel001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stel001
            
            #add-point:AFTER FIELD stel001 name="construct.a.page11.stel001"
            {<point name="construct.a.page11.stel001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page11.stel001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stel001
            #add-point:ON ACTION controlp INFIELD stel001 name="construct.c.page11.stel001"
            {<point name="construct.c.page11.stel001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stelacti
            #add-point:BEFORE FIELD stelacti name="construct.b.page11.stelacti"
            {<point name="construct.b.page11.stelacti" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stelacti
            
            #add-point:AFTER FIELD stelacti name="construct.a.page11.stelacti"
            {<point name="construct.a.page11.stelacti" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page11.stelacti
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stelacti
            #add-point:ON ACTION controlp INFIELD stelacti name="construct.c.page11.stelacti"
            {<point name="construct.c.page11.stelacti" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stelseq
            #add-point:BEFORE FIELD stelseq name="construct.b.page11.stelseq"
            {<point name="construct.b.page11.stelseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stelseq
            
            #add-point:AFTER FIELD stelseq name="construct.a.page11.stelseq"
            {<point name="construct.a.page11.stelseq" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page11.stelseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stelseq
            #add-point:ON ACTION controlp INFIELD stelseq name="construct.c.page11.stelseq"
            {<point name="construct.c.page11.stelseq" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stel003
            #add-point:BEFORE FIELD stel003 name="construct.b.page11.stel003"
            {<point name="construct.b.page11.stel003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stel003
            
            #add-point:AFTER FIELD stel003 name="construct.a.page11.stel003"
            {<point name="construct.a.page11.stel003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page11.stel003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stel003
            #add-point:ON ACTION controlp INFIELD stel003 name="construct.c.page11.stel003"
            {<point name="construct.c.page11.stel003" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page11.stel002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stel002
            #add-point:ON ACTION controlp INFIELD stel002 name="construct.c.page11.stel002"
            {<point name="construct.c.page11.stel002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stel002
            #add-point:BEFORE FIELD stel002 name="construct.b.page11.stel002"
            {<point name="construct.b.page11.stel002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stel002
            
            #add-point:AFTER FIELD stel002 name="construct.a.page11.stel002"
            {<point name="construct.a.page11.stel002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stel004
            #add-point:BEFORE FIELD stel004 name="construct.b.page11.stel004"
            {<point name="construct.b.page11.stel004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stel004
            
            #add-point:AFTER FIELD stel004 name="construct.a.page11.stel004"
            {<point name="construct.a.page11.stel004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page11.stel004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stel004
            #add-point:ON ACTION controlp INFIELD stel004 name="construct.c.page11.stel004"
            {<point name="construct.c.page11.stel004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stel005
            #add-point:BEFORE FIELD stel005 name="construct.b.page11.stel005"
            {<point name="construct.b.page11.stel005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stel005
            
            #add-point:AFTER FIELD stel005 name="construct.a.page11.stel005"
            {<point name="construct.a.page11.stel005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page11.stel005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stel005
            #add-point:ON ACTION controlp INFIELD stel005 name="construct.c.page11.stel005"
            {<point name="construct.c.page11.stel005" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stel006
            #add-point:BEFORE FIELD stel006 name="construct.b.page11.stel006"
            {<point name="construct.b.page11.stel006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stel006
            
            #add-point:AFTER FIELD stel006 name="construct.a.page11.stel006"
            {<point name="construct.a.page11.stel006" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page11.stel006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stel006
            #add-point:ON ACTION controlp INFIELD stel006 name="construct.c.page11.stel006"
            {<point name="construct.c.page11.stel006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stel007
            #add-point:BEFORE FIELD stel007 name="construct.b.page11.stel007"
            {<point name="construct.b.page11.stel007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stel007
            
            #add-point:AFTER FIELD stel007 name="construct.a.page11.stel007"
            {<point name="construct.a.page11.stel007" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page11.stel007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stel007
            #add-point:ON ACTION controlp INFIELD stel007 name="construct.c.page11.stel007"
            {<point name="construct.c.page11.stel007" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stel008
            #add-point:BEFORE FIELD stel008 name="construct.b.page11.stel008"
            {<point name="construct.b.page11.stel008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stel008
            
            #add-point:AFTER FIELD stel008 name="construct.a.page11.stel008"
            {<point name="construct.a.page11.stel008" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page11.stel008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stel008
            #add-point:ON ACTION controlp INFIELD stel008 name="construct.c.page11.stel008"
            {<point name="construct.c.page11.stel008" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stel009
            #add-point:BEFORE FIELD stel009 name="construct.b.page11.stel009"
            {<point name="construct.b.page11.stel009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stel009
            
            #add-point:AFTER FIELD stel009 name="construct.a.page11.stel009"
            {<point name="construct.a.page11.stel009" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page11.stel009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stel009
            #add-point:ON ACTION controlp INFIELD stel009 name="construct.c.page11.stel009"
            {<point name="construct.c.page11.stel009" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table4 ON stewunit,stewsite,stewseq,stew001,stew002,stew003,stew004,stew005,stew006, 
          stew007,stew008,stewacti
           FROM s_detail12[1].stewunit,s_detail12[1].stewsite,s_detail12[1].stewseq,s_detail12[1].stew001, 
               s_detail12[1].stew002,s_detail12[1].stew003,s_detail12[1].stew004,s_detail12[1].stew005, 
               s_detail12[1].stew006,s_detail12[1].stew007,s_detail12[1].stew008,s_detail12[1].stewacti 

                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body4.before_construct"
            {<point name="cs.body4.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 4)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stewunit
            #add-point:BEFORE FIELD stewunit name="construct.b.page12.stewunit"
            {<point name="construct.b.page12.stewunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stewunit
            
            #add-point:AFTER FIELD stewunit name="construct.a.page12.stewunit"
            {<point name="construct.a.page12.stewunit" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page12.stewunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stewunit
            #add-point:ON ACTION controlp INFIELD stewunit name="construct.c.page12.stewunit"
            {<point name="construct.c.page12.stewunit" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stewsite
            #add-point:BEFORE FIELD stewsite name="construct.b.page12.stewsite"
            {<point name="construct.b.page12.stewsite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stewsite
            
            #add-point:AFTER FIELD stewsite name="construct.a.page12.stewsite"
            {<point name="construct.a.page12.stewsite" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page12.stewsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stewsite
            #add-point:ON ACTION controlp INFIELD stewsite name="construct.c.page12.stewsite"
            {<point name="construct.c.page12.stewsite" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stewseq
            #add-point:BEFORE FIELD stewseq name="construct.b.page12.stewseq"
            {<point name="construct.b.page12.stewseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stewseq
            
            #add-point:AFTER FIELD stewseq name="construct.a.page12.stewseq"
            {<point name="construct.a.page12.stewseq" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page12.stewseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stewseq
            #add-point:ON ACTION controlp INFIELD stewseq name="construct.c.page12.stewseq"
            {<point name="construct.c.page12.stewseq" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stew001
            #add-point:BEFORE FIELD stew001 name="construct.b.page12.stew001"
            {<point name="construct.b.page12.stew001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stew001
            
            #add-point:AFTER FIELD stew001 name="construct.a.page12.stew001"
            {<point name="construct.a.page12.stew001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page12.stew001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stew001
            #add-point:ON ACTION controlp INFIELD stew001 name="construct.c.page12.stew001"
            {<point name="construct.c.page12.stew001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stew002
            #add-point:BEFORE FIELD stew002 name="construct.b.page12.stew002"
            {<point name="construct.b.page12.stew002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stew002
            
            #add-point:AFTER FIELD stew002 name="construct.a.page12.stew002"
            {<point name="construct.a.page12.stew002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page12.stew002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stew002
            #add-point:ON ACTION controlp INFIELD stew002 name="construct.c.page12.stew002"
            {<point name="construct.c.page12.stew002" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page12.stew003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stew003
            #add-point:ON ACTION controlp INFIELD stew003 name="construct.c.page12.stew003"
            {<point name="construct.c.page12.stew003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stew003
            #add-point:BEFORE FIELD stew003 name="construct.b.page12.stew003"
            {<point name="construct.b.page12.stew003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stew003
            
            #add-point:AFTER FIELD stew003 name="construct.a.page12.stew003"
            {<point name="construct.a.page12.stew003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page12.stew004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stew004
            #add-point:ON ACTION controlp INFIELD stew004 name="construct.c.page12.stew004"
            {<point name="construct.c.page12.stew004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stew004
            #add-point:BEFORE FIELD stew004 name="construct.b.page12.stew004"
            {<point name="construct.b.page12.stew004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stew004
            
            #add-point:AFTER FIELD stew004 name="construct.a.page12.stew004"
            {<point name="construct.a.page12.stew004" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stew005
            #add-point:BEFORE FIELD stew005 name="construct.b.page12.stew005"
            {<point name="construct.b.page12.stew005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stew005
            
            #add-point:AFTER FIELD stew005 name="construct.a.page12.stew005"
            {<point name="construct.a.page12.stew005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page12.stew005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stew005
            #add-point:ON ACTION controlp INFIELD stew005 name="construct.c.page12.stew005"
            {<point name="construct.c.page12.stew005" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stew006
            #add-point:BEFORE FIELD stew006 name="construct.b.page12.stew006"
            {<point name="construct.b.page12.stew006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stew006
            
            #add-point:AFTER FIELD stew006 name="construct.a.page12.stew006"
            {<point name="construct.a.page12.stew006" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page12.stew006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stew006
            #add-point:ON ACTION controlp INFIELD stew006 name="construct.c.page12.stew006"
            {<point name="construct.c.page12.stew006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stew007
            #add-point:BEFORE FIELD stew007 name="construct.b.page12.stew007"
            {<point name="construct.b.page12.stew007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stew007
            
            #add-point:AFTER FIELD stew007 name="construct.a.page12.stew007"
            {<point name="construct.a.page12.stew007" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page12.stew007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stew007
            #add-point:ON ACTION controlp INFIELD stew007 name="construct.c.page12.stew007"
            {<point name="construct.c.page12.stew007" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stew008
            #add-point:BEFORE FIELD stew008 name="construct.b.page12.stew008"
            {<point name="construct.b.page12.stew008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stew008
            
            #add-point:AFTER FIELD stew008 name="construct.a.page12.stew008"
            {<point name="construct.a.page12.stew008" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page12.stew008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stew008
            #add-point:ON ACTION controlp INFIELD stew008 name="construct.c.page12.stew008"
            {<point name="construct.c.page12.stew008" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stewacti
            #add-point:BEFORE FIELD stewacti name="construct.b.page12.stewacti"
            {<point name="construct.b.page12.stewacti" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stewacti
            
            #add-point:AFTER FIELD stewacti name="construct.a.page12.stewacti"
            {<point name="construct.a.page12.stewacti" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page12.stewacti
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stewacti
            #add-point:ON ACTION controlp INFIELD stewacti name="construct.c.page12.stewacti"
            {<point name="construct.c.page12.stewacti" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table5 ON stecseq,stec001,stecacti,stec024,stec002,stec003,stec025,stec004,stec005, 
          stec006,stec006_desc,stec007,stec007_desc,stec008,stec009,stec026,stec027,stec010,stec011, 
          stec012,stec013,stec014,stec015,stec016,stec017,stec018,stec019,stec020,stec021,stec022,stec023, 
          stecsite,stecunit
           FROM s_detail2[1].stecseq,s_detail2[1].stec001,s_detail2[1].stecacti,s_detail2[1].stec024, 
               s_detail2[1].stec002,s_detail2[1].stec003,s_detail2[1].stec025,s_detail2[1].stec004,s_detail2[1].stec005, 
               s_detail2[1].stec006,s_detail2[1].stec006_desc,s_detail2[1].stec007,s_detail2[1].stec007_desc, 
               s_detail2[1].stec008,s_detail2[1].stec009,s_detail2[1].stec026,s_detail2[1].stec027,s_detail2[1].stec010, 
               s_detail2[1].stec011,s_detail2[1].stec012,s_detail2[1].stec013,s_detail2[1].stec014,s_detail2[1].stec015, 
               s_detail2[1].stec016,s_detail2[1].stec017,s_detail2[1].stec018,s_detail2[1].stec019,s_detail2[1].stec020, 
               s_detail2[1].stec021,s_detail2[1].stec022,s_detail2[1].stec023,s_detail2[1].stecsite, 
               s_detail2[1].stecunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body5.before_construct"
            {<point name="cs.body5.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 5)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stecseq
            #add-point:BEFORE FIELD stecseq name="construct.b.page2.stecseq"
            {<point name="construct.b.page2.stecseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stecseq
            
            #add-point:AFTER FIELD stecseq name="construct.a.page2.stecseq"
            {<point name="construct.a.page2.stecseq" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stecseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stecseq
            #add-point:ON ACTION controlp INFIELD stecseq name="construct.c.page2.stecseq"
            {<point name="construct.c.page2.stecseq" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec001
            #add-point:BEFORE FIELD stec001 name="construct.b.page2.stec001"
            {<point name="construct.b.page2.stec001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec001
            
            #add-point:AFTER FIELD stec001 name="construct.a.page2.stec001"
            {<point name="construct.a.page2.stec001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stec001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec001
            #add-point:ON ACTION controlp INFIELD stec001 name="construct.c.page2.stec001"
            {<point name="construct.c.page2.stec001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stecacti
            #add-point:BEFORE FIELD stecacti name="construct.b.page2.stecacti"
            {<point name="construct.b.page2.stecacti" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stecacti
            
            #add-point:AFTER FIELD stecacti name="construct.a.page2.stecacti"
            {<point name="construct.a.page2.stecacti" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stecacti
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stecacti
            #add-point:ON ACTION controlp INFIELD stecacti name="construct.c.page2.stecacti"
            {<point name="construct.c.page2.stecacti" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec024
            #add-point:BEFORE FIELD stec024 name="construct.b.page2.stec024"
            {<point name="construct.b.page2.stec024" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec024
            
            #add-point:AFTER FIELD stec024 name="construct.a.page2.stec024"
            {<point name="construct.a.page2.stec024" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stec024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec024
            #add-point:ON ACTION controlp INFIELD stec024 name="construct.c.page2.stec024"
            {<point name="construct.c.page2.stec024" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page2.stec002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec002
            #add-point:ON ACTION controlp INFIELD stec002 name="construct.c.page2.stec002"
            {<point name="construct.c.page2.stec002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec002
            #add-point:BEFORE FIELD stec002 name="construct.b.page2.stec002"
            {<point name="construct.b.page2.stec002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec002
            
            #add-point:AFTER FIELD stec002 name="construct.a.page2.stec002"
            {<point name="construct.a.page2.stec002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec003
            #add-point:BEFORE FIELD stec003 name="construct.b.page2.stec003"
            {<point name="construct.b.page2.stec003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec003
            
            #add-point:AFTER FIELD stec003 name="construct.a.page2.stec003"
            {<point name="construct.a.page2.stec003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stec003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec003
            #add-point:ON ACTION controlp INFIELD stec003 name="construct.c.page2.stec003"
            {<point name="construct.c.page2.stec003" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page2.stec025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec025
            #add-point:ON ACTION controlp INFIELD stec025 name="construct.c.page2.stec025"
            {<point name="construct.c.page2.stec025" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec025
            #add-point:BEFORE FIELD stec025 name="construct.b.page2.stec025"
            {<point name="construct.b.page2.stec025" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec025
            
            #add-point:AFTER FIELD stec025 name="construct.a.page2.stec025"
            {<point name="construct.a.page2.stec025" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stec004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec004
            #add-point:ON ACTION controlp INFIELD stec004 name="construct.c.page2.stec004"
            {<point name="construct.c.page2.stec004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec004
            #add-point:BEFORE FIELD stec004 name="construct.b.page2.stec004"
            {<point name="construct.b.page2.stec004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec004
            
            #add-point:AFTER FIELD stec004 name="construct.a.page2.stec004"
            {<point name="construct.a.page2.stec004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stec005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec005
            #add-point:ON ACTION controlp INFIELD stec005 name="construct.c.page2.stec005"
            {<point name="construct.c.page2.stec005" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec005
            #add-point:BEFORE FIELD stec005 name="construct.b.page2.stec005"
            {<point name="construct.b.page2.stec005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec005
            
            #add-point:AFTER FIELD stec005 name="construct.a.page2.stec005"
            {<point name="construct.a.page2.stec005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stec006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec006
            #add-point:ON ACTION controlp INFIELD stec006 name="construct.c.page2.stec006"
            {<point name="construct.c.page2.stec006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec006
            #add-point:BEFORE FIELD stec006 name="construct.b.page2.stec006"
            {<point name="construct.b.page2.stec006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec006
            
            #add-point:AFTER FIELD stec006 name="construct.a.page2.stec006"
            {<point name="construct.a.page2.stec006" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec006_desc
            #add-point:BEFORE FIELD stec006_desc name="construct.b.page2.stec006_desc"
            {<point name="construct.b.page2.stec006_desc" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec006_desc
            
            #add-point:AFTER FIELD stec006_desc name="construct.a.page2.stec006_desc"
            {<point name="construct.a.page2.stec006_desc" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stec006_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec006_desc
            #add-point:ON ACTION controlp INFIELD stec006_desc name="construct.c.page2.stec006_desc"
            {<point name="construct.c.page2.stec006_desc" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page2.stec007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec007
            #add-point:ON ACTION controlp INFIELD stec007 name="construct.c.page2.stec007"
            {<point name="construct.c.page2.stec007" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec007
            #add-point:BEFORE FIELD stec007 name="construct.b.page2.stec007"
            {<point name="construct.b.page2.stec007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec007
            
            #add-point:AFTER FIELD stec007 name="construct.a.page2.stec007"
            {<point name="construct.a.page2.stec007" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec007_desc
            #add-point:BEFORE FIELD stec007_desc name="construct.b.page2.stec007_desc"
            {<point name="construct.b.page2.stec007_desc" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec007_desc
            
            #add-point:AFTER FIELD stec007_desc name="construct.a.page2.stec007_desc"
            {<point name="construct.a.page2.stec007_desc" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stec007_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec007_desc
            #add-point:ON ACTION controlp INFIELD stec007_desc name="construct.c.page2.stec007_desc"
            {<point name="construct.c.page2.stec007_desc" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec008
            #add-point:BEFORE FIELD stec008 name="construct.b.page2.stec008"
            {<point name="construct.b.page2.stec008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec008
            
            #add-point:AFTER FIELD stec008 name="construct.a.page2.stec008"
            {<point name="construct.a.page2.stec008" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stec008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec008
            #add-point:ON ACTION controlp INFIELD stec008 name="construct.c.page2.stec008"
            {<point name="construct.c.page2.stec008" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page2.stec009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec009
            #add-point:ON ACTION controlp INFIELD stec009 name="construct.c.page2.stec009"
            {<point name="construct.c.page2.stec009" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec009
            #add-point:BEFORE FIELD stec009 name="construct.b.page2.stec009"
            {<point name="construct.b.page2.stec009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec009
            
            #add-point:AFTER FIELD stec009 name="construct.a.page2.stec009"
            {<point name="construct.a.page2.stec009" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec026
            #add-point:BEFORE FIELD stec026 name="construct.b.page2.stec026"
            {<point name="construct.b.page2.stec026" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec026
            
            #add-point:AFTER FIELD stec026 name="construct.a.page2.stec026"
            {<point name="construct.a.page2.stec026" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stec026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec026
            #add-point:ON ACTION controlp INFIELD stec026 name="construct.c.page2.stec026"
            {<point name="construct.c.page2.stec026" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec027
            #add-point:BEFORE FIELD stec027 name="construct.b.page2.stec027"
            {<point name="construct.b.page2.stec027" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec027
            
            #add-point:AFTER FIELD stec027 name="construct.a.page2.stec027"
            {<point name="construct.a.page2.stec027" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stec027
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec027
            #add-point:ON ACTION controlp INFIELD stec027 name="construct.c.page2.stec027"
            {<point name="construct.c.page2.stec027" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec010
            #add-point:BEFORE FIELD stec010 name="construct.b.page2.stec010"
            {<point name="construct.b.page2.stec010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec010
            
            #add-point:AFTER FIELD stec010 name="construct.a.page2.stec010"
            {<point name="construct.a.page2.stec010" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stec010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec010
            #add-point:ON ACTION controlp INFIELD stec010 name="construct.c.page2.stec010"
            {<point name="construct.c.page2.stec010" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec011
            #add-point:BEFORE FIELD stec011 name="construct.b.page2.stec011"
            {<point name="construct.b.page2.stec011" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec011
            
            #add-point:AFTER FIELD stec011 name="construct.a.page2.stec011"
            {<point name="construct.a.page2.stec011" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stec011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec011
            #add-point:ON ACTION controlp INFIELD stec011 name="construct.c.page2.stec011"
            {<point name="construct.c.page2.stec011" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec012
            #add-point:BEFORE FIELD stec012 name="construct.b.page2.stec012"
            {<point name="construct.b.page2.stec012" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec012
            
            #add-point:AFTER FIELD stec012 name="construct.a.page2.stec012"
            {<point name="construct.a.page2.stec012" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stec012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec012
            #add-point:ON ACTION controlp INFIELD stec012 name="construct.c.page2.stec012"
            {<point name="construct.c.page2.stec012" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec013
            #add-point:BEFORE FIELD stec013 name="construct.b.page2.stec013"
            {<point name="construct.b.page2.stec013" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec013
            
            #add-point:AFTER FIELD stec013 name="construct.a.page2.stec013"
            {<point name="construct.a.page2.stec013" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stec013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec013
            #add-point:ON ACTION controlp INFIELD stec013 name="construct.c.page2.stec013"
            {<point name="construct.c.page2.stec013" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec014
            #add-point:BEFORE FIELD stec014 name="construct.b.page2.stec014"
            {<point name="construct.b.page2.stec014" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec014
            
            #add-point:AFTER FIELD stec014 name="construct.a.page2.stec014"
            {<point name="construct.a.page2.stec014" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stec014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec014
            #add-point:ON ACTION controlp INFIELD stec014 name="construct.c.page2.stec014"
            {<point name="construct.c.page2.stec014" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page2.stec015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec015
            #add-point:ON ACTION controlp INFIELD stec015 name="construct.c.page2.stec015"
            {<point name="construct.c.page2.stec015" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec015
            #add-point:BEFORE FIELD stec015 name="construct.b.page2.stec015"
            {<point name="construct.b.page2.stec015" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec015
            
            #add-point:AFTER FIELD stec015 name="construct.a.page2.stec015"
            {<point name="construct.a.page2.stec015" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stec016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec016
            #add-point:ON ACTION controlp INFIELD stec016 name="construct.c.page2.stec016"
            {<point name="construct.c.page2.stec016" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec016
            #add-point:BEFORE FIELD stec016 name="construct.b.page2.stec016"
            {<point name="construct.b.page2.stec016" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec016
            
            #add-point:AFTER FIELD stec016 name="construct.a.page2.stec016"
            {<point name="construct.a.page2.stec016" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec017
            #add-point:BEFORE FIELD stec017 name="construct.b.page2.stec017"
            {<point name="construct.b.page2.stec017" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec017
            
            #add-point:AFTER FIELD stec017 name="construct.a.page2.stec017"
            {<point name="construct.a.page2.stec017" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stec017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec017
            #add-point:ON ACTION controlp INFIELD stec017 name="construct.c.page2.stec017"
            {<point name="construct.c.page2.stec017" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec018
            #add-point:BEFORE FIELD stec018 name="construct.b.page2.stec018"
            {<point name="construct.b.page2.stec018" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec018
            
            #add-point:AFTER FIELD stec018 name="construct.a.page2.stec018"
            {<point name="construct.a.page2.stec018" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stec018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec018
            #add-point:ON ACTION controlp INFIELD stec018 name="construct.c.page2.stec018"
            {<point name="construct.c.page2.stec018" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec019
            #add-point:BEFORE FIELD stec019 name="construct.b.page2.stec019"
            {<point name="construct.b.page2.stec019" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec019
            
            #add-point:AFTER FIELD stec019 name="construct.a.page2.stec019"
            {<point name="construct.a.page2.stec019" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stec019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec019
            #add-point:ON ACTION controlp INFIELD stec019 name="construct.c.page2.stec019"
            {<point name="construct.c.page2.stec019" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec020
            #add-point:BEFORE FIELD stec020 name="construct.b.page2.stec020"
            {<point name="construct.b.page2.stec020" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec020
            
            #add-point:AFTER FIELD stec020 name="construct.a.page2.stec020"
            {<point name="construct.a.page2.stec020" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stec020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec020
            #add-point:ON ACTION controlp INFIELD stec020 name="construct.c.page2.stec020"
            {<point name="construct.c.page2.stec020" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec021
            #add-point:BEFORE FIELD stec021 name="construct.b.page2.stec021"
            {<point name="construct.b.page2.stec021" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec021
            
            #add-point:AFTER FIELD stec021 name="construct.a.page2.stec021"
            {<point name="construct.a.page2.stec021" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stec021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec021
            #add-point:ON ACTION controlp INFIELD stec021 name="construct.c.page2.stec021"
            {<point name="construct.c.page2.stec021" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec022
            #add-point:BEFORE FIELD stec022 name="construct.b.page2.stec022"
            {<point name="construct.b.page2.stec022" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec022
            
            #add-point:AFTER FIELD stec022 name="construct.a.page2.stec022"
            {<point name="construct.a.page2.stec022" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stec022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec022
            #add-point:ON ACTION controlp INFIELD stec022 name="construct.c.page2.stec022"
            {<point name="construct.c.page2.stec022" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec023
            #add-point:BEFORE FIELD stec023 name="construct.b.page2.stec023"
            {<point name="construct.b.page2.stec023" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec023
            
            #add-point:AFTER FIELD stec023 name="construct.a.page2.stec023"
            {<point name="construct.a.page2.stec023" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stec023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec023
            #add-point:ON ACTION controlp INFIELD stec023 name="construct.c.page2.stec023"
            {<point name="construct.c.page2.stec023" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stecsite
            #add-point:BEFORE FIELD stecsite name="construct.b.page2.stecsite"
            {<point name="construct.b.page2.stecsite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stecsite
            
            #add-point:AFTER FIELD stecsite name="construct.a.page2.stecsite"
            {<point name="construct.a.page2.stecsite" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stecsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stecsite
            #add-point:ON ACTION controlp INFIELD stecsite name="construct.c.page2.stecsite"
            {<point name="construct.c.page2.stecsite" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stecunit
            #add-point:BEFORE FIELD stecunit name="construct.b.page2.stecunit"
            {<point name="construct.b.page2.stecunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stecunit
            
            #add-point:AFTER FIELD stecunit name="construct.a.page2.stecunit"
            {<point name="construct.a.page2.stecunit" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stecunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stecunit
            #add-point:ON ACTION controlp INFIELD stecunit name="construct.c.page2.stecunit"
            {<point name="construct.c.page2.stecunit" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table6 ON stee001,stee002,steeseq,stee003,stee004,stee005,stee006,stee012,stee007, 
          stee008,stee009,stee010,stee011,steesite,steeunit
           FROM s_detail3[1].stee001,s_detail3[1].stee002,s_detail3[1].steeseq,s_detail3[1].stee003, 
               s_detail3[1].stee004,s_detail3[1].stee005,s_detail3[1].stee006,s_detail3[1].stee012,s_detail3[1].stee007, 
               s_detail3[1].stee008,s_detail3[1].stee009,s_detail3[1].stee010,s_detail3[1].stee011,s_detail3[1].steesite, 
               s_detail3[1].steeunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body6.before_construct"
            {<point name="cs.body6.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 6)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stee001
            #add-point:BEFORE FIELD stee001 name="construct.b.page3.stee001"
            {<point name="construct.b.page3.stee001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stee001
            
            #add-point:AFTER FIELD stee001 name="construct.a.page3.stee001"
            {<point name="construct.a.page3.stee001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.stee001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stee001
            #add-point:ON ACTION controlp INFIELD stee001 name="construct.c.page3.stee001"
            {<point name="construct.c.page3.stee001" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page3.stee002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stee002
            #add-point:ON ACTION controlp INFIELD stee002 name="construct.c.page3.stee002"
            {<point name="construct.c.page3.stee002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stee002
            #add-point:BEFORE FIELD stee002 name="construct.b.page3.stee002"
            {<point name="construct.b.page3.stee002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stee002
            
            #add-point:AFTER FIELD stee002 name="construct.a.page3.stee002"
            {<point name="construct.a.page3.stee002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steeseq
            #add-point:BEFORE FIELD steeseq name="construct.b.page3.steeseq"
            {<point name="construct.b.page3.steeseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steeseq
            
            #add-point:AFTER FIELD steeseq name="construct.a.page3.steeseq"
            {<point name="construct.a.page3.steeseq" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.steeseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steeseq
            #add-point:ON ACTION controlp INFIELD steeseq name="construct.c.page3.steeseq"
            {<point name="construct.c.page3.steeseq" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page3.stee003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stee003
            #add-point:ON ACTION controlp INFIELD stee003 name="construct.c.page3.stee003"
            {<point name="construct.c.page3.stee003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stee003
            #add-point:BEFORE FIELD stee003 name="construct.b.page3.stee003"
            {<point name="construct.b.page3.stee003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stee003
            
            #add-point:AFTER FIELD stee003 name="construct.a.page3.stee003"
            {<point name="construct.a.page3.stee003" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stee004
            #add-point:BEFORE FIELD stee004 name="construct.b.page3.stee004"
            {<point name="construct.b.page3.stee004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stee004
            
            #add-point:AFTER FIELD stee004 name="construct.a.page3.stee004"
            {<point name="construct.a.page3.stee004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.stee004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stee004
            #add-point:ON ACTION controlp INFIELD stee004 name="construct.c.page3.stee004"
            {<point name="construct.c.page3.stee004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stee005
            #add-point:BEFORE FIELD stee005 name="construct.b.page3.stee005"
            {<point name="construct.b.page3.stee005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stee005
            
            #add-point:AFTER FIELD stee005 name="construct.a.page3.stee005"
            {<point name="construct.a.page3.stee005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.stee005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stee005
            #add-point:ON ACTION controlp INFIELD stee005 name="construct.c.page3.stee005"
            {<point name="construct.c.page3.stee005" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stee006
            #add-point:BEFORE FIELD stee006 name="construct.b.page3.stee006"
            {<point name="construct.b.page3.stee006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stee006
            
            #add-point:AFTER FIELD stee006 name="construct.a.page3.stee006"
            {<point name="construct.a.page3.stee006" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.stee006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stee006
            #add-point:ON ACTION controlp INFIELD stee006 name="construct.c.page3.stee006"
            {<point name="construct.c.page3.stee006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stee012
            #add-point:BEFORE FIELD stee012 name="construct.b.page3.stee012"
            {<point name="construct.b.page3.stee012" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stee012
            
            #add-point:AFTER FIELD stee012 name="construct.a.page3.stee012"
            {<point name="construct.a.page3.stee012" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.stee012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stee012
            #add-point:ON ACTION controlp INFIELD stee012 name="construct.c.page3.stee012"
            {<point name="construct.c.page3.stee012" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stee007
            #add-point:BEFORE FIELD stee007 name="construct.b.page3.stee007"
            {<point name="construct.b.page3.stee007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stee007
            
            #add-point:AFTER FIELD stee007 name="construct.a.page3.stee007"
            {<point name="construct.a.page3.stee007" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.stee007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stee007
            #add-point:ON ACTION controlp INFIELD stee007 name="construct.c.page3.stee007"
            {<point name="construct.c.page3.stee007" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stee008
            #add-point:BEFORE FIELD stee008 name="construct.b.page3.stee008"
            {<point name="construct.b.page3.stee008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stee008
            
            #add-point:AFTER FIELD stee008 name="construct.a.page3.stee008"
            {<point name="construct.a.page3.stee008" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.stee008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stee008
            #add-point:ON ACTION controlp INFIELD stee008 name="construct.c.page3.stee008"
            {<point name="construct.c.page3.stee008" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stee009
            #add-point:BEFORE FIELD stee009 name="construct.b.page3.stee009"
            {<point name="construct.b.page3.stee009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stee009
            
            #add-point:AFTER FIELD stee009 name="construct.a.page3.stee009"
            {<point name="construct.a.page3.stee009" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.stee009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stee009
            #add-point:ON ACTION controlp INFIELD stee009 name="construct.c.page3.stee009"
            {<point name="construct.c.page3.stee009" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stee010
            #add-point:BEFORE FIELD stee010 name="construct.b.page3.stee010"
            {<point name="construct.b.page3.stee010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stee010
            
            #add-point:AFTER FIELD stee010 name="construct.a.page3.stee010"
            {<point name="construct.a.page3.stee010" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.stee010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stee010
            #add-point:ON ACTION controlp INFIELD stee010 name="construct.c.page3.stee010"
            {<point name="construct.c.page3.stee010" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stee011
            #add-point:BEFORE FIELD stee011 name="construct.b.page3.stee011"
            {<point name="construct.b.page3.stee011" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stee011
            
            #add-point:AFTER FIELD stee011 name="construct.a.page3.stee011"
            {<point name="construct.a.page3.stee011" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.stee011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stee011
            #add-point:ON ACTION controlp INFIELD stee011 name="construct.c.page3.stee011"
            {<point name="construct.c.page3.stee011" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steesite
            #add-point:BEFORE FIELD steesite name="construct.b.page3.steesite"
            {<point name="construct.b.page3.steesite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steesite
            
            #add-point:AFTER FIELD steesite name="construct.a.page3.steesite"
            {<point name="construct.a.page3.steesite" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.steesite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steesite
            #add-point:ON ACTION controlp INFIELD steesite name="construct.c.page3.steesite"
            {<point name="construct.c.page3.steesite" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steeunit
            #add-point:BEFORE FIELD steeunit name="construct.b.page3.steeunit"
            {<point name="construct.b.page3.steeunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steeunit
            
            #add-point:AFTER FIELD steeunit name="construct.a.page3.steeunit"
            {<point name="construct.a.page3.steeunit" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.steeunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steeunit
            #add-point:ON ACTION controlp INFIELD steeunit name="construct.c.page3.steeunit"
            {<point name="construct.c.page3.steeunit" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table7 ON stegseq,steg001,steg002,steg002_desc,steg003,steg003_desc,steg004,steg005, 
          stegacti,stegsite,stegunit
           FROM s_detail4[1].stegseq,s_detail4[1].steg001,s_detail4[1].steg002,s_detail4[1].steg002_desc, 
               s_detail4[1].steg003,s_detail4[1].steg003_desc,s_detail4[1].steg004,s_detail4[1].steg005, 
               s_detail4[1].stegacti,s_detail4[1].stegsite,s_detail4[1].stegunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body7.before_construct"
            {<point name="cs.body7.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 7)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stegseq
            #add-point:BEFORE FIELD stegseq name="construct.b.page4.stegseq"
            {<point name="construct.b.page4.stegseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stegseq
            
            #add-point:AFTER FIELD stegseq name="construct.a.page4.stegseq"
            {<point name="construct.a.page4.stegseq" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.stegseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stegseq
            #add-point:ON ACTION controlp INFIELD stegseq name="construct.c.page4.stegseq"
            {<point name="construct.c.page4.stegseq" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steg001
            #add-point:BEFORE FIELD steg001 name="construct.b.page4.steg001"
            {<point name="construct.b.page4.steg001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steg001
            
            #add-point:AFTER FIELD steg001 name="construct.a.page4.steg001"
            {<point name="construct.a.page4.steg001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.steg001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steg001
            #add-point:ON ACTION controlp INFIELD steg001 name="construct.c.page4.steg001"
            {<point name="construct.c.page4.steg001" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page4.steg002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steg002
            #add-point:ON ACTION controlp INFIELD steg002 name="construct.c.page4.steg002"
            {<point name="construct.c.page4.steg002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steg002
            #add-point:BEFORE FIELD steg002 name="construct.b.page4.steg002"
            {<point name="construct.b.page4.steg002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steg002
            
            #add-point:AFTER FIELD steg002 name="construct.a.page4.steg002"
            {<point name="construct.a.page4.steg002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steg002_desc
            #add-point:BEFORE FIELD steg002_desc name="construct.b.page4.steg002_desc"
            {<point name="construct.b.page4.steg002_desc" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steg002_desc
            
            #add-point:AFTER FIELD steg002_desc name="construct.a.page4.steg002_desc"
            {<point name="construct.a.page4.steg002_desc" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.steg002_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steg002_desc
            #add-point:ON ACTION controlp INFIELD steg002_desc name="construct.c.page4.steg002_desc"
            {<point name="construct.c.page4.steg002_desc" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page4.steg003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steg003
            #add-point:ON ACTION controlp INFIELD steg003 name="construct.c.page4.steg003"
            {<point name="construct.c.page4.steg003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steg003
            #add-point:BEFORE FIELD steg003 name="construct.b.page4.steg003"
            {<point name="construct.b.page4.steg003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steg003
            
            #add-point:AFTER FIELD steg003 name="construct.a.page4.steg003"
            {<point name="construct.a.page4.steg003" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steg003_desc
            #add-point:BEFORE FIELD steg003_desc name="construct.b.page4.steg003_desc"
            {<point name="construct.b.page4.steg003_desc" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steg003_desc
            
            #add-point:AFTER FIELD steg003_desc name="construct.a.page4.steg003_desc"
            {<point name="construct.a.page4.steg003_desc" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.steg003_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steg003_desc
            #add-point:ON ACTION controlp INFIELD steg003_desc name="construct.c.page4.steg003_desc"
            {<point name="construct.c.page4.steg003_desc" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steg004
            #add-point:BEFORE FIELD steg004 name="construct.b.page4.steg004"
            {<point name="construct.b.page4.steg004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steg004
            
            #add-point:AFTER FIELD steg004 name="construct.a.page4.steg004"
            {<point name="construct.a.page4.steg004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.steg004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steg004
            #add-point:ON ACTION controlp INFIELD steg004 name="construct.c.page4.steg004"
            {<point name="construct.c.page4.steg004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steg005
            #add-point:BEFORE FIELD steg005 name="construct.b.page4.steg005"
            {<point name="construct.b.page4.steg005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steg005
            
            #add-point:AFTER FIELD steg005 name="construct.a.page4.steg005"
            {<point name="construct.a.page4.steg005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.steg005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steg005
            #add-point:ON ACTION controlp INFIELD steg005 name="construct.c.page4.steg005"
            {<point name="construct.c.page4.steg005" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stegacti
            #add-point:BEFORE FIELD stegacti name="construct.b.page4.stegacti"
            {<point name="construct.b.page4.stegacti" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stegacti
            
            #add-point:AFTER FIELD stegacti name="construct.a.page4.stegacti"
            {<point name="construct.a.page4.stegacti" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.stegacti
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stegacti
            #add-point:ON ACTION controlp INFIELD stegacti name="construct.c.page4.stegacti"
            {<point name="construct.c.page4.stegacti" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stegsite
            #add-point:BEFORE FIELD stegsite name="construct.b.page4.stegsite"
            {<point name="construct.b.page4.stegsite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stegsite
            
            #add-point:AFTER FIELD stegsite name="construct.a.page4.stegsite"
            {<point name="construct.a.page4.stegsite" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.stegsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stegsite
            #add-point:ON ACTION controlp INFIELD stegsite name="construct.c.page4.stegsite"
            {<point name="construct.c.page4.stegsite" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stegunit
            #add-point:BEFORE FIELD stegunit name="construct.b.page4.stegunit"
            {<point name="construct.b.page4.stegunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stegunit
            
            #add-point:AFTER FIELD stegunit name="construct.a.page4.stegunit"
            {<point name="construct.a.page4.stegunit" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.stegunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stegunit
            #add-point:ON ACTION controlp INFIELD stegunit name="construct.c.page4.stegunit"
            {<point name="construct.c.page4.stegunit" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table8 ON stehseq,steh001,steh002,steh003,stehacti,stehsite,stehunit
           FROM s_detail5[1].stehseq,s_detail5[1].steh001,s_detail5[1].steh002,s_detail5[1].steh003, 
               s_detail5[1].stehacti,s_detail5[1].stehsite,s_detail5[1].stehunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body8.before_construct"
            {<point name="cs.body8.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 8)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stehseq
            #add-point:BEFORE FIELD stehseq name="construct.b.page5.stehseq"
            {<point name="construct.b.page5.stehseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stehseq
            
            #add-point:AFTER FIELD stehseq name="construct.a.page5.stehseq"
            {<point name="construct.a.page5.stehseq" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.stehseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stehseq
            #add-point:ON ACTION controlp INFIELD stehseq name="construct.c.page5.stehseq"
            {<point name="construct.c.page5.stehseq" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steh001
            #add-point:BEFORE FIELD steh001 name="construct.b.page5.steh001"
            {<point name="construct.b.page5.steh001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steh001
            
            #add-point:AFTER FIELD steh001 name="construct.a.page5.steh001"
            {<point name="construct.a.page5.steh001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.steh001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steh001
            #add-point:ON ACTION controlp INFIELD steh001 name="construct.c.page5.steh001"
            {<point name="construct.c.page5.steh001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steh002
            #add-point:BEFORE FIELD steh002 name="construct.b.page5.steh002"
            {<point name="construct.b.page5.steh002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steh002
            
            #add-point:AFTER FIELD steh002 name="construct.a.page5.steh002"
            {<point name="construct.a.page5.steh002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.steh002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steh002
            #add-point:ON ACTION controlp INFIELD steh002 name="construct.c.page5.steh002"
            {<point name="construct.c.page5.steh002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steh003
            #add-point:BEFORE FIELD steh003 name="construct.b.page5.steh003"
            {<point name="construct.b.page5.steh003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steh003
            
            #add-point:AFTER FIELD steh003 name="construct.a.page5.steh003"
            {<point name="construct.a.page5.steh003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.steh003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steh003
            #add-point:ON ACTION controlp INFIELD steh003 name="construct.c.page5.steh003"
            {<point name="construct.c.page5.steh003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stehacti
            #add-point:BEFORE FIELD stehacti name="construct.b.page5.stehacti"
            {<point name="construct.b.page5.stehacti" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stehacti
            
            #add-point:AFTER FIELD stehacti name="construct.a.page5.stehacti"
            {<point name="construct.a.page5.stehacti" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.stehacti
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stehacti
            #add-point:ON ACTION controlp INFIELD stehacti name="construct.c.page5.stehacti"
            {<point name="construct.c.page5.stehacti" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stehsite
            #add-point:BEFORE FIELD stehsite name="construct.b.page5.stehsite"
            {<point name="construct.b.page5.stehsite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stehsite
            
            #add-point:AFTER FIELD stehsite name="construct.a.page5.stehsite"
            {<point name="construct.a.page5.stehsite" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.stehsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stehsite
            #add-point:ON ACTION controlp INFIELD stehsite name="construct.c.page5.stehsite"
            {<point name="construct.c.page5.stehsite" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stehunit
            #add-point:BEFORE FIELD stehunit name="construct.b.page5.stehunit"
            {<point name="construct.b.page5.stehunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stehunit
            
            #add-point:AFTER FIELD stehunit name="construct.a.page5.stehunit"
            {<point name="construct.a.page5.stehunit" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.stehunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stehunit
            #add-point:ON ACTION controlp INFIELD stehunit name="construct.c.page5.stehunit"
            {<point name="construct.c.page5.stehunit" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table9 ON steiseq,stei001,stei002,stei003,stei005,stei006,stei004,stei010,stei007, 
          stei008,stei009,steiacti,stei011,stei012,steisite,steiunit
           FROM s_detail6[1].steiseq,s_detail6[1].stei001,s_detail6[1].stei002,s_detail6[1].stei003, 
               s_detail6[1].stei005,s_detail6[1].stei006,s_detail6[1].stei004,s_detail6[1].stei010,s_detail6[1].stei007, 
               s_detail6[1].stei008,s_detail6[1].stei009,s_detail6[1].steiacti,s_detail6[1].stei011, 
               s_detail6[1].stei012,s_detail6[1].steisite,s_detail6[1].steiunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body9.before_construct"
            {<point name="cs.body9.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 9)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steiseq
            #add-point:BEFORE FIELD steiseq name="construct.b.page6.steiseq"
            {<point name="construct.b.page6.steiseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steiseq
            
            #add-point:AFTER FIELD steiseq name="construct.a.page6.steiseq"
            {<point name="construct.a.page6.steiseq" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.steiseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steiseq
            #add-point:ON ACTION controlp INFIELD steiseq name="construct.c.page6.steiseq"
            {<point name="construct.c.page6.steiseq" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stei001
            #add-point:BEFORE FIELD stei001 name="construct.b.page6.stei001"
            {<point name="construct.b.page6.stei001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stei001
            
            #add-point:AFTER FIELD stei001 name="construct.a.page6.stei001"
            {<point name="construct.a.page6.stei001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.stei001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stei001
            #add-point:ON ACTION controlp INFIELD stei001 name="construct.c.page6.stei001"
            {<point name="construct.c.page6.stei001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stei002
            #add-point:BEFORE FIELD stei002 name="construct.b.page6.stei002"
            {<point name="construct.b.page6.stei002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stei002
            
            #add-point:AFTER FIELD stei002 name="construct.a.page6.stei002"
            {<point name="construct.a.page6.stei002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.stei002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stei002
            #add-point:ON ACTION controlp INFIELD stei002 name="construct.c.page6.stei002"
            {<point name="construct.c.page6.stei002" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page6.stei003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stei003
            #add-point:ON ACTION controlp INFIELD stei003 name="construct.c.page6.stei003"
            {<point name="construct.c.page6.stei003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stei003
            #add-point:BEFORE FIELD stei003 name="construct.b.page6.stei003"
            {<point name="construct.b.page6.stei003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stei003
            
            #add-point:AFTER FIELD stei003 name="construct.a.page6.stei003"
            {<point name="construct.a.page6.stei003" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stei005
            #add-point:BEFORE FIELD stei005 name="construct.b.page6.stei005"
            {<point name="construct.b.page6.stei005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stei005
            
            #add-point:AFTER FIELD stei005 name="construct.a.page6.stei005"
            {<point name="construct.a.page6.stei005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.stei005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stei005
            #add-point:ON ACTION controlp INFIELD stei005 name="construct.c.page6.stei005"
            {<point name="construct.c.page6.stei005" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stei006
            #add-point:BEFORE FIELD stei006 name="construct.b.page6.stei006"
            {<point name="construct.b.page6.stei006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stei006
            
            #add-point:AFTER FIELD stei006 name="construct.a.page6.stei006"
            {<point name="construct.a.page6.stei006" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.stei006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stei006
            #add-point:ON ACTION controlp INFIELD stei006 name="construct.c.page6.stei006"
            {<point name="construct.c.page6.stei006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stei004
            #add-point:BEFORE FIELD stei004 name="construct.b.page6.stei004"
            {<point name="construct.b.page6.stei004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stei004
            
            #add-point:AFTER FIELD stei004 name="construct.a.page6.stei004"
            {<point name="construct.a.page6.stei004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.stei004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stei004
            #add-point:ON ACTION controlp INFIELD stei004 name="construct.c.page6.stei004"
            {<point name="construct.c.page6.stei004" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page6.stei010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stei010
            #add-point:ON ACTION controlp INFIELD stei010 name="construct.c.page6.stei010"
            {<point name="construct.c.page6.stei010" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stei010
            #add-point:BEFORE FIELD stei010 name="construct.b.page6.stei010"
            {<point name="construct.b.page6.stei010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stei010
            
            #add-point:AFTER FIELD stei010 name="construct.a.page6.stei010"
            {<point name="construct.a.page6.stei010" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stei007
            #add-point:BEFORE FIELD stei007 name="construct.b.page6.stei007"
            {<point name="construct.b.page6.stei007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stei007
            
            #add-point:AFTER FIELD stei007 name="construct.a.page6.stei007"
            {<point name="construct.a.page6.stei007" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.stei007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stei007
            #add-point:ON ACTION controlp INFIELD stei007 name="construct.c.page6.stei007"
            {<point name="construct.c.page6.stei007" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stei008
            #add-point:BEFORE FIELD stei008 name="construct.b.page6.stei008"
            {<point name="construct.b.page6.stei008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stei008
            
            #add-point:AFTER FIELD stei008 name="construct.a.page6.stei008"
            {<point name="construct.a.page6.stei008" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.stei008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stei008
            #add-point:ON ACTION controlp INFIELD stei008 name="construct.c.page6.stei008"
            {<point name="construct.c.page6.stei008" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stei009
            #add-point:BEFORE FIELD stei009 name="construct.b.page6.stei009"
            {<point name="construct.b.page6.stei009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stei009
            
            #add-point:AFTER FIELD stei009 name="construct.a.page6.stei009"
            {<point name="construct.a.page6.stei009" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.stei009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stei009
            #add-point:ON ACTION controlp INFIELD stei009 name="construct.c.page6.stei009"
            {<point name="construct.c.page6.stei009" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steiacti
            #add-point:BEFORE FIELD steiacti name="construct.b.page6.steiacti"
            {<point name="construct.b.page6.steiacti" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steiacti
            
            #add-point:AFTER FIELD steiacti name="construct.a.page6.steiacti"
            {<point name="construct.a.page6.steiacti" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.steiacti
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steiacti
            #add-point:ON ACTION controlp INFIELD steiacti name="construct.c.page6.steiacti"
            {<point name="construct.c.page6.steiacti" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page6.stei011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stei011
            #add-point:ON ACTION controlp INFIELD stei011 name="construct.c.page6.stei011"
            {<point name="construct.c.page6.stei011" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stei011
            #add-point:BEFORE FIELD stei011 name="construct.b.page6.stei011"
            {<point name="construct.b.page6.stei011" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stei011
            
            #add-point:AFTER FIELD stei011 name="construct.a.page6.stei011"
            {<point name="construct.a.page6.stei011" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stei012
            #add-point:BEFORE FIELD stei012 name="construct.b.page6.stei012"
            {<point name="construct.b.page6.stei012" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stei012
            
            #add-point:AFTER FIELD stei012 name="construct.a.page6.stei012"
            {<point name="construct.a.page6.stei012" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.stei012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stei012
            #add-point:ON ACTION controlp INFIELD stei012 name="construct.c.page6.stei012"
            {<point name="construct.c.page6.stei012" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steisite
            #add-point:BEFORE FIELD steisite name="construct.b.page6.steisite"
            {<point name="construct.b.page6.steisite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steisite
            
            #add-point:AFTER FIELD steisite name="construct.a.page6.steisite"
            {<point name="construct.a.page6.steisite" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.steisite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steisite
            #add-point:ON ACTION controlp INFIELD steisite name="construct.c.page6.steisite"
            {<point name="construct.c.page6.steisite" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steiunit
            #add-point:BEFORE FIELD steiunit name="construct.b.page6.steiunit"
            {<point name="construct.b.page6.steiunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steiunit
            
            #add-point:AFTER FIELD steiunit name="construct.a.page6.steiunit"
            {<point name="construct.a.page6.steiunit" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.steiunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steiunit
            #add-point:ON ACTION controlp INFIELD steiunit name="construct.c.page6.steiunit"
            {<point name="construct.c.page6.steiunit" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table10 ON stejseq,stej001,stej002,stej003,stej004,stej005,stej006,stejsite,stejunit 

           FROM s_detail7[1].stejseq,s_detail7[1].stej001,s_detail7[1].stej002,s_detail7[1].stej003, 
               s_detail7[1].stej004,s_detail7[1].stej005,s_detail7[1].stej006,s_detail7[1].stejsite, 
               s_detail7[1].stejunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body10.before_construct"
            {<point name="cs.body10.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 10)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stejseq
            #add-point:BEFORE FIELD stejseq name="construct.b.page7.stejseq"
            {<point name="construct.b.page7.stejseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stejseq
            
            #add-point:AFTER FIELD stejseq name="construct.a.page7.stejseq"
            {<point name="construct.a.page7.stejseq" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.stejseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stejseq
            #add-point:ON ACTION controlp INFIELD stejseq name="construct.c.page7.stejseq"
            {<point name="construct.c.page7.stejseq" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stej001
            #add-point:BEFORE FIELD stej001 name="construct.b.page7.stej001"
            {<point name="construct.b.page7.stej001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stej001
            
            #add-point:AFTER FIELD stej001 name="construct.a.page7.stej001"
            {<point name="construct.a.page7.stej001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.stej001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stej001
            #add-point:ON ACTION controlp INFIELD stej001 name="construct.c.page7.stej001"
            {<point name="construct.c.page7.stej001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stej002
            #add-point:BEFORE FIELD stej002 name="construct.b.page7.stej002"
            {<point name="construct.b.page7.stej002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stej002
            
            #add-point:AFTER FIELD stej002 name="construct.a.page7.stej002"
            {<point name="construct.a.page7.stej002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.stej002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stej002
            #add-point:ON ACTION controlp INFIELD stej002 name="construct.c.page7.stej002"
            {<point name="construct.c.page7.stej002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stej003
            #add-point:BEFORE FIELD stej003 name="construct.b.page7.stej003"
            {<point name="construct.b.page7.stej003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stej003
            
            #add-point:AFTER FIELD stej003 name="construct.a.page7.stej003"
            {<point name="construct.a.page7.stej003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.stej003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stej003
            #add-point:ON ACTION controlp INFIELD stej003 name="construct.c.page7.stej003"
            {<point name="construct.c.page7.stej003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stej004
            #add-point:BEFORE FIELD stej004 name="construct.b.page7.stej004"
            {<point name="construct.b.page7.stej004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stej004
            
            #add-point:AFTER FIELD stej004 name="construct.a.page7.stej004"
            {<point name="construct.a.page7.stej004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.stej004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stej004
            #add-point:ON ACTION controlp INFIELD stej004 name="construct.c.page7.stej004"
            {<point name="construct.c.page7.stej004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stej005
            #add-point:BEFORE FIELD stej005 name="construct.b.page7.stej005"
            {<point name="construct.b.page7.stej005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stej005
            
            #add-point:AFTER FIELD stej005 name="construct.a.page7.stej005"
            {<point name="construct.a.page7.stej005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.stej005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stej005
            #add-point:ON ACTION controlp INFIELD stej005 name="construct.c.page7.stej005"
            {<point name="construct.c.page7.stej005" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stej006
            #add-point:BEFORE FIELD stej006 name="construct.b.page7.stej006"
            {<point name="construct.b.page7.stej006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stej006
            
            #add-point:AFTER FIELD stej006 name="construct.a.page7.stej006"
            {<point name="construct.a.page7.stej006" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.stej006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stej006
            #add-point:ON ACTION controlp INFIELD stej006 name="construct.c.page7.stej006"
            {<point name="construct.c.page7.stej006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stejsite
            #add-point:BEFORE FIELD stejsite name="construct.b.page7.stejsite"
            {<point name="construct.b.page7.stejsite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stejsite
            
            #add-point:AFTER FIELD stejsite name="construct.a.page7.stejsite"
            {<point name="construct.a.page7.stejsite" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.stejsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stejsite
            #add-point:ON ACTION controlp INFIELD stejsite name="construct.c.page7.stejsite"
            {<point name="construct.c.page7.stejsite" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stejunit
            #add-point:BEFORE FIELD stejunit name="construct.b.page7.stejunit"
            {<point name="construct.b.page7.stejunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stejunit
            
            #add-point:AFTER FIELD stejunit name="construct.a.page7.stejunit"
            {<point name="construct.a.page7.stejunit" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.stejunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stejunit
            #add-point:ON ACTION controlp INFIELD stejunit name="construct.c.page7.stejunit"
            {<point name="construct.c.page7.stejunit" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table11 ON stef001,stefseq,stef002,stef003,stef004,stef005,stef005_desc,stef006, 
          stef007,stef010,stef008,stef011,stef009,stefsite,stefunit
           FROM s_detail9[1].stef001,s_detail9[1].stefseq,s_detail9[1].stef002,s_detail9[1].stef003, 
               s_detail9[1].stef004,s_detail9[1].stef005,s_detail9[1].stef005_desc,s_detail9[1].stef006, 
               s_detail9[1].stef007,s_detail9[1].stef010,s_detail9[1].stef008,s_detail9[1].stef011,s_detail9[1].stef009, 
               s_detail9[1].stefsite,s_detail9[1].stefunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body11.before_construct"
            {<point name="cs.body11.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 11)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stef001
            #add-point:BEFORE FIELD stef001 name="construct.b.page9.stef001"
            {<point name="construct.b.page9.stef001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stef001
            
            #add-point:AFTER FIELD stef001 name="construct.a.page9.stef001"
            {<point name="construct.a.page9.stef001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.stef001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stef001
            #add-point:ON ACTION controlp INFIELD stef001 name="construct.c.page9.stef001"
            {<point name="construct.c.page9.stef001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stefseq
            #add-point:BEFORE FIELD stefseq name="construct.b.page9.stefseq"
            {<point name="construct.b.page9.stefseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stefseq
            
            #add-point:AFTER FIELD stefseq name="construct.a.page9.stefseq"
            {<point name="construct.a.page9.stefseq" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.stefseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stefseq
            #add-point:ON ACTION controlp INFIELD stefseq name="construct.c.page9.stefseq"
            {<point name="construct.c.page9.stefseq" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page9.stef002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stef002
            #add-point:ON ACTION controlp INFIELD stef002 name="construct.c.page9.stef002"
            {<point name="construct.c.page9.stef002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stef002
            #add-point:BEFORE FIELD stef002 name="construct.b.page9.stef002"
            {<point name="construct.b.page9.stef002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stef002
            
            #add-point:AFTER FIELD stef002 name="construct.a.page9.stef002"
            {<point name="construct.a.page9.stef002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stef003
            #add-point:BEFORE FIELD stef003 name="construct.b.page9.stef003"
            {<point name="construct.b.page9.stef003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stef003
            
            #add-point:AFTER FIELD stef003 name="construct.a.page9.stef003"
            {<point name="construct.a.page9.stef003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.stef003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stef003
            #add-point:ON ACTION controlp INFIELD stef003 name="construct.c.page9.stef003"
            {<point name="construct.c.page9.stef003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stef004
            #add-point:BEFORE FIELD stef004 name="construct.b.page9.stef004"
            {<point name="construct.b.page9.stef004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stef004
            
            #add-point:AFTER FIELD stef004 name="construct.a.page9.stef004"
            {<point name="construct.a.page9.stef004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.stef004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stef004
            #add-point:ON ACTION controlp INFIELD stef004 name="construct.c.page9.stef004"
            {<point name="construct.c.page9.stef004" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page9.stef005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stef005
            #add-point:ON ACTION controlp INFIELD stef005 name="construct.c.page9.stef005"
            {<point name="construct.c.page9.stef005" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stef005
            #add-point:BEFORE FIELD stef005 name="construct.b.page9.stef005"
            {<point name="construct.b.page9.stef005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stef005
            
            #add-point:AFTER FIELD stef005 name="construct.a.page9.stef005"
            {<point name="construct.a.page9.stef005" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stef005_desc
            #add-point:BEFORE FIELD stef005_desc name="construct.b.page9.stef005_desc"
            {<point name="construct.b.page9.stef005_desc" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stef005_desc
            
            #add-point:AFTER FIELD stef005_desc name="construct.a.page9.stef005_desc"
            {<point name="construct.a.page9.stef005_desc" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.stef005_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stef005_desc
            #add-point:ON ACTION controlp INFIELD stef005_desc name="construct.c.page9.stef005_desc"
            {<point name="construct.c.page9.stef005_desc" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stef006
            #add-point:BEFORE FIELD stef006 name="construct.b.page9.stef006"
            {<point name="construct.b.page9.stef006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stef006
            
            #add-point:AFTER FIELD stef006 name="construct.a.page9.stef006"
            {<point name="construct.a.page9.stef006" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.stef006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stef006
            #add-point:ON ACTION controlp INFIELD stef006 name="construct.c.page9.stef006"
            {<point name="construct.c.page9.stef006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stef007
            #add-point:BEFORE FIELD stef007 name="construct.b.page9.stef007"
            {<point name="construct.b.page9.stef007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stef007
            
            #add-point:AFTER FIELD stef007 name="construct.a.page9.stef007"
            {<point name="construct.a.page9.stef007" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.stef007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stef007
            #add-point:ON ACTION controlp INFIELD stef007 name="construct.c.page9.stef007"
            {<point name="construct.c.page9.stef007" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stef010
            #add-point:BEFORE FIELD stef010 name="construct.b.page9.stef010"
            {<point name="construct.b.page9.stef010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stef010
            
            #add-point:AFTER FIELD stef010 name="construct.a.page9.stef010"
            {<point name="construct.a.page9.stef010" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.stef010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stef010
            #add-point:ON ACTION controlp INFIELD stef010 name="construct.c.page9.stef010"
            {<point name="construct.c.page9.stef010" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stef008
            #add-point:BEFORE FIELD stef008 name="construct.b.page9.stef008"
            {<point name="construct.b.page9.stef008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stef008
            
            #add-point:AFTER FIELD stef008 name="construct.a.page9.stef008"
            {<point name="construct.a.page9.stef008" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.stef008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stef008
            #add-point:ON ACTION controlp INFIELD stef008 name="construct.c.page9.stef008"
            {<point name="construct.c.page9.stef008" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stef011
            #add-point:BEFORE FIELD stef011 name="construct.b.page9.stef011"
            {<point name="construct.b.page9.stef011" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stef011
            
            #add-point:AFTER FIELD stef011 name="construct.a.page9.stef011"
            {<point name="construct.a.page9.stef011" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.stef011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stef011
            #add-point:ON ACTION controlp INFIELD stef011 name="construct.c.page9.stef011"
            {<point name="construct.c.page9.stef011" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stef009
            #add-point:BEFORE FIELD stef009 name="construct.b.page9.stef009"
            {<point name="construct.b.page9.stef009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stef009
            
            #add-point:AFTER FIELD stef009 name="construct.a.page9.stef009"
            {<point name="construct.a.page9.stef009" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.stef009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stef009
            #add-point:ON ACTION controlp INFIELD stef009 name="construct.c.page9.stef009"
            {<point name="construct.c.page9.stef009" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stefsite
            #add-point:BEFORE FIELD stefsite name="construct.b.page9.stefsite"
            {<point name="construct.b.page9.stefsite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stefsite
            
            #add-point:AFTER FIELD stefsite name="construct.a.page9.stefsite"
            {<point name="construct.a.page9.stefsite" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.stefsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stefsite
            #add-point:ON ACTION controlp INFIELD stefsite name="construct.c.page9.stefsite"
            {<point name="construct.c.page9.stefsite" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stefunit
            #add-point:BEFORE FIELD stefunit name="construct.b.page9.stefunit"
            {<point name="construct.b.page9.stefunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stefunit
            
            #add-point:AFTER FIELD stefunit name="construct.a.page9.stefunit"
            {<point name="construct.a.page9.stefunit" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.stefunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stefunit
            #add-point:ON ACTION controlp INFIELD stefunit name="construct.c.page9.stefunit"
            {<point name="construct.c.page9.stefunit" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
 
 
      
      CONSTRUCT g_wc2_table12 ON stedseq1,sted001,sted002,sted003,sted003_desc,sted004,sted005,sted006, 
          sted007,sted008,sted009,stedsite,stedunit
           FROM s_detail8[1].stedseq1,s_detail8[1].sted001,s_detail8[1].sted002,s_detail8[1].sted003, 
               s_detail8[1].sted003_desc,s_detail8[1].sted004,s_detail8[1].sted005,s_detail8[1].sted006, 
               s_detail8[1].sted007,s_detail8[1].sted008,s_detail8[1].sted009,s_detail8[1].stedsite, 
               s_detail8[1].stedunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body12.before_construct"
            {<point name="cs.body12.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 12)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stedseq1
            #add-point:BEFORE FIELD stedseq1 name="construct.b.page8.stedseq1"
            {<point name="construct.b.page8.stedseq1" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stedseq1
            
            #add-point:AFTER FIELD stedseq1 name="construct.a.page8.stedseq1"
            {<point name="construct.a.page8.stedseq1" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.stedseq1
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stedseq1
            #add-point:ON ACTION controlp INFIELD stedseq1 name="construct.c.page8.stedseq1"
            {<point name="construct.c.page8.stedseq1" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sted001
            #add-point:BEFORE FIELD sted001 name="construct.b.page8.sted001"
            {<point name="construct.b.page8.sted001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sted001
            
            #add-point:AFTER FIELD sted001 name="construct.a.page8.sted001"
            {<point name="construct.a.page8.sted001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.sted001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sted001
            #add-point:ON ACTION controlp INFIELD sted001 name="construct.c.page8.sted001"
            {<point name="construct.c.page8.sted001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sted002
            #add-point:BEFORE FIELD sted002 name="construct.b.page8.sted002"
            {<point name="construct.b.page8.sted002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sted002
            
            #add-point:AFTER FIELD sted002 name="construct.a.page8.sted002"
            {<point name="construct.a.page8.sted002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.sted002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sted002
            #add-point:ON ACTION controlp INFIELD sted002 name="construct.c.page8.sted002"
            {<point name="construct.c.page8.sted002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sted003
            #add-point:BEFORE FIELD sted003 name="construct.b.page8.sted003"
            {<point name="construct.b.page8.sted003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sted003
            
            #add-point:AFTER FIELD sted003 name="construct.a.page8.sted003"
            {<point name="construct.a.page8.sted003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.sted003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sted003
            #add-point:ON ACTION controlp INFIELD sted003 name="construct.c.page8.sted003"
            {<point name="construct.c.page8.sted003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sted003_desc
            #add-point:BEFORE FIELD sted003_desc name="construct.b.page8.sted003_desc"
            {<point name="construct.b.page8.sted003_desc" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sted003_desc
            
            #add-point:AFTER FIELD sted003_desc name="construct.a.page8.sted003_desc"
            {<point name="construct.a.page8.sted003_desc" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.sted003_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sted003_desc
            #add-point:ON ACTION controlp INFIELD sted003_desc name="construct.c.page8.sted003_desc"
            {<point name="construct.c.page8.sted003_desc" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page8.sted004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sted004
            #add-point:ON ACTION controlp INFIELD sted004 name="construct.c.page8.sted004"
            {<point name="construct.c.page8.sted004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sted004
            #add-point:BEFORE FIELD sted004 name="construct.b.page8.sted004"
            {<point name="construct.b.page8.sted004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sted004
            
            #add-point:AFTER FIELD sted004 name="construct.a.page8.sted004"
            {<point name="construct.a.page8.sted004" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sted005
            #add-point:BEFORE FIELD sted005 name="construct.b.page8.sted005"
            {<point name="construct.b.page8.sted005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sted005
            
            #add-point:AFTER FIELD sted005 name="construct.a.page8.sted005"
            {<point name="construct.a.page8.sted005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.sted005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sted005
            #add-point:ON ACTION controlp INFIELD sted005 name="construct.c.page8.sted005"
            {<point name="construct.c.page8.sted005" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sted006
            #add-point:BEFORE FIELD sted006 name="construct.b.page8.sted006"
            {<point name="construct.b.page8.sted006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sted006
            
            #add-point:AFTER FIELD sted006 name="construct.a.page8.sted006"
            {<point name="construct.a.page8.sted006" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.sted006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sted006
            #add-point:ON ACTION controlp INFIELD sted006 name="construct.c.page8.sted006"
            {<point name="construct.c.page8.sted006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sted007
            #add-point:BEFORE FIELD sted007 name="construct.b.page8.sted007"
            {<point name="construct.b.page8.sted007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sted007
            
            #add-point:AFTER FIELD sted007 name="construct.a.page8.sted007"
            {<point name="construct.a.page8.sted007" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.sted007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sted007
            #add-point:ON ACTION controlp INFIELD sted007 name="construct.c.page8.sted007"
            {<point name="construct.c.page8.sted007" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sted008
            #add-point:BEFORE FIELD sted008 name="construct.b.page8.sted008"
            {<point name="construct.b.page8.sted008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sted008
            
            #add-point:AFTER FIELD sted008 name="construct.a.page8.sted008"
            {<point name="construct.a.page8.sted008" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.sted008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sted008
            #add-point:ON ACTION controlp INFIELD sted008 name="construct.c.page8.sted008"
            {<point name="construct.c.page8.sted008" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sted009
            #add-point:BEFORE FIELD sted009 name="construct.b.page8.sted009"
            {<point name="construct.b.page8.sted009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sted009
            
            #add-point:AFTER FIELD sted009 name="construct.a.page8.sted009"
            {<point name="construct.a.page8.sted009" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.sted009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sted009
            #add-point:ON ACTION controlp INFIELD sted009 name="construct.c.page8.sted009"
            {<point name="construct.c.page8.sted009" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stedsite
            #add-point:BEFORE FIELD stedsite name="construct.b.page8.stedsite"
            {<point name="construct.b.page8.stedsite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stedsite
            
            #add-point:AFTER FIELD stedsite name="construct.a.page8.stedsite"
            {<point name="construct.a.page8.stedsite" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.stedsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stedsite
            #add-point:ON ACTION controlp INFIELD stedsite name="construct.c.page8.stedsite"
            {<point name="construct.c.page8.stedsite" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stedunit
            #add-point:BEFORE FIELD stedunit name="construct.b.page8.stedunit"
            {<point name="construct.b.page8.stedunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stedunit
            
            #add-point:AFTER FIELD stedunit name="construct.a.page8.stedunit"
            {<point name="construct.a.page8.stedunit" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.stedunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stedunit
            #add-point:ON ACTION controlp INFIELD stedunit name="construct.c.page8.stedunit"
            {<point name="construct.c.page8.stedunit" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
 
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
            INITIALIZE g_wc2_table2 TO NULL
 
            INITIALIZE g_wc2_table3 TO NULL
 
            INITIALIZE g_wc2_table4 TO NULL
 
            INITIALIZE g_wc2_table5 TO NULL
 
            INITIALIZE g_wc2_table6 TO NULL
 
            INITIALIZE g_wc2_table7 TO NULL
 
            INITIALIZE g_wc2_table8 TO NULL
 
            INITIALIZE g_wc2_table9 TO NULL
 
            INITIALIZE g_wc2_table10 TO NULL
 
            INITIALIZE g_wc2_table11 TO NULL
 
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "stea_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "steb_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "stek_t" 
                     LET g_wc2_table2 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "stel_t" 
                     LET g_wc2_table3 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "stew_t" 
                     LET g_wc2_table4 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "stec_t" 
                     LET g_wc2_table5 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "stee_t" 
                     LET g_wc2_table6 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "steg_t" 
                     LET g_wc2_table7 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "steh_t" 
                     LET g_wc2_table8 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "stei_t" 
                     LET g_wc2_table9 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "stej_t" 
                     LET g_wc2_table10 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "stef_t" 
                     LET g_wc2_table11 = la_wc[li_idx].wc
 
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
   IF g_wc2_table4 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
   END IF
 
   IF g_wc2_table5 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
   END IF
 
   IF g_wc2_table6 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
   END IF
 
   IF g_wc2_table7 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
   END IF
 
   IF g_wc2_table8 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table8
   END IF
 
   IF g_wc2_table9 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table9
   END IF
 
   IF g_wc2_table10 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table10
   END IF
 
   IF g_wc2_table11 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table11
   END IF
 
 
 
   IF g_wc2_table12 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table12
   END IF
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION

{</section>}

{<section id="astt401.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION astt401_filter()
   #add-point:filter段define name="filter.define_customerization"
   {<point name="filter.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   {<point name="filter.define"/>}
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   {<point name="filter.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON steadocno,steadocdt,stea000,stea001,stea002,stea003,stea004,stea005,stea006, 
          stea007,stea008,stea009,stea010,stea011,stea012,stea013,stea014,stea015,stea016,stea017,stea018, 
          stea019,stea020,stea021,stea022,stea023,stea024,stea025,stea026,stea027,stea028,stea029,stea030, 
          stea031,stea032,stea033,stea034,stea035,stea036,stea037,stea038,stea039,stea040,stea041,stea042, 
          stea043,stea044,stea045,stea046,stea047,stea048,stea049,steaunit,steasite
                          FROM s_browse[1].b_steadocno,s_browse[1].b_steadocdt,s_browse[1].b_stea000, 
                              s_browse[1].b_stea001,s_browse[1].b_stea002,s_browse[1].b_stea003,s_browse[1].b_stea004, 
                              s_browse[1].b_stea005,s_browse[1].b_stea006,s_browse[1].b_stea007,s_browse[1].b_stea008, 
                              s_browse[1].b_stea009,s_browse[1].b_stea010,s_browse[1].b_stea011,s_browse[1].b_stea012, 
                              s_browse[1].b_stea013,s_browse[1].b_stea014,s_browse[1].b_stea015,s_browse[1].b_stea016, 
                              s_browse[1].b_stea017,s_browse[1].b_stea018,s_browse[1].b_stea019,s_browse[1].b_stea020, 
                              s_browse[1].b_stea021,s_browse[1].b_stea022,s_browse[1].b_stea023,s_browse[1].b_stea024, 
                              s_browse[1].b_stea025,s_browse[1].b_stea026,s_browse[1].b_stea027,s_browse[1].b_stea028, 
                              s_browse[1].b_stea029,s_browse[1].b_stea030,s_browse[1].b_stea031,s_browse[1].b_stea032, 
                              s_browse[1].b_stea033,s_browse[1].b_stea034,s_browse[1].b_stea035,s_browse[1].b_stea036, 
                              s_browse[1].b_stea037,s_browse[1].b_stea038,s_browse[1].b_stea039,s_browse[1].b_stea040, 
                              s_browse[1].b_stea041,s_browse[1].b_stea042,s_browse[1].b_stea043,s_browse[1].b_stea044, 
                              s_browse[1].b_stea045,s_browse[1].b_stea046,s_browse[1].b_stea047,s_browse[1].b_stea048, 
                              s_browse[1].b_stea049,s_browse[1].b_steaunit,s_browse[1].b_steasite
 
         BEFORE CONSTRUCT
               DISPLAY astt401_filter_parser('steadocno') TO s_browse[1].b_steadocno
            DISPLAY astt401_filter_parser('steadocdt') TO s_browse[1].b_steadocdt
            DISPLAY astt401_filter_parser('stea000') TO s_browse[1].b_stea000
            DISPLAY astt401_filter_parser('stea001') TO s_browse[1].b_stea001
            DISPLAY astt401_filter_parser('stea002') TO s_browse[1].b_stea002
            DISPLAY astt401_filter_parser('stea003') TO s_browse[1].b_stea003
            DISPLAY astt401_filter_parser('stea004') TO s_browse[1].b_stea004
            DISPLAY astt401_filter_parser('stea005') TO s_browse[1].b_stea005
            DISPLAY astt401_filter_parser('stea006') TO s_browse[1].b_stea006
            DISPLAY astt401_filter_parser('stea007') TO s_browse[1].b_stea007
            DISPLAY astt401_filter_parser('stea008') TO s_browse[1].b_stea008
            DISPLAY astt401_filter_parser('stea009') TO s_browse[1].b_stea009
            DISPLAY astt401_filter_parser('stea010') TO s_browse[1].b_stea010
            DISPLAY astt401_filter_parser('stea011') TO s_browse[1].b_stea011
            DISPLAY astt401_filter_parser('stea012') TO s_browse[1].b_stea012
            DISPLAY astt401_filter_parser('stea013') TO s_browse[1].b_stea013
            DISPLAY astt401_filter_parser('stea014') TO s_browse[1].b_stea014
            DISPLAY astt401_filter_parser('stea015') TO s_browse[1].b_stea015
            DISPLAY astt401_filter_parser('stea016') TO s_browse[1].b_stea016
            DISPLAY astt401_filter_parser('stea017') TO s_browse[1].b_stea017
            DISPLAY astt401_filter_parser('stea018') TO s_browse[1].b_stea018
            DISPLAY astt401_filter_parser('stea019') TO s_browse[1].b_stea019
            DISPLAY astt401_filter_parser('stea020') TO s_browse[1].b_stea020
            DISPLAY astt401_filter_parser('stea021') TO s_browse[1].b_stea021
            DISPLAY astt401_filter_parser('stea022') TO s_browse[1].b_stea022
            DISPLAY astt401_filter_parser('stea023') TO s_browse[1].b_stea023
            DISPLAY astt401_filter_parser('stea024') TO s_browse[1].b_stea024
            DISPLAY astt401_filter_parser('stea025') TO s_browse[1].b_stea025
            DISPLAY astt401_filter_parser('stea026') TO s_browse[1].b_stea026
            DISPLAY astt401_filter_parser('stea027') TO s_browse[1].b_stea027
            DISPLAY astt401_filter_parser('stea028') TO s_browse[1].b_stea028
            DISPLAY astt401_filter_parser('stea029') TO s_browse[1].b_stea029
            DISPLAY astt401_filter_parser('stea030') TO s_browse[1].b_stea030
            DISPLAY astt401_filter_parser('stea031') TO s_browse[1].b_stea031
            DISPLAY astt401_filter_parser('stea032') TO s_browse[1].b_stea032
            DISPLAY astt401_filter_parser('stea033') TO s_browse[1].b_stea033
            DISPLAY astt401_filter_parser('stea034') TO s_browse[1].b_stea034
            DISPLAY astt401_filter_parser('stea035') TO s_browse[1].b_stea035
            DISPLAY astt401_filter_parser('stea036') TO s_browse[1].b_stea036
            DISPLAY astt401_filter_parser('stea037') TO s_browse[1].b_stea037
            DISPLAY astt401_filter_parser('stea038') TO s_browse[1].b_stea038
            DISPLAY astt401_filter_parser('stea039') TO s_browse[1].b_stea039
            DISPLAY astt401_filter_parser('stea040') TO s_browse[1].b_stea040
            DISPLAY astt401_filter_parser('stea041') TO s_browse[1].b_stea041
            DISPLAY astt401_filter_parser('stea042') TO s_browse[1].b_stea042
            DISPLAY astt401_filter_parser('stea043') TO s_browse[1].b_stea043
            DISPLAY astt401_filter_parser('stea044') TO s_browse[1].b_stea044
            DISPLAY astt401_filter_parser('stea045') TO s_browse[1].b_stea045
            DISPLAY astt401_filter_parser('stea046') TO s_browse[1].b_stea046
            DISPLAY astt401_filter_parser('stea047') TO s_browse[1].b_stea047
            DISPLAY astt401_filter_parser('stea048') TO s_browse[1].b_stea048
            DISPLAY astt401_filter_parser('stea049') TO s_browse[1].b_stea049
            DISPLAY astt401_filter_parser('steaunit') TO s_browse[1].b_steaunit
            DISPLAY astt401_filter_parser('steasite') TO s_browse[1].b_steasite
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL astt401_filter_show('steadocno')
   CALL astt401_filter_show('steadocdt')
   CALL astt401_filter_show('stea000')
   CALL astt401_filter_show('stea001')
   CALL astt401_filter_show('stea002')
   CALL astt401_filter_show('stea003')
   CALL astt401_filter_show('stea004')
   CALL astt401_filter_show('stea005')
   CALL astt401_filter_show('stea006')
   CALL astt401_filter_show('stea007')
   CALL astt401_filter_show('stea008')
   CALL astt401_filter_show('stea009')
   CALL astt401_filter_show('stea010')
   CALL astt401_filter_show('stea011')
   CALL astt401_filter_show('stea012')
   CALL astt401_filter_show('stea013')
   CALL astt401_filter_show('stea014')
   CALL astt401_filter_show('stea015')
   CALL astt401_filter_show('stea016')
   CALL astt401_filter_show('stea017')
   CALL astt401_filter_show('stea018')
   CALL astt401_filter_show('stea019')
   CALL astt401_filter_show('stea020')
   CALL astt401_filter_show('stea021')
   CALL astt401_filter_show('stea022')
   CALL astt401_filter_show('stea023')
   CALL astt401_filter_show('stea024')
   CALL astt401_filter_show('stea025')
   CALL astt401_filter_show('stea026')
   CALL astt401_filter_show('stea027')
   CALL astt401_filter_show('stea028')
   CALL astt401_filter_show('stea029')
   CALL astt401_filter_show('stea030')
   CALL astt401_filter_show('stea031')
   CALL astt401_filter_show('stea032')
   CALL astt401_filter_show('stea033')
   CALL astt401_filter_show('stea034')
   CALL astt401_filter_show('stea035')
   CALL astt401_filter_show('stea036')
   CALL astt401_filter_show('stea037')
   CALL astt401_filter_show('stea038')
   CALL astt401_filter_show('stea039')
   CALL astt401_filter_show('stea040')
   CALL astt401_filter_show('stea041')
   CALL astt401_filter_show('stea042')
   CALL astt401_filter_show('stea043')
   CALL astt401_filter_show('stea044')
   CALL astt401_filter_show('stea045')
   CALL astt401_filter_show('stea046')
   CALL astt401_filter_show('stea047')
   CALL astt401_filter_show('stea048')
   CALL astt401_filter_show('stea049')
   CALL astt401_filter_show('steaunit')
   CALL astt401_filter_show('steasite')
 
END FUNCTION

{</section>}

{<section id="astt401.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION astt401_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   {<point name="filter_parser.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   {<point name="filter_parser.define"/>}
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION

{</section>}

{<section id="astt401.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION astt401_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = astt401_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION

{</section>}

{<section id="astt401.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION astt401_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   {<point name="query.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   {<point name="query.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   {<point name="query.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_steb_d.clear()
   CALL g_steb10_d.clear()
   CALL g_steb11_d.clear()
   CALL g_steb12_d.clear()
   CALL g_steb2_d.clear()
   CALL g_steb3_d.clear()
   CALL g_steb4_d.clear()
   CALL g_steb5_d.clear()
   CALL g_steb6_d.clear()
   CALL g_steb7_d.clear()
   CALL g_steb8_d.clear()
   CALL g_steb9_d.clear()
 
   
   #add-point:query段other name="query.other"
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL astt401_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL astt401_browser_fill("")
      CALL astt401_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
   LET g_detail_idx_list[4] = 1
   LET g_detail_idx_list[5] = 1
   LET g_detail_idx_list[6] = 1
   LET g_detail_idx_list[7] = 1
   LET g_detail_idx_list[8] = 1
   LET g_detail_idx_list[9] = 1
   LET g_detail_idx_list[10] = 1
   LET g_detail_idx_list[11] = 1
   LET g_detail_idx_list[12] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL astt401_filter_show('steadocno')
   CALL astt401_filter_show('steadocdt')
   CALL astt401_filter_show('stea000')
   CALL astt401_filter_show('stea001')
   CALL astt401_filter_show('stea002')
   CALL astt401_filter_show('stea003')
   CALL astt401_filter_show('stea004')
   CALL astt401_filter_show('stea005')
   CALL astt401_filter_show('stea006')
   CALL astt401_filter_show('stea007')
   CALL astt401_filter_show('stea008')
   CALL astt401_filter_show('stea009')
   CALL astt401_filter_show('stea010')
   CALL astt401_filter_show('stea011')
   CALL astt401_filter_show('stea012')
   CALL astt401_filter_show('stea013')
   CALL astt401_filter_show('stea014')
   CALL astt401_filter_show('stea015')
   CALL astt401_filter_show('stea016')
   CALL astt401_filter_show('stea017')
   CALL astt401_filter_show('stea018')
   CALL astt401_filter_show('stea019')
   CALL astt401_filter_show('stea020')
   CALL astt401_filter_show('stea021')
   CALL astt401_filter_show('stea022')
   CALL astt401_filter_show('stea023')
   CALL astt401_filter_show('stea024')
   CALL astt401_filter_show('stea025')
   CALL astt401_filter_show('stea026')
   CALL astt401_filter_show('stea027')
   CALL astt401_filter_show('stea028')
   CALL astt401_filter_show('stea029')
   CALL astt401_filter_show('stea030')
   CALL astt401_filter_show('stea031')
   CALL astt401_filter_show('stea032')
   CALL astt401_filter_show('stea033')
   CALL astt401_filter_show('stea034')
   CALL astt401_filter_show('stea035')
   CALL astt401_filter_show('stea036')
   CALL astt401_filter_show('stea037')
   CALL astt401_filter_show('stea038')
   CALL astt401_filter_show('stea039')
   CALL astt401_filter_show('stea040')
   CALL astt401_filter_show('stea041')
   CALL astt401_filter_show('stea042')
   CALL astt401_filter_show('stea043')
   CALL astt401_filter_show('stea044')
   CALL astt401_filter_show('stea045')
   CALL astt401_filter_show('stea046')
   CALL astt401_filter_show('stea047')
   CALL astt401_filter_show('stea048')
   CALL astt401_filter_show('stea049')
   CALL astt401_filter_show('steaunit')
   CALL astt401_filter_show('steasite')
   CALL astt401_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "-100" 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
   ELSE
      CALL astt401_fetch("F") 
      #顯示單身筆數
      CALL astt401_idx_chk()
   END IF
 
END FUNCTION

{</section>}

{<section id="astt401.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION astt401_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   {<point name="fetch.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   {<point name="fetch.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   {<point name="fetch.pre_function"/>}
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
   CALL g_steb8_d.clear()
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_stea_m.steadocno = g_browser[g_current_idx].b_steadocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE astt401_master_referesh USING g_stea_m.steadocno INTO g_stea_m.steasite,g_stea_m.steadocdt, 
       g_stea_m.steadocno,g_stea_m.stea000,g_stea_m.stea054,g_stea_m.steaunit,g_stea_m.stea001,g_stea_m.stea002, 
       g_stea_m.stea003,g_stea_m.stea004,g_stea_m.stea009,g_stea_m.steastus,g_stea_m.stea010,g_stea_m.stea005, 
       g_stea_m.stea006,g_stea_m.stea007,g_stea_m.stea008,g_stea_m.stea047,g_stea_m.stea048,g_stea_m.stea044, 
       g_stea_m.stea051,g_stea_m.stea011,g_stea_m.stea012,g_stea_m.stea056,g_stea_m.stea013,g_stea_m.stea014, 
       g_stea_m.stea015,g_stea_m.stea016,g_stea_m.stea045,g_stea_m.stea046,g_stea_m.stea053,g_stea_m.stea029, 
       g_stea_m.stea030,g_stea_m.stea032,g_stea_m.stea033,g_stea_m.stea034,g_stea_m.stea035,g_stea_m.stea036, 
       g_stea_m.stea037,g_stea_m.stea038,g_stea_m.stea050,g_stea_m.stea058,g_stea_m.stea059,g_stea_m.stea039, 
       g_stea_m.stea040,g_stea_m.stea052,g_stea_m.stea028,g_stea_m.stea017,g_stea_m.stea021,g_stea_m.stea024, 
       g_stea_m.stea018,g_stea_m.stea022,g_stea_m.stea025,g_stea_m.stea019,g_stea_m.stea023,g_stea_m.stea026, 
       g_stea_m.stea020,g_stea_m.stea049,g_stea_m.stea057,g_stea_m.stea055,g_stea_m.stea027,g_stea_m.stea031, 
       g_stea_m.stea042,g_stea_m.steaownid,g_stea_m.steaowndp,g_stea_m.steacrtid,g_stea_m.steacrtdp, 
       g_stea_m.steacrtdt,g_stea_m.steamodid,g_stea_m.steamoddt,g_stea_m.steacnfid,g_stea_m.steacnfdt, 
       g_stea_m.steasite_desc,g_stea_m.steaunit_desc,g_stea_m.stea010_desc,g_stea_m.stea006_desc,g_stea_m.stea047_desc, 
       g_stea_m.stea048_desc,g_stea_m.stea044_desc,g_stea_m.stea051_desc,g_stea_m.stea011_desc,g_stea_m.stea012_desc, 
       g_stea_m.stea013_desc,g_stea_m.stea014_desc,g_stea_m.stea015_desc,g_stea_m.stea045_desc,g_stea_m.stea032_desc, 
       g_stea_m.stea035_desc,g_stea_m.stea036_desc,g_stea_m.stea037_desc,g_stea_m.stea038_desc,g_stea_m.steaownid_desc, 
       g_stea_m.steaowndp_desc,g_stea_m.steacrtid_desc,g_stea_m.steacrtdp_desc,g_stea_m.steamodid_desc, 
       g_stea_m.steacnfid_desc
   
   #遮罩相關處理
   LET g_stea_m_mask_o.* =  g_stea_m.*
   CALL astt401_stea_t_mask()
   LET g_stea_m_mask_n.* =  g_stea_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL astt401_set_act_visible()   
   CALL astt401_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_stea_m_t.* = g_stea_m.*
   LET g_stea_m_o.* = g_stea_m.*
   
   LET g_data_owner = g_stea_m.steaownid      
   LET g_data_dept  = g_stea_m.steaowndp
   
   #重新顯示   
   CALL astt401_show()
 
   #應用 a56 樣板自動產生(Version:3)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
 
END FUNCTION

{</section>}

{<section id="astt401.insert" >}
#+ 資料新增
PRIVATE FUNCTION astt401_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   {<point name="insert.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   {<point name="insert.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   {<point name="insert.pre_function"/>}
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_steb_d.clear()   
   CALL g_steb10_d.clear()  
   CALL g_steb11_d.clear()  
   CALL g_steb12_d.clear()  
   CALL g_steb2_d.clear()  
   CALL g_steb3_d.clear()  
   CALL g_steb4_d.clear()  
   CALL g_steb5_d.clear()  
   CALL g_steb6_d.clear()  
   CALL g_steb7_d.clear()  
   CALL g_steb8_d.clear()  
   CALL g_steb9_d.clear()  
 
 
   INITIALIZE g_stea_m.* TO NULL             #DEFAULT 設定
   
   LET g_steadocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_stea_m.steaownid = g_user
      LET g_stea_m.steaowndp = g_dept
      LET g_stea_m.steacrtid = g_user
      LET g_stea_m.steacrtdp = g_dept 
      LET g_stea_m.steacrtdt = cl_get_current()
      LET g_stea_m.steamodid = g_user
      LET g_stea_m.steamoddt = cl_get_current()
      LET g_stea_m.steastus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_stea_m.stea000 = "I"
      LET g_stea_m.stea007 = "0"
      LET g_stea_m.stea008 = "0"
      LET g_stea_m.stea053 = "N"
      LET g_stea_m.stea050 = "N"
      LET g_stea_m.stea055 = "N"
 
  
      #add-point:單頭預設值 name="insert.default"
      {<point name="insert.default"/>}
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_stea_m_t.* = g_stea_m.*
      LET g_stea_m_o.* = g_stea_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_stea_m.steastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
    
      CALL astt401_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_stea_m.* TO NULL
         INITIALIZE g_steb_d TO NULL
         INITIALIZE g_steb10_d TO NULL
         INITIALIZE g_steb11_d TO NULL
         INITIALIZE g_steb12_d TO NULL
         INITIALIZE g_steb2_d TO NULL
         INITIALIZE g_steb3_d TO NULL
         INITIALIZE g_steb4_d TO NULL
         INITIALIZE g_steb5_d TO NULL
         INITIALIZE g_steb6_d TO NULL
         INITIALIZE g_steb7_d TO NULL
         INITIALIZE g_steb8_d TO NULL
         INITIALIZE g_steb9_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL astt401_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_steb_d.clear()
      #CALL g_steb10_d.clear()
      #CALL g_steb11_d.clear()
      #CALL g_steb12_d.clear()
      #CALL g_steb2_d.clear()
      #CALL g_steb3_d.clear()
      #CALL g_steb4_d.clear()
      #CALL g_steb5_d.clear()
      #CALL g_steb6_d.clear()
      #CALL g_steb7_d.clear()
      #CALL g_steb8_d.clear()
      #CALL g_steb9_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL astt401_set_act_visible()   
   CALL astt401_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_steadocno_t = g_stea_m.steadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " steaent = " ||g_enterprise|| " AND",
                      " steadocno = '", g_stea_m.steadocno, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL astt401_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE astt401_cl
   
   CALL astt401_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE astt401_master_referesh USING g_stea_m.steadocno INTO g_stea_m.steasite,g_stea_m.steadocdt, 
       g_stea_m.steadocno,g_stea_m.stea000,g_stea_m.stea054,g_stea_m.steaunit,g_stea_m.stea001,g_stea_m.stea002, 
       g_stea_m.stea003,g_stea_m.stea004,g_stea_m.stea009,g_stea_m.steastus,g_stea_m.stea010,g_stea_m.stea005, 
       g_stea_m.stea006,g_stea_m.stea007,g_stea_m.stea008,g_stea_m.stea047,g_stea_m.stea048,g_stea_m.stea044, 
       g_stea_m.stea051,g_stea_m.stea011,g_stea_m.stea012,g_stea_m.stea056,g_stea_m.stea013,g_stea_m.stea014, 
       g_stea_m.stea015,g_stea_m.stea016,g_stea_m.stea045,g_stea_m.stea046,g_stea_m.stea053,g_stea_m.stea029, 
       g_stea_m.stea030,g_stea_m.stea032,g_stea_m.stea033,g_stea_m.stea034,g_stea_m.stea035,g_stea_m.stea036, 
       g_stea_m.stea037,g_stea_m.stea038,g_stea_m.stea050,g_stea_m.stea058,g_stea_m.stea059,g_stea_m.stea039, 
       g_stea_m.stea040,g_stea_m.stea052,g_stea_m.stea028,g_stea_m.stea017,g_stea_m.stea021,g_stea_m.stea024, 
       g_stea_m.stea018,g_stea_m.stea022,g_stea_m.stea025,g_stea_m.stea019,g_stea_m.stea023,g_stea_m.stea026, 
       g_stea_m.stea020,g_stea_m.stea049,g_stea_m.stea057,g_stea_m.stea055,g_stea_m.stea027,g_stea_m.stea031, 
       g_stea_m.stea042,g_stea_m.steaownid,g_stea_m.steaowndp,g_stea_m.steacrtid,g_stea_m.steacrtdp, 
       g_stea_m.steacrtdt,g_stea_m.steamodid,g_stea_m.steamoddt,g_stea_m.steacnfid,g_stea_m.steacnfdt, 
       g_stea_m.steasite_desc,g_stea_m.steaunit_desc,g_stea_m.stea010_desc,g_stea_m.stea006_desc,g_stea_m.stea047_desc, 
       g_stea_m.stea048_desc,g_stea_m.stea044_desc,g_stea_m.stea051_desc,g_stea_m.stea011_desc,g_stea_m.stea012_desc, 
       g_stea_m.stea013_desc,g_stea_m.stea014_desc,g_stea_m.stea015_desc,g_stea_m.stea045_desc,g_stea_m.stea032_desc, 
       g_stea_m.stea035_desc,g_stea_m.stea036_desc,g_stea_m.stea037_desc,g_stea_m.stea038_desc,g_stea_m.steaownid_desc, 
       g_stea_m.steaowndp_desc,g_stea_m.steacrtid_desc,g_stea_m.steacrtdp_desc,g_stea_m.steamodid_desc, 
       g_stea_m.steacnfid_desc
   
   
   #遮罩相關處理
   LET g_stea_m_mask_o.* =  g_stea_m.*
   CALL astt401_stea_t_mask()
   LET g_stea_m_mask_n.* =  g_stea_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_stea_m.steasite,g_stea_m.steasite_desc,g_stea_m.steadocdt,g_stea_m.steadocno,g_stea_m.stea000, 
       g_stea_m.stea054,g_stea_m.steaunit,g_stea_m.steaunit_desc,g_stea_m.stea001,g_stea_m.stea002,g_stea_m.stea003, 
       g_stea_m.stea004,g_stea_m.stea009,g_stea_m.steastus,g_stea_m.stea010,g_stea_m.stea010_desc,g_stea_m.stea005, 
       g_stea_m.steal002,g_stea_m.steal003,g_stea_m.stea006,g_stea_m.stea006_desc,g_stea_m.stea007,g_stea_m.stea008, 
       g_stea_m.stea047,g_stea_m.stea047_desc,g_stea_m.stea048,g_stea_m.stea048_desc,g_stea_m.stea044, 
       g_stea_m.stea044_desc,g_stea_m.stea051,g_stea_m.stea051_desc,g_stea_m.stea011,g_stea_m.stea011_desc, 
       g_stea_m.stea012,g_stea_m.stea012_desc,g_stea_m.stea056,g_stea_m.stea013,g_stea_m.stea013_desc, 
       g_stea_m.stea014,g_stea_m.stea014_desc,g_stea_m.stea015,g_stea_m.stea015_desc,g_stea_m.stea016, 
       g_stea_m.stea045,g_stea_m.stea045_desc,g_stea_m.stea046,g_stea_m.stea053,g_stea_m.stea029,g_stea_m.stea030, 
       g_stea_m.stea032,g_stea_m.stea032_desc,g_stea_m.stea033,g_stea_m.stea033_desc,g_stea_m.stea034, 
       g_stea_m.stea034_desc,g_stea_m.stea035,g_stea_m.stea035_desc,g_stea_m.stea036,g_stea_m.stea036_desc, 
       g_stea_m.stea037,g_stea_m.stea037_desc,g_stea_m.stea038,g_stea_m.stea038_desc,g_stea_m.stea050, 
       g_stea_m.stea058,g_stea_m.stea059,g_stea_m.stea039,g_stea_m.stea040,g_stea_m.stea052,g_stea_m.stea028, 
       g_stea_m.next_b,g_stea_m.stea017,g_stea_m.stea021,g_stea_m.stea024,g_stea_m.stea018,g_stea_m.stea022, 
       g_stea_m.stea025,g_stea_m.stea019,g_stea_m.stea023,g_stea_m.stea026,g_stea_m.stea020,g_stea_m.stea049, 
       g_stea_m.stea057,g_stea_m.stea055,g_stea_m.stea027,g_stea_m.stea031,g_stea_m.stea042,g_stea_m.steaownid, 
       g_stea_m.steaownid_desc,g_stea_m.steaowndp,g_stea_m.steaowndp_desc,g_stea_m.steacrtid,g_stea_m.steacrtid_desc, 
       g_stea_m.steacrtdp,g_stea_m.steacrtdp_desc,g_stea_m.steacrtdt,g_stea_m.steamodid,g_stea_m.steamodid_desc, 
       g_stea_m.steamoddt,g_stea_m.steacnfid,g_stea_m.steacnfid_desc,g_stea_m.steacnfdt
   
   #add-point:新增結束後 name="insert.after"
   {<point name="insert.after"/>}
   #end add-point 
   
   LET g_data_owner = g_stea_m.steaownid      
   LET g_data_dept  = g_stea_m.steaowndp
   
   #功能已完成,通報訊息中心
   CALL astt401_msgcentre_notify('insert')
   
END FUNCTION

{</section>}

{<section id="astt401.modify" >}
#+ 資料修改
PRIVATE FUNCTION astt401_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   {<point name="modify.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
   DEFINE l_wc2_table3   STRING
 
   DEFINE l_wc2_table4   STRING
 
   DEFINE l_wc2_table5   STRING
 
   DEFINE l_wc2_table6   STRING
 
   DEFINE l_wc2_table7   STRING
 
   DEFINE l_wc2_table8   STRING
 
   DEFINE l_wc2_table9   STRING
 
   DEFINE l_wc2_table10   STRING
 
   DEFINE l_wc2_table11   STRING
 
 
   DEFINE l_wc2_table12   STRING
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   {<point name="modify.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   {<point name="modify.pre_function"/>}
   #end add-point
   
   #保存單頭舊值
   LET g_stea_m_t.* = g_stea_m.*
   LET g_stea_m_o.* = g_stea_m.*
   
   IF g_stea_m.steadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_steadocno_t = g_stea_m.steadocno
 
   CALL s_transaction_begin()
   
   OPEN astt401_cl USING g_enterprise,g_stea_m.steadocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN astt401_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE astt401_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE astt401_master_referesh USING g_stea_m.steadocno INTO g_stea_m.steasite,g_stea_m.steadocdt, 
       g_stea_m.steadocno,g_stea_m.stea000,g_stea_m.stea054,g_stea_m.steaunit,g_stea_m.stea001,g_stea_m.stea002, 
       g_stea_m.stea003,g_stea_m.stea004,g_stea_m.stea009,g_stea_m.steastus,g_stea_m.stea010,g_stea_m.stea005, 
       g_stea_m.stea006,g_stea_m.stea007,g_stea_m.stea008,g_stea_m.stea047,g_stea_m.stea048,g_stea_m.stea044, 
       g_stea_m.stea051,g_stea_m.stea011,g_stea_m.stea012,g_stea_m.stea056,g_stea_m.stea013,g_stea_m.stea014, 
       g_stea_m.stea015,g_stea_m.stea016,g_stea_m.stea045,g_stea_m.stea046,g_stea_m.stea053,g_stea_m.stea029, 
       g_stea_m.stea030,g_stea_m.stea032,g_stea_m.stea033,g_stea_m.stea034,g_stea_m.stea035,g_stea_m.stea036, 
       g_stea_m.stea037,g_stea_m.stea038,g_stea_m.stea050,g_stea_m.stea058,g_stea_m.stea059,g_stea_m.stea039, 
       g_stea_m.stea040,g_stea_m.stea052,g_stea_m.stea028,g_stea_m.stea017,g_stea_m.stea021,g_stea_m.stea024, 
       g_stea_m.stea018,g_stea_m.stea022,g_stea_m.stea025,g_stea_m.stea019,g_stea_m.stea023,g_stea_m.stea026, 
       g_stea_m.stea020,g_stea_m.stea049,g_stea_m.stea057,g_stea_m.stea055,g_stea_m.stea027,g_stea_m.stea031, 
       g_stea_m.stea042,g_stea_m.steaownid,g_stea_m.steaowndp,g_stea_m.steacrtid,g_stea_m.steacrtdp, 
       g_stea_m.steacrtdt,g_stea_m.steamodid,g_stea_m.steamoddt,g_stea_m.steacnfid,g_stea_m.steacnfdt, 
       g_stea_m.steasite_desc,g_stea_m.steaunit_desc,g_stea_m.stea010_desc,g_stea_m.stea006_desc,g_stea_m.stea047_desc, 
       g_stea_m.stea048_desc,g_stea_m.stea044_desc,g_stea_m.stea051_desc,g_stea_m.stea011_desc,g_stea_m.stea012_desc, 
       g_stea_m.stea013_desc,g_stea_m.stea014_desc,g_stea_m.stea015_desc,g_stea_m.stea045_desc,g_stea_m.stea032_desc, 
       g_stea_m.stea035_desc,g_stea_m.stea036_desc,g_stea_m.stea037_desc,g_stea_m.stea038_desc,g_stea_m.steaownid_desc, 
       g_stea_m.steaowndp_desc,g_stea_m.steacrtid_desc,g_stea_m.steacrtdp_desc,g_stea_m.steamodid_desc, 
       g_stea_m.steacnfid_desc
   
   #檢查是否允許此動作
   IF NOT astt401_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_stea_m_mask_o.* =  g_stea_m.*
   CALL astt401_stea_t_mask()
   LET g_stea_m_mask_n.* =  g_stea_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
   #LET l_wc2_table3 = g_wc2_table3
   #LET l_wc2_table3 = " 1=1"
 
   #LET l_wc2_table4 = g_wc2_table4
   #LET l_wc2_table4 = " 1=1"
 
   #LET l_wc2_table5 = g_wc2_table5
   #LET l_wc2_table5 = " 1=1"
 
   #LET l_wc2_table6 = g_wc2_table6
   #LET l_wc2_table6 = " 1=1"
 
   #LET l_wc2_table7 = g_wc2_table7
   #LET l_wc2_table7 = " 1=1"
 
   #LET l_wc2_table8 = g_wc2_table8
   #LET l_wc2_table8 = " 1=1"
 
   #LET l_wc2_table9 = g_wc2_table9
   #LET l_wc2_table9 = " 1=1"
 
   #LET l_wc2_table10 = g_wc2_table10
   #LET l_wc2_table10 = " 1=1"
 
   #LET l_wc2_table11 = g_wc2_table11
   #LET l_wc2_table11 = " 1=1"
 
 
   #LET l_wc2_table12 = g_wc2_table12
   #LET l_wc2_table12 = " 1=1"
 
 
   
   CALL astt401_show()
   #add-point:modify段show之後 name="modify.after_show"
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
   #LET  g_wc2_table3 = l_wc2_table3 
 
   #LET  g_wc2_table4 = l_wc2_table4 
 
   #LET  g_wc2_table5 = l_wc2_table5 
 
   #LET  g_wc2_table6 = l_wc2_table6 
 
   #LET  g_wc2_table7 = l_wc2_table7 
 
   #LET  g_wc2_table8 = l_wc2_table8 
 
   #LET  g_wc2_table9 = l_wc2_table9 
 
   #LET  g_wc2_table10 = l_wc2_table10 
 
   #LET  g_wc2_table11 = l_wc2_table11 
 
 
   #LET  g_wc2_table12 = l_wc2_table12 
 
 
    
   WHILE TRUE
      LET g_steadocno_t = g_stea_m.steadocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_stea_m.steamodid = g_user 
LET g_stea_m.steamoddt = cl_get_current()
LET g_stea_m.steamodid_desc = cl_get_username(g_stea_m.steamodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL astt401_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE stea_t SET (steamodid,steamoddt) = (g_stea_m.steamodid,g_stea_m.steamoddt)
          WHERE steaent = g_enterprise AND steadocno = g_steadocno_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_stea_m.* = g_stea_m_t.*
            CALL astt401_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_stea_m.steadocno != g_stea_m_t.steadocno
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE steb_t SET stebdocno = g_stea_m.steadocno
 
          WHERE stebent = g_enterprise AND stebdocno = g_stea_m_t.steadocno
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "steb_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "steb_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update2"
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         
         UPDATE stek_t
            SET stekdocno = g_stea_m.steadocno
 
          WHERE stekent = g_enterprise AND
                stekdocno = g_steadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update2"
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stek_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stek_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update2"
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update3"
         {<point name="modify.body.b_fk_update3" mark="Y"/>}
         #end add-point
         
         UPDATE stel_t
            SET steldocno = g_stea_m.steadocno
 
          WHERE stelent = g_enterprise AND
                steldocno = g_steadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update3"
         {<point name="modify.body.m_fk_update3"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stel_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stel_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update3"
         {<point name="modify.body.a_fk_update3"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update4"
         {<point name="modify.body.b_fk_update4" mark="Y"/>}
         #end add-point
         
         UPDATE stew_t
            SET stewdocno = g_stea_m.steadocno
 
          WHERE stewent = g_enterprise AND
                stewdocno = g_steadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update4"
         {<point name="modify.body.m_fk_update4"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stew_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stew_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update4"
         {<point name="modify.body.a_fk_update4"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update5"
         {<point name="modify.body.b_fk_update5" mark="Y"/>}
         #end add-point
         
         UPDATE stec_t
            SET stecdocno = g_stea_m.steadocno
 
          WHERE stecent = g_enterprise AND
                stecdocno = g_steadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update5"
         {<point name="modify.body.m_fk_update5"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stec_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stec_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update5"
         {<point name="modify.body.a_fk_update5"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update6"
         {<point name="modify.body.b_fk_update6" mark="Y"/>}
         #end add-point
         
         UPDATE stee_t
            SET steedocno = g_stea_m.steadocno
 
          WHERE steeent = g_enterprise AND
                steedocno = g_steadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update6"
         {<point name="modify.body.m_fk_update6"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stee_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stee_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update6"
         {<point name="modify.body.a_fk_update6"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update7"
         {<point name="modify.body.b_fk_update7" mark="Y"/>}
         #end add-point
         
         UPDATE steg_t
            SET stegdocno = g_stea_m.steadocno
 
          WHERE stegent = g_enterprise AND
                stegdocno = g_steadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update7"
         {<point name="modify.body.m_fk_update7"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "steg_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "steg_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update7"
         {<point name="modify.body.a_fk_update7"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update8"
         {<point name="modify.body.b_fk_update8" mark="Y"/>}
         #end add-point
         
         UPDATE steh_t
            SET stehdocno = g_stea_m.steadocno
 
          WHERE stehent = g_enterprise AND
                stehdocno = g_steadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update8"
         {<point name="modify.body.m_fk_update8"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "steh_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "steh_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update8"
         {<point name="modify.body.a_fk_update8"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update9"
         {<point name="modify.body.b_fk_update9" mark="Y"/>}
         #end add-point
         
         UPDATE stei_t
            SET steidocno = g_stea_m.steadocno
 
          WHERE steient = g_enterprise AND
                steidocno = g_steadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update9"
         {<point name="modify.body.m_fk_update9"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stei_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stei_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update9"
         {<point name="modify.body.a_fk_update9"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update10"
         {<point name="modify.body.b_fk_update10" mark="Y"/>}
         #end add-point
         
         UPDATE stej_t
            SET stejdocno = g_stea_m.steadocno
 
          WHERE stejent = g_enterprise AND
                stejdocno = g_steadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update10"
         {<point name="modify.body.m_fk_update10"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stej_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stej_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update10"
         {<point name="modify.body.a_fk_update10"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update11"
         {<point name="modify.body.b_fk_update11" mark="Y"/>}
         #end add-point
         
         UPDATE stef_t
            SET stefdocno = g_stea_m.steadocno
 
          WHERE stefent = g_enterprise AND
                stefdocno = g_steadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update11"
         {<point name="modify.body.m_fk_update11"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stef_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stef_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update11"
         {<point name="modify.body.a_fk_update11"/>}
         #end add-point
 
 
         
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update12"
         {<point name="modify.body.b_fk_update12" mark="Y"/>}
         #end add-point
         UPDATE sted_t
            SET steddocno = g_stea_m.steadocno
 
          WHERE stedent = g_enterprise AND
                steddocno = g_steadocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update12"
         {<point name="modify.body.m_fk_update12"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "sted_t" 
               LET g_errparam.code = "std-00009" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "sted_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update12"
         {<point name="modify.body.a_fk_update12"/>}
         #end add-point
 
 
         
         #UPDATE 多語言table key值
         
         
         
         
         
         
         
         
         
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL astt401_set_act_visible()   
   CALL astt401_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " steaent = " ||g_enterprise|| " AND",
                      " steadocno = '", g_stea_m.steadocno, "' "
 
   #填到對應位置
   CALL astt401_browser_fill("")
 
   CLOSE astt401_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL astt401_msgcentre_notify('modify')
 
END FUNCTION 

{</section>}

{<section id="astt401.input" >}
#+ 資料輸入
PRIVATE FUNCTION astt401_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   {<point name="input.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   {<point name="input.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   {<point name="input.pre_function"/>}
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_stea_m.steasite,g_stea_m.steasite_desc,g_stea_m.steadocdt,g_stea_m.steadocno,g_stea_m.stea000, 
       g_stea_m.stea054,g_stea_m.steaunit,g_stea_m.steaunit_desc,g_stea_m.stea001,g_stea_m.stea002,g_stea_m.stea003, 
       g_stea_m.stea004,g_stea_m.stea009,g_stea_m.steastus,g_stea_m.stea010,g_stea_m.stea010_desc,g_stea_m.stea005, 
       g_stea_m.steal002,g_stea_m.steal003,g_stea_m.stea006,g_stea_m.stea006_desc,g_stea_m.stea007,g_stea_m.stea008, 
       g_stea_m.stea047,g_stea_m.stea047_desc,g_stea_m.stea048,g_stea_m.stea048_desc,g_stea_m.stea044, 
       g_stea_m.stea044_desc,g_stea_m.stea051,g_stea_m.stea051_desc,g_stea_m.stea011,g_stea_m.stea011_desc, 
       g_stea_m.stea012,g_stea_m.stea012_desc,g_stea_m.stea056,g_stea_m.stea013,g_stea_m.stea013_desc, 
       g_stea_m.stea014,g_stea_m.stea014_desc,g_stea_m.stea015,g_stea_m.stea015_desc,g_stea_m.stea016, 
       g_stea_m.stea045,g_stea_m.stea045_desc,g_stea_m.stea046,g_stea_m.stea053,g_stea_m.stea029,g_stea_m.stea030, 
       g_stea_m.stea032,g_stea_m.stea032_desc,g_stea_m.stea033,g_stea_m.stea033_desc,g_stea_m.stea034, 
       g_stea_m.stea034_desc,g_stea_m.stea035,g_stea_m.stea035_desc,g_stea_m.stea036,g_stea_m.stea036_desc, 
       g_stea_m.stea037,g_stea_m.stea037_desc,g_stea_m.stea038,g_stea_m.stea038_desc,g_stea_m.stea050, 
       g_stea_m.stea058,g_stea_m.stea059,g_stea_m.stea039,g_stea_m.stea040,g_stea_m.stea052,g_stea_m.stea028, 
       g_stea_m.next_b,g_stea_m.stea017,g_stea_m.stea021,g_stea_m.stea024,g_stea_m.stea018,g_stea_m.stea022, 
       g_stea_m.stea025,g_stea_m.stea019,g_stea_m.stea023,g_stea_m.stea026,g_stea_m.stea020,g_stea_m.stea049, 
       g_stea_m.stea057,g_stea_m.stea055,g_stea_m.stea027,g_stea_m.stea031,g_stea_m.stea042,g_stea_m.steaownid, 
       g_stea_m.steaownid_desc,g_stea_m.steaowndp,g_stea_m.steaowndp_desc,g_stea_m.steacrtid,g_stea_m.steacrtid_desc, 
       g_stea_m.steacrtdp,g_stea_m.steacrtdp_desc,g_stea_m.steacrtdt,g_stea_m.steamodid,g_stea_m.steamodid_desc, 
       g_stea_m.steamoddt,g_stea_m.steacnfid,g_stea_m.steacnfid_desc,g_stea_m.steacnfdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT stebseq,steb001,steb002,steb018,steb019,steb003,steb004,steb005,steb006, 
       steb007,steb020,steb008,steb009,steb010,steb011,steb012,steb013,steb014,steb026,steb015,steb016, 
       steb017,steb021,steb022,steb023,steb024,steb025,stebsite,stebunit FROM steb_t WHERE stebent=?  
       AND stebdocno=? AND stebseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt401_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql name="input.define_sql2"
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT steksite,stekunit,stek001,stekseq,stek002,stek020,stek021,stek003,stek004, 
       stek018,stek019,stek005,stek006,stek007,stek008,stek009,stek010,stek011,stek012,stek013,stek014, 
       stekacti,stek015,stek016,stek017,stek022,stek023,stek024,stek025,stek026 FROM stek_t WHERE stekent=?  
       AND stekdocno=? AND stekseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql2"
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt401_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql3"
   {<point name="input.define_sql3" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT stelunit,stelsite,stel001,stelacti,stelseq,stel003,stel002,stel004,stel005, 
       stel006,stel007,stel008,stel009 FROM stel_t WHERE stelent=? AND steldocno=? AND stelseq=? FOR  
       UPDATE"
   #add-point:input段define_sql name="input.after_define_sql3"
   {<point name="input.after_define_sql3"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt401_bcl3 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql4"
   {<point name="input.define_sql4" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT stewunit,stewsite,stewseq,stew001,stew002,stew003,stew004,stew005,stew006, 
       stew007,stew008,stewacti FROM stew_t WHERE stewent=? AND stewdocno=? AND stewseq=? FOR UPDATE" 

   #add-point:input段define_sql name="input.after_define_sql4"
   {<point name="input.after_define_sql4"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt401_bcl4 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql5"
   {<point name="input.define_sql5" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT stecseq,stec001,stecacti,stec024,stec002,stec003,stec025,stec004,stec005, 
       stec006,stec007,stec008,stec009,stec026,stec027,stec010,stec011,stec012,stec013,stec014,stec015, 
       stec016,stec017,stec018,stec019,stec020,stec021,stec022,stec023,stecsite,stecunit FROM stec_t  
       WHERE stecent=? AND stecdocno=? AND stecseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql5"
   {<point name="input.after_define_sql5"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt401_bcl5 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql6"
   {<point name="input.define_sql6" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT stee001,stee002,steeseq,stee003,stee004,stee005,stee006,stee012,stee007, 
       stee008,stee009,stee010,stee011,steesite,steeunit FROM stee_t WHERE steeent=? AND steedocno=?  
       AND steeseq=? AND stee002=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql6"
   {<point name="input.after_define_sql6"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt401_bcl6 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql7"
   {<point name="input.define_sql7" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT stegseq,steg001,steg002,steg003,steg004,steg005,stegacti,stegsite,stegunit  
       FROM steg_t WHERE stegent=? AND stegdocno=? AND stegseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql7"
   {<point name="input.after_define_sql7"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt401_bcl7 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql8"
   {<point name="input.define_sql8" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT stehseq,steh001,steh002,steh003,stehacti,stehsite,stehunit FROM steh_t  
       WHERE stehent=? AND stehdocno=? AND stehseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql8"
   {<point name="input.after_define_sql8"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt401_bcl8 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql9"
   {<point name="input.define_sql9" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT steiseq,stei001,stei002,stei003,stei005,stei006,stei004,stei010,stei007, 
       stei008,stei009,steiacti,stei011,stei012,steisite,steiunit FROM stei_t WHERE steient=? AND steidocno=?  
       AND steiseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql9"
   {<point name="input.after_define_sql9"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt401_bcl9 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql10"
   {<point name="input.define_sql10" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT stejseq,stej001,stej002,stej003,stej004,stej005,stej006,stejsite,stejunit  
       FROM stej_t WHERE stejent=? AND stejdocno=? AND stejseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql10"
   {<point name="input.after_define_sql10"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt401_bcl10 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql11"
   {<point name="input.define_sql11" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT stef001,stefseq,stef002,stef003,stef004,stef005,stef006,stef007,stef010, 
       stef008,stef011,stef009,stefsite,stefunit FROM stef_t WHERE stefent=? AND stefdocno=? AND stefseq=?  
       AND stef002=? AND stef003=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql11"
   {<point name="input.after_define_sql11"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt401_bcl11 CURSOR FROM g_forupd_sql
 
 
   
   #add-point:input段define_sql name="input.define_sql12"
   {<point name="input.define_sql12" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT stedseq1,sted001,sted002,sted003,sted004,sted005,sted006,sted007,sted008, 
       sted009,stedsite,stedunit FROM sted_t WHERE stedent=? AND steddocno=? AND stedseq=? AND stedseq1=?  
       FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql12"
   {<point name="input.after_define_sql12"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt401_bcl12 CURSOR FROM g_forupd_sql
 
 
 
   #add-point:input段define_sql name="input.other_sql"
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL astt401_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL astt401_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_stea_m.steasite,g_stea_m.steadocdt,g_stea_m.steadocno,g_stea_m.stea000,g_stea_m.stea054, 
       g_stea_m.steaunit,g_stea_m.stea001,g_stea_m.stea002,g_stea_m.stea003,g_stea_m.stea004,g_stea_m.stea009, 
       g_stea_m.steastus,g_stea_m.stea010,g_stea_m.stea005,g_stea_m.steal002,g_stea_m.steal003,g_stea_m.stea006, 
       g_stea_m.stea007,g_stea_m.stea008,g_stea_m.stea047,g_stea_m.stea048,g_stea_m.stea044,g_stea_m.stea051, 
       g_stea_m.stea011,g_stea_m.stea012,g_stea_m.stea056,g_stea_m.stea013,g_stea_m.stea014,g_stea_m.stea015, 
       g_stea_m.stea016,g_stea_m.stea045,g_stea_m.stea046,g_stea_m.stea053,g_stea_m.stea029,g_stea_m.stea030, 
       g_stea_m.stea032,g_stea_m.stea033,g_stea_m.stea034,g_stea_m.stea035,g_stea_m.stea036,g_stea_m.stea037, 
       g_stea_m.stea038,g_stea_m.stea050,g_stea_m.stea058,g_stea_m.stea059,g_stea_m.stea039,g_stea_m.stea040, 
       g_stea_m.stea052,g_stea_m.stea028,g_stea_m.next_b,g_stea_m.stea017,g_stea_m.stea021,g_stea_m.stea024, 
       g_stea_m.stea018,g_stea_m.stea022,g_stea_m.stea025,g_stea_m.stea019,g_stea_m.stea023,g_stea_m.stea026, 
       g_stea_m.stea020,g_stea_m.stea049,g_stea_m.stea057,g_stea_m.stea055,g_stea_m.stea027,g_stea_m.stea031, 
       g_stea_m.stea042
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

{</section>}

{<section id="astt401.input.head" >}
      #單頭段
      INPUT BY NAME g_stea_m.steasite,g_stea_m.steadocdt,g_stea_m.steadocno,g_stea_m.stea000,g_stea_m.stea054, 
          g_stea_m.steaunit,g_stea_m.stea001,g_stea_m.stea002,g_stea_m.stea003,g_stea_m.stea004,g_stea_m.stea009, 
          g_stea_m.steastus,g_stea_m.stea010,g_stea_m.stea005,g_stea_m.steal002,g_stea_m.steal003,g_stea_m.stea006, 
          g_stea_m.stea007,g_stea_m.stea008,g_stea_m.stea047,g_stea_m.stea048,g_stea_m.stea044,g_stea_m.stea051, 
          g_stea_m.stea011,g_stea_m.stea012,g_stea_m.stea056,g_stea_m.stea013,g_stea_m.stea014,g_stea_m.stea015, 
          g_stea_m.stea016,g_stea_m.stea045,g_stea_m.stea046,g_stea_m.stea053,g_stea_m.stea029,g_stea_m.stea030, 
          g_stea_m.stea032,g_stea_m.stea033,g_stea_m.stea034,g_stea_m.stea035,g_stea_m.stea036,g_stea_m.stea037, 
          g_stea_m.stea038,g_stea_m.stea050,g_stea_m.stea058,g_stea_m.stea059,g_stea_m.stea039,g_stea_m.stea040, 
          g_stea_m.stea052,g_stea_m.stea028,g_stea_m.next_b,g_stea_m.stea017,g_stea_m.stea021,g_stea_m.stea024, 
          g_stea_m.stea018,g_stea_m.stea022,g_stea_m.stea025,g_stea_m.stea019,g_stea_m.stea023,g_stea_m.stea026, 
          g_stea_m.stea020,g_stea_m.stea049,g_stea_m.stea057,g_stea_m.stea055,g_stea_m.stea027,g_stea_m.stea031, 
          g_stea_m.stea042 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item name="input.master_input.update_item"
               {<point name="input.master_input.update_item" mark="Y"/>}
               #END add-point
            END IF
 
 
 
 
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN astt401_cl USING g_enterprise,g_stea_m.steadocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astt401_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astt401_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            LET g_master_multi_table_t.stealdocno = g_stea_m.steadocno
LET g_master_multi_table_t.steal002 = g_stea_m.steal002
LET g_master_multi_table_t.steal003 = g_stea_m.steal003
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.stealdocno = ''
LET g_master_multi_table_t.steal002 = ''
LET g_master_multi_table_t.steal003 = ''
 
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL astt401_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL astt401_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steasite
            
            #add-point:AFTER FIELD steasite name="input.a.steasite"
            {<point name="input.a.steasite" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steasite
            #add-point:BEFORE FIELD steasite name="input.b.steasite"
            {<point name="input.b.steasite" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steasite
            #add-point:ON CHANGE steasite name="input.g.steasite"
            {<point name="input.g.steasite" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steadocdt
            #add-point:BEFORE FIELD steadocdt name="input.b.steadocdt"
            {<point name="input.b.steadocdt" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steadocdt
            
            #add-point:AFTER FIELD steadocdt name="input.a.steadocdt"
            {<point name="input.a.steadocdt" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steadocdt
            #add-point:ON CHANGE steadocdt name="input.g.steadocdt"
            {<point name="input.g.steadocdt" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steadocno
            #add-point:BEFORE FIELD steadocno name="input.b.steadocno"
            {<point name="input.b.steadocno" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steadocno
            
            #add-point:AFTER FIELD steadocno name="input.a.steadocno"
            {<point name="input.a.steadocno" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steadocno
            #add-point:ON CHANGE steadocno name="input.g.steadocno"
            {<point name="input.g.steadocno" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea000
            #add-point:BEFORE FIELD stea000 name="input.b.stea000"
            {<point name="input.b.stea000" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea000
            
            #add-point:AFTER FIELD stea000 name="input.a.stea000"
            {<point name="input.a.stea000" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea000
            #add-point:ON CHANGE stea000 name="input.g.stea000"
            {<point name="input.g.stea000" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea054
            #add-point:BEFORE FIELD stea054 name="input.b.stea054"
            {<point name="input.b.stea054" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea054
            
            #add-point:AFTER FIELD stea054 name="input.a.stea054"
            {<point name="input.a.stea054" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea054
            #add-point:ON CHANGE stea054 name="input.g.stea054"
            {<point name="input.g.stea054" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steaunit
            
            #add-point:AFTER FIELD steaunit name="input.a.steaunit"
            {<point name="input.a.steaunit" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steaunit
            #add-point:BEFORE FIELD steaunit name="input.b.steaunit"
            {<point name="input.b.steaunit" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steaunit
            #add-point:ON CHANGE steaunit name="input.g.steaunit"
            {<point name="input.g.steaunit" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea001
            #add-point:BEFORE FIELD stea001 name="input.b.stea001"
            {<point name="input.b.stea001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea001
            
            #add-point:AFTER FIELD stea001 name="input.a.stea001"
            {<point name="input.a.stea001" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea001
            #add-point:ON CHANGE stea001 name="input.g.stea001"
            {<point name="input.g.stea001" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea002
            #add-point:BEFORE FIELD stea002 name="input.b.stea002"
            {<point name="input.b.stea002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea002
            
            #add-point:AFTER FIELD stea002 name="input.a.stea002"
            {<point name="input.a.stea002" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea002
            #add-point:ON CHANGE stea002 name="input.g.stea002"
            {<point name="input.g.stea002" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea003
            #add-point:BEFORE FIELD stea003 name="input.b.stea003"
            {<point name="input.b.stea003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea003
            
            #add-point:AFTER FIELD stea003 name="input.a.stea003"
            {<point name="input.a.stea003" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea003
            #add-point:ON CHANGE stea003 name="input.g.stea003"
            {<point name="input.g.stea003" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea004
            #add-point:BEFORE FIELD stea004 name="input.b.stea004"
            {<point name="input.b.stea004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea004
            
            #add-point:AFTER FIELD stea004 name="input.a.stea004"
            {<point name="input.a.stea004" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea004
            #add-point:ON CHANGE stea004 name="input.g.stea004"
            {<point name="input.g.stea004" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea009
            #add-point:BEFORE FIELD stea009 name="input.b.stea009"
            {<point name="input.b.stea009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea009
            
            #add-point:AFTER FIELD stea009 name="input.a.stea009"
            {<point name="input.a.stea009" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea009
            #add-point:ON CHANGE stea009 name="input.g.stea009"
            {<point name="input.g.stea009" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steastus
            #add-point:BEFORE FIELD steastus name="input.b.steastus"
            {<point name="input.b.steastus" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steastus
            
            #add-point:AFTER FIELD steastus name="input.a.steastus"
            {<point name="input.a.steastus" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steastus
            #add-point:ON CHANGE steastus name="input.g.steastus"
            {<point name="input.g.steastus" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea010
            
            #add-point:AFTER FIELD stea010 name="input.a.stea010"
            {<point name="input.a.stea010" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea010
            #add-point:BEFORE FIELD stea010 name="input.b.stea010"
            {<point name="input.b.stea010" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea010
            #add-point:ON CHANGE stea010 name="input.g.stea010"
            {<point name="input.g.stea010" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea005
            #add-point:BEFORE FIELD stea005 name="input.b.stea005"
            {<point name="input.b.stea005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea005
            
            #add-point:AFTER FIELD stea005 name="input.a.stea005"
            {<point name="input.a.stea005" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea005
            #add-point:ON CHANGE stea005 name="input.g.stea005"
            {<point name="input.g.stea005" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steal002
            #add-point:BEFORE FIELD steal002 name="input.b.steal002"
            {<point name="input.b.steal002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steal002
            
            #add-point:AFTER FIELD steal002 name="input.a.steal002"
            {<point name="input.a.steal002" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steal002
            #add-point:ON CHANGE steal002 name="input.g.steal002"
            {<point name="input.g.steal002" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steal003
            #add-point:BEFORE FIELD steal003 name="input.b.steal003"
            {<point name="input.b.steal003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steal003
            
            #add-point:AFTER FIELD steal003 name="input.a.steal003"
            {<point name="input.a.steal003" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steal003
            #add-point:ON CHANGE steal003 name="input.g.steal003"
            {<point name="input.g.steal003" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea006
            
            #add-point:AFTER FIELD stea006 name="input.a.stea006"
            {<point name="input.a.stea006" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea006
            #add-point:BEFORE FIELD stea006 name="input.b.stea006"
            {<point name="input.b.stea006" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea006
            #add-point:ON CHANGE stea006 name="input.g.stea006"
            {<point name="input.g.stea006" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea007
            #add-point:BEFORE FIELD stea007 name="input.b.stea007"
            {<point name="input.b.stea007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea007
            
            #add-point:AFTER FIELD stea007 name="input.a.stea007"
            {<point name="input.a.stea007" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea007
            #add-point:ON CHANGE stea007 name="input.g.stea007"
            {<point name="input.g.stea007" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea008
            #add-point:BEFORE FIELD stea008 name="input.b.stea008"
            {<point name="input.b.stea008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea008
            
            #add-point:AFTER FIELD stea008 name="input.a.stea008"
            {<point name="input.a.stea008" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea008
            #add-point:ON CHANGE stea008 name="input.g.stea008"
            {<point name="input.g.stea008" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea047
            
            #add-point:AFTER FIELD stea047 name="input.a.stea047"
            {<point name="input.a.stea047" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea047
            #add-point:BEFORE FIELD stea047 name="input.b.stea047"
            {<point name="input.b.stea047" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea047
            #add-point:ON CHANGE stea047 name="input.g.stea047"
            {<point name="input.g.stea047" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea048
            
            #add-point:AFTER FIELD stea048 name="input.a.stea048"
            {<point name="input.a.stea048" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea048
            #add-point:BEFORE FIELD stea048 name="input.b.stea048"
            {<point name="input.b.stea048" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea048
            #add-point:ON CHANGE stea048 name="input.g.stea048"
            {<point name="input.g.stea048" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea044
            
            #add-point:AFTER FIELD stea044 name="input.a.stea044"
            {<point name="input.a.stea044" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea044
            #add-point:BEFORE FIELD stea044 name="input.b.stea044"
            {<point name="input.b.stea044" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea044
            #add-point:ON CHANGE stea044 name="input.g.stea044"
            {<point name="input.g.stea044" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea051
            
            #add-point:AFTER FIELD stea051 name="input.a.stea051"
            {<point name="input.a.stea051" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea051
            #add-point:BEFORE FIELD stea051 name="input.b.stea051"
            {<point name="input.b.stea051" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea051
            #add-point:ON CHANGE stea051 name="input.g.stea051"
            {<point name="input.g.stea051" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea011
            
            #add-point:AFTER FIELD stea011 name="input.a.stea011"
            {<point name="input.a.stea011" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea011
            #add-point:BEFORE FIELD stea011 name="input.b.stea011"
            {<point name="input.b.stea011" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea011
            #add-point:ON CHANGE stea011 name="input.g.stea011"
            {<point name="input.g.stea011" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea012
            
            #add-point:AFTER FIELD stea012 name="input.a.stea012"
            {<point name="input.a.stea012" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea012
            #add-point:BEFORE FIELD stea012 name="input.b.stea012"
            {<point name="input.b.stea012" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea012
            #add-point:ON CHANGE stea012 name="input.g.stea012"
            {<point name="input.g.stea012" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea056
            #add-point:BEFORE FIELD stea056 name="input.b.stea056"
            {<point name="input.b.stea056" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea056
            
            #add-point:AFTER FIELD stea056 name="input.a.stea056"
            {<point name="input.a.stea056" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea056
            #add-point:ON CHANGE stea056 name="input.g.stea056"
            {<point name="input.g.stea056" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea013
            
            #add-point:AFTER FIELD stea013 name="input.a.stea013"
            {<point name="input.a.stea013" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea013
            #add-point:BEFORE FIELD stea013 name="input.b.stea013"
            {<point name="input.b.stea013" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea013
            #add-point:ON CHANGE stea013 name="input.g.stea013"
            {<point name="input.g.stea013" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea014
            
            #add-point:AFTER FIELD stea014 name="input.a.stea014"
            {<point name="input.a.stea014" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea014
            #add-point:BEFORE FIELD stea014 name="input.b.stea014"
            {<point name="input.b.stea014" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea014
            #add-point:ON CHANGE stea014 name="input.g.stea014"
            {<point name="input.g.stea014" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea015
            
            #add-point:AFTER FIELD stea015 name="input.a.stea015"
            {<point name="input.a.stea015" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea015
            #add-point:BEFORE FIELD stea015 name="input.b.stea015"
            {<point name="input.b.stea015" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea015
            #add-point:ON CHANGE stea015 name="input.g.stea015"
            {<point name="input.g.stea015" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea016
            #add-point:BEFORE FIELD stea016 name="input.b.stea016"
            {<point name="input.b.stea016" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea016
            
            #add-point:AFTER FIELD stea016 name="input.a.stea016"
            {<point name="input.a.stea016" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea016
            #add-point:ON CHANGE stea016 name="input.g.stea016"
            {<point name="input.g.stea016" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea045
            
            #add-point:AFTER FIELD stea045 name="input.a.stea045"
            {<point name="input.a.stea045" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea045
            #add-point:BEFORE FIELD stea045 name="input.b.stea045"
            {<point name="input.b.stea045" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea045
            #add-point:ON CHANGE stea045 name="input.g.stea045"
            {<point name="input.g.stea045" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea046
            #add-point:BEFORE FIELD stea046 name="input.b.stea046"
            {<point name="input.b.stea046" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea046
            
            #add-point:AFTER FIELD stea046 name="input.a.stea046"
            {<point name="input.a.stea046" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea046
            #add-point:ON CHANGE stea046 name="input.g.stea046"
            {<point name="input.g.stea046" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea053
            #add-point:BEFORE FIELD stea053 name="input.b.stea053"
            {<point name="input.b.stea053" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea053
            
            #add-point:AFTER FIELD stea053 name="input.a.stea053"
            {<point name="input.a.stea053" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea053
            #add-point:ON CHANGE stea053 name="input.g.stea053"
            {<point name="input.g.stea053" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea029
            #add-point:BEFORE FIELD stea029 name="input.b.stea029"
            {<point name="input.b.stea029" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea029
            
            #add-point:AFTER FIELD stea029 name="input.a.stea029"
            {<point name="input.a.stea029" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea029
            #add-point:ON CHANGE stea029 name="input.g.stea029"
            {<point name="input.g.stea029" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea030
            #add-point:BEFORE FIELD stea030 name="input.b.stea030"
            {<point name="input.b.stea030" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea030
            
            #add-point:AFTER FIELD stea030 name="input.a.stea030"
            {<point name="input.a.stea030" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea030
            #add-point:ON CHANGE stea030 name="input.g.stea030"
            {<point name="input.g.stea030" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea032
            
            #add-point:AFTER FIELD stea032 name="input.a.stea032"
            {<point name="input.a.stea032" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea032
            #add-point:BEFORE FIELD stea032 name="input.b.stea032"
            {<point name="input.b.stea032" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea032
            #add-point:ON CHANGE stea032 name="input.g.stea032"
            {<point name="input.g.stea032" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea033
            
            #add-point:AFTER FIELD stea033 name="input.a.stea033"
            {<point name="input.a.stea033" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea033
            #add-point:BEFORE FIELD stea033 name="input.b.stea033"
            {<point name="input.b.stea033" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea033
            #add-point:ON CHANGE stea033 name="input.g.stea033"
            {<point name="input.g.stea033" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea034
            
            #add-point:AFTER FIELD stea034 name="input.a.stea034"
            {<point name="input.a.stea034" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea034
            #add-point:BEFORE FIELD stea034 name="input.b.stea034"
            {<point name="input.b.stea034" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea034
            #add-point:ON CHANGE stea034 name="input.g.stea034"
            {<point name="input.g.stea034" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea035
            
            #add-point:AFTER FIELD stea035 name="input.a.stea035"
            {<point name="input.a.stea035" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea035
            #add-point:BEFORE FIELD stea035 name="input.b.stea035"
            {<point name="input.b.stea035" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea035
            #add-point:ON CHANGE stea035 name="input.g.stea035"
            {<point name="input.g.stea035" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea036
            
            #add-point:AFTER FIELD stea036 name="input.a.stea036"
            {<point name="input.a.stea036" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea036
            #add-point:BEFORE FIELD stea036 name="input.b.stea036"
            {<point name="input.b.stea036" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea036
            #add-point:ON CHANGE stea036 name="input.g.stea036"
            {<point name="input.g.stea036" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea037
            
            #add-point:AFTER FIELD stea037 name="input.a.stea037"
            {<point name="input.a.stea037" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea037
            #add-point:BEFORE FIELD stea037 name="input.b.stea037"
            {<point name="input.b.stea037" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea037
            #add-point:ON CHANGE stea037 name="input.g.stea037"
            {<point name="input.g.stea037" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea038
            
            #add-point:AFTER FIELD stea038 name="input.a.stea038"
            {<point name="input.a.stea038" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea038
            #add-point:BEFORE FIELD stea038 name="input.b.stea038"
            {<point name="input.b.stea038" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea038
            #add-point:ON CHANGE stea038 name="input.g.stea038"
            {<point name="input.g.stea038" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea050
            #add-point:BEFORE FIELD stea050 name="input.b.stea050"
            {<point name="input.b.stea050" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea050
            
            #add-point:AFTER FIELD stea050 name="input.a.stea050"
            {<point name="input.a.stea050" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea050
            #add-point:ON CHANGE stea050 name="input.g.stea050"
            {<point name="input.g.stea050" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea058
            #add-point:BEFORE FIELD stea058 name="input.b.stea058"
            {<point name="input.b.stea058" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea058
            
            #add-point:AFTER FIELD stea058 name="input.a.stea058"
            {<point name="input.a.stea058" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea058
            #add-point:ON CHANGE stea058 name="input.g.stea058"
            {<point name="input.g.stea058" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea059
            #add-point:BEFORE FIELD stea059 name="input.b.stea059"
            {<point name="input.b.stea059" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea059
            
            #add-point:AFTER FIELD stea059 name="input.a.stea059"
            {<point name="input.a.stea059" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea059
            #add-point:ON CHANGE stea059 name="input.g.stea059"
            {<point name="input.g.stea059" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea039
            #add-point:BEFORE FIELD stea039 name="input.b.stea039"
            {<point name="input.b.stea039" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea039
            
            #add-point:AFTER FIELD stea039 name="input.a.stea039"
            {<point name="input.a.stea039" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea039
            #add-point:ON CHANGE stea039 name="input.g.stea039"
            {<point name="input.g.stea039" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea040
            #add-point:BEFORE FIELD stea040 name="input.b.stea040"
            {<point name="input.b.stea040" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea040
            
            #add-point:AFTER FIELD stea040 name="input.a.stea040"
            {<point name="input.a.stea040" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea040
            #add-point:ON CHANGE stea040 name="input.g.stea040"
            {<point name="input.g.stea040" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea052
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_stea_m.stea052,"0","1","","","azz-00079",1) THEN
               NEXT FIELD stea052
            END IF 
 
 
 
            #add-point:AFTER FIELD stea052 name="input.a.stea052"
            {<point name="input.a.stea052" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea052
            #add-point:BEFORE FIELD stea052 name="input.b.stea052"
            {<point name="input.b.stea052" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea052
            #add-point:ON CHANGE stea052 name="input.g.stea052"
            {<point name="input.g.stea052" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea028
            #add-point:BEFORE FIELD stea028 name="input.b.stea028"
            {<point name="input.b.stea028" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea028
            
            #add-point:AFTER FIELD stea028 name="input.a.stea028"
            {<point name="input.a.stea028" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea028
            #add-point:ON CHANGE stea028 name="input.g.stea028"
            {<point name="input.g.stea028" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD next_b
            #add-point:BEFORE FIELD next_b name="input.b.next_b"
            {<point name="input.b.next_b" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD next_b
            
            #add-point:AFTER FIELD next_b name="input.a.next_b"
            {<point name="input.a.next_b" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE next_b
            #add-point:ON CHANGE next_b name="input.g.next_b"
            {<point name="input.g.next_b" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea017
            #add-point:BEFORE FIELD stea017 name="input.b.stea017"
            {<point name="input.b.stea017" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea017
            
            #add-point:AFTER FIELD stea017 name="input.a.stea017"
            {<point name="input.a.stea017" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea017
            #add-point:ON CHANGE stea017 name="input.g.stea017"
            {<point name="input.g.stea017" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea021
            #add-point:BEFORE FIELD stea021 name="input.b.stea021"
            {<point name="input.b.stea021" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea021
            
            #add-point:AFTER FIELD stea021 name="input.a.stea021"
            {<point name="input.a.stea021" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea021
            #add-point:ON CHANGE stea021 name="input.g.stea021"
            {<point name="input.g.stea021" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea024
            #add-point:BEFORE FIELD stea024 name="input.b.stea024"
            {<point name="input.b.stea024" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea024
            
            #add-point:AFTER FIELD stea024 name="input.a.stea024"
            {<point name="input.a.stea024" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea024
            #add-point:ON CHANGE stea024 name="input.g.stea024"
            {<point name="input.g.stea024" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea018
            #add-point:BEFORE FIELD stea018 name="input.b.stea018"
            {<point name="input.b.stea018" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea018
            
            #add-point:AFTER FIELD stea018 name="input.a.stea018"
            {<point name="input.a.stea018" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea018
            #add-point:ON CHANGE stea018 name="input.g.stea018"
            {<point name="input.g.stea018" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea022
            #add-point:BEFORE FIELD stea022 name="input.b.stea022"
            {<point name="input.b.stea022" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea022
            
            #add-point:AFTER FIELD stea022 name="input.a.stea022"
            {<point name="input.a.stea022" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea022
            #add-point:ON CHANGE stea022 name="input.g.stea022"
            {<point name="input.g.stea022" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea025
            #add-point:BEFORE FIELD stea025 name="input.b.stea025"
            {<point name="input.b.stea025" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea025
            
            #add-point:AFTER FIELD stea025 name="input.a.stea025"
            {<point name="input.a.stea025" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea025
            #add-point:ON CHANGE stea025 name="input.g.stea025"
            {<point name="input.g.stea025" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea019
            #add-point:BEFORE FIELD stea019 name="input.b.stea019"
            {<point name="input.b.stea019" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea019
            
            #add-point:AFTER FIELD stea019 name="input.a.stea019"
            {<point name="input.a.stea019" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea019
            #add-point:ON CHANGE stea019 name="input.g.stea019"
            {<point name="input.g.stea019" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea023
            #add-point:BEFORE FIELD stea023 name="input.b.stea023"
            {<point name="input.b.stea023" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea023
            
            #add-point:AFTER FIELD stea023 name="input.a.stea023"
            {<point name="input.a.stea023" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea023
            #add-point:ON CHANGE stea023 name="input.g.stea023"
            {<point name="input.g.stea023" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea026
            #add-point:BEFORE FIELD stea026 name="input.b.stea026"
            {<point name="input.b.stea026" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea026
            
            #add-point:AFTER FIELD stea026 name="input.a.stea026"
            {<point name="input.a.stea026" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea026
            #add-point:ON CHANGE stea026 name="input.g.stea026"
            {<point name="input.g.stea026" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea020
            #add-point:BEFORE FIELD stea020 name="input.b.stea020"
            {<point name="input.b.stea020" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea020
            
            #add-point:AFTER FIELD stea020 name="input.a.stea020"
            {<point name="input.a.stea020" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea020
            #add-point:ON CHANGE stea020 name="input.g.stea020"
            {<point name="input.g.stea020" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea049
            #add-point:BEFORE FIELD stea049 name="input.b.stea049"
            {<point name="input.b.stea049" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea049
            
            #add-point:AFTER FIELD stea049 name="input.a.stea049"
            {<point name="input.a.stea049" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea049
            #add-point:ON CHANGE stea049 name="input.g.stea049"
            {<point name="input.g.stea049" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea057
            #add-point:BEFORE FIELD stea057 name="input.b.stea057"
            {<point name="input.b.stea057" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea057
            
            #add-point:AFTER FIELD stea057 name="input.a.stea057"
            {<point name="input.a.stea057" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea057
            #add-point:ON CHANGE stea057 name="input.g.stea057"
            {<point name="input.g.stea057" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea055
            #add-point:BEFORE FIELD stea055 name="input.b.stea055"
            {<point name="input.b.stea055" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea055
            
            #add-point:AFTER FIELD stea055 name="input.a.stea055"
            {<point name="input.a.stea055" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea055
            #add-point:ON CHANGE stea055 name="input.g.stea055"
            {<point name="input.g.stea055" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea027
            #add-point:BEFORE FIELD stea027 name="input.b.stea027"
            {<point name="input.b.stea027" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea027
            
            #add-point:AFTER FIELD stea027 name="input.a.stea027"
            {<point name="input.a.stea027" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea027
            #add-point:ON CHANGE stea027 name="input.g.stea027"
            {<point name="input.g.stea027" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea031
            #add-point:BEFORE FIELD stea031 name="input.b.stea031"
            {<point name="input.b.stea031" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea031
            
            #add-point:AFTER FIELD stea031 name="input.a.stea031"
            {<point name="input.a.stea031" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea031
            #add-point:ON CHANGE stea031 name="input.g.stea031"
            {<point name="input.g.stea031" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stea042
            #add-point:BEFORE FIELD stea042 name="input.b.stea042"
            {<point name="input.b.stea042" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stea042
            
            #add-point:AFTER FIELD stea042 name="input.a.stea042"
            {<point name="input.a.stea042" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stea042
            #add-point:ON CHANGE stea042 name="input.g.stea042"
            {<point name="input.g.stea042" />}
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.steasite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steasite
            #add-point:ON ACTION controlp INFIELD steasite name="input.c.steasite"
            {<point name="input.c.steasite" />}
            #END add-point
 
 
         #Ctrlp:input.c.steadocdt
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steadocdt
            #add-point:ON ACTION controlp INFIELD steadocdt name="input.c.steadocdt"
            {<point name="input.c.steadocdt" />}
            #END add-point
 
 
         #Ctrlp:input.c.steadocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steadocno
            #add-point:ON ACTION controlp INFIELD steadocno name="input.c.steadocno"
            {<point name="input.c.steadocno" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea000
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea000
            #add-point:ON ACTION controlp INFIELD stea000 name="input.c.stea000"
            {<point name="input.c.stea000" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea054
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea054
            #add-point:ON ACTION controlp INFIELD stea054 name="input.c.stea054"
            {<point name="input.c.stea054" />}
            #END add-point
 
 
         #Ctrlp:input.c.steaunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steaunit
            #add-point:ON ACTION controlp INFIELD steaunit name="input.c.steaunit"
            {<point name="input.c.steaunit" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea001
            #add-point:ON ACTION controlp INFIELD stea001 name="input.c.stea001"
            {<point name="input.c.stea001" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea002
            #add-point:ON ACTION controlp INFIELD stea002 name="input.c.stea002"
            {<point name="input.c.stea002" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea003
            #add-point:ON ACTION controlp INFIELD stea003 name="input.c.stea003"
            {<point name="input.c.stea003" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea004
            #add-point:ON ACTION controlp INFIELD stea004 name="input.c.stea004"
            {<point name="input.c.stea004" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea009
            #add-point:ON ACTION controlp INFIELD stea009 name="input.c.stea009"
            {<point name="input.c.stea009" />}
            #END add-point
 
 
         #Ctrlp:input.c.steastus
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steastus
            #add-point:ON ACTION controlp INFIELD steastus name="input.c.steastus"
            {<point name="input.c.steastus" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea010
            #add-point:ON ACTION controlp INFIELD stea010 name="input.c.stea010"
            {<point name="input.c.stea010" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea005
            #add-point:ON ACTION controlp INFIELD stea005 name="input.c.stea005"
            {<point name="input.c.stea005" />}
            #END add-point
 
 
         #Ctrlp:input.c.steal002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steal002
            #add-point:ON ACTION controlp INFIELD steal002 name="input.c.steal002"
            {<point name="input.c.steal002" />}
            #END add-point
 
 
         #Ctrlp:input.c.steal003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steal003
            #add-point:ON ACTION controlp INFIELD steal003 name="input.c.steal003"
            {<point name="input.c.steal003" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea006
            #add-point:ON ACTION controlp INFIELD stea006 name="input.c.stea006"
            {<point name="input.c.stea006" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea007
            #add-point:ON ACTION controlp INFIELD stea007 name="input.c.stea007"
            {<point name="input.c.stea007" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea008
            #add-point:ON ACTION controlp INFIELD stea008 name="input.c.stea008"
            {<point name="input.c.stea008" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea047
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea047
            #add-point:ON ACTION controlp INFIELD stea047 name="input.c.stea047"
            {<point name="input.c.stea047" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea048
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea048
            #add-point:ON ACTION controlp INFIELD stea048 name="input.c.stea048"
            {<point name="input.c.stea048" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea044
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea044
            #add-point:ON ACTION controlp INFIELD stea044 name="input.c.stea044"
            {<point name="input.c.stea044" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea051
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea051
            #add-point:ON ACTION controlp INFIELD stea051 name="input.c.stea051"
            {<point name="input.c.stea051" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea011
            #add-point:ON ACTION controlp INFIELD stea011 name="input.c.stea011"
            {<point name="input.c.stea011" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea012
            #add-point:ON ACTION controlp INFIELD stea012 name="input.c.stea012"
            {<point name="input.c.stea012" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea056
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea056
            #add-point:ON ACTION controlp INFIELD stea056 name="input.c.stea056"
            {<point name="input.c.stea056" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea013
            #add-point:ON ACTION controlp INFIELD stea013 name="input.c.stea013"
            {<point name="input.c.stea013" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea014
            #add-point:ON ACTION controlp INFIELD stea014 name="input.c.stea014"
            {<point name="input.c.stea014" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea015
            #add-point:ON ACTION controlp INFIELD stea015 name="input.c.stea015"
            {<point name="input.c.stea015" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea016
            #add-point:ON ACTION controlp INFIELD stea016 name="input.c.stea016"
            {<point name="input.c.stea016" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea045
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea045
            #add-point:ON ACTION controlp INFIELD stea045 name="input.c.stea045"
            {<point name="input.c.stea045" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea046
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea046
            #add-point:ON ACTION controlp INFIELD stea046 name="input.c.stea046"
            {<point name="input.c.stea046" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea053
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea053
            #add-point:ON ACTION controlp INFIELD stea053 name="input.c.stea053"
            {<point name="input.c.stea053" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea029
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea029
            #add-point:ON ACTION controlp INFIELD stea029 name="input.c.stea029"
            {<point name="input.c.stea029" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea030
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea030
            #add-point:ON ACTION controlp INFIELD stea030 name="input.c.stea030"
            {<point name="input.c.stea030" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea032
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea032
            #add-point:ON ACTION controlp INFIELD stea032 name="input.c.stea032"
            {<point name="input.c.stea032" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea033
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea033
            #add-point:ON ACTION controlp INFIELD stea033 name="input.c.stea033"
            {<point name="input.c.stea033" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea034
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea034
            #add-point:ON ACTION controlp INFIELD stea034 name="input.c.stea034"
            {<point name="input.c.stea034" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea035
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea035
            #add-point:ON ACTION controlp INFIELD stea035 name="input.c.stea035"
            {<point name="input.c.stea035" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea036
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea036
            #add-point:ON ACTION controlp INFIELD stea036 name="input.c.stea036"
            {<point name="input.c.stea036" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea037
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea037
            #add-point:ON ACTION controlp INFIELD stea037 name="input.c.stea037"
            {<point name="input.c.stea037" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea038
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea038
            #add-point:ON ACTION controlp INFIELD stea038 name="input.c.stea038"
            {<point name="input.c.stea038" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea050
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea050
            #add-point:ON ACTION controlp INFIELD stea050 name="input.c.stea050"
            {<point name="input.c.stea050" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea058
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea058
            #add-point:ON ACTION controlp INFIELD stea058 name="input.c.stea058"
            {<point name="input.c.stea058" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea059
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea059
            #add-point:ON ACTION controlp INFIELD stea059 name="input.c.stea059"
            {<point name="input.c.stea059" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea039
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea039
            #add-point:ON ACTION controlp INFIELD stea039 name="input.c.stea039"
            {<point name="input.c.stea039" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea040
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea040
            #add-point:ON ACTION controlp INFIELD stea040 name="input.c.stea040"
            {<point name="input.c.stea040" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea052
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea052
            #add-point:ON ACTION controlp INFIELD stea052 name="input.c.stea052"
            {<point name="input.c.stea052" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea028
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea028
            #add-point:ON ACTION controlp INFIELD stea028 name="input.c.stea028"
            {<point name="input.c.stea028" />}
            #END add-point
 
 
         #Ctrlp:input.c.next_b
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD next_b
            #add-point:ON ACTION controlp INFIELD next_b name="input.c.next_b"
            {<point name="input.c.next_b" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea017
            #add-point:ON ACTION controlp INFIELD stea017 name="input.c.stea017"
            {<point name="input.c.stea017" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea021
            #add-point:ON ACTION controlp INFIELD stea021 name="input.c.stea021"
            {<point name="input.c.stea021" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea024
            #add-point:ON ACTION controlp INFIELD stea024 name="input.c.stea024"
            {<point name="input.c.stea024" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea018
            #add-point:ON ACTION controlp INFIELD stea018 name="input.c.stea018"
            {<point name="input.c.stea018" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea022
            #add-point:ON ACTION controlp INFIELD stea022 name="input.c.stea022"
            {<point name="input.c.stea022" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea025
            #add-point:ON ACTION controlp INFIELD stea025 name="input.c.stea025"
            {<point name="input.c.stea025" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea019
            #add-point:ON ACTION controlp INFIELD stea019 name="input.c.stea019"
            {<point name="input.c.stea019" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea023
            #add-point:ON ACTION controlp INFIELD stea023 name="input.c.stea023"
            {<point name="input.c.stea023" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea026
            #add-point:ON ACTION controlp INFIELD stea026 name="input.c.stea026"
            {<point name="input.c.stea026" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea020
            #add-point:ON ACTION controlp INFIELD stea020 name="input.c.stea020"
            {<point name="input.c.stea020" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea049
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea049
            #add-point:ON ACTION controlp INFIELD stea049 name="input.c.stea049"
            {<point name="input.c.stea049" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea057
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea057
            #add-point:ON ACTION controlp INFIELD stea057 name="input.c.stea057"
            {<point name="input.c.stea057" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea055
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea055
            #add-point:ON ACTION controlp INFIELD stea055 name="input.c.stea055"
            {<point name="input.c.stea055" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea027
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea027
            #add-point:ON ACTION controlp INFIELD stea027 name="input.c.stea027"
            {<point name="input.c.stea027" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea031
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea031
            #add-point:ON ACTION controlp INFIELD stea031 name="input.c.stea031"
            {<point name="input.c.stea031" />}
            #END add-point
 
 
         #Ctrlp:input.c.stea042
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stea042
            #add-point:ON ACTION controlp INFIELD stea042 name="input.c.stea042"
            {<point name="input.c.stea042" />}
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_stea_m.steadocno
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO stea_t (steaent,steasite,steadocdt,steadocno,stea000,stea054,steaunit,stea001, 
                   stea002,stea003,stea004,stea009,steastus,stea010,stea005,stea006,stea007,stea008, 
                   stea047,stea048,stea044,stea051,stea011,stea012,stea056,stea013,stea014,stea015,stea016, 
                   stea045,stea046,stea053,stea029,stea030,stea032,stea033,stea034,stea035,stea036,stea037, 
                   stea038,stea050,stea058,stea059,stea039,stea040,stea052,stea028,stea017,stea021,stea024, 
                   stea018,stea022,stea025,stea019,stea023,stea026,stea020,stea049,stea057,stea055,stea027, 
                   stea031,stea042,steaownid,steaowndp,steacrtid,steacrtdp,steacrtdt,steamodid,steamoddt, 
                   steacnfid,steacnfdt)
               VALUES (g_enterprise,g_stea_m.steasite,g_stea_m.steadocdt,g_stea_m.steadocno,g_stea_m.stea000, 
                   g_stea_m.stea054,g_stea_m.steaunit,g_stea_m.stea001,g_stea_m.stea002,g_stea_m.stea003, 
                   g_stea_m.stea004,g_stea_m.stea009,g_stea_m.steastus,g_stea_m.stea010,g_stea_m.stea005, 
                   g_stea_m.stea006,g_stea_m.stea007,g_stea_m.stea008,g_stea_m.stea047,g_stea_m.stea048, 
                   g_stea_m.stea044,g_stea_m.stea051,g_stea_m.stea011,g_stea_m.stea012,g_stea_m.stea056, 
                   g_stea_m.stea013,g_stea_m.stea014,g_stea_m.stea015,g_stea_m.stea016,g_stea_m.stea045, 
                   g_stea_m.stea046,g_stea_m.stea053,g_stea_m.stea029,g_stea_m.stea030,g_stea_m.stea032, 
                   g_stea_m.stea033,g_stea_m.stea034,g_stea_m.stea035,g_stea_m.stea036,g_stea_m.stea037, 
                   g_stea_m.stea038,g_stea_m.stea050,g_stea_m.stea058,g_stea_m.stea059,g_stea_m.stea039, 
                   g_stea_m.stea040,g_stea_m.stea052,g_stea_m.stea028,g_stea_m.stea017,g_stea_m.stea021, 
                   g_stea_m.stea024,g_stea_m.stea018,g_stea_m.stea022,g_stea_m.stea025,g_stea_m.stea019, 
                   g_stea_m.stea023,g_stea_m.stea026,g_stea_m.stea020,g_stea_m.stea049,g_stea_m.stea057, 
                   g_stea_m.stea055,g_stea_m.stea027,g_stea_m.stea031,g_stea_m.stea042,g_stea_m.steaownid, 
                   g_stea_m.steaowndp,g_stea_m.steacrtid,g_stea_m.steacrtdp,g_stea_m.steacrtdt,g_stea_m.steamodid, 
                   g_stea_m.steamoddt,g_stea_m.steacnfid,g_stea_m.steacnfdt) 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_stea_m:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_stea_m.steadocno = g_master_multi_table_t.stealdocno AND
         g_stea_m.steal002 = g_master_multi_table_t.steal002 AND 
         g_stea_m.steal003 = g_master_multi_table_t.steal003  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'stealent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_stea_m.steadocno
            LET l_field_keys[02] = 'stealdocno'
            LET l_var_keys_bak[02] = g_master_multi_table_t.stealdocno
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'steal001'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_stea_m.steal002
            LET l_fields[01] = 'steal002'
            LET l_vars[02] = g_stea_m.steal003
            LET l_fields[02] = 'steal003'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'steal_t')
         END IF 
 
               
               #add-point:單頭新增後 name="input.head.a_insert"
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL astt401_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL astt401_b_fill()
                  CALL astt401_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL astt401_stea_t_mask_restore('restore_mask_o')
               
               UPDATE stea_t SET (steasite,steadocdt,steadocno,stea000,stea054,steaunit,stea001,stea002, 
                   stea003,stea004,stea009,steastus,stea010,stea005,stea006,stea007,stea008,stea047, 
                   stea048,stea044,stea051,stea011,stea012,stea056,stea013,stea014,stea015,stea016,stea045, 
                   stea046,stea053,stea029,stea030,stea032,stea033,stea034,stea035,stea036,stea037,stea038, 
                   stea050,stea058,stea059,stea039,stea040,stea052,stea028,stea017,stea021,stea024,stea018, 
                   stea022,stea025,stea019,stea023,stea026,stea020,stea049,stea057,stea055,stea027,stea031, 
                   stea042,steaownid,steaowndp,steacrtid,steacrtdp,steacrtdt,steamodid,steamoddt,steacnfid, 
                   steacnfdt) = (g_stea_m.steasite,g_stea_m.steadocdt,g_stea_m.steadocno,g_stea_m.stea000, 
                   g_stea_m.stea054,g_stea_m.steaunit,g_stea_m.stea001,g_stea_m.stea002,g_stea_m.stea003, 
                   g_stea_m.stea004,g_stea_m.stea009,g_stea_m.steastus,g_stea_m.stea010,g_stea_m.stea005, 
                   g_stea_m.stea006,g_stea_m.stea007,g_stea_m.stea008,g_stea_m.stea047,g_stea_m.stea048, 
                   g_stea_m.stea044,g_stea_m.stea051,g_stea_m.stea011,g_stea_m.stea012,g_stea_m.stea056, 
                   g_stea_m.stea013,g_stea_m.stea014,g_stea_m.stea015,g_stea_m.stea016,g_stea_m.stea045, 
                   g_stea_m.stea046,g_stea_m.stea053,g_stea_m.stea029,g_stea_m.stea030,g_stea_m.stea032, 
                   g_stea_m.stea033,g_stea_m.stea034,g_stea_m.stea035,g_stea_m.stea036,g_stea_m.stea037, 
                   g_stea_m.stea038,g_stea_m.stea050,g_stea_m.stea058,g_stea_m.stea059,g_stea_m.stea039, 
                   g_stea_m.stea040,g_stea_m.stea052,g_stea_m.stea028,g_stea_m.stea017,g_stea_m.stea021, 
                   g_stea_m.stea024,g_stea_m.stea018,g_stea_m.stea022,g_stea_m.stea025,g_stea_m.stea019, 
                   g_stea_m.stea023,g_stea_m.stea026,g_stea_m.stea020,g_stea_m.stea049,g_stea_m.stea057, 
                   g_stea_m.stea055,g_stea_m.stea027,g_stea_m.stea031,g_stea_m.stea042,g_stea_m.steaownid, 
                   g_stea_m.steaowndp,g_stea_m.steacrtid,g_stea_m.steacrtdp,g_stea_m.steacrtdt,g_stea_m.steamodid, 
                   g_stea_m.steamoddt,g_stea_m.steacnfid,g_stea_m.steacnfdt)
                WHERE steaent = g_enterprise AND steadocno = g_steadocno_t
 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "stea_t:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_stea_m.steadocno = g_master_multi_table_t.stealdocno AND
         g_stea_m.steal002 = g_master_multi_table_t.steal002 AND 
         g_stea_m.steal003 = g_master_multi_table_t.steal003  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'stealent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_stea_m.steadocno
            LET l_field_keys[02] = 'stealdocno'
            LET l_var_keys_bak[02] = g_master_multi_table_t.stealdocno
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'steal001'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_stea_m.steal002
            LET l_fields[01] = 'steal002'
            LET l_vars[02] = g_stea_m.steal003
            LET l_fields[02] = 'steal003'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'steal_t')
         END IF 
 
               
               #將遮罩欄位進行遮蔽
               CALL astt401_stea_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_stea_m_t)
               LET g_log2 = util.JSON.stringify(g_stea_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_steadocno_t = g_stea_m.steadocno
 
            
      END INPUT
   

{</section>}

{<section id="astt401.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_steb_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_steb_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astt401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_steb_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astt401_cl USING g_enterprise,g_stea_m.steadocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astt401_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astt401_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_steb_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_steb_d[l_ac].stebseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_steb_d_t.* = g_steb_d[l_ac].*  #BACKUP
               LET g_steb_d_o.* = g_steb_d[l_ac].*  #BACKUP
               CALL astt401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL astt401_set_no_entry_b(l_cmd)
               IF NOT astt401_lock_b("steb_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astt401_bcl INTO g_steb_d[l_ac].stebseq,g_steb_d[l_ac].steb001,g_steb_d[l_ac].steb002, 
                      g_steb_d[l_ac].steb018,g_steb_d[l_ac].steb019,g_steb_d[l_ac].steb003,g_steb_d[l_ac].steb004, 
                      g_steb_d[l_ac].steb005,g_steb_d[l_ac].steb006,g_steb_d[l_ac].steb007,g_steb_d[l_ac].steb020, 
                      g_steb_d[l_ac].steb008,g_steb_d[l_ac].steb009,g_steb_d[l_ac].steb010,g_steb_d[l_ac].steb011, 
                      g_steb_d[l_ac].steb012,g_steb_d[l_ac].steb013,g_steb_d[l_ac].steb014,g_steb_d[l_ac].steb026, 
                      g_steb_d[l_ac].steb015,g_steb_d[l_ac].steb016,g_steb_d[l_ac].steb017,g_steb_d[l_ac].steb021, 
                      g_steb_d[l_ac].steb022,g_steb_d[l_ac].steb023,g_steb_d[l_ac].steb024,g_steb_d[l_ac].steb025, 
                      g_steb_d[l_ac].stebsite,g_steb_d[l_ac].stebunit
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_steb_d_t.stebseq,":",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_steb_d_mask_o[l_ac].* =  g_steb_d[l_ac].*
                  CALL astt401_steb_t_mask()
                  LET g_steb_d_mask_n[l_ac].* =  g_steb_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astt401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_steb_d[l_ac].* TO NULL 
            INITIALIZE g_steb_d_t.* TO NULL 
            INITIALIZE g_steb_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_steb_d[l_ac].steb018 = "N"
      LET g_steb_d[l_ac].steb019 = "N"
      LET g_steb_d[l_ac].steb020 = "Y"
      LET g_steb_d[l_ac].steb026 = "Y"
 
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_steb_d_t.* = g_steb_d[l_ac].*     #新輸入資料
            LET g_steb_d_o.* = g_steb_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astt401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL astt401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_steb_d[li_reproduce_target].* = g_steb_d[li_reproduce].*
 
               LET g_steb_d[li_reproduce_target].stebseq = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM steb_t 
             WHERE stebent = g_enterprise AND stebdocno = g_stea_m.steadocno
 
               AND stebseq = g_steb_d[l_ac].stebseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys[2] = g_steb_d[g_detail_idx].stebseq
               CALL astt401_insert_b('steb_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               INITIALIZE g_steb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "steb_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astt401_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               {<point name="input.body.b_delete_ask" />}
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stea_m.steadocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_steb_d_t.stebseq
 
            
               #刪除同層單身
               IF NOT astt401_delete_b('steb_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astt401_key_delete_b(gs_keys,'steb_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE astt401_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_steb_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_steb_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stebseq
            #add-point:BEFORE FIELD stebseq name="input.b.page1.stebseq"
            {<point name="input.b.page1.stebseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stebseq
            
            #add-point:AFTER FIELD stebseq name="input.a.page1.stebseq"
            {<point name="input.a.page1.stebseq" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stebseq
            #add-point:ON CHANGE stebseq name="input.g.page1.stebseq"
            {<point name="input.g.page1.stebseq" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb001
            #add-point:BEFORE FIELD steb001 name="input.b.page1.steb001"
            {<point name="input.b.page1.steb001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb001
            
            #add-point:AFTER FIELD steb001 name="input.a.page1.steb001"
            {<point name="input.a.page1.steb001" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steb001
            #add-point:ON CHANGE steb001 name="input.g.page1.steb001"
            {<point name="input.g.page1.steb001" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb002
            
            #add-point:AFTER FIELD steb002 name="input.a.page1.steb002"
            {<point name="input.a.page1.steb002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb002
            #add-point:BEFORE FIELD steb002 name="input.b.page1.steb002"
            {<point name="input.b.page1.steb002" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steb002
            #add-point:ON CHANGE steb002 name="input.g.page1.steb002"
            {<point name="input.g.page1.steb002" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb018
            #add-point:BEFORE FIELD steb018 name="input.b.page1.steb018"
            {<point name="input.b.page1.steb018" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb018
            
            #add-point:AFTER FIELD steb018 name="input.a.page1.steb018"
            {<point name="input.a.page1.steb018" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steb018
            #add-point:ON CHANGE steb018 name="input.g.page1.steb018"
            {<point name="input.g.page1.steb018" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb019
            #add-point:BEFORE FIELD steb019 name="input.b.page1.steb019"
            {<point name="input.b.page1.steb019" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb019
            
            #add-point:AFTER FIELD steb019 name="input.a.page1.steb019"
            {<point name="input.a.page1.steb019" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steb019
            #add-point:ON CHANGE steb019 name="input.g.page1.steb019"
            {<point name="input.g.page1.steb019" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb003
            #add-point:BEFORE FIELD steb003 name="input.b.page1.steb003"
            {<point name="input.b.page1.steb003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb003
            
            #add-point:AFTER FIELD steb003 name="input.a.page1.steb003"
            {<point name="input.a.page1.steb003" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steb003
            #add-point:ON CHANGE steb003 name="input.g.page1.steb003"
            {<point name="input.g.page1.steb003" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb004
            #add-point:BEFORE FIELD steb004 name="input.b.page1.steb004"
            {<point name="input.b.page1.steb004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb004
            
            #add-point:AFTER FIELD steb004 name="input.a.page1.steb004"
            {<point name="input.a.page1.steb004" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steb004
            #add-point:ON CHANGE steb004 name="input.g.page1.steb004"
            {<point name="input.g.page1.steb004" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb005
            #add-point:BEFORE FIELD steb005 name="input.b.page1.steb005"
            {<point name="input.b.page1.steb005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb005
            
            #add-point:AFTER FIELD steb005 name="input.a.page1.steb005"
            {<point name="input.a.page1.steb005" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steb005
            #add-point:ON CHANGE steb005 name="input.g.page1.steb005"
            {<point name="input.g.page1.steb005" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb006
            #add-point:BEFORE FIELD steb006 name="input.b.page1.steb006"
            {<point name="input.b.page1.steb006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb006
            
            #add-point:AFTER FIELD steb006 name="input.a.page1.steb006"
            {<point name="input.a.page1.steb006" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steb006
            #add-point:ON CHANGE steb006 name="input.g.page1.steb006"
            {<point name="input.g.page1.steb006" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb007
            #add-point:BEFORE FIELD steb007 name="input.b.page1.steb007"
            {<point name="input.b.page1.steb007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb007
            
            #add-point:AFTER FIELD steb007 name="input.a.page1.steb007"
            {<point name="input.a.page1.steb007" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steb007
            #add-point:ON CHANGE steb007 name="input.g.page1.steb007"
            {<point name="input.g.page1.steb007" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb020
            #add-point:BEFORE FIELD steb020 name="input.b.page1.steb020"
            {<point name="input.b.page1.steb020" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb020
            
            #add-point:AFTER FIELD steb020 name="input.a.page1.steb020"
            {<point name="input.a.page1.steb020" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steb020
            #add-point:ON CHANGE steb020 name="input.g.page1.steb020"
            {<point name="input.g.page1.steb020" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb008
            
            #add-point:AFTER FIELD steb008 name="input.a.page1.steb008"
            {<point name="input.a.page1.steb008" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb008
            #add-point:BEFORE FIELD steb008 name="input.b.page1.steb008"
            {<point name="input.b.page1.steb008" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steb008
            #add-point:ON CHANGE steb008 name="input.g.page1.steb008"
            {<point name="input.g.page1.steb008" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb009
            
            #add-point:AFTER FIELD steb009 name="input.a.page1.steb009"
            {<point name="input.a.page1.steb009" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb009
            #add-point:BEFORE FIELD steb009 name="input.b.page1.steb009"
            {<point name="input.b.page1.steb009" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steb009
            #add-point:ON CHANGE steb009 name="input.g.page1.steb009"
            {<point name="input.g.page1.steb009" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb010
            #add-point:BEFORE FIELD steb010 name="input.b.page1.steb010"
            {<point name="input.b.page1.steb010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb010
            
            #add-point:AFTER FIELD steb010 name="input.a.page1.steb010"
            {<point name="input.a.page1.steb010" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steb010
            #add-point:ON CHANGE steb010 name="input.g.page1.steb010"
            {<point name="input.g.page1.steb010" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb011
            #add-point:BEFORE FIELD steb011 name="input.b.page1.steb011"
            {<point name="input.b.page1.steb011" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb011
            
            #add-point:AFTER FIELD steb011 name="input.a.page1.steb011"
            {<point name="input.a.page1.steb011" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steb011
            #add-point:ON CHANGE steb011 name="input.g.page1.steb011"
            {<point name="input.g.page1.steb011" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb012
            #add-point:BEFORE FIELD steb012 name="input.b.page1.steb012"
            {<point name="input.b.page1.steb012" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb012
            
            #add-point:AFTER FIELD steb012 name="input.a.page1.steb012"
            {<point name="input.a.page1.steb012" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steb012
            #add-point:ON CHANGE steb012 name="input.g.page1.steb012"
            {<point name="input.g.page1.steb012" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb013
            #add-point:BEFORE FIELD steb013 name="input.b.page1.steb013"
            {<point name="input.b.page1.steb013" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb013
            
            #add-point:AFTER FIELD steb013 name="input.a.page1.steb013"
            {<point name="input.a.page1.steb013" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steb013
            #add-point:ON CHANGE steb013 name="input.g.page1.steb013"
            {<point name="input.g.page1.steb013" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb014
            #add-point:BEFORE FIELD steb014 name="input.b.page1.steb014"
            {<point name="input.b.page1.steb014" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb014
            
            #add-point:AFTER FIELD steb014 name="input.a.page1.steb014"
            {<point name="input.a.page1.steb014" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steb014
            #add-point:ON CHANGE steb014 name="input.g.page1.steb014"
            {<point name="input.g.page1.steb014" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb026
            #add-point:BEFORE FIELD steb026 name="input.b.page1.steb026"
            {<point name="input.b.page1.steb026" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb026
            
            #add-point:AFTER FIELD steb026 name="input.a.page1.steb026"
            {<point name="input.a.page1.steb026" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steb026
            #add-point:ON CHANGE steb026 name="input.g.page1.steb026"
            {<point name="input.g.page1.steb026" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb015
            #add-point:BEFORE FIELD steb015 name="input.b.page1.steb015"
            {<point name="input.b.page1.steb015" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb015
            
            #add-point:AFTER FIELD steb015 name="input.a.page1.steb015"
            {<point name="input.a.page1.steb015" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steb015
            #add-point:ON CHANGE steb015 name="input.g.page1.steb015"
            {<point name="input.g.page1.steb015" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb016
            #add-point:BEFORE FIELD steb016 name="input.b.page1.steb016"
            {<point name="input.b.page1.steb016" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb016
            
            #add-point:AFTER FIELD steb016 name="input.a.page1.steb016"
            {<point name="input.a.page1.steb016" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steb016
            #add-point:ON CHANGE steb016 name="input.g.page1.steb016"
            {<point name="input.g.page1.steb016" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb017
            #add-point:BEFORE FIELD steb017 name="input.b.page1.steb017"
            {<point name="input.b.page1.steb017" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb017
            
            #add-point:AFTER FIELD steb017 name="input.a.page1.steb017"
            {<point name="input.a.page1.steb017" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steb017
            #add-point:ON CHANGE steb017 name="input.g.page1.steb017"
            {<point name="input.g.page1.steb017" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb021
            #add-point:BEFORE FIELD steb021 name="input.b.page1.steb021"
            {<point name="input.b.page1.steb021" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb021
            
            #add-point:AFTER FIELD steb021 name="input.a.page1.steb021"
            {<point name="input.a.page1.steb021" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steb021
            #add-point:ON CHANGE steb021 name="input.g.page1.steb021"
            {<point name="input.g.page1.steb021" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb022
            #add-point:BEFORE FIELD steb022 name="input.b.page1.steb022"
            {<point name="input.b.page1.steb022" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb022
            
            #add-point:AFTER FIELD steb022 name="input.a.page1.steb022"
            {<point name="input.a.page1.steb022" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steb022
            #add-point:ON CHANGE steb022 name="input.g.page1.steb022"
            {<point name="input.g.page1.steb022" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb023
            #add-point:BEFORE FIELD steb023 name="input.b.page1.steb023"
            {<point name="input.b.page1.steb023" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb023
            
            #add-point:AFTER FIELD steb023 name="input.a.page1.steb023"
            {<point name="input.a.page1.steb023" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steb023
            #add-point:ON CHANGE steb023 name="input.g.page1.steb023"
            {<point name="input.g.page1.steb023" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb024
            #add-point:BEFORE FIELD steb024 name="input.b.page1.steb024"
            {<point name="input.b.page1.steb024" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb024
            
            #add-point:AFTER FIELD steb024 name="input.a.page1.steb024"
            {<point name="input.a.page1.steb024" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steb024
            #add-point:ON CHANGE steb024 name="input.g.page1.steb024"
            {<point name="input.g.page1.steb024" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steb025
            #add-point:BEFORE FIELD steb025 name="input.b.page1.steb025"
            {<point name="input.b.page1.steb025" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steb025
            
            #add-point:AFTER FIELD steb025 name="input.a.page1.steb025"
            {<point name="input.a.page1.steb025" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steb025
            #add-point:ON CHANGE steb025 name="input.g.page1.steb025"
            {<point name="input.g.page1.steb025" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stebsite
            #add-point:BEFORE FIELD stebsite name="input.b.page1.stebsite"
            {<point name="input.b.page1.stebsite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stebsite
            
            #add-point:AFTER FIELD stebsite name="input.a.page1.stebsite"
            {<point name="input.a.page1.stebsite" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stebsite
            #add-point:ON CHANGE stebsite name="input.g.page1.stebsite"
            {<point name="input.g.page1.stebsite" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stebunit
            #add-point:BEFORE FIELD stebunit name="input.b.page1.stebunit"
            {<point name="input.b.page1.stebunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stebunit
            
            #add-point:AFTER FIELD stebunit name="input.a.page1.stebunit"
            {<point name="input.a.page1.stebunit" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stebunit
            #add-point:ON CHANGE stebunit name="input.g.page1.stebunit"
            {<point name="input.g.page1.stebunit" />}
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.stebseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stebseq
            #add-point:ON ACTION controlp INFIELD stebseq name="input.c.page1.stebseq"
            {<point name="input.c.page1.stebseq" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.steb001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb001
            #add-point:ON ACTION controlp INFIELD steb001 name="input.c.page1.steb001"
            {<point name="input.c.page1.steb001" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.steb002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb002
            #add-point:ON ACTION controlp INFIELD steb002 name="input.c.page1.steb002"
            {<point name="input.c.page1.steb002" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.steb018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb018
            #add-point:ON ACTION controlp INFIELD steb018 name="input.c.page1.steb018"
            {<point name="input.c.page1.steb018" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.steb019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb019
            #add-point:ON ACTION controlp INFIELD steb019 name="input.c.page1.steb019"
            {<point name="input.c.page1.steb019" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.steb003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb003
            #add-point:ON ACTION controlp INFIELD steb003 name="input.c.page1.steb003"
            {<point name="input.c.page1.steb003" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.steb004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb004
            #add-point:ON ACTION controlp INFIELD steb004 name="input.c.page1.steb004"
            {<point name="input.c.page1.steb004" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.steb005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb005
            #add-point:ON ACTION controlp INFIELD steb005 name="input.c.page1.steb005"
            {<point name="input.c.page1.steb005" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.steb006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb006
            #add-point:ON ACTION controlp INFIELD steb006 name="input.c.page1.steb006"
            {<point name="input.c.page1.steb006" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.steb007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb007
            #add-point:ON ACTION controlp INFIELD steb007 name="input.c.page1.steb007"
            {<point name="input.c.page1.steb007" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.steb020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb020
            #add-point:ON ACTION controlp INFIELD steb020 name="input.c.page1.steb020"
            {<point name="input.c.page1.steb020" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.steb008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb008
            #add-point:ON ACTION controlp INFIELD steb008 name="input.c.page1.steb008"
            {<point name="input.c.page1.steb008" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.steb009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb009
            #add-point:ON ACTION controlp INFIELD steb009 name="input.c.page1.steb009"
            {<point name="input.c.page1.steb009" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.steb010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb010
            #add-point:ON ACTION controlp INFIELD steb010 name="input.c.page1.steb010"
            {<point name="input.c.page1.steb010" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.steb011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb011
            #add-point:ON ACTION controlp INFIELD steb011 name="input.c.page1.steb011"
            {<point name="input.c.page1.steb011" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.steb012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb012
            #add-point:ON ACTION controlp INFIELD steb012 name="input.c.page1.steb012"
            {<point name="input.c.page1.steb012" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.steb013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb013
            #add-point:ON ACTION controlp INFIELD steb013 name="input.c.page1.steb013"
            {<point name="input.c.page1.steb013" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.steb014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb014
            #add-point:ON ACTION controlp INFIELD steb014 name="input.c.page1.steb014"
            {<point name="input.c.page1.steb014" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.steb026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb026
            #add-point:ON ACTION controlp INFIELD steb026 name="input.c.page1.steb026"
            {<point name="input.c.page1.steb026" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.steb015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb015
            #add-point:ON ACTION controlp INFIELD steb015 name="input.c.page1.steb015"
            {<point name="input.c.page1.steb015" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.steb016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb016
            #add-point:ON ACTION controlp INFIELD steb016 name="input.c.page1.steb016"
            {<point name="input.c.page1.steb016" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.steb017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb017
            #add-point:ON ACTION controlp INFIELD steb017 name="input.c.page1.steb017"
            {<point name="input.c.page1.steb017" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.steb021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb021
            #add-point:ON ACTION controlp INFIELD steb021 name="input.c.page1.steb021"
            {<point name="input.c.page1.steb021" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.steb022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb022
            #add-point:ON ACTION controlp INFIELD steb022 name="input.c.page1.steb022"
            {<point name="input.c.page1.steb022" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.steb023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb023
            #add-point:ON ACTION controlp INFIELD steb023 name="input.c.page1.steb023"
            {<point name="input.c.page1.steb023" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.steb024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb024
            #add-point:ON ACTION controlp INFIELD steb024 name="input.c.page1.steb024"
            {<point name="input.c.page1.steb024" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.steb025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steb025
            #add-point:ON ACTION controlp INFIELD steb025 name="input.c.page1.steb025"
            {<point name="input.c.page1.steb025" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.stebsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stebsite
            #add-point:ON ACTION controlp INFIELD stebsite name="input.c.page1.stebsite"
            {<point name="input.c.page1.stebsite" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.stebunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stebunit
            #add-point:ON ACTION controlp INFIELD stebunit name="input.c.page1.stebunit"
            {<point name="input.c.page1.stebunit" />}
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_steb_d[l_ac].* = g_steb_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astt401_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_steb_d[l_ac].stebseq 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_steb_d[l_ac].* = g_steb_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL astt401_steb_t_mask_restore('restore_mask_o')
      
               UPDATE steb_t SET (stebdocno,stebseq,steb001,steb002,steb018,steb019,steb003,steb004, 
                   steb005,steb006,steb007,steb020,steb008,steb009,steb010,steb011,steb012,steb013,steb014, 
                   steb026,steb015,steb016,steb017,steb021,steb022,steb023,steb024,steb025,stebsite, 
                   stebunit) = (g_stea_m.steadocno,g_steb_d[l_ac].stebseq,g_steb_d[l_ac].steb001,g_steb_d[l_ac].steb002, 
                   g_steb_d[l_ac].steb018,g_steb_d[l_ac].steb019,g_steb_d[l_ac].steb003,g_steb_d[l_ac].steb004, 
                   g_steb_d[l_ac].steb005,g_steb_d[l_ac].steb006,g_steb_d[l_ac].steb007,g_steb_d[l_ac].steb020, 
                   g_steb_d[l_ac].steb008,g_steb_d[l_ac].steb009,g_steb_d[l_ac].steb010,g_steb_d[l_ac].steb011, 
                   g_steb_d[l_ac].steb012,g_steb_d[l_ac].steb013,g_steb_d[l_ac].steb014,g_steb_d[l_ac].steb026, 
                   g_steb_d[l_ac].steb015,g_steb_d[l_ac].steb016,g_steb_d[l_ac].steb017,g_steb_d[l_ac].steb021, 
                   g_steb_d[l_ac].steb022,g_steb_d[l_ac].steb023,g_steb_d[l_ac].steb024,g_steb_d[l_ac].steb025, 
                   g_steb_d[l_ac].stebsite,g_steb_d[l_ac].stebunit)
                WHERE stebent = g_enterprise AND stebdocno = g_stea_m.steadocno 
 
                  AND stebseq = g_steb_d_t.stebseq #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_steb_d[l_ac].* = g_steb_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "steb_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_steb_d[l_ac].* = g_steb_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "steb_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys_bak[1] = g_steadocno_t
               LET gs_keys[2] = g_steb_d[g_detail_idx].stebseq
               LET gs_keys_bak[2] = g_steb_d_t.stebseq
               CALL astt401_update_b('steb_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL astt401_steb_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_steb_d[g_detail_idx].stebseq = g_steb_d_t.stebseq 
 
                  ) THEN
                  LET gs_keys[01] = g_stea_m.steadocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_steb_d_t.stebseq
 
                  CALL astt401_key_update_b(gs_keys,'steb_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb_d_t)
               LET g_log2 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL astt401_unlock_b("steb_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            {<point name="input.body.after_input"/>}
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_steb_d[li_reproduce_target].* = g_steb_d[li_reproduce].*
 
               LET g_steb_d[li_reproduce_target].stebseq = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_steb_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_steb_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_steb10_d FROM s_detail10.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION astt401_02
            LET g_action_choice="astt401_02"
            IF cl_auth_chk_act("astt401_02") THEN
               
               #add-point:ON ACTION astt401_02 name="input.detail_input.page2.astt401_02"
               {<point name="input.detail_input.page2.astt401_02" mark="Y"/>}
               #END add-point
            END IF
 
 
 
 
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body10.before_input2"
            {<point name="input.body10.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_steb10_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astt401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_steb10_d.getLength()
            #add-point:資料輸入前 name="input.body10.before_input"
            {<point name="input.body10.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_steb10_d[l_ac].* TO NULL 
            INITIALIZE g_steb10_d_t.* TO NULL 
            INITIALIZE g_steb10_d_o.* TO NULL 
            #公用欄位給值(單身2)
            
            #自定義預設值(單身2)
                  LET g_steb10_d[l_ac].stek004 = "2"
      LET g_steb10_d[l_ac].stekacti = "Y"
 
            #add-point:modify段before備份 name="input.body10.insert.before_bak"
            {<point name="input.body10.insert.before_bak"/>}
            #end add-point
            LET g_steb10_d_t.* = g_steb10_d[l_ac].*     #新輸入資料
            LET g_steb10_d_o.* = g_steb10_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astt401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body10.insert.after_set_entry_b"
            {<point name="input.body10.insert.after_set_entry_b"/>}
            #end add-point
            CALL astt401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_steb10_d[li_reproduce_target].* = g_steb10_d[li_reproduce].*
 
               LET g_steb10_d[li_reproduce_target].stekseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body10.before_insert"
            {<point name="input.body10.before_insert"/>}
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body10.before_row2"
            {<point name="input.body10.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[2] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 2
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astt401_cl USING g_enterprise,g_stea_m.steadocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astt401_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astt401_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_steb10_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_steb10_d[l_ac].stekseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_steb10_d_t.* = g_steb10_d[l_ac].*  #BACKUP
               LET g_steb10_d_o.* = g_steb10_d[l_ac].*  #BACKUP
               CALL astt401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body10.after_set_entry_b"
               {<point name="input.body10.after_set_entry_b"/>}
               #end add-point  
               CALL astt401_set_no_entry_b(l_cmd)
               IF NOT astt401_lock_b("stek_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astt401_bcl2 INTO g_steb10_d[l_ac].steksite,g_steb10_d[l_ac].stekunit,g_steb10_d[l_ac].stek001, 
                      g_steb10_d[l_ac].stekseq,g_steb10_d[l_ac].stek002,g_steb10_d[l_ac].stek020,g_steb10_d[l_ac].stek021, 
                      g_steb10_d[l_ac].stek003,g_steb10_d[l_ac].stek004,g_steb10_d[l_ac].stek018,g_steb10_d[l_ac].stek019, 
                      g_steb10_d[l_ac].stek005,g_steb10_d[l_ac].stek006,g_steb10_d[l_ac].stek007,g_steb10_d[l_ac].stek008, 
                      g_steb10_d[l_ac].stek009,g_steb10_d[l_ac].stek010,g_steb10_d[l_ac].stek011,g_steb10_d[l_ac].stek012, 
                      g_steb10_d[l_ac].stek013,g_steb10_d[l_ac].stek014,g_steb10_d[l_ac].stekacti,g_steb10_d[l_ac].stek015, 
                      g_steb10_d[l_ac].stek016,g_steb10_d[l_ac].stek017,g_steb10_d[l_ac].stek022,g_steb10_d[l_ac].stek023, 
                      g_steb10_d[l_ac].stek024,g_steb10_d[l_ac].stek025,g_steb10_d[l_ac].stek026
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_steb10_d_mask_o[l_ac].* =  g_steb10_d[l_ac].*
                  CALL astt401_stek_t_mask()
                  LET g_steb10_d_mask_n[l_ac].* =  g_steb10_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astt401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body10.before_row"
            {<point name="input.body10.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body10.after_delete_d"
               {<point name="input.body10.after_delete_d"/>}
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body10.b_delete_ask"
               {<point name="input.body10.b_delete_ask" />}
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前 name="input.body10.b_delete"
               {<point name="input.body10.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stea_m.steadocno
               LET gs_keys[gs_keys.getLength()+1] = g_steb10_d_t.stekseq
            
               #刪除同層單身
               IF NOT astt401_delete_b('stek_t',gs_keys,"'2'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astt401_key_delete_b(gs_keys,'stek_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身2刪除中 name="input.body10.m_delete"
               {<point name="input.body10.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astt401_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身2刪除後 name="input.body10.a_delete"
               {<point name="input.body10.a_delete"/>}
               #end add-point
               LET l_count = g_steb_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body10.after_delete"
               {<point name="input.body10.after_delete"/>}
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_steb10_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前 name="input.body10.b_a_insert"
            {<point name="input.body10.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stek_t 
             WHERE stekent = g_enterprise AND stekdocno = g_stea_m.steadocno
               AND stekseq = g_steb10_d[l_ac].stekseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前 name="input.body10.b_insert"
               {<point name="input.body10.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys[2] = g_steb10_d[g_detail_idx].stekseq
               CALL astt401_insert_b('stek_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2 name="input.body10.a_insert"
               {<point name="input.body10.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_steb_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stek_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astt401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body10.after_insert"
               {<point name="input.body10.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_steb10_d[l_ac].* = g_steb10_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astt401_bcl2
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_steb10_d[l_ac].* = g_steb10_d_t.*
            ELSE
               #add-point:單身page2修改前 name="input.body10.b_update"
               {<point name="input.body10.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               #將遮罩欄位還原
               CALL astt401_stek_t_mask_restore('restore_mask_o')
                              
               UPDATE stek_t SET (stekdocno,steksite,stekunit,stek001,stekseq,stek002,stek020,stek021, 
                   stek003,stek004,stek018,stek019,stek005,stek006,stek007,stek008,stek009,stek010,stek011, 
                   stek012,stek013,stek014,stekacti,stek015,stek016,stek017,stek022,stek023,stek024, 
                   stek025,stek026) = (g_stea_m.steadocno,g_steb10_d[l_ac].steksite,g_steb10_d[l_ac].stekunit, 
                   g_steb10_d[l_ac].stek001,g_steb10_d[l_ac].stekseq,g_steb10_d[l_ac].stek002,g_steb10_d[l_ac].stek020, 
                   g_steb10_d[l_ac].stek021,g_steb10_d[l_ac].stek003,g_steb10_d[l_ac].stek004,g_steb10_d[l_ac].stek018, 
                   g_steb10_d[l_ac].stek019,g_steb10_d[l_ac].stek005,g_steb10_d[l_ac].stek006,g_steb10_d[l_ac].stek007, 
                   g_steb10_d[l_ac].stek008,g_steb10_d[l_ac].stek009,g_steb10_d[l_ac].stek010,g_steb10_d[l_ac].stek011, 
                   g_steb10_d[l_ac].stek012,g_steb10_d[l_ac].stek013,g_steb10_d[l_ac].stek014,g_steb10_d[l_ac].stekacti, 
                   g_steb10_d[l_ac].stek015,g_steb10_d[l_ac].stek016,g_steb10_d[l_ac].stek017,g_steb10_d[l_ac].stek022, 
                   g_steb10_d[l_ac].stek023,g_steb10_d[l_ac].stek024,g_steb10_d[l_ac].stek025,g_steb10_d[l_ac].stek026)  
                   #自訂欄位頁簽
                WHERE stekent = g_enterprise AND stekdocno = g_stea_m.steadocno
                  AND stekseq = g_steb10_d_t.stekseq #項次 
                  
               #add-point:單身page2修改中 name="input.body10.m_update"
               {<point name="input.body10.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_steb10_d[l_ac].* = g_steb10_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stek_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_steb10_d[l_ac].* = g_steb10_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stek_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys_bak[1] = g_steadocno_t
               LET gs_keys[2] = g_steb10_d[g_detail_idx].stekseq
               LET gs_keys_bak[2] = g_steb10_d_t.stekseq
               CALL astt401_update_b('stek_t',gs_keys,gs_keys_bak,"'2'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astt401_stek_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_steb10_d[g_detail_idx].stekseq = g_steb10_d_t.stekseq 
                  ) THEN
                  LET gs_keys[01] = g_stea_m.steadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_steb10_d_t.stekseq
                  CALL astt401_key_update_b(gs_keys,'stek_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb10_d_t)
               LET g_log2 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb10_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後 name="input.body10.a_update"
               {<point name="input.body10.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steksite
            #add-point:BEFORE FIELD steksite name="input.b.page10.steksite"
            {<point name="input.b.page10.steksite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steksite
            
            #add-point:AFTER FIELD steksite name="input.a.page10.steksite"
            {<point name="input.a.page10.steksite" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steksite
            #add-point:ON CHANGE steksite name="input.g.page10.steksite"
            {<point name="input.g.page10.steksite" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stekunit
            #add-point:BEFORE FIELD stekunit name="input.b.page10.stekunit"
            {<point name="input.b.page10.stekunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stekunit
            
            #add-point:AFTER FIELD stekunit name="input.a.page10.stekunit"
            {<point name="input.a.page10.stekunit" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stekunit
            #add-point:ON CHANGE stekunit name="input.g.page10.stekunit"
            {<point name="input.g.page10.stekunit" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek001
            #add-point:BEFORE FIELD stek001 name="input.b.page10.stek001"
            {<point name="input.b.page10.stek001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek001
            
            #add-point:AFTER FIELD stek001 name="input.a.page10.stek001"
            {<point name="input.a.page10.stek001" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stek001
            #add-point:ON CHANGE stek001 name="input.g.page10.stek001"
            {<point name="input.g.page10.stek001" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stekseq
            #add-point:BEFORE FIELD stekseq name="input.b.page10.stekseq"
            {<point name="input.b.page10.stekseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stekseq
            
            #add-point:AFTER FIELD stekseq name="input.a.page10.stekseq"
            {<point name="input.a.page10.stekseq" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stekseq
            #add-point:ON CHANGE stekseq name="input.g.page10.stekseq"
            {<point name="input.g.page10.stekseq" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek002
            
            #add-point:AFTER FIELD stek002 name="input.a.page10.stek002"
            {<point name="input.a.page10.stek002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek002
            #add-point:BEFORE FIELD stek002 name="input.b.page10.stek002"
            {<point name="input.b.page10.stek002" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stek002
            #add-point:ON CHANGE stek002 name="input.g.page10.stek002"
            {<point name="input.g.page10.stek002" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek020
            #add-point:BEFORE FIELD stek020 name="input.b.page10.stek020"
            {<point name="input.b.page10.stek020" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek020
            
            #add-point:AFTER FIELD stek020 name="input.a.page10.stek020"
            {<point name="input.a.page10.stek020" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stek020
            #add-point:ON CHANGE stek020 name="input.g.page10.stek020"
            {<point name="input.g.page10.stek020" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek021
            #add-point:BEFORE FIELD stek021 name="input.b.page10.stek021"
            {<point name="input.b.page10.stek021" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek021
            
            #add-point:AFTER FIELD stek021 name="input.a.page10.stek021"
            {<point name="input.a.page10.stek021" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stek021
            #add-point:ON CHANGE stek021 name="input.g.page10.stek021"
            {<point name="input.g.page10.stek021" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek003
            #add-point:BEFORE FIELD stek003 name="input.b.page10.stek003"
            {<point name="input.b.page10.stek003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek003
            
            #add-point:AFTER FIELD stek003 name="input.a.page10.stek003"
            {<point name="input.a.page10.stek003" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stek003
            #add-point:ON CHANGE stek003 name="input.g.page10.stek003"
            {<point name="input.g.page10.stek003" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek004
            #add-point:BEFORE FIELD stek004 name="input.b.page10.stek004"
            {<point name="input.b.page10.stek004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek004
            
            #add-point:AFTER FIELD stek004 name="input.a.page10.stek004"
            {<point name="input.a.page10.stek004" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stek004
            #add-point:ON CHANGE stek004 name="input.g.page10.stek004"
            {<point name="input.g.page10.stek004" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek018
            #add-point:BEFORE FIELD stek018 name="input.b.page10.stek018"
            {<point name="input.b.page10.stek018" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek018
            
            #add-point:AFTER FIELD stek018 name="input.a.page10.stek018"
            {<point name="input.a.page10.stek018" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stek018
            #add-point:ON CHANGE stek018 name="input.g.page10.stek018"
            {<point name="input.g.page10.stek018" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek019
            
            #add-point:AFTER FIELD stek019 name="input.a.page10.stek019"
            {<point name="input.a.page10.stek019" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek019
            #add-point:BEFORE FIELD stek019 name="input.b.page10.stek019"
            {<point name="input.b.page10.stek019" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stek019
            #add-point:ON CHANGE stek019 name="input.g.page10.stek019"
            {<point name="input.g.page10.stek019" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek005
            #add-point:BEFORE FIELD stek005 name="input.b.page10.stek005"
            {<point name="input.b.page10.stek005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek005
            
            #add-point:AFTER FIELD stek005 name="input.a.page10.stek005"
            {<point name="input.a.page10.stek005" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stek005
            #add-point:ON CHANGE stek005 name="input.g.page10.stek005"
            {<point name="input.g.page10.stek005" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek006
            #add-point:BEFORE FIELD stek006 name="input.b.page10.stek006"
            {<point name="input.b.page10.stek006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek006
            
            #add-point:AFTER FIELD stek006 name="input.a.page10.stek006"
            {<point name="input.a.page10.stek006" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stek006
            #add-point:ON CHANGE stek006 name="input.g.page10.stek006"
            {<point name="input.g.page10.stek006" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek007
            #add-point:BEFORE FIELD stek007 name="input.b.page10.stek007"
            {<point name="input.b.page10.stek007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek007
            
            #add-point:AFTER FIELD stek007 name="input.a.page10.stek007"
            {<point name="input.a.page10.stek007" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stek007
            #add-point:ON CHANGE stek007 name="input.g.page10.stek007"
            {<point name="input.g.page10.stek007" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek008
            
            #add-point:AFTER FIELD stek008 name="input.a.page10.stek008"
            {<point name="input.a.page10.stek008" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek008
            #add-point:BEFORE FIELD stek008 name="input.b.page10.stek008"
            {<point name="input.b.page10.stek008" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stek008
            #add-point:ON CHANGE stek008 name="input.g.page10.stek008"
            {<point name="input.g.page10.stek008" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek009
            
            #add-point:AFTER FIELD stek009 name="input.a.page10.stek009"
            {<point name="input.a.page10.stek009" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek009
            #add-point:BEFORE FIELD stek009 name="input.b.page10.stek009"
            {<point name="input.b.page10.stek009" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stek009
            #add-point:ON CHANGE stek009 name="input.g.page10.stek009"
            {<point name="input.g.page10.stek009" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek010
            #add-point:BEFORE FIELD stek010 name="input.b.page10.stek010"
            {<point name="input.b.page10.stek010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek010
            
            #add-point:AFTER FIELD stek010 name="input.a.page10.stek010"
            {<point name="input.a.page10.stek010" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stek010
            #add-point:ON CHANGE stek010 name="input.g.page10.stek010"
            {<point name="input.g.page10.stek010" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek011
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_steb10_d[l_ac].stek011,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD stek011
            END IF 
 
 
 
            #add-point:AFTER FIELD stek011 name="input.a.page10.stek011"
            {<point name="input.a.page10.stek011" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek011
            #add-point:BEFORE FIELD stek011 name="input.b.page10.stek011"
            {<point name="input.b.page10.stek011" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stek011
            #add-point:ON CHANGE stek011 name="input.g.page10.stek011"
            {<point name="input.g.page10.stek011" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek012
            #add-point:BEFORE FIELD stek012 name="input.b.page10.stek012"
            {<point name="input.b.page10.stek012" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek012
            
            #add-point:AFTER FIELD stek012 name="input.a.page10.stek012"
            {<point name="input.a.page10.stek012" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stek012
            #add-point:ON CHANGE stek012 name="input.g.page10.stek012"
            {<point name="input.g.page10.stek012" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek013
            #add-point:BEFORE FIELD stek013 name="input.b.page10.stek013"
            {<point name="input.b.page10.stek013" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek013
            
            #add-point:AFTER FIELD stek013 name="input.a.page10.stek013"
            {<point name="input.a.page10.stek013" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stek013
            #add-point:ON CHANGE stek013 name="input.g.page10.stek013"
            {<point name="input.g.page10.stek013" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek014
            #add-point:BEFORE FIELD stek014 name="input.b.page10.stek014"
            {<point name="input.b.page10.stek014" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek014
            
            #add-point:AFTER FIELD stek014 name="input.a.page10.stek014"
            {<point name="input.a.page10.stek014" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stek014
            #add-point:ON CHANGE stek014 name="input.g.page10.stek014"
            {<point name="input.g.page10.stek014" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stekacti
            #add-point:BEFORE FIELD stekacti name="input.b.page10.stekacti"
            {<point name="input.b.page10.stekacti" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stekacti
            
            #add-point:AFTER FIELD stekacti name="input.a.page10.stekacti"
            {<point name="input.a.page10.stekacti" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stekacti
            #add-point:ON CHANGE stekacti name="input.g.page10.stekacti"
            {<point name="input.g.page10.stekacti" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek015
            #add-point:BEFORE FIELD stek015 name="input.b.page10.stek015"
            {<point name="input.b.page10.stek015" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek015
            
            #add-point:AFTER FIELD stek015 name="input.a.page10.stek015"
            {<point name="input.a.page10.stek015" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stek015
            #add-point:ON CHANGE stek015 name="input.g.page10.stek015"
            {<point name="input.g.page10.stek015" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek016
            #add-point:BEFORE FIELD stek016 name="input.b.page10.stek016"
            {<point name="input.b.page10.stek016" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek016
            
            #add-point:AFTER FIELD stek016 name="input.a.page10.stek016"
            {<point name="input.a.page10.stek016" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stek016
            #add-point:ON CHANGE stek016 name="input.g.page10.stek016"
            {<point name="input.g.page10.stek016" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek017
            #add-point:BEFORE FIELD stek017 name="input.b.page10.stek017"
            {<point name="input.b.page10.stek017" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek017
            
            #add-point:AFTER FIELD stek017 name="input.a.page10.stek017"
            {<point name="input.a.page10.stek017" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stek017
            #add-point:ON CHANGE stek017 name="input.g.page10.stek017"
            {<point name="input.g.page10.stek017" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek022
            #add-point:BEFORE FIELD stek022 name="input.b.page10.stek022"
            {<point name="input.b.page10.stek022" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek022
            
            #add-point:AFTER FIELD stek022 name="input.a.page10.stek022"
            {<point name="input.a.page10.stek022" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stek022
            #add-point:ON CHANGE stek022 name="input.g.page10.stek022"
            {<point name="input.g.page10.stek022" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek023
            #add-point:BEFORE FIELD stek023 name="input.b.page10.stek023"
            {<point name="input.b.page10.stek023" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek023
            
            #add-point:AFTER FIELD stek023 name="input.a.page10.stek023"
            {<point name="input.a.page10.stek023" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stek023
            #add-point:ON CHANGE stek023 name="input.g.page10.stek023"
            {<point name="input.g.page10.stek023" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek024
            #add-point:BEFORE FIELD stek024 name="input.b.page10.stek024"
            {<point name="input.b.page10.stek024" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek024
            
            #add-point:AFTER FIELD stek024 name="input.a.page10.stek024"
            {<point name="input.a.page10.stek024" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stek024
            #add-point:ON CHANGE stek024 name="input.g.page10.stek024"
            {<point name="input.g.page10.stek024" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek025
            #add-point:BEFORE FIELD stek025 name="input.b.page10.stek025"
            {<point name="input.b.page10.stek025" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek025
            
            #add-point:AFTER FIELD stek025 name="input.a.page10.stek025"
            {<point name="input.a.page10.stek025" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stek025
            #add-point:ON CHANGE stek025 name="input.g.page10.stek025"
            {<point name="input.g.page10.stek025" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stek026
            #add-point:BEFORE FIELD stek026 name="input.b.page10.stek026"
            {<point name="input.b.page10.stek026" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stek026
            
            #add-point:AFTER FIELD stek026 name="input.a.page10.stek026"
            {<point name="input.a.page10.stek026" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stek026
            #add-point:ON CHANGE stek026 name="input.g.page10.stek026"
            {<point name="input.g.page10.stek026" />}
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page10.steksite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steksite
            #add-point:ON ACTION controlp INFIELD steksite name="input.c.page10.steksite"
            {<point name="input.c.page10.steksite" />}
            #END add-point
 
 
         #Ctrlp:input.c.page10.stekunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stekunit
            #add-point:ON ACTION controlp INFIELD stekunit name="input.c.page10.stekunit"
            {<point name="input.c.page10.stekunit" />}
            #END add-point
 
 
         #Ctrlp:input.c.page10.stek001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek001
            #add-point:ON ACTION controlp INFIELD stek001 name="input.c.page10.stek001"
            {<point name="input.c.page10.stek001" />}
            #END add-point
 
 
         #Ctrlp:input.c.page10.stekseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stekseq
            #add-point:ON ACTION controlp INFIELD stekseq name="input.c.page10.stekseq"
            {<point name="input.c.page10.stekseq" />}
            #END add-point
 
 
         #Ctrlp:input.c.page10.stek002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek002
            #add-point:ON ACTION controlp INFIELD stek002 name="input.c.page10.stek002"
            {<point name="input.c.page10.stek002" />}
            #END add-point
 
 
         #Ctrlp:input.c.page10.stek020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek020
            #add-point:ON ACTION controlp INFIELD stek020 name="input.c.page10.stek020"
            {<point name="input.c.page10.stek020" />}
            #END add-point
 
 
         #Ctrlp:input.c.page10.stek021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek021
            #add-point:ON ACTION controlp INFIELD stek021 name="input.c.page10.stek021"
            {<point name="input.c.page10.stek021" />}
            #END add-point
 
 
         #Ctrlp:input.c.page10.stek003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek003
            #add-point:ON ACTION controlp INFIELD stek003 name="input.c.page10.stek003"
            {<point name="input.c.page10.stek003" />}
            #END add-point
 
 
         #Ctrlp:input.c.page10.stek004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek004
            #add-point:ON ACTION controlp INFIELD stek004 name="input.c.page10.stek004"
            {<point name="input.c.page10.stek004" />}
            #END add-point
 
 
         #Ctrlp:input.c.page10.stek018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek018
            #add-point:ON ACTION controlp INFIELD stek018 name="input.c.page10.stek018"
            {<point name="input.c.page10.stek018" />}
            #END add-point
 
 
         #Ctrlp:input.c.page10.stek019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek019
            #add-point:ON ACTION controlp INFIELD stek019 name="input.c.page10.stek019"
            {<point name="input.c.page10.stek019" />}
            #END add-point
 
 
         #Ctrlp:input.c.page10.stek005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek005
            #add-point:ON ACTION controlp INFIELD stek005 name="input.c.page10.stek005"
            {<point name="input.c.page10.stek005" />}
            #END add-point
 
 
         #Ctrlp:input.c.page10.stek006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek006
            #add-point:ON ACTION controlp INFIELD stek006 name="input.c.page10.stek006"
            {<point name="input.c.page10.stek006" />}
            #END add-point
 
 
         #Ctrlp:input.c.page10.stek007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek007
            #add-point:ON ACTION controlp INFIELD stek007 name="input.c.page10.stek007"
            {<point name="input.c.page10.stek007" />}
            #END add-point
 
 
         #Ctrlp:input.c.page10.stek008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek008
            #add-point:ON ACTION controlp INFIELD stek008 name="input.c.page10.stek008"
            {<point name="input.c.page10.stek008" />}
            #END add-point
 
 
         #Ctrlp:input.c.page10.stek009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek009
            #add-point:ON ACTION controlp INFIELD stek009 name="input.c.page10.stek009"
            {<point name="input.c.page10.stek009" />}
            #END add-point
 
 
         #Ctrlp:input.c.page10.stek010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek010
            #add-point:ON ACTION controlp INFIELD stek010 name="input.c.page10.stek010"
            {<point name="input.c.page10.stek010" />}
            #END add-point
 
 
         #Ctrlp:input.c.page10.stek011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek011
            #add-point:ON ACTION controlp INFIELD stek011 name="input.c.page10.stek011"
            {<point name="input.c.page10.stek011" />}
            #END add-point
 
 
         #Ctrlp:input.c.page10.stek012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek012
            #add-point:ON ACTION controlp INFIELD stek012 name="input.c.page10.stek012"
            {<point name="input.c.page10.stek012" />}
            #END add-point
 
 
         #Ctrlp:input.c.page10.stek013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek013
            #add-point:ON ACTION controlp INFIELD stek013 name="input.c.page10.stek013"
            {<point name="input.c.page10.stek013" />}
            #END add-point
 
 
         #Ctrlp:input.c.page10.stek014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek014
            #add-point:ON ACTION controlp INFIELD stek014 name="input.c.page10.stek014"
            {<point name="input.c.page10.stek014" />}
            #END add-point
 
 
         #Ctrlp:input.c.page10.stekacti
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stekacti
            #add-point:ON ACTION controlp INFIELD stekacti name="input.c.page10.stekacti"
            {<point name="input.c.page10.stekacti" />}
            #END add-point
 
 
         #Ctrlp:input.c.page10.stek015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek015
            #add-point:ON ACTION controlp INFIELD stek015 name="input.c.page10.stek015"
            {<point name="input.c.page10.stek015" />}
            #END add-point
 
 
         #Ctrlp:input.c.page10.stek016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek016
            #add-point:ON ACTION controlp INFIELD stek016 name="input.c.page10.stek016"
            {<point name="input.c.page10.stek016" />}
            #END add-point
 
 
         #Ctrlp:input.c.page10.stek017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek017
            #add-point:ON ACTION controlp INFIELD stek017 name="input.c.page10.stek017"
            {<point name="input.c.page10.stek017" />}
            #END add-point
 
 
         #Ctrlp:input.c.page10.stek022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek022
            #add-point:ON ACTION controlp INFIELD stek022 name="input.c.page10.stek022"
            {<point name="input.c.page10.stek022" />}
            #END add-point
 
 
         #Ctrlp:input.c.page10.stek023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek023
            #add-point:ON ACTION controlp INFIELD stek023 name="input.c.page10.stek023"
            {<point name="input.c.page10.stek023" />}
            #END add-point
 
 
         #Ctrlp:input.c.page10.stek024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek024
            #add-point:ON ACTION controlp INFIELD stek024 name="input.c.page10.stek024"
            {<point name="input.c.page10.stek024" />}
            #END add-point
 
 
         #Ctrlp:input.c.page10.stek025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek025
            #add-point:ON ACTION controlp INFIELD stek025 name="input.c.page10.stek025"
            {<point name="input.c.page10.stek025" />}
            #END add-point
 
 
         #Ctrlp:input.c.page10.stek026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stek026
            #add-point:ON ACTION controlp INFIELD stek026 name="input.c.page10.stek026"
            {<point name="input.c.page10.stek026" />}
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row name="input.body10.after_row"
            {<point name="input.body10.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_steb10_d[l_ac].* = g_steb10_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astt401_bcl2
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astt401_unlock_b("stek_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2 name="input.body10.after_row2"
            {<point name="input.body10.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body10.after_input"
            {<point name="input.body10.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_steb10_d[li_reproduce_target].* = g_steb10_d[li_reproduce].*
 
               LET g_steb10_d[li_reproduce_target].stekseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_steb10_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_steb10_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_steb11_d FROM s_detail11.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_3)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body11.before_input2"
            {<point name="input.body11.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_steb11_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astt401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_steb11_d.getLength()
            #add-point:資料輸入前 name="input.body11.before_input"
            {<point name="input.body11.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_steb11_d[l_ac].* TO NULL 
            INITIALIZE g_steb11_d_t.* TO NULL 
            INITIALIZE g_steb11_d_o.* TO NULL 
            #公用欄位給值(單身3)
            
            #自定義預設值(單身3)
                  LET g_steb11_d[l_ac].stelacti = "Y"
      LET g_steb11_d[l_ac].stel004 = "2"
 
            #add-point:modify段before備份 name="input.body11.insert.before_bak"
            {<point name="input.body11.insert.before_bak"/>}
            #end add-point
            LET g_steb11_d_t.* = g_steb11_d[l_ac].*     #新輸入資料
            LET g_steb11_d_o.* = g_steb11_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astt401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body11.insert.after_set_entry_b"
            {<point name="input.body11.insert.after_set_entry_b"/>}
            #end add-point
            CALL astt401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_steb11_d[li_reproduce_target].* = g_steb11_d[li_reproduce].*
 
               LET g_steb11_d[li_reproduce_target].stelseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body11.before_insert"
            {<point name="input.body11.before_insert"/>}
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body11.before_row2"
            {<point name="input.body11.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[3] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 3
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astt401_cl USING g_enterprise,g_stea_m.steadocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astt401_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astt401_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_steb11_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_steb11_d[l_ac].stelseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_steb11_d_t.* = g_steb11_d[l_ac].*  #BACKUP
               LET g_steb11_d_o.* = g_steb11_d[l_ac].*  #BACKUP
               CALL astt401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body11.after_set_entry_b"
               {<point name="input.body11.after_set_entry_b"/>}
               #end add-point  
               CALL astt401_set_no_entry_b(l_cmd)
               IF NOT astt401_lock_b("stel_t","'3'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astt401_bcl3 INTO g_steb11_d[l_ac].stelunit,g_steb11_d[l_ac].stelsite,g_steb11_d[l_ac].stel001, 
                      g_steb11_d[l_ac].stelacti,g_steb11_d[l_ac].stelseq,g_steb11_d[l_ac].stel003,g_steb11_d[l_ac].stel002, 
                      g_steb11_d[l_ac].stel004,g_steb11_d[l_ac].stel005,g_steb11_d[l_ac].stel006,g_steb11_d[l_ac].stel007, 
                      g_steb11_d[l_ac].stel008,g_steb11_d[l_ac].stel009
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_steb11_d_mask_o[l_ac].* =  g_steb11_d[l_ac].*
                  CALL astt401_stel_t_mask()
                  LET g_steb11_d_mask_n[l_ac].* =  g_steb11_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astt401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body11.before_row"
            {<point name="input.body11.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body11.after_delete_d"
               {<point name="input.body11.after_delete_d"/>}
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body11.b_delete_ask"
               {<point name="input.body11.b_delete_ask" />}
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前 name="input.body11.b_delete"
               {<point name="input.body11.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stea_m.steadocno
               LET gs_keys[gs_keys.getLength()+1] = g_steb11_d_t.stelseq
            
               #刪除同層單身
               IF NOT astt401_delete_b('stel_t',gs_keys,"'3'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astt401_key_delete_b(gs_keys,'stel_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身3刪除中 name="input.body11.m_delete"
               {<point name="input.body11.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astt401_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身3刪除後 name="input.body11.a_delete"
               {<point name="input.body11.a_delete"/>}
               #end add-point
               LET l_count = g_steb_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body11.after_delete"
               {<point name="input.body11.after_delete"/>}
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_steb11_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身3新增前 name="input.body11.b_a_insert"
            {<point name="input.body11.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stel_t 
             WHERE stelent = g_enterprise AND steldocno = g_stea_m.steadocno
               AND stelseq = g_steb11_d[l_ac].stelseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前 name="input.body11.b_insert"
               {<point name="input.body11.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys[2] = g_steb11_d[g_detail_idx].stelseq
               CALL astt401_insert_b('stel_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3 name="input.body11.a_insert"
               {<point name="input.body11.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_steb_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stel_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astt401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body11.after_insert"
               {<point name="input.body11.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_steb11_d[l_ac].* = g_steb11_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astt401_bcl3
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_steb11_d[l_ac].* = g_steb11_d_t.*
            ELSE
               #add-point:單身page3修改前 name="input.body11.b_update"
               {<point name="input.body11.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身3)
               
               
               #將遮罩欄位還原
               CALL astt401_stel_t_mask_restore('restore_mask_o')
                              
               UPDATE stel_t SET (steldocno,stelunit,stelsite,stel001,stelacti,stelseq,stel003,stel002, 
                   stel004,stel005,stel006,stel007,stel008,stel009) = (g_stea_m.steadocno,g_steb11_d[l_ac].stelunit, 
                   g_steb11_d[l_ac].stelsite,g_steb11_d[l_ac].stel001,g_steb11_d[l_ac].stelacti,g_steb11_d[l_ac].stelseq, 
                   g_steb11_d[l_ac].stel003,g_steb11_d[l_ac].stel002,g_steb11_d[l_ac].stel004,g_steb11_d[l_ac].stel005, 
                   g_steb11_d[l_ac].stel006,g_steb11_d[l_ac].stel007,g_steb11_d[l_ac].stel008,g_steb11_d[l_ac].stel009)  
                   #自訂欄位頁簽
                WHERE stelent = g_enterprise AND steldocno = g_stea_m.steadocno
                  AND stelseq = g_steb11_d_t.stelseq #項次 
                  
               #add-point:單身page3修改中 name="input.body11.m_update"
               {<point name="input.body11.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_steb11_d[l_ac].* = g_steb11_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stel_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_steb11_d[l_ac].* = g_steb11_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stel_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys_bak[1] = g_steadocno_t
               LET gs_keys[2] = g_steb11_d[g_detail_idx].stelseq
               LET gs_keys_bak[2] = g_steb11_d_t.stelseq
               CALL astt401_update_b('stel_t',gs_keys,gs_keys_bak,"'3'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astt401_stel_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_steb11_d[g_detail_idx].stelseq = g_steb11_d_t.stelseq 
                  ) THEN
                  LET gs_keys[01] = g_stea_m.steadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_steb11_d_t.stelseq
                  CALL astt401_key_update_b(gs_keys,'stel_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb11_d_t)
               LET g_log2 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb11_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page3修改後 name="input.body11.a_update"
               {<point name="input.body11.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stelunit
            #add-point:BEFORE FIELD stelunit name="input.b.page11.stelunit"
            {<point name="input.b.page11.stelunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stelunit
            
            #add-point:AFTER FIELD stelunit name="input.a.page11.stelunit"
            {<point name="input.a.page11.stelunit" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stelunit
            #add-point:ON CHANGE stelunit name="input.g.page11.stelunit"
            {<point name="input.g.page11.stelunit" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stelsite
            #add-point:BEFORE FIELD stelsite name="input.b.page11.stelsite"
            {<point name="input.b.page11.stelsite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stelsite
            
            #add-point:AFTER FIELD stelsite name="input.a.page11.stelsite"
            {<point name="input.a.page11.stelsite" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stelsite
            #add-point:ON CHANGE stelsite name="input.g.page11.stelsite"
            {<point name="input.g.page11.stelsite" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stel001
            #add-point:BEFORE FIELD stel001 name="input.b.page11.stel001"
            {<point name="input.b.page11.stel001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stel001
            
            #add-point:AFTER FIELD stel001 name="input.a.page11.stel001"
            {<point name="input.a.page11.stel001" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stel001
            #add-point:ON CHANGE stel001 name="input.g.page11.stel001"
            {<point name="input.g.page11.stel001" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stelacti
            #add-point:BEFORE FIELD stelacti name="input.b.page11.stelacti"
            {<point name="input.b.page11.stelacti" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stelacti
            
            #add-point:AFTER FIELD stelacti name="input.a.page11.stelacti"
            {<point name="input.a.page11.stelacti" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stelacti
            #add-point:ON CHANGE stelacti name="input.g.page11.stelacti"
            {<point name="input.g.page11.stelacti" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stelseq
            #add-point:BEFORE FIELD stelseq name="input.b.page11.stelseq"
            {<point name="input.b.page11.stelseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stelseq
            
            #add-point:AFTER FIELD stelseq name="input.a.page11.stelseq"
            {<point name="input.a.page11.stelseq" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stelseq
            #add-point:ON CHANGE stelseq name="input.g.page11.stelseq"
            {<point name="input.g.page11.stelseq" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stel003
            #add-point:BEFORE FIELD stel003 name="input.b.page11.stel003"
            {<point name="input.b.page11.stel003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stel003
            
            #add-point:AFTER FIELD stel003 name="input.a.page11.stel003"
            {<point name="input.a.page11.stel003" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stel003
            #add-point:ON CHANGE stel003 name="input.g.page11.stel003"
            {<point name="input.g.page11.stel003" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stel002
            
            #add-point:AFTER FIELD stel002 name="input.a.page11.stel002"
            {<point name="input.a.page11.stel002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stel002
            #add-point:BEFORE FIELD stel002 name="input.b.page11.stel002"
            {<point name="input.b.page11.stel002" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stel002
            #add-point:ON CHANGE stel002 name="input.g.page11.stel002"
            {<point name="input.g.page11.stel002" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stel004
            #add-point:BEFORE FIELD stel004 name="input.b.page11.stel004"
            {<point name="input.b.page11.stel004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stel004
            
            #add-point:AFTER FIELD stel004 name="input.a.page11.stel004"
            {<point name="input.a.page11.stel004" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stel004
            #add-point:ON CHANGE stel004 name="input.g.page11.stel004"
            {<point name="input.g.page11.stel004" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stel005
            #add-point:BEFORE FIELD stel005 name="input.b.page11.stel005"
            {<point name="input.b.page11.stel005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stel005
            
            #add-point:AFTER FIELD stel005 name="input.a.page11.stel005"
            {<point name="input.a.page11.stel005" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stel005
            #add-point:ON CHANGE stel005 name="input.g.page11.stel005"
            {<point name="input.g.page11.stel005" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stel006
            #add-point:BEFORE FIELD stel006 name="input.b.page11.stel006"
            {<point name="input.b.page11.stel006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stel006
            
            #add-point:AFTER FIELD stel006 name="input.a.page11.stel006"
            {<point name="input.a.page11.stel006" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stel006
            #add-point:ON CHANGE stel006 name="input.g.page11.stel006"
            {<point name="input.g.page11.stel006" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stel007
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_steb11_d[l_ac].stel007,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD stel007
            END IF 
 
 
 
            #add-point:AFTER FIELD stel007 name="input.a.page11.stel007"
            {<point name="input.a.page11.stel007" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stel007
            #add-point:BEFORE FIELD stel007 name="input.b.page11.stel007"
            {<point name="input.b.page11.stel007" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stel007
            #add-point:ON CHANGE stel007 name="input.g.page11.stel007"
            {<point name="input.g.page11.stel007" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stel008
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_steb11_d[l_ac].stel008,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD stel008
            END IF 
 
 
 
            #add-point:AFTER FIELD stel008 name="input.a.page11.stel008"
            {<point name="input.a.page11.stel008" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stel008
            #add-point:BEFORE FIELD stel008 name="input.b.page11.stel008"
            {<point name="input.b.page11.stel008" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stel008
            #add-point:ON CHANGE stel008 name="input.g.page11.stel008"
            {<point name="input.g.page11.stel008" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stel009
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_steb11_d[l_ac].stel009,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD stel009
            END IF 
 
 
 
            #add-point:AFTER FIELD stel009 name="input.a.page11.stel009"
            {<point name="input.a.page11.stel009" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stel009
            #add-point:BEFORE FIELD stel009 name="input.b.page11.stel009"
            {<point name="input.b.page11.stel009" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stel009
            #add-point:ON CHANGE stel009 name="input.g.page11.stel009"
            {<point name="input.g.page11.stel009" />}
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page11.stelunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stelunit
            #add-point:ON ACTION controlp INFIELD stelunit name="input.c.page11.stelunit"
            {<point name="input.c.page11.stelunit" />}
            #END add-point
 
 
         #Ctrlp:input.c.page11.stelsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stelsite
            #add-point:ON ACTION controlp INFIELD stelsite name="input.c.page11.stelsite"
            {<point name="input.c.page11.stelsite" />}
            #END add-point
 
 
         #Ctrlp:input.c.page11.stel001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stel001
            #add-point:ON ACTION controlp INFIELD stel001 name="input.c.page11.stel001"
            {<point name="input.c.page11.stel001" />}
            #END add-point
 
 
         #Ctrlp:input.c.page11.stelacti
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stelacti
            #add-point:ON ACTION controlp INFIELD stelacti name="input.c.page11.stelacti"
            {<point name="input.c.page11.stelacti" />}
            #END add-point
 
 
         #Ctrlp:input.c.page11.stelseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stelseq
            #add-point:ON ACTION controlp INFIELD stelseq name="input.c.page11.stelseq"
            {<point name="input.c.page11.stelseq" />}
            #END add-point
 
 
         #Ctrlp:input.c.page11.stel003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stel003
            #add-point:ON ACTION controlp INFIELD stel003 name="input.c.page11.stel003"
            {<point name="input.c.page11.stel003" />}
            #END add-point
 
 
         #Ctrlp:input.c.page11.stel002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stel002
            #add-point:ON ACTION controlp INFIELD stel002 name="input.c.page11.stel002"
            {<point name="input.c.page11.stel002" />}
            #END add-point
 
 
         #Ctrlp:input.c.page11.stel004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stel004
            #add-point:ON ACTION controlp INFIELD stel004 name="input.c.page11.stel004"
            {<point name="input.c.page11.stel004" />}
            #END add-point
 
 
         #Ctrlp:input.c.page11.stel005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stel005
            #add-point:ON ACTION controlp INFIELD stel005 name="input.c.page11.stel005"
            {<point name="input.c.page11.stel005" />}
            #END add-point
 
 
         #Ctrlp:input.c.page11.stel006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stel006
            #add-point:ON ACTION controlp INFIELD stel006 name="input.c.page11.stel006"
            {<point name="input.c.page11.stel006" />}
            #END add-point
 
 
         #Ctrlp:input.c.page11.stel007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stel007
            #add-point:ON ACTION controlp INFIELD stel007 name="input.c.page11.stel007"
            {<point name="input.c.page11.stel007" />}
            #END add-point
 
 
         #Ctrlp:input.c.page11.stel008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stel008
            #add-point:ON ACTION controlp INFIELD stel008 name="input.c.page11.stel008"
            {<point name="input.c.page11.stel008" />}
            #END add-point
 
 
         #Ctrlp:input.c.page11.stel009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stel009
            #add-point:ON ACTION controlp INFIELD stel009 name="input.c.page11.stel009"
            {<point name="input.c.page11.stel009" />}
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page3 after_row name="input.body11.after_row"
            {<point name="input.body11.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_steb11_d[l_ac].* = g_steb11_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astt401_bcl3
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astt401_unlock_b("stel_t","'3'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page3 after_row2 name="input.body11.after_row2"
            {<point name="input.body11.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body11.after_input"
            {<point name="input.body11.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_steb11_d[li_reproduce_target].* = g_steb11_d[li_reproduce].*
 
               LET g_steb11_d[li_reproduce_target].stelseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_steb11_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_steb11_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_steb12_d FROM s_detail12.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_4)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body12.before_input2"
            {<point name="input.body12.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_steb12_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astt401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'4',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_steb12_d.getLength()
            #add-point:資料輸入前 name="input.body12.before_input"
            {<point name="input.body12.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_steb12_d[l_ac].* TO NULL 
            INITIALIZE g_steb12_d_t.* TO NULL 
            INITIALIZE g_steb12_d_o.* TO NULL 
            #公用欄位給值(單身4)
            
            #自定義預設值(單身4)
                  LET g_steb12_d[l_ac].stewacti = "Y"
 
            #add-point:modify段before備份 name="input.body12.insert.before_bak"
            {<point name="input.body12.insert.before_bak"/>}
            #end add-point
            LET g_steb12_d_t.* = g_steb12_d[l_ac].*     #新輸入資料
            LET g_steb12_d_o.* = g_steb12_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astt401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body12.insert.after_set_entry_b"
            {<point name="input.body12.insert.after_set_entry_b"/>}
            #end add-point
            CALL astt401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_steb12_d[li_reproduce_target].* = g_steb12_d[li_reproduce].*
 
               LET g_steb12_d[li_reproduce_target].stewseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body12.before_insert"
            {<point name="input.body12.before_insert"/>}
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body12.before_row2"
            {<point name="input.body12.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[4] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 4
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astt401_cl USING g_enterprise,g_stea_m.steadocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astt401_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astt401_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_steb12_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_steb12_d[l_ac].stewseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_steb12_d_t.* = g_steb12_d[l_ac].*  #BACKUP
               LET g_steb12_d_o.* = g_steb12_d[l_ac].*  #BACKUP
               CALL astt401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body12.after_set_entry_b"
               {<point name="input.body12.after_set_entry_b"/>}
               #end add-point  
               CALL astt401_set_no_entry_b(l_cmd)
               IF NOT astt401_lock_b("stew_t","'4'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astt401_bcl4 INTO g_steb12_d[l_ac].stewunit,g_steb12_d[l_ac].stewsite,g_steb12_d[l_ac].stewseq, 
                      g_steb12_d[l_ac].stew001,g_steb12_d[l_ac].stew002,g_steb12_d[l_ac].stew003,g_steb12_d[l_ac].stew004, 
                      g_steb12_d[l_ac].stew005,g_steb12_d[l_ac].stew006,g_steb12_d[l_ac].stew007,g_steb12_d[l_ac].stew008, 
                      g_steb12_d[l_ac].stewacti
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_steb12_d_mask_o[l_ac].* =  g_steb12_d[l_ac].*
                  CALL astt401_stew_t_mask()
                  LET g_steb12_d_mask_n[l_ac].* =  g_steb12_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astt401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body12.before_row"
            {<point name="input.body12.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body12.after_delete_d"
               {<point name="input.body12.after_delete_d"/>}
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body12.b_delete_ask"
               {<point name="input.body12.b_delete_ask" />}
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身4刪除前 name="input.body12.b_delete"
               {<point name="input.body12.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stea_m.steadocno
               LET gs_keys[gs_keys.getLength()+1] = g_steb12_d_t.stewseq
            
               #刪除同層單身
               IF NOT astt401_delete_b('stew_t',gs_keys,"'4'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astt401_key_delete_b(gs_keys,'stew_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身4刪除中 name="input.body12.m_delete"
               {<point name="input.body12.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astt401_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身4刪除後 name="input.body12.a_delete"
               {<point name="input.body12.a_delete"/>}
               #end add-point
               LET l_count = g_steb_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body12.after_delete"
               {<point name="input.body12.after_delete"/>}
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_steb12_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身4新增前 name="input.body12.b_a_insert"
            {<point name="input.body12.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stew_t 
             WHERE stewent = g_enterprise AND stewdocno = g_stea_m.steadocno
               AND stewseq = g_steb12_d[l_ac].stewseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身4新增前 name="input.body12.b_insert"
               {<point name="input.body12.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys[2] = g_steb12_d[g_detail_idx].stewseq
               CALL astt401_insert_b('stew_t',gs_keys,"'4'")
                           
               #add-point:單身新增後4 name="input.body12.a_insert"
               {<point name="input.body12.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_steb_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stew_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astt401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body12.after_insert"
               {<point name="input.body12.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_steb12_d[l_ac].* = g_steb12_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astt401_bcl4
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_steb12_d[l_ac].* = g_steb12_d_t.*
            ELSE
               #add-point:單身page4修改前 name="input.body12.b_update"
               {<point name="input.body12.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身4)
               
               
               #將遮罩欄位還原
               CALL astt401_stew_t_mask_restore('restore_mask_o')
                              
               UPDATE stew_t SET (stewdocno,stewunit,stewsite,stewseq,stew001,stew002,stew003,stew004, 
                   stew005,stew006,stew007,stew008,stewacti) = (g_stea_m.steadocno,g_steb12_d[l_ac].stewunit, 
                   g_steb12_d[l_ac].stewsite,g_steb12_d[l_ac].stewseq,g_steb12_d[l_ac].stew001,g_steb12_d[l_ac].stew002, 
                   g_steb12_d[l_ac].stew003,g_steb12_d[l_ac].stew004,g_steb12_d[l_ac].stew005,g_steb12_d[l_ac].stew006, 
                   g_steb12_d[l_ac].stew007,g_steb12_d[l_ac].stew008,g_steb12_d[l_ac].stewacti) #自訂欄位頁簽 

                WHERE stewent = g_enterprise AND stewdocno = g_stea_m.steadocno
                  AND stewseq = g_steb12_d_t.stewseq #項次 
                  
               #add-point:單身page4修改中 name="input.body12.m_update"
               {<point name="input.body12.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_steb12_d[l_ac].* = g_steb12_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stew_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_steb12_d[l_ac].* = g_steb12_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stew_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys_bak[1] = g_steadocno_t
               LET gs_keys[2] = g_steb12_d[g_detail_idx].stewseq
               LET gs_keys_bak[2] = g_steb12_d_t.stewseq
               CALL astt401_update_b('stew_t',gs_keys,gs_keys_bak,"'4'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astt401_stew_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_steb12_d[g_detail_idx].stewseq = g_steb12_d_t.stewseq 
                  ) THEN
                  LET gs_keys[01] = g_stea_m.steadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_steb12_d_t.stewseq
                  CALL astt401_key_update_b(gs_keys,'stew_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb12_d_t)
               LET g_log2 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb12_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page4修改後 name="input.body12.a_update"
               {<point name="input.body12.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stewunit
            #add-point:BEFORE FIELD stewunit name="input.b.page12.stewunit"
            {<point name="input.b.page12.stewunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stewunit
            
            #add-point:AFTER FIELD stewunit name="input.a.page12.stewunit"
            {<point name="input.a.page12.stewunit" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stewunit
            #add-point:ON CHANGE stewunit name="input.g.page12.stewunit"
            {<point name="input.g.page12.stewunit" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stewsite
            #add-point:BEFORE FIELD stewsite name="input.b.page12.stewsite"
            {<point name="input.b.page12.stewsite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stewsite
            
            #add-point:AFTER FIELD stewsite name="input.a.page12.stewsite"
            {<point name="input.a.page12.stewsite" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stewsite
            #add-point:ON CHANGE stewsite name="input.g.page12.stewsite"
            {<point name="input.g.page12.stewsite" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stewseq
            #add-point:BEFORE FIELD stewseq name="input.b.page12.stewseq"
            {<point name="input.b.page12.stewseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stewseq
            
            #add-point:AFTER FIELD stewseq name="input.a.page12.stewseq"
            {<point name="input.a.page12.stewseq" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stewseq
            #add-point:ON CHANGE stewseq name="input.g.page12.stewseq"
            {<point name="input.g.page12.stewseq" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stew001
            #add-point:BEFORE FIELD stew001 name="input.b.page12.stew001"
            {<point name="input.b.page12.stew001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stew001
            
            #add-point:AFTER FIELD stew001 name="input.a.page12.stew001"
            {<point name="input.a.page12.stew001" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stew001
            #add-point:ON CHANGE stew001 name="input.g.page12.stew001"
            {<point name="input.g.page12.stew001" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stew002
            #add-point:BEFORE FIELD stew002 name="input.b.page12.stew002"
            {<point name="input.b.page12.stew002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stew002
            
            #add-point:AFTER FIELD stew002 name="input.a.page12.stew002"
            {<point name="input.a.page12.stew002" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stew002
            #add-point:ON CHANGE stew002 name="input.g.page12.stew002"
            {<point name="input.g.page12.stew002" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stew003
            #add-point:BEFORE FIELD stew003 name="input.b.page12.stew003"
            {<point name="input.b.page12.stew003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stew003
            
            #add-point:AFTER FIELD stew003 name="input.a.page12.stew003"
            {<point name="input.a.page12.stew003" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stew003
            #add-point:ON CHANGE stew003 name="input.g.page12.stew003"
            {<point name="input.g.page12.stew003" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stew004
            
            #add-point:AFTER FIELD stew004 name="input.a.page12.stew004"
            {<point name="input.a.page12.stew004" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stew004
            #add-point:BEFORE FIELD stew004 name="input.b.page12.stew004"
            {<point name="input.b.page12.stew004" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stew004
            #add-point:ON CHANGE stew004 name="input.g.page12.stew004"
            {<point name="input.g.page12.stew004" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stew005
            #add-point:BEFORE FIELD stew005 name="input.b.page12.stew005"
            {<point name="input.b.page12.stew005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stew005
            
            #add-point:AFTER FIELD stew005 name="input.a.page12.stew005"
            {<point name="input.a.page12.stew005" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stew005
            #add-point:ON CHANGE stew005 name="input.g.page12.stew005"
            {<point name="input.g.page12.stew005" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stew006
            #add-point:BEFORE FIELD stew006 name="input.b.page12.stew006"
            {<point name="input.b.page12.stew006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stew006
            
            #add-point:AFTER FIELD stew006 name="input.a.page12.stew006"
            {<point name="input.a.page12.stew006" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stew006
            #add-point:ON CHANGE stew006 name="input.g.page12.stew006"
            {<point name="input.g.page12.stew006" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stew007
            #add-point:BEFORE FIELD stew007 name="input.b.page12.stew007"
            {<point name="input.b.page12.stew007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stew007
            
            #add-point:AFTER FIELD stew007 name="input.a.page12.stew007"
            {<point name="input.a.page12.stew007" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stew007
            #add-point:ON CHANGE stew007 name="input.g.page12.stew007"
            {<point name="input.g.page12.stew007" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stew008
            #add-point:BEFORE FIELD stew008 name="input.b.page12.stew008"
            {<point name="input.b.page12.stew008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stew008
            
            #add-point:AFTER FIELD stew008 name="input.a.page12.stew008"
            {<point name="input.a.page12.stew008" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stew008
            #add-point:ON CHANGE stew008 name="input.g.page12.stew008"
            {<point name="input.g.page12.stew008" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stewacti
            #add-point:BEFORE FIELD stewacti name="input.b.page12.stewacti"
            {<point name="input.b.page12.stewacti" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stewacti
            
            #add-point:AFTER FIELD stewacti name="input.a.page12.stewacti"
            {<point name="input.a.page12.stewacti" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stewacti
            #add-point:ON CHANGE stewacti name="input.g.page12.stewacti"
            {<point name="input.g.page12.stewacti" />}
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page12.stewunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stewunit
            #add-point:ON ACTION controlp INFIELD stewunit name="input.c.page12.stewunit"
            {<point name="input.c.page12.stewunit" />}
            #END add-point
 
 
         #Ctrlp:input.c.page12.stewsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stewsite
            #add-point:ON ACTION controlp INFIELD stewsite name="input.c.page12.stewsite"
            {<point name="input.c.page12.stewsite" />}
            #END add-point
 
 
         #Ctrlp:input.c.page12.stewseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stewseq
            #add-point:ON ACTION controlp INFIELD stewseq name="input.c.page12.stewseq"
            {<point name="input.c.page12.stewseq" />}
            #END add-point
 
 
         #Ctrlp:input.c.page12.stew001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stew001
            #add-point:ON ACTION controlp INFIELD stew001 name="input.c.page12.stew001"
            {<point name="input.c.page12.stew001" />}
            #END add-point
 
 
         #Ctrlp:input.c.page12.stew002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stew002
            #add-point:ON ACTION controlp INFIELD stew002 name="input.c.page12.stew002"
            {<point name="input.c.page12.stew002" />}
            #END add-point
 
 
         #Ctrlp:input.c.page12.stew003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stew003
            #add-point:ON ACTION controlp INFIELD stew003 name="input.c.page12.stew003"
            {<point name="input.c.page12.stew003" />}
            #END add-point
 
 
         #Ctrlp:input.c.page12.stew004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stew004
            #add-point:ON ACTION controlp INFIELD stew004 name="input.c.page12.stew004"
            {<point name="input.c.page12.stew004" />}
            #END add-point
 
 
         #Ctrlp:input.c.page12.stew005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stew005
            #add-point:ON ACTION controlp INFIELD stew005 name="input.c.page12.stew005"
            {<point name="input.c.page12.stew005" />}
            #END add-point
 
 
         #Ctrlp:input.c.page12.stew006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stew006
            #add-point:ON ACTION controlp INFIELD stew006 name="input.c.page12.stew006"
            {<point name="input.c.page12.stew006" />}
            #END add-point
 
 
         #Ctrlp:input.c.page12.stew007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stew007
            #add-point:ON ACTION controlp INFIELD stew007 name="input.c.page12.stew007"
            {<point name="input.c.page12.stew007" />}
            #END add-point
 
 
         #Ctrlp:input.c.page12.stew008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stew008
            #add-point:ON ACTION controlp INFIELD stew008 name="input.c.page12.stew008"
            {<point name="input.c.page12.stew008" />}
            #END add-point
 
 
         #Ctrlp:input.c.page12.stewacti
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stewacti
            #add-point:ON ACTION controlp INFIELD stewacti name="input.c.page12.stewacti"
            {<point name="input.c.page12.stewacti" />}
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page4 after_row name="input.body12.after_row"
            {<point name="input.body12.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_steb12_d[l_ac].* = g_steb12_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astt401_bcl4
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astt401_unlock_b("stew_t","'4'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page4 after_row2 name="input.body12.after_row2"
            {<point name="input.body12.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body12.after_input"
            {<point name="input.body12.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_steb12_d[li_reproduce_target].* = g_steb12_d[li_reproduce].*
 
               LET g_steb12_d[li_reproduce_target].stewseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_steb12_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_steb12_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_steb2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_5)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body2.before_input2"
            {<point name="input.body2.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_steb2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astt401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'5',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_steb2_d.getLength()
            #add-point:資料輸入前 name="input.body2.before_input"
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_steb2_d[l_ac].* TO NULL 
            INITIALIZE g_steb2_d_t.* TO NULL 
            INITIALIZE g_steb2_d_o.* TO NULL 
            #公用欄位給值(單身5)
            
            #自定義預設值(單身5)
                  LET g_steb2_d[l_ac].stecacti = "Y"
 
            #add-point:modify段before備份 name="input.body2.insert.before_bak"
            {<point name="input.body2.insert.before_bak"/>}
            #end add-point
            LET g_steb2_d_t.* = g_steb2_d[l_ac].*     #新輸入資料
            LET g_steb2_d_o.* = g_steb2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astt401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body2.insert.after_set_entry_b"
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL astt401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_steb2_d[li_reproduce_target].* = g_steb2_d[li_reproduce].*
 
               LET g_steb2_d[li_reproduce_target].stecseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body2.before_insert"
            {<point name="input.body2.before_insert"/>}
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body2.before_row2"
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[5] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 5
            CALL astt401_b_fill2('12')
  
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astt401_cl USING g_enterprise,g_stea_m.steadocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astt401_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astt401_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_steb2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_steb2_d[l_ac].stecseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_steb2_d_t.* = g_steb2_d[l_ac].*  #BACKUP
               LET g_steb2_d_o.* = g_steb2_d[l_ac].*  #BACKUP
               CALL astt401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body2.after_set_entry_b"
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL astt401_set_no_entry_b(l_cmd)
               IF NOT astt401_lock_b("stec_t","'5'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astt401_bcl5 INTO g_steb2_d[l_ac].stecseq,g_steb2_d[l_ac].stec001,g_steb2_d[l_ac].stecacti, 
                      g_steb2_d[l_ac].stec024,g_steb2_d[l_ac].stec002,g_steb2_d[l_ac].stec003,g_steb2_d[l_ac].stec025, 
                      g_steb2_d[l_ac].stec004,g_steb2_d[l_ac].stec005,g_steb2_d[l_ac].stec006,g_steb2_d[l_ac].stec007, 
                      g_steb2_d[l_ac].stec008,g_steb2_d[l_ac].stec009,g_steb2_d[l_ac].stec026,g_steb2_d[l_ac].stec027, 
                      g_steb2_d[l_ac].stec010,g_steb2_d[l_ac].stec011,g_steb2_d[l_ac].stec012,g_steb2_d[l_ac].stec013, 
                      g_steb2_d[l_ac].stec014,g_steb2_d[l_ac].stec015,g_steb2_d[l_ac].stec016,g_steb2_d[l_ac].stec017, 
                      g_steb2_d[l_ac].stec018,g_steb2_d[l_ac].stec019,g_steb2_d[l_ac].stec020,g_steb2_d[l_ac].stec021, 
                      g_steb2_d[l_ac].stec022,g_steb2_d[l_ac].stec023,g_steb2_d[l_ac].stecsite,g_steb2_d[l_ac].stecunit 

                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_steb2_d_mask_o[l_ac].* =  g_steb2_d[l_ac].*
                  CALL astt401_stec_t_mask()
                  LET g_steb2_d_mask_n[l_ac].* =  g_steb2_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astt401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body2.before_row"
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body2.after_delete_d"
               {<point name="input.body2.after_delete_d"/>}
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body2.b_delete_ask"
               {<point name="input.body2.b_delete_ask" />}
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身5刪除前 name="input.body2.b_delete"
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stea_m.steadocno
               LET gs_keys[gs_keys.getLength()+1] = g_steb2_d_t.stecseq
            
               #刪除同層單身
               IF NOT astt401_delete_b('stec_t',gs_keys,"'5'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astt401_key_delete_b(gs_keys,'stec_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身5刪除中 name="input.body2.m_delete"
               {<point name="input.body2.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astt401_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身5刪除後 name="input.body2.a_delete"
               {<point name="input.body2.a_delete"/>}
               #end add-point
               LET l_count = g_steb_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body2.after_delete"
               {<point name="input.body2.after_delete"/>}
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_steb2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身5新增前 name="input.body2.b_a_insert"
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stec_t 
             WHERE stecent = g_enterprise AND stecdocno = g_stea_m.steadocno
               AND stecseq = g_steb2_d[l_ac].stecseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身5新增前 name="input.body2.b_insert"
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys[2] = g_steb2_d[g_detail_idx].stecseq
               CALL astt401_insert_b('stec_t',gs_keys,"'5'")
                           
               #add-point:單身新增後5 name="input.body2.a_insert"
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_steb_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stec_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astt401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body2.after_insert"
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_steb2_d[l_ac].* = g_steb2_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astt401_bcl5
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_steb2_d[l_ac].* = g_steb2_d_t.*
            ELSE
               #add-point:單身page5修改前 name="input.body2.b_update"
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身5)
               
               
               #將遮罩欄位還原
               CALL astt401_stec_t_mask_restore('restore_mask_o')
                              
               UPDATE stec_t SET (stecdocno,stecseq,stec001,stecacti,stec024,stec002,stec003,stec025, 
                   stec004,stec005,stec006,stec007,stec008,stec009,stec026,stec027,stec010,stec011,stec012, 
                   stec013,stec014,stec015,stec016,stec017,stec018,stec019,stec020,stec021,stec022,stec023, 
                   stecsite,stecunit) = (g_stea_m.steadocno,g_steb2_d[l_ac].stecseq,g_steb2_d[l_ac].stec001, 
                   g_steb2_d[l_ac].stecacti,g_steb2_d[l_ac].stec024,g_steb2_d[l_ac].stec002,g_steb2_d[l_ac].stec003, 
                   g_steb2_d[l_ac].stec025,g_steb2_d[l_ac].stec004,g_steb2_d[l_ac].stec005,g_steb2_d[l_ac].stec006, 
                   g_steb2_d[l_ac].stec007,g_steb2_d[l_ac].stec008,g_steb2_d[l_ac].stec009,g_steb2_d[l_ac].stec026, 
                   g_steb2_d[l_ac].stec027,g_steb2_d[l_ac].stec010,g_steb2_d[l_ac].stec011,g_steb2_d[l_ac].stec012, 
                   g_steb2_d[l_ac].stec013,g_steb2_d[l_ac].stec014,g_steb2_d[l_ac].stec015,g_steb2_d[l_ac].stec016, 
                   g_steb2_d[l_ac].stec017,g_steb2_d[l_ac].stec018,g_steb2_d[l_ac].stec019,g_steb2_d[l_ac].stec020, 
                   g_steb2_d[l_ac].stec021,g_steb2_d[l_ac].stec022,g_steb2_d[l_ac].stec023,g_steb2_d[l_ac].stecsite, 
                   g_steb2_d[l_ac].stecunit) #自訂欄位頁簽
                WHERE stecent = g_enterprise AND stecdocno = g_stea_m.steadocno
                  AND stecseq = g_steb2_d_t.stecseq #項次 
                  
               #add-point:單身page5修改中 name="input.body2.m_update"
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_steb2_d[l_ac].* = g_steb2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stec_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_steb2_d[l_ac].* = g_steb2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stec_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys_bak[1] = g_steadocno_t
               LET gs_keys[2] = g_steb2_d[g_detail_idx].stecseq
               LET gs_keys_bak[2] = g_steb2_d_t.stecseq
               CALL astt401_update_b('stec_t',gs_keys,gs_keys_bak,"'5'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astt401_stec_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_steb2_d[g_detail_idx].stecseq = g_steb2_d_t.stecseq 
                  ) THEN
                  LET gs_keys[01] = g_stea_m.steadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_steb2_d_t.stecseq
                  CALL astt401_key_update_b(gs_keys,'stec_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb2_d_t)
               LET g_log2 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page5修改後 name="input.body2.a_update"
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stecseq
            #add-point:BEFORE FIELD stecseq name="input.b.page2.stecseq"
            {<point name="input.b.page2.stecseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stecseq
            
            #add-point:AFTER FIELD stecseq name="input.a.page2.stecseq"
            {<point name="input.a.page2.stecseq" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stecseq
            #add-point:ON CHANGE stecseq name="input.g.page2.stecseq"
            {<point name="input.g.page2.stecseq" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec001
            #add-point:BEFORE FIELD stec001 name="input.b.page2.stec001"
            {<point name="input.b.page2.stec001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec001
            
            #add-point:AFTER FIELD stec001 name="input.a.page2.stec001"
            {<point name="input.a.page2.stec001" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stec001
            #add-point:ON CHANGE stec001 name="input.g.page2.stec001"
            {<point name="input.g.page2.stec001" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stecacti
            #add-point:BEFORE FIELD stecacti name="input.b.page2.stecacti"
            {<point name="input.b.page2.stecacti" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stecacti
            
            #add-point:AFTER FIELD stecacti name="input.a.page2.stecacti"
            {<point name="input.a.page2.stecacti" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stecacti
            #add-point:ON CHANGE stecacti name="input.g.page2.stecacti"
            {<point name="input.g.page2.stecacti" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec024
            #add-point:BEFORE FIELD stec024 name="input.b.page2.stec024"
            {<point name="input.b.page2.stec024" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec024
            
            #add-point:AFTER FIELD stec024 name="input.a.page2.stec024"
            {<point name="input.a.page2.stec024" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stec024
            #add-point:ON CHANGE stec024 name="input.g.page2.stec024"
            {<point name="input.g.page2.stec024" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec002
            #add-point:BEFORE FIELD stec002 name="input.b.page2.stec002"
            {<point name="input.b.page2.stec002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec002
            
            #add-point:AFTER FIELD stec002 name="input.a.page2.stec002"
            {<point name="input.a.page2.stec002" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stec002
            #add-point:ON CHANGE stec002 name="input.g.page2.stec002"
            {<point name="input.g.page2.stec002" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec003
            #add-point:BEFORE FIELD stec003 name="input.b.page2.stec003"
            {<point name="input.b.page2.stec003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec003
            
            #add-point:AFTER FIELD stec003 name="input.a.page2.stec003"
            {<point name="input.a.page2.stec003" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stec003
            #add-point:ON CHANGE stec003 name="input.g.page2.stec003"
            {<point name="input.g.page2.stec003" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec025
            #add-point:BEFORE FIELD stec025 name="input.b.page2.stec025"
            {<point name="input.b.page2.stec025" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec025
            
            #add-point:AFTER FIELD stec025 name="input.a.page2.stec025"
            {<point name="input.a.page2.stec025" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stec025
            #add-point:ON CHANGE stec025 name="input.g.page2.stec025"
            {<point name="input.g.page2.stec025" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec004
            
            #add-point:AFTER FIELD stec004 name="input.a.page2.stec004"
            {<point name="input.a.page2.stec004" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec004
            #add-point:BEFORE FIELD stec004 name="input.b.page2.stec004"
            {<point name="input.b.page2.stec004" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stec004
            #add-point:ON CHANGE stec004 name="input.g.page2.stec004"
            {<point name="input.g.page2.stec004" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec005
            
            #add-point:AFTER FIELD stec005 name="input.a.page2.stec005"
            {<point name="input.a.page2.stec005" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec005
            #add-point:BEFORE FIELD stec005 name="input.b.page2.stec005"
            {<point name="input.b.page2.stec005" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stec005
            #add-point:ON CHANGE stec005 name="input.g.page2.stec005"
            {<point name="input.g.page2.stec005" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec006
            
            #add-point:AFTER FIELD stec006 name="input.a.page2.stec006"
            {<point name="input.a.page2.stec006" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec006
            #add-point:BEFORE FIELD stec006 name="input.b.page2.stec006"
            {<point name="input.b.page2.stec006" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stec006
            #add-point:ON CHANGE stec006 name="input.g.page2.stec006"
            {<point name="input.g.page2.stec006" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec006_desc
            #add-point:BEFORE FIELD stec006_desc name="input.b.page2.stec006_desc"
            {<point name="input.b.page2.stec006_desc" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec006_desc
            
            #add-point:AFTER FIELD stec006_desc name="input.a.page2.stec006_desc"
            {<point name="input.a.page2.stec006_desc" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stec006_desc
            #add-point:ON CHANGE stec006_desc name="input.g.page2.stec006_desc"
            {<point name="input.g.page2.stec006_desc" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec007
            
            #add-point:AFTER FIELD stec007 name="input.a.page2.stec007"
            {<point name="input.a.page2.stec007" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec007
            #add-point:BEFORE FIELD stec007 name="input.b.page2.stec007"
            {<point name="input.b.page2.stec007" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stec007
            #add-point:ON CHANGE stec007 name="input.g.page2.stec007"
            {<point name="input.g.page2.stec007" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec007_desc
            #add-point:BEFORE FIELD stec007_desc name="input.b.page2.stec007_desc"
            {<point name="input.b.page2.stec007_desc" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec007_desc
            
            #add-point:AFTER FIELD stec007_desc name="input.a.page2.stec007_desc"
            {<point name="input.a.page2.stec007_desc" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stec007_desc
            #add-point:ON CHANGE stec007_desc name="input.g.page2.stec007_desc"
            {<point name="input.g.page2.stec007_desc" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec008
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_steb2_d[l_ac].stec008,"0.00","1","","","azz-00079",1) THEN
               NEXT FIELD stec008
            END IF 
 
 
 
            #add-point:AFTER FIELD stec008 name="input.a.page2.stec008"
            {<point name="input.a.page2.stec008" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec008
            #add-point:BEFORE FIELD stec008 name="input.b.page2.stec008"
            {<point name="input.b.page2.stec008" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stec008
            #add-point:ON CHANGE stec008 name="input.g.page2.stec008"
            {<point name="input.g.page2.stec008" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec009
            
            #add-point:AFTER FIELD stec009 name="input.a.page2.stec009"
            {<point name="input.a.page2.stec009" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec009
            #add-point:BEFORE FIELD stec009 name="input.b.page2.stec009"
            {<point name="input.b.page2.stec009" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stec009
            #add-point:ON CHANGE stec009 name="input.g.page2.stec009"
            {<point name="input.g.page2.stec009" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec026
            #add-point:BEFORE FIELD stec026 name="input.b.page2.stec026"
            {<point name="input.b.page2.stec026" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec026
            
            #add-point:AFTER FIELD stec026 name="input.a.page2.stec026"
            {<point name="input.a.page2.stec026" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stec026
            #add-point:ON CHANGE stec026 name="input.g.page2.stec026"
            {<point name="input.g.page2.stec026" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec027
            #add-point:BEFORE FIELD stec027 name="input.b.page2.stec027"
            {<point name="input.b.page2.stec027" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec027
            
            #add-point:AFTER FIELD stec027 name="input.a.page2.stec027"
            {<point name="input.a.page2.stec027" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stec027
            #add-point:ON CHANGE stec027 name="input.g.page2.stec027"
            {<point name="input.g.page2.stec027" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec010
            #add-point:BEFORE FIELD stec010 name="input.b.page2.stec010"
            {<point name="input.b.page2.stec010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec010
            
            #add-point:AFTER FIELD stec010 name="input.a.page2.stec010"
            {<point name="input.a.page2.stec010" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stec010
            #add-point:ON CHANGE stec010 name="input.g.page2.stec010"
            {<point name="input.g.page2.stec010" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec011
            #add-point:BEFORE FIELD stec011 name="input.b.page2.stec011"
            {<point name="input.b.page2.stec011" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec011
            
            #add-point:AFTER FIELD stec011 name="input.a.page2.stec011"
            {<point name="input.a.page2.stec011" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stec011
            #add-point:ON CHANGE stec011 name="input.g.page2.stec011"
            {<point name="input.g.page2.stec011" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec012
            #add-point:BEFORE FIELD stec012 name="input.b.page2.stec012"
            {<point name="input.b.page2.stec012" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec012
            
            #add-point:AFTER FIELD stec012 name="input.a.page2.stec012"
            {<point name="input.a.page2.stec012" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stec012
            #add-point:ON CHANGE stec012 name="input.g.page2.stec012"
            {<point name="input.g.page2.stec012" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec013
            #add-point:BEFORE FIELD stec013 name="input.b.page2.stec013"
            {<point name="input.b.page2.stec013" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec013
            
            #add-point:AFTER FIELD stec013 name="input.a.page2.stec013"
            {<point name="input.a.page2.stec013" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stec013
            #add-point:ON CHANGE stec013 name="input.g.page2.stec013"
            {<point name="input.g.page2.stec013" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec014
            #add-point:BEFORE FIELD stec014 name="input.b.page2.stec014"
            {<point name="input.b.page2.stec014" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec014
            
            #add-point:AFTER FIELD stec014 name="input.a.page2.stec014"
            {<point name="input.a.page2.stec014" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stec014
            #add-point:ON CHANGE stec014 name="input.g.page2.stec014"
            {<point name="input.g.page2.stec014" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec015
            
            #add-point:AFTER FIELD stec015 name="input.a.page2.stec015"
            {<point name="input.a.page2.stec015" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec015
            #add-point:BEFORE FIELD stec015 name="input.b.page2.stec015"
            {<point name="input.b.page2.stec015" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stec015
            #add-point:ON CHANGE stec015 name="input.g.page2.stec015"
            {<point name="input.g.page2.stec015" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec016
            
            #add-point:AFTER FIELD stec016 name="input.a.page2.stec016"
            {<point name="input.a.page2.stec016" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec016
            #add-point:BEFORE FIELD stec016 name="input.b.page2.stec016"
            {<point name="input.b.page2.stec016" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stec016
            #add-point:ON CHANGE stec016 name="input.g.page2.stec016"
            {<point name="input.g.page2.stec016" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec017
            #add-point:BEFORE FIELD stec017 name="input.b.page2.stec017"
            {<point name="input.b.page2.stec017" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec017
            
            #add-point:AFTER FIELD stec017 name="input.a.page2.stec017"
            {<point name="input.a.page2.stec017" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stec017
            #add-point:ON CHANGE stec017 name="input.g.page2.stec017"
            {<point name="input.g.page2.stec017" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec018
            #add-point:BEFORE FIELD stec018 name="input.b.page2.stec018"
            {<point name="input.b.page2.stec018" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec018
            
            #add-point:AFTER FIELD stec018 name="input.a.page2.stec018"
            {<point name="input.a.page2.stec018" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stec018
            #add-point:ON CHANGE stec018 name="input.g.page2.stec018"
            {<point name="input.g.page2.stec018" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec019
            #add-point:BEFORE FIELD stec019 name="input.b.page2.stec019"
            {<point name="input.b.page2.stec019" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec019
            
            #add-point:AFTER FIELD stec019 name="input.a.page2.stec019"
            {<point name="input.a.page2.stec019" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stec019
            #add-point:ON CHANGE stec019 name="input.g.page2.stec019"
            {<point name="input.g.page2.stec019" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec020
            #add-point:BEFORE FIELD stec020 name="input.b.page2.stec020"
            {<point name="input.b.page2.stec020" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec020
            
            #add-point:AFTER FIELD stec020 name="input.a.page2.stec020"
            {<point name="input.a.page2.stec020" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stec020
            #add-point:ON CHANGE stec020 name="input.g.page2.stec020"
            {<point name="input.g.page2.stec020" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec021
            #add-point:BEFORE FIELD stec021 name="input.b.page2.stec021"
            {<point name="input.b.page2.stec021" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec021
            
            #add-point:AFTER FIELD stec021 name="input.a.page2.stec021"
            {<point name="input.a.page2.stec021" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stec021
            #add-point:ON CHANGE stec021 name="input.g.page2.stec021"
            {<point name="input.g.page2.stec021" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec022
            #add-point:BEFORE FIELD stec022 name="input.b.page2.stec022"
            {<point name="input.b.page2.stec022" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec022
            
            #add-point:AFTER FIELD stec022 name="input.a.page2.stec022"
            {<point name="input.a.page2.stec022" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stec022
            #add-point:ON CHANGE stec022 name="input.g.page2.stec022"
            {<point name="input.g.page2.stec022" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stec023
            #add-point:BEFORE FIELD stec023 name="input.b.page2.stec023"
            {<point name="input.b.page2.stec023" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stec023
            
            #add-point:AFTER FIELD stec023 name="input.a.page2.stec023"
            {<point name="input.a.page2.stec023" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stec023
            #add-point:ON CHANGE stec023 name="input.g.page2.stec023"
            {<point name="input.g.page2.stec023" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stecsite
            #add-point:BEFORE FIELD stecsite name="input.b.page2.stecsite"
            {<point name="input.b.page2.stecsite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stecsite
            
            #add-point:AFTER FIELD stecsite name="input.a.page2.stecsite"
            {<point name="input.a.page2.stecsite" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stecsite
            #add-point:ON CHANGE stecsite name="input.g.page2.stecsite"
            {<point name="input.g.page2.stecsite" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stecunit
            #add-point:BEFORE FIELD stecunit name="input.b.page2.stecunit"
            {<point name="input.b.page2.stecunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stecunit
            
            #add-point:AFTER FIELD stecunit name="input.a.page2.stecunit"
            {<point name="input.a.page2.stecunit" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stecunit
            #add-point:ON CHANGE stecunit name="input.g.page2.stecunit"
            {<point name="input.g.page2.stecunit" />}
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page2.stecseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stecseq
            #add-point:ON ACTION controlp INFIELD stecseq name="input.c.page2.stecseq"
            {<point name="input.c.page2.stecseq" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.stec001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec001
            #add-point:ON ACTION controlp INFIELD stec001 name="input.c.page2.stec001"
            {<point name="input.c.page2.stec001" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.stecacti
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stecacti
            #add-point:ON ACTION controlp INFIELD stecacti name="input.c.page2.stecacti"
            {<point name="input.c.page2.stecacti" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.stec024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec024
            #add-point:ON ACTION controlp INFIELD stec024 name="input.c.page2.stec024"
            {<point name="input.c.page2.stec024" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.stec002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec002
            #add-point:ON ACTION controlp INFIELD stec002 name="input.c.page2.stec002"
            {<point name="input.c.page2.stec002" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.stec003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec003
            #add-point:ON ACTION controlp INFIELD stec003 name="input.c.page2.stec003"
            {<point name="input.c.page2.stec003" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.stec025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec025
            #add-point:ON ACTION controlp INFIELD stec025 name="input.c.page2.stec025"
            {<point name="input.c.page2.stec025" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.stec004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec004
            #add-point:ON ACTION controlp INFIELD stec004 name="input.c.page2.stec004"
            {<point name="input.c.page2.stec004" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.stec005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec005
            #add-point:ON ACTION controlp INFIELD stec005 name="input.c.page2.stec005"
            {<point name="input.c.page2.stec005" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.stec006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec006
            #add-point:ON ACTION controlp INFIELD stec006 name="input.c.page2.stec006"
            {<point name="input.c.page2.stec006" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.stec006_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec006_desc
            #add-point:ON ACTION controlp INFIELD stec006_desc name="input.c.page2.stec006_desc"
            {<point name="input.c.page2.stec006_desc" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.stec007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec007
            #add-point:ON ACTION controlp INFIELD stec007 name="input.c.page2.stec007"
            {<point name="input.c.page2.stec007" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.stec007_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec007_desc
            #add-point:ON ACTION controlp INFIELD stec007_desc name="input.c.page2.stec007_desc"
            {<point name="input.c.page2.stec007_desc" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.stec008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec008
            #add-point:ON ACTION controlp INFIELD stec008 name="input.c.page2.stec008"
            {<point name="input.c.page2.stec008" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.stec009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec009
            #add-point:ON ACTION controlp INFIELD stec009 name="input.c.page2.stec009"
            {<point name="input.c.page2.stec009" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.stec026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec026
            #add-point:ON ACTION controlp INFIELD stec026 name="input.c.page2.stec026"
            {<point name="input.c.page2.stec026" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.stec027
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec027
            #add-point:ON ACTION controlp INFIELD stec027 name="input.c.page2.stec027"
            {<point name="input.c.page2.stec027" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.stec010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec010
            #add-point:ON ACTION controlp INFIELD stec010 name="input.c.page2.stec010"
            {<point name="input.c.page2.stec010" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.stec011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec011
            #add-point:ON ACTION controlp INFIELD stec011 name="input.c.page2.stec011"
            {<point name="input.c.page2.stec011" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.stec012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec012
            #add-point:ON ACTION controlp INFIELD stec012 name="input.c.page2.stec012"
            {<point name="input.c.page2.stec012" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.stec013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec013
            #add-point:ON ACTION controlp INFIELD stec013 name="input.c.page2.stec013"
            {<point name="input.c.page2.stec013" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.stec014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec014
            #add-point:ON ACTION controlp INFIELD stec014 name="input.c.page2.stec014"
            {<point name="input.c.page2.stec014" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.stec015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec015
            #add-point:ON ACTION controlp INFIELD stec015 name="input.c.page2.stec015"
            {<point name="input.c.page2.stec015" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.stec016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec016
            #add-point:ON ACTION controlp INFIELD stec016 name="input.c.page2.stec016"
            {<point name="input.c.page2.stec016" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.stec017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec017
            #add-point:ON ACTION controlp INFIELD stec017 name="input.c.page2.stec017"
            {<point name="input.c.page2.stec017" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.stec018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec018
            #add-point:ON ACTION controlp INFIELD stec018 name="input.c.page2.stec018"
            {<point name="input.c.page2.stec018" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.stec019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec019
            #add-point:ON ACTION controlp INFIELD stec019 name="input.c.page2.stec019"
            {<point name="input.c.page2.stec019" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.stec020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec020
            #add-point:ON ACTION controlp INFIELD stec020 name="input.c.page2.stec020"
            {<point name="input.c.page2.stec020" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.stec021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec021
            #add-point:ON ACTION controlp INFIELD stec021 name="input.c.page2.stec021"
            {<point name="input.c.page2.stec021" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.stec022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec022
            #add-point:ON ACTION controlp INFIELD stec022 name="input.c.page2.stec022"
            {<point name="input.c.page2.stec022" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.stec023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stec023
            #add-point:ON ACTION controlp INFIELD stec023 name="input.c.page2.stec023"
            {<point name="input.c.page2.stec023" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.stecsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stecsite
            #add-point:ON ACTION controlp INFIELD stecsite name="input.c.page2.stecsite"
            {<point name="input.c.page2.stecsite" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.stecunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stecunit
            #add-point:ON ACTION controlp INFIELD stecunit name="input.c.page2.stecunit"
            {<point name="input.c.page2.stecunit" />}
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page5 after_row name="input.body2.after_row"
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_steb2_d[l_ac].* = g_steb2_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astt401_bcl5
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astt401_unlock_b("stec_t","'5'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page5 after_row2 name="input.body2.after_row2"
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body2.after_input"
            {<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_steb2_d[li_reproduce_target].* = g_steb2_d[li_reproduce].*
 
               LET g_steb2_d[li_reproduce_target].stecseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_steb2_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_steb2_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_steb3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_6)
         
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION astt401_01
            LET g_action_choice="astt401_01"
            IF cl_auth_chk_act("astt401_01") THEN
               
               #add-point:ON ACTION astt401_01 name="input.detail_input.page6.astt401_01"
               {<point name="input.detail_input.page6.astt401_01" mark="Y"/>}
               #END add-point
            END IF
 
 
 
 
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body3.before_input2"
            {<point name="input.body3.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_steb3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astt401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'6',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_steb3_d.getLength()
            #add-point:資料輸入前 name="input.body3.before_input"
            {<point name="input.body3.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_steb3_d[l_ac].* TO NULL 
            INITIALIZE g_steb3_d_t.* TO NULL 
            INITIALIZE g_steb3_d_o.* TO NULL 
            #公用欄位給值(單身6)
            
            #自定義預設值(單身6)
                  LET g_steb3_d[l_ac].stee012 = "1"
      LET g_steb3_d[l_ac].stee007 = "0"
 
            #add-point:modify段before備份 name="input.body3.insert.before_bak"
            {<point name="input.body3.insert.before_bak"/>}
            #end add-point
            LET g_steb3_d_t.* = g_steb3_d[l_ac].*     #新輸入資料
            LET g_steb3_d_o.* = g_steb3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astt401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body3.insert.after_set_entry_b"
            {<point name="input.body3.insert.after_set_entry_b"/>}
            #end add-point
            CALL astt401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_steb3_d[li_reproduce_target].* = g_steb3_d[li_reproduce].*
 
               LET g_steb3_d[li_reproduce_target].steeseq = NULL
               LET g_steb3_d[li_reproduce_target].stee002 = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body3.before_insert"
            {<point name="input.body3.before_insert"/>}
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body3.before_row2"
            {<point name="input.body3.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[6] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 6
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astt401_cl USING g_enterprise,g_stea_m.steadocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astt401_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astt401_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_steb3_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_steb3_d[l_ac].steeseq IS NOT NULL
               AND g_steb3_d[l_ac].stee002 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_steb3_d_t.* = g_steb3_d[l_ac].*  #BACKUP
               LET g_steb3_d_o.* = g_steb3_d[l_ac].*  #BACKUP
               CALL astt401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body3.after_set_entry_b"
               {<point name="input.body3.after_set_entry_b"/>}
               #end add-point  
               CALL astt401_set_no_entry_b(l_cmd)
               IF NOT astt401_lock_b("stee_t","'6'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astt401_bcl6 INTO g_steb3_d[l_ac].stee001,g_steb3_d[l_ac].stee002,g_steb3_d[l_ac].steeseq, 
                      g_steb3_d[l_ac].stee003,g_steb3_d[l_ac].stee004,g_steb3_d[l_ac].stee005,g_steb3_d[l_ac].stee006, 
                      g_steb3_d[l_ac].stee012,g_steb3_d[l_ac].stee007,g_steb3_d[l_ac].stee008,g_steb3_d[l_ac].stee009, 
                      g_steb3_d[l_ac].stee010,g_steb3_d[l_ac].stee011,g_steb3_d[l_ac].steesite,g_steb3_d[l_ac].steeunit 

                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_steb3_d_mask_o[l_ac].* =  g_steb3_d[l_ac].*
                  CALL astt401_stee_t_mask()
                  LET g_steb3_d_mask_n[l_ac].* =  g_steb3_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astt401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body3.before_row"
            {<point name="input.body3.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body3.after_delete_d"
               {<point name="input.body3.after_delete_d"/>}
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body3.b_delete_ask"
               {<point name="input.body3.b_delete_ask" />}
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身6刪除前 name="input.body3.b_delete"
               {<point name="input.body3.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stea_m.steadocno
               LET gs_keys[gs_keys.getLength()+1] = g_steb3_d_t.steeseq
               LET gs_keys[gs_keys.getLength()+1] = g_steb3_d_t.stee002
            
               #刪除同層單身
               IF NOT astt401_delete_b('stee_t',gs_keys,"'6'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astt401_key_delete_b(gs_keys,'stee_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身6刪除中 name="input.body3.m_delete"
               {<point name="input.body3.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astt401_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身6刪除後 name="input.body3.a_delete"
               {<point name="input.body3.a_delete"/>}
               #end add-point
               LET l_count = g_steb_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body3.after_delete"
               {<point name="input.body3.after_delete"/>}
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_steb3_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身6新增前 name="input.body3.b_a_insert"
            {<point name="input.body3.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stee_t 
             WHERE steeent = g_enterprise AND steedocno = g_stea_m.steadocno
               AND steeseq = g_steb3_d[l_ac].steeseq
               AND stee002 = g_steb3_d[l_ac].stee002
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身6新增前 name="input.body3.b_insert"
               {<point name="input.body3.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys[2] = g_steb3_d[g_detail_idx].steeseq
               LET gs_keys[3] = g_steb3_d[g_detail_idx].stee002
               CALL astt401_insert_b('stee_t',gs_keys,"'6'")
                           
               #add-point:單身新增後6 name="input.body3.a_insert"
               {<point name="input.body3.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_steb_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stee_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astt401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body3.after_insert"
               {<point name="input.body3.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_steb3_d[l_ac].* = g_steb3_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astt401_bcl6
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_steb3_d[l_ac].* = g_steb3_d_t.*
            ELSE
               #add-point:單身page6修改前 name="input.body3.b_update"
               {<point name="input.body3.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身6)
               
               
               #將遮罩欄位還原
               CALL astt401_stee_t_mask_restore('restore_mask_o')
                              
               UPDATE stee_t SET (steedocno,stee001,stee002,steeseq,stee003,stee004,stee005,stee006, 
                   stee012,stee007,stee008,stee009,stee010,stee011,steesite,steeunit) = (g_stea_m.steadocno, 
                   g_steb3_d[l_ac].stee001,g_steb3_d[l_ac].stee002,g_steb3_d[l_ac].steeseq,g_steb3_d[l_ac].stee003, 
                   g_steb3_d[l_ac].stee004,g_steb3_d[l_ac].stee005,g_steb3_d[l_ac].stee006,g_steb3_d[l_ac].stee012, 
                   g_steb3_d[l_ac].stee007,g_steb3_d[l_ac].stee008,g_steb3_d[l_ac].stee009,g_steb3_d[l_ac].stee010, 
                   g_steb3_d[l_ac].stee011,g_steb3_d[l_ac].steesite,g_steb3_d[l_ac].steeunit) #自訂欄位頁簽 

                WHERE steeent = g_enterprise AND steedocno = g_stea_m.steadocno
                  AND steeseq = g_steb3_d_t.steeseq #項次 
                  AND stee002 = g_steb3_d_t.stee002
                  
               #add-point:單身page6修改中 name="input.body3.m_update"
               {<point name="input.body3.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_steb3_d[l_ac].* = g_steb3_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stee_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_steb3_d[l_ac].* = g_steb3_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stee_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys_bak[1] = g_steadocno_t
               LET gs_keys[2] = g_steb3_d[g_detail_idx].steeseq
               LET gs_keys_bak[2] = g_steb3_d_t.steeseq
               LET gs_keys[3] = g_steb3_d[g_detail_idx].stee002
               LET gs_keys_bak[3] = g_steb3_d_t.stee002
               CALL astt401_update_b('stee_t',gs_keys,gs_keys_bak,"'6'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astt401_stee_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_steb3_d[g_detail_idx].steeseq = g_steb3_d_t.steeseq 
                  AND g_steb3_d[g_detail_idx].stee002 = g_steb3_d_t.stee002 
                  ) THEN
                  LET gs_keys[01] = g_stea_m.steadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_steb3_d_t.steeseq
                  LET gs_keys[gs_keys.getLength()+1] = g_steb3_d_t.stee002
                  CALL astt401_key_update_b(gs_keys,'stee_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb3_d_t)
               LET g_log2 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb3_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page6修改後 name="input.body3.a_update"
               {<point name="input.body3.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stee001
            #add-point:BEFORE FIELD stee001 name="input.b.page3.stee001"
            {<point name="input.b.page3.stee001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stee001
            
            #add-point:AFTER FIELD stee001 name="input.a.page3.stee001"
            {<point name="input.a.page3.stee001" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stee001
            #add-point:ON CHANGE stee001 name="input.g.page3.stee001"
            {<point name="input.g.page3.stee001" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stee002
            #add-point:BEFORE FIELD stee002 name="input.b.page3.stee002"
            {<point name="input.b.page3.stee002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stee002
            
            #add-point:AFTER FIELD stee002 name="input.a.page3.stee002"
            {<point name="input.a.page3.stee002" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stee002
            #add-point:ON CHANGE stee002 name="input.g.page3.stee002"
            {<point name="input.g.page3.stee002" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steeseq
            #add-point:BEFORE FIELD steeseq name="input.b.page3.steeseq"
            {<point name="input.b.page3.steeseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steeseq
            
            #add-point:AFTER FIELD steeseq name="input.a.page3.steeseq"
            {<point name="input.a.page3.steeseq" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steeseq
            #add-point:ON CHANGE steeseq name="input.g.page3.steeseq"
            {<point name="input.g.page3.steeseq" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stee003
            
            #add-point:AFTER FIELD stee003 name="input.a.page3.stee003"
            {<point name="input.a.page3.stee003" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stee003
            #add-point:BEFORE FIELD stee003 name="input.b.page3.stee003"
            {<point name="input.b.page3.stee003" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stee003
            #add-point:ON CHANGE stee003 name="input.g.page3.stee003"
            {<point name="input.g.page3.stee003" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stee004
            #add-point:BEFORE FIELD stee004 name="input.b.page3.stee004"
            {<point name="input.b.page3.stee004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stee004
            
            #add-point:AFTER FIELD stee004 name="input.a.page3.stee004"
            {<point name="input.a.page3.stee004" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stee004
            #add-point:ON CHANGE stee004 name="input.g.page3.stee004"
            {<point name="input.g.page3.stee004" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stee005
            #add-point:BEFORE FIELD stee005 name="input.b.page3.stee005"
            {<point name="input.b.page3.stee005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stee005
            
            #add-point:AFTER FIELD stee005 name="input.a.page3.stee005"
            {<point name="input.a.page3.stee005" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stee005
            #add-point:ON CHANGE stee005 name="input.g.page3.stee005"
            {<point name="input.g.page3.stee005" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stee006
            #add-point:BEFORE FIELD stee006 name="input.b.page3.stee006"
            {<point name="input.b.page3.stee006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stee006
            
            #add-point:AFTER FIELD stee006 name="input.a.page3.stee006"
            {<point name="input.a.page3.stee006" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stee006
            #add-point:ON CHANGE stee006 name="input.g.page3.stee006"
            {<point name="input.g.page3.stee006" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stee012
            #add-point:BEFORE FIELD stee012 name="input.b.page3.stee012"
            {<point name="input.b.page3.stee012" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stee012
            
            #add-point:AFTER FIELD stee012 name="input.a.page3.stee012"
            {<point name="input.a.page3.stee012" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stee012
            #add-point:ON CHANGE stee012 name="input.g.page3.stee012"
            {<point name="input.g.page3.stee012" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stee007
            #add-point:BEFORE FIELD stee007 name="input.b.page3.stee007"
            {<point name="input.b.page3.stee007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stee007
            
            #add-point:AFTER FIELD stee007 name="input.a.page3.stee007"
            {<point name="input.a.page3.stee007" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stee007
            #add-point:ON CHANGE stee007 name="input.g.page3.stee007"
            {<point name="input.g.page3.stee007" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stee008
            #add-point:BEFORE FIELD stee008 name="input.b.page3.stee008"
            {<point name="input.b.page3.stee008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stee008
            
            #add-point:AFTER FIELD stee008 name="input.a.page3.stee008"
            {<point name="input.a.page3.stee008" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stee008
            #add-point:ON CHANGE stee008 name="input.g.page3.stee008"
            {<point name="input.g.page3.stee008" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stee009
            #add-point:BEFORE FIELD stee009 name="input.b.page3.stee009"
            {<point name="input.b.page3.stee009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stee009
            
            #add-point:AFTER FIELD stee009 name="input.a.page3.stee009"
            {<point name="input.a.page3.stee009" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stee009
            #add-point:ON CHANGE stee009 name="input.g.page3.stee009"
            {<point name="input.g.page3.stee009" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stee010
            #add-point:BEFORE FIELD stee010 name="input.b.page3.stee010"
            {<point name="input.b.page3.stee010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stee010
            
            #add-point:AFTER FIELD stee010 name="input.a.page3.stee010"
            {<point name="input.a.page3.stee010" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stee010
            #add-point:ON CHANGE stee010 name="input.g.page3.stee010"
            {<point name="input.g.page3.stee010" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stee011
            #add-point:BEFORE FIELD stee011 name="input.b.page3.stee011"
            {<point name="input.b.page3.stee011" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stee011
            
            #add-point:AFTER FIELD stee011 name="input.a.page3.stee011"
            {<point name="input.a.page3.stee011" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stee011
            #add-point:ON CHANGE stee011 name="input.g.page3.stee011"
            {<point name="input.g.page3.stee011" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steesite
            #add-point:BEFORE FIELD steesite name="input.b.page3.steesite"
            {<point name="input.b.page3.steesite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steesite
            
            #add-point:AFTER FIELD steesite name="input.a.page3.steesite"
            {<point name="input.a.page3.steesite" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steesite
            #add-point:ON CHANGE steesite name="input.g.page3.steesite"
            {<point name="input.g.page3.steesite" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steeunit
            #add-point:BEFORE FIELD steeunit name="input.b.page3.steeunit"
            {<point name="input.b.page3.steeunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steeunit
            
            #add-point:AFTER FIELD steeunit name="input.a.page3.steeunit"
            {<point name="input.a.page3.steeunit" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steeunit
            #add-point:ON CHANGE steeunit name="input.g.page3.steeunit"
            {<point name="input.g.page3.steeunit" />}
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page3.stee001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stee001
            #add-point:ON ACTION controlp INFIELD stee001 name="input.c.page3.stee001"
            {<point name="input.c.page3.stee001" />}
            #END add-point
 
 
         #Ctrlp:input.c.page3.stee002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stee002
            #add-point:ON ACTION controlp INFIELD stee002 name="input.c.page3.stee002"
            {<point name="input.c.page3.stee002" />}
            #END add-point
 
 
         #Ctrlp:input.c.page3.steeseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steeseq
            #add-point:ON ACTION controlp INFIELD steeseq name="input.c.page3.steeseq"
            {<point name="input.c.page3.steeseq" />}
            #END add-point
 
 
         #Ctrlp:input.c.page3.stee003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stee003
            #add-point:ON ACTION controlp INFIELD stee003 name="input.c.page3.stee003"
            {<point name="input.c.page3.stee003" />}
            #END add-point
 
 
         #Ctrlp:input.c.page3.stee004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stee004
            #add-point:ON ACTION controlp INFIELD stee004 name="input.c.page3.stee004"
            {<point name="input.c.page3.stee004" />}
            #END add-point
 
 
         #Ctrlp:input.c.page3.stee005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stee005
            #add-point:ON ACTION controlp INFIELD stee005 name="input.c.page3.stee005"
            {<point name="input.c.page3.stee005" />}
            #END add-point
 
 
         #Ctrlp:input.c.page3.stee006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stee006
            #add-point:ON ACTION controlp INFIELD stee006 name="input.c.page3.stee006"
            {<point name="input.c.page3.stee006" />}
            #END add-point
 
 
         #Ctrlp:input.c.page3.stee012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stee012
            #add-point:ON ACTION controlp INFIELD stee012 name="input.c.page3.stee012"
            {<point name="input.c.page3.stee012" />}
            #END add-point
 
 
         #Ctrlp:input.c.page3.stee007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stee007
            #add-point:ON ACTION controlp INFIELD stee007 name="input.c.page3.stee007"
            {<point name="input.c.page3.stee007" />}
            #END add-point
 
 
         #Ctrlp:input.c.page3.stee008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stee008
            #add-point:ON ACTION controlp INFIELD stee008 name="input.c.page3.stee008"
            {<point name="input.c.page3.stee008" />}
            #END add-point
 
 
         #Ctrlp:input.c.page3.stee009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stee009
            #add-point:ON ACTION controlp INFIELD stee009 name="input.c.page3.stee009"
            {<point name="input.c.page3.stee009" />}
            #END add-point
 
 
         #Ctrlp:input.c.page3.stee010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stee010
            #add-point:ON ACTION controlp INFIELD stee010 name="input.c.page3.stee010"
            {<point name="input.c.page3.stee010" />}
            #END add-point
 
 
         #Ctrlp:input.c.page3.stee011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stee011
            #add-point:ON ACTION controlp INFIELD stee011 name="input.c.page3.stee011"
            {<point name="input.c.page3.stee011" />}
            #END add-point
 
 
         #Ctrlp:input.c.page3.steesite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steesite
            #add-point:ON ACTION controlp INFIELD steesite name="input.c.page3.steesite"
            {<point name="input.c.page3.steesite" />}
            #END add-point
 
 
         #Ctrlp:input.c.page3.steeunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steeunit
            #add-point:ON ACTION controlp INFIELD steeunit name="input.c.page3.steeunit"
            {<point name="input.c.page3.steeunit" />}
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page6 after_row name="input.body3.after_row"
            {<point name="input.body3.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_steb3_d[l_ac].* = g_steb3_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astt401_bcl6
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astt401_unlock_b("stee_t","'6'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page6 after_row2 name="input.body3.after_row2"
            {<point name="input.body3.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body3.after_input"
            {<point name="input.body3.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_steb3_d[li_reproduce_target].* = g_steb3_d[li_reproduce].*
 
               LET g_steb3_d[li_reproduce_target].steeseq = NULL
               LET g_steb3_d[li_reproduce_target].stee002 = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_steb3_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_steb3_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_steb4_d FROM s_detail4.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_7)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body4.before_input2"
            {<point name="input.body4.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_steb4_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astt401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'7',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_steb4_d.getLength()
            #add-point:資料輸入前 name="input.body4.before_input"
            {<point name="input.body4.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_steb4_d[l_ac].* TO NULL 
            INITIALIZE g_steb4_d_t.* TO NULL 
            INITIALIZE g_steb4_d_o.* TO NULL 
            #公用欄位給值(單身7)
            
            #自定義預設值(單身7)
                  LET g_steb4_d[l_ac].steg004 = "0"
      LET g_steb4_d[l_ac].steg005 = "0"
 
            #add-point:modify段before備份 name="input.body4.insert.before_bak"
            {<point name="input.body4.insert.before_bak"/>}
            #end add-point
            LET g_steb4_d_t.* = g_steb4_d[l_ac].*     #新輸入資料
            LET g_steb4_d_o.* = g_steb4_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astt401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body4.insert.after_set_entry_b"
            {<point name="input.body4.insert.after_set_entry_b"/>}
            #end add-point
            CALL astt401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_steb4_d[li_reproduce_target].* = g_steb4_d[li_reproduce].*
 
               LET g_steb4_d[li_reproduce_target].stegseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body4.before_insert"
            {<point name="input.body4.before_insert"/>}
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body4.before_row2"
            {<point name="input.body4.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[7] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 7
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astt401_cl USING g_enterprise,g_stea_m.steadocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astt401_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astt401_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_steb4_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_steb4_d[l_ac].stegseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_steb4_d_t.* = g_steb4_d[l_ac].*  #BACKUP
               LET g_steb4_d_o.* = g_steb4_d[l_ac].*  #BACKUP
               CALL astt401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body4.after_set_entry_b"
               {<point name="input.body4.after_set_entry_b"/>}
               #end add-point  
               CALL astt401_set_no_entry_b(l_cmd)
               IF NOT astt401_lock_b("steg_t","'7'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astt401_bcl7 INTO g_steb4_d[l_ac].stegseq,g_steb4_d[l_ac].steg001,g_steb4_d[l_ac].steg002, 
                      g_steb4_d[l_ac].steg003,g_steb4_d[l_ac].steg004,g_steb4_d[l_ac].steg005,g_steb4_d[l_ac].stegacti, 
                      g_steb4_d[l_ac].stegsite,g_steb4_d[l_ac].stegunit
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_steb4_d_mask_o[l_ac].* =  g_steb4_d[l_ac].*
                  CALL astt401_steg_t_mask()
                  LET g_steb4_d_mask_n[l_ac].* =  g_steb4_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astt401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body4.before_row"
            {<point name="input.body4.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body4.after_delete_d"
               {<point name="input.body4.after_delete_d"/>}
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body4.b_delete_ask"
               {<point name="input.body4.b_delete_ask" />}
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身7刪除前 name="input.body4.b_delete"
               {<point name="input.body4.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stea_m.steadocno
               LET gs_keys[gs_keys.getLength()+1] = g_steb4_d_t.stegseq
            
               #刪除同層單身
               IF NOT astt401_delete_b('steg_t',gs_keys,"'7'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astt401_key_delete_b(gs_keys,'steg_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身7刪除中 name="input.body4.m_delete"
               {<point name="input.body4.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astt401_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身7刪除後 name="input.body4.a_delete"
               {<point name="input.body4.a_delete"/>}
               #end add-point
               LET l_count = g_steb_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body4.after_delete"
               {<point name="input.body4.after_delete"/>}
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_steb4_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身7新增前 name="input.body4.b_a_insert"
            {<point name="input.body4.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM steg_t 
             WHERE stegent = g_enterprise AND stegdocno = g_stea_m.steadocno
               AND stegseq = g_steb4_d[l_ac].stegseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身7新增前 name="input.body4.b_insert"
               {<point name="input.body4.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys[2] = g_steb4_d[g_detail_idx].stegseq
               CALL astt401_insert_b('steg_t',gs_keys,"'7'")
                           
               #add-point:單身新增後7 name="input.body4.a_insert"
               {<point name="input.body4.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_steb_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "steg_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astt401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body4.after_insert"
               {<point name="input.body4.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_steb4_d[l_ac].* = g_steb4_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astt401_bcl7
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_steb4_d[l_ac].* = g_steb4_d_t.*
            ELSE
               #add-point:單身page7修改前 name="input.body4.b_update"
               {<point name="input.body4.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身7)
               
               
               #將遮罩欄位還原
               CALL astt401_steg_t_mask_restore('restore_mask_o')
                              
               UPDATE steg_t SET (stegdocno,stegseq,steg001,steg002,steg003,steg004,steg005,stegacti, 
                   stegsite,stegunit) = (g_stea_m.steadocno,g_steb4_d[l_ac].stegseq,g_steb4_d[l_ac].steg001, 
                   g_steb4_d[l_ac].steg002,g_steb4_d[l_ac].steg003,g_steb4_d[l_ac].steg004,g_steb4_d[l_ac].steg005, 
                   g_steb4_d[l_ac].stegacti,g_steb4_d[l_ac].stegsite,g_steb4_d[l_ac].stegunit) #自訂欄位頁簽 

                WHERE stegent = g_enterprise AND stegdocno = g_stea_m.steadocno
                  AND stegseq = g_steb4_d_t.stegseq #項次 
                  
               #add-point:單身page7修改中 name="input.body4.m_update"
               {<point name="input.body4.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_steb4_d[l_ac].* = g_steb4_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "steg_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_steb4_d[l_ac].* = g_steb4_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "steg_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys_bak[1] = g_steadocno_t
               LET gs_keys[2] = g_steb4_d[g_detail_idx].stegseq
               LET gs_keys_bak[2] = g_steb4_d_t.stegseq
               CALL astt401_update_b('steg_t',gs_keys,gs_keys_bak,"'7'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astt401_steg_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_steb4_d[g_detail_idx].stegseq = g_steb4_d_t.stegseq 
                  ) THEN
                  LET gs_keys[01] = g_stea_m.steadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_steb4_d_t.stegseq
                  CALL astt401_key_update_b(gs_keys,'steg_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb4_d_t)
               LET g_log2 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb4_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page7修改後 name="input.body4.a_update"
               {<point name="input.body4.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stegseq
            #add-point:BEFORE FIELD stegseq name="input.b.page4.stegseq"
            {<point name="input.b.page4.stegseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stegseq
            
            #add-point:AFTER FIELD stegseq name="input.a.page4.stegseq"
            {<point name="input.a.page4.stegseq" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stegseq
            #add-point:ON CHANGE stegseq name="input.g.page4.stegseq"
            {<point name="input.g.page4.stegseq" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steg001
            #add-point:BEFORE FIELD steg001 name="input.b.page4.steg001"
            {<point name="input.b.page4.steg001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steg001
            
            #add-point:AFTER FIELD steg001 name="input.a.page4.steg001"
            {<point name="input.a.page4.steg001" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steg001
            #add-point:ON CHANGE steg001 name="input.g.page4.steg001"
            {<point name="input.g.page4.steg001" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steg002
            
            #add-point:AFTER FIELD steg002 name="input.a.page4.steg002"
            {<point name="input.a.page4.steg002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steg002
            #add-point:BEFORE FIELD steg002 name="input.b.page4.steg002"
            {<point name="input.b.page4.steg002" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steg002
            #add-point:ON CHANGE steg002 name="input.g.page4.steg002"
            {<point name="input.g.page4.steg002" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steg002_desc
            #add-point:BEFORE FIELD steg002_desc name="input.b.page4.steg002_desc"
            {<point name="input.b.page4.steg002_desc" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steg002_desc
            
            #add-point:AFTER FIELD steg002_desc name="input.a.page4.steg002_desc"
            {<point name="input.a.page4.steg002_desc" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steg002_desc
            #add-point:ON CHANGE steg002_desc name="input.g.page4.steg002_desc"
            {<point name="input.g.page4.steg002_desc" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steg003
            
            #add-point:AFTER FIELD steg003 name="input.a.page4.steg003"
            {<point name="input.a.page4.steg003" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steg003
            #add-point:BEFORE FIELD steg003 name="input.b.page4.steg003"
            {<point name="input.b.page4.steg003" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steg003
            #add-point:ON CHANGE steg003 name="input.g.page4.steg003"
            {<point name="input.g.page4.steg003" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steg003_desc
            #add-point:BEFORE FIELD steg003_desc name="input.b.page4.steg003_desc"
            {<point name="input.b.page4.steg003_desc" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steg003_desc
            
            #add-point:AFTER FIELD steg003_desc name="input.a.page4.steg003_desc"
            {<point name="input.a.page4.steg003_desc" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steg003_desc
            #add-point:ON CHANGE steg003_desc name="input.g.page4.steg003_desc"
            {<point name="input.g.page4.steg003_desc" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steg004
            #add-point:BEFORE FIELD steg004 name="input.b.page4.steg004"
            {<point name="input.b.page4.steg004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steg004
            
            #add-point:AFTER FIELD steg004 name="input.a.page4.steg004"
            {<point name="input.a.page4.steg004" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steg004
            #add-point:ON CHANGE steg004 name="input.g.page4.steg004"
            {<point name="input.g.page4.steg004" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steg005
            #add-point:BEFORE FIELD steg005 name="input.b.page4.steg005"
            {<point name="input.b.page4.steg005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steg005
            
            #add-point:AFTER FIELD steg005 name="input.a.page4.steg005"
            {<point name="input.a.page4.steg005" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steg005
            #add-point:ON CHANGE steg005 name="input.g.page4.steg005"
            {<point name="input.g.page4.steg005" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stegacti
            #add-point:BEFORE FIELD stegacti name="input.b.page4.stegacti"
            {<point name="input.b.page4.stegacti" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stegacti
            
            #add-point:AFTER FIELD stegacti name="input.a.page4.stegacti"
            {<point name="input.a.page4.stegacti" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stegacti
            #add-point:ON CHANGE stegacti name="input.g.page4.stegacti"
            {<point name="input.g.page4.stegacti" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stegsite
            #add-point:BEFORE FIELD stegsite name="input.b.page4.stegsite"
            {<point name="input.b.page4.stegsite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stegsite
            
            #add-point:AFTER FIELD stegsite name="input.a.page4.stegsite"
            {<point name="input.a.page4.stegsite" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stegsite
            #add-point:ON CHANGE stegsite name="input.g.page4.stegsite"
            {<point name="input.g.page4.stegsite" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stegunit
            #add-point:BEFORE FIELD stegunit name="input.b.page4.stegunit"
            {<point name="input.b.page4.stegunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stegunit
            
            #add-point:AFTER FIELD stegunit name="input.a.page4.stegunit"
            {<point name="input.a.page4.stegunit" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stegunit
            #add-point:ON CHANGE stegunit name="input.g.page4.stegunit"
            {<point name="input.g.page4.stegunit" />}
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page4.stegseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stegseq
            #add-point:ON ACTION controlp INFIELD stegseq name="input.c.page4.stegseq"
            {<point name="input.c.page4.stegseq" />}
            #END add-point
 
 
         #Ctrlp:input.c.page4.steg001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steg001
            #add-point:ON ACTION controlp INFIELD steg001 name="input.c.page4.steg001"
            {<point name="input.c.page4.steg001" />}
            #END add-point
 
 
         #Ctrlp:input.c.page4.steg002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steg002
            #add-point:ON ACTION controlp INFIELD steg002 name="input.c.page4.steg002"
            {<point name="input.c.page4.steg002" />}
            #END add-point
 
 
         #Ctrlp:input.c.page4.steg002_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steg002_desc
            #add-point:ON ACTION controlp INFIELD steg002_desc name="input.c.page4.steg002_desc"
            {<point name="input.c.page4.steg002_desc" />}
            #END add-point
 
 
         #Ctrlp:input.c.page4.steg003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steg003
            #add-point:ON ACTION controlp INFIELD steg003 name="input.c.page4.steg003"
            {<point name="input.c.page4.steg003" />}
            #END add-point
 
 
         #Ctrlp:input.c.page4.steg003_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steg003_desc
            #add-point:ON ACTION controlp INFIELD steg003_desc name="input.c.page4.steg003_desc"
            {<point name="input.c.page4.steg003_desc" />}
            #END add-point
 
 
         #Ctrlp:input.c.page4.steg004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steg004
            #add-point:ON ACTION controlp INFIELD steg004 name="input.c.page4.steg004"
            {<point name="input.c.page4.steg004" />}
            #END add-point
 
 
         #Ctrlp:input.c.page4.steg005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steg005
            #add-point:ON ACTION controlp INFIELD steg005 name="input.c.page4.steg005"
            {<point name="input.c.page4.steg005" />}
            #END add-point
 
 
         #Ctrlp:input.c.page4.stegacti
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stegacti
            #add-point:ON ACTION controlp INFIELD stegacti name="input.c.page4.stegacti"
            {<point name="input.c.page4.stegacti" />}
            #END add-point
 
 
         #Ctrlp:input.c.page4.stegsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stegsite
            #add-point:ON ACTION controlp INFIELD stegsite name="input.c.page4.stegsite"
            {<point name="input.c.page4.stegsite" />}
            #END add-point
 
 
         #Ctrlp:input.c.page4.stegunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stegunit
            #add-point:ON ACTION controlp INFIELD stegunit name="input.c.page4.stegunit"
            {<point name="input.c.page4.stegunit" />}
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page7 after_row name="input.body4.after_row"
            {<point name="input.body4.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_steb4_d[l_ac].* = g_steb4_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astt401_bcl7
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astt401_unlock_b("steg_t","'7'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page7 after_row2 name="input.body4.after_row2"
            {<point name="input.body4.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body4.after_input"
            {<point name="input.body4.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_steb4_d[li_reproduce_target].* = g_steb4_d[li_reproduce].*
 
               LET g_steb4_d[li_reproduce_target].stegseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_steb4_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_steb4_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_steb5_d FROM s_detail5.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_8)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body5.before_input2"
            {<point name="input.body5.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_steb5_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astt401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'8',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_steb5_d.getLength()
            #add-point:資料輸入前 name="input.body5.before_input"
            {<point name="input.body5.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_steb5_d[l_ac].* TO NULL 
            INITIALIZE g_steb5_d_t.* TO NULL 
            INITIALIZE g_steb5_d_o.* TO NULL 
            #公用欄位給值(單身8)
            
            #自定義預設值(單身8)
            
            #add-point:modify段before備份 name="input.body5.insert.before_bak"
            {<point name="input.body5.insert.before_bak"/>}
            #end add-point
            LET g_steb5_d_t.* = g_steb5_d[l_ac].*     #新輸入資料
            LET g_steb5_d_o.* = g_steb5_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astt401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body5.insert.after_set_entry_b"
            {<point name="input.body5.insert.after_set_entry_b"/>}
            #end add-point
            CALL astt401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_steb5_d[li_reproduce_target].* = g_steb5_d[li_reproduce].*
 
               LET g_steb5_d[li_reproduce_target].stehseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body5.before_insert"
            {<point name="input.body5.before_insert"/>}
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body5.before_row2"
            {<point name="input.body5.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[8] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 8
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astt401_cl USING g_enterprise,g_stea_m.steadocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astt401_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astt401_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_steb5_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_steb5_d[l_ac].stehseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_steb5_d_t.* = g_steb5_d[l_ac].*  #BACKUP
               LET g_steb5_d_o.* = g_steb5_d[l_ac].*  #BACKUP
               CALL astt401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body5.after_set_entry_b"
               {<point name="input.body5.after_set_entry_b"/>}
               #end add-point  
               CALL astt401_set_no_entry_b(l_cmd)
               IF NOT astt401_lock_b("steh_t","'8'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astt401_bcl8 INTO g_steb5_d[l_ac].stehseq,g_steb5_d[l_ac].steh001,g_steb5_d[l_ac].steh002, 
                      g_steb5_d[l_ac].steh003,g_steb5_d[l_ac].stehacti,g_steb5_d[l_ac].stehsite,g_steb5_d[l_ac].stehunit 

                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_steb5_d_mask_o[l_ac].* =  g_steb5_d[l_ac].*
                  CALL astt401_steh_t_mask()
                  LET g_steb5_d_mask_n[l_ac].* =  g_steb5_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astt401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body5.before_row"
            {<point name="input.body5.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body5.after_delete_d"
               {<point name="input.body5.after_delete_d"/>}
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body5.b_delete_ask"
               {<point name="input.body5.b_delete_ask" />}
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身8刪除前 name="input.body5.b_delete"
               {<point name="input.body5.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stea_m.steadocno
               LET gs_keys[gs_keys.getLength()+1] = g_steb5_d_t.stehseq
            
               #刪除同層單身
               IF NOT astt401_delete_b('steh_t',gs_keys,"'8'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astt401_key_delete_b(gs_keys,'steh_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身8刪除中 name="input.body5.m_delete"
               {<point name="input.body5.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astt401_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身8刪除後 name="input.body5.a_delete"
               {<point name="input.body5.a_delete"/>}
               #end add-point
               LET l_count = g_steb_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body5.after_delete"
               {<point name="input.body5.after_delete"/>}
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_steb5_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身8新增前 name="input.body5.b_a_insert"
            {<point name="input.body5.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM steh_t 
             WHERE stehent = g_enterprise AND stehdocno = g_stea_m.steadocno
               AND stehseq = g_steb5_d[l_ac].stehseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身8新增前 name="input.body5.b_insert"
               {<point name="input.body5.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys[2] = g_steb5_d[g_detail_idx].stehseq
               CALL astt401_insert_b('steh_t',gs_keys,"'8'")
                           
               #add-point:單身新增後8 name="input.body5.a_insert"
               {<point name="input.body5.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_steb_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "steh_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astt401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body5.after_insert"
               {<point name="input.body5.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_steb5_d[l_ac].* = g_steb5_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astt401_bcl8
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_steb5_d[l_ac].* = g_steb5_d_t.*
            ELSE
               #add-point:單身page8修改前 name="input.body5.b_update"
               {<point name="input.body5.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身8)
               
               
               #將遮罩欄位還原
               CALL astt401_steh_t_mask_restore('restore_mask_o')
                              
               UPDATE steh_t SET (stehdocno,stehseq,steh001,steh002,steh003,stehacti,stehsite,stehunit) = (g_stea_m.steadocno, 
                   g_steb5_d[l_ac].stehseq,g_steb5_d[l_ac].steh001,g_steb5_d[l_ac].steh002,g_steb5_d[l_ac].steh003, 
                   g_steb5_d[l_ac].stehacti,g_steb5_d[l_ac].stehsite,g_steb5_d[l_ac].stehunit) #自訂欄位頁簽 

                WHERE stehent = g_enterprise AND stehdocno = g_stea_m.steadocno
                  AND stehseq = g_steb5_d_t.stehseq #項次 
                  
               #add-point:單身page8修改中 name="input.body5.m_update"
               {<point name="input.body5.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_steb5_d[l_ac].* = g_steb5_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "steh_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_steb5_d[l_ac].* = g_steb5_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "steh_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys_bak[1] = g_steadocno_t
               LET gs_keys[2] = g_steb5_d[g_detail_idx].stehseq
               LET gs_keys_bak[2] = g_steb5_d_t.stehseq
               CALL astt401_update_b('steh_t',gs_keys,gs_keys_bak,"'8'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astt401_steh_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_steb5_d[g_detail_idx].stehseq = g_steb5_d_t.stehseq 
                  ) THEN
                  LET gs_keys[01] = g_stea_m.steadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_steb5_d_t.stehseq
                  CALL astt401_key_update_b(gs_keys,'steh_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb5_d_t)
               LET g_log2 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb5_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page8修改後 name="input.body5.a_update"
               {<point name="input.body5.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stehseq
            #add-point:BEFORE FIELD stehseq name="input.b.page5.stehseq"
            {<point name="input.b.page5.stehseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stehseq
            
            #add-point:AFTER FIELD stehseq name="input.a.page5.stehseq"
            {<point name="input.a.page5.stehseq" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stehseq
            #add-point:ON CHANGE stehseq name="input.g.page5.stehseq"
            {<point name="input.g.page5.stehseq" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steh001
            #add-point:BEFORE FIELD steh001 name="input.b.page5.steh001"
            {<point name="input.b.page5.steh001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steh001
            
            #add-point:AFTER FIELD steh001 name="input.a.page5.steh001"
            {<point name="input.a.page5.steh001" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steh001
            #add-point:ON CHANGE steh001 name="input.g.page5.steh001"
            {<point name="input.g.page5.steh001" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steh002
            #add-point:BEFORE FIELD steh002 name="input.b.page5.steh002"
            {<point name="input.b.page5.steh002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steh002
            
            #add-point:AFTER FIELD steh002 name="input.a.page5.steh002"
            {<point name="input.a.page5.steh002" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steh002
            #add-point:ON CHANGE steh002 name="input.g.page5.steh002"
            {<point name="input.g.page5.steh002" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steh003
            #add-point:BEFORE FIELD steh003 name="input.b.page5.steh003"
            {<point name="input.b.page5.steh003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steh003
            
            #add-point:AFTER FIELD steh003 name="input.a.page5.steh003"
            {<point name="input.a.page5.steh003" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steh003
            #add-point:ON CHANGE steh003 name="input.g.page5.steh003"
            {<point name="input.g.page5.steh003" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stehacti
            #add-point:BEFORE FIELD stehacti name="input.b.page5.stehacti"
            {<point name="input.b.page5.stehacti" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stehacti
            
            #add-point:AFTER FIELD stehacti name="input.a.page5.stehacti"
            {<point name="input.a.page5.stehacti" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stehacti
            #add-point:ON CHANGE stehacti name="input.g.page5.stehacti"
            {<point name="input.g.page5.stehacti" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stehsite
            #add-point:BEFORE FIELD stehsite name="input.b.page5.stehsite"
            {<point name="input.b.page5.stehsite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stehsite
            
            #add-point:AFTER FIELD stehsite name="input.a.page5.stehsite"
            {<point name="input.a.page5.stehsite" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stehsite
            #add-point:ON CHANGE stehsite name="input.g.page5.stehsite"
            {<point name="input.g.page5.stehsite" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stehunit
            #add-point:BEFORE FIELD stehunit name="input.b.page5.stehunit"
            {<point name="input.b.page5.stehunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stehunit
            
            #add-point:AFTER FIELD stehunit name="input.a.page5.stehunit"
            {<point name="input.a.page5.stehunit" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stehunit
            #add-point:ON CHANGE stehunit name="input.g.page5.stehunit"
            {<point name="input.g.page5.stehunit" />}
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page5.stehseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stehseq
            #add-point:ON ACTION controlp INFIELD stehseq name="input.c.page5.stehseq"
            {<point name="input.c.page5.stehseq" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.steh001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steh001
            #add-point:ON ACTION controlp INFIELD steh001 name="input.c.page5.steh001"
            {<point name="input.c.page5.steh001" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.steh002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steh002
            #add-point:ON ACTION controlp INFIELD steh002 name="input.c.page5.steh002"
            {<point name="input.c.page5.steh002" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.steh003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steh003
            #add-point:ON ACTION controlp INFIELD steh003 name="input.c.page5.steh003"
            {<point name="input.c.page5.steh003" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.stehacti
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stehacti
            #add-point:ON ACTION controlp INFIELD stehacti name="input.c.page5.stehacti"
            {<point name="input.c.page5.stehacti" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.stehsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stehsite
            #add-point:ON ACTION controlp INFIELD stehsite name="input.c.page5.stehsite"
            {<point name="input.c.page5.stehsite" />}
            #END add-point
 
 
         #Ctrlp:input.c.page5.stehunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stehunit
            #add-point:ON ACTION controlp INFIELD stehunit name="input.c.page5.stehunit"
            {<point name="input.c.page5.stehunit" />}
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page8 after_row name="input.body5.after_row"
            {<point name="input.body5.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_steb5_d[l_ac].* = g_steb5_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astt401_bcl8
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astt401_unlock_b("steh_t","'8'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page8 after_row2 name="input.body5.after_row2"
            {<point name="input.body5.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body5.after_input"
            {<point name="input.body5.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_steb5_d[li_reproduce_target].* = g_steb5_d[li_reproduce].*
 
               LET g_steb5_d[li_reproduce_target].stehseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_steb5_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_steb5_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_steb6_d FROM s_detail6.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_9)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body6.before_input2"
            {<point name="input.body6.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_steb6_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astt401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'9',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_steb6_d.getLength()
            #add-point:資料輸入前 name="input.body6.before_input"
            {<point name="input.body6.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_steb6_d[l_ac].* TO NULL 
            INITIALIZE g_steb6_d_t.* TO NULL 
            INITIALIZE g_steb6_d_o.* TO NULL 
            #公用欄位給值(單身9)
            
            #自定義預設值(單身9)
                  LET g_steb6_d[l_ac].stei004 = "0"
      LET g_steb6_d[l_ac].stei012 = "0"
 
            #add-point:modify段before備份 name="input.body6.insert.before_bak"
            {<point name="input.body6.insert.before_bak"/>}
            #end add-point
            LET g_steb6_d_t.* = g_steb6_d[l_ac].*     #新輸入資料
            LET g_steb6_d_o.* = g_steb6_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astt401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body6.insert.after_set_entry_b"
            {<point name="input.body6.insert.after_set_entry_b"/>}
            #end add-point
            CALL astt401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_steb6_d[li_reproduce_target].* = g_steb6_d[li_reproduce].*
 
               LET g_steb6_d[li_reproduce_target].steiseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body6.before_insert"
            {<point name="input.body6.before_insert"/>}
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body6.before_row2"
            {<point name="input.body6.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[9] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 9
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astt401_cl USING g_enterprise,g_stea_m.steadocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astt401_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astt401_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_steb6_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_steb6_d[l_ac].steiseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_steb6_d_t.* = g_steb6_d[l_ac].*  #BACKUP
               LET g_steb6_d_o.* = g_steb6_d[l_ac].*  #BACKUP
               CALL astt401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body6.after_set_entry_b"
               {<point name="input.body6.after_set_entry_b"/>}
               #end add-point  
               CALL astt401_set_no_entry_b(l_cmd)
               IF NOT astt401_lock_b("stei_t","'9'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astt401_bcl9 INTO g_steb6_d[l_ac].steiseq,g_steb6_d[l_ac].stei001,g_steb6_d[l_ac].stei002, 
                      g_steb6_d[l_ac].stei003,g_steb6_d[l_ac].stei005,g_steb6_d[l_ac].stei006,g_steb6_d[l_ac].stei004, 
                      g_steb6_d[l_ac].stei010,g_steb6_d[l_ac].stei007,g_steb6_d[l_ac].stei008,g_steb6_d[l_ac].stei009, 
                      g_steb6_d[l_ac].steiacti,g_steb6_d[l_ac].stei011,g_steb6_d[l_ac].stei012,g_steb6_d[l_ac].steisite, 
                      g_steb6_d[l_ac].steiunit
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_steb6_d_mask_o[l_ac].* =  g_steb6_d[l_ac].*
                  CALL astt401_stei_t_mask()
                  LET g_steb6_d_mask_n[l_ac].* =  g_steb6_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astt401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body6.before_row"
            {<point name="input.body6.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body6.after_delete_d"
               {<point name="input.body6.after_delete_d"/>}
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body6.b_delete_ask"
               {<point name="input.body6.b_delete_ask" />}
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身9刪除前 name="input.body6.b_delete"
               {<point name="input.body6.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stea_m.steadocno
               LET gs_keys[gs_keys.getLength()+1] = g_steb6_d_t.steiseq
            
               #刪除同層單身
               IF NOT astt401_delete_b('stei_t',gs_keys,"'9'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astt401_key_delete_b(gs_keys,'stei_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身9刪除中 name="input.body6.m_delete"
               {<point name="input.body6.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astt401_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身9刪除後 name="input.body6.a_delete"
               {<point name="input.body6.a_delete"/>}
               #end add-point
               LET l_count = g_steb_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body6.after_delete"
               {<point name="input.body6.after_delete"/>}
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_steb6_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身9新增前 name="input.body6.b_a_insert"
            {<point name="input.body6.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stei_t 
             WHERE steient = g_enterprise AND steidocno = g_stea_m.steadocno
               AND steiseq = g_steb6_d[l_ac].steiseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身9新增前 name="input.body6.b_insert"
               {<point name="input.body6.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys[2] = g_steb6_d[g_detail_idx].steiseq
               CALL astt401_insert_b('stei_t',gs_keys,"'9'")
                           
               #add-point:單身新增後9 name="input.body6.a_insert"
               {<point name="input.body6.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_steb_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stei_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astt401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body6.after_insert"
               {<point name="input.body6.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_steb6_d[l_ac].* = g_steb6_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astt401_bcl9
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_steb6_d[l_ac].* = g_steb6_d_t.*
            ELSE
               #add-point:單身page9修改前 name="input.body6.b_update"
               {<point name="input.body6.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身9)
               
               
               #將遮罩欄位還原
               CALL astt401_stei_t_mask_restore('restore_mask_o')
                              
               UPDATE stei_t SET (steidocno,steiseq,stei001,stei002,stei003,stei005,stei006,stei004, 
                   stei010,stei007,stei008,stei009,steiacti,stei011,stei012,steisite,steiunit) = (g_stea_m.steadocno, 
                   g_steb6_d[l_ac].steiseq,g_steb6_d[l_ac].stei001,g_steb6_d[l_ac].stei002,g_steb6_d[l_ac].stei003, 
                   g_steb6_d[l_ac].stei005,g_steb6_d[l_ac].stei006,g_steb6_d[l_ac].stei004,g_steb6_d[l_ac].stei010, 
                   g_steb6_d[l_ac].stei007,g_steb6_d[l_ac].stei008,g_steb6_d[l_ac].stei009,g_steb6_d[l_ac].steiacti, 
                   g_steb6_d[l_ac].stei011,g_steb6_d[l_ac].stei012,g_steb6_d[l_ac].steisite,g_steb6_d[l_ac].steiunit)  
                   #自訂欄位頁簽
                WHERE steient = g_enterprise AND steidocno = g_stea_m.steadocno
                  AND steiseq = g_steb6_d_t.steiseq #項次 
                  
               #add-point:單身page9修改中 name="input.body6.m_update"
               {<point name="input.body6.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_steb6_d[l_ac].* = g_steb6_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stei_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_steb6_d[l_ac].* = g_steb6_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stei_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys_bak[1] = g_steadocno_t
               LET gs_keys[2] = g_steb6_d[g_detail_idx].steiseq
               LET gs_keys_bak[2] = g_steb6_d_t.steiseq
               CALL astt401_update_b('stei_t',gs_keys,gs_keys_bak,"'9'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astt401_stei_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_steb6_d[g_detail_idx].steiseq = g_steb6_d_t.steiseq 
                  ) THEN
                  LET gs_keys[01] = g_stea_m.steadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_steb6_d_t.steiseq
                  CALL astt401_key_update_b(gs_keys,'stei_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb6_d_t)
               LET g_log2 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb6_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page9修改後 name="input.body6.a_update"
               {<point name="input.body6.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steiseq
            #add-point:BEFORE FIELD steiseq name="input.b.page6.steiseq"
            {<point name="input.b.page6.steiseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steiseq
            
            #add-point:AFTER FIELD steiseq name="input.a.page6.steiseq"
            {<point name="input.a.page6.steiseq" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steiseq
            #add-point:ON CHANGE steiseq name="input.g.page6.steiseq"
            {<point name="input.g.page6.steiseq" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stei001
            #add-point:BEFORE FIELD stei001 name="input.b.page6.stei001"
            {<point name="input.b.page6.stei001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stei001
            
            #add-point:AFTER FIELD stei001 name="input.a.page6.stei001"
            {<point name="input.a.page6.stei001" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stei001
            #add-point:ON CHANGE stei001 name="input.g.page6.stei001"
            {<point name="input.g.page6.stei001" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stei002
            #add-point:BEFORE FIELD stei002 name="input.b.page6.stei002"
            {<point name="input.b.page6.stei002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stei002
            
            #add-point:AFTER FIELD stei002 name="input.a.page6.stei002"
            {<point name="input.a.page6.stei002" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stei002
            #add-point:ON CHANGE stei002 name="input.g.page6.stei002"
            {<point name="input.g.page6.stei002" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stei003
            
            #add-point:AFTER FIELD stei003 name="input.a.page6.stei003"
            {<point name="input.a.page6.stei003" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stei003
            #add-point:BEFORE FIELD stei003 name="input.b.page6.stei003"
            {<point name="input.b.page6.stei003" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stei003
            #add-point:ON CHANGE stei003 name="input.g.page6.stei003"
            {<point name="input.g.page6.stei003" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stei005
            #add-point:BEFORE FIELD stei005 name="input.b.page6.stei005"
            {<point name="input.b.page6.stei005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stei005
            
            #add-point:AFTER FIELD stei005 name="input.a.page6.stei005"
            {<point name="input.a.page6.stei005" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stei005
            #add-point:ON CHANGE stei005 name="input.g.page6.stei005"
            {<point name="input.g.page6.stei005" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stei006
            #add-point:BEFORE FIELD stei006 name="input.b.page6.stei006"
            {<point name="input.b.page6.stei006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stei006
            
            #add-point:AFTER FIELD stei006 name="input.a.page6.stei006"
            {<point name="input.a.page6.stei006" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stei006
            #add-point:ON CHANGE stei006 name="input.g.page6.stei006"
            {<point name="input.g.page6.stei006" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stei004
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_steb6_d[l_ac].stei004,"0","1","","","azz-00079",1) THEN
               NEXT FIELD stei004
            END IF 
 
 
 
            #add-point:AFTER FIELD stei004 name="input.a.page6.stei004"
            {<point name="input.a.page6.stei004" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stei004
            #add-point:BEFORE FIELD stei004 name="input.b.page6.stei004"
            {<point name="input.b.page6.stei004" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stei004
            #add-point:ON CHANGE stei004 name="input.g.page6.stei004"
            {<point name="input.g.page6.stei004" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stei010
            
            #add-point:AFTER FIELD stei010 name="input.a.page6.stei010"
            {<point name="input.a.page6.stei010" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stei010
            #add-point:BEFORE FIELD stei010 name="input.b.page6.stei010"
            {<point name="input.b.page6.stei010" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stei010
            #add-point:ON CHANGE stei010 name="input.g.page6.stei010"
            {<point name="input.g.page6.stei010" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stei007
            #add-point:BEFORE FIELD stei007 name="input.b.page6.stei007"
            {<point name="input.b.page6.stei007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stei007
            
            #add-point:AFTER FIELD stei007 name="input.a.page6.stei007"
            {<point name="input.a.page6.stei007" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stei007
            #add-point:ON CHANGE stei007 name="input.g.page6.stei007"
            {<point name="input.g.page6.stei007" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stei008
            #add-point:BEFORE FIELD stei008 name="input.b.page6.stei008"
            {<point name="input.b.page6.stei008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stei008
            
            #add-point:AFTER FIELD stei008 name="input.a.page6.stei008"
            {<point name="input.a.page6.stei008" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stei008
            #add-point:ON CHANGE stei008 name="input.g.page6.stei008"
            {<point name="input.g.page6.stei008" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stei009
            #add-point:BEFORE FIELD stei009 name="input.b.page6.stei009"
            {<point name="input.b.page6.stei009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stei009
            
            #add-point:AFTER FIELD stei009 name="input.a.page6.stei009"
            {<point name="input.a.page6.stei009" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stei009
            #add-point:ON CHANGE stei009 name="input.g.page6.stei009"
            {<point name="input.g.page6.stei009" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steiacti
            #add-point:BEFORE FIELD steiacti name="input.b.page6.steiacti"
            {<point name="input.b.page6.steiacti" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steiacti
            
            #add-point:AFTER FIELD steiacti name="input.a.page6.steiacti"
            {<point name="input.a.page6.steiacti" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steiacti
            #add-point:ON CHANGE steiacti name="input.g.page6.steiacti"
            {<point name="input.g.page6.steiacti" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steisite
            #add-point:BEFORE FIELD steisite name="input.b.page6.steisite"
            {<point name="input.b.page6.steisite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steisite
            
            #add-point:AFTER FIELD steisite name="input.a.page6.steisite"
            {<point name="input.a.page6.steisite" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steisite
            #add-point:ON CHANGE steisite name="input.g.page6.steisite"
            {<point name="input.g.page6.steisite" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steiunit
            #add-point:BEFORE FIELD steiunit name="input.b.page6.steiunit"
            {<point name="input.b.page6.steiunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steiunit
            
            #add-point:AFTER FIELD steiunit name="input.a.page6.steiunit"
            {<point name="input.a.page6.steiunit" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE steiunit
            #add-point:ON CHANGE steiunit name="input.g.page6.steiunit"
            {<point name="input.g.page6.steiunit" />}
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page6.steiseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steiseq
            #add-point:ON ACTION controlp INFIELD steiseq name="input.c.page6.steiseq"
            {<point name="input.c.page6.steiseq" />}
            #END add-point
 
 
         #Ctrlp:input.c.page6.stei001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stei001
            #add-point:ON ACTION controlp INFIELD stei001 name="input.c.page6.stei001"
            {<point name="input.c.page6.stei001" />}
            #END add-point
 
 
         #Ctrlp:input.c.page6.stei002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stei002
            #add-point:ON ACTION controlp INFIELD stei002 name="input.c.page6.stei002"
            {<point name="input.c.page6.stei002" />}
            #END add-point
 
 
         #Ctrlp:input.c.page6.stei003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stei003
            #add-point:ON ACTION controlp INFIELD stei003 name="input.c.page6.stei003"
            {<point name="input.c.page6.stei003" />}
            #END add-point
 
 
         #Ctrlp:input.c.page6.stei005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stei005
            #add-point:ON ACTION controlp INFIELD stei005 name="input.c.page6.stei005"
            {<point name="input.c.page6.stei005" />}
            #END add-point
 
 
         #Ctrlp:input.c.page6.stei006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stei006
            #add-point:ON ACTION controlp INFIELD stei006 name="input.c.page6.stei006"
            {<point name="input.c.page6.stei006" />}
            #END add-point
 
 
         #Ctrlp:input.c.page6.stei004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stei004
            #add-point:ON ACTION controlp INFIELD stei004 name="input.c.page6.stei004"
            {<point name="input.c.page6.stei004" />}
            #END add-point
 
 
         #Ctrlp:input.c.page6.stei010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stei010
            #add-point:ON ACTION controlp INFIELD stei010 name="input.c.page6.stei010"
            {<point name="input.c.page6.stei010" />}
            #END add-point
 
 
         #Ctrlp:input.c.page6.stei007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stei007
            #add-point:ON ACTION controlp INFIELD stei007 name="input.c.page6.stei007"
            {<point name="input.c.page6.stei007" />}
            #END add-point
 
 
         #Ctrlp:input.c.page6.stei008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stei008
            #add-point:ON ACTION controlp INFIELD stei008 name="input.c.page6.stei008"
            {<point name="input.c.page6.stei008" />}
            #END add-point
 
 
         #Ctrlp:input.c.page6.stei009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stei009
            #add-point:ON ACTION controlp INFIELD stei009 name="input.c.page6.stei009"
            {<point name="input.c.page6.stei009" />}
            #END add-point
 
 
         #Ctrlp:input.c.page6.steiacti
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steiacti
            #add-point:ON ACTION controlp INFIELD steiacti name="input.c.page6.steiacti"
            {<point name="input.c.page6.steiacti" />}
            #END add-point
 
 
         #Ctrlp:input.c.page6.steisite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steisite
            #add-point:ON ACTION controlp INFIELD steisite name="input.c.page6.steisite"
            {<point name="input.c.page6.steisite" />}
            #END add-point
 
 
         #Ctrlp:input.c.page6.steiunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steiunit
            #add-point:ON ACTION controlp INFIELD steiunit name="input.c.page6.steiunit"
            {<point name="input.c.page6.steiunit" />}
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page9 after_row name="input.body6.after_row"
            {<point name="input.body6.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_steb6_d[l_ac].* = g_steb6_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astt401_bcl9
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astt401_unlock_b("stei_t","'9'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page9 after_row2 name="input.body6.after_row2"
            {<point name="input.body6.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body6.after_input"
            {<point name="input.body6.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_steb6_d[li_reproduce_target].* = g_steb6_d[li_reproduce].*
 
               LET g_steb6_d[li_reproduce_target].steiseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_steb6_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_steb6_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_steb7_d FROM s_detail7.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_10)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body7.before_input2"
            {<point name="input.body7.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_steb7_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astt401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'10',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_steb7_d.getLength()
            #add-point:資料輸入前 name="input.body7.before_input"
            {<point name="input.body7.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_steb7_d[l_ac].* TO NULL 
            INITIALIZE g_steb7_d_t.* TO NULL 
            INITIALIZE g_steb7_d_o.* TO NULL 
            #公用欄位給值(單身10)
            
            #自定義預設值(單身10)
            
            #add-point:modify段before備份 name="input.body7.insert.before_bak"
            {<point name="input.body7.insert.before_bak"/>}
            #end add-point
            LET g_steb7_d_t.* = g_steb7_d[l_ac].*     #新輸入資料
            LET g_steb7_d_o.* = g_steb7_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astt401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body7.insert.after_set_entry_b"
            {<point name="input.body7.insert.after_set_entry_b"/>}
            #end add-point
            CALL astt401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_steb7_d[li_reproduce_target].* = g_steb7_d[li_reproduce].*
 
               LET g_steb7_d[li_reproduce_target].stejseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body7.before_insert"
            {<point name="input.body7.before_insert"/>}
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body7.before_row2"
            {<point name="input.body7.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[10] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 10
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astt401_cl USING g_enterprise,g_stea_m.steadocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astt401_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astt401_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_steb7_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_steb7_d[l_ac].stejseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_steb7_d_t.* = g_steb7_d[l_ac].*  #BACKUP
               LET g_steb7_d_o.* = g_steb7_d[l_ac].*  #BACKUP
               CALL astt401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body7.after_set_entry_b"
               {<point name="input.body7.after_set_entry_b"/>}
               #end add-point  
               CALL astt401_set_no_entry_b(l_cmd)
               IF NOT astt401_lock_b("stej_t","'10'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astt401_bcl10 INTO g_steb7_d[l_ac].stejseq,g_steb7_d[l_ac].stej001,g_steb7_d[l_ac].stej002, 
                      g_steb7_d[l_ac].stej003,g_steb7_d[l_ac].stej004,g_steb7_d[l_ac].stej005,g_steb7_d[l_ac].stej006, 
                      g_steb7_d[l_ac].stejsite,g_steb7_d[l_ac].stejunit
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_steb7_d_mask_o[l_ac].* =  g_steb7_d[l_ac].*
                  CALL astt401_stej_t_mask()
                  LET g_steb7_d_mask_n[l_ac].* =  g_steb7_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astt401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body7.before_row"
            {<point name="input.body7.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body7.after_delete_d"
               {<point name="input.body7.after_delete_d"/>}
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body7.b_delete_ask"
               {<point name="input.body7.b_delete_ask" />}
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身10刪除前 name="input.body7.b_delete"
               {<point name="input.body7.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stea_m.steadocno
               LET gs_keys[gs_keys.getLength()+1] = g_steb7_d_t.stejseq
            
               #刪除同層單身
               IF NOT astt401_delete_b('stej_t',gs_keys,"'10'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astt401_key_delete_b(gs_keys,'stej_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身10刪除中 name="input.body7.m_delete"
               {<point name="input.body7.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astt401_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身10刪除後 name="input.body7.a_delete"
               {<point name="input.body7.a_delete"/>}
               #end add-point
               LET l_count = g_steb_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body7.after_delete"
               {<point name="input.body7.after_delete"/>}
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_steb7_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身10新增前 name="input.body7.b_a_insert"
            {<point name="input.body7.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stej_t 
             WHERE stejent = g_enterprise AND stejdocno = g_stea_m.steadocno
               AND stejseq = g_steb7_d[l_ac].stejseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身10新增前 name="input.body7.b_insert"
               {<point name="input.body7.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys[2] = g_steb7_d[g_detail_idx].stejseq
               CALL astt401_insert_b('stej_t',gs_keys,"'10'")
                           
               #add-point:單身新增後10 name="input.body7.a_insert"
               {<point name="input.body7.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_steb_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stej_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astt401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body7.after_insert"
               {<point name="input.body7.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_steb7_d[l_ac].* = g_steb7_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astt401_bcl10
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_steb7_d[l_ac].* = g_steb7_d_t.*
            ELSE
               #add-point:單身page10修改前 name="input.body7.b_update"
               {<point name="input.body7.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身10)
               
               
               #將遮罩欄位還原
               CALL astt401_stej_t_mask_restore('restore_mask_o')
                              
               UPDATE stej_t SET (stejdocno,stejseq,stej001,stej002,stej003,stej004,stej005,stej006, 
                   stejsite,stejunit) = (g_stea_m.steadocno,g_steb7_d[l_ac].stejseq,g_steb7_d[l_ac].stej001, 
                   g_steb7_d[l_ac].stej002,g_steb7_d[l_ac].stej003,g_steb7_d[l_ac].stej004,g_steb7_d[l_ac].stej005, 
                   g_steb7_d[l_ac].stej006,g_steb7_d[l_ac].stejsite,g_steb7_d[l_ac].stejunit) #自訂欄位頁簽 

                WHERE stejent = g_enterprise AND stejdocno = g_stea_m.steadocno
                  AND stejseq = g_steb7_d_t.stejseq #項次 
                  
               #add-point:單身page10修改中 name="input.body7.m_update"
               {<point name="input.body7.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_steb7_d[l_ac].* = g_steb7_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stej_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_steb7_d[l_ac].* = g_steb7_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stej_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys_bak[1] = g_steadocno_t
               LET gs_keys[2] = g_steb7_d[g_detail_idx].stejseq
               LET gs_keys_bak[2] = g_steb7_d_t.stejseq
               CALL astt401_update_b('stej_t',gs_keys,gs_keys_bak,"'10'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astt401_stej_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_steb7_d[g_detail_idx].stejseq = g_steb7_d_t.stejseq 
                  ) THEN
                  LET gs_keys[01] = g_stea_m.steadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_steb7_d_t.stejseq
                  CALL astt401_key_update_b(gs_keys,'stej_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb7_d_t)
               LET g_log2 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb7_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page10修改後 name="input.body7.a_update"
               {<point name="input.body7.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stejseq
            #add-point:BEFORE FIELD stejseq name="input.b.page7.stejseq"
            {<point name="input.b.page7.stejseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stejseq
            
            #add-point:AFTER FIELD stejseq name="input.a.page7.stejseq"
            {<point name="input.a.page7.stejseq" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stejseq
            #add-point:ON CHANGE stejseq name="input.g.page7.stejseq"
            {<point name="input.g.page7.stejseq" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stej001
            #add-point:BEFORE FIELD stej001 name="input.b.page7.stej001"
            {<point name="input.b.page7.stej001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stej001
            
            #add-point:AFTER FIELD stej001 name="input.a.page7.stej001"
            {<point name="input.a.page7.stej001" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stej001
            #add-point:ON CHANGE stej001 name="input.g.page7.stej001"
            {<point name="input.g.page7.stej001" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stej002
            #add-point:BEFORE FIELD stej002 name="input.b.page7.stej002"
            {<point name="input.b.page7.stej002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stej002
            
            #add-point:AFTER FIELD stej002 name="input.a.page7.stej002"
            {<point name="input.a.page7.stej002" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stej002
            #add-point:ON CHANGE stej002 name="input.g.page7.stej002"
            {<point name="input.g.page7.stej002" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stej003
            #add-point:BEFORE FIELD stej003 name="input.b.page7.stej003"
            {<point name="input.b.page7.stej003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stej003
            
            #add-point:AFTER FIELD stej003 name="input.a.page7.stej003"
            {<point name="input.a.page7.stej003" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stej003
            #add-point:ON CHANGE stej003 name="input.g.page7.stej003"
            {<point name="input.g.page7.stej003" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stej004
            #add-point:BEFORE FIELD stej004 name="input.b.page7.stej004"
            {<point name="input.b.page7.stej004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stej004
            
            #add-point:AFTER FIELD stej004 name="input.a.page7.stej004"
            {<point name="input.a.page7.stej004" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stej004
            #add-point:ON CHANGE stej004 name="input.g.page7.stej004"
            {<point name="input.g.page7.stej004" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stej005
            #add-point:BEFORE FIELD stej005 name="input.b.page7.stej005"
            {<point name="input.b.page7.stej005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stej005
            
            #add-point:AFTER FIELD stej005 name="input.a.page7.stej005"
            {<point name="input.a.page7.stej005" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stej005
            #add-point:ON CHANGE stej005 name="input.g.page7.stej005"
            {<point name="input.g.page7.stej005" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stej006
            #add-point:BEFORE FIELD stej006 name="input.b.page7.stej006"
            {<point name="input.b.page7.stej006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stej006
            
            #add-point:AFTER FIELD stej006 name="input.a.page7.stej006"
            {<point name="input.a.page7.stej006" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stej006
            #add-point:ON CHANGE stej006 name="input.g.page7.stej006"
            {<point name="input.g.page7.stej006" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stejsite
            #add-point:BEFORE FIELD stejsite name="input.b.page7.stejsite"
            {<point name="input.b.page7.stejsite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stejsite
            
            #add-point:AFTER FIELD stejsite name="input.a.page7.stejsite"
            {<point name="input.a.page7.stejsite" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stejsite
            #add-point:ON CHANGE stejsite name="input.g.page7.stejsite"
            {<point name="input.g.page7.stejsite" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stejunit
            #add-point:BEFORE FIELD stejunit name="input.b.page7.stejunit"
            {<point name="input.b.page7.stejunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stejunit
            
            #add-point:AFTER FIELD stejunit name="input.a.page7.stejunit"
            {<point name="input.a.page7.stejunit" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stejunit
            #add-point:ON CHANGE stejunit name="input.g.page7.stejunit"
            {<point name="input.g.page7.stejunit" />}
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page7.stejseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stejseq
            #add-point:ON ACTION controlp INFIELD stejseq name="input.c.page7.stejseq"
            {<point name="input.c.page7.stejseq" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.stej001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stej001
            #add-point:ON ACTION controlp INFIELD stej001 name="input.c.page7.stej001"
            {<point name="input.c.page7.stej001" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.stej002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stej002
            #add-point:ON ACTION controlp INFIELD stej002 name="input.c.page7.stej002"
            {<point name="input.c.page7.stej002" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.stej003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stej003
            #add-point:ON ACTION controlp INFIELD stej003 name="input.c.page7.stej003"
            {<point name="input.c.page7.stej003" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.stej004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stej004
            #add-point:ON ACTION controlp INFIELD stej004 name="input.c.page7.stej004"
            {<point name="input.c.page7.stej004" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.stej005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stej005
            #add-point:ON ACTION controlp INFIELD stej005 name="input.c.page7.stej005"
            {<point name="input.c.page7.stej005" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.stej006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stej006
            #add-point:ON ACTION controlp INFIELD stej006 name="input.c.page7.stej006"
            {<point name="input.c.page7.stej006" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.stejsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stejsite
            #add-point:ON ACTION controlp INFIELD stejsite name="input.c.page7.stejsite"
            {<point name="input.c.page7.stejsite" />}
            #END add-point
 
 
         #Ctrlp:input.c.page7.stejunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stejunit
            #add-point:ON ACTION controlp INFIELD stejunit name="input.c.page7.stejunit"
            {<point name="input.c.page7.stejunit" />}
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page10 after_row name="input.body7.after_row"
            {<point name="input.body7.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_steb7_d[l_ac].* = g_steb7_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astt401_bcl10
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astt401_unlock_b("stej_t","'10'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page10 after_row2 name="input.body7.after_row2"
            {<point name="input.body7.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body7.after_input"
            {<point name="input.body7.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_steb7_d[li_reproduce_target].* = g_steb7_d[li_reproduce].*
 
               LET g_steb7_d[li_reproduce_target].stejseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_steb7_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_steb7_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_steb9_d FROM s_detail9.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_12)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body9.before_input2"
            {<point name="input.body9.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_steb9_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astt401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'11',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_steb9_d.getLength()
            #add-point:資料輸入前 name="input.body9.before_input"
            {<point name="input.body9.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_steb9_d[l_ac].* TO NULL 
            INITIALIZE g_steb9_d_t.* TO NULL 
            INITIALIZE g_steb9_d_o.* TO NULL 
            #公用欄位給值(單身12)
            
            #自定義預設值(單身12)
                  LET g_steb9_d[l_ac].stef006 = "0"
      LET g_steb9_d[l_ac].stef007 = "0"
 
            #add-point:modify段before備份 name="input.body9.insert.before_bak"
            {<point name="input.body9.insert.before_bak"/>}
            #end add-point
            LET g_steb9_d_t.* = g_steb9_d[l_ac].*     #新輸入資料
            LET g_steb9_d_o.* = g_steb9_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astt401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body9.insert.after_set_entry_b"
            {<point name="input.body9.insert.after_set_entry_b"/>}
            #end add-point
            CALL astt401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_steb9_d[li_reproduce_target].* = g_steb9_d[li_reproduce].*
 
               LET g_steb9_d[li_reproduce_target].stefseq = NULL
               LET g_steb9_d[li_reproduce_target].stef002 = NULL
               LET g_steb9_d[li_reproduce_target].stef003 = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body9.before_insert"
            {<point name="input.body9.before_insert"/>}
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body9.before_row2"
            {<point name="input.body9.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[12] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 12
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astt401_cl USING g_enterprise,g_stea_m.steadocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astt401_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astt401_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_steb9_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_steb9_d[l_ac].stefseq IS NOT NULL
               AND g_steb9_d[l_ac].stef002 IS NOT NULL
               AND g_steb9_d[l_ac].stef003 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_steb9_d_t.* = g_steb9_d[l_ac].*  #BACKUP
               LET g_steb9_d_o.* = g_steb9_d[l_ac].*  #BACKUP
               CALL astt401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body9.after_set_entry_b"
               {<point name="input.body9.after_set_entry_b"/>}
               #end add-point  
               CALL astt401_set_no_entry_b(l_cmd)
               IF NOT astt401_lock_b("stef_t","'12'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astt401_bcl11 INTO g_steb9_d[l_ac].stef001,g_steb9_d[l_ac].stefseq,g_steb9_d[l_ac].stef002, 
                      g_steb9_d[l_ac].stef003,g_steb9_d[l_ac].stef004,g_steb9_d[l_ac].stef005,g_steb9_d[l_ac].stef006, 
                      g_steb9_d[l_ac].stef007,g_steb9_d[l_ac].stef010,g_steb9_d[l_ac].stef008,g_steb9_d[l_ac].stef011, 
                      g_steb9_d[l_ac].stef009,g_steb9_d[l_ac].stefsite,g_steb9_d[l_ac].stefunit
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_steb9_d_mask_o[l_ac].* =  g_steb9_d[l_ac].*
                  CALL astt401_stef_t_mask()
                  LET g_steb9_d_mask_n[l_ac].* =  g_steb9_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astt401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body9.before_row"
            {<point name="input.body9.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body9.after_delete_d"
               {<point name="input.body9.after_delete_d"/>}
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body9.b_delete_ask"
               {<point name="input.body9.b_delete_ask" />}
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身12刪除前 name="input.body9.b_delete"
               {<point name="input.body9.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stea_m.steadocno
               LET gs_keys[gs_keys.getLength()+1] = g_steb9_d_t.stefseq
               LET gs_keys[gs_keys.getLength()+1] = g_steb9_d_t.stef002
               LET gs_keys[gs_keys.getLength()+1] = g_steb9_d_t.stef003
            
               #刪除同層單身
               IF NOT astt401_delete_b('stef_t',gs_keys,"'12'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astt401_key_delete_b(gs_keys,'stef_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身12刪除中 name="input.body9.m_delete"
               {<point name="input.body9.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astt401_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身12刪除後 name="input.body9.a_delete"
               {<point name="input.body9.a_delete"/>}
               #end add-point
               LET l_count = g_steb_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body9.after_delete"
               {<point name="input.body9.after_delete"/>}
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_steb9_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身12新增前 name="input.body9.b_a_insert"
            {<point name="input.body9.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stef_t 
             WHERE stefent = g_enterprise AND stefdocno = g_stea_m.steadocno
               AND stefseq = g_steb9_d[l_ac].stefseq
               AND stef002 = g_steb9_d[l_ac].stef002
               AND stef003 = g_steb9_d[l_ac].stef003
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身12新增前 name="input.body9.b_insert"
               {<point name="input.body9.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys[2] = g_steb9_d[g_detail_idx].stefseq
               LET gs_keys[3] = g_steb9_d[g_detail_idx].stef002
               LET gs_keys[4] = g_steb9_d[g_detail_idx].stef003
               CALL astt401_insert_b('stef_t',gs_keys,"'12'")
                           
               #add-point:單身新增後12 name="input.body9.a_insert"
               {<point name="input.body9.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_steb_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stef_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astt401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body9.after_insert"
               {<point name="input.body9.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_steb9_d[l_ac].* = g_steb9_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astt401_bcl11
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_steb9_d[l_ac].* = g_steb9_d_t.*
            ELSE
               #add-point:單身page12修改前 name="input.body9.b_update"
               {<point name="input.body9.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身12)
               
               
               #將遮罩欄位還原
               CALL astt401_stef_t_mask_restore('restore_mask_o')
                              
               UPDATE stef_t SET (stefdocno,stef001,stefseq,stef002,stef003,stef004,stef005,stef006, 
                   stef007,stef010,stef008,stef011,stef009,stefsite,stefunit) = (g_stea_m.steadocno, 
                   g_steb9_d[l_ac].stef001,g_steb9_d[l_ac].stefseq,g_steb9_d[l_ac].stef002,g_steb9_d[l_ac].stef003, 
                   g_steb9_d[l_ac].stef004,g_steb9_d[l_ac].stef005,g_steb9_d[l_ac].stef006,g_steb9_d[l_ac].stef007, 
                   g_steb9_d[l_ac].stef010,g_steb9_d[l_ac].stef008,g_steb9_d[l_ac].stef011,g_steb9_d[l_ac].stef009, 
                   g_steb9_d[l_ac].stefsite,g_steb9_d[l_ac].stefunit) #自訂欄位頁簽
                WHERE stefent = g_enterprise AND stefdocno = g_stea_m.steadocno
                  AND stefseq = g_steb9_d_t.stefseq #項次 
                  AND stef002 = g_steb9_d_t.stef002
                  AND stef003 = g_steb9_d_t.stef003
                  
               #add-point:單身page12修改中 name="input.body9.m_update"
               {<point name="input.body9.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_steb9_d[l_ac].* = g_steb9_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stef_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_steb9_d[l_ac].* = g_steb9_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stef_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys_bak[1] = g_steadocno_t
               LET gs_keys[2] = g_steb9_d[g_detail_idx].stefseq
               LET gs_keys_bak[2] = g_steb9_d_t.stefseq
               LET gs_keys[3] = g_steb9_d[g_detail_idx].stef002
               LET gs_keys_bak[3] = g_steb9_d_t.stef002
               LET gs_keys[4] = g_steb9_d[g_detail_idx].stef003
               LET gs_keys_bak[4] = g_steb9_d_t.stef003
               CALL astt401_update_b('stef_t',gs_keys,gs_keys_bak,"'12'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astt401_stef_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_steb9_d[g_detail_idx].stefseq = g_steb9_d_t.stefseq 
                  AND g_steb9_d[g_detail_idx].stef002 = g_steb9_d_t.stef002 
                  AND g_steb9_d[g_detail_idx].stef003 = g_steb9_d_t.stef003 
                  ) THEN
                  LET gs_keys[01] = g_stea_m.steadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_steb9_d_t.stefseq
                  LET gs_keys[gs_keys.getLength()+1] = g_steb9_d_t.stef002
                  LET gs_keys[gs_keys.getLength()+1] = g_steb9_d_t.stef003
                  CALL astt401_key_update_b(gs_keys,'stef_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb9_d_t)
               LET g_log2 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb9_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page12修改後 name="input.body9.a_update"
               {<point name="input.body9.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stef001
            #add-point:BEFORE FIELD stef001 name="input.b.page9.stef001"
            {<point name="input.b.page9.stef001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stef001
            
            #add-point:AFTER FIELD stef001 name="input.a.page9.stef001"
            {<point name="input.a.page9.stef001" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stef001
            #add-point:ON CHANGE stef001 name="input.g.page9.stef001"
            {<point name="input.g.page9.stef001" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stef002
            #add-point:BEFORE FIELD stef002 name="input.b.page9.stef002"
            {<point name="input.b.page9.stef002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stef002
            
            #add-point:AFTER FIELD stef002 name="input.a.page9.stef002"
            {<point name="input.a.page9.stef002" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stef002
            #add-point:ON CHANGE stef002 name="input.g.page9.stef002"
            {<point name="input.g.page9.stef002" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stef003
            #add-point:BEFORE FIELD stef003 name="input.b.page9.stef003"
            {<point name="input.b.page9.stef003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stef003
            
            #add-point:AFTER FIELD stef003 name="input.a.page9.stef003"
            {<point name="input.a.page9.stef003" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stef003
            #add-point:ON CHANGE stef003 name="input.g.page9.stef003"
            {<point name="input.g.page9.stef003" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stef004
            #add-point:BEFORE FIELD stef004 name="input.b.page9.stef004"
            {<point name="input.b.page9.stef004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stef004
            
            #add-point:AFTER FIELD stef004 name="input.a.page9.stef004"
            {<point name="input.a.page9.stef004" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stef004
            #add-point:ON CHANGE stef004 name="input.g.page9.stef004"
            {<point name="input.g.page9.stef004" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stef005
            
            #add-point:AFTER FIELD stef005 name="input.a.page9.stef005"
            {<point name="input.a.page9.stef005" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stef005
            #add-point:BEFORE FIELD stef005 name="input.b.page9.stef005"
            {<point name="input.b.page9.stef005" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stef005
            #add-point:ON CHANGE stef005 name="input.g.page9.stef005"
            {<point name="input.g.page9.stef005" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stef005_desc
            #add-point:BEFORE FIELD stef005_desc name="input.b.page9.stef005_desc"
            {<point name="input.b.page9.stef005_desc" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stef005_desc
            
            #add-point:AFTER FIELD stef005_desc name="input.a.page9.stef005_desc"
            {<point name="input.a.page9.stef005_desc" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stef005_desc
            #add-point:ON CHANGE stef005_desc name="input.g.page9.stef005_desc"
            {<point name="input.g.page9.stef005_desc" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stef006
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_steb9_d[l_ac].stef006,"0","1","","","azz-00079",1) THEN
               NEXT FIELD stef006
            END IF 
 
 
 
            #add-point:AFTER FIELD stef006 name="input.a.page9.stef006"
            {<point name="input.a.page9.stef006" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stef006
            #add-point:BEFORE FIELD stef006 name="input.b.page9.stef006"
            {<point name="input.b.page9.stef006" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stef006
            #add-point:ON CHANGE stef006 name="input.g.page9.stef006"
            {<point name="input.g.page9.stef006" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stef007
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_steb9_d[l_ac].stef007,"0","1","","","azz-00079",1) THEN
               NEXT FIELD stef007
            END IF 
 
 
 
            #add-point:AFTER FIELD stef007 name="input.a.page9.stef007"
            {<point name="input.a.page9.stef007" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stef007
            #add-point:BEFORE FIELD stef007 name="input.b.page9.stef007"
            {<point name="input.b.page9.stef007" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stef007
            #add-point:ON CHANGE stef007 name="input.g.page9.stef007"
            {<point name="input.g.page9.stef007" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stef010
            #add-point:BEFORE FIELD stef010 name="input.b.page9.stef010"
            {<point name="input.b.page9.stef010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stef010
            
            #add-point:AFTER FIELD stef010 name="input.a.page9.stef010"
            {<point name="input.a.page9.stef010" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stef010
            #add-point:ON CHANGE stef010 name="input.g.page9.stef010"
            {<point name="input.g.page9.stef010" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stef008
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_steb9_d[l_ac].stef008,"0","1","","","azz-00079",1) THEN
               NEXT FIELD stef008
            END IF 
 
 
 
            #add-point:AFTER FIELD stef008 name="input.a.page9.stef008"
            {<point name="input.a.page9.stef008" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stef008
            #add-point:BEFORE FIELD stef008 name="input.b.page9.stef008"
            {<point name="input.b.page9.stef008" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stef008
            #add-point:ON CHANGE stef008 name="input.g.page9.stef008"
            {<point name="input.g.page9.stef008" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stef011
            #add-point:BEFORE FIELD stef011 name="input.b.page9.stef011"
            {<point name="input.b.page9.stef011" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stef011
            
            #add-point:AFTER FIELD stef011 name="input.a.page9.stef011"
            {<point name="input.a.page9.stef011" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stef011
            #add-point:ON CHANGE stef011 name="input.g.page9.stef011"
            {<point name="input.g.page9.stef011" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stef009
            #add-point:BEFORE FIELD stef009 name="input.b.page9.stef009"
            {<point name="input.b.page9.stef009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stef009
            
            #add-point:AFTER FIELD stef009 name="input.a.page9.stef009"
            {<point name="input.a.page9.stef009" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stef009
            #add-point:ON CHANGE stef009 name="input.g.page9.stef009"
            {<point name="input.g.page9.stef009" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stefsite
            #add-point:BEFORE FIELD stefsite name="input.b.page9.stefsite"
            {<point name="input.b.page9.stefsite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stefsite
            
            #add-point:AFTER FIELD stefsite name="input.a.page9.stefsite"
            {<point name="input.a.page9.stefsite" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stefsite
            #add-point:ON CHANGE stefsite name="input.g.page9.stefsite"
            {<point name="input.g.page9.stefsite" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stefunit
            #add-point:BEFORE FIELD stefunit name="input.b.page9.stefunit"
            {<point name="input.b.page9.stefunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stefunit
            
            #add-point:AFTER FIELD stefunit name="input.a.page9.stefunit"
            {<point name="input.a.page9.stefunit" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stefunit
            #add-point:ON CHANGE stefunit name="input.g.page9.stefunit"
            {<point name="input.g.page9.stefunit" />}
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page9.stef001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stef001
            #add-point:ON ACTION controlp INFIELD stef001 name="input.c.page9.stef001"
            {<point name="input.c.page9.stef001" />}
            #END add-point
 
 
         #Ctrlp:input.c.page9.stef002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stef002
            #add-point:ON ACTION controlp INFIELD stef002 name="input.c.page9.stef002"
            {<point name="input.c.page9.stef002" />}
            #END add-point
 
 
         #Ctrlp:input.c.page9.stef003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stef003
            #add-point:ON ACTION controlp INFIELD stef003 name="input.c.page9.stef003"
            {<point name="input.c.page9.stef003" />}
            #END add-point
 
 
         #Ctrlp:input.c.page9.stef004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stef004
            #add-point:ON ACTION controlp INFIELD stef004 name="input.c.page9.stef004"
            {<point name="input.c.page9.stef004" />}
            #END add-point
 
 
         #Ctrlp:input.c.page9.stef005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stef005
            #add-point:ON ACTION controlp INFIELD stef005 name="input.c.page9.stef005"
            {<point name="input.c.page9.stef005" />}
            #END add-point
 
 
         #Ctrlp:input.c.page9.stef005_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stef005_desc
            #add-point:ON ACTION controlp INFIELD stef005_desc name="input.c.page9.stef005_desc"
            {<point name="input.c.page9.stef005_desc" />}
            #END add-point
 
 
         #Ctrlp:input.c.page9.stef006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stef006
            #add-point:ON ACTION controlp INFIELD stef006 name="input.c.page9.stef006"
            {<point name="input.c.page9.stef006" />}
            #END add-point
 
 
         #Ctrlp:input.c.page9.stef007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stef007
            #add-point:ON ACTION controlp INFIELD stef007 name="input.c.page9.stef007"
            {<point name="input.c.page9.stef007" />}
            #END add-point
 
 
         #Ctrlp:input.c.page9.stef010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stef010
            #add-point:ON ACTION controlp INFIELD stef010 name="input.c.page9.stef010"
            {<point name="input.c.page9.stef010" />}
            #END add-point
 
 
         #Ctrlp:input.c.page9.stef008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stef008
            #add-point:ON ACTION controlp INFIELD stef008 name="input.c.page9.stef008"
            {<point name="input.c.page9.stef008" />}
            #END add-point
 
 
         #Ctrlp:input.c.page9.stef011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stef011
            #add-point:ON ACTION controlp INFIELD stef011 name="input.c.page9.stef011"
            {<point name="input.c.page9.stef011" />}
            #END add-point
 
 
         #Ctrlp:input.c.page9.stef009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stef009
            #add-point:ON ACTION controlp INFIELD stef009 name="input.c.page9.stef009"
            {<point name="input.c.page9.stef009" />}
            #END add-point
 
 
         #Ctrlp:input.c.page9.stefsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stefsite
            #add-point:ON ACTION controlp INFIELD stefsite name="input.c.page9.stefsite"
            {<point name="input.c.page9.stefsite" />}
            #END add-point
 
 
         #Ctrlp:input.c.page9.stefunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stefunit
            #add-point:ON ACTION controlp INFIELD stefunit name="input.c.page9.stefunit"
            {<point name="input.c.page9.stefunit" />}
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page12 after_row name="input.body9.after_row"
            {<point name="input.body9.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_steb9_d[l_ac].* = g_steb9_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astt401_bcl11
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astt401_unlock_b("stef_t","'12'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page12 after_row2 name="input.body9.after_row2"
            {<point name="input.body9.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body9.after_input"
            {<point name="input.body9.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_steb9_d[li_reproduce_target].* = g_steb9_d[li_reproduce].*
 
               LET g_steb9_d[li_reproduce_target].stefseq = NULL
               LET g_steb9_d[li_reproduce_target].stef002 = NULL
               LET g_steb9_d[li_reproduce_target].stef003 = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_steb9_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_steb9_d.getLength()+1
            END IF
            
      END INPUT
 
      
      INPUT ARRAY g_steb8_d FROM s_detail8.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_11)
         
        
         BEFORE INPUT
            #先將上層單身的idx放入g_detail_idx
            LET g_detail_idx_tmp = g_detail_idx
            LET g_detail_idx = g_detail_idx_list[5]
            #檢查上層單身是否為空
            IF g_detail_idx = 0 OR g_steb2_d.getLength() = 0 THEN
               NEXT FIELD stecseq
            END IF
            #檢查上層單身是否有資料
            IF cl_null(g_steb2_d[g_detail_idx].stecseq) THEN
               NEXT FIELD stecseq
            END IF
            #add-point:資料輸入前 name="input.body8.before_input2"
            {<point name="input.body8.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_steb8_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            #如果一直都在單身2則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'12',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_steb8_d.getLength()
            #add-point:資料輸入前 name="input.body8.before_input"
            {<point name="input.body8.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_steb8_d[l_ac].* TO NULL 
            INITIALIZE g_steb8_d_t.* TO NULL 
            INITIALIZE g_steb8_d_o.* TO NULL 
            #公用欄位給值(單身11)
            
            #自定義預設值(單身11)
                  LET g_steb8_d[l_ac].stedseq1 = "0"
 
            #add-point:modify段before備份 name="input.body8.insert.before_bak"
            {<point name="input.body8.insert.before_bak"/>}
            #end add-point
            LET g_steb8_d_t.* = g_steb8_d[l_ac].*     #新輸入資料
            LET g_steb8_d_o.* = g_steb8_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astt401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body8.insert.after_set_entry_b"
            {<point name="input.body8.insert.after_set_entry_b"/>}
            #end add-point
            CALL astt401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_steb8_d[li_reproduce_target].* = g_steb8_d[li_reproduce].*
 
               LET g_steb8_d[li_reproduce_target].stedseq1 = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body8.before_insert"
            {<point name="input.body8.before_insert"/>}
            #end add-point  
            
         BEFORE ROW
            #add-point:modify段before row2 name="input.body8.before_row2"
            {<point name="input.body8.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx2 = l_ac
            LET g_detail_idx_list[11] = l_ac
            LET g_current_page = 11
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astt401_cl USING g_enterprise,g_stea_m.steadocno
            #(ver:78) ---start---
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astt401_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE
               LET g_errparam.popup = TRUE 
               CLOSE astt401_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            #(ver:78) --- end ---
            OPEN astt401_bcl5 USING g_enterprise,g_stea_m.steadocno,g_steb2_d[g_detail_idx].stecseq
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astt401_bcl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astt401_cl
               CLOSE astt401_bcl5
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_steb8_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_steb8_d[l_ac].stedseq1 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_steb8_d_t.* = g_steb8_d[l_ac].*  #BACKUP
               LET g_steb8_d_o.* = g_steb8_d[l_ac].*  #BACKUP
               CALL astt401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body8.after_set_entry_b"
               {<point name="input.body8.after_set_entry_b"/>}
               #end add-point  
               CALL astt401_set_no_entry_b(l_cmd)
               IF NOT astt401_lock_b("sted_t","'11'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astt401_bcl12 INTO g_steb8_d[l_ac].stedseq1,g_steb8_d[l_ac].sted001,g_steb8_d[l_ac].sted002, 
                      g_steb8_d[l_ac].sted003,g_steb8_d[l_ac].sted004,g_steb8_d[l_ac].sted005,g_steb8_d[l_ac].sted006, 
                      g_steb8_d[l_ac].sted007,g_steb8_d[l_ac].sted008,g_steb8_d[l_ac].sted009,g_steb8_d[l_ac].stedsite, 
                      g_steb8_d[l_ac].stedunit
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_steb8_d_mask_o[l_ac].* =  g_steb8_d[l_ac].*
                  CALL astt401_sted_t_mask()
                  LET g_steb8_d_mask_n[l_ac].* =  g_steb8_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astt401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body8.before_row"
            {<point name="input.body8.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body8.after_delete_d"
               {<point name="input.body8.after_delete_d"/>}
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body8.b_delete_ask"
               {<point name="input.body8.b_delete_ask" />}
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身11刪除前 name="input.body8.b_delete"
               {<point name="input.body8.b_delete" mark="Y"/>}
               #end add-point    
 
               #取得該筆資料key值
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys[2] = g_steb2_d[g_detail_idx].stecseq
               LET gs_keys[3] = g_steb8_d_t.stedseq1
 
 
               #刪除同層單身
               IF NOT astt401_delete_b('sted_t',gs_keys,"'11'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身11刪除中 name="input.body8.m_delete"
               {<point name="input.body8.m_delete"/>}
               #end add-point   
               
               CALL s_transaction_end('Y','0')
               CLOSE astt401_bcl
                  
               LET g_rec_b = g_rec_b-1
               #add-point:單身11刪除後 name="input.body8.a_delete"
               {<point name="input.body8.a_delete"/>}
               #end add-point
 
               LET l_count = g_steb_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body8.after_delete"
               {<point name="input.body8.after_delete"/>}
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_steb8_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
         
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身11新增前 name="input.body8.b_a_insert"
            {<point name="input.body8.b_a_insert"/>}
            #end add-point
    
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM sted_t 
             WHERE stedent = g_enterprise AND steddocno = g_stea_m.steadocno AND stedseq = g_steb2_d[g_detail_idx].stecseq  
                 AND stedseq1 = g_steb8_d[g_detail_idx2].stedseq1
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身11新增前 name="input.body8.b_insert"
               {<point name="input.body8.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys[2] = g_steb2_d[g_detail_idx].stecseq
               LET gs_keys[3] = g_steb8_d[g_detail_idx2].stedseq1
               CALL astt401_insert_b('sted_t',gs_keys,"'11'")
                           
               #add-point:單身新增後11 name="input.body8.a_insert"
               {<point name="input.body8.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_steb_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "sted_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astt401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body8.after_insert"
               {<point name="input.body8.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
            #還原g_detail_idx
            LET g_detail_idx = g_detail_idx_tmp
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_steb8_d[l_ac].* = g_steb8_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astt401_bcl12
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_steb8_d[l_ac].* = g_steb8_d_t.*
            ELSE
               #add-point:單身page11修改前 name="input.body8.b_update"
               {<point name="input.body8.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身11)
               
               
               #將遮罩欄位還原
               CALL astt401_sted_t_mask_restore('restore_mask_o')
               
               UPDATE sted_t SET (steddocno,stedseq,stedseq1,sted001,sted002,sted003,sted004,sted005, 
                   sted006,sted007,sted008,sted009,stedsite,stedunit) = (g_stea_m.steadocno,g_steb2_d[g_detail_idx].stecseq, 
                   g_steb8_d[l_ac].stedseq1,g_steb8_d[l_ac].sted001,g_steb8_d[l_ac].sted002,g_steb8_d[l_ac].sted003, 
                   g_steb8_d[l_ac].sted004,g_steb8_d[l_ac].sted005,g_steb8_d[l_ac].sted006,g_steb8_d[l_ac].sted007, 
                   g_steb8_d[l_ac].sted008,g_steb8_d[l_ac].sted009,g_steb8_d[l_ac].stedsite,g_steb8_d[l_ac].stedunit)  
                   #自訂欄位頁簽
                WHERE stedent = g_enterprise AND steddocno = g_steadocno_t AND stedseq = g_steb2_d[g_detail_idx].stecseq  
                    AND stedseq1 = g_steb8_d_t.stedseq1
                  
               #add-point:單身page11修改中 name="input.body8.m_update"
               {<point name="input.body8.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_steb8_d[l_ac].* = g_steb8_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "sted_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_steb8_d[l_ac].* = g_steb8_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "sted_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys_bak[1] = g_steadocno_t
               LET gs_keys[2] = g_steb2_d[g_detail_idx].stecseq
               LET gs_keys_bak[2] = g_steb2_d[g_detail_idx].stecseq
               LET gs_keys[3] = g_steb8_d[g_detail_idx2].stedseq1
               LET gs_keys_bak[3] = g_steb8_d_t.stedseq1
               CALL astt401_update_b('sted_t',gs_keys,gs_keys_bak,"'11'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astt401_sted_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb8_d_t)
               LET g_log2 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb8_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page11修改後 name="input.body8.a_update"
               {<point name="input.body8.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stedseq1
            #add-point:BEFORE FIELD stedseq1 name="input.b.page8.stedseq1"
            {<point name="input.b.page8.stedseq1" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stedseq1
            
            #add-point:AFTER FIELD stedseq1 name="input.a.page8.stedseq1"
            {<point name="input.a.page8.stedseq1" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stedseq1
            #add-point:ON CHANGE stedseq1 name="input.g.page8.stedseq1"
            {<point name="input.g.page8.stedseq1" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sted001
            #add-point:BEFORE FIELD sted001 name="input.b.page8.sted001"
            {<point name="input.b.page8.sted001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sted001
            
            #add-point:AFTER FIELD sted001 name="input.a.page8.sted001"
            {<point name="input.a.page8.sted001" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sted001
            #add-point:ON CHANGE sted001 name="input.g.page8.sted001"
            {<point name="input.g.page8.sted001" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sted002
            #add-point:BEFORE FIELD sted002 name="input.b.page8.sted002"
            {<point name="input.b.page8.sted002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sted002
            
            #add-point:AFTER FIELD sted002 name="input.a.page8.sted002"
            {<point name="input.a.page8.sted002" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sted002
            #add-point:ON CHANGE sted002 name="input.g.page8.sted002"
            {<point name="input.g.page8.sted002" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sted003
            
            #add-point:AFTER FIELD sted003 name="input.a.page8.sted003"
            {<point name="input.a.page8.sted003" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sted003
            #add-point:BEFORE FIELD sted003 name="input.b.page8.sted003"
            {<point name="input.b.page8.sted003" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sted003
            #add-point:ON CHANGE sted003 name="input.g.page8.sted003"
            {<point name="input.g.page8.sted003" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sted003_desc
            #add-point:BEFORE FIELD sted003_desc name="input.b.page8.sted003_desc"
            {<point name="input.b.page8.sted003_desc" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sted003_desc
            
            #add-point:AFTER FIELD sted003_desc name="input.a.page8.sted003_desc"
            {<point name="input.a.page8.sted003_desc" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sted003_desc
            #add-point:ON CHANGE sted003_desc name="input.g.page8.sted003_desc"
            {<point name="input.g.page8.sted003_desc" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sted004
            
            #add-point:AFTER FIELD sted004 name="input.a.page8.sted004"
            {<point name="input.a.page8.sted004" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sted004
            #add-point:BEFORE FIELD sted004 name="input.b.page8.sted004"
            {<point name="input.b.page8.sted004" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sted004
            #add-point:ON CHANGE sted004 name="input.g.page8.sted004"
            {<point name="input.g.page8.sted004" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sted005
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_steb8_d[l_ac].sted005,"0","1","","","azz-00079",1) THEN
               NEXT FIELD sted005
            END IF 
 
 
 
            #add-point:AFTER FIELD sted005 name="input.a.page8.sted005"
            {<point name="input.a.page8.sted005" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sted005
            #add-point:BEFORE FIELD sted005 name="input.b.page8.sted005"
            {<point name="input.b.page8.sted005" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sted005
            #add-point:ON CHANGE sted005 name="input.g.page8.sted005"
            {<point name="input.g.page8.sted005" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sted006
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_steb8_d[l_ac].sted006,"0","0","100","1","azz-00087",1) THEN
               NEXT FIELD sted006
            END IF 
 
 
 
            #add-point:AFTER FIELD sted006 name="input.a.page8.sted006"
            {<point name="input.a.page8.sted006" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sted006
            #add-point:BEFORE FIELD sted006 name="input.b.page8.sted006"
            {<point name="input.b.page8.sted006" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sted006
            #add-point:ON CHANGE sted006 name="input.g.page8.sted006"
            {<point name="input.g.page8.sted006" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sted007
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_steb8_d[l_ac].sted007,"0","0","100","1","azz-00087",1) THEN
               NEXT FIELD sted007
            END IF 
 
 
 
            #add-point:AFTER FIELD sted007 name="input.a.page8.sted007"
            {<point name="input.a.page8.sted007" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sted007
            #add-point:BEFORE FIELD sted007 name="input.b.page8.sted007"
            {<point name="input.b.page8.sted007" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sted007
            #add-point:ON CHANGE sted007 name="input.g.page8.sted007"
            {<point name="input.g.page8.sted007" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sted008
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_steb8_d[l_ac].sted008,"0","1","","","azz-00079",1) THEN
               NEXT FIELD sted008
            END IF 
 
 
 
            #add-point:AFTER FIELD sted008 name="input.a.page8.sted008"
            {<point name="input.a.page8.sted008" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sted008
            #add-point:BEFORE FIELD sted008 name="input.b.page8.sted008"
            {<point name="input.b.page8.sted008" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sted008
            #add-point:ON CHANGE sted008 name="input.g.page8.sted008"
            {<point name="input.g.page8.sted008" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD sted009
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_steb8_d[l_ac].sted009,"0","1","","","azz-00079",1) THEN
               NEXT FIELD sted009
            END IF 
 
 
 
            #add-point:AFTER FIELD sted009 name="input.a.page8.sted009"
            {<point name="input.a.page8.sted009" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD sted009
            #add-point:BEFORE FIELD sted009 name="input.b.page8.sted009"
            {<point name="input.b.page8.sted009" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE sted009
            #add-point:ON CHANGE sted009 name="input.g.page8.sted009"
            {<point name="input.g.page8.sted009" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stedsite
            #add-point:BEFORE FIELD stedsite name="input.b.page8.stedsite"
            {<point name="input.b.page8.stedsite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stedsite
            
            #add-point:AFTER FIELD stedsite name="input.a.page8.stedsite"
            {<point name="input.a.page8.stedsite" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stedsite
            #add-point:ON CHANGE stedsite name="input.g.page8.stedsite"
            {<point name="input.g.page8.stedsite" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stedunit
            #add-point:BEFORE FIELD stedunit name="input.b.page8.stedunit"
            {<point name="input.b.page8.stedunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stedunit
            
            #add-point:AFTER FIELD stedunit name="input.a.page8.stedunit"
            {<point name="input.a.page8.stedunit" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stedunit
            #add-point:ON CHANGE stedunit name="input.g.page8.stedunit"
            {<point name="input.g.page8.stedunit" />}
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page8.stedseq1
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stedseq1
            #add-point:ON ACTION controlp INFIELD stedseq1 name="input.c.page8.stedseq1"
            {<point name="input.c.page8.stedseq1" />}
            #END add-point
 
 
         #Ctrlp:input.c.page8.sted001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sted001
            #add-point:ON ACTION controlp INFIELD sted001 name="input.c.page8.sted001"
            {<point name="input.c.page8.sted001" />}
            #END add-point
 
 
         #Ctrlp:input.c.page8.sted002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sted002
            #add-point:ON ACTION controlp INFIELD sted002 name="input.c.page8.sted002"
            {<point name="input.c.page8.sted002" />}
            #END add-point
 
 
         #Ctrlp:input.c.page8.sted003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sted003
            #add-point:ON ACTION controlp INFIELD sted003 name="input.c.page8.sted003"
            {<point name="input.c.page8.sted003" />}
            #END add-point
 
 
         #Ctrlp:input.c.page8.sted003_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sted003_desc
            #add-point:ON ACTION controlp INFIELD sted003_desc name="input.c.page8.sted003_desc"
            {<point name="input.c.page8.sted003_desc" />}
            #END add-point
 
 
         #Ctrlp:input.c.page8.sted004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sted004
            #add-point:ON ACTION controlp INFIELD sted004 name="input.c.page8.sted004"
            {<point name="input.c.page8.sted004" />}
            #END add-point
 
 
         #Ctrlp:input.c.page8.sted005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sted005
            #add-point:ON ACTION controlp INFIELD sted005 name="input.c.page8.sted005"
            {<point name="input.c.page8.sted005" />}
            #END add-point
 
 
         #Ctrlp:input.c.page8.sted006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sted006
            #add-point:ON ACTION controlp INFIELD sted006 name="input.c.page8.sted006"
            {<point name="input.c.page8.sted006" />}
            #END add-point
 
 
         #Ctrlp:input.c.page8.sted007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sted007
            #add-point:ON ACTION controlp INFIELD sted007 name="input.c.page8.sted007"
            {<point name="input.c.page8.sted007" />}
            #END add-point
 
 
         #Ctrlp:input.c.page8.sted008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sted008
            #add-point:ON ACTION controlp INFIELD sted008 name="input.c.page8.sted008"
            {<point name="input.c.page8.sted008" />}
            #END add-point
 
 
         #Ctrlp:input.c.page8.sted009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD sted009
            #add-point:ON ACTION controlp INFIELD sted009 name="input.c.page8.sted009"
            {<point name="input.c.page8.sted009" />}
            #END add-point
 
 
         #Ctrlp:input.c.page8.stedsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stedsite
            #add-point:ON ACTION controlp INFIELD stedsite name="input.c.page8.stedsite"
            {<point name="input.c.page8.stedsite" />}
            #END add-point
 
 
         #Ctrlp:input.c.page8.stedunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stedunit
            #add-point:ON ACTION controlp INFIELD stedunit name="input.c.page8.stedunit"
            {<point name="input.c.page8.stedunit" />}
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page11_after_row name="input.body8.after_row"
            {<point name="input.body8.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_steb8_d[l_ac].* = g_steb8_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astt401_bcl12
               CLOSE astt401_bcl5
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astt401_unlock_b("sted_t","'11'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page11_after_row2 name="input.body8.after_row2"
            {<point name="input.body8.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body8.after_input"
            {<point name="input.body8.after_input"/>}
            #end add-point  
 
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_steb8_d[li_reproduce_target].* = g_steb8_d[li_reproduce].*
 
               LET g_steb8_d[li_reproduce_target].stedseq1 = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_steb8_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_steb8_d.getLength()+1
            END IF
        
      END INPUT
 
 
 

{</section>}

{<section id="astt401.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1',"))      
         CALL DIALOG.setCurrentRow("s_detail10",g_idx_group.getValue("'2',"))
         CALL DIALOG.setCurrentRow("s_detail11",g_idx_group.getValue("'3',"))
         CALL DIALOG.setCurrentRow("s_detail12",g_idx_group.getValue("'4',"))
         CALL DIALOG.setCurrentRow("s_detail2",g_idx_group.getValue("'5',"))
         CALL DIALOG.setCurrentRow("s_detail3",g_idx_group.getValue("'6',"))
         CALL DIALOG.setCurrentRow("s_detail4",g_idx_group.getValue("'7',"))
         CALL DIALOG.setCurrentRow("s_detail5",g_idx_group.getValue("'8',"))
         CALL DIALOG.setCurrentRow("s_detail6",g_idx_group.getValue("'9',"))
         CALL DIALOG.setCurrentRow("s_detail7",g_idx_group.getValue("'10',"))
         CALL DIALOG.setCurrentRow("s_detail8",g_idx_group.getValue("'12',"))
         CALL DIALOG.setCurrentRow("s_detail9",g_idx_group.getValue("'11',"))
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD steadocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD stebseq
               WHEN "s_detail10"
                  NEXT FIELD steksite
               WHEN "s_detail11"
                  NEXT FIELD stelunit
               WHEN "s_detail12"
                  NEXT FIELD stewunit
               WHEN "s_detail2"
                  NEXT FIELD stecseq
               WHEN "s_detail3"
                  NEXT FIELD stee001
               WHEN "s_detail4"
                  NEXT FIELD stegseq
               WHEN "s_detail5"
                  NEXT FIELD stehseq
               WHEN "s_detail6"
                  NEXT FIELD steiseq
               WHEN "s_detail7"
                  NEXT FIELD stejseq
               WHEN "s_detail8"
                  NEXT FIELD stedseq1
               WHEN "s_detail9"
                  NEXT FIELD stef001
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         {<point name="input.after_dialog"/>}
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         {<point name="input.cancel"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
         LET g_detail_idx_list[4] = 1
         LET g_detail_idx_list[5] = 1
         LET g_detail_idx_list[6] = 1
         LET g_detail_idx_list[7] = 1
         LET g_detail_idx_list[8] = 1
         LET g_detail_idx_list[9] = 1
         LET g_detail_idx_list[10] = 1
         LET g_detail_idx_list[11] = 1
         LET g_detail_idx_list[12] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail10",1)
         CALL g_curr_diag.setCurrentRow("s_detail11",1)
         CALL g_curr_diag.setCurrentRow("s_detail12",1)
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
         CALL g_curr_diag.setCurrentRow("s_detail4",1)
         CALL g_curr_diag.setCurrentRow("s_detail5",1)
         CALL g_curr_diag.setCurrentRow("s_detail6",1)
         CALL g_curr_diag.setCurrentRow("s_detail7",1)
         CALL g_curr_diag.setCurrentRow("s_detail8",1)
         CALL g_curr_diag.setCurrentRow("s_detail9",1)
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         {<point name="input.close"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         {<point name="input.exit"/>}
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
         LET g_detail_idx_list[4] = 1
         LET g_detail_idx_list[5] = 1
         LET g_detail_idx_list[6] = 1
         LET g_detail_idx_list[7] = 1
         LET g_detail_idx_list[8] = 1
         LET g_detail_idx_list[9] = 1
         LET g_detail_idx_list[10] = 1
         LET g_detail_idx_list[11] = 1
         LET g_detail_idx_list[12] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail10",1)
         CALL g_curr_diag.setCurrentRow("s_detail11",1)
         CALL g_curr_diag.setCurrentRow("s_detail12",1)
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
         CALL g_curr_diag.setCurrentRow("s_detail4",1)
         CALL g_curr_diag.setCurrentRow("s_detail5",1)
         CALL g_curr_diag.setCurrentRow("s_detail6",1)
         CALL g_curr_diag.setCurrentRow("s_detail7",1)
         CALL g_curr_diag.setCurrentRow("s_detail8",1)
         CALL g_curr_diag.setCurrentRow("s_detail9",1)
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION

{</section>}

{<section id="astt401.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION astt401_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   {<point name="show.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   {<point name="show.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL astt401_b_fill() #單身填充
      CALL astt401_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL astt401_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_stea_m_mask_o.* =  g_stea_m.*
   CALL astt401_stea_t_mask()
   LET g_stea_m_mask_n.* =  g_stea_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_stea_m.steasite,g_stea_m.steasite_desc,g_stea_m.steadocdt,g_stea_m.steadocno,g_stea_m.stea000, 
       g_stea_m.stea054,g_stea_m.steaunit,g_stea_m.steaunit_desc,g_stea_m.stea001,g_stea_m.stea002,g_stea_m.stea003, 
       g_stea_m.stea004,g_stea_m.stea009,g_stea_m.steastus,g_stea_m.stea010,g_stea_m.stea010_desc,g_stea_m.stea005, 
       g_stea_m.steal002,g_stea_m.steal003,g_stea_m.stea006,g_stea_m.stea006_desc,g_stea_m.stea007,g_stea_m.stea008, 
       g_stea_m.stea047,g_stea_m.stea047_desc,g_stea_m.stea048,g_stea_m.stea048_desc,g_stea_m.stea044, 
       g_stea_m.stea044_desc,g_stea_m.stea051,g_stea_m.stea051_desc,g_stea_m.stea011,g_stea_m.stea011_desc, 
       g_stea_m.stea012,g_stea_m.stea012_desc,g_stea_m.stea056,g_stea_m.stea013,g_stea_m.stea013_desc, 
       g_stea_m.stea014,g_stea_m.stea014_desc,g_stea_m.stea015,g_stea_m.stea015_desc,g_stea_m.stea016, 
       g_stea_m.stea045,g_stea_m.stea045_desc,g_stea_m.stea046,g_stea_m.stea053,g_stea_m.stea029,g_stea_m.stea030, 
       g_stea_m.stea032,g_stea_m.stea032_desc,g_stea_m.stea033,g_stea_m.stea033_desc,g_stea_m.stea034, 
       g_stea_m.stea034_desc,g_stea_m.stea035,g_stea_m.stea035_desc,g_stea_m.stea036,g_stea_m.stea036_desc, 
       g_stea_m.stea037,g_stea_m.stea037_desc,g_stea_m.stea038,g_stea_m.stea038_desc,g_stea_m.stea050, 
       g_stea_m.stea058,g_stea_m.stea059,g_stea_m.stea039,g_stea_m.stea040,g_stea_m.stea052,g_stea_m.stea028, 
       g_stea_m.next_b,g_stea_m.stea017,g_stea_m.stea021,g_stea_m.stea024,g_stea_m.stea018,g_stea_m.stea022, 
       g_stea_m.stea025,g_stea_m.stea019,g_stea_m.stea023,g_stea_m.stea026,g_stea_m.stea020,g_stea_m.stea049, 
       g_stea_m.stea057,g_stea_m.stea055,g_stea_m.stea027,g_stea_m.stea031,g_stea_m.stea042,g_stea_m.steaownid, 
       g_stea_m.steaownid_desc,g_stea_m.steaowndp,g_stea_m.steaowndp_desc,g_stea_m.steacrtid,g_stea_m.steacrtid_desc, 
       g_stea_m.steacrtdp,g_stea_m.steacrtdp_desc,g_stea_m.steacrtdt,g_stea_m.steamodid,g_stea_m.steamodid_desc, 
       g_stea_m.steamoddt,g_stea_m.steacnfid,g_stea_m.steacnfid_desc,g_stea_m.steacnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_stea_m.steastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_steb_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_steb10_d.getLength()
      #add-point:show段單身reference name="show.body10.reference"
      {<point name="show.body10.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_steb11_d.getLength()
      #add-point:show段單身reference name="show.body11.reference"
      {<point name="show.body11.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_steb12_d.getLength()
      #add-point:show段單身reference name="show.body12.reference"
      {<point name="show.body12.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_steb2_d.getLength()
      #add-point:show段單身reference name="show.body2.reference"
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_steb3_d.getLength()
      #add-point:show段單身reference name="show.body3.reference"
      {<point name="show.body3.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_steb4_d.getLength()
      #add-point:show段單身reference name="show.body4.reference"
      {<point name="show.body4.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_steb5_d.getLength()
      #add-point:show段單身reference name="show.body5.reference"
      {<point name="show.body5.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_steb6_d.getLength()
      #add-point:show段單身reference name="show.body6.reference"
      {<point name="show.body6.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_steb7_d.getLength()
      #add-point:show段單身reference name="show.body7.reference"
      {<point name="show.body7.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_steb8_d.getLength()
      #add-point:show段單身reference name="show.body8.reference"
      {<point name="show.body8.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_steb9_d.getLength()
      #add-point:show段單身reference name="show.body9.reference"
      {<point name="show.body9.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other name="show.other"
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL astt401_detail_show()
 
   #add-point:show段之後 name="show.after"
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="astt401.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION astt401_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   {<point name="detail_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   {<point name="detail_show.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="astt401.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION astt401_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   {<point name="reproduce.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE l_newno     LIKE stea_t.steadocno 
   DEFINE l_oldno     LIKE stea_t.steadocno 
 
   DEFINE l_master    RECORD LIKE stea_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE steb_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE stek_t.* #此變數樣板目前無使用
 
   DEFINE l_detail3    RECORD LIKE stel_t.* #此變數樣板目前無使用
 
   DEFINE l_detail4    RECORD LIKE stew_t.* #此變數樣板目前無使用
 
   DEFINE l_detail5    RECORD LIKE stec_t.* #此變數樣板目前無使用
 
   DEFINE l_detail6    RECORD LIKE stee_t.* #此變數樣板目前無使用
 
   DEFINE l_detail7    RECORD LIKE steg_t.* #此變數樣板目前無使用
 
   DEFINE l_detail8    RECORD LIKE steh_t.* #此變數樣板目前無使用
 
   DEFINE l_detail9    RECORD LIKE stei_t.* #此變數樣板目前無使用
 
   DEFINE l_detail10    RECORD LIKE stej_t.* #此變數樣板目前無使用
 
   DEFINE l_detail11    RECORD LIKE stef_t.* #此變數樣板目前無使用
 
 
   DEFINE l_detail12    RECORD LIKE sted_t.* #此變數樣板目前無使用
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   {<point name="reproduce.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   {<point name="reproduce.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_stea_m.steadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_steadocno_t = g_stea_m.steadocno
 
    
   LET g_stea_m.steadocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_stea_m.steaownid = g_user
      LET g_stea_m.steaowndp = g_dept
      LET g_stea_m.steacrtid = g_user
      LET g_stea_m.steacrtdp = g_dept 
      LET g_stea_m.steacrtdt = cl_get_current()
      LET g_stea_m.steamodid = g_user
      LET g_stea_m.steamoddt = cl_get_current()
      LET g_stea_m.steastus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_stea_m.steastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
   
   
   CALL astt401_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_stea_m.* TO NULL
      INITIALIZE g_steb_d TO NULL
      INITIALIZE g_steb10_d TO NULL
      INITIALIZE g_steb11_d TO NULL
      INITIALIZE g_steb12_d TO NULL
      INITIALIZE g_steb2_d TO NULL
      INITIALIZE g_steb3_d TO NULL
      INITIALIZE g_steb4_d TO NULL
      INITIALIZE g_steb5_d TO NULL
      INITIALIZE g_steb6_d TO NULL
      INITIALIZE g_steb7_d TO NULL
      INITIALIZE g_steb8_d TO NULL
      INITIALIZE g_steb9_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL astt401_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code = 9001 
      LET g_errparam.popup = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL astt401_set_act_visible()   
   CALL astt401_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_steadocno_t = g_stea_m.steadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " steaent = " ||g_enterprise|| " AND",
                      " steadocno = '", g_stea_m.steadocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL astt401_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL astt401_idx_chk()
   
   LET g_data_owner = g_stea_m.steaownid      
   LET g_data_dept  = g_stea_m.steaowndp
   
   #功能已完成,通報訊息中心
   CALL astt401_msgcentre_notify('reproduce')
 
END FUNCTION

{</section>}

{<section id="astt401.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION astt401_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   {<point name="detail_reproduce.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE steb_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE stek_t.* #此變數樣板目前無使用
 
   DEFINE l_detail3    RECORD LIKE stel_t.* #此變數樣板目前無使用
 
   DEFINE l_detail4    RECORD LIKE stew_t.* #此變數樣板目前無使用
 
   DEFINE l_detail5    RECORD LIKE stec_t.* #此變數樣板目前無使用
 
   DEFINE l_detail6    RECORD LIKE stee_t.* #此變數樣板目前無使用
 
   DEFINE l_detail7    RECORD LIKE steg_t.* #此變數樣板目前無使用
 
   DEFINE l_detail8    RECORD LIKE steh_t.* #此變數樣板目前無使用
 
   DEFINE l_detail9    RECORD LIKE stei_t.* #此變數樣板目前無使用
 
   DEFINE l_detail10    RECORD LIKE stej_t.* #此變數樣板目前無使用
 
   DEFINE l_detail11    RECORD LIKE stef_t.* #此變數樣板目前無使用
 
 
   DEFINE l_detail12    RECORD LIKE sted_t.* #此變數樣板目前無使用
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   {<point name="detail_reproduce.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   {<point name="detail_reproduce.pre_function"/>}
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE astt401_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM steb_t
    WHERE stebent = g_enterprise AND stebdocno = g_steadocno_t
 
    INTO TEMP astt401_detail
 
   #將key修正為調整後   
   UPDATE astt401_detail 
      #更新key欄位
      SET stebdocno = g_stea_m.steadocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO steb_t SELECT * FROM astt401_detail
   
   IF SQLCA.SQLCODE THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astt401_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table2.b_insert"
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stek_t 
    WHERE stekent = g_enterprise AND stekdocno = g_steadocno_t
 
    INTO TEMP astt401_detail
 
   #將key修正為調整後   
   UPDATE astt401_detail SET stekdocno = g_stea_m.steadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table2.b_update"
   {<point name="detail_reproduce.body.table2.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO stek_t SELECT * FROM astt401_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table2.m_insert"
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astt401_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table2.a_insert"
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table3.b_insert"
   {<point name="detail_reproduce.body.table3.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stel_t 
    WHERE stelent = g_enterprise AND steldocno = g_steadocno_t
 
    INTO TEMP astt401_detail
 
   #將key修正為調整後   
   UPDATE astt401_detail SET steldocno = g_stea_m.steadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table3.b_update"
   {<point name="detail_reproduce.body.table3.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO stel_t SELECT * FROM astt401_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table3.m_insert"
   {<point name="detail_reproduce.body.table3.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astt401_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table3.a_insert"
   {<point name="detail_reproduce.body.table3.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table4.b_insert"
   {<point name="detail_reproduce.body.table4.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stew_t 
    WHERE stewent = g_enterprise AND stewdocno = g_steadocno_t
 
    INTO TEMP astt401_detail
 
   #將key修正為調整後   
   UPDATE astt401_detail SET stewdocno = g_stea_m.steadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table4.b_update"
   {<point name="detail_reproduce.body.table4.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO stew_t SELECT * FROM astt401_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table4.m_insert"
   {<point name="detail_reproduce.body.table4.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astt401_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table4.a_insert"
   {<point name="detail_reproduce.body.table4.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table5.b_insert"
   {<point name="detail_reproduce.body.table5.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stec_t 
    WHERE stecent = g_enterprise AND stecdocno = g_steadocno_t
 
    INTO TEMP astt401_detail
 
   #將key修正為調整後   
   UPDATE astt401_detail SET stecdocno = g_stea_m.steadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table5.b_update"
   {<point name="detail_reproduce.body.table5.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO stec_t SELECT * FROM astt401_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table5.m_insert"
   {<point name="detail_reproduce.body.table5.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astt401_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table5.a_insert"
   {<point name="detail_reproduce.body.table5.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table6.b_insert"
   {<point name="detail_reproduce.body.table6.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stee_t 
    WHERE steeent = g_enterprise AND steedocno = g_steadocno_t
 
    INTO TEMP astt401_detail
 
   #將key修正為調整後   
   UPDATE astt401_detail SET steedocno = g_stea_m.steadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table6.b_update"
   {<point name="detail_reproduce.body.table6.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO stee_t SELECT * FROM astt401_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table6.m_insert"
   {<point name="detail_reproduce.body.table6.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astt401_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table6.a_insert"
   {<point name="detail_reproduce.body.table6.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table7.b_insert"
   {<point name="detail_reproduce.body.table7.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM steg_t 
    WHERE stegent = g_enterprise AND stegdocno = g_steadocno_t
 
    INTO TEMP astt401_detail
 
   #將key修正為調整後   
   UPDATE astt401_detail SET stegdocno = g_stea_m.steadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table7.b_update"
   {<point name="detail_reproduce.body.table7.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO steg_t SELECT * FROM astt401_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table7.m_insert"
   {<point name="detail_reproduce.body.table7.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astt401_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table7.a_insert"
   {<point name="detail_reproduce.body.table7.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table8.b_insert"
   {<point name="detail_reproduce.body.table8.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM steh_t 
    WHERE stehent = g_enterprise AND stehdocno = g_steadocno_t
 
    INTO TEMP astt401_detail
 
   #將key修正為調整後   
   UPDATE astt401_detail SET stehdocno = g_stea_m.steadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table8.b_update"
   {<point name="detail_reproduce.body.table8.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO steh_t SELECT * FROM astt401_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table8.m_insert"
   {<point name="detail_reproduce.body.table8.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astt401_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table8.a_insert"
   {<point name="detail_reproduce.body.table8.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table9.b_insert"
   {<point name="detail_reproduce.body.table9.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stei_t 
    WHERE steient = g_enterprise AND steidocno = g_steadocno_t
 
    INTO TEMP astt401_detail
 
   #將key修正為調整後   
   UPDATE astt401_detail SET steidocno = g_stea_m.steadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table9.b_update"
   {<point name="detail_reproduce.body.table9.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO stei_t SELECT * FROM astt401_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table9.m_insert"
   {<point name="detail_reproduce.body.table9.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astt401_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table9.a_insert"
   {<point name="detail_reproduce.body.table9.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table10.b_insert"
   {<point name="detail_reproduce.body.table10.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stej_t 
    WHERE stejent = g_enterprise AND stejdocno = g_steadocno_t
 
    INTO TEMP astt401_detail
 
   #將key修正為調整後   
   UPDATE astt401_detail SET stejdocno = g_stea_m.steadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table10.b_update"
   {<point name="detail_reproduce.body.table10.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO stej_t SELECT * FROM astt401_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table10.m_insert"
   {<point name="detail_reproduce.body.table10.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astt401_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table10.a_insert"
   {<point name="detail_reproduce.body.table10.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table11.b_insert"
   {<point name="detail_reproduce.body.table11.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stef_t 
    WHERE stefent = g_enterprise AND stefdocno = g_steadocno_t
 
    INTO TEMP astt401_detail
 
   #將key修正為調整後   
   UPDATE astt401_detail SET stefdocno = g_stea_m.steadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table11.b_update"
   {<point name="detail_reproduce.body.table11.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO stef_t SELECT * FROM astt401_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table11.m_insert"
   {<point name="detail_reproduce.body.table11.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astt401_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table11.a_insert"
   {<point name="detail_reproduce.body.table11.a_insert"/>}
   #end add-point
 
 
   
   #add-point:單身複製前 name="detail_reproduce.body.table12.b_insert"
   {<point name="detail_reproduce.body.table12.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM sted_t 
    WHERE stedent = g_enterprise AND steddocno = g_steadocno_t
 
    INTO TEMP astt401_detail
 
   #將key修正為調整後   
   UPDATE astt401_detail SET steddocno = g_stea_m.steadocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table12.b_update"
   {<point name="detail_reproduce.body.table12.b_update"/>}
   #end add-point    
  
   #將資料塞回原table   
   INSERT INTO sted_t SELECT * FROM astt401_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table12.m_insert"
   {<point name="detail_reproduce.body.table12.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astt401_detail
   
   LET g_data_owner = g_stea_m.steaownid      
   LET g_data_dept  = g_stea_m.steaowndp
   
   #add-point:單身複製後 name="detail_reproduce.body.table12.a_insert"
   {<point name="detail_reproduce.body.table12.a_insert"/>}
   #end add-point
 
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_steadocno_t = g_stea_m.steadocno
 
   
END FUNCTION

{</section>}

{<section id="astt401.delete" >}
#+ 資料刪除
PRIVATE FUNCTION astt401_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   {<point name="delete.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   {<point name="delete.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   {<point name="delete.pre_function"/>}
   #end add-point
   
   IF g_stea_m.steadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   LET g_master_multi_table_t.stealdocno = g_stea_m.steadocno
LET g_master_multi_table_t.steal002 = g_stea_m.steal002
LET g_master_multi_table_t.steal003 = g_stea_m.steal003
 
   
   CALL s_transaction_begin()
 
   OPEN astt401_cl USING g_enterprise,g_stea_m.steadocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN astt401_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE astt401_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE astt401_master_referesh USING g_stea_m.steadocno INTO g_stea_m.steasite,g_stea_m.steadocdt, 
       g_stea_m.steadocno,g_stea_m.stea000,g_stea_m.stea054,g_stea_m.steaunit,g_stea_m.stea001,g_stea_m.stea002, 
       g_stea_m.stea003,g_stea_m.stea004,g_stea_m.stea009,g_stea_m.steastus,g_stea_m.stea010,g_stea_m.stea005, 
       g_stea_m.stea006,g_stea_m.stea007,g_stea_m.stea008,g_stea_m.stea047,g_stea_m.stea048,g_stea_m.stea044, 
       g_stea_m.stea051,g_stea_m.stea011,g_stea_m.stea012,g_stea_m.stea056,g_stea_m.stea013,g_stea_m.stea014, 
       g_stea_m.stea015,g_stea_m.stea016,g_stea_m.stea045,g_stea_m.stea046,g_stea_m.stea053,g_stea_m.stea029, 
       g_stea_m.stea030,g_stea_m.stea032,g_stea_m.stea033,g_stea_m.stea034,g_stea_m.stea035,g_stea_m.stea036, 
       g_stea_m.stea037,g_stea_m.stea038,g_stea_m.stea050,g_stea_m.stea058,g_stea_m.stea059,g_stea_m.stea039, 
       g_stea_m.stea040,g_stea_m.stea052,g_stea_m.stea028,g_stea_m.stea017,g_stea_m.stea021,g_stea_m.stea024, 
       g_stea_m.stea018,g_stea_m.stea022,g_stea_m.stea025,g_stea_m.stea019,g_stea_m.stea023,g_stea_m.stea026, 
       g_stea_m.stea020,g_stea_m.stea049,g_stea_m.stea057,g_stea_m.stea055,g_stea_m.stea027,g_stea_m.stea031, 
       g_stea_m.stea042,g_stea_m.steaownid,g_stea_m.steaowndp,g_stea_m.steacrtid,g_stea_m.steacrtdp, 
       g_stea_m.steacrtdt,g_stea_m.steamodid,g_stea_m.steamoddt,g_stea_m.steacnfid,g_stea_m.steacnfdt, 
       g_stea_m.steasite_desc,g_stea_m.steaunit_desc,g_stea_m.stea010_desc,g_stea_m.stea006_desc,g_stea_m.stea047_desc, 
       g_stea_m.stea048_desc,g_stea_m.stea044_desc,g_stea_m.stea051_desc,g_stea_m.stea011_desc,g_stea_m.stea012_desc, 
       g_stea_m.stea013_desc,g_stea_m.stea014_desc,g_stea_m.stea015_desc,g_stea_m.stea045_desc,g_stea_m.stea032_desc, 
       g_stea_m.stea035_desc,g_stea_m.stea036_desc,g_stea_m.stea037_desc,g_stea_m.stea038_desc,g_stea_m.steaownid_desc, 
       g_stea_m.steaowndp_desc,g_stea_m.steacrtid_desc,g_stea_m.steacrtdp_desc,g_stea_m.steamodid_desc, 
       g_stea_m.steacnfid_desc
   
   
   #檢查是否允許此動作
   IF NOT astt401_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_stea_m_mask_o.* =  g_stea_m.*
   CALL astt401_stea_t_mask()
   LET g_stea_m_mask_n.* =  g_stea_m.*
   
   CALL astt401_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL astt401_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_steadocno_t = g_stea_m.steadocno
 
 
      DELETE FROM stea_t
       WHERE steaent = g_enterprise AND steadocno = g_stea_m.steadocno
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_stea_m.steadocno,":",SQLERRMESSAGE  
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM steb_t
       WHERE stebent = g_enterprise AND stebdocno = g_stea_m.steadocno
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "steb_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前 name="delete.body.b_delete2"
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM stek_t
       WHERE stekent = g_enterprise AND
             stekdocno = g_stea_m.steadocno
      #add-point:單身刪除中 name="delete.body.m_delete2"
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stek_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete2"
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete3"
      {<point name="delete.body.b_delete3" mark="Y"/>}
      #end add-point
      DELETE FROM stel_t
       WHERE stelent = g_enterprise AND
             steldocno = g_stea_m.steadocno
      #add-point:單身刪除中 name="delete.body.m_delete3"
      {<point name="delete.body.m_delete3"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stel_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete3"
      {<point name="delete.body.a_delete3"/>}
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete4"
      {<point name="delete.body.b_delete4" mark="Y"/>}
      #end add-point
      DELETE FROM stew_t
       WHERE stewent = g_enterprise AND
             stewdocno = g_stea_m.steadocno
      #add-point:單身刪除中 name="delete.body.m_delete4"
      {<point name="delete.body.m_delete4"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stew_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete4"
      {<point name="delete.body.a_delete4"/>}
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete5"
      {<point name="delete.body.b_delete5" mark="Y"/>}
      #end add-point
      DELETE FROM stec_t
       WHERE stecent = g_enterprise AND
             stecdocno = g_stea_m.steadocno
      #add-point:單身刪除中 name="delete.body.m_delete5"
      {<point name="delete.body.m_delete5"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stec_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete5"
      {<point name="delete.body.a_delete5"/>}
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete6"
      {<point name="delete.body.b_delete6" mark="Y"/>}
      #end add-point
      DELETE FROM stee_t
       WHERE steeent = g_enterprise AND
             steedocno = g_stea_m.steadocno
      #add-point:單身刪除中 name="delete.body.m_delete6"
      {<point name="delete.body.m_delete6"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stee_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete6"
      {<point name="delete.body.a_delete6"/>}
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete7"
      {<point name="delete.body.b_delete7" mark="Y"/>}
      #end add-point
      DELETE FROM steg_t
       WHERE stegent = g_enterprise AND
             stegdocno = g_stea_m.steadocno
      #add-point:單身刪除中 name="delete.body.m_delete7"
      {<point name="delete.body.m_delete7"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "steg_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete7"
      {<point name="delete.body.a_delete7"/>}
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete8"
      {<point name="delete.body.b_delete8" mark="Y"/>}
      #end add-point
      DELETE FROM steh_t
       WHERE stehent = g_enterprise AND
             stehdocno = g_stea_m.steadocno
      #add-point:單身刪除中 name="delete.body.m_delete8"
      {<point name="delete.body.m_delete8"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "steh_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete8"
      {<point name="delete.body.a_delete8"/>}
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete9"
      {<point name="delete.body.b_delete9" mark="Y"/>}
      #end add-point
      DELETE FROM stei_t
       WHERE steient = g_enterprise AND
             steidocno = g_stea_m.steadocno
      #add-point:單身刪除中 name="delete.body.m_delete9"
      {<point name="delete.body.m_delete9"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stei_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete9"
      {<point name="delete.body.a_delete9"/>}
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete10"
      {<point name="delete.body.b_delete10" mark="Y"/>}
      #end add-point
      DELETE FROM stej_t
       WHERE stejent = g_enterprise AND
             stejdocno = g_stea_m.steadocno
      #add-point:單身刪除中 name="delete.body.m_delete10"
      {<point name="delete.body.m_delete10"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stej_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete10"
      {<point name="delete.body.a_delete10"/>}
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete11"
      {<point name="delete.body.b_delete11" mark="Y"/>}
      #end add-point
      DELETE FROM stef_t
       WHERE stefent = g_enterprise AND
             stefdocno = g_stea_m.steadocno
      #add-point:單身刪除中 name="delete.body.m_delete11"
      {<point name="delete.body.m_delete11"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "sted_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete11"
      {<point name="delete.body.a_delete11"/>}
      #end add-point
 
 
 
      #add-point:單身刪除前 name="delete.body.b_delete12"
      {<point name="delete.body.b_delete12" mark="Y"/>}
      #end add-point
      DELETE FROM sted_t
       WHERE stedent = g_enterprise AND
             steddocno = g_stea_m.steadocno
      #add-point:單身刪除中 name="delete.body.m_delete12"
      {<point name="delete.body.m_delete12"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "sted_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete12"
      {<point name="delete.body.a_delete12"/>}
      #end add-point
 
 
      
      #修改歷程記錄(刪除)
      LET g_log1 = util.JSON.stringify(g_stea_m)   #(ver:78)
      IF NOT cl_log_modified_record(g_log1,'') THEN    #(ver:78)
         CLOSE astt401_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_steb_d.clear() 
      CALL g_steb10_d.clear()       
      CALL g_steb11_d.clear()       
      CALL g_steb12_d.clear()       
      CALL g_steb2_d.clear()       
      CALL g_steb3_d.clear()       
      CALL g_steb4_d.clear()       
      CALL g_steb5_d.clear()       
      CALL g_steb6_d.clear()       
      CALL g_steb7_d.clear()       
      CALL g_steb8_d.clear()       
      CALL g_steb9_d.clear()       
 
     
      CALL astt401_ui_browser_refresh()  
      #CALL astt401_ui_headershow()  
      #CALL astt401_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_enterprise
   LET l_field_keys[01] = 'stealent'
   LET l_var_keys_bak[02] = g_master_multi_table_t.stealdocno
   LET l_field_keys[02] = 'stealdocno'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'steal_t')
 
      
      #單身多語言刪除
      
      
      
      
      
      
      
      
      
      
      
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      {<point name="delete.lang.delete"/>}
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL astt401_browser_fill("")
         CALL astt401_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE astt401_cl
 
   #功能已完成,通報訊息中心
   CALL astt401_msgcentre_notify('delete')
    
END FUNCTION

{</section>}

{<section id="astt401.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION astt401_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   {<point name="b_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   {<point name="b_fill.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   {<point name="b_fill.pre_function"/>}
   #end add-point
   
   #清空第一階單身
   CALL g_steb_d.clear()
   CALL g_steb10_d.clear()
   CALL g_steb11_d.clear()
   CALL g_steb12_d.clear()
   CALL g_steb2_d.clear()
   CALL g_steb3_d.clear()
   CALL g_steb4_d.clear()
   CALL g_steb5_d.clear()
   CALL g_steb6_d.clear()
   CALL g_steb7_d.clear()
   CALL g_steb9_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF astt401_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      {<point name="b_fill.long_sql_if"/>}
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stebseq,steb001,steb002,steb018,steb019,steb003,steb004,steb005, 
             steb006,steb007,steb020,steb008,steb009,steb010,steb011,steb012,steb013,steb014,steb026, 
             steb015,steb016,steb017,steb021,steb022,steb023,steb024,steb025,stebsite,stebunit ,t1.stael003 , 
             t2.stabl003 ,t3.stabl003 FROM steb_t",   
                     " INNER JOIN stea_t ON steaent = " ||g_enterprise|| " AND steadocno = stebdocno ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
                     " ",
 
 
                                    " LEFT JOIN stael_t t1 ON t1.staelent="||g_enterprise||" AND t1.stael001=steb002 AND t1.stael002='"||g_dlang||"' ",
               " LEFT JOIN stabl_t t2 ON t2.stablent="||g_enterprise||" AND t2.stabl001=steb008 AND t2.stabl002='"||g_dlang||"' ",
               " LEFT JOIN stabl_t t3 ON t3.stablent="||g_enterprise||" AND t3.stabl001=steb009 AND t3.stabl002='"||g_dlang||"' ",
 
                     " WHERE stebent=? AND stebdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY steb_t.stebseq"
         
         #add-point:單身填充控制 name="b_fill.sql"
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astt401_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR astt401_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
   #  OPEN b_fill_cs USING g_enterprise,g_stea_m.steadocno   #(ver:78)
                                               
      FOREACH b_fill_cs USING g_enterprise,g_stea_m.steadocno INTO g_steb_d[l_ac].stebseq,g_steb_d[l_ac].steb001, 
          g_steb_d[l_ac].steb002,g_steb_d[l_ac].steb018,g_steb_d[l_ac].steb019,g_steb_d[l_ac].steb003, 
          g_steb_d[l_ac].steb004,g_steb_d[l_ac].steb005,g_steb_d[l_ac].steb006,g_steb_d[l_ac].steb007, 
          g_steb_d[l_ac].steb020,g_steb_d[l_ac].steb008,g_steb_d[l_ac].steb009,g_steb_d[l_ac].steb010, 
          g_steb_d[l_ac].steb011,g_steb_d[l_ac].steb012,g_steb_d[l_ac].steb013,g_steb_d[l_ac].steb014, 
          g_steb_d[l_ac].steb026,g_steb_d[l_ac].steb015,g_steb_d[l_ac].steb016,g_steb_d[l_ac].steb017, 
          g_steb_d[l_ac].steb021,g_steb_d[l_ac].steb022,g_steb_d[l_ac].steb023,g_steb_d[l_ac].steb024, 
          g_steb_d[l_ac].steb025,g_steb_d[l_ac].stebsite,g_steb_d[l_ac].stebunit,g_steb_d[l_ac].steb002_desc, 
          g_steb_d[l_ac].steb008_desc,g_steb_d[l_ac].steb009_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code = 9035 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
   #判斷是否填充
   IF astt401_fill_chk(2) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body2.long_sql_if"
         {<point name="b_fill.body2.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT steksite,stekunit,stek001,stekseq,stek002,stek020,stek021,stek003, 
             stek004,stek018,stek019,stek005,stek006,stek007,stek008,stek009,stek010,stek011,stek012, 
             stek013,stek014,stekacti,stek015,stek016,stek017,stek022,stek023,stek024,stek025,stek026 , 
             t4.stael003 ,t5.ooial003 ,t6.stabl003 ,t7.stabl003 FROM stek_t",   
                     " INNER JOIN  stea_t ON steaent = " ||g_enterprise|| " AND steadocno = stekdocno ",
 
                     "",
                     
                                    " LEFT JOIN stael_t t4 ON t4.staelent="||g_enterprise||" AND t4.stael001=stek002 AND t4.stael002='"||g_dlang||"' ",
               " LEFT JOIN ooial_t t5 ON t5.ooialent="||g_enterprise||" AND t5.ooial001=stek019 AND t5.ooial002='"||g_dlang||"' ",
               " LEFT JOIN stabl_t t6 ON t6.stablent="||g_enterprise||" AND t6.stabl001=stek008 AND t6.stabl002='"||g_dlang||"' ",
               " LEFT JOIN stabl_t t7 ON t7.stablent="||g_enterprise||" AND t7.stabl001=stek009 AND t7.stabl002='"||g_dlang||"' ",
 
                     " WHERE stekent=? AND stekdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body2.fill_sql"
         {<point name="b_fill.body2.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stek_t.stekseq"
         
         #add-point:單身填充控制 name="b_fill.sql2"
         {<point name="b_fill.sql2"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astt401_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR astt401_pb2
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs2 USING g_enterprise,g_stea_m.steadocno   #(ver:78)
                                               
      FOREACH b_fill_cs2 USING g_enterprise,g_stea_m.steadocno INTO g_steb10_d[l_ac].steksite,g_steb10_d[l_ac].stekunit, 
          g_steb10_d[l_ac].stek001,g_steb10_d[l_ac].stekseq,g_steb10_d[l_ac].stek002,g_steb10_d[l_ac].stek020, 
          g_steb10_d[l_ac].stek021,g_steb10_d[l_ac].stek003,g_steb10_d[l_ac].stek004,g_steb10_d[l_ac].stek018, 
          g_steb10_d[l_ac].stek019,g_steb10_d[l_ac].stek005,g_steb10_d[l_ac].stek006,g_steb10_d[l_ac].stek007, 
          g_steb10_d[l_ac].stek008,g_steb10_d[l_ac].stek009,g_steb10_d[l_ac].stek010,g_steb10_d[l_ac].stek011, 
          g_steb10_d[l_ac].stek012,g_steb10_d[l_ac].stek013,g_steb10_d[l_ac].stek014,g_steb10_d[l_ac].stekacti, 
          g_steb10_d[l_ac].stek015,g_steb10_d[l_ac].stek016,g_steb10_d[l_ac].stek017,g_steb10_d[l_ac].stek022, 
          g_steb10_d[l_ac].stek023,g_steb10_d[l_ac].stek024,g_steb10_d[l_ac].stek025,g_steb10_d[l_ac].stek026, 
          g_steb10_d[l_ac].stek002_desc,g_steb10_d[l_ac].stek019_desc,g_steb10_d[l_ac].stek008_desc, 
          g_steb10_d[l_ac].stek009_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill2.fill"
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF astt401_fill_chk(3) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body3.long_sql_if"
         {<point name="b_fill.body3.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stelunit,stelsite,stel001,stelacti,stelseq,stel003,stel002,stel004, 
             stel005,stel006,stel007,stel008,stel009 ,t8.stael003 FROM stel_t",   
                     " INNER JOIN  stea_t ON steaent = " ||g_enterprise|| " AND steadocno = steldocno ",
 
                     "",
                     
                                    " LEFT JOIN stael_t t8 ON t8.staelent="||g_enterprise||" AND t8.stael001=stel002 AND t8.stael002='"||g_dlang||"' ",
 
                     " WHERE stelent=? AND steldocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body3.fill_sql"
         {<point name="b_fill.body3.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table3) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stel_t.stelseq"
         
         #add-point:單身填充控制 name="b_fill.sql3"
         {<point name="b_fill.sql3"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astt401_pb3 FROM g_sql
         DECLARE b_fill_cs3 CURSOR FOR astt401_pb3
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs3 USING g_enterprise,g_stea_m.steadocno   #(ver:78)
                                               
      FOREACH b_fill_cs3 USING g_enterprise,g_stea_m.steadocno INTO g_steb11_d[l_ac].stelunit,g_steb11_d[l_ac].stelsite, 
          g_steb11_d[l_ac].stel001,g_steb11_d[l_ac].stelacti,g_steb11_d[l_ac].stelseq,g_steb11_d[l_ac].stel003, 
          g_steb11_d[l_ac].stel002,g_steb11_d[l_ac].stel004,g_steb11_d[l_ac].stel005,g_steb11_d[l_ac].stel006, 
          g_steb11_d[l_ac].stel007,g_steb11_d[l_ac].stel008,g_steb11_d[l_ac].stel009,g_steb11_d[l_ac].stel002_desc  
            #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill3.fill"
         {<point name="b_fill3.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF astt401_fill_chk(4) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body4.long_sql_if"
         {<point name="b_fill.body4.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stewunit,stewsite,stewseq,stew001,stew002,stew003,stew004,stew005, 
             stew006,stew007,stew008,stewacti  FROM stew_t",   
                     " INNER JOIN  stea_t ON steaent = " ||g_enterprise|| " AND steadocno = stewdocno ",
 
                     "",
                     
                     
                     " WHERE stewent=? AND stewdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body4.fill_sql"
         {<point name="b_fill.body4.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table4) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table4 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stew_t.stewseq"
         
         #add-point:單身填充控制 name="b_fill.sql4"
         {<point name="b_fill.sql4"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astt401_pb4 FROM g_sql
         DECLARE b_fill_cs4 CURSOR FOR astt401_pb4
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs4 USING g_enterprise,g_stea_m.steadocno   #(ver:78)
                                               
      FOREACH b_fill_cs4 USING g_enterprise,g_stea_m.steadocno INTO g_steb12_d[l_ac].stewunit,g_steb12_d[l_ac].stewsite, 
          g_steb12_d[l_ac].stewseq,g_steb12_d[l_ac].stew001,g_steb12_d[l_ac].stew002,g_steb12_d[l_ac].stew003, 
          g_steb12_d[l_ac].stew004,g_steb12_d[l_ac].stew005,g_steb12_d[l_ac].stew006,g_steb12_d[l_ac].stew007, 
          g_steb12_d[l_ac].stew008,g_steb12_d[l_ac].stewacti   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill4.fill"
         {<point name="b_fill4.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF astt401_fill_chk(5) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body5.long_sql_if"
         {<point name="b_fill.body5.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stecseq,stec001,stecacti,stec024,stec002,stec003,stec025,stec004, 
             stec005,stec006,stec007,stec008,stec009,stec026,stec027,stec010,stec011,stec012,stec013, 
             stec014,stec015,stec016,stec017,stec018,stec019,stec020,stec021,stec022,stec023,stecsite, 
             stecunit ,t9.rtaxl003 ,t10.oocql004 ,t11.stael003 ,t12.stabl003 ,t13.stabl003 FROM stec_t", 
                
                     " INNER JOIN  stea_t ON steaent = " ||g_enterprise|| " AND steadocno = stecdocno ",
 
                     "",
                     " LEFT JOIN sted_t ON stecent = stedent AND stecdocno = steddocno AND stecseq = stedseq ",
                                    " LEFT JOIN rtaxl_t t9 ON t9.rtaxlent="||g_enterprise||" AND t9.rtaxl001=stec004 AND t9.rtaxl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t10 ON t10.oocqlent="||g_enterprise||" AND t10.oocql001='2002' AND t10.oocql002=stec005 AND t10.oocql003='"||g_dlang||"' ",
               " LEFT JOIN stael_t t11 ON t11.staelent="||g_enterprise||" AND t11.stael001=stec009 AND t11.stael002='"||g_dlang||"' ",
               " LEFT JOIN stabl_t t12 ON t12.stablent="||g_enterprise||" AND t12.stabl001=stec015 AND t12.stabl002='"||g_dlang||"' ",
               " LEFT JOIN stabl_t t13 ON t13.stablent="||g_enterprise||" AND t13.stabl001=stec016 AND t13.stabl002='"||g_dlang||"' ",
 
                     " WHERE stecent=? AND stecdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body5.fill_sql"
         {<point name="b_fill.body5.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table5) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table5 CLIPPED
         END IF
         
         #子單身的WC
            IF NOT cl_null(g_wc2_table12) THEN 
      LET g_sql = g_sql CLIPPED," AND ", g_wc2_table12 CLIPPED
   END IF 
 
         
         LET g_sql = g_sql, " ORDER BY stec_t.stecseq"
         
         #add-point:單身填充控制 name="b_fill.sql5"
         {<point name="b_fill.sql5"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astt401_pb5 FROM g_sql
         DECLARE b_fill_cs5 CURSOR FOR astt401_pb5
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs5 USING g_enterprise,g_stea_m.steadocno   #(ver:78)
                                               
      FOREACH b_fill_cs5 USING g_enterprise,g_stea_m.steadocno INTO g_steb2_d[l_ac].stecseq,g_steb2_d[l_ac].stec001, 
          g_steb2_d[l_ac].stecacti,g_steb2_d[l_ac].stec024,g_steb2_d[l_ac].stec002,g_steb2_d[l_ac].stec003, 
          g_steb2_d[l_ac].stec025,g_steb2_d[l_ac].stec004,g_steb2_d[l_ac].stec005,g_steb2_d[l_ac].stec006, 
          g_steb2_d[l_ac].stec007,g_steb2_d[l_ac].stec008,g_steb2_d[l_ac].stec009,g_steb2_d[l_ac].stec026, 
          g_steb2_d[l_ac].stec027,g_steb2_d[l_ac].stec010,g_steb2_d[l_ac].stec011,g_steb2_d[l_ac].stec012, 
          g_steb2_d[l_ac].stec013,g_steb2_d[l_ac].stec014,g_steb2_d[l_ac].stec015,g_steb2_d[l_ac].stec016, 
          g_steb2_d[l_ac].stec017,g_steb2_d[l_ac].stec018,g_steb2_d[l_ac].stec019,g_steb2_d[l_ac].stec020, 
          g_steb2_d[l_ac].stec021,g_steb2_d[l_ac].stec022,g_steb2_d[l_ac].stec023,g_steb2_d[l_ac].stecsite, 
          g_steb2_d[l_ac].stecunit,g_steb2_d[l_ac].stec004_desc,g_steb2_d[l_ac].stec005_desc,g_steb2_d[l_ac].stec009_desc, 
          g_steb2_d[l_ac].stec015_desc,g_steb2_d[l_ac].stec016_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill5.fill"
         {<point name="b_fill5.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF astt401_fill_chk(6) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body6.long_sql_if"
         {<point name="b_fill.body6.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stee001,stee002,steeseq,stee003,stee004,stee005,stee006,stee012, 
             stee007,stee008,stee009,stee010,stee011,steesite,steeunit ,t14.stael003 FROM stee_t",   
              
                     " INNER JOIN  stea_t ON steaent = " ||g_enterprise|| " AND steadocno = steedocno ",
 
                     "",
                     
                                    " LEFT JOIN stael_t t14 ON t14.staelent="||g_enterprise||" AND t14.stael001=stee003 AND t14.stael002='"||g_dlang||"' ",
 
                     " WHERE steeent=? AND steedocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body6.fill_sql"
         {<point name="b_fill.body6.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table6) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table6 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stee_t.steeseq,stee_t.stee002"
         
         #add-point:單身填充控制 name="b_fill.sql6"
         {<point name="b_fill.sql6"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astt401_pb6 FROM g_sql
         DECLARE b_fill_cs6 CURSOR FOR astt401_pb6
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs6 USING g_enterprise,g_stea_m.steadocno   #(ver:78)
                                               
      FOREACH b_fill_cs6 USING g_enterprise,g_stea_m.steadocno INTO g_steb3_d[l_ac].stee001,g_steb3_d[l_ac].stee002, 
          g_steb3_d[l_ac].steeseq,g_steb3_d[l_ac].stee003,g_steb3_d[l_ac].stee004,g_steb3_d[l_ac].stee005, 
          g_steb3_d[l_ac].stee006,g_steb3_d[l_ac].stee012,g_steb3_d[l_ac].stee007,g_steb3_d[l_ac].stee008, 
          g_steb3_d[l_ac].stee009,g_steb3_d[l_ac].stee010,g_steb3_d[l_ac].stee011,g_steb3_d[l_ac].steesite, 
          g_steb3_d[l_ac].steeunit,g_steb3_d[l_ac].stee003_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill6.fill"
         {<point name="b_fill6.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF astt401_fill_chk(7) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body7.long_sql_if"
         {<point name="b_fill.body7.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stegseq,steg001,steg002,steg003,steg004,steg005,stegacti,stegsite, 
             stegunit  FROM steg_t",   
                     " INNER JOIN  stea_t ON steaent = " ||g_enterprise|| " AND steadocno = stegdocno ",
 
                     "",
                     
                     
                     " WHERE stegent=? AND stegdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body7.fill_sql"
         {<point name="b_fill.body7.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table7) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table7 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY steg_t.stegseq"
         
         #add-point:單身填充控制 name="b_fill.sql7"
         {<point name="b_fill.sql7"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astt401_pb7 FROM g_sql
         DECLARE b_fill_cs7 CURSOR FOR astt401_pb7
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs7 USING g_enterprise,g_stea_m.steadocno   #(ver:78)
                                               
      FOREACH b_fill_cs7 USING g_enterprise,g_stea_m.steadocno INTO g_steb4_d[l_ac].stegseq,g_steb4_d[l_ac].steg001, 
          g_steb4_d[l_ac].steg002,g_steb4_d[l_ac].steg003,g_steb4_d[l_ac].steg004,g_steb4_d[l_ac].steg005, 
          g_steb4_d[l_ac].stegacti,g_steb4_d[l_ac].stegsite,g_steb4_d[l_ac].stegunit   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill7.fill"
         {<point name="b_fill7.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF astt401_fill_chk(8) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body8.long_sql_if"
         {<point name="b_fill.body8.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stehseq,steh001,steh002,steh003,stehacti,stehsite,stehunit  FROM steh_t", 
                
                     " INNER JOIN  stea_t ON steaent = " ||g_enterprise|| " AND steadocno = stehdocno ",
 
                     "",
                     
                     
                     " WHERE stehent=? AND stehdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body8.fill_sql"
         {<point name="b_fill.body8.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table8) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table8 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY steh_t.stehseq"
         
         #add-point:單身填充控制 name="b_fill.sql8"
         {<point name="b_fill.sql8"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astt401_pb8 FROM g_sql
         DECLARE b_fill_cs8 CURSOR FOR astt401_pb8
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs8 USING g_enterprise,g_stea_m.steadocno   #(ver:78)
                                               
      FOREACH b_fill_cs8 USING g_enterprise,g_stea_m.steadocno INTO g_steb5_d[l_ac].stehseq,g_steb5_d[l_ac].steh001, 
          g_steb5_d[l_ac].steh002,g_steb5_d[l_ac].steh003,g_steb5_d[l_ac].stehacti,g_steb5_d[l_ac].stehsite, 
          g_steb5_d[l_ac].stehunit   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill8.fill"
         {<point name="b_fill8.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF astt401_fill_chk(9) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body9.long_sql_if"
         {<point name="b_fill.body9.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT steiseq,stei001,stei002,stei003,stei005,stei006,stei004,stei010, 
             stei007,stei008,stei009,steiacti,stei011,stei012,steisite,steiunit ,t15.stael003 ,t16.oocql004 FROM stei_t", 
                
                     " INNER JOIN  stea_t ON steaent = " ||g_enterprise|| " AND steadocno = steidocno ",
 
                     "",
                     
                                    " LEFT JOIN stael_t t15 ON t15.staelent="||g_enterprise||" AND t15.stael001=stei003 AND t15.stael002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t16 ON t16.oocqlent="||g_enterprise||" AND t16.oocql001='2132' AND t16.oocql002=stei010 AND t16.oocql003='"||g_dlang||"' ",
 
                     " WHERE steient=? AND steidocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body9.fill_sql"
         {<point name="b_fill.body9.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table9) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table9 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stei_t.steiseq"
         
         #add-point:單身填充控制 name="b_fill.sql9"
         {<point name="b_fill.sql9"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astt401_pb9 FROM g_sql
         DECLARE b_fill_cs9 CURSOR FOR astt401_pb9
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs9 USING g_enterprise,g_stea_m.steadocno   #(ver:78)
                                               
      FOREACH b_fill_cs9 USING g_enterprise,g_stea_m.steadocno INTO g_steb6_d[l_ac].steiseq,g_steb6_d[l_ac].stei001, 
          g_steb6_d[l_ac].stei002,g_steb6_d[l_ac].stei003,g_steb6_d[l_ac].stei005,g_steb6_d[l_ac].stei006, 
          g_steb6_d[l_ac].stei004,g_steb6_d[l_ac].stei010,g_steb6_d[l_ac].stei007,g_steb6_d[l_ac].stei008, 
          g_steb6_d[l_ac].stei009,g_steb6_d[l_ac].steiacti,g_steb6_d[l_ac].stei011,g_steb6_d[l_ac].stei012, 
          g_steb6_d[l_ac].steisite,g_steb6_d[l_ac].steiunit,g_steb6_d[l_ac].stei003_desc,g_steb6_d[l_ac].stei010_desc  
            #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill9.fill"
         {<point name="b_fill9.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF astt401_fill_chk(10) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body10.long_sql_if"
         {<point name="b_fill.body10.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stejseq,stej001,stej002,stej003,stej004,stej005,stej006,stejsite, 
             stejunit  FROM stej_t",   
                     " INNER JOIN  stea_t ON steaent = " ||g_enterprise|| " AND steadocno = stejdocno ",
 
                     "",
                     
                     
                     " WHERE stejent=? AND stejdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body10.fill_sql"
         {<point name="b_fill.body10.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table10) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table10 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stej_t.stejseq"
         
         #add-point:單身填充控制 name="b_fill.sql10"
         {<point name="b_fill.sql10"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astt401_pb10 FROM g_sql
         DECLARE b_fill_cs10 CURSOR FOR astt401_pb10
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs10 USING g_enterprise,g_stea_m.steadocno   #(ver:78)
                                               
      FOREACH b_fill_cs10 USING g_enterprise,g_stea_m.steadocno INTO g_steb7_d[l_ac].stejseq,g_steb7_d[l_ac].stej001, 
          g_steb7_d[l_ac].stej002,g_steb7_d[l_ac].stej003,g_steb7_d[l_ac].stej004,g_steb7_d[l_ac].stej005, 
          g_steb7_d[l_ac].stej006,g_steb7_d[l_ac].stejsite,g_steb7_d[l_ac].stejunit   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill10.fill"
         {<point name="b_fill10.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF astt401_fill_chk(11) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body11.long_sql_if"
         {<point name="b_fill.body11.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stef001,stefseq,stef002,stef003,stef004,stef005,stef006,stef007, 
             stef010,stef008,stef011,stef009,stefsite,stefunit  FROM stef_t",   
                     " INNER JOIN  stea_t ON steaent = " ||g_enterprise|| " AND steadocno = stefdocno ",
 
                     "",
                     
                     
                     " WHERE stefent=? AND stefdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body11.fill_sql"
         {<point name="b_fill.body11.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table11) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table11 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stef_t.stefseq,stef_t.stef002,stef_t.stef003"
         
         #add-point:單身填充控制 name="b_fill.sql11"
         {<point name="b_fill.sql11"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astt401_pb11 FROM g_sql
         DECLARE b_fill_cs11 CURSOR FOR astt401_pb11
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs11 USING g_enterprise,g_stea_m.steadocno   #(ver:78)
                                               
      FOREACH b_fill_cs11 USING g_enterprise,g_stea_m.steadocno INTO g_steb9_d[l_ac].stef001,g_steb9_d[l_ac].stefseq, 
          g_steb9_d[l_ac].stef002,g_steb9_d[l_ac].stef003,g_steb9_d[l_ac].stef004,g_steb9_d[l_ac].stef005, 
          g_steb9_d[l_ac].stef006,g_steb9_d[l_ac].stef007,g_steb9_d[l_ac].stef010,g_steb9_d[l_ac].stef008, 
          g_steb9_d[l_ac].stef011,g_steb9_d[l_ac].stef009,g_steb9_d[l_ac].stefsite,g_steb9_d[l_ac].stefunit  
            #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill11.fill"
         {<point name="b_fill11.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_steb_d.deleteElement(g_steb_d.getLength())
   CALL g_steb10_d.deleteElement(g_steb10_d.getLength())
   CALL g_steb11_d.deleteElement(g_steb11_d.getLength())
   CALL g_steb12_d.deleteElement(g_steb12_d.getLength())
   CALL g_steb2_d.deleteElement(g_steb2_d.getLength())
   CALL g_steb3_d.deleteElement(g_steb3_d.getLength())
   CALL g_steb4_d.deleteElement(g_steb4_d.getLength())
   CALL g_steb5_d.deleteElement(g_steb5_d.getLength())
   CALL g_steb6_d.deleteElement(g_steb6_d.getLength())
   CALL g_steb7_d.deleteElement(g_steb7_d.getLength())
   CALL g_steb9_d.deleteElement(g_steb9_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE astt401_pb
   FREE astt401_pb2
 
   FREE astt401_pb3
 
   FREE astt401_pb4
 
   FREE astt401_pb5
 
   FREE astt401_pb6
 
   FREE astt401_pb7
 
   FREE astt401_pb8
 
   FREE astt401_pb9
 
   FREE astt401_pb10
 
   FREE astt401_pb11
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_steb_d.getLength()
      LET g_steb_d_mask_o[l_ac].* =  g_steb_d[l_ac].*
      CALL astt401_steb_t_mask()
      LET g_steb_d_mask_n[l_ac].* =  g_steb_d[l_ac].*
   END FOR
   
   LET g_steb10_d_mask_o.* =  g_steb10_d.*
   FOR l_ac = 1 TO g_steb10_d.getLength()
      LET g_steb10_d_mask_o[l_ac].* =  g_steb10_d[l_ac].*
      CALL astt401_stek_t_mask()
      LET g_steb10_d_mask_n[l_ac].* =  g_steb10_d[l_ac].*
   END FOR
   LET g_steb11_d_mask_o.* =  g_steb11_d.*
   FOR l_ac = 1 TO g_steb11_d.getLength()
      LET g_steb11_d_mask_o[l_ac].* =  g_steb11_d[l_ac].*
      CALL astt401_stel_t_mask()
      LET g_steb11_d_mask_n[l_ac].* =  g_steb11_d[l_ac].*
   END FOR
   LET g_steb12_d_mask_o.* =  g_steb12_d.*
   FOR l_ac = 1 TO g_steb12_d.getLength()
      LET g_steb12_d_mask_o[l_ac].* =  g_steb12_d[l_ac].*
      CALL astt401_stew_t_mask()
      LET g_steb12_d_mask_n[l_ac].* =  g_steb12_d[l_ac].*
   END FOR
   LET g_steb2_d_mask_o.* =  g_steb2_d.*
   FOR l_ac = 1 TO g_steb2_d.getLength()
      LET g_steb2_d_mask_o[l_ac].* =  g_steb2_d[l_ac].*
      CALL astt401_stec_t_mask()
      LET g_steb2_d_mask_n[l_ac].* =  g_steb2_d[l_ac].*
   END FOR
   LET g_steb3_d_mask_o.* =  g_steb3_d.*
   FOR l_ac = 1 TO g_steb3_d.getLength()
      LET g_steb3_d_mask_o[l_ac].* =  g_steb3_d[l_ac].*
      CALL astt401_stee_t_mask()
      LET g_steb3_d_mask_n[l_ac].* =  g_steb3_d[l_ac].*
   END FOR
   LET g_steb4_d_mask_o.* =  g_steb4_d.*
   FOR l_ac = 1 TO g_steb4_d.getLength()
      LET g_steb4_d_mask_o[l_ac].* =  g_steb4_d[l_ac].*
      CALL astt401_steg_t_mask()
      LET g_steb4_d_mask_n[l_ac].* =  g_steb4_d[l_ac].*
   END FOR
   LET g_steb5_d_mask_o.* =  g_steb5_d.*
   FOR l_ac = 1 TO g_steb5_d.getLength()
      LET g_steb5_d_mask_o[l_ac].* =  g_steb5_d[l_ac].*
      CALL astt401_steh_t_mask()
      LET g_steb5_d_mask_n[l_ac].* =  g_steb5_d[l_ac].*
   END FOR
   LET g_steb6_d_mask_o.* =  g_steb6_d.*
   FOR l_ac = 1 TO g_steb6_d.getLength()
      LET g_steb6_d_mask_o[l_ac].* =  g_steb6_d[l_ac].*
      CALL astt401_stei_t_mask()
      LET g_steb6_d_mask_n[l_ac].* =  g_steb6_d[l_ac].*
   END FOR
   LET g_steb7_d_mask_o.* =  g_steb7_d.*
   FOR l_ac = 1 TO g_steb7_d.getLength()
      LET g_steb7_d_mask_o[l_ac].* =  g_steb7_d[l_ac].*
      CALL astt401_stej_t_mask()
      LET g_steb7_d_mask_n[l_ac].* =  g_steb7_d[l_ac].*
   END FOR
   LET g_steb8_d_mask_o.* =  g_steb8_d.*
   FOR l_ac = 1 TO g_steb8_d.getLength()
      LET g_steb8_d_mask_o[l_ac].* =  g_steb8_d[l_ac].*
      CALL astt401_sted_t_mask()
      LET g_steb8_d_mask_n[l_ac].* =  g_steb8_d[l_ac].*
   END FOR
   LET g_steb9_d_mask_o.* =  g_steb9_d.*
   FOR l_ac = 1 TO g_steb9_d.getLength()
      LET g_steb9_d_mask_o[l_ac].* =  g_steb9_d[l_ac].*
      CALL astt401_stef_t_mask()
      LET g_steb9_d_mask_n[l_ac].* =  g_steb9_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION

{</section>}

{<section id="astt401.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION astt401_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   {<point name="delete_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   {<point name="delete_b.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   {<point name="delete_b.pre_function"/>}
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM steb_t
       WHERE stebent = g_enterprise AND
         stebdocno = ps_keys_bak[1] AND stebseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_steb_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete2"
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM stek_t
       WHERE stekent = g_enterprise AND
             stekdocno = ps_keys_bak[1] AND stekseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete2"
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stek_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_steb10_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete2"
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete3"
      {<point name="delete_b.b_delete3" mark="Y"/>}
      #end add-point    
      DELETE FROM stel_t
       WHERE stelent = g_enterprise AND
             steldocno = ps_keys_bak[1] AND stelseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete3"
      {<point name="delete_b.m_delete3"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stel_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_steb11_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete3"
      {<point name="delete_b.a_delete3"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete4"
      {<point name="delete_b.b_delete4" mark="Y"/>}
      #end add-point    
      DELETE FROM stew_t
       WHERE stewent = g_enterprise AND
             stewdocno = ps_keys_bak[1] AND stewseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete4"
      {<point name="delete_b.m_delete4"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stew_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_steb12_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete4"
      {<point name="delete_b.a_delete4"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete5"
      {<point name="delete_b.b_delete5" mark="Y"/>}
      #end add-point    
      DELETE FROM stec_t
       WHERE stecent = g_enterprise AND
             stecdocno = ps_keys_bak[1] AND stecseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete5"
      {<point name="delete_b.m_delete5"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stec_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'5'" THEN 
         CALL g_steb2_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete5"
      {<point name="delete_b.a_delete5"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'6',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete6"
      {<point name="delete_b.b_delete6" mark="Y"/>}
      #end add-point    
      DELETE FROM stee_t
       WHERE steeent = g_enterprise AND
             steedocno = ps_keys_bak[1] AND steeseq = ps_keys_bak[2] AND stee002 = ps_keys_bak[3]
      #add-point:delete_b段刪除中 name="delete_b.m_delete6"
      {<point name="delete_b.m_delete6"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stee_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'6'" THEN 
         CALL g_steb3_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete6"
      {<point name="delete_b.a_delete6"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'7',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete7"
      {<point name="delete_b.b_delete7" mark="Y"/>}
      #end add-point    
      DELETE FROM steg_t
       WHERE stegent = g_enterprise AND
             stegdocno = ps_keys_bak[1] AND stegseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete7"
      {<point name="delete_b.m_delete7"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "steg_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'7'" THEN 
         CALL g_steb4_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete7"
      {<point name="delete_b.a_delete7"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'8',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete8"
      {<point name="delete_b.b_delete8" mark="Y"/>}
      #end add-point    
      DELETE FROM steh_t
       WHERE stehent = g_enterprise AND
             stehdocno = ps_keys_bak[1] AND stehseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete8"
      {<point name="delete_b.m_delete8"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "steh_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'8'" THEN 
         CALL g_steb5_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete8"
      {<point name="delete_b.a_delete8"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'9',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete9"
      {<point name="delete_b.b_delete9" mark="Y"/>}
      #end add-point    
      DELETE FROM stei_t
       WHERE steient = g_enterprise AND
             steidocno = ps_keys_bak[1] AND steiseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete9"
      {<point name="delete_b.m_delete9"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stei_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'9'" THEN 
         CALL g_steb6_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete9"
      {<point name="delete_b.a_delete9"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'10',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete10"
      {<point name="delete_b.b_delete10" mark="Y"/>}
      #end add-point    
      DELETE FROM stej_t
       WHERE stejent = g_enterprise AND
             stejdocno = ps_keys_bak[1] AND stejseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete10"
      {<point name="delete_b.m_delete10"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stej_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'10'" THEN 
         CALL g_steb7_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete10"
      {<point name="delete_b.a_delete10"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'12',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete11"
      {<point name="delete_b.b_delete11" mark="Y"/>}
      #end add-point    
      DELETE FROM stef_t
       WHERE stefent = g_enterprise AND
             stefdocno = ps_keys_bak[1] AND stefseq = ps_keys_bak[2] AND stef002 = ps_keys_bak[3] AND stef003 = ps_keys_bak[4]
      #add-point:delete_b段刪除中 name="delete_b.m_delete11"
      {<point name="delete_b.m_delete11"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stef_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'12'" THEN 
         CALL g_steb9_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete11"
      {<point name="delete_b.a_delete11"/>}
      #end add-point    
   END IF
 
 
   
   LET ls_group = "'11',"
   #判斷是否是同一群組的table2
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete12"
      {<point name="delete_b.b_delete12" mark="Y"/>}
      #end add-point    
      DELETE FROM sted_t
       WHERE stedent = g_enterprise AND
             steddocno = ps_keys_bak[1] AND stedseq = ps_keys_bak[2] AND stedseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中 name="delete_b.m_delete12"
      {<point name="delete_b.m_delete12"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "sted_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
    
      LET li_idx = g_detail_idx2
      IF ps_page <> "'11'" THEN 
         CALL g_steb8_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete12"
      {<point name="delete_b.a_delete12"/>}
      #end add-point    
   END IF
 
 
   
   #add-point:delete_b段other name="delete_b.other"
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION

{</section>}

{<section id="astt401.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION astt401_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   {<point name="insert_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   {<point name="insert_b.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   {<point name="insert_b.pre_function"/>}
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO steb_t
                  (stebent,
                   stebdocno,
                   stebseq
                   ,steb001,steb002,steb018,steb019,steb003,steb004,steb005,steb006,steb007,steb020,steb008,steb009,steb010,steb011,steb012,steb013,steb014,steb026,steb015,steb016,steb017,steb021,steb022,steb023,steb024,steb025,stebsite,stebunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_steb_d[g_detail_idx].steb001,g_steb_d[g_detail_idx].steb002,g_steb_d[g_detail_idx].steb018, 
                       g_steb_d[g_detail_idx].steb019,g_steb_d[g_detail_idx].steb003,g_steb_d[g_detail_idx].steb004, 
                       g_steb_d[g_detail_idx].steb005,g_steb_d[g_detail_idx].steb006,g_steb_d[g_detail_idx].steb007, 
                       g_steb_d[g_detail_idx].steb020,g_steb_d[g_detail_idx].steb008,g_steb_d[g_detail_idx].steb009, 
                       g_steb_d[g_detail_idx].steb010,g_steb_d[g_detail_idx].steb011,g_steb_d[g_detail_idx].steb012, 
                       g_steb_d[g_detail_idx].steb013,g_steb_d[g_detail_idx].steb014,g_steb_d[g_detail_idx].steb026, 
                       g_steb_d[g_detail_idx].steb015,g_steb_d[g_detail_idx].steb016,g_steb_d[g_detail_idx].steb017, 
                       g_steb_d[g_detail_idx].steb021,g_steb_d[g_detail_idx].steb022,g_steb_d[g_detail_idx].steb023, 
                       g_steb_d[g_detail_idx].steb024,g_steb_d[g_detail_idx].steb025,g_steb_d[g_detail_idx].stebsite, 
                       g_steb_d[g_detail_idx].stebunit)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "steb_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_steb_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert2"
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO stek_t
                  (stekent,
                   stekdocno,
                   stekseq
                   ,steksite,stekunit,stek001,stek002,stek020,stek021,stek003,stek004,stek018,stek019,stek005,stek006,stek007,stek008,stek009,stek010,stek011,stek012,stek013,stek014,stekacti,stek015,stek016,stek017,stek022,stek023,stek024,stek025,stek026) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_steb10_d[g_detail_idx].steksite,g_steb10_d[g_detail_idx].stekunit,g_steb10_d[g_detail_idx].stek001, 
                       g_steb10_d[g_detail_idx].stek002,g_steb10_d[g_detail_idx].stek020,g_steb10_d[g_detail_idx].stek021, 
                       g_steb10_d[g_detail_idx].stek003,g_steb10_d[g_detail_idx].stek004,g_steb10_d[g_detail_idx].stek018, 
                       g_steb10_d[g_detail_idx].stek019,g_steb10_d[g_detail_idx].stek005,g_steb10_d[g_detail_idx].stek006, 
                       g_steb10_d[g_detail_idx].stek007,g_steb10_d[g_detail_idx].stek008,g_steb10_d[g_detail_idx].stek009, 
                       g_steb10_d[g_detail_idx].stek010,g_steb10_d[g_detail_idx].stek011,g_steb10_d[g_detail_idx].stek012, 
                       g_steb10_d[g_detail_idx].stek013,g_steb10_d[g_detail_idx].stek014,g_steb10_d[g_detail_idx].stekacti, 
                       g_steb10_d[g_detail_idx].stek015,g_steb10_d[g_detail_idx].stek016,g_steb10_d[g_detail_idx].stek017, 
                       g_steb10_d[g_detail_idx].stek022,g_steb10_d[g_detail_idx].stek023,g_steb10_d[g_detail_idx].stek024, 
                       g_steb10_d[g_detail_idx].stek025,g_steb10_d[g_detail_idx].stek026)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert2"
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stek_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_steb10_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert2"
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert3"
      {<point name="insert_b.before_insert3" mark="Y"/>}
      #end add-point 
      INSERT INTO stel_t
                  (stelent,
                   steldocno,
                   stelseq
                   ,stelunit,stelsite,stel001,stelacti,stel003,stel002,stel004,stel005,stel006,stel007,stel008,stel009) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_steb11_d[g_detail_idx].stelunit,g_steb11_d[g_detail_idx].stelsite,g_steb11_d[g_detail_idx].stel001, 
                       g_steb11_d[g_detail_idx].stelacti,g_steb11_d[g_detail_idx].stel003,g_steb11_d[g_detail_idx].stel002, 
                       g_steb11_d[g_detail_idx].stel004,g_steb11_d[g_detail_idx].stel005,g_steb11_d[g_detail_idx].stel006, 
                       g_steb11_d[g_detail_idx].stel007,g_steb11_d[g_detail_idx].stel008,g_steb11_d[g_detail_idx].stel009) 

      #add-point:insert_b段資料新增中 name="insert_b.m_insert3"
      {<point name="insert_b.m_insert3"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stel_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_steb11_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert3"
      {<point name="insert_b.after_insert3"/>}
      #end add-point
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert4"
      {<point name="insert_b.before_insert4" mark="Y"/>}
      #end add-point 
      INSERT INTO stew_t
                  (stewent,
                   stewdocno,
                   stewseq
                   ,stewunit,stewsite,stew001,stew002,stew003,stew004,stew005,stew006,stew007,stew008,stewacti) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_steb12_d[g_detail_idx].stewunit,g_steb12_d[g_detail_idx].stewsite,g_steb12_d[g_detail_idx].stew001, 
                       g_steb12_d[g_detail_idx].stew002,g_steb12_d[g_detail_idx].stew003,g_steb12_d[g_detail_idx].stew004, 
                       g_steb12_d[g_detail_idx].stew005,g_steb12_d[g_detail_idx].stew006,g_steb12_d[g_detail_idx].stew007, 
                       g_steb12_d[g_detail_idx].stew008,g_steb12_d[g_detail_idx].stewacti)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert4"
      {<point name="insert_b.m_insert4"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stew_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_steb12_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert4"
      {<point name="insert_b.after_insert4"/>}
      #end add-point
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert5"
      {<point name="insert_b.before_insert5" mark="Y"/>}
      #end add-point 
      INSERT INTO stec_t
                  (stecent,
                   stecdocno,
                   stecseq
                   ,stec001,stecacti,stec024,stec002,stec003,stec025,stec004,stec005,stec006,stec007,stec008,stec009,stec026,stec027,stec010,stec011,stec012,stec013,stec014,stec015,stec016,stec017,stec018,stec019,stec020,stec021,stec022,stec023,stecsite,stecunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_steb2_d[g_detail_idx].stec001,g_steb2_d[g_detail_idx].stecacti,g_steb2_d[g_detail_idx].stec024, 
                       g_steb2_d[g_detail_idx].stec002,g_steb2_d[g_detail_idx].stec003,g_steb2_d[g_detail_idx].stec025, 
                       g_steb2_d[g_detail_idx].stec004,g_steb2_d[g_detail_idx].stec005,g_steb2_d[g_detail_idx].stec006, 
                       g_steb2_d[g_detail_idx].stec007,g_steb2_d[g_detail_idx].stec008,g_steb2_d[g_detail_idx].stec009, 
                       g_steb2_d[g_detail_idx].stec026,g_steb2_d[g_detail_idx].stec027,g_steb2_d[g_detail_idx].stec010, 
                       g_steb2_d[g_detail_idx].stec011,g_steb2_d[g_detail_idx].stec012,g_steb2_d[g_detail_idx].stec013, 
                       g_steb2_d[g_detail_idx].stec014,g_steb2_d[g_detail_idx].stec015,g_steb2_d[g_detail_idx].stec016, 
                       g_steb2_d[g_detail_idx].stec017,g_steb2_d[g_detail_idx].stec018,g_steb2_d[g_detail_idx].stec019, 
                       g_steb2_d[g_detail_idx].stec020,g_steb2_d[g_detail_idx].stec021,g_steb2_d[g_detail_idx].stec022, 
                       g_steb2_d[g_detail_idx].stec023,g_steb2_d[g_detail_idx].stecsite,g_steb2_d[g_detail_idx].stecunit) 

      #add-point:insert_b段資料新增中 name="insert_b.m_insert5"
      {<point name="insert_b.m_insert5"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stec_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'5'" THEN 
         CALL g_steb2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert5"
      {<point name="insert_b.after_insert5"/>}
      #end add-point
   END IF
 
   LET ls_group = "'6',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert6"
      {<point name="insert_b.before_insert6" mark="Y"/>}
      #end add-point 
      INSERT INTO stee_t
                  (steeent,
                   steedocno,
                   steeseq,stee002
                   ,stee001,stee003,stee004,stee005,stee006,stee012,stee007,stee008,stee009,stee010,stee011,steesite,steeunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_steb3_d[g_detail_idx].stee001,g_steb3_d[g_detail_idx].stee003,g_steb3_d[g_detail_idx].stee004, 
                       g_steb3_d[g_detail_idx].stee005,g_steb3_d[g_detail_idx].stee006,g_steb3_d[g_detail_idx].stee012, 
                       g_steb3_d[g_detail_idx].stee007,g_steb3_d[g_detail_idx].stee008,g_steb3_d[g_detail_idx].stee009, 
                       g_steb3_d[g_detail_idx].stee010,g_steb3_d[g_detail_idx].stee011,g_steb3_d[g_detail_idx].steesite, 
                       g_steb3_d[g_detail_idx].steeunit)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert6"
      {<point name="insert_b.m_insert6"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stee_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'6'" THEN 
         CALL g_steb3_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert6"
      {<point name="insert_b.after_insert6"/>}
      #end add-point
   END IF
 
   LET ls_group = "'7',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert7"
      {<point name="insert_b.before_insert7" mark="Y"/>}
      #end add-point 
      INSERT INTO steg_t
                  (stegent,
                   stegdocno,
                   stegseq
                   ,steg001,steg002,steg003,steg004,steg005,stegacti,stegsite,stegunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_steb4_d[g_detail_idx].steg001,g_steb4_d[g_detail_idx].steg002,g_steb4_d[g_detail_idx].steg003, 
                       g_steb4_d[g_detail_idx].steg004,g_steb4_d[g_detail_idx].steg005,g_steb4_d[g_detail_idx].stegacti, 
                       g_steb4_d[g_detail_idx].stegsite,g_steb4_d[g_detail_idx].stegunit)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert7"
      {<point name="insert_b.m_insert7"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "steg_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'7'" THEN 
         CALL g_steb4_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert7"
      {<point name="insert_b.after_insert7"/>}
      #end add-point
   END IF
 
   LET ls_group = "'8',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert8"
      {<point name="insert_b.before_insert8" mark="Y"/>}
      #end add-point 
      INSERT INTO steh_t
                  (stehent,
                   stehdocno,
                   stehseq
                   ,steh001,steh002,steh003,stehacti,stehsite,stehunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_steb5_d[g_detail_idx].steh001,g_steb5_d[g_detail_idx].steh002,g_steb5_d[g_detail_idx].steh003, 
                       g_steb5_d[g_detail_idx].stehacti,g_steb5_d[g_detail_idx].stehsite,g_steb5_d[g_detail_idx].stehunit) 

      #add-point:insert_b段資料新增中 name="insert_b.m_insert8"
      {<point name="insert_b.m_insert8"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "steh_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'8'" THEN 
         CALL g_steb5_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert8"
      {<point name="insert_b.after_insert8"/>}
      #end add-point
   END IF
 
   LET ls_group = "'9',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert9"
      {<point name="insert_b.before_insert9" mark="Y"/>}
      #end add-point 
      INSERT INTO stei_t
                  (steient,
                   steidocno,
                   steiseq
                   ,stei001,stei002,stei003,stei005,stei006,stei004,stei010,stei007,stei008,stei009,steiacti,stei011,stei012,steisite,steiunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_steb6_d[g_detail_idx].stei001,g_steb6_d[g_detail_idx].stei002,g_steb6_d[g_detail_idx].stei003, 
                       g_steb6_d[g_detail_idx].stei005,g_steb6_d[g_detail_idx].stei006,g_steb6_d[g_detail_idx].stei004, 
                       g_steb6_d[g_detail_idx].stei010,g_steb6_d[g_detail_idx].stei007,g_steb6_d[g_detail_idx].stei008, 
                       g_steb6_d[g_detail_idx].stei009,g_steb6_d[g_detail_idx].steiacti,g_steb6_d[g_detail_idx].stei011, 
                       g_steb6_d[g_detail_idx].stei012,g_steb6_d[g_detail_idx].steisite,g_steb6_d[g_detail_idx].steiunit) 

      #add-point:insert_b段資料新增中 name="insert_b.m_insert9"
      {<point name="insert_b.m_insert9"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stei_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'9'" THEN 
         CALL g_steb6_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert9"
      {<point name="insert_b.after_insert9"/>}
      #end add-point
   END IF
 
   LET ls_group = "'10',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert10"
      {<point name="insert_b.before_insert10" mark="Y"/>}
      #end add-point 
      INSERT INTO stej_t
                  (stejent,
                   stejdocno,
                   stejseq
                   ,stej001,stej002,stej003,stej004,stej005,stej006,stejsite,stejunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_steb7_d[g_detail_idx].stej001,g_steb7_d[g_detail_idx].stej002,g_steb7_d[g_detail_idx].stej003, 
                       g_steb7_d[g_detail_idx].stej004,g_steb7_d[g_detail_idx].stej005,g_steb7_d[g_detail_idx].stej006, 
                       g_steb7_d[g_detail_idx].stejsite,g_steb7_d[g_detail_idx].stejunit)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert10"
      {<point name="insert_b.m_insert10"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stej_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'10'" THEN 
         CALL g_steb7_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert10"
      {<point name="insert_b.after_insert10"/>}
      #end add-point
   END IF
 
   LET ls_group = "'12',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert11"
      {<point name="insert_b.before_insert11" mark="Y"/>}
      #end add-point 
      INSERT INTO stef_t
                  (stefent,
                   stefdocno,
                   stefseq,stef002,stef003
                   ,stef001,stef004,stef005,stef006,stef007,stef010,stef008,stef011,stef009,stefsite,stefunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
                   ,g_steb9_d[g_detail_idx].stef001,g_steb9_d[g_detail_idx].stef004,g_steb9_d[g_detail_idx].stef005, 
                       g_steb9_d[g_detail_idx].stef006,g_steb9_d[g_detail_idx].stef007,g_steb9_d[g_detail_idx].stef010, 
                       g_steb9_d[g_detail_idx].stef008,g_steb9_d[g_detail_idx].stef011,g_steb9_d[g_detail_idx].stef009, 
                       g_steb9_d[g_detail_idx].stefsite,g_steb9_d[g_detail_idx].stefunit)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert11"
      {<point name="insert_b.m_insert11"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stef_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'12'" THEN 
         CALL g_steb9_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert11"
      {<point name="insert_b.after_insert11"/>}
      #end add-point
   END IF
 
 
   
   LET ls_group = "'11',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert12"
      {<point name="insert_b.before_insert12" mark="Y"/>}
      #end add-point 
      INSERT INTO sted_t
                  (stedent,
                   steddocno,stedseq,
                   stedseq1
                   ,sted001,sted002,sted003,sted004,sted005,sted006,sted007,sted008,sted009,stedsite,stedunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_steb8_d[g_detail_idx2].sted001,g_steb8_d[g_detail_idx2].sted002,g_steb8_d[g_detail_idx2].sted003, 
                       g_steb8_d[g_detail_idx2].sted004,g_steb8_d[g_detail_idx2].sted005,g_steb8_d[g_detail_idx2].sted006, 
                       g_steb8_d[g_detail_idx2].sted007,g_steb8_d[g_detail_idx2].sted008,g_steb8_d[g_detail_idx2].sted009, 
                       g_steb8_d[g_detail_idx2].stedsite,g_steb8_d[g_detail_idx2].stedunit)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert12"
      {<point name="insert_b.m_insert12"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "sted_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx2
      IF ps_page <> "'11'" THEN 
         CALL g_steb8_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert12"
      {<point name="insert_b.after_insert12"/>}
      #end add-point
   END IF
 
 
   
   #add-point:insert_b段other name="insert_b.other"
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION

{</section>}

{<section id="astt401.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION astt401_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   {<point name="update_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   {<point name="update_b.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   {<point name="update_b.pre_function"/>}
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "steb_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL astt401_steb_t_mask_restore('restore_mask_o')
               
      UPDATE steb_t 
         SET (stebdocno,
              stebseq
              ,steb001,steb002,steb018,steb019,steb003,steb004,steb005,steb006,steb007,steb020,steb008,steb009,steb010,steb011,steb012,steb013,steb014,steb026,steb015,steb016,steb017,steb021,steb022,steb023,steb024,steb025,stebsite,stebunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_steb_d[g_detail_idx].steb001,g_steb_d[g_detail_idx].steb002,g_steb_d[g_detail_idx].steb018, 
                  g_steb_d[g_detail_idx].steb019,g_steb_d[g_detail_idx].steb003,g_steb_d[g_detail_idx].steb004, 
                  g_steb_d[g_detail_idx].steb005,g_steb_d[g_detail_idx].steb006,g_steb_d[g_detail_idx].steb007, 
                  g_steb_d[g_detail_idx].steb020,g_steb_d[g_detail_idx].steb008,g_steb_d[g_detail_idx].steb009, 
                  g_steb_d[g_detail_idx].steb010,g_steb_d[g_detail_idx].steb011,g_steb_d[g_detail_idx].steb012, 
                  g_steb_d[g_detail_idx].steb013,g_steb_d[g_detail_idx].steb014,g_steb_d[g_detail_idx].steb026, 
                  g_steb_d[g_detail_idx].steb015,g_steb_d[g_detail_idx].steb016,g_steb_d[g_detail_idx].steb017, 
                  g_steb_d[g_detail_idx].steb021,g_steb_d[g_detail_idx].steb022,g_steb_d[g_detail_idx].steb023, 
                  g_steb_d[g_detail_idx].steb024,g_steb_d[g_detail_idx].steb025,g_steb_d[g_detail_idx].stebsite, 
                  g_steb_d[g_detail_idx].stebunit) 
         WHERE stebent = g_enterprise AND stebdocno = ps_keys_bak[1] AND stebseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "steb_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "steb_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astt401_steb_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stek_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update2"
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL astt401_stek_t_mask_restore('restore_mask_o')
               
      UPDATE stek_t 
         SET (stekdocno,
              stekseq
              ,steksite,stekunit,stek001,stek002,stek020,stek021,stek003,stek004,stek018,stek019,stek005,stek006,stek007,stek008,stek009,stek010,stek011,stek012,stek013,stek014,stekacti,stek015,stek016,stek017,stek022,stek023,stek024,stek025,stek026) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_steb10_d[g_detail_idx].steksite,g_steb10_d[g_detail_idx].stekunit,g_steb10_d[g_detail_idx].stek001, 
                  g_steb10_d[g_detail_idx].stek002,g_steb10_d[g_detail_idx].stek020,g_steb10_d[g_detail_idx].stek021, 
                  g_steb10_d[g_detail_idx].stek003,g_steb10_d[g_detail_idx].stek004,g_steb10_d[g_detail_idx].stek018, 
                  g_steb10_d[g_detail_idx].stek019,g_steb10_d[g_detail_idx].stek005,g_steb10_d[g_detail_idx].stek006, 
                  g_steb10_d[g_detail_idx].stek007,g_steb10_d[g_detail_idx].stek008,g_steb10_d[g_detail_idx].stek009, 
                  g_steb10_d[g_detail_idx].stek010,g_steb10_d[g_detail_idx].stek011,g_steb10_d[g_detail_idx].stek012, 
                  g_steb10_d[g_detail_idx].stek013,g_steb10_d[g_detail_idx].stek014,g_steb10_d[g_detail_idx].stekacti, 
                  g_steb10_d[g_detail_idx].stek015,g_steb10_d[g_detail_idx].stek016,g_steb10_d[g_detail_idx].stek017, 
                  g_steb10_d[g_detail_idx].stek022,g_steb10_d[g_detail_idx].stek023,g_steb10_d[g_detail_idx].stek024, 
                  g_steb10_d[g_detail_idx].stek025,g_steb10_d[g_detail_idx].stek026) 
         WHERE stekent = g_enterprise AND stekdocno = ps_keys_bak[1] AND stekseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update2"
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stek_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stek_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astt401_stek_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update2"
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stel_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update3"
      {<point name="update_b.before_update3" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL astt401_stel_t_mask_restore('restore_mask_o')
               
      UPDATE stel_t 
         SET (steldocno,
              stelseq
              ,stelunit,stelsite,stel001,stelacti,stel003,stel002,stel004,stel005,stel006,stel007,stel008,stel009) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_steb11_d[g_detail_idx].stelunit,g_steb11_d[g_detail_idx].stelsite,g_steb11_d[g_detail_idx].stel001, 
                  g_steb11_d[g_detail_idx].stelacti,g_steb11_d[g_detail_idx].stel003,g_steb11_d[g_detail_idx].stel002, 
                  g_steb11_d[g_detail_idx].stel004,g_steb11_d[g_detail_idx].stel005,g_steb11_d[g_detail_idx].stel006, 
                  g_steb11_d[g_detail_idx].stel007,g_steb11_d[g_detail_idx].stel008,g_steb11_d[g_detail_idx].stel009)  

         WHERE stelent = g_enterprise AND steldocno = ps_keys_bak[1] AND stelseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update3"
      {<point name="update_b.m_update3"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stel_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stel_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astt401_stel_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update3"
      {<point name="update_b.after_update3"/>}
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stew_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update4"
      {<point name="update_b.before_update4" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL astt401_stew_t_mask_restore('restore_mask_o')
               
      UPDATE stew_t 
         SET (stewdocno,
              stewseq
              ,stewunit,stewsite,stew001,stew002,stew003,stew004,stew005,stew006,stew007,stew008,stewacti) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_steb12_d[g_detail_idx].stewunit,g_steb12_d[g_detail_idx].stewsite,g_steb12_d[g_detail_idx].stew001, 
                  g_steb12_d[g_detail_idx].stew002,g_steb12_d[g_detail_idx].stew003,g_steb12_d[g_detail_idx].stew004, 
                  g_steb12_d[g_detail_idx].stew005,g_steb12_d[g_detail_idx].stew006,g_steb12_d[g_detail_idx].stew007, 
                  g_steb12_d[g_detail_idx].stew008,g_steb12_d[g_detail_idx].stewacti) 
         WHERE stewent = g_enterprise AND stewdocno = ps_keys_bak[1] AND stewseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update4"
      {<point name="update_b.m_update4"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stew_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stew_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astt401_stew_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update4"
      {<point name="update_b.after_update4"/>}
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stec_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update5"
      {<point name="update_b.before_update5" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL astt401_stec_t_mask_restore('restore_mask_o')
               
      UPDATE stec_t 
         SET (stecdocno,
              stecseq
              ,stec001,stecacti,stec024,stec002,stec003,stec025,stec004,stec005,stec006,stec007,stec008,stec009,stec026,stec027,stec010,stec011,stec012,stec013,stec014,stec015,stec016,stec017,stec018,stec019,stec020,stec021,stec022,stec023,stecsite,stecunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_steb2_d[g_detail_idx].stec001,g_steb2_d[g_detail_idx].stecacti,g_steb2_d[g_detail_idx].stec024, 
                  g_steb2_d[g_detail_idx].stec002,g_steb2_d[g_detail_idx].stec003,g_steb2_d[g_detail_idx].stec025, 
                  g_steb2_d[g_detail_idx].stec004,g_steb2_d[g_detail_idx].stec005,g_steb2_d[g_detail_idx].stec006, 
                  g_steb2_d[g_detail_idx].stec007,g_steb2_d[g_detail_idx].stec008,g_steb2_d[g_detail_idx].stec009, 
                  g_steb2_d[g_detail_idx].stec026,g_steb2_d[g_detail_idx].stec027,g_steb2_d[g_detail_idx].stec010, 
                  g_steb2_d[g_detail_idx].stec011,g_steb2_d[g_detail_idx].stec012,g_steb2_d[g_detail_idx].stec013, 
                  g_steb2_d[g_detail_idx].stec014,g_steb2_d[g_detail_idx].stec015,g_steb2_d[g_detail_idx].stec016, 
                  g_steb2_d[g_detail_idx].stec017,g_steb2_d[g_detail_idx].stec018,g_steb2_d[g_detail_idx].stec019, 
                  g_steb2_d[g_detail_idx].stec020,g_steb2_d[g_detail_idx].stec021,g_steb2_d[g_detail_idx].stec022, 
                  g_steb2_d[g_detail_idx].stec023,g_steb2_d[g_detail_idx].stecsite,g_steb2_d[g_detail_idx].stecunit)  

         WHERE stecent = g_enterprise AND stecdocno = ps_keys_bak[1] AND stecseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update5"
      {<point name="update_b.m_update5"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stec_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stec_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astt401_stec_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update5"
      {<point name="update_b.after_update5"/>}
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'6',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stee_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update6"
      {<point name="update_b.before_update6" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL astt401_stee_t_mask_restore('restore_mask_o')
               
      UPDATE stee_t 
         SET (steedocno,
              steeseq,stee002
              ,stee001,stee003,stee004,stee005,stee006,stee012,stee007,stee008,stee009,stee010,stee011,steesite,steeunit) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_steb3_d[g_detail_idx].stee001,g_steb3_d[g_detail_idx].stee003,g_steb3_d[g_detail_idx].stee004, 
                  g_steb3_d[g_detail_idx].stee005,g_steb3_d[g_detail_idx].stee006,g_steb3_d[g_detail_idx].stee012, 
                  g_steb3_d[g_detail_idx].stee007,g_steb3_d[g_detail_idx].stee008,g_steb3_d[g_detail_idx].stee009, 
                  g_steb3_d[g_detail_idx].stee010,g_steb3_d[g_detail_idx].stee011,g_steb3_d[g_detail_idx].steesite, 
                  g_steb3_d[g_detail_idx].steeunit) 
         WHERE steeent = g_enterprise AND steedocno = ps_keys_bak[1] AND steeseq = ps_keys_bak[2] AND stee002 = ps_keys_bak[3]
      #add-point:update_b段修改中 name="update_b.m_update6"
      {<point name="update_b.m_update6"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stee_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stee_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astt401_stee_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update6"
      {<point name="update_b.after_update6"/>}
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'7',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "steg_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update7"
      {<point name="update_b.before_update7" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL astt401_steg_t_mask_restore('restore_mask_o')
               
      UPDATE steg_t 
         SET (stegdocno,
              stegseq
              ,steg001,steg002,steg003,steg004,steg005,stegacti,stegsite,stegunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_steb4_d[g_detail_idx].steg001,g_steb4_d[g_detail_idx].steg002,g_steb4_d[g_detail_idx].steg003, 
                  g_steb4_d[g_detail_idx].steg004,g_steb4_d[g_detail_idx].steg005,g_steb4_d[g_detail_idx].stegacti, 
                  g_steb4_d[g_detail_idx].stegsite,g_steb4_d[g_detail_idx].stegunit) 
         WHERE stegent = g_enterprise AND stegdocno = ps_keys_bak[1] AND stegseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update7"
      {<point name="update_b.m_update7"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "steg_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "steg_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astt401_steg_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update7"
      {<point name="update_b.after_update7"/>}
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'8',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "steh_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update8"
      {<point name="update_b.before_update8" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL astt401_steh_t_mask_restore('restore_mask_o')
               
      UPDATE steh_t 
         SET (stehdocno,
              stehseq
              ,steh001,steh002,steh003,stehacti,stehsite,stehunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_steb5_d[g_detail_idx].steh001,g_steb5_d[g_detail_idx].steh002,g_steb5_d[g_detail_idx].steh003, 
                  g_steb5_d[g_detail_idx].stehacti,g_steb5_d[g_detail_idx].stehsite,g_steb5_d[g_detail_idx].stehunit)  

         WHERE stehent = g_enterprise AND stehdocno = ps_keys_bak[1] AND stehseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update8"
      {<point name="update_b.m_update8"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "steh_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "steh_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astt401_steh_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update8"
      {<point name="update_b.after_update8"/>}
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'9',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stei_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update9"
      {<point name="update_b.before_update9" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL astt401_stei_t_mask_restore('restore_mask_o')
               
      UPDATE stei_t 
         SET (steidocno,
              steiseq
              ,stei001,stei002,stei003,stei005,stei006,stei004,stei010,stei007,stei008,stei009,steiacti,stei011,stei012,steisite,steiunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_steb6_d[g_detail_idx].stei001,g_steb6_d[g_detail_idx].stei002,g_steb6_d[g_detail_idx].stei003, 
                  g_steb6_d[g_detail_idx].stei005,g_steb6_d[g_detail_idx].stei006,g_steb6_d[g_detail_idx].stei004, 
                  g_steb6_d[g_detail_idx].stei010,g_steb6_d[g_detail_idx].stei007,g_steb6_d[g_detail_idx].stei008, 
                  g_steb6_d[g_detail_idx].stei009,g_steb6_d[g_detail_idx].steiacti,g_steb6_d[g_detail_idx].stei011, 
                  g_steb6_d[g_detail_idx].stei012,g_steb6_d[g_detail_idx].steisite,g_steb6_d[g_detail_idx].steiunit)  

         WHERE steient = g_enterprise AND steidocno = ps_keys_bak[1] AND steiseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update9"
      {<point name="update_b.m_update9"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stei_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stei_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astt401_stei_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update9"
      {<point name="update_b.after_update9"/>}
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'10',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stej_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update10"
      {<point name="update_b.before_update10" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL astt401_stej_t_mask_restore('restore_mask_o')
               
      UPDATE stej_t 
         SET (stejdocno,
              stejseq
              ,stej001,stej002,stej003,stej004,stej005,stej006,stejsite,stejunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_steb7_d[g_detail_idx].stej001,g_steb7_d[g_detail_idx].stej002,g_steb7_d[g_detail_idx].stej003, 
                  g_steb7_d[g_detail_idx].stej004,g_steb7_d[g_detail_idx].stej005,g_steb7_d[g_detail_idx].stej006, 
                  g_steb7_d[g_detail_idx].stejsite,g_steb7_d[g_detail_idx].stejunit) 
         WHERE stejent = g_enterprise AND stejdocno = ps_keys_bak[1] AND stejseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update10"
      {<point name="update_b.m_update10"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stej_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stej_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astt401_stej_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update10"
      {<point name="update_b.after_update10"/>}
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'12',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stef_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update11"
      {<point name="update_b.before_update11" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL astt401_stef_t_mask_restore('restore_mask_o')
               
      UPDATE stef_t 
         SET (stefdocno,
              stefseq,stef002,stef003
              ,stef001,stef004,stef005,stef006,stef007,stef010,stef008,stef011,stef009,stefsite,stefunit) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
              ,g_steb9_d[g_detail_idx].stef001,g_steb9_d[g_detail_idx].stef004,g_steb9_d[g_detail_idx].stef005, 
                  g_steb9_d[g_detail_idx].stef006,g_steb9_d[g_detail_idx].stef007,g_steb9_d[g_detail_idx].stef010, 
                  g_steb9_d[g_detail_idx].stef008,g_steb9_d[g_detail_idx].stef011,g_steb9_d[g_detail_idx].stef009, 
                  g_steb9_d[g_detail_idx].stefsite,g_steb9_d[g_detail_idx].stefunit) 
         WHERE stefent = g_enterprise AND stefdocno = ps_keys_bak[1] AND stefseq = ps_keys_bak[2] AND stef002 = ps_keys_bak[3] AND stef003 = ps_keys_bak[4]
      #add-point:update_b段修改中 name="update_b.m_update11"
      {<point name="update_b.m_update11"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stef_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stef_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astt401_stef_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update11"
      {<point name="update_b.after_update11"/>}
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
 
   
   LET ls_group = "'11',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "sted_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update12"
      {<point name="update_b.before_update12" mark="Y"/>}
      #end add-point
      
      #將遮罩欄位還原
      CALL astt401_sted_t_mask_restore('restore_mask_o')
               
      UPDATE sted_t 
         SET (steddocno,stedseq,
              stedseq1
              ,sted001,sted002,sted003,sted004,sted005,sted006,sted007,sted008,sted009,stedsite,stedunit) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_steb8_d[g_detail_idx2].sted001,g_steb8_d[g_detail_idx2].sted002,g_steb8_d[g_detail_idx2].sted003, 
                  g_steb8_d[g_detail_idx2].sted004,g_steb8_d[g_detail_idx2].sted005,g_steb8_d[g_detail_idx2].sted006, 
                  g_steb8_d[g_detail_idx2].sted007,g_steb8_d[g_detail_idx2].sted008,g_steb8_d[g_detail_idx2].sted009, 
                  g_steb8_d[g_detail_idx2].stedsite,g_steb8_d[g_detail_idx2].stedunit) 
         WHERE stedent = g_enterprise AND steddocno = ps_keys_bak[1] AND stedseq = ps_keys_bak[2] AND stedseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中 name="update_b.m_update12"
      {<point name="update_b.m_update12"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "sted_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "sted_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astt401_sted_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update12"
      {<point name="update_b.after_update12"/>}
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
 
   
   #add-point:update_b段other name="update_b.other"
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="astt401.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION astt401_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   {<point name="key_update_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   {<point name="key_update_b.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   {<point name="key_update_b.pre_function"/>}
   #end add-point
   
   #如果是上層單身則進行update
   IF ps_table = 'stec_t' THEN
      #add-point:update_b段修改前 name="key_update_b.before_update12"
      {<point name="key_update_b.before_update12" mark="Y"/>}
      #end add-point
      
      UPDATE sted_t 
         SET (steddocno,stedseq) 
              = 
             (g_stea_m.steadocno,g_steb2_d[g_detail_idx].stecseq) 
         WHERE stedent = g_enterprise AND
               steddocno = ps_keys_bak[1] AND stedseq = ps_keys_bak[2]
 
      #add-point:update_b段修改中 name="key_update_b.m_update12"
      {<point name="key_update_b.m_update12"/>}
      #end add-point
              
      CASE
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "sted_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
            #若有多語言table資料一同更新
            
      END CASE
      
      #add-point:update_b段修改後 name="key_update_b.after_update12"
      {<point name="key_update_b.after_update12"/>}
      #end add-point
   END IF
 
 
   
END FUNCTION

{</section>}

{<section id="astt401.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION astt401_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   {<point name="key_delete_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   {<point name="key_delete_b.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   {<point name="key_delete_b.pre_function"/>}
   #end add-point
   
   #如果是上層單身則進行delete
   IF ps_table = 'stec_t' THEN
      #add-point:delete_b段修改前 name="key_delete_b.before_delete12"
      {<point name="key_delete_b.before_delete12" mark="Y"/>}
      #end add-point
      
      DELETE FROM sted_t 
            WHERE stedent = g_enterprise AND
                  steddocno = ps_keys_bak[1] AND stedseq = ps_keys_bak[2]
 
      #add-point:delete_b段修改中 name="key_delete_b.m_delete12"
      {<point name="key_delete_b.m_delete12"/>}
      #end add-point
              
      CASE
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "sted_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            RETURN FALSE
         OTHERWISE
      END CASE
 
       
 
      #add-point:delete_b段修改後 name="key_delete_b.after_delete12"
      {<point name="key_delete_b.after_delete12"/>}
      #end add-point
   END IF
 
 
   
   RETURN TRUE
   
END FUNCTION

{</section>}

{<section id="astt401.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION astt401_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   {<point name="lock_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   {<point name="lock_b.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   {<point name="lock_b.pre_function"/>}
   #end add-point
    
   #先刷新資料
   #CALL astt401_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "steb_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN astt401_bcl USING g_enterprise,
                                       g_stea_m.steadocno,g_steb_d[g_detail_idx].stebseq     
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astt401_bcl:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "stek_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astt401_bcl2 USING g_enterprise,
                                             g_stea_m.steadocno,g_steb10_d[g_detail_idx].stekseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astt401_bcl2:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "stel_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astt401_bcl3 USING g_enterprise,
                                             g_stea_m.steadocno,g_steb11_d[g_detail_idx].stelseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astt401_bcl3:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'4',"
   #僅鎖定自身table
   LET ls_group = "stew_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astt401_bcl4 USING g_enterprise,
                                             g_stea_m.steadocno,g_steb12_d[g_detail_idx].stewseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astt401_bcl4:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'5',"
   #僅鎖定自身table
   LET ls_group = "stec_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astt401_bcl5 USING g_enterprise,
                                             g_stea_m.steadocno,g_steb2_d[g_detail_idx].stecseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astt401_bcl5:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'6',"
   #僅鎖定自身table
   LET ls_group = "stee_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astt401_bcl6 USING g_enterprise,
                                             g_stea_m.steadocno,g_steb3_d[g_detail_idx].steeseq,g_steb3_d[g_detail_idx].stee002 

      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astt401_bcl6:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'7',"
   #僅鎖定自身table
   LET ls_group = "steg_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astt401_bcl7 USING g_enterprise,
                                             g_stea_m.steadocno,g_steb4_d[g_detail_idx].stegseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astt401_bcl7:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'8',"
   #僅鎖定自身table
   LET ls_group = "steh_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astt401_bcl8 USING g_enterprise,
                                             g_stea_m.steadocno,g_steb5_d[g_detail_idx].stehseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astt401_bcl8:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'9',"
   #僅鎖定自身table
   LET ls_group = "stei_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astt401_bcl9 USING g_enterprise,
                                             g_stea_m.steadocno,g_steb6_d[g_detail_idx].steiseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astt401_bcl9:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'10',"
   #僅鎖定自身table
   LET ls_group = "stej_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astt401_bcl10 USING g_enterprise,
                                             g_stea_m.steadocno,g_steb7_d[g_detail_idx].stejseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astt401_bcl10:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'12',"
   #僅鎖定自身table
   LET ls_group = "stef_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astt401_bcl11 USING g_enterprise,
                                             g_stea_m.steadocno,g_steb9_d[g_detail_idx].stefseq,g_steb9_d[g_detail_idx].stef002, 
                                                 g_steb9_d[g_detail_idx].stef003
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astt401_bcl11:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
   #鎖定整組table
   #LET ls_group = "'11',"
   #僅鎖定自身table
   LET ls_group = "sted_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astt401_bcl12 USING g_enterprise,
                                             g_stea_m.steadocno,g_steb2_d[g_detail_idx].stecseq,
                                             g_steb8_d[g_detail_idx2].stedseq1
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astt401_bcl12:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
   #add-point:lock_b段other name="lock_b.other"
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION

{</section>}

{<section id="astt401.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION astt401_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   {<point name="unlock_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   {<point name="unlock_b.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   {<point name="unlock_b.pre_function"/>}
   #end add-point
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astt401_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astt401_bcl2
   END IF
 
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astt401_bcl3
   END IF
 
   LET ls_group = "'4',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astt401_bcl4
   END IF
 
   LET ls_group = "'5',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astt401_bcl5
   END IF
 
   LET ls_group = "'6',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astt401_bcl6
   END IF
 
   LET ls_group = "'7',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astt401_bcl7
   END IF
 
   LET ls_group = "'8',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astt401_bcl8
   END IF
 
   LET ls_group = "'9',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astt401_bcl9
   END IF
 
   LET ls_group = "'10',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astt401_bcl10
   END IF
 
   LET ls_group = "'12',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astt401_bcl11
   END IF
 
 
   
   LET ls_group = "'11',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astt401_bcl12
   END IF
 
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION

{</section>}

{<section id="astt401.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION astt401_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   {<point name="set_entry.define_customerization" edit="c" mark="Y"/>}
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   {<point name="set_entry.define"/>} 
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   {<point name="set_entry.pre_function"/>}
   #end add-point
   
   CALL cl_set_comp_entry("steadocno",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("steadocno",TRUE)
      CALL cl_set_comp_entry("steadocdt",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="astt401.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION astt401_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   {<point name="set_no_entry.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   {<point name="set_no_entry.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   {<point name="set_no_entry.pre_function"/>}
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("steadocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("steadocno",FALSE)
   END IF 
 
#  IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正) #(ver:78)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("steadocdt",FALSE)
      END IF
#  END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="astt401.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION astt401_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   {<point name="set_entry_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   {<point name="set_entry_b.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   {<point name="set_entry_b.pre_function"/>}
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION

{</section>}

{<section id="astt401.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION astt401_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   {<point name="set_no_entry_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   {<point name="set_no_entry_b.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   {<point name="set_no_entry_b.pre_function"/>}
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION

{</section>}

{<section id="astt401.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION astt401_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   {<point name="set_act_visible.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   {<point name="set_act_visible.define"/>} 
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="astt401.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION astt401_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   {<point name="set_act_no_visible.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   {<point name="set_act_no_visible.define"/>} 
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="astt401.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION astt401_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   {<point name="set_act_visible_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   {<point name="set_act_visible_b.define"/>} 
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="astt401.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION astt401_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   {<point name="set_act_no_visible_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   {<point name="set_act_no_visible_b.define"/>} 
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION

{</section>}

{<section id="astt401.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION astt401_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   {<point name="default_search.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   {<point name="default_search.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " steadocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
         INITIALIZE g_wc2_table2 TO NULL
 
         INITIALIZE g_wc2_table3 TO NULL
 
         INITIALIZE g_wc2_table4 TO NULL
 
         INITIALIZE g_wc2_table5 TO NULL
 
         INITIALIZE g_wc2_table6 TO NULL
 
         INITIALIZE g_wc2_table7 TO NULL
 
         INITIALIZE g_wc2_table8 TO NULL
 
         INITIALIZE g_wc2_table9 TO NULL
 
         INITIALIZE g_wc2_table10 TO NULL
 
         INITIALIZE g_wc2_table11 TO NULL
 
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "stea_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "steb_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "stek_t" 
                  LET g_wc2_table2 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "stel_t" 
                  LET g_wc2_table3 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "stew_t" 
                  LET g_wc2_table4 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "stec_t" 
                  LET g_wc2_table5 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "stee_t" 
                  LET g_wc2_table6 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "steg_t" 
                  LET g_wc2_table7 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "steh_t" 
                  LET g_wc2_table8 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "stei_t" 
                  LET g_wc2_table9 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "stej_t" 
                  LET g_wc2_table10 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "stef_t" 
                  LET g_wc2_table11 = la_wc[li_idx].wc
 
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
            OR NOT cl_null(g_wc2_table2)
 
            OR NOT cl_null(g_wc2_table3)
 
            OR NOT cl_null(g_wc2_table4)
 
            OR NOT cl_null(g_wc2_table5)
 
            OR NOT cl_null(g_wc2_table6)
 
            OR NOT cl_null(g_wc2_table7)
 
            OR NOT cl_null(g_wc2_table8)
 
            OR NOT cl_null(g_wc2_table9)
 
            OR NOT cl_null(g_wc2_table10)
 
            OR NOT cl_null(g_wc2_table11)
 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
            IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
            END IF
 
            IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
            END IF
 
            IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
            END IF
 
            IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
            END IF
 
            IF g_wc2_table6 <> " 1=1" AND NOT cl_null(g_wc2_table6) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
            END IF
 
            IF g_wc2_table7 <> " 1=1" AND NOT cl_null(g_wc2_table7) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
            END IF
 
            IF g_wc2_table8 <> " 1=1" AND NOT cl_null(g_wc2_table8) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table8
            END IF
 
            IF g_wc2_table9 <> " 1=1" AND NOT cl_null(g_wc2_table9) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table9
            END IF
 
            IF g_wc2_table10 <> " 1=1" AND NOT cl_null(g_wc2_table10) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table10
            END IF
 
            IF g_wc2_table11 <> " 1=1" AND NOT cl_null(g_wc2_table11) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table11
            END IF
 
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION

{</section>}

{<section id="astt401.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION astt401_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   {<point name="statechange.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_stea_m.steadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN astt401_cl USING g_enterprise,g_stea_m.steadocno
   IF STATUS THEN
      CLOSE astt401_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN astt401_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE astt401_master_referesh USING g_stea_m.steadocno INTO g_stea_m.steasite,g_stea_m.steadocdt, 
       g_stea_m.steadocno,g_stea_m.stea000,g_stea_m.stea054,g_stea_m.steaunit,g_stea_m.stea001,g_stea_m.stea002, 
       g_stea_m.stea003,g_stea_m.stea004,g_stea_m.stea009,g_stea_m.steastus,g_stea_m.stea010,g_stea_m.stea005, 
       g_stea_m.stea006,g_stea_m.stea007,g_stea_m.stea008,g_stea_m.stea047,g_stea_m.stea048,g_stea_m.stea044, 
       g_stea_m.stea051,g_stea_m.stea011,g_stea_m.stea012,g_stea_m.stea056,g_stea_m.stea013,g_stea_m.stea014, 
       g_stea_m.stea015,g_stea_m.stea016,g_stea_m.stea045,g_stea_m.stea046,g_stea_m.stea053,g_stea_m.stea029, 
       g_stea_m.stea030,g_stea_m.stea032,g_stea_m.stea033,g_stea_m.stea034,g_stea_m.stea035,g_stea_m.stea036, 
       g_stea_m.stea037,g_stea_m.stea038,g_stea_m.stea050,g_stea_m.stea058,g_stea_m.stea059,g_stea_m.stea039, 
       g_stea_m.stea040,g_stea_m.stea052,g_stea_m.stea028,g_stea_m.stea017,g_stea_m.stea021,g_stea_m.stea024, 
       g_stea_m.stea018,g_stea_m.stea022,g_stea_m.stea025,g_stea_m.stea019,g_stea_m.stea023,g_stea_m.stea026, 
       g_stea_m.stea020,g_stea_m.stea049,g_stea_m.stea057,g_stea_m.stea055,g_stea_m.stea027,g_stea_m.stea031, 
       g_stea_m.stea042,g_stea_m.steaownid,g_stea_m.steaowndp,g_stea_m.steacrtid,g_stea_m.steacrtdp, 
       g_stea_m.steacrtdt,g_stea_m.steamodid,g_stea_m.steamoddt,g_stea_m.steacnfid,g_stea_m.steacnfdt, 
       g_stea_m.steasite_desc,g_stea_m.steaunit_desc,g_stea_m.stea010_desc,g_stea_m.stea006_desc,g_stea_m.stea047_desc, 
       g_stea_m.stea048_desc,g_stea_m.stea044_desc,g_stea_m.stea051_desc,g_stea_m.stea011_desc,g_stea_m.stea012_desc, 
       g_stea_m.stea013_desc,g_stea_m.stea014_desc,g_stea_m.stea015_desc,g_stea_m.stea045_desc,g_stea_m.stea032_desc, 
       g_stea_m.stea035_desc,g_stea_m.stea036_desc,g_stea_m.stea037_desc,g_stea_m.stea038_desc,g_stea_m.steaownid_desc, 
       g_stea_m.steaowndp_desc,g_stea_m.steacrtid_desc,g_stea_m.steacrtdp_desc,g_stea_m.steamodid_desc, 
       g_stea_m.steacnfid_desc
   
 
   #檢查是否允許此動作
   IF NOT astt401_action_chk() THEN
      CLOSE astt401_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_stea_m.steasite,g_stea_m.steasite_desc,g_stea_m.steadocdt,g_stea_m.steadocno,g_stea_m.stea000, 
       g_stea_m.stea054,g_stea_m.steaunit,g_stea_m.steaunit_desc,g_stea_m.stea001,g_stea_m.stea002,g_stea_m.stea003, 
       g_stea_m.stea004,g_stea_m.stea009,g_stea_m.steastus,g_stea_m.stea010,g_stea_m.stea010_desc,g_stea_m.stea005, 
       g_stea_m.steal002,g_stea_m.steal003,g_stea_m.stea006,g_stea_m.stea006_desc,g_stea_m.stea007,g_stea_m.stea008, 
       g_stea_m.stea047,g_stea_m.stea047_desc,g_stea_m.stea048,g_stea_m.stea048_desc,g_stea_m.stea044, 
       g_stea_m.stea044_desc,g_stea_m.stea051,g_stea_m.stea051_desc,g_stea_m.stea011,g_stea_m.stea011_desc, 
       g_stea_m.stea012,g_stea_m.stea012_desc,g_stea_m.stea056,g_stea_m.stea013,g_stea_m.stea013_desc, 
       g_stea_m.stea014,g_stea_m.stea014_desc,g_stea_m.stea015,g_stea_m.stea015_desc,g_stea_m.stea016, 
       g_stea_m.stea045,g_stea_m.stea045_desc,g_stea_m.stea046,g_stea_m.stea053,g_stea_m.stea029,g_stea_m.stea030, 
       g_stea_m.stea032,g_stea_m.stea032_desc,g_stea_m.stea033,g_stea_m.stea033_desc,g_stea_m.stea034, 
       g_stea_m.stea034_desc,g_stea_m.stea035,g_stea_m.stea035_desc,g_stea_m.stea036,g_stea_m.stea036_desc, 
       g_stea_m.stea037,g_stea_m.stea037_desc,g_stea_m.stea038,g_stea_m.stea038_desc,g_stea_m.stea050, 
       g_stea_m.stea058,g_stea_m.stea059,g_stea_m.stea039,g_stea_m.stea040,g_stea_m.stea052,g_stea_m.stea028, 
       g_stea_m.next_b,g_stea_m.stea017,g_stea_m.stea021,g_stea_m.stea024,g_stea_m.stea018,g_stea_m.stea022, 
       g_stea_m.stea025,g_stea_m.stea019,g_stea_m.stea023,g_stea_m.stea026,g_stea_m.stea020,g_stea_m.stea049, 
       g_stea_m.stea057,g_stea_m.stea055,g_stea_m.stea027,g_stea_m.stea031,g_stea_m.stea042,g_stea_m.steaownid, 
       g_stea_m.steaownid_desc,g_stea_m.steaowndp,g_stea_m.steaowndp_desc,g_stea_m.steacrtid,g_stea_m.steacrtid_desc, 
       g_stea_m.steacrtdp,g_stea_m.steacrtdp_desc,g_stea_m.steacrtdt,g_stea_m.steamodid,g_stea_m.steamodid_desc, 
       g_stea_m.steamoddt,g_stea_m.steacnfid,g_stea_m.steacnfid_desc,g_stea_m.steacnfdt
 
   CASE g_stea_m.steastus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_stea_m.steastus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      #應用 a36 樣板自動產生(Version:5)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT astt401_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE astt401_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT astt401_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE astt401_cl
            RETURN
         END IF
 
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.unconfirmed"
            {<point name="statechange.unconfirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.confirmed"
            {<point name="statechange.confirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制 name="statechange.approved"
            {<point name="statechange.approved"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制 name="statechange.withdraw"
      #      {<point name="statechange.withdraw"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制 name="statechange.rejection"
            {<point name="statechange.rejection"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制 name="statechange.signing"
      #      {<point name="statechange.signing"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.invalid"
            {<point name="statechange.invalid"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "X"
      ) OR 
      g_stea_m.steastus = lc_state OR cl_null(lc_state) THEN
      CLOSE astt401_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_stea_m.steamodid = g_user
   LET g_stea_m.steamoddt = cl_get_current()
   LET g_stea_m.steastus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE stea_t 
      SET (steastus,steamodid,steamoddt) 
        = (g_stea_m.steastus,g_stea_m.steamodid,g_stea_m.steamoddt)     
    WHERE steaent = g_enterprise AND steadocno = g_stea_m.steadocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE astt401_master_referesh USING g_stea_m.steadocno INTO g_stea_m.steasite,g_stea_m.steadocdt, 
          g_stea_m.steadocno,g_stea_m.stea000,g_stea_m.stea054,g_stea_m.steaunit,g_stea_m.stea001,g_stea_m.stea002, 
          g_stea_m.stea003,g_stea_m.stea004,g_stea_m.stea009,g_stea_m.steastus,g_stea_m.stea010,g_stea_m.stea005, 
          g_stea_m.stea006,g_stea_m.stea007,g_stea_m.stea008,g_stea_m.stea047,g_stea_m.stea048,g_stea_m.stea044, 
          g_stea_m.stea051,g_stea_m.stea011,g_stea_m.stea012,g_stea_m.stea056,g_stea_m.stea013,g_stea_m.stea014, 
          g_stea_m.stea015,g_stea_m.stea016,g_stea_m.stea045,g_stea_m.stea046,g_stea_m.stea053,g_stea_m.stea029, 
          g_stea_m.stea030,g_stea_m.stea032,g_stea_m.stea033,g_stea_m.stea034,g_stea_m.stea035,g_stea_m.stea036, 
          g_stea_m.stea037,g_stea_m.stea038,g_stea_m.stea050,g_stea_m.stea058,g_stea_m.stea059,g_stea_m.stea039, 
          g_stea_m.stea040,g_stea_m.stea052,g_stea_m.stea028,g_stea_m.stea017,g_stea_m.stea021,g_stea_m.stea024, 
          g_stea_m.stea018,g_stea_m.stea022,g_stea_m.stea025,g_stea_m.stea019,g_stea_m.stea023,g_stea_m.stea026, 
          g_stea_m.stea020,g_stea_m.stea049,g_stea_m.stea057,g_stea_m.stea055,g_stea_m.stea027,g_stea_m.stea031, 
          g_stea_m.stea042,g_stea_m.steaownid,g_stea_m.steaowndp,g_stea_m.steacrtid,g_stea_m.steacrtdp, 
          g_stea_m.steacrtdt,g_stea_m.steamodid,g_stea_m.steamoddt,g_stea_m.steacnfid,g_stea_m.steacnfdt, 
          g_stea_m.steasite_desc,g_stea_m.steaunit_desc,g_stea_m.stea010_desc,g_stea_m.stea006_desc, 
          g_stea_m.stea047_desc,g_stea_m.stea048_desc,g_stea_m.stea044_desc,g_stea_m.stea051_desc,g_stea_m.stea011_desc, 
          g_stea_m.stea012_desc,g_stea_m.stea013_desc,g_stea_m.stea014_desc,g_stea_m.stea015_desc,g_stea_m.stea045_desc, 
          g_stea_m.stea032_desc,g_stea_m.stea035_desc,g_stea_m.stea036_desc,g_stea_m.stea037_desc,g_stea_m.stea038_desc, 
          g_stea_m.steaownid_desc,g_stea_m.steaowndp_desc,g_stea_m.steacrtid_desc,g_stea_m.steacrtdp_desc, 
          g_stea_m.steamodid_desc,g_stea_m.steacnfid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_stea_m.steasite,g_stea_m.steasite_desc,g_stea_m.steadocdt,g_stea_m.steadocno, 
          g_stea_m.stea000,g_stea_m.stea054,g_stea_m.steaunit,g_stea_m.steaunit_desc,g_stea_m.stea001, 
          g_stea_m.stea002,g_stea_m.stea003,g_stea_m.stea004,g_stea_m.stea009,g_stea_m.steastus,g_stea_m.stea010, 
          g_stea_m.stea010_desc,g_stea_m.stea005,g_stea_m.steal002,g_stea_m.steal003,g_stea_m.stea006, 
          g_stea_m.stea006_desc,g_stea_m.stea007,g_stea_m.stea008,g_stea_m.stea047,g_stea_m.stea047_desc, 
          g_stea_m.stea048,g_stea_m.stea048_desc,g_stea_m.stea044,g_stea_m.stea044_desc,g_stea_m.stea051, 
          g_stea_m.stea051_desc,g_stea_m.stea011,g_stea_m.stea011_desc,g_stea_m.stea012,g_stea_m.stea012_desc, 
          g_stea_m.stea056,g_stea_m.stea013,g_stea_m.stea013_desc,g_stea_m.stea014,g_stea_m.stea014_desc, 
          g_stea_m.stea015,g_stea_m.stea015_desc,g_stea_m.stea016,g_stea_m.stea045,g_stea_m.stea045_desc, 
          g_stea_m.stea046,g_stea_m.stea053,g_stea_m.stea029,g_stea_m.stea030,g_stea_m.stea032,g_stea_m.stea032_desc, 
          g_stea_m.stea033,g_stea_m.stea033_desc,g_stea_m.stea034,g_stea_m.stea034_desc,g_stea_m.stea035, 
          g_stea_m.stea035_desc,g_stea_m.stea036,g_stea_m.stea036_desc,g_stea_m.stea037,g_stea_m.stea037_desc, 
          g_stea_m.stea038,g_stea_m.stea038_desc,g_stea_m.stea050,g_stea_m.stea058,g_stea_m.stea059, 
          g_stea_m.stea039,g_stea_m.stea040,g_stea_m.stea052,g_stea_m.stea028,g_stea_m.next_b,g_stea_m.stea017, 
          g_stea_m.stea021,g_stea_m.stea024,g_stea_m.stea018,g_stea_m.stea022,g_stea_m.stea025,g_stea_m.stea019, 
          g_stea_m.stea023,g_stea_m.stea026,g_stea_m.stea020,g_stea_m.stea049,g_stea_m.stea057,g_stea_m.stea055, 
          g_stea_m.stea027,g_stea_m.stea031,g_stea_m.stea042,g_stea_m.steaownid,g_stea_m.steaownid_desc, 
          g_stea_m.steaowndp,g_stea_m.steaowndp_desc,g_stea_m.steacrtid,g_stea_m.steacrtid_desc,g_stea_m.steacrtdp, 
          g_stea_m.steacrtdp_desc,g_stea_m.steacrtdt,g_stea_m.steamodid,g_stea_m.steamodid_desc,g_stea_m.steamoddt, 
          g_stea_m.steacnfid,g_stea_m.steacnfid_desc,g_stea_m.steacnfdt
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE astt401_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL astt401_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 

{</section>}

{<section id="astt401.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION astt401_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   {<point name="idx_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   {<point name="idx_chk.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   {<point name="idx_chk.pre_function"/>}
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_steb_d.getLength() THEN
         LET g_detail_idx = g_steb_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_steb_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_steb_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail10")
      IF g_detail_idx > g_steb10_d.getLength() THEN
         LET g_detail_idx = g_steb10_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_steb10_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_steb10_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail11")
      IF g_detail_idx > g_steb11_d.getLength() THEN
         LET g_detail_idx = g_steb11_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_steb11_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_steb11_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 4 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail12")
      IF g_detail_idx > g_steb12_d.getLength() THEN
         LET g_detail_idx = g_steb12_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_steb12_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_steb12_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 5 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_steb2_d.getLength() THEN
         LET g_detail_idx = g_steb2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_steb2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_steb2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 6 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_steb3_d.getLength() THEN
         LET g_detail_idx = g_steb3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_steb3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_steb3_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 7 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail4")
      IF g_detail_idx > g_steb4_d.getLength() THEN
         LET g_detail_idx = g_steb4_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_steb4_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_steb4_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 8 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail5")
      IF g_detail_idx > g_steb5_d.getLength() THEN
         LET g_detail_idx = g_steb5_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_steb5_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_steb5_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 9 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail6")
      IF g_detail_idx > g_steb6_d.getLength() THEN
         LET g_detail_idx = g_steb6_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_steb6_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_steb6_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 10 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail7")
      IF g_detail_idx > g_steb7_d.getLength() THEN
         LET g_detail_idx = g_steb7_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_steb7_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_steb7_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 11 THEN
      LET g_detail_idx2 = g_curr_diag.getCurrentRow("s_detail8")
      IF g_detail_idx2 > g_steb8_d.getLength() THEN
         LET g_detail_idx2 = g_steb8_d.getLength()
      END IF
      IF g_detail_idx2 = 0 AND g_steb8_d.getLength() <> 0 THEN
         LET g_detail_idx2 = 1
      END IF
      DISPLAY g_detail_idx2 TO FORMONLY.idx
      DISPLAY g_steb8_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 12 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail9")
      IF g_detail_idx > g_steb9_d.getLength() THEN
         LET g_detail_idx = g_steb9_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_steb9_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_steb9_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="astt401.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION astt401_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   {<point name="b_fill2.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   {<point name="b_fill2.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   {<point name="b_fill2.pre_function"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
   IF astt401_fill_chk(12) THEN
      IF (pi_idx = 12 OR pi_idx = 0 ) AND g_steb2_d.getLength() > 0 THEN
               CALL g_steb8_d.clear()
 
         
         #取得該單身上階單身的idx
         LET g_detail_idx = g_detail_idx_list[5]
         
         LET g_sql = "SELECT  DISTINCT stedseq1,sted001,sted002,sted003,sted004,sted005,sted006,sted007, 
             sted008,sted009,stedsite,stedunit ,t17.oocql004 FROM sted_t",    
                     "",
                                    " LEFT JOIN oocql_t t17 ON t17.oocqlent="||g_enterprise||" AND t17.oocql001='2024' AND t17.oocql002=sted004 AND t17.oocql003='"||g_dlang||"' ",
 
                     " WHERE stedent=? AND steddocno=? AND stedseq=?"
         
         IF NOT cl_null(g_wc2_table12) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table12 CLIPPED
         END IF
         
         LET g_sql = g_sql, " ORDER BY  sted_t.stedseq1" 
                            
         #add-point:單身填充前 name="b_fill2.before_fill12"
         {<point name="b_fill2.before_fill12" />}
         #end add-point
         
         #先清空資料
               CALL g_steb8_d.clear()
 
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astt401_pb12 FROM g_sql
         DECLARE b_fill_curs12 CURSOR FOR astt401_pb12
         
      #  OPEN b_fill_curs12 USING g_enterprise,g_stea_m.steadocno,g_steb2_d[g_detail_idx].stecseq    
      #    #(ver:78)
         LET l_ac = 1
         FOREACH b_fill_curs12 USING g_enterprise,g_stea_m.steadocno,g_steb2_d[g_detail_idx].stecseq INTO g_steb8_d[l_ac].stedseq1, 
             g_steb8_d[l_ac].sted001,g_steb8_d[l_ac].sted002,g_steb8_d[l_ac].sted003,g_steb8_d[l_ac].sted004, 
             g_steb8_d[l_ac].sted005,g_steb8_d[l_ac].sted006,g_steb8_d[l_ac].sted007,g_steb8_d[l_ac].sted008, 
             g_steb8_d[l_ac].sted009,g_steb8_d[l_ac].stedsite,g_steb8_d[l_ac].stedunit,g_steb8_d[l_ac].sted004_desc  
               #(ver:78)
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               EXIT FOREACH
            END IF
            
            #add-point:b_fill段資料填充 name="b_fill2.fill12"
            {<point name="b_fill2.fill12"/>}
            #end add-point
           
            IF l_ac > g_max_rec THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code = 9035 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               EXIT FOREACH
            END IF
            
            LET l_ac = l_ac + 1
            
         END FOREACH
               CALL g_steb8_d.deleteElement(g_steb8_d.getLength())
 
      END IF
   END IF
 
 
      
   LET g_steb8_d_mask_o.* =  g_steb8_d.*
   FOR l_ac = 1 TO g_steb8_d.getLength()
      LET g_steb8_d_mask_o[l_ac].* =  g_steb8_d[l_ac].*
      CALL astt401_sted_t_mask()
      LET g_steb8_d_mask_n[l_ac].* =  g_steb8_d[l_ac].*
   END FOR
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL astt401_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION

{</section>}

{<section id="astt401.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION astt401_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   {<point name="fill_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   {<point name="fill_chk.define"/>} 
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1')  AND 
      (cl_null(g_wc2_table4) OR g_wc2_table4.trim() = '1=1')  AND 
      (cl_null(g_wc2_table5) OR g_wc2_table5.trim() = '1=1')  AND 
      (cl_null(g_wc2_table6) OR g_wc2_table6.trim() = '1=1')  AND 
      (cl_null(g_wc2_table7) OR g_wc2_table7.trim() = '1=1')  AND 
      (cl_null(g_wc2_table8) OR g_wc2_table8.trim() = '1=1')  AND 
      (cl_null(g_wc2_table9) OR g_wc2_table9.trim() = '1=1')  AND 
      (cl_null(g_wc2_table10) OR g_wc2_table10.trim() = '1=1')  AND 
      (cl_null(g_wc2_table11) OR g_wc2_table11.trim() = '1=1')  AND 
      (cl_null(g_wc2_table12) OR g_wc2_table12.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION

{</section>}

{<section id="astt401.status_show" >}
PRIVATE FUNCTION astt401_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   {<point name="status_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   {<point name="status_show.define"/>} 
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION

{</section>}

{<section id="astt401.mask_functions" >}
&include "erp/ast/astt401_mask.4gl"

{</section>}

{<section id="astt401.signature" >}
   #應用 a39 樣板自動產生(Version:10)
#+ BPM提交
PRIVATE FUNCTION astt401_send()
   #add-point:send段define(客製用) name="send.define_customerization"
   {<point name="send.define_customerization" edit="c" mark="Y"/>}
   #end add-point 
   #add-point:send段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="send.define"
   {<point name="send.define"/>}
   #end add-point 
   
   #add-point:Function前置處理  name="send.pre_function"
   {<point name="send.pre_function"/>}
   #end add-point
   
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
   LET g_wc2_table2 = " 1=1"
   LET g_wc2_table3 = " 1=1"
   LET g_wc2_table4 = " 1=1"
   LET g_wc2_table5 = " 1=1"
   LET g_wc2_table6 = " 1=1"
   LET g_wc2_table7 = " 1=1"
   LET g_wc2_table8 = " 1=1"
   LET g_wc2_table9 = " 1=1"
   LET g_wc2_table10 = " 1=1"
   LET g_wc2_table11 = " 1=1"
 
 
   CALL astt401_show()
   CALL astt401_set_pk_array()
   
   #add-point: 初始化的ADP name="send.before_send"
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_stea_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_steb_d))
   CALL cl_bpm_set_detail_data("s_detail10", util.JSONArray.fromFGL(g_steb10_d))
   CALL cl_bpm_set_detail_data("s_detail11", util.JSONArray.fromFGL(g_steb11_d))
   CALL cl_bpm_set_detail_data("s_detail12", util.JSONArray.fromFGL(g_steb12_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_steb2_d))
   CALL cl_bpm_set_detail_data("s_detail3", util.JSONArray.fromFGL(g_steb3_d))
   CALL cl_bpm_set_detail_data("s_detail4", util.JSONArray.fromFGL(g_steb4_d))
   CALL cl_bpm_set_detail_data("s_detail5", util.JSONArray.fromFGL(g_steb5_d))
   CALL cl_bpm_set_detail_data("s_detail6", util.JSONArray.fromFGL(g_steb6_d))
   CALL cl_bpm_set_detail_data("s_detail7", util.JSONArray.fromFGL(g_steb7_d))
   CALL cl_bpm_set_detail_data("s_detail8", util.JSONArray.fromFGL(g_steb8_d))
   CALL cl_bpm_set_detail_data("s_detail9", util.JSONArray.fromFGL(g_steb9_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP name="send.before_cli"
   {<point name="send.before_cli" />}
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP name="send.after_send"
   {<point name="send.after_send" />}
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL astt401_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL astt401_ui_headershow()
   CALL astt401_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
#應用 a40 樣板自動產生(Version:9)
#+ BPM抽單
PRIVATE FUNCTION astt401_draw_out()
   #add-point:draw段define name="draw.define_customerization"
   {<point name="draw.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:draw段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="draw.define"
   {<point name="draw.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="draw.pre_function"
   {<point name="draw.pre_function"/>}
   #end add-point
   
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_idx].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL astt401_ui_headershow()  
   CALL astt401_ui_detailshow()
 
   #add-point:Function後置處理  name="draw.after_function"
   {<point name="draw.after_function"/>}
   #end add-point
 
   RETURN TRUE
   
END FUNCTION
 
 
 
 

{</section>}

{<section id="astt401.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION astt401_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   {<point name="set_pk_array.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_stea_m.steadocno
   LET g_pk_array[1].column = 'steadocno'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
 

{</section>}

{<section id="astt401.other_dialog" readonly="Y" >}
   

{</section>}

{<section id="astt401.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION astt401_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   {<point name="msgcentre_notify.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   {<point name="msgcentre_notify.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   {<point name="msgcentre_notify.pre_function"/>}
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL astt401_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_stea_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 

{</section>}

{<section id="astt401.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION astt401_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   {<point name="action_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   {<point name="action_chk.define"/>} 
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   {<point name="action_chk.action_chk"/>}
   #end add-point
      
   RETURN TRUE
   
END FUNCTION

{</section>}

{<section id="astt401.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

