#該程式已解開Section, 不再透過樣板產出!
{<section id="astt301.description" >}
#+ Version..: T100-ERP-1.00.00(版次:1) Build-000183
#+ 
#+ Filename...: astt301
#+ Description: 自營合約異動申請單
#+ Creator....: 01533(2013/10/21)
#+ Modifier...: 01533(2013/11/08)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生

{</section>}

{<section id="astt301.global" >}
{<point name="global.memo" />}
    
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
{<Module define>}
 
#單頭 type 宣告
PRIVATE type type_g_staj_m        RECORD
       staj000 LIKE staj_t.staj000, 
       staj039 LIKE staj_t.staj039,
   stajdocno LIKE staj_t.stajdocno, 
   stajdocdt LIKE staj_t.stajdocdt, 
   staj002 LIKE staj_t.staj002, 
   staj001 LIKE staj_t.staj001, 
   staj003 LIKE staj_t.staj003, 
   staj021 LIKE staj_t.staj021, 
   stanstus LIKE type_t.chr10, 
   staj004 LIKE staj_t.staj004, 
   staj004_desc LIKE type_t.chr80, 
   staj005 LIKE staj_t.staj005, 
   staj005_desc LIKE type_t.chr80, 
   staj006 LIKE staj_t.staj006, 
   staj006_desc LIKE type_t.chr80, 
   staj007 LIKE staj_t.staj007, 
   staj007_desc LIKE type_t.chr80, 
   staj008 LIKE staj_t.staj008,
   staj008_desc LIKE type_t.chr80,
   staj024 LIKE staj_t.staj024,    #150506-00007#3 120522 by sakura
   staj024_desc LIKE type_t.chr80, #150506-00007#3 120522 by sakura      
   staj025 LIKE staj_t.staj025,    #150506-00007#3 120522 by sakura
   staj040    LIKE staj_t.staj040,             #151013-00001#11 1051021 by yangxf
   staj025_desc LIKE type_t.chr80, #150506-00007#3 120522 by sakura   
   staj026 LIKE staj_t.staj026,    #150506-00007#3 120522 by sakura
   staj027 LIKE staj_t.staj027,    #150506-00007#3 120522 by sakura
   staj028 LIKE staj_t.staj028,    #150506-00007#3 120522 by sakura
   staj036 LIKE staj_t.staj036,
   staj037 LIKE staj_t.staj037,
   staj038 LIKE staj_t.staj038,
   staj029 LIKE staj_t.staj029,    #150506-00007#3 120522 by sakura
   staj030 LIKE staj_t.staj030,    #150506-00007#3 120522 by sakura
   staj031 LIKE staj_t.staj031,    #150512-00006#2 
   staj033 LIKE staj_t.staj033,
   staj034 LIKE staj_t.staj034,
   staj042 LIKE staj_t.staj042,    #160303-00028#33 20160318 by geza 
   staj009 LIKE staj_t.staj009, 
   staj009_desc LIKE type_t.chr80, 
   staj010 LIKE staj_t.staj010, 
   staj010_desc LIKE type_t.chr80, 
   staj015 LIKE staj_t.staj015, 
   staj015_desc LIKE type_t.chr80, 
   staj016 LIKE staj_t.staj016, 
   staj016_desc LIKE type_t.chr80, 
   staj011 LIKE staj_t.staj011, 
   staj012 LIKE staj_t.staj012, 
   staj013 LIKE staj_t.staj013, 
   staj013_desc LIKE type_t.chr80, 
   staj035 LIKE staj_t.staj035,
   staj014 LIKE staj_t.staj014, 
   staj014_desc LIKE type_t.chr80, 
   staj041 LIKE staj_t.staj041,
   staj041_desc LIKE type_t.chr80,
   staj017 LIKE staj_t.staj017, 
   staj018 LIKE staj_t.staj018, 
   staj019 LIKE staj_t.staj019, 
   staj020 LIKE staj_t.staj020, 
   stajsite LIKE staj_t.stajsite, 
   stajsite_desc LIKE type_t.chr80, 
   stajunit LIKE staj_t.stajunit, 
   stajstus LIKE staj_t.stajstus, 
   stajownid LIKE staj_t.stajownid, 
   stajownid_desc LIKE type_t.chr80, 
   stajowndp LIKE staj_t.stajowndp, 
   stajowndp_desc LIKE type_t.chr80, 
   stajcrtid LIKE staj_t.stajcrtid, 
   stajcrtid_desc LIKE type_t.chr80, 
   stajcrtdp LIKE staj_t.stajcrtdp, 
   stajcrtdp_desc LIKE type_t.chr80, 
   stajcrtdt DATETIME YEAR TO SECOND, 
   stajmodid LIKE staj_t.stajmodid, 
   stajmodid_desc LIKE type_t.chr80, 
   stajmoddt DATETIME YEAR TO SECOND, 
   stajcnfid LIKE staj_t.stajcnfid, 
   stajcnfid_desc LIKE type_t.chr80, 
   stajcnfdt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_stak_d        RECORD
       stakseq LIKE stak_t.stakseq, 
   stak003 LIKE stak_t.stak003, 
   stak003_desc LIKE type_t.chr500, 
   stak023 LIKE stak_t.stak023,        #150602-00003#27 20150611 by geza
   stak024 LIKE stak_t.stak024,        #150602-00003#27 20150611 by geza
   stak025 LIKE stak_t.stak025,
   stak025_desc  LIKE type_t.chr500,
   stak004 LIKE stak_t.stak004, 
   stak005 LIKE stak_t.stak005, 
   stak006 LIKE stak_t.stak006, 
   stak028 LIKE stak_t.stak028,
   stak007 LIKE stak_t.stak007, 
   stak008 LIKE stak_t.stak008, 
   stak027 LIKE stak_t.stak027,       #150612-00023#5 add
   stak009 LIKE stak_t.stak009, 
   stak009_desc LIKE type_t.chr500, 
   stak010 LIKE stak_t.stak010, 
   stak010_desc LIKE type_t.chr500, 
   stak011 LIKE stak_t.stak011, 
   stak012 LIKE stak_t.stak012, 
   stak013 LIKE stak_t.stak013, 
   stak014 LIKE stak_t.stak014, 
   stak015 LIKE stak_t.stak015, 
   stak016 LIKE stak_t.stak016, 
   stak029    LIKE stak_t.stak029,     #151013-00001#11 1051021 by yangxf
   stak030    LIKE stak_t.stak030,     #151013-00001#11 1051021 by yangxf
   stak022 LIKE stak_t.stak022,            #150512-00006#2 
   stak017 LIKE stak_t.stak017, 
   stak018 LIKE stak_t.stak018, 
   stakacti LIKE stak_t.stakacti,   
   stak026 LIKE stak_t.stak026,            #add by yangxf 
   stak019 LIKE stak_t.stak019,
   stak020 LIKE stak_t.stak020,
   stak021 LIKE stak_t.stak021,
   stakunit LIKE stak_t.stakunit, 
   staksite LIKE stak_t.staksite
       END RECORD
PRIVATE TYPE type_g_stak2_d RECORD
       stamseq LIKE stam_t.stamseq, 
   stam003 LIKE stam_t.stam003, 
   stam003_desc LIKE type_t.chr500, 
   stam005 LIKE stam_t.stam005,
   stam004 LIKE stam_t.stam004, 
   stamacti     LIKE stam_t.stamacti,
   stamunit LIKE stam_t.stamunit, 
   stamsite LIKE stam_t.stamsite
       END RECORD
 
 
 
#模組變數(Module Variables)
DEFINE g_staj_m          type_g_staj_m
DEFINE g_staj_m_t        type_g_staj_m
 
   DEFINE g_stajdocno_t LIKE staj_t.stajdocno
 
 
DEFINE g_stak_d          DYNAMIC ARRAY OF type_g_stak_d
DEFINE g_stak_d_t        type_g_stak_d
DEFINE g_stak2_d   DYNAMIC ARRAY OF type_g_stak2_d
DEFINE g_stak2_d_t type_g_stak2_d
DEFINE g_stak2_d_o type_g_stak2_d

 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_stajdocno LIKE staj_t.stajdocno,
      b_stajdocdt LIKE staj_t.stajdocdt,
      b_staj000 LIKE staj_t.staj000,
      b_staj001 LIKE staj_t.staj001,
      b_staj002 LIKE staj_t.staj002,
      b_staj003 LIKE staj_t.staj003,
      b_staj004 LIKE staj_t.staj004,
      b_staj005 LIKE staj_t.staj005,
      b_staj005_desc LIKE type_t.chr500,
      b_staj006 LIKE staj_t.staj006,
      b_staj007 LIKE staj_t.staj007,
      b_staj008 LIKE staj_t.staj008,
      b_staj009 LIKE staj_t.staj009,
      b_staj010 LIKE staj_t.staj010,
      b_staj011 LIKE staj_t.staj011,
      b_staj012 LIKE staj_t.staj012,
      b_staj013 LIKE staj_t.staj013,
      b_staj014 LIKE staj_t.staj014,
      b_staj015 LIKE staj_t.staj015,
      b_staj016 LIKE staj_t.staj016,
      b_staj017 LIKE staj_t.staj017,
      b_staj018 LIKE staj_t.staj018,
      b_staj019 LIKE staj_t.staj019,
      b_staj020 LIKE staj_t.staj020,
      b_staj021 LIKE staj_t.staj021,
      b_stajsite LIKE staj_t.stajsite,
      b_stajacti LIKE staj_t.stajacti
         #,rank           LIKE type_t.num10
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_stajdocno LIKE staj_t.stajdocno,
      b_stajdocdt LIKE staj_t.stajdocdt,
      b_staj000 LIKE staj_t.staj000,
      b_staj001 LIKE staj_t.staj001,
      b_staj002 LIKE staj_t.staj002,
      b_staj003 LIKE staj_t.staj003,
      b_staj004 LIKE staj_t.staj004,
      b_staj005 LIKE staj_t.staj005,
      b_staj005_desc LIKE type_t.chr500,
      b_staj006 LIKE staj_t.staj006,
      b_staj007 LIKE staj_t.staj007,
      b_staj008 LIKE staj_t.staj008,
      b_staj009 LIKE staj_t.staj009,
      b_staj010 LIKE staj_t.staj010,
      b_staj011 LIKE staj_t.staj011,
      b_staj012 LIKE staj_t.staj012,
      b_staj013 LIKE staj_t.staj013,
      b_staj014 LIKE staj_t.staj014,
      b_staj015 LIKE staj_t.staj015,
      b_staj016 LIKE staj_t.staj016,
      b_staj017 LIKE staj_t.staj017,
      b_staj018 LIKE staj_t.staj018,
      b_staj019 LIKE staj_t.staj019,
      b_staj020 LIKE staj_t.staj020,
      b_staj021 LIKE staj_t.staj021,
      b_stajsite LIKE staj_t.stajsite,
      b_stajacti LIKE staj_t.stajacti
         #,rank           LIKE type_t.num10
      END RECORD 
      
#無單頭append欄位定義
#無單身append欄位定義
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
  
{</Module define>}
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point

{</section>}

{<section id="astt301.main" >}
#test
#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
{<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ast","")
 
   #add-point:作業初始化
{<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
{<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = "SELECT staj000,staj039,stajdocno,stajdocdt,staj002,staj001,staj003,staj021,'',staj004, 
       '',staj005,'',staj006,'',staj007,'',staj008,'',staj024,'',staj025,'',staj040,staj026,staj027,staj028,staj036,staj037,staj038,staj029,staj030,staj031,staj033,staj034,staj042,staj009,'',staj010,'',staj015,'',staj016,'',staj011, 
       staj012,staj013,'',staj014,'',staj041,'',staj017,staj018,staj019,staj020,stajsite,'',stajunit,stajstus, 
       stajownid,'',stajowndp,'',stajcrtid,'',stajcrtdp,'',stajcrtdt,stajmodid,'',stajmoddt,stajcnfid, 
       '',stajcnfdt FROM staj_t WHERE stajent= ? AND stajdocno=? FOR UPDATE"
   #add-point:SQL_define
{<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   DECLARE astt301_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
{<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_astt301 WITH FORM cl_ap_formpath("ast",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL astt301_init()   
 
      #進入選單 Menu (="N")
      CALL astt301_ui_dialog() 
	  
      #add-point:畫面關閉前
{<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_astt301
      
   END IF 
   
   CLOSE astt301_cl
   
   
 
   #add-point:作業離開前
{<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 

{</section>}

{<section id="astt301.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION astt301_init()
   #add-point:init段define
{<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
      CALL cl_set_combo_scc_part('stanstus','50','N,Y,X')
      CALL cl_set_combo_scc_part('stajstus','13','N,Y,A,D,R,W,X')
 
      CALL cl_set_combo_scc('staj000','6863') 
   CALL cl_set_combo_scc('staj002','6013') 
   CALL cl_set_combo_scc('stak005','6006') 
   CALL cl_set_combo_scc('stak006','6007') 
   CALL cl_set_combo_scc('stak007','6008') 
   CALL cl_set_combo_scc('stak008','6009') 
   CALL cl_set_combo_scc('stak013','6010') 
   CALL cl_set_combo_scc('stak016','6011') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
{<point name="init.init"/>}
   #end add-point
   
   CALL astt301_default_search()
    
END FUNCTION

{</section>}

{<section id="astt301.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION astt301_ui_dialog()
   {<Local define>}
   DEFINE li_idx  LIKE type_t.num5
   {</Local define>}
   #add-point:ui_dialog段define
{<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_wc.trim() <> "1=1" THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #add-point:ui_dialog段before dialog 
{<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL astt301_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_stajdocno = g_stajdocno_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
         #INPUT g_searchstr,g_searchcol FROM formonly.searchstr,formonly.cbo_searchcol
         #
         #   BEFORE INPUT
         #   
         #END INPUT
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL astt301_fetch('') # reload data
               LET l_ac = 1
               CALL astt301_ui_detailshow() #Setting the current row 
      
               CALL astt301_idx_chk()
               #NEXT FIELD stakseq
         
         END DISPLAY
        
         DISPLAY ARRAY g_stak_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL astt301_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
{<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL astt301_idx_chk()
               #add-point:page1自定義行為
{<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
 
 
         ON ACTION detail_qrystr
 
            LET g_action_choice="detail_qrystr"
            IF cl_auth_chk_act("detail_qrystr") THEN 
               MENU "" ATTRIBUTE(STYLE="popup")
 
                  ON ACTION asti203
 
                     LET g_action_choice="asti203"
                     IF cl_auth_chk_act("asti203") THEN 
                        #add-point:ON ACTION asti203
{<point name="menu.detail_show.page1_sub.asti203" />}
                        #END add-point
                        
                     END IF
 
 
                  ON ACTION asti202
 
                     LET g_action_choice="asti202"
                     IF cl_auth_chk_act("asti202") THEN 
                        #add-point:ON ACTION asti202
{<point name="menu.detail_show.page1_sub.asti202" />}
                        #END add-point
                        
                     END IF
 
               END MENU
               #add-point:ON ACTION detail_qrystr
{<point name="menu.detail_show.page1.detail_qrystr" />}
               #END add-point
               EXIT DIALOG
            END IF
 
               
            #add-point:page1自定義行為
{<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_stak2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL astt301_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               
               #add-point:page2, before row動作
{<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               CALL astt301_idx_chk()
               #add-point:page2自定義行為
{<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
{<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
 
 
         
         #add-point:ui_dialog段自定義display array
{<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL astt301_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL astt301_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL astt301_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
{<point name="ui_dialog.before_dialog2"/>}
            #end add-point
            
            #NEXT FIELD stakseq
        
         ON ACTION statechange
            CALL astt301_statechange()
            LET g_action_choice = "statechange"
            EXIT DIALOG
      
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status
            
            #END add-point
          
         #ACTION表單列
         ON ACTION filter
            CALL astt301_filter()
            EXIT DIALOG
         
         ON ACTION first
            CALL astt301_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astt301_idx_chk()
            
         ON ACTION previous
            CALL astt301_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astt301_idx_chk()
            
         ON ACTION jump
            CALL astt301_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astt301_idx_chk()
            
         ON ACTION next
            CALL astt301_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astt301_idx_chk()
            
         ON ACTION last
            CALL astt301_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astt301_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
 
         ON ACTION insert
 
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN 
               CALL astt301_insert()
               #add-point:ON ACTION insert
{<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN 
               CALL astt301_query()
               #add-point:ON ACTION query
{<point name="menu.query" />}
               #END add-point
            END IF
 
 
         ON ACTION output
 
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN 
               #add-point:ON ACTION output
{<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION delete
 
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN 
               CALL astt301_delete()
               #add-point:ON ACTION delete
{<point name="menu.delete" />}
               #END add-point
            END IF
 
 
         ON ACTION modify
 
            LET g_aw = ''
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN 
               CALL astt301_modify()
               #add-point:ON ACTION modify
{<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION modify_detail
 
            LET g_aw = g_curr_diag.getCurrentItem()
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN 
               CALL astt301_modify()
               #add-point:ON ACTION modify_detail
{<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION reproduce
 
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN 
               CALL astt301_reproduce()
               #add-point:ON ACTION reproduce
{<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION prog_staj001
 
            LET g_action_choice="prog_staj001"
            IF cl_auth_chk_act("prog_staj001") THEN 
               CALL cl_cmdrun_wait("astm301")
               #add-point:ON ACTION prog_staj001
{<point name="menu.prog_staj001" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION prog_staj004
 
            LET g_action_choice="prog_staj004"
            IF cl_auth_chk_act("prog_staj004") THEN 
               CALL cl_cmdrun_wait("astm201")
               #add-point:ON ACTION prog_staj004
{<point name="menu.prog_staj004" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION prog_staj005
 
            LET g_action_choice="prog_staj005"
            IF cl_auth_chk_act("prog_staj005") THEN 
               CALL cl_cmdrun_wait("apmm800")
               #add-point:ON ACTION prog_staj005
{<point name="menu.prog_staj005" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION prog_staj006
 
            LET g_action_choice="prog_staj006"
            IF cl_auth_chk_act("prog_staj006") THEN 
               CALL cl_cmdrun_wait("aooi140")
               #add-point:ON ACTION prog_staj006
{<point name="menu.prog_staj006" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION prog_staj007
 
            LET g_action_choice="prog_staj007"
            IF cl_auth_chk_act("prog_staj007") THEN 
               CALL cl_cmdrun_wait("aooi610")
               #add-point:ON ACTION prog_staj007
{<point name="menu.prog_staj007" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION prog_staj009
 
            LET g_action_choice="prog_staj009"
            IF cl_auth_chk_act("prog_staj009") THEN 
               CALL cl_cmdrun_wait("asti201")
               #add-point:ON ACTION prog_staj009
{<point name="menu.prog_staj009" />}
               #END add-point
               EXIT DIALOG
            END IF
 
         #ken---add---s 需求單號：150107-00009 項次：11
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_stak_d)
                  LET g_export_id[1]   = "s_detail1"

                  LET g_export_node[2] = base.typeInfo.create(g_stak2_d)
                  LET g_export_id[2]   = "s_detail2"
                  
                  LET g_export_node[3] = base.typeInfo.create(g_stal_d)
                  LET g_export_id[3]   = "s_detail3"
                  
                           
                  LET g_export_node[4] = base.typeInfo.create(g_staw_d)
                  LET g_export_id[4]   = "s_detail4"
                  
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
         #ken---add---e
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION

{</section>}

{<section id="astt301.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION astt301_browser_fill(ps_page_action)
   {<Local define>}
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   {</Local define>}
   #add-point:browser_fill段define
{<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_staj_m.* TO NULL
   CALL g_stak_d.clear()        
   CALL g_stak2_d.clear() 
 
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "stajdocno"
 
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      RETURN
   END IF
   
   #add-point:browser_fill,foreach前
{<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE stajdocno ",
 
                        " FROM staj_t ",
                              " ",
                              " LEFT JOIN stak_t ON stakent = stajent AND stajdocno = stakdocno ",
                              " LEFT JOIN stam_t ON stament = stajent AND stajdocno = stamdocno", 
 
 
 
                              " ", 
                              " ", 
                       " WHERE stajent = '" ||g_enterprise|| "' AND stakent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2
 
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE stajdocno ",
 
                        " FROM staj_t ", 
                              " ",
                              " ",
                        "WHERE stajent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED
 
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
{<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
   
   #LET g_page_action = ps_page_action          # Keep Action
   
   IF ps_page_action = "F" OR
      ps_page_action = "P" OR
      ps_page_action = "N" OR
      ps_page_action = "L" THEN
      LET g_page_action = ps_page_action
   END IF
   
   CASE ps_page_action
      WHEN "F" 
         LET g_pagestart = 1
          
      WHEN "P"  
         LET g_pagestart = g_pagestart - g_max_browse
         IF g_pagestart < 1 THEN
            LET g_pagestart = 1
         END IF
          
      WHEN "N"  
         LET g_pagestart = g_pagestart + g_max_browse
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
            WHILE g_pagestart > g_browser_cnt 
               LET g_pagestart = g_pagestart - g_max_browse
            END WHILE
         END IF
      
      WHEN "L"  
         LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
         WHILE g_pagestart > g_browser_cnt 
            LET g_pagestart = g_pagestart - g_max_browse
         END WHILE
         
      WHEN '/'
         LET g_pagestart = g_jump
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = 1
         END IF
         
   END CASE
  
   #單身有輸入查詢條件且非null
   IF g_wc2 <> " 1=1" AND NOT cl_null(g_wc2) THEN 
      #依照stajdocno,stajdocdt,staj000,staj001,staj002,staj003,staj004,staj005,staj006,staj007,staj008,staj009,staj010,staj011,staj012,staj013,staj014,staj015,staj016,staj017,staj018,staj019,staj020,staj021,stajsite,stajacti Browser欄位定義(取代原本bs_sql功能)
      LET l_sql_rank = "SELECT DISTINCT stajstus,stajdocno,stajdocdt,staj000,staj001,staj002,staj003, 
          staj004,staj005,staj006,staj007,staj008,staj024,staj025,staj026,staj027,staj028,staj029,staj030,staj009,staj010,staj011,staj012,staj013,staj014,staj041,staj015, 
          staj016,staj017,staj018,staj019,staj020,staj021,stajsite,stajacti,DENSE_RANK() OVER(ORDER BY stajdocno ", 
          g_order,") AS RANK ",
                        " FROM staj_t ",
                              " ",
                              " LEFT JOIN stak_t ON stakent = stajent AND stajdocno = stakdocno ",
                              " LEFT JOIN stam_t ON stament = stajent AND stajdocno = stamdocno",
 
 
 
                              " ",
                              " ",
                       " ",
                       " WHERE stajent = '" ||g_enterprise|| "' AND ",g_wc," AND ",g_wc2
   ELSE
      #單身無輸入資料
      LET l_sql_rank = "SELECT DISTINCT stajstus,stajdocno,stajdocdt,staj000,staj001,staj002,staj003, 
          staj004,staj005,staj006,staj007,staj008,staj024,staj025,staj026,staj027,staj028,staj029,staj030,staj009,staj010,staj011,staj012,staj013,staj014,staj015, 
          staj016,staj017,staj018,staj019,staj020,staj021,stajsite,stajacti,DENSE_RANK() OVER(ORDER BY stajdocno ", 
          g_order,") AS RANK ",
                       " FROM staj_t ",
                            "  ",
                            "  ",
                       " WHERE stajent = '" ||g_enterprise|| "' AND ", g_wc
   END IF
   
   #定義翻頁CURSOR
   LET g_sql= "SELECT stajstus,stajdocno,stajdocdt,staj000,staj001,staj002,staj003,staj004,staj005,staj006, 
       staj007,staj008,staj024,staj025,staj026,staj027,staj028,staj029,staj030,staj009,staj010,staj011,staj012,staj013,staj014,staj041,staj015,staj016,staj017,staj018, 
       staj019,staj020,staj021,stajsite,stajacti FROM (",l_sql_rank,") WHERE ",
              " RANK >= ",1," AND RANK<",1+g_max_browse,
              " ORDER BY ",l_searchcol," ",g_order
               
   #add-point:browser_fill,before_prepare
{<point name="browser_fill.before_prepare"/>}
   #end add-point
               
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
{<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_stajdocno,g_browser[g_cnt].b_stajdocdt, 
       g_browser[g_cnt].b_staj000,g_browser[g_cnt].b_staj001,g_browser[g_cnt].b_staj002,g_browser[g_cnt].b_staj003, 
       g_browser[g_cnt].b_staj004,g_browser[g_cnt].b_staj005,g_browser[g_cnt].b_staj006,g_browser[g_cnt].b_staj007, 
       g_browser[g_cnt].b_staj008,g_browser[g_cnt].b_staj009,g_browser[g_cnt].b_staj010,g_browser[g_cnt].b_staj011, 
       g_browser[g_cnt].b_staj012,g_browser[g_cnt].b_staj013,g_browser[g_cnt].b_staj014,g_browser[g_cnt].b_staj015, 
       g_browser[g_cnt].b_staj016,g_browser[g_cnt].b_staj017,g_browser[g_cnt].b_staj018,g_browser[g_cnt].b_staj019, 
       g_browser[g_cnt].b_staj020,g_browser[g_cnt].b_staj021,g_browser[g_cnt].b_stajsite,g_browser[g_cnt].b_stajacti 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'foreach:'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
  
      
  
      #add-point:browser_fill段reference
{<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/open.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
 
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
 
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 9035
         LET g_errparam.extend = ''
         LET g_errparam.popup = FALSE
         CALL cl_err()

         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
{<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION

{</section>}

{<section id="astt301.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION astt301_ui_headershow()
   #add-point:ui_headershow段define
{<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_staj_m.stajdocno = g_browser[g_current_idx].b_stajdocno   
 
    SELECT UNIQUE staj000,staj039,stajdocno,stajdocdt,staj002,staj001,staj003,staj021,staj004,staj005,staj006, 
        staj007,staj008,
        staj024,staj025,staj026,staj027,staj028,staj029,staj030, #150506-00007#3 150522 by sakura add
        staj031,staj033,staj034,
        staj009,staj010,staj015,staj016,staj011,staj012,staj013,staj014,staj017, 
        staj018,staj019,staj020,stajsite,stajunit,stajstus,stajownid,stajowndp,stajcrtid,stajcrtdp,stajcrtdt, 
        stajmodid,stajmoddt,stajcnfid,stajcnfdt
 INTO g_staj_m.staj000,g_staj_m.staj039,g_staj_m.stajdocno,g_staj_m.stajdocdt,g_staj_m.staj002,g_staj_m.staj001,g_staj_m.staj003, 
     g_staj_m.staj021,g_staj_m.staj004,g_staj_m.staj005,g_staj_m.staj006,g_staj_m.staj007,g_staj_m.staj008, 
     g_staj_m.staj024,g_staj_m.staj025,g_staj_m.staj026,g_staj_m.staj027,g_staj_m.staj028,g_staj_m.staj029,g_staj_m.staj030, #150506-00007#3 150522 by sakura add
     g_staj_m.staj031,g_staj_m.staj033,g_staj_m.staj034,
     g_staj_m.staj009,g_staj_m.staj010,g_staj_m.staj015,g_staj_m.staj016,g_staj_m.staj011,
     g_staj_m.staj012,g_staj_m.staj013,g_staj_m.staj014,g_staj_m.staj017,g_staj_m.staj018,g_staj_m.staj019, 
     g_staj_m.staj020,g_staj_m.stajsite,g_staj_m.stajunit,g_staj_m.stajstus,g_staj_m.stajownid,g_staj_m.stajowndp, 
     g_staj_m.stajcrtid,g_staj_m.stajcrtdp,g_staj_m.stajcrtdt,g_staj_m.stajmodid,g_staj_m.stajmoddt, 
     g_staj_m.stajcnfid,g_staj_m.stajcnfdt
 FROM staj_t
 WHERE stajent = g_enterprise AND stajdocno = g_staj_m.stajdocno
   CALL astt301_show()
   
END FUNCTION

{</section>}

{<section id="astt301.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION astt301_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION

{</section>}

{<section id="astt301.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION astt301_ui_browser_refresh()
   {<Local define>}
   DEFINE l_i  LIKE type_t.num10
   {</Local define>}
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_stajdocno = g_staj_m.stajdocno 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION

{</section>}

{<section id="astt301.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION astt301_construct()
 
   {<Local define>}
   DEFINE lc_qbe_sn   LIKE type_t.num10
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   {</Local define>}
   #add-point:cs段define
{<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_staj_m.* TO NULL
   CALL g_stak_d.clear()        
   CALL g_stak2_d.clear()
   CALL g_stak3_d.clear()
   CALL g_stak4_d.clear()   
   CALL g_staw_d.clear() 
   CALL g_stay_d.clear()
   CALL g_stay1_d.clear()
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
   INITIALIZE g_wc2_table7 TO NULL
   INITIALIZE g_wc2_table8 TO NULL
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
{<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON stajsite,stajdocdt,stajdocno,staj000,staj039,staj001,staj003,
          staj004,staj002,staj031,staj021,staj005,staj016,
          staj017,staj018,staj012,staj014,staj041,staj013,
          staj036,staj037,staj038,staj015,staj009,staj010,
          staj034,staj042,staj033,staj035,staj019,staj020,staj029,
          staj030,staj008,staj024,staj006,staj007,staj025,
          staj040,staj026,staj027,staj028,staj011,stajstus,stajownid,stajowndp, 
          stajcrtid,stajcrtdp,stajcrtdt,stajmodid,stajmoddt,stajcnfid,stajcnfdt
 
         BEFORE CONSTRUCT
#saki            CALL cl_qbe_init()
            #add-point:cs段before_construct
{<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<stajownid>>----
         #ON ACTION controlp INFIELD stajownid
         #   CALL q_common('staj_t','stajownid',TRUE,FALSE,g_staj_m.stajownid) RETURNING ls_return
         #   DISPLAY ls_return TO stajownid
         #   NEXT FIELD stajownid  
         #
         ##----<<stajowndp>>----
         #ON ACTION controlp INFIELD stajowndp
         #   CALL q_common('staj_t','stajowndp',TRUE,FALSE,g_staj_m.stajowndp) RETURNING ls_return
         #   DISPLAY ls_return TO stajowndp
         #   NEXT FIELD stajowndp
         #
         ##----<<stajcrtid>>----
         #ON ACTION controlp INFIELD stajcrtid
         #   CALL q_common('staj_t','stajcrtid',TRUE,FALSE,g_staj_m.stajcrtid) RETURNING ls_return
         #   DISPLAY ls_return TO stajcrtid
         #   NEXT FIELD stajcrtid
         #
         ##----<<stajcrtdp>>----
         #ON ACTION controlp INFIELD stajcrtdp
         #   CALL q_common('staj_t','stajcrtdp',TRUE,FALSE,g_staj_m.stajcrtdp) RETURNING ls_return
         #   DISPLAY ls_return TO stajcrtdp
         #   NEXT FIELD stajcrtdp
         #
         ##----<<stajmodid>>----
         #ON ACTION controlp INFIELD stajmodid
         #   CALL q_common('staj_t','stajmodid',TRUE,FALSE,g_staj_m.stajmodid) RETURNING ls_return
         #   DISPLAY ls_return TO stajmodid
         #   NEXT FIELD stajmodid
         #
         ##----<<stajcnfid>>----
         #ON ACTION controlp INFIELD stajcnfid
         #   CALL q_common('staj_t','stajcnfid',TRUE,FALSE,g_staj_m.stajcnfid) RETURNING ls_return
         #   DISPLAY ls_return TO stajcnfid
         #   NEXT FIELD stajcnfid
         #
         ##----<<stajpstid>>----
         ##ON ACTION controlp INFIELD stajpstid
         ##   CALL q_common('staj_t','stajpstid',TRUE,FALSE,g_staj_m.stajpstid) RETURNING ls_return
         ##   DISPLAY ls_return TO stajpstid
         ##   NEXT FIELD stajpstid
         
         ##----<<stajcrtdt>>----
         AFTER FIELD stajcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<stajmoddt>>----
         AFTER FIELD stajmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<stajcnfdt>>----
         AFTER FIELD stajcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<stajpstdt>>----
         #AFTER FIELD stajpstdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
            
         #一般欄位開窗相關處理    
         #---------------------------<  Master  >---------------------------
         #----<<staj000>>----
         #此段落由子樣板a01產生
         BEFORE FIELD staj000
            #add-point:BEFORE FIELD staj000
{<point name="construct.b.staj000" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD staj000
            
            #add-point:AFTER FIELD staj000
{<point name="construct.a.staj000" />}
            #END add-point
            
 
         #Ctrlp:construct.c.staj000
         ON ACTION controlp INFIELD staj000
            #add-point:ON ACTION controlp INFIELD staj000
{<point name="construct.c.staj000" />}
            #END add-point
 
         #----<<stajdocno>>----
         #Ctrlp:construct.c.stajdocno
         ON ACTION controlp INFIELD stajdocno
            #add-point:ON ACTION controlp INFIELD stajdocno
{<point name="construct.c.stajdocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stajdocno
            #add-point:BEFORE FIELD stajdocno
{<point name="construct.b.stajdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stajdocno
            
            #add-point:AFTER FIELD stajdocno
{<point name="construct.a.stajdocno" />}
            #END add-point
            
 
         #----<<stajdocdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stajdocdt
            #add-point:BEFORE FIELD stajdocdt
{<point name="construct.b.stajdocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stajdocdt
            
            #add-point:AFTER FIELD stajdocdt
{<point name="construct.a.stajdocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stajdocdt
         ON ACTION controlp INFIELD stajdocdt
            #add-point:ON ACTION controlp INFIELD stajdocdt
{<point name="construct.c.stajdocdt" />}
            #END add-point
 
         #----<<staj002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD staj002
            #add-point:BEFORE FIELD staj002
{<point name="construct.b.staj002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD staj002
            
            #add-point:AFTER FIELD staj002
{<point name="construct.a.staj002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.staj002
         ON ACTION controlp INFIELD staj002
            #add-point:ON ACTION controlp INFIELD staj002
{<point name="construct.c.staj002" />}
            #END add-point
 
         #----<<staj001>>----
         #Ctrlp:construct.c.staj001
         ON ACTION controlp INFIELD staj001
            #add-point:ON ACTION controlp INFIELD staj001
{<point name="construct.c.staj001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD staj001
            #add-point:BEFORE FIELD staj001
{<point name="construct.b.staj001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD staj001
            
            #add-point:AFTER FIELD staj001
{<point name="construct.a.staj001" />}
            #END add-point
            
 
         #----<<staj003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD staj003
            #add-point:BEFORE FIELD staj003
{<point name="construct.b.staj003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD staj003
            
            #add-point:AFTER FIELD staj003
{<point name="construct.a.staj003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.staj003
         ON ACTION controlp INFIELD staj003
            #add-point:ON ACTION controlp INFIELD staj003
{<point name="construct.c.staj003" />}
            #END add-point
 
         #----<<staj021>>----
         #此段落由子樣板a01產生
         BEFORE FIELD staj021
            #add-point:BEFORE FIELD staj021
{<point name="construct.b.staj021" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD staj021
            
            #add-point:AFTER FIELD staj021
{<point name="construct.a.staj021" />}
            #END add-point
            
 
         #Ctrlp:construct.c.staj021
         ON ACTION controlp INFIELD staj021
            #add-point:ON ACTION controlp INFIELD staj021
{<point name="construct.c.staj021" />}
            #END add-point
 
         
{<point name="construct.b.stanstus" />}
    
 
        
            
{<point name="construct.a.stanstus" />}
          
            
 
       
{<point name="construct.c.stanstus" />}
          
 
         #----<<staj004>>----
         #Ctrlp:construct.c.staj004
         ON ACTION controlp INFIELD staj004
            #add-point:ON ACTION controlp INFIELD staj004
{<point name="construct.c.staj004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD staj004
            #add-point:BEFORE FIELD staj004
{<point name="construct.b.staj004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD staj004
            
            #add-point:AFTER FIELD staj004
{<point name="construct.a.staj004" />}
            #END add-point
            
 
         #----<<staj005>>----
         #Ctrlp:construct.c.staj005
         ON ACTION controlp INFIELD staj005
            #add-point:ON ACTION controlp INFIELD staj005
{<point name="construct.c.staj005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD staj005
            #add-point:BEFORE FIELD staj005
{<point name="construct.b.staj005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD staj005
            
            #add-point:AFTER FIELD staj005
{<point name="construct.a.staj005" />}
            #END add-point
            
 
         #----<<staj006>>----
         #Ctrlp:construct.c.staj006
         ON ACTION controlp INFIELD staj006
            #add-point:ON ACTION controlp INFIELD staj006
{<point name="construct.c.staj006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD staj006
            #add-point:BEFORE FIELD staj006
{<point name="construct.b.staj006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD staj006
            
            #add-point:AFTER FIELD staj006
{<point name="construct.a.staj006" />}
            #END add-point
            
 
         #----<<staj007>>----
         #Ctrlp:construct.c.staj007
         ON ACTION controlp INFIELD staj007
            #add-point:ON ACTION controlp INFIELD staj007
{<point name="construct.c.staj007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD staj007
            #add-point:BEFORE FIELD staj007
{<point name="construct.b.staj007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD staj007
            
            #add-point:AFTER FIELD staj007
{<point name="construct.a.staj007" />}
            #END add-point
            
 
         #----<<staj008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD staj008
            #add-point:BEFORE FIELD staj008
{<point name="construct.b.staj008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD staj008
            
            #add-point:AFTER FIELD staj008
{<point name="construct.a.staj008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.staj008
         ON ACTION controlp INFIELD staj008
            #add-point:ON ACTION controlp INFIELD staj008
{<point name="construct.c.staj008" />}
            #END add-point
            
         #150506-00007#3 150522 by sakura add--STR
         #交易條件
         ON ACTION controlp INFIELD staj024
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '238'
            CALL q_oocq002()
            DISPLAY g_qryparam.return1 TO staj024
            NEXT FIELD staj024
         #發票類型
         ON ACTION controlp INFIELD staj025
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_ooef019 #稅區
            LET g_qryparam.arg2 = "1"       #進銷項類型            
            CALL q_isac002_2()
            DISPLAY g_qryparam.return1 TO staj025
            NEXT FIELD staj025            
         #150506-00007#3 150522 by sakura add--END
 
         #----<<staj009>>----
         #Ctrlp:construct.c.staj009
         ON ACTION controlp INFIELD staj009
            #add-point:ON ACTION controlp INFIELD staj009
{<point name="construct.c.staj009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD staj009
            #add-point:BEFORE FIELD staj009
{<point name="construct.b.staj009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD staj009
            
            #add-point:AFTER FIELD staj009
{<point name="construct.a.staj009" />}
            #END add-point
            
 
         #----<<staj010>>----
         #Ctrlp:construct.c.staj010
         ON ACTION controlp INFIELD staj010
            #add-point:ON ACTION controlp INFIELD staj010
{<point name="construct.c.staj010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD staj010
            #add-point:BEFORE FIELD staj010
{<point name="construct.b.staj010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD staj010
            
            #add-point:AFTER FIELD staj010
{<point name="construct.a.staj010" />}
            #END add-point
            
 
         #----<<staj015>>----
         #Ctrlp:construct.c.staj015
         ON ACTION controlp INFIELD staj015
            #add-point:ON ACTION controlp INFIELD staj015
{<point name="construct.c.staj015" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD staj015
            #add-point:BEFORE FIELD staj015
{<point name="construct.b.staj015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD staj015
            
            #add-point:AFTER FIELD staj015
{<point name="construct.a.staj015" />}
            #END add-point
            
 
         #----<<staj016>>----
         #Ctrlp:construct.c.staj016
         ON ACTION controlp INFIELD staj016
            #add-point:ON ACTION controlp INFIELD staj016
{<point name="construct.c.staj016" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD staj016
            #add-point:BEFORE FIELD staj016
{<point name="construct.b.staj016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD staj016
            
            #add-point:AFTER FIELD staj016
{<point name="construct.a.staj016" />}
            #END add-point
            
 
         #----<<staj011>>----
         #此段落由子樣板a01產生
         BEFORE FIELD staj011
            #add-point:BEFORE FIELD staj011
{<point name="construct.b.staj011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD staj011
            
            #add-point:AFTER FIELD staj011
{<point name="construct.a.staj011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.staj011
         ON ACTION controlp INFIELD staj011
            #add-point:ON ACTION controlp INFIELD staj011
{<point name="construct.c.staj011" />}

{<point name="construct.b.stajacti" />}

{<point name="construct.a.stajacti" />}


{<point name="construct.c.stajacti" />}

         #----<<staj012>>----
         #此段落由子樣板a01產生
         BEFORE FIELD staj012
            #add-point:BEFORE FIELD staj012
{<point name="construct.b.staj012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD staj012
            
            #add-point:AFTER FIELD staj012
{<point name="construct.a.staj012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.staj012
         ON ACTION controlp INFIELD staj012
            #add-point:ON ACTION controlp INFIELD staj012
{<point name="construct.c.staj012" />}
            #END add-point
 
         #----<<staj013>>----
         #Ctrlp:construct.c.staj013
         ON ACTION controlp INFIELD staj013
            #add-point:ON ACTION controlp INFIELD staj013
{<point name="construct.c.staj013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD staj013
            #add-point:BEFORE FIELD staj013
{<point name="construct.b.staj013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD staj013
            
            #add-point:AFTER FIELD staj013
{<point name="construct.a.staj013" />}
            #END add-point
            
 
         #----<<staj014>>----
         #Ctrlp:construct.c.staj014
         ON ACTION controlp INFIELD staj014
            #add-point:ON ACTION controlp INFIELD staj014
{<point name="construct.c.staj014" />}
            #END add-point
         ON ACTION controlp INFIELD staj041
            #add-point:ON ACTION controlp INFIELD staj014
                                    #此段落由子樣板a08產生
            #開窗c段
		    	INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.arg1 = g_today
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO staj041  #顯示到畫面上

            NEXT FIELD staj041                     #返回原欄位
            
         #此段落由子樣板a01產生
         BEFORE FIELD staj014
            #add-point:BEFORE FIELD staj014
{<point name="construct.b.staj014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD staj014
            
            #add-point:AFTER FIELD staj014
{<point name="construct.a.staj014" />}
            #END add-point
            
 
         #----<<staj017>>----
         #此段落由子樣板a01產生
         BEFORE FIELD staj017
            #add-point:BEFORE FIELD staj017
{<point name="construct.b.staj017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD staj017
            
            #add-point:AFTER FIELD staj017
{<point name="construct.a.staj017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.staj017
         ON ACTION controlp INFIELD staj017
            #add-point:ON ACTION controlp INFIELD staj017
{<point name="construct.c.staj017" />}
            #END add-point
 
         #----<<staj018>>----
         #此段落由子樣板a01產生
         BEFORE FIELD staj018
            #add-point:BEFORE FIELD staj018
{<point name="construct.b.staj018" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD staj018
            
            #add-point:AFTER FIELD staj018
{<point name="construct.a.staj018" />}
            #END add-point
            
 
         #Ctrlp:construct.c.staj018
         ON ACTION controlp INFIELD staj018
            #add-point:ON ACTION controlp INFIELD staj018
{<point name="construct.c.staj018" />}
            #END add-point
 
         #----<<staj019>>----
         #此段落由子樣板a01產生
         BEFORE FIELD staj019
            #add-point:BEFORE FIELD staj019
{<point name="construct.b.staj019" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD staj019
            
            #add-point:AFTER FIELD staj019
{<point name="construct.a.staj019" />}
            #END add-point
            
 
         #Ctrlp:construct.c.staj019
         ON ACTION controlp INFIELD staj019
            #add-point:ON ACTION controlp INFIELD staj019
{<point name="construct.c.staj019" />}
            #END add-point
 
         #----<<staj020>>----
         #此段落由子樣板a01產生
         BEFORE FIELD staj020
            #add-point:BEFORE FIELD staj020
{<point name="construct.b.staj020" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD staj020
            
            #add-point:AFTER FIELD staj020
{<point name="construct.a.staj020" />}
            #END add-point
            
 
         #Ctrlp:construct.c.staj020
         ON ACTION controlp INFIELD staj020
            #add-point:ON ACTION controlp INFIELD staj020
{<point name="construct.c.staj020" />}
            #END add-point
 
         #----<<stajsite>>----
         #Ctrlp:construct.c.stajsite
         ON ACTION controlp INFIELD stajsite
            #add-point:ON ACTION controlp INFIELD stajsite
{<point name="construct.c.stajsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stajsite
            #add-point:BEFORE FIELD stajsite
{<point name="construct.b.stajsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stajsite
            
            #add-point:AFTER FIELD stajsite
{<point name="construct.a.stajsite" />}
            #END add-point
            
 
         #----<<stajunit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stajunit
            #add-point:BEFORE FIELD stajunit
{<point name="construct.b.stajunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stajunit
            
            #add-point:AFTER FIELD stajunit
{<point name="construct.a.stajunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stajunit
         ON ACTION controlp INFIELD stajunit
            #add-point:ON ACTION controlp INFIELD stajunit
{<point name="construct.c.stajunit" />}
            #END add-point
 
         #----<<stajstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stajstus
            #add-point:BEFORE FIELD stajstus
{<point name="construct.b.stajstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stajstus
            
            #add-point:AFTER FIELD stajstus
{<point name="construct.a.stajstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stajstus
         ON ACTION controlp INFIELD stajstus
            #add-point:ON ACTION controlp INFIELD stajstus
{<point name="construct.c.stajstus" />}
            #END add-point
 
         #----<<stajownid>>----
         #Ctrlp:construct.c.stajownid
         ON ACTION controlp INFIELD stajownid
            #add-point:ON ACTION controlp INFIELD stajownid
{<point name="construct.c.stajownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stajownid
            #add-point:BEFORE FIELD stajownid
{<point name="construct.b.stajownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stajownid
            
            #add-point:AFTER FIELD stajownid
{<point name="construct.a.stajownid" />}
            #END add-point
            
 
         #----<<stajowndp>>----
         #Ctrlp:construct.c.stajowndp
         ON ACTION controlp INFIELD stajowndp
            #add-point:ON ACTION controlp INFIELD stajowndp
{<point name="construct.c.stajowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stajowndp
            #add-point:BEFORE FIELD stajowndp
{<point name="construct.b.stajowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stajowndp
            
            #add-point:AFTER FIELD stajowndp
{<point name="construct.a.stajowndp" />}
            #END add-point
            
 
         #----<<stajcrtid>>----
         #Ctrlp:construct.c.stajcrtid
         ON ACTION controlp INFIELD stajcrtid
            #add-point:ON ACTION controlp INFIELD stajcrtid
{<point name="construct.c.stajcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stajcrtid
            #add-point:BEFORE FIELD stajcrtid
{<point name="construct.b.stajcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stajcrtid
            
            #add-point:AFTER FIELD stajcrtid
{<point name="construct.a.stajcrtid" />}
            #END add-point
            
 
         #----<<stajcrtdp>>----
         #Ctrlp:construct.c.stajcrtdp
         ON ACTION controlp INFIELD stajcrtdp
            #add-point:ON ACTION controlp INFIELD stajcrtdp
{<point name="construct.c.stajcrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stajcrtdp
            #add-point:BEFORE FIELD stajcrtdp
{<point name="construct.b.stajcrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stajcrtdp
            
            #add-point:AFTER FIELD stajcrtdp
{<point name="construct.a.stajcrtdp" />}
            #END add-point
            
 
         #----<<stajcrtdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stajcrtdt
            #add-point:BEFORE FIELD stajcrtdt
{<point name="construct.b.stajcrtdt" />}
            #END add-point
 
         #----<<stajmodid>>----
         #Ctrlp:construct.c.stajmodid
         ON ACTION controlp INFIELD stajmodid
            #add-point:ON ACTION controlp INFIELD stajmodid
{<point name="construct.c.stajmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stajmodid
            #add-point:BEFORE FIELD stajmodid
{<point name="construct.b.stajmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stajmodid
            
            #add-point:AFTER FIELD stajmodid
{<point name="construct.a.stajmodid" />}
            #END add-point
            
 
         #----<<stajmoddt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stajmoddt
            #add-point:BEFORE FIELD stajmoddt
{<point name="construct.b.stajmoddt" />}
            #END add-point
 
         #----<<stajcnfid>>----
         #Ctrlp:construct.c.stajcnfid
         ON ACTION controlp INFIELD stajcnfid
            #add-point:ON ACTION controlp INFIELD stajcnfid
{<point name="construct.c.stajcnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stajcnfid
            #add-point:BEFORE FIELD stajcnfid
{<point name="construct.b.stajcnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stajcnfid
            
            #add-point:AFTER FIELD stajcnfid
{<point name="construct.a.stajcnfid" />}
            #END add-point
            
 
         #----<<stajcnfdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stajcnfdt
            #add-point:BEFORE FIELD stajcnfdt
{<point name="construct.b.stajcnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON stakseq,stak003,stak023,stak024,stak025,stak004,stak005,stak006,stak028,stak007,stak008,stak027,stak009,stak010, 
          stak011,stak012,stak013,stak014,stak015,stak016,stak029,stak030,stak022,stak017,stak018,stakacti,stak026,stak019,stak020,stak021,stakunit,staksite
           FROM s_detail1[1].stakseq,s_detail1[1].stak003,s_detail1[1].stak023,s_detail1[1].stak024,  #add by geza stak023,stak024 
               s_detail1[1].stak025,s_detail1[1].stak004,s_detail1[1].stak005, 
               s_detail1[1].stak006,s_detail1[1].stak028,s_detail1[1].stak007,s_detail1[1].stak008,s_detail1[1].stak027,s_detail1[1].stak009,s_detail1[1].stak010,   #150612-00023 #add stak027
               s_detail1[1].stak011,s_detail1[1].stak012,s_detail1[1].stak013,s_detail1[1].stak014,s_detail1[1].stak015, 
               s_detail1[1].stak016,s_detail1[1].stak029,s_detail1[1].stak030,s_detail1[1].stak022,s_detail1[1].stak017,s_detail1[1].stak018,s_detail1[1].stakacti,s_detail1[1].stak026,s_detail1[1].stak019,s_detail1[1].stak020,
               s_detail1[1].stak021,s_detail1[1].stakunit, s_detail1[1].staksite
                      
         BEFORE CONSTRUCT
#saki            CALL cl_qbe_display_condition(lc_qbe_sn)
            #add-point:cs段before_construct
{<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
       #---------------------<  Detail: page1  >---------------------
         #----<<stakseq>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stakseq
            #add-point:BEFORE FIELD stakseq
{<point name="construct.b.page1.stakseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stakseq
            
            #add-point:AFTER FIELD stakseq
{<point name="construct.a.page1.stakseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stakseq
         ON ACTION controlp INFIELD stakseq
            #add-point:ON ACTION controlp INFIELD stakseq
{<point name="construct.c.page1.stakseq" />}
            #END add-point
 
         #----<<stak003>>----
         #Ctrlp:construct.c.page1.stak003
         ON ACTION controlp INFIELD stak003
            #add-point:ON ACTION controlp INFIELD stak003
{<point name="construct.c.page1.stak003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stak003
            #add-point:BEFORE FIELD stak003
{<point name="construct.b.page1.stak003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stak003
            
            #add-point:AFTER FIELD stak003
{<point name="construct.a.page1.stak003" />}
            #END add-point
            
 
         #----<<stak004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stak004
            #add-point:BEFORE FIELD stak004
{<point name="construct.b.page1.stak004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stak004
            
            #add-point:AFTER FIELD stak004
{<point name="construct.a.page1.stak004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stak004
         ON ACTION controlp INFIELD stak004
            #add-point:ON ACTION controlp INFIELD stak004
{<point name="construct.c.page1.stak004" />}
            #END add-point
 
         #----<<stak005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stak005
            #add-point:BEFORE FIELD stak005
{<point name="construct.b.page1.stak005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stak005
            
            #add-point:AFTER FIELD stak005
{<point name="construct.a.page1.stak005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stak005
         ON ACTION controlp INFIELD stak005
            #add-point:ON ACTION controlp INFIELD stak005
{<point name="construct.c.page1.stak005" />}
            #END add-point
 
         #----<<stak006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stak006
            #add-point:BEFORE FIELD stak006
{<point name="construct.b.page1.stak006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stak006
            
            #add-point:AFTER FIELD stak006
{<point name="construct.a.page1.stak006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stak006
         ON ACTION controlp INFIELD stak006
            #add-point:ON ACTION controlp INFIELD stak006
{<point name="construct.c.page1.stak006" />}
            #END add-point
 
         #----<<stak007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stak007
            #add-point:BEFORE FIELD stak007
{<point name="construct.b.page1.stak007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stak007
            
            #add-point:AFTER FIELD stak007
{<point name="construct.a.page1.stak007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stak007
         ON ACTION controlp INFIELD stak007
            #add-point:ON ACTION controlp INFIELD stak007
{<point name="construct.c.page1.stak007" />}
            #END add-point
 
         #----<<stak008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stak008
            #add-point:BEFORE FIELD stak008
{<point name="construct.b.page1.stak008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stak008
            
            #add-point:AFTER FIELD stak008
{<point name="construct.a.page1.stak008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stak008
         ON ACTION controlp INFIELD stak008
            #add-point:ON ACTION controlp INFIELD stak008
{<point name="construct.c.page1.stak008" />}
            #END add-point
 
         #----<<stak009>>----
         #Ctrlp:construct.c.page1.stak009
         ON ACTION controlp INFIELD stak009
            #add-point:ON ACTION controlp INFIELD stak009
{<point name="construct.c.page1.stak009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stak009
            #add-point:BEFORE FIELD stak009
{<point name="construct.b.page1.stak009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stak009
            
            #add-point:AFTER FIELD stak009
{<point name="construct.a.page1.stak009" />}
            #END add-point
            
 
         #----<<stak010>>----
         #Ctrlp:construct.c.page1.stak010
         ON ACTION controlp INFIELD stak010
            #add-point:ON ACTION controlp INFIELD stak010
{<point name="construct.c.page1.stak010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stak010
            #add-point:BEFORE FIELD stak010
{<point name="construct.b.page1.stak010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stak010
            
            #add-point:AFTER FIELD stak010
{<point name="construct.a.page1.stak010" />}
            #END add-point
            
 
         #----<<stak011>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stak011
            #add-point:BEFORE FIELD stak011
{<point name="construct.b.page1.stak011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stak011
            
            #add-point:AFTER FIELD stak011
{<point name="construct.a.page1.stak011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stak011
         ON ACTION controlp INFIELD stak011
            #add-point:ON ACTION controlp INFIELD stak011
{<point name="construct.c.page1.stak011" />}
            #END add-point
 
         #----<<stak012>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stak012
            #add-point:BEFORE FIELD stak012
{<point name="construct.b.page1.stak012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stak012
            
            #add-point:AFTER FIELD stak012
{<point name="construct.a.page1.stak012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stak012
         ON ACTION controlp INFIELD stak012
            #add-point:ON ACTION controlp INFIELD stak012
{<point name="construct.c.page1.stak012" />}
            #END add-point
 
         #----<<stak013>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stak013
            #add-point:BEFORE FIELD stak013
{<point name="construct.b.page1.stak013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stak013
            
            #add-point:AFTER FIELD stak013
{<point name="construct.a.page1.stak013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stak013
         ON ACTION controlp INFIELD stak013
            #add-point:ON ACTION controlp INFIELD stak013
{<point name="construct.c.page1.stak013" />}
            #END add-point
 
         #----<<stak014>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stak014
            #add-point:BEFORE FIELD stak014
{<point name="construct.b.page1.stak014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stak014
            
            #add-point:AFTER FIELD stak014
{<point name="construct.a.page1.stak014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stak014
         ON ACTION controlp INFIELD stak014
            #add-point:ON ACTION controlp INFIELD stak014
{<point name="construct.c.page1.stak014" />}
            #END add-point
 
         #----<<stak015>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stak015
            #add-point:BEFORE FIELD stak015
{<point name="construct.b.page1.stak015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stak015
            
            #add-point:AFTER FIELD stak015
{<point name="construct.a.page1.stak015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stak015
         ON ACTION controlp INFIELD stak015
            #add-point:ON ACTION controlp INFIELD stak015
{<point name="construct.c.page1.stak015" />}
            #END add-point
 
         #----<<stak016>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stak016
            #add-point:BEFORE FIELD stak016
{<point name="construct.b.page1.stak016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stak016
            
            #add-point:AFTER FIELD stak016
{<point name="construct.a.page1.stak016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stak016
         ON ACTION controlp INFIELD stak016
            #add-point:ON ACTION controlp INFIELD stak016
{<point name="construct.c.page1.stak016" />}
            #END add-point
 
         #----<<stak017>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stak017
            #add-point:BEFORE FIELD stak017
{<point name="construct.b.page1.stak017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stak017
            
            #add-point:AFTER FIELD stak017
{<point name="construct.a.page1.stak017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stak017
         ON ACTION controlp INFIELD stak017
            #add-point:ON ACTION controlp INFIELD stak017
{<point name="construct.c.page1.stak017" />}
            #END add-point
 
         #----<<stak018>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stak018
            #add-point:BEFORE FIELD stak018
{<point name="construct.b.page1.stak018" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stak018
            
            #add-point:AFTER FIELD stak018
{<point name="construct.a.page1.stak018" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stak018
         ON ACTION controlp INFIELD stak018
            #add-point:ON ACTION controlp INFIELD stak018
{<point name="construct.c.page1.stak018" />}
            #END add-point
 
         #----<<stak019>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stak019
            #add-point:BEFORE FIELD stak019
{<point name="construct.b.page1.stak019" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stak019
            
            #add-point:AFTER FIELD stak019
{<point name="construct.a.page1.stak019" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stak019
         ON ACTION controlp INFIELD stak019
            #add-point:ON ACTION controlp INFIELD stak019
{<point name="construct.c.page1.stak019" />}
            #END add-point
 
         #----<<stakunit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stakunit
            #add-point:BEFORE FIELD stakunit
{<point name="construct.b.page1.stakunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stakunit
            
            #add-point:AFTER FIELD stakunit
{<point name="construct.a.page1.stakunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stakunit
         ON ACTION controlp INFIELD stakunit
            #add-point:ON ACTION controlp INFIELD stakunit
{<point name="construct.c.page1.stakunit" />}
            #END add-point
 
         #----<<staksite>>----
         #此段落由子樣板a01產生
         BEFORE FIELD staksite
            #add-point:BEFORE FIELD staksite
{<point name="construct.b.page1.staksite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD staksite
            
            #add-point:AFTER FIELD staksite
{<point name="construct.a.page1.staksite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.staksite
         ON ACTION controlp INFIELD staksite
            #add-point:ON ACTION controlp INFIELD staksite
{<point name="construct.c.page1.staksite" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON stamseq,stam003,stam005,stam004,stamacti,stamunit,stamsite
           FROM s_detail2[1].stamseq,s_detail2[1].stam003,s_detail2[1].stam005,s_detail2[1].stam004,s_detail2[1].stamacti,s_detail2[1].stamunit, 
               s_detail2[1].stamsite
                      
         BEFORE CONSTRUCT
#saki            CALL cl_qbe_display_condition(lc_qbe_sn)
            #add-point:cs段before_construct
{<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
       #---------------------<  Detail: page2  >---------------------
         #----<<stamseq>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stamseq
            #add-point:BEFORE FIELD stamseq
{<point name="construct.b.page2.stamseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stamseq
            
            #add-point:AFTER FIELD stamseq
{<point name="construct.a.page2.stamseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stamseq
         ON ACTION controlp INFIELD stamseq
            #add-point:ON ACTION controlp INFIELD stamseq
{<point name="construct.c.page2.stamseq" />}
            #END add-point
 
         #----<<stam003>>----
         #Ctrlp:construct.c.page2.stam003
         ON ACTION controlp INFIELD stam003
            #add-point:ON ACTION controlp INFIELD stam003
{<point name="construct.c.page2.stam003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stam003
            #add-point:BEFORE FIELD stam003
{<point name="construct.b.page2.stam003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stam003
            
            #add-point:AFTER FIELD stam003
{<point name="construct.a.page2.stam003" />}
            #END add-point
            
 
         #----<<stam004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stam004
            #add-point:BEFORE FIELD stam004
{<point name="construct.b.page2.stam004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stam004
            
            #add-point:AFTER FIELD stam004
{<point name="construct.a.page2.stam004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stam004
         ON ACTION controlp INFIELD stam004
            #add-point:ON ACTION controlp INFIELD stam004
{<point name="construct.c.page2.stam004" />}
            #END add-point
 
         #----<<stamunit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stamunit
            #add-point:BEFORE FIELD stamunit
{<point name="construct.b.page2.stamunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stamunit
            
            #add-point:AFTER FIELD stamunit
{<point name="construct.a.page2.stamunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stamunit
         ON ACTION controlp INFIELD stamunit
            #add-point:ON ACTION controlp INFIELD stamunit
{<point name="construct.c.page2.stamunit" />}
            #END add-point
 
         #----<<stamsite>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stamsite
            #add-point:BEFORE FIELD stamsite
{<point name="construct.b.page2.stamsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stamsite
            
            #add-point:AFTER FIELD stamsite
{<point name="construct.a.page2.stamsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stamsite
         ON ACTION controlp INFIELD stamsite
            #add-point:ON ACTION controlp INFIELD stamsite
{<point name="construct.c.page2.stamsite" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
{<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:cs段b_dialog
{<point name="cs.b_dialog"/>}
         #end add-point  
 
      ON ACTION qbe_select     #條件查詢
#saki         CALL cl_qbe_list() RETURNING lc_qbe_sn
#saki         CALL cl_qbe_display_condition(lc_qbe_sn)
 
      ON ACTION qbe_save       #條件儲存
#saki         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
 
 
 
   
   #add-point:cs段結束前
{<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION

{</section>}

{<section id="astt301.filter" >}
#+ filter過濾功能
PRIVATE FUNCTION astt301_filter()
   #add-point:filter段define
{<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON stajdocno,stajdocdt,staj000,staj001,staj002,staj003,staj004,staj005,staj006, 
          staj007,staj008, 
          staj009,staj010,staj011,staj012,staj013,staj014,staj015,staj016,staj017,staj018, 
          staj019,staj020,staj021,stajsite,stajacti
                          FROM s_browse[1].b_stajdocno,s_browse[1].b_stajdocdt,s_browse[1].b_staj000, 
                              s_browse[1].b_staj001,s_browse[1].b_staj002,s_browse[1].b_staj003,s_browse[1].b_staj004, 
                              s_browse[1].b_staj005,s_browse[1].b_staj006,s_browse[1].b_staj007,s_browse[1].b_staj008,
                              s_browse[1].b_staj009,s_browse[1].b_staj010,s_browse[1].b_staj011,s_browse[1].b_staj012, 
                              s_browse[1].b_staj013,s_browse[1].b_staj014,s_browse[1].b_staj015,s_browse[1].b_staj016, 
                              s_browse[1].b_staj017,s_browse[1].b_staj018,s_browse[1].b_staj019,s_browse[1].b_staj020, 
                              s_browse[1].b_staj021,s_browse[1].b_stajsite,s_browse[1].b_stajacti
 
         BEFORE CONSTRUCT
               DISPLAY astt301_filter_parser('stajdocno') TO s_browse[1].b_stajdocno
            DISPLAY astt301_filter_parser('stajdocdt') TO s_browse[1].b_stajdocdt
            DISPLAY astt301_filter_parser('staj000') TO s_browse[1].b_staj000
            DISPLAY astt301_filter_parser('staj001') TO s_browse[1].b_staj001
            #DISPLAY '1' TO s_browse[1].b_staj002
            DISPLAY astt301_filter_parser('staj003') TO s_browse[1].b_staj003
            DISPLAY astt301_filter_parser('staj004') TO s_browse[1].b_staj004
            DISPLAY astt301_filter_parser('staj005') TO s_browse[1].b_staj005
            DISPLAY astt301_filter_parser('staj006') TO s_browse[1].b_staj006
            DISPLAY astt301_filter_parser('staj007') TO s_browse[1].b_staj007
            DISPLAY astt301_filter_parser('staj008') TO s_browse[1].b_staj008
          
            DISPLAY astt301_filter_parser('staj009') TO s_browse[1].b_staj009
            DISPLAY astt301_filter_parser('staj010') TO s_browse[1].b_staj010
            DISPLAY astt301_filter_parser('staj011') TO s_browse[1].b_staj011
            DISPLAY astt301_filter_parser('staj012') TO s_browse[1].b_staj012
            DISPLAY astt301_filter_parser('staj013') TO s_browse[1].b_staj013
            DISPLAY astt301_filter_parser('staj014') TO s_browse[1].b_staj014
            DISPLAY astt301_filter_parser('staj015') TO s_browse[1].b_staj015
            DISPLAY astt301_filter_parser('staj016') TO s_browse[1].b_staj016
            DISPLAY astt301_filter_parser('staj017') TO s_browse[1].b_staj017
            DISPLAY astt301_filter_parser('staj018') TO s_browse[1].b_staj018
            DISPLAY astt301_filter_parser('staj019') TO s_browse[1].b_staj019
            DISPLAY astt301_filter_parser('staj020') TO s_browse[1].b_staj020
            DISPLAY astt301_filter_parser('staj021') TO s_browse[1].b_staj021
            DISPLAY astt301_filter_parser('stajsite') TO s_browse[1].b_stajsite
            DISPLAY astt301_filter_parser('stajacti') TO s_browse[1].b_stajacti
      
                            #add-point:filter段cs_ctrl
{<point name="filter.cs_ctrl"/>}
                            #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
{<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
{<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL astt301_filter_show('stajdocno')
   CALL astt301_filter_show('stajdocdt')
   CALL astt301_filter_show('staj000')
   CALL astt301_filter_show('staj001')
   CALL astt301_filter_show('staj002')
   CALL astt301_filter_show('staj003')
   CALL astt301_filter_show('staj004')
   CALL astt301_filter_show('staj005')
   CALL astt301_filter_show('staj006')
   CALL astt301_filter_show('staj007')
   CALL astt301_filter_show('staj008')

   CALL astt301_filter_show('staj009')
   CALL astt301_filter_show('staj010')
   CALL astt301_filter_show('staj011')
   CALL astt301_filter_show('staj012')
   CALL astt301_filter_show('staj013')
   CALL astt301_filter_show('staj014')
   CALL astt301_filter_show('staj015')
   CALL astt301_filter_show('staj016')
   CALL astt301_filter_show('staj017')
   CALL astt301_filter_show('staj018')
   CALL astt301_filter_show('staj019')
   CALL astt301_filter_show('staj020')
   CALL astt301_filter_show('staj021')
   CALL astt301_filter_show('stajsite')
END FUNCTION

{</section>}

{<section id="astt301.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION astt301_filter_parser(ps_field)
   {<Local define>}
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   {</Local define>}
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION

{</section>}

{<section id="astt301.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION astt301_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
     
   LET ls_name = "formonly.b_", ps_field
   
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
   
   #顯示資料組合
   LET ls_condition = astt301_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
   
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
   
END FUNCTION

{</section>}

{<section id="astt301.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION astt301_query()
   {<Local define>}
   DEFINE ls_wc STRING
   {</Local define>}
   #add-point:query段define
{<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_stak_d.clear()
   CALL g_stak2_d.clear()
 
 
   
   #add-point:query段other
{<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL astt301_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL astt301_browser_fill("")
      CALL astt301_fetch("")
      RETURN
   END IF
   
   #搜尋後資料初始化
   LET g_detail_cnt = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   LET l_ac = 1
   LET g_wc_filter = ""
   CALL FGL_SET_ARR_CURR(1)
      CALL astt301_filter_show('stajdocno')
   CALL astt301_filter_show('stajdocdt')
   CALL astt301_filter_show('staj000')
   CALL astt301_filter_show('staj001')
   CALL astt301_filter_show('staj002')
   CALL astt301_filter_show('staj003')
   CALL astt301_filter_show('staj004')
   CALL astt301_filter_show('staj005')
   CALL astt301_filter_show('staj006')
   CALL astt301_filter_show('staj007')
   CALL astt301_filter_show('staj008')
  ##150506-00007#3 150522 by sakura add---STR
  #CALL astt301_filter_show('staj024')
  #CALL astt301_filter_show('staj025')
  #CALL astt301_filter_show('staj026')
  #CALL astt301_filter_show('staj027')
  #CALL astt301_filter_show('staj028')
  #CALL astt301_filter_show('staj029')
  #CALL astt301_filter_show('staj030')
  ##150506-00007#3 150522 by sakura add---END
  #CALL astt301_filter_show('staj031')
  #CALL astt301_filter_show('staj032')
   CALL astt301_filter_show('staj009')
   CALL astt301_filter_show('staj010')
   CALL astt301_filter_show('staj011')
   CALL astt301_filter_show('staj012')
   CALL astt301_filter_show('staj013')
   CALL astt301_filter_show('staj014')
   CALL astt301_filter_show('staj015')
   CALL astt301_filter_show('staj016')
   CALL astt301_filter_show('staj017')
   CALL astt301_filter_show('staj018')
   CALL astt301_filter_show('staj019')
   CALL astt301_filter_show('staj020')
   CALL astt301_filter_show('staj021')
   CALL astt301_filter_show('stajsite')
   LET g_error_show = 1
   CALL astt301_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "-100"
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()

   ELSE
      CALL astt301_fetch("F") 
   END IF
 
END FUNCTION

{</section>}

{<section id="astt301.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION astt301_fetch(p_flag)
   {<Local define>}
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   {</Local define>}
   #add-point:fetch段define
{<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_staj_m.stajdocno = g_browser[g_current_idx].b_stajdocno
 
   
   #重讀DB,因TEMP有不被更新特性
    SELECT UNIQUE staj000,stajdocno,stajdocdt,staj002,staj001,staj003,staj021,staj004,staj005,staj006, 
        staj007,staj008,
        staj024,staj025,staj040,staj026,staj027,staj028,staj036,staj037,staj038,staj029,staj030, #150506-00007#3 150522 by sakura add
        staj031,staj033,staj035,staj034,staj042,  #160303-00028#33 20160318 by geza 
        staj009,staj010,staj015,staj039,staj016,staj011,staj012,staj013,staj014,staj041,staj017, 
        staj018,staj019,staj020,stajsite,stajunit,stajstus,stajownid,stajowndp,stajcrtid,stajcrtdp,stajcrtdt, 
        stajmodid,stajmoddt,stajcnfid,stajcnfdt
 INTO g_staj_m.staj000,g_staj_m.stajdocno,g_staj_m.stajdocdt,g_staj_m.staj002,g_staj_m.staj001,g_staj_m.staj003, 
     g_staj_m.staj021,g_staj_m.staj004,g_staj_m.staj005,g_staj_m.staj006,g_staj_m.staj007,g_staj_m.staj008, 
     g_staj_m.staj024,g_staj_m.staj025,g_staj_m.staj040,g_staj_m.staj026,g_staj_m.staj027,g_staj_m.staj028,
     g_staj_m.staj036,g_staj_m.staj037,g_staj_m.staj038,g_staj_m.staj029,g_staj_m.staj030, #150506-00007#3 150522 by sakura add
     g_staj_m.staj031,g_staj_m.staj033,g_staj_m.staj035,g_staj_m.staj034,g_staj_m.staj042, #160303-00028#33 20160318 by geza
     g_staj_m.staj009,g_staj_m.staj010,g_staj_m.staj015,g_staj_m.staj039,g_staj_m.staj016,g_staj_m.staj011, 
     g_staj_m.staj012,g_staj_m.staj013,g_staj_m.staj014,g_staj_m.staj041,g_staj_m.staj017,g_staj_m.staj018,g_staj_m.staj019, 
     g_staj_m.staj020,g_staj_m.stajsite,g_staj_m.stajunit,g_staj_m.stajstus,g_staj_m.stajownid,g_staj_m.stajowndp, 
     g_staj_m.stajcrtid,g_staj_m.stajcrtdp,g_staj_m.stajcrtdt,g_staj_m.stajmodid,g_staj_m.stajmoddt, 
     g_staj_m.stajcnfid,g_staj_m.stajcnfdt
 FROM staj_t
 WHERE stajent = g_enterprise AND stajdocno = g_staj_m.stajdocno
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "staj_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      INITIALIZE g_staj_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
{<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
{<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL astt301_show()
 
END FUNCTION

{</section>}

{<section id="astt301.insert" >}
#+ 資料新增
PRIVATE FUNCTION astt301_insert()
   #add-point:insert段define
{<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_stak_d.clear()   
   CALL g_stak2_d.clear()
   CALL g_stak3_d.clear()
   CALL g_stak4_d.clear()
   CALL g_stal_d.clear()    
   CALL g_staw_d.clear()
   CALL g_stay_d.clear()
   CALL g_stay1_d.clear()
   CALL g_stbw_d.clear()
 
 
   INITIALIZE g_staj_m.* LIKE staj_t.*             #DEFAULT 設定
   
   LET g_stajdocno_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_staj_m.stajownid = g_user
      LET g_staj_m.stajowndp = g_dept
      LET g_staj_m.stajcrtid = g_user
      LET g_staj_m.stajcrtdp = g_dept 
      LET g_staj_m.stajcrtdt = cl_get_current()
      LET g_staj_m.stajmodid = ""
      LET g_staj_m.stajmoddt = ""
      #LET g_staj_m.stajstus = ""
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_staj_m.staj000 = "I"
      LET g_staj_m.staj002 = "1"
      LET g_staj_m.stanstus = "N"
 
  
      #add-point:單頭預設值
{<point name="insert.default"/>}
      #end add-point 
     
      CALL astt301_input("a")
      
      #add-point:單頭輸入後
{<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_staj_m.* = g_staj_m_t.*
         CALL astt301_show()
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 9001
         LET g_errparam.extend = ''
         LET g_errparam.popup = FALSE
         CALL cl_err()

         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_stak_d.clear()
      CALL g_stak2_d.clear()
      CALL g_stak3_d.clear()
      CALL g_stak4_d.clear()
      CALL g_staw_d.clear()
      CALL g_stay_d.clear()
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   
   LET g_stajdocno_t = g_staj_m.stajdocno
 
   
   LET g_wc = g_wc,  
              " OR ( stajent = '" ||g_enterprise|| "' AND",
              " stajdocno = '", g_staj_m.stajdocno CLIPPED, "' "
 
              , ") "
   
   CLOSE astt301_cl
   
END FUNCTION

{</section>}

{<section id="astt301.modify" >}
#+ 資料修改
PRIVATE FUNCTION astt301_modify()
   {<Local define>}
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:modify段define
{<point name="modify.define"/>}
   #end add-point    
   
   IF g_staj_m.stajdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN
   END IF
   
    SELECT UNIQUE staj000,staj039,stajdocno,stajdocdt,staj002,staj001,staj003,staj021,staj004,staj005,staj006, 
        staj007,staj008,
        staj024,staj025,staj026,staj027,staj028,staj029,staj030, #150506-00007#3 150522 by sakura add
        staj031,staj033,staj034,
        staj009,staj010,staj015,staj016,staj011,staj012,staj013,staj014,staj017, 
        staj018,staj019,staj020,stajsite,stajunit,stajstus,stajownid,stajowndp,stajcrtid,stajcrtdp,stajcrtdt, 
        stajmodid,stajmoddt,stajcnfid,stajcnfdt
 INTO g_staj_m.staj000,g_staj_m.staj039,g_staj_m.stajdocno,g_staj_m.stajdocdt,g_staj_m.staj002,g_staj_m.staj001,g_staj_m.staj003, 
     g_staj_m.staj021,g_staj_m.staj004,g_staj_m.staj005,g_staj_m.staj006,g_staj_m.staj007,g_staj_m.staj008, 
     g_staj_m.staj024,g_staj_m.staj025,g_staj_m.staj026,g_staj_m.staj027,g_staj_m.staj028,g_staj_m.staj029,g_staj_m.staj030, #150506-00007#3 150522 by sakura add
     g_staj_m.staj031,g_staj_m.staj033,g_staj_m.staj034,
     g_staj_m.staj009,g_staj_m.staj010,g_staj_m.staj015,g_staj_m.staj016,g_staj_m.staj011,
     g_staj_m.staj012,g_staj_m.staj013,g_staj_m.staj014,g_staj_m.staj017,g_staj_m.staj018,g_staj_m.staj019, 
     g_staj_m.staj020,g_staj_m.stajsite,g_staj_m.stajunit,g_staj_m.stajstus,g_staj_m.stajownid,g_staj_m.stajowndp, 
     g_staj_m.stajcrtid,g_staj_m.stajcrtdp,g_staj_m.stajcrtdt,g_staj_m.stajmodid,g_staj_m.stajmoddt, 
     g_staj_m.stajcnfid,g_staj_m.stajcnfdt
 FROM staj_t
 WHERE stajent = g_enterprise AND stajdocno = g_staj_m.stajdocno
 
   ERROR ""
  
   LET g_stajdocno_t = g_staj_m.stajdocno
 
   CALL s_transaction_begin()
   
   OPEN astt301_cl USING g_enterprise,g_staj_m.stajdocno
 
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code =  STATUS
      LET g_errparam.extend = "OPEN astt301_cl:"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CLOSE astt301_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH astt301_cl INTO g_staj_m.staj000,g_staj_m.staj039,g_staj_m.stajdocno,g_staj_m.stajdocdt,g_staj_m.staj002,g_staj_m.staj001, 
       g_staj_m.staj003,g_staj_m.staj021,g_staj_m.stanstus,g_staj_m.staj004,g_staj_m.staj004_desc,g_staj_m.staj005, 
       g_staj_m.staj005_desc,g_staj_m.staj006,g_staj_m.staj006_desc,g_staj_m.staj007,g_staj_m.staj007_desc, 
       g_staj_m.staj008,g_staj_m.staj008_desc,
       g_staj_m.staj024,g_staj_m.staj024_desc,g_staj_m.staj025,g_staj_m.staj025_desc,g_staj_m.staj040,g_staj_m.staj026, #150506-00007#3 150522 by sakura add
       g_staj_m.staj027,g_staj_m.staj028,g_staj_m.staj036,g_staj_m.staj037,g_staj_m.staj038,g_staj_m.staj029,g_staj_m.staj030,                            #150506-00007#3 150522 by sakura add
       g_staj_m.staj031,g_staj_m.staj033,g_staj_m.staj034,g_staj_m.staj042,
       g_staj_m.staj009,g_staj_m.staj009_desc,g_staj_m.staj010,g_staj_m.staj010_desc, 
       g_staj_m.staj015,g_staj_m.staj015_desc,g_staj_m.staj016,g_staj_m.staj016_desc,g_staj_m.staj011, 
       g_staj_m.staj012,g_staj_m.staj013,g_staj_m.staj013_desc,g_staj_m.staj014,g_staj_m.staj014_desc,g_staj_m.staj041,g_staj_m.staj041_desc,
       g_staj_m.staj017,g_staj_m.staj018,g_staj_m.staj019,g_staj_m.staj020,g_staj_m.stajsite,g_staj_m.stajsite_desc, 
       g_staj_m.stajunit,g_staj_m.stajstus,g_staj_m.stajownid,g_staj_m.stajownid_desc,g_staj_m.stajowndp, 
       g_staj_m.stajowndp_desc,g_staj_m.stajcrtid,g_staj_m.stajcrtid_desc,g_staj_m.stajcrtdp,g_staj_m.stajcrtdp_desc, 
       g_staj_m.stajcrtdt,g_staj_m.stajmodid,g_staj_m.stajmodid_desc,g_staj_m.stajmoddt,g_staj_m.stajcnfid, 
       g_staj_m.stajcnfid_desc,g_staj_m.stajcnfdt
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = g_staj_m.stajdocno
      LET g_errparam.popup = FALSE
      CALL cl_err()

      CLOSE astt301_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
 
   CALL astt301_show()
   WHILE TRUE
      LET g_stajdocno_t = g_staj_m.stajdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_staj_m.stajmodid = g_user 
LET g_staj_m.stajmoddt = cl_get_current()
 
      
      #add-point:modify段修改前
{<point name="modify.before_input"/>}
      #end add-point
      
      CALL astt301_input("u")     #欄位更改
 
      #add-point:modify段修改後
{<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_staj_m.* = g_staj_m_t.*
         CALL astt301_show()
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 9001
         LET g_errparam.extend = ''
         LET g_errparam.popup = FALSE
         CALL cl_err()

         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更
      IF g_staj_m.stajdocno != g_stajdocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
{<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE stak_t SET stakdocno = g_staj_m.stajdocno
 
          WHERE stakent = g_enterprise AND stakdocno = g_stajdocno_t
 
            
         #add-point:單身fk修改中
{<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00009"
               LET g_errparam.extend = "stak_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "stak_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()
  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
{<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前
{<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         UPDATE stam_t
            SET stamdocno = g_staj_m.stajdocno
 
          WHERE stament = g_enterprise AND
                stamdocno = g_stajdocno_t
 
         #add-point:單身fk修改中
{<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00009"
               LET g_errparam.extend = "stam_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "stam_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()
  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
{<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
 
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   IF NOT cl_log_modified_record(g_staj_m.stajdocno,g_site) THEN 
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE astt301_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_staj_m.stajdocno,'U')
   
END FUNCTION   

{</section>}

{<section id="astt301.input" >}
#+ 資料輸入
PRIVATE FUNCTION astt301_input(p_cmd)
   {<Local define>}
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   {</Local define>}
   #add-point:input段define
{<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
{<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT stakseq,stak003,'',stak023,stak024,stak025,'',stak004,stak005,stak006,stak028,stak007,stak008,stak027,stak009,'',   
       stak010,'',stak011,stak012,stak013,stak014,stak015,stak016,stak029,stak030,stak022,stak017,stak018,stak019,stakunit,staksite  
       FROM stak_t WHERE stakent=? AND stakdocno=? AND stakseq=? FOR UPDATE"  #add by geza 20150610  stak023,stak024 #150612-00023#5 add stak027
   #add-point:input段define_sql
{<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE astt301_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql
{<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT stamseq,stam003,'',stam005,stam004,stamunit,stamsite FROM stam_t WHERE stament=?  
       AND stamdocno=? AND stamseq=? FOR UPDATE"
   #add-point:input段define_sql
{<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE astt301_bcl2 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql
{<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL astt301_set_entry(p_cmd)
   #add-point:set_entry後
{<point name="input.after_set_entry"/>}
   #end add-point
   CALL astt301_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_staj_m.stajsite,g_staj_m.stajdocdt,g_staj_m.stajdocno,g_staj_m.staj000,g_staj_m.staj039,g_staj_m.staj001,g_staj_m.staj003,
              g_staj_m.staj004,g_staj_m.staj002,g_staj_m.staj031,g_staj_m.staj021,g_staj_m.staj005,g_staj_m.staj016,
              g_staj_m.staj017,g_staj_m.staj018,g_staj_m.staj012,g_staj_m.staj014,g_staj_m.staj041,g_staj_m.staj013,
              g_staj_m.staj036,g_staj_m.staj037,g_staj_m.staj038,g_staj_m.staj015,g_staj_m.staj009,g_staj_m.staj010,
              g_staj_m.staj034,g_staj_m.staj042,g_staj_m.staj033,g_staj_m.staj035,g_staj_m.staj019,g_staj_m.staj020,g_staj_m.staj029,
              g_staj_m.staj030,g_staj_m.staj008,g_staj_m.staj024,g_staj_m.staj006,g_staj_m.staj007,g_staj_m.staj025,
              g_staj_m.staj040,g_staj_m.staj026,g_staj_m.staj027,g_staj_m.staj028,g_staj_m.staj011,g_staj_m.stajstus

   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
{<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   

{</section>}

{<section id="astt301.input.head" >}
      #單頭段
      INPUT BY NAME g_staj_m.stajsite,g_staj_m.stajdocdt,g_staj_m.stajdocno,g_staj_m.staj000,g_staj_m.staj039,g_staj_m.staj001,
              g_staj_m.staj003,g_staj_m.staj004,g_staj_m.staj002,g_staj_m.staj021,g_staj_m.staj005,g_staj_m.staj016,
              g_staj_m.staj017,g_staj_m.staj018,g_staj_m.staj012,g_staj_m.staj014,g_staj_m.staj041,g_staj_m.staj013,
              g_staj_m.staj036,g_staj_m.staj037,g_staj_m.staj038,g_staj_m.staj015,g_staj_m.staj009,g_staj_m.staj010,
              g_staj_m.staj034,g_staj_m.staj042,g_staj_m.staj033,g_staj_m.staj035,g_staj_m.staj019,g_staj_m.staj020,g_staj_m.staj029,
              g_staj_m.staj030,g_staj_m.staj008,g_staj_m.staj024,g_staj_m.staj006,g_staj_m.staj007,g_staj_m.staj025,
              g_staj_m.staj040,g_staj_m.staj026,g_staj_m.staj027,g_staj_m.staj028,g_staj_m.staj011,g_staj_m.stajstus
              
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:資料輸入前
{<point name="input.m.before_input"/>}
            #end add-point
 
         #---------------------------<  Master  >---------------------------
         #----<<staj000>>----
         #此段落由子樣板a01產生
         BEFORE FIELD staj000
            #add-point:BEFORE FIELD staj000
{<point name="input.b.staj000" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD staj000
            
            #add-point:AFTER FIELD staj000
{<point name="input.a.staj000" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE staj000
            #add-point:ON CHANGE staj000
{<point name="input.g.staj000" />}
            #END add-point
 
         AFTER FIELD staj039
            IF NOT cl_null(g_staj_m.staj039) THEN
               #延期日期不为空            
               IF NOT cl_null(g_staj_m.staj033) THEN 
                  IF g_staj_m.staj039 > g_staj_m.staj033 OR g_staj_m.staj039 < g_staj_m.staj017 THEN 
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'ast-00484'
                     LET g_errparam.extend = g_site
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_staj_m.staj039 = g_staj_m_t.staj039
                     NEXT FIELD staj039
                  END IF 
               ELSE
                  IF g_staj_m.staj039 > g_staj_m.staj018 OR g_staj_m.staj039 < g_staj_m.staj017 THEN 
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'ast-00484'
                     LET g_errparam.extend = g_site
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_staj_m.staj039 = g_staj_m_t.staj039
                     NEXT FIELD staj039
                  END IF 
               END IF 
            END IF 
         #----<<stajdocno>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stajdocno
            #add-point:BEFORE FIELD stajdocno
{<point name="input.b.stajdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stajdocno
            
            #add-point:AFTER FIELD stajdocno
{<point name="input.a.stajdocno" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stajdocno
            #add-point:ON CHANGE stajdocno
{<point name="input.g.stajdocno" />}
            #END add-point
 
         #----<<stajdocdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stajdocdt
            #add-point:BEFORE FIELD stajdocdt
{<point name="input.b.stajdocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stajdocdt
            
            #add-point:AFTER FIELD stajdocdt
{<point name="input.a.stajdocdt" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stajdocdt
            #add-point:ON CHANGE stajdocdt
{<point name="input.g.stajdocdt" />}
            #END add-point
 
         #----<<staj002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD staj002
            #add-point:BEFORE FIELD staj002
{<point name="input.b.staj002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD staj002
            
            #add-point:AFTER FIELD staj002
{<point name="input.a.staj002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE staj002
            #add-point:ON CHANGE staj002
{<point name="input.g.staj002" />}
            #END add-point
 
         #----<<staj001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD staj001
            #add-point:BEFORE FIELD staj001
{<point name="input.b.staj001" />}
            #END add-point
   
         #此段落由子樣板a02產生
         AFTER FIELD staj001
            
            #add-point:AFTER FIELD staj001
{<point name="input.a.staj001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE staj001
            #add-point:ON CHANGE staj001
{<point name="input.g.staj001" />}
            #END add-point
 
         #----<<staj003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD staj003
            #add-point:BEFORE FIELD staj003
{<point name="input.b.staj003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD staj003
            
            #add-point:AFTER FIELD staj003
{<point name="input.a.staj003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE staj003
            #add-point:ON CHANGE staj003
{<point name="input.g.staj003" />}
            #END add-point
 
         #----<<staj021>>----
         #此段落由子樣板a01產生
         BEFORE FIELD staj021
            #add-point:BEFORE FIELD staj021
{<point name="input.b.staj021" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD staj021
            
            #add-point:AFTER FIELD staj021
{<point name="input.a.staj021" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE staj021
            #add-point:ON CHANGE staj021
{<point name="input.g.staj021" />}
            #END add-point
 
         #----<<stanstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stanstus
            #add-point:BEFORE FIELD stanstus
{<point name="input.b.stanstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stanstus
            
            #add-point:AFTER FIELD stanstus
{<point name="input.a.stanstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stanstus
            #add-point:ON CHANGE stanstus
{<point name="input.g.stanstus" />}
            #END add-point
 
         #----<<staj004>>----
         #此段落由子樣板a02產生
         AFTER FIELD staj004
            
            #add-point:AFTER FIELD staj004
{<point name="input.a.staj004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD staj004
            #add-point:BEFORE FIELD staj004
{<point name="input.b.staj004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE staj004
            #add-point:ON CHANGE staj004
{<point name="input.g.staj004" />}
            #END add-point
 
         #----<<staj005>>----
         #此段落由子樣板a02產生
         AFTER FIELD staj005
            
            #add-point:AFTER FIELD staj005
{<point name="input.a.staj005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD staj005
            #add-point:BEFORE FIELD staj005
{<point name="input.b.staj005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE staj005
            #add-point:ON CHANGE staj005
{<point name="input.g.staj005" />}
            #END add-point
 
         #----<<staj006>>----
         #此段落由子樣板a02產生
         AFTER FIELD staj006
            
            #add-point:AFTER FIELD staj006
{<point name="input.a.staj006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD staj006
            #add-point:BEFORE FIELD staj006
{<point name="input.b.staj006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE staj006
            #add-point:ON CHANGE staj006
{<point name="input.g.staj006" />}
            #END add-point
 
         #----<<staj007>>----
         #此段落由子樣板a02產生
         AFTER FIELD staj007
            
            #add-point:AFTER FIELD staj007
{<point name="input.a.staj007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD staj007
            #add-point:BEFORE FIELD staj007
{<point name="input.b.staj007" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE staj007
            #add-point:ON CHANGE staj007
{<point name="input.g.staj007" />}
            #END add-point
 
         #----<<staj008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD staj008
            #add-point:BEFORE FIELD staj008
{<point name="input.b.staj008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD staj008
            
            #add-point:AFTER FIELD staj008
{<point name="input.a.staj008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE staj008
            #add-point:ON CHANGE staj008
{<point name="input.g.staj008" />}
            #END add-point
         
         #150506-00007#3 150522 by sakura add---STR
         #交易條件
         BEFORE FIELD staj024
         AFTER FIELD staj024
            LET g_staj_m.staj024_desc = ' '
            DISPLAY BY NAME g_staj_m.staj024_desc
            IF NOT cl_null(g_staj_m.staj024) THEN
               IF g_staj_m.staj024 != g_staj_m_o.staj024 OR cl_null(g_staj_m_t.staj024) THEN
                  IF NOT s_azzi650_chk_exist('238',g_staj_m.staj024) THEN
                     LET g_staj_m.staj024 = g_staj_m_o.staj024
                     CALL s_desc_get_acc_desc('238',g_staj_m.staj024) RETURNING g_staj_m.staj024_desc
                     DISPLAY BY NAME g_staj_m.staj024_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET g_staj_m_o.staj024 = g_staj_m.staj024
            CALL s_desc_get_acc_desc('238',g_staj_m.staj024) RETURNING g_staj_m.staj024_desc
            DISPLAY BY NAME g_staj_m.staj024_desc         
         ON CHANGE staj024
         #發票類型
         BEFORE FIELD staj025
         AFTER FIELD staj025
            LET g_staj_m.staj025_desc = ''
            DISPLAY BY NAME g_staj_m.staj025_desc
            IF NOT cl_null(g_staj_m.staj025) THEN
               IF g_staj_m.staj025 != g_staj_m_o.staj025 OR cl_null(g_staj_m_t.staj025) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_ooef019
                  LET g_chkparam.arg2 = g_staj_m.staj025
                  IF NOT cl_chk_exist("v_isac002_1") THEN
                     LET g_staj_m.staj025 = g_staj_m_o.staj025
                     CALL s_desc_get_invoice_type_desc1(g_site,g_staj_m.staj025) RETURNING g_staj_m.staj025_desc
                     DISPLAY BY NAME g_staj_m.staj025_desc
                     NEXT FIELD CURRENT
                  END IF
                  #add by yangxf ----start---
                  SELECT isacud001 INTO g_staj_m.staj040
                    FROM isac_t
                   WHERE isacent = g_enterprise
                     AND isac001 = g_ooef019
                     AND isac002 = g_staj_m.staj025
                  IF cl_null(g_staj_m.staj040) THEN 
                     LET g_staj_m.staj040 = 'N'
                  END IF 
                  DISPLAY BY NAME g_staj_m.staj040
                  #add by yangxf ----end-----
               END IF
            END IF
            LET g_staj_m_o.staj025 = g_staj_m.staj025
            CALL s_desc_get_invoice_type_desc1(g_site,g_staj_m.staj025) RETURNING g_staj_m.staj025_desc
            DISPLAY BY NAME g_staj_m.staj025_desc         
         ON CHANGE staj025         
         #採購價格允許人工修改
         BEFORE FIELD staj026
#mark by yangxf ---start---20160115
#         AFTER FIELD staj026
#           CALL astt301_set_entry(p_cmd)
#           CALL astt301_set_no_entry(p_cmd)
#makr by yangxf ---end----20160115
           
#add by yangxf ---start----20160115           
         ON CHANGE staj026   
            IF g_staj_m.staj026 = 'Y' THEN 
               CALL cl_set_comp_entry("staj027,staj028",TRUE)
               CALL cl_set_comp_required("staj027,staj028",TRUE)
            ELSE
               LET g_staj_m.staj027 = 0
               LET g_staj_m.staj028 = '1'
               DISPLAY BY NAME g_staj_m.staj027,g_staj_m.staj028
               CALL cl_set_comp_entry("staj027,staj028",FALSE)
               CALL cl_set_comp_required("staj027,staj028",FALSE)
            END IF 
#add by yangxf ----end-----20160115            
            
         #修改容差率
         BEFORE FIELD staj027
         AFTER FIELD staj027
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_staj_m.staj027,"0","1","100","1","azz-00087",1) THEN
               NEXT FIELD staj027
            END IF          
         ON CHANGE staj027          
         #超出處理方式
         BEFORE FIELD staj028
         AFTER FIELD staj028
         ON CHANGE staj028        

         ON CHANGE staj036
            IF g_staj_m.staj036 = 'Y' THEN 
               CALL cl_set_comp_entry('staj037,staj038',TRUE)
            ELSE
               LET g_staj_m.staj037 = ''
               LET g_staj_m.staj038 = ''
               CALL cl_set_comp_entry('staj037,staj038',FALSE)
            END IF 
            
         #內外購
         BEFORE FIELD staj029
         AFTER FIELD staj029
         ON CHANGE staj029         
         #匯率計算基準
         BEFORE FIELD staj030
         AFTER FIELD staj030
         ON CHANGE staj030         
         #150506-00007#3 150522 by sakura add---END
         #----<<staj009>>----
         #此段落由子樣板a02產生
         
            ON CHANGE staj040
            IF g_stak_d.getLength() > 0 THEN 
               IF cl_ask_confirm('ast-00453') THEN
                  #更新费用明细页签
                  UPDATE stak_t SET stak023 = CASE g_staj_m.staj040 WHEN 'Y' THEN 'N' ELSE 'Y'END ,
                                    stak024 = (SELECT stae007 
                                                 FROM stae_t  
                                                WHERE staeent = g_enterprise
                                                  AND stae001 = stak003
                                                  AND stakent = staeent 
                                                  AND stakdocno = g_staj_m.stajdocno)
                   WHERE stakent = g_enterprise
                     AND stakdocno = g_staj_m.stajdocno
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = g_staj_m.staj040
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_staj_m.staj040 = g_staj_m_t.staj040
                     NEXT FIELD staj040
                  END IF 
                  #更新费用明细页签纳入结算单栏位为Y(当票扣否为Y)
                  UPDATE stak_t SET stak023 = 'Y'
                   WHERE stakent = g_enterprise
                     AND stakdocno = g_staj_m.stajdocno
                     AND stak024 = 'Y'
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = g_staj_m.staj040
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_staj_m.staj040 = g_staj_m_t.staj040
                     NEXT FIELD staj040
                  END IF 
               END IF 
               CALL astt301_b_fill()
            END IF 
         
         AFTER FIELD staj009
            
            #add-point:AFTER FIELD staj009
{<point name="input.a.staj009" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD staj009
            #add-point:BEFORE FIELD staj009
{<point name="input.b.staj009" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE staj009
            #add-point:ON CHANGE staj009
{<point name="input.g.staj009" />}
            #END add-point
 
         #----<<staj010>>----
         #此段落由子樣板a02產生
         AFTER FIELD staj010
            
            #add-point:AFTER FIELD staj010
{<point name="input.a.staj010" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD staj010
            #add-point:BEFORE FIELD staj010
{<point name="input.b.staj010" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE staj010
            #add-point:ON CHANGE staj010
{<point name="input.g.staj010" />}
            #END add-point
 
         #----<<staj015>>----
         #此段落由子樣板a02產生
         AFTER FIELD staj015
            
            #add-point:AFTER FIELD staj015
{<point name="input.a.staj015" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD staj015
            #add-point:BEFORE FIELD staj015
{<point name="input.b.staj015" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE staj015
            #add-point:ON CHANGE staj015
{<point name="input.g.staj015" />}
            #END add-point
 
         #----<<staj016>>----
         #此段落由子樣板a02產生
         AFTER FIELD staj016
            
            #add-point:AFTER FIELD staj016
{<point name="input.a.staj016" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD staj016
            #add-point:BEFORE FIELD staj016
{<point name="input.b.staj016" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE staj016
            #add-point:ON CHANGE staj016
{<point name="input.g.staj016" />}
            #END add-point
 
         #----<<staj011>>----
         #此段落由子樣板a01產生
         BEFORE FIELD staj011
            #add-point:BEFORE FIELD staj011
{<point name="input.b.staj011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD staj011
            
            #add-point:AFTER FIELD staj011
{<point name="input.a.staj011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE staj011
            #add-point:ON CHANGE staj011
{<point name="input.g.staj011" />}
            #END add-point

{<point name="input.b.stajacti" />}
            #END add-point

{<point name="input.a.stajacti" />}
            #END add-point
            
 
{<point name="input.g.stajacti" />}
            #END add-point
 
         #----<<staj012>>----
         #此段落由子樣板a01產生
         BEFORE FIELD staj012
            #add-point:BEFORE FIELD staj012
{<point name="input.b.staj012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD staj012
            
            #add-point:AFTER FIELD staj012
{<point name="input.a.staj012" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE staj012
            #add-point:ON CHANGE staj012
{<point name="input.g.staj012" />}
            #END add-point
 
         #----<<staj013>>----
         #此段落由子樣板a02產生
         AFTER FIELD staj013
            
            #add-point:AFTER FIELD staj013
{<point name="input.a.staj013" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD staj013
            #add-point:BEFORE FIELD staj013
{<point name="input.b.staj013" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE staj013
            #add-point:ON CHANGE staj013
{<point name="input.g.staj013" />}
            #END add-point
 
         #----<<staj014>>----
         #此段落由子樣板a02產生
         AFTER FIELD staj014
            
            #add-point:AFTER FIELD staj014
{<point name="input.a.staj014" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD staj014
            #add-point:BEFORE FIELD staj014
{<point name="input.b.staj014" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE staj014
            #add-point:ON CHANGE staj014
{<point name="input.g.staj014" />}
            #END add-point
         
         #----<<staj017>>----
         #此段落由子樣板a01產生
         BEFORE FIELD staj017
            #add-point:BEFORE FIELD staj017
{<point name="input.b.staj017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD staj017
            
            #add-point:AFTER FIELD staj017
{<point name="input.a.staj017" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE staj017
            #add-point:ON CHANGE staj017
{<point name="input.g.staj017" />}
            #END add-point
 
         #----<<staj018>>----
         #此段落由子樣板a01產生
         BEFORE FIELD staj018
            #add-point:BEFORE FIELD staj018
{<point name="input.b.staj018" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD staj018
            
            #add-point:AFTER FIELD staj018
{<point name="input.a.staj018" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE staj018
            #add-point:ON CHANGE staj018
{<point name="input.g.staj018" />}
            #END add-point
 
         #----<<staj019>>----
         #此段落由子樣板a01產生
         BEFORE FIELD staj019
            #add-point:BEFORE FIELD staj019
{<point name="input.b.staj019" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD staj019
            
            #add-point:AFTER FIELD staj019
{<point name="input.a.staj019" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE staj019
            #add-point:ON CHANGE staj019
{<point name="input.g.staj019" />}
            #END add-point
 
         #----<<staj020>>----
         #此段落由子樣板a01產生
         BEFORE FIELD staj020
            #add-point:BEFORE FIELD staj020
{<point name="input.b.staj020" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD staj020
            
            #add-point:AFTER FIELD staj020
{<point name="input.a.staj020" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE staj020
            #add-point:ON CHANGE staj020
{<point name="input.g.staj020" />}
            #END add-point
 
         #----<<stajsite>>----
         #此段落由子樣板a02產生
         AFTER FIELD stajsite
            
            #add-point:AFTER FIELD stajsite
{<point name="input.a.stajsite" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD stajsite
            #add-point:BEFORE FIELD stajsite
{<point name="input.b.stajsite" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE stajsite
            #add-point:ON CHANGE stajsite
{<point name="input.g.stajsite" />}
            #END add-point
 
         #----<<stajunit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stajunit
            #add-point:BEFORE FIELD stajunit
{<point name="input.b.stajunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stajunit
            
            #add-point:AFTER FIELD stajunit
{<point name="input.a.stajunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stajunit
            #add-point:ON CHANGE stajunit
{<point name="input.g.stajunit" />}
            #END add-point
 
         #----<<stajstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stajstus
            #add-point:BEFORE FIELD stajstus
{<point name="input.b.stajstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stajstus
            
            #add-point:AFTER FIELD stajstus
{<point name="input.a.stajstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stajstus
            #add-point:ON CHANGE stajstus
{<point name="input.g.stajstus" />}
            #END add-point
 
         #----<<stajownid>>----
         #----<<stajowndp>>----
         #----<<stajcrtid>>----
         #----<<stajcrtdp>>----
         #----<<stajcrtdt>>----
         #----<<stajmodid>>----
         #----<<stajmoddt>>----
         #----<<stajcnfid>>----
         #----<<stajcnfdt>>----
 #欄位檢查
         #---------------------------<  Master  >---------------------------
         #----<<staj000>>----
         #Ctrlp:input.c.staj000
         ON ACTION controlp INFIELD staj000
            #add-point:ON ACTION controlp INFIELD staj000
{<point name="input.c.staj000" />}
            #END add-point
 
         #----<<stajdocno>>----
         #Ctrlp:input.c.stajdocno
         ON ACTION controlp INFIELD stajdocno
            #add-point:ON ACTION controlp INFIELD stajdocno
{<point name="input.c.stajdocno" />}
            #END add-point
 
         #----<<stajdocdt>>----
         #Ctrlp:input.c.stajdocdt
         ON ACTION controlp INFIELD stajdocdt
            #add-point:ON ACTION controlp INFIELD stajdocdt
{<point name="input.c.stajdocdt" />}
            #END add-point
 
         #----<<staj002>>----
         #Ctrlp:input.c.staj002
         ON ACTION controlp INFIELD staj002
            #add-point:ON ACTION controlp INFIELD staj002
{<point name="input.c.staj002" />}
            #END add-point
 
         #----<<staj001>>----
         #Ctrlp:input.c.staj001
         ON ACTION controlp INFIELD staj001
            #add-point:ON ACTION controlp INFIELD staj001
{<point name="input.c.staj001" />}
            #END add-point
 
         #----<<staj003>>----
         #Ctrlp:input.c.staj003
         ON ACTION controlp INFIELD staj003
            #add-point:ON ACTION controlp INFIELD staj003
{<point name="input.c.staj003" />}
            #END add-point
 
         #----<<staj021>>----
         #Ctrlp:input.c.staj021
         ON ACTION controlp INFIELD staj021
            #add-point:ON ACTION controlp INFIELD staj021
{<point name="input.c.staj021" />}
            #END add-point
 
         #----<<stanstus>>----
         #Ctrlp:input.c.stanstus
         ON ACTION controlp INFIELD stanstus
            #add-point:ON ACTION controlp INFIELD stanstus
{<point name="input.c.stanstus" />}
            #END add-point
 
         #----<<staj004>>----
         #Ctrlp:input.c.staj004
         ON ACTION controlp INFIELD staj004
            #add-point:ON ACTION controlp INFIELD staj004
{<point name="input.c.staj004" />}
            #END add-point
 
         #----<<staj005>>----
         #Ctrlp:input.c.staj005
         ON ACTION controlp INFIELD staj005
            #add-point:ON ACTION controlp INFIELD staj005
{<point name="input.c.staj005" />}
            #END add-point
 
         #----<<staj006>>----
         #Ctrlp:input.c.staj006
         ON ACTION controlp INFIELD staj006
            #add-point:ON ACTION controlp INFIELD staj006
{<point name="input.c.staj006" />}
            #END add-point
 
         #----<<staj007>>----
         #Ctrlp:input.c.staj007
         ON ACTION controlp INFIELD staj007
            #add-point:ON ACTION controlp INFIELD staj007
{<point name="input.c.staj007" />}
            #END add-point
 
         #----<<staj008>>----
         #Ctrlp:input.c.staj008
         ON ACTION controlp INFIELD staj008
            #add-point:ON ACTION controlp INFIELD staj008
{<point name="input.c.staj008" />}
            #END add-point
            
         #150506-00007#3 150522 by sakura add---STR
         #交易條件
         ON ACTION controlp INFIELD staj024
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_staj_m.staj024
            LET g_qryparam.arg1 = '238'
            CALL q_oocq002()
            LET g_staj_m.staj024 = g_qryparam.return1              
            DISPLAY g_staj_m.staj024 TO staj024              
            CALL s_desc_get_acc_desc('238',g_staj_m.staj024) RETURNING g_staj_m.staj024_desc
            DISPLAY BY NAME g_staj_m.staj024_desc
            NEXT FIELD staj024
         #發票類型   
         ON ACTION controlp INFIELD staj025            
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_staj_m.staj025
            LET g_qryparam.arg1 = g_ooef019  #稅區
            LET g_qryparam.arg2 = "1"        #進銷項類型
            CALL q_isac002_2()
            LET g_staj_m.staj025 = g_qryparam.return1
            DISPLAY g_staj_m.staj025 TO staj025
            CALL s_desc_get_invoice_type_desc1(g_site,g_staj_m.staj025) RETURNING g_staj_m.staj025_desc
            DISPLAY BY NAME g_staj_m.staj025_desc
            NEXT FIELD staj025            
         #150506-00007#3 150522 by sakura add---END
 
         #----<<staj009>>----
         #Ctrlp:input.c.staj009
         ON ACTION controlp INFIELD staj009
            #add-point:ON ACTION controlp INFIELD staj009
{<point name="input.c.staj009" />}
            #END add-point
 
         #----<<staj010>>----
         #Ctrlp:input.c.staj010
         ON ACTION controlp INFIELD staj010
            #add-point:ON ACTION controlp INFIELD staj010
{<point name="input.c.staj010" />}
            #END add-point
 
         #----<<staj015>>----
         #Ctrlp:input.c.staj015
         ON ACTION controlp INFIELD staj015
            #add-point:ON ACTION controlp INFIELD staj015
{<point name="input.c.staj015" />}
            #END add-point
 
         #----<<staj016>>----
         #Ctrlp:input.c.staj016
         ON ACTION controlp INFIELD staj016
            #add-point:ON ACTION controlp INFIELD staj016
{<point name="input.c.staj016" />}
            #END add-point
 
         #----<<staj011>>----
         #Ctrlp:input.c.staj011
         ON ACTION controlp INFIELD staj011
            #add-point:ON ACTION controlp INFIELD staj011
{<point name="input.c.staj011" />}
            #END add-point

{<point name="input.c.stajacti" />}
            #END add-point
 
         #----<<staj012>>----
         #Ctrlp:input.c.staj012
         ON ACTION controlp INFIELD staj012
            #add-point:ON ACTION controlp INFIELD staj012
{<point name="input.c.staj012" />}
            #END add-point
 
         #----<<staj013>>----
         #Ctrlp:input.c.staj013
         ON ACTION controlp INFIELD staj013
            #add-point:ON ACTION controlp INFIELD staj013
{<point name="input.c.staj013" />}
            #END add-point
 
         #----<<staj014>>----
         #Ctrlp:input.c.staj014
         ON ACTION controlp INFIELD staj014
            #add-point:ON ACTION controlp INFIELD staj014
{<point name="input.c.staj014" />}
            #END add-point
 
         #----<<staj017>>----
         #Ctrlp:input.c.staj017
         ON ACTION controlp INFIELD staj017
            #add-point:ON ACTION controlp INFIELD staj017
{<point name="input.c.staj017" />}
            #END add-point
 
         #----<<staj018>>----
         #Ctrlp:input.c.staj018
         ON ACTION controlp INFIELD staj018
            #add-point:ON ACTION controlp INFIELD staj018
{<point name="input.c.staj018" />}
            #END add-point
 
         #----<<staj019>>----
         #Ctrlp:input.c.staj019
         ON ACTION controlp INFIELD staj019
            #add-point:ON ACTION controlp INFIELD staj019
{<point name="input.c.staj019" />}
            #END add-point
 
         #----<<staj020>>----
         #Ctrlp:input.c.staj020
         ON ACTION controlp INFIELD staj020
            #add-point:ON ACTION controlp INFIELD staj020
{<point name="input.c.staj020" />}
            #END add-point
 
         #----<<stajsite>>----
         #Ctrlp:input.c.stajsite
         ON ACTION controlp INFIELD stajsite
            #add-point:ON ACTION controlp INFIELD stajsite
{<point name="input.c.stajsite" />}
            #END add-point
 
         #----<<stajunit>>----
         #Ctrlp:input.c.stajunit
         ON ACTION controlp INFIELD stajunit
            #add-point:ON ACTION controlp INFIELD stajunit
{<point name="input.c.stajunit" />}
            #END add-point
 
         #----<<stajstus>>----
         #Ctrlp:input.c.stajstus
         ON ACTION controlp INFIELD stajstus
            #add-point:ON ACTION controlp INFIELD stajstus
{<point name="input.c.stajstus" />}
            #END add-point
 
         #----<<stajownid>>----
         #----<<stajowndp>>----
         #----<<stajcrtid>>----
         #----<<stajcrtdp>>----
         #----<<stajcrtdt>>----
         #----<<stajmodid>>----
         #----<<stajmoddt>>----
         #----<<stajcnfid>>----
         #----<<stajcnfdt>>----
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
           # CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_staj_m.stajdocno             
 
                            
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
{<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO staj_t (stajent,staj000,staj039,stajdocno,stajdocdt,staj002,staj001,staj003,staj021, 
                   staj004,staj005,staj006,staj007,staj008,
                   staj024,staj025,staj040,staj026,staj027,staj028,staj029,staj030, #150506-00007#3 150522 by sakura add
                   staj031,
                   staj033,staj034,staj035,staj036,staj037,staj038,
                   staj009,staj010,staj015,staj016,staj011,
                   staj012,staj013,staj014,staj041,staj017,staj018,staj019,staj020,stajsite,stajunit,stajstus,staj042,  #add by geza 20160318 staj042 
                   stajownid,stajowndp,stajcrtid,stajcrtdp,stajcrtdt,stajmodid,stajmoddt,stajcnfid,stajcnfdt) 

               VALUES (g_enterprise,g_staj_m.staj000,g_staj_m.staj039,g_staj_m.stajdocno,g_staj_m.stajdocdt,g_staj_m.staj002, 
                   g_staj_m.staj001,g_staj_m.staj003,g_staj_m.staj021,g_staj_m.staj004,g_staj_m.staj005, 
                   g_staj_m.staj006,g_staj_m.staj007,g_staj_m.staj008,
                   g_staj_m.staj024,g_staj_m.staj025,g_staj_m.staj040,g_staj_m.staj026,g_staj_m.staj027,g_staj_m.staj028,g_staj_m.staj029,g_staj_m.staj030, #150506-00007#3 150522 by sakura add
                   g_staj_m.staj031,
                   g_staj_m.staj033,g_staj_m.staj034,g_staj_m.staj035,g_staj_m.staj036,g_staj_m.staj037,g_staj_m.staj038,
                   g_staj_m.staj009,g_staj_m.staj010, 
                   g_staj_m.staj015,g_staj_m.staj016,g_staj_m.staj011,g_staj_m.staj012, 
                   g_staj_m.staj013,g_staj_m.staj014,g_staj_m.staj041,g_staj_m.staj017,g_staj_m.staj018,g_staj_m.staj019, 
                   g_staj_m.staj020,g_staj_m.stajsite,g_staj_m.stajunit,g_staj_m.stajstus,g_staj_m.staj042,g_staj_m.stajownid, #add by geza 20160318 staj042
                   g_staj_m.stajowndp,g_staj_m.stajcrtid,g_staj_m.stajcrtdp,g_staj_m.stajcrtdt,g_staj_m.stajmodid, 
                   g_staj_m.stajmoddt,g_staj_m.stajcnfid,g_staj_m.stajcnfdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "g_staj_m"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
{<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               CALL s_transaction_end('Y','0') 
               
               #add-point:單頭新增後
{<point name="input.head.a_insert"/>}
               #end add-point
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL astt301_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
 
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
{<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE staj_t SET (staj000,staj039,stajdocno,stajdocdt,staj002,staj001,staj003,staj021,staj004, 
                   staj005,staj006,staj007,staj008,
                   staj024,staj025,staj040,staj026,staj027,staj028,staj029,staj030, #150506-00007#3 150522 by sakura add
                   staj031,
                   staj033,staj034,staj035,staj036,staj037,staj038,
                   staj009,staj010,staj015,staj016,staj011,
                   staj012,staj013,staj014,staj041,staj017,staj018,staj019,staj020,stajsite,stajunit,stajstus,staj042, #add by geza 20160318 staj042 
                   stajownid,stajowndp,stajcrtid,stajcrtdp,stajcrtdt,stajmodid,stajmoddt,stajcnfid,stajcnfdt) = (g_staj_m.staj000, 
                   g_staj_m.staj039,g_staj_m.stajdocno,g_staj_m.stajdocdt,g_staj_m.staj002,g_staj_m.staj001,g_staj_m.staj003, 
                   g_staj_m.staj021,g_staj_m.staj004,g_staj_m.staj005,g_staj_m.staj006,g_staj_m.staj007, 
                   g_staj_m.staj008,
                   g_staj_m.staj024,g_staj_m.staj025,g_staj_m.staj040,g_staj_m.staj026,g_staj_m.staj027, #150506-00007#3 150522 by sakura add 
                   g_staj_m.staj028,g_staj_m.staj029,g_staj_m.staj030,                  #150506-00007#3 150522 by sakura add
                   g_staj_m.staj031,
                   g_staj_m.staj033,g_staj_m.staj034,g_staj_m.staj035,g_staj_m.staj036,g_staj_m.staj037,g_staj_m.staj038,
                   g_staj_m.staj009,g_staj_m.staj010,g_staj_m.staj015,g_staj_m.staj016, 
                   g_staj_m.staj011,g_staj_m.staj012,g_staj_m.staj013,g_staj_m.staj014,g_staj_m.staj041,
                   g_staj_m.staj017,g_staj_m.staj018,g_staj_m.staj019,g_staj_m.staj020,g_staj_m.stajsite, 
                   g_staj_m.stajunit,g_staj_m.stajstus,g_staj_m.staj042,g_staj_m.stajownid,g_staj_m.stajowndp,g_staj_m.stajcrtid, #add by geza 20160318 staj042
                   g_staj_m.stajcrtdp,g_staj_m.stajcrtdt,g_staj_m.stajmodid,g_staj_m.stajmoddt,g_staj_m.stajcnfid, 
                   g_staj_m.stajcnfdt)
                WHERE stajent = g_enterprise AND stajdocno = g_stajdocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "staj_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
{<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               CALL s_transaction_end('Y','0')
               
               #add-point:單頭修改後
{<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_stajdocno_t = g_staj_m.stajdocno
 
            #controlp
            
      END INPUT
   

{</section>}

{<section id="astt301.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_stak_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stak_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astt301_b_fill()
            LET g_rec_b = g_stak_d.getLength()
            #add-point:資料輸入前
{<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            CALL astt301_b_fill2('2')
            CALL astt301_b_fill2('3')
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astt301_cl USING g_enterprise,g_staj_m.stajdocno
 
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code =  STATUS
               LET g_errparam.extend = "OPEN astt301_cl:"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CLOSE astt301_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_stak_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stak_d[l_ac].stakseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_stak_d_t.* = g_stak_d[l_ac].*  #BACKUP
               CALL astt301_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
{<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL astt301_set_no_entry_b(l_cmd)
               IF NOT astt301_lock_b("stak_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astt301_bcl INTO g_stak_d[l_ac].stakseq,g_stak_d[l_ac].stak003,g_stak_d[l_ac].stak003_desc,g_stak_d[l_ac].stak023,g_stak_d[l_ac].stak024,   #add  by geza 20150610 
                      g_stak_d[l_ac].stak025,g_stak_d[l_ac].stak025_desc,g_stak_d[l_ac].stak004,g_stak_d[l_ac].stak005,g_stak_d[l_ac].stak006,g_stak_d[l_ac].stak028,g_stak_d[l_ac].stak007, 
                      g_stak_d[l_ac].stak008,g_stak_d[l_ac].stak027,g_stak_d[l_ac].stak009,g_stak_d[l_ac].stak009_desc,g_stak_d[l_ac].stak010,     #150612-00023#5 add stak027
                      g_stak_d[l_ac].stak010_desc,g_stak_d[l_ac].stak011,g_stak_d[l_ac].stak012,g_stak_d[l_ac].stak013, 
                      g_stak_d[l_ac].stak014,g_stak_d[l_ac].stak015,g_stak_d[l_ac].stak016,g_stak_d[l_ac].stak029,g_stak_d[l_ac].stak030,g_stak_d[l_ac].stak022,g_stak_d[l_ac].stak017, 
                      g_stak_d[l_ac].stak018,g_stak_d[l_ac].stak019,g_stak_d[l_ac].stakunit,g_stak_d[l_ac].staksite 

                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = g_stak_d_t.stakseq
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL astt301_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
{<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stak_d[l_ac].* TO NULL 
                  LET g_stak_d[l_ac].stak013 = "1"
      LET g_stak_d[l_ac].stak016 = "1"
 
 
            LET g_stak_d_t.* = g_stak_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astt301_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
{<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL astt301_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stak_d[li_reproduce_target].* = g_stak_d[li_reproduce].*
 
               LET g_stak_d[li_reproduce_target].stakseq = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
{<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
{<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM stak_t 
             WHERE stakent = g_enterprise AND stakdocno = g_staj_m.stajdocno
 
               AND stakseq = g_stak_d[l_ac].stakseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
{<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_staj_m.stajdocno
               LET gs_keys[2] = g_stak_d[g_detail_idx].stakseq
               CALL astt301_insert_b('stak_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
{<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00006"
               LET g_errparam.extend = 'INSERT'
               LET g_errparam.popup = TRUE
               CALL cl_err()

               INITIALIZE g_stak_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "stak_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()
  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astt301_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
{<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_stak_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_stak_d.deleteElement(l_ac)
               NEXT FIELD stakseq
            END IF
         
            IF g_stak_d[l_ac].stakseq IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  -263
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
{<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM stak_t
                WHERE stakent = g_enterprise AND stakdocno = g_staj_m.stajdocno AND
 
                      stakseq = g_stak_d_t.stakseq
 
                  
               #add-point:單身刪除中
{<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "stak_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
{<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE astt301_bcl
               LET l_count = g_stak_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_staj_m.stajdocno
               LET gs_keys[2] = g_stak_d[g_detail_idx].stakseq
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
{<point name="input.body.after_delete"/>}
            #end add-point
                           CALL astt301_delete_b('stak_t',gs_keys,"'1'")
 
         #---------------------<  Detail: page1  >---------------------
         #----<<stakseq>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stakseq
            #add-point:BEFORE FIELD stakseq
{<point name="input.b.page1.stakseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stakseq
            
            #add-point:AFTER FIELD stakseq
{<point name="input.a.page1.stakseq" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stakseq
            #add-point:ON CHANGE stakseq
{<point name="input.g.page1.stakseq" />}
            #END add-point
 
         #----<<stak003>>----
         #此段落由子樣板a02產生
         AFTER FIELD stak003
            
            #add-point:AFTER FIELD stak003
{<point name="input.a.page1.stak003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD stak003
            #add-point:BEFORE FIELD stak003
{<point name="input.b.page1.stak003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE stak003
            #add-point:ON CHANGE stak003
{<point name="input.g.page1.stak003" />}
         BEFORE FIELD stak023
            
            #add-point:BEFORE FIELD stak023
                                 
                     
          #END add-point
         #此段落由子樣板a02產生
         AFTER FIELD stak023
            
            #add-point:AFTER FIELD stak023
                        
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stak023
            #add-point:ON CHANGE stak023
            #add by geza 20150610
            IF g_stak_d[l_ac].stak023 = 'N' THEN
               LET g_stak_d[l_ac].stak024 = 'N'
            END IF
            CALL astt301_set_entry_b(l_cmd)
            CALL astt301_set_no_entry_b(l_cmd) 
            #add by geza 20150610            
            #END add-point
            
         BEFORE FIELD stak024
            
            #add-point:BEFORE FIELD stak024
                                 
                     
          #END add-point
         #此段落由子樣板a02產生
         AFTER FIELD stak024
            
            #add-point:AFTER FIELD stak024
                        
            #END add-point
          
         AFTER FIELD stak025
             IF NOT cl_null(g_stak_d[l_ac].stak025) THEN
                IF NOT astt301_stak025_chk() THEN
                   LET g_stak_d[l_ac].stak025 = g_stak_d_t.stak025
                   CALL astt301_stak025_ref()
                   NEXT FIELD stak025
                END IF
             END IF
             CALL astt301_stak025_ref() 
 
         #此段落由子樣板a04產生
         ON CHANGE stak024
            #add-point:ON CHANGE stak024
                        
            #END add-point   
            
         #此段落由子樣板a02產生
         BEFORE FIELD stak004
            
          #add-point:BEFORE FIELD stak004                                
{<point name="input.b.page1.stak004" />}
          #END add-point
         #此段落由子樣板a02產生
         AFTER FIELD stak004
            
            #add-point:AFTER FIELD stak004
{<point name="input.a.page1.stak004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stak004
            #add-point:ON CHANGE stak004
{<point name="input.g.page1.stak004" />}
            #END add-point
 
         #----<<stak005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stak005
            #add-point:BEFORE FIELD stak005
{<point name="input.b.page1.stak005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stak005
            
            #add-point:AFTER FIELD stak005
{<point name="input.a.page1.stak005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stak005
            #add-point:ON CHANGE stak005
{<point name="input.g.page1.stak005" />}
            #END add-point
 
         #----<<stak006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stak006
            #add-point:BEFORE FIELD stak006
{<point name="input.b.page1.stak006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stak006
            
            #add-point:AFTER FIELD stak006
{<point name="input.a.page1.stak006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stak006
            #add-point:ON CHANGE stak006
{<point name="input.g.page1.stak006" />}
            #END add-point
 
         #----<<stak007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stak007
            #add-point:BEFORE FIELD stak007
{<point name="input.b.page1.stak007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stak007
            
            #add-point:AFTER FIELD stak007
{<point name="input.a.page1.stak007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stak007
            #add-point:ON CHANGE stak007
{<point name="input.g.page1.stak007" />}
            #END add-point
 
         #----<<stak008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stak008
            #add-point:BEFORE FIELD stak008
{<point name="input.b.page1.stak008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stak008
            
            #add-point:AFTER FIELD stak008
{<point name="input.a.page1.stak008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stak008
            #add-point:ON CHANGE stak008
{<point name="input.g.page1.stak008" />}
            #END add-point
 
         #----<<stak009>>----
         #此段落由子樣板a02產生
         AFTER FIELD stak009
            
            #add-point:AFTER FIELD stak009
{<point name="input.a.page1.stak009" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD stak009
            #add-point:BEFORE FIELD stak009
{<point name="input.b.page1.stak009" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE stak009
            #add-point:ON CHANGE stak009
{<point name="input.g.page1.stak009" />}
            #END add-point
 
         #----<<stak010>>----
         #此段落由子樣板a02產生
         AFTER FIELD stak010
            
            #add-point:AFTER FIELD stak010
{<point name="input.a.page1.stak010" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD stak010
            #add-point:BEFORE FIELD stak010
{<point name="input.b.page1.stak010" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE stak010
            #add-point:ON CHANGE stak010
{<point name="input.g.page1.stak010" />}
            #END add-point
 
         #----<<stak011>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stak011
            #add-point:BEFORE FIELD stak011
{<point name="input.b.page1.stak011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stak011
            
            #add-point:AFTER FIELD stak011
{<point name="input.a.page1.stak011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stak011
            #add-point:ON CHANGE stak011
{<point name="input.g.page1.stak011" />}
            #END add-point
 
         #----<<stak012>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stak012
            #add-point:BEFORE FIELD stak012
{<point name="input.b.page1.stak012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stak012
            
            #add-point:AFTER FIELD stak012
{<point name="input.a.page1.stak012" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stak012
            #add-point:ON CHANGE stak012
{<point name="input.g.page1.stak012" />}
            #END add-point
 
         #----<<stak013>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stak013
            #add-point:BEFORE FIELD stak013
{<point name="input.b.page1.stak013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stak013
            
            #add-point:AFTER FIELD stak013
{<point name="input.a.page1.stak013" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stak013
            #add-point:ON CHANGE stak013
{<point name="input.g.page1.stak013" />}
            #END add-point
 
         #----<<stak014>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stak014
            #add-point:BEFORE FIELD stak014
{<point name="input.b.page1.stak014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stak014
            
            #add-point:AFTER FIELD stak014
{<point name="input.a.page1.stak014" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stak014
            #add-point:ON CHANGE stak014
{<point name="input.g.page1.stak014" />}
            #END add-point
 
         #----<<stak015>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stak015
            #add-point:BEFORE FIELD stak015
{<point name="input.b.page1.stak015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stak015
            
            #add-point:AFTER FIELD stak015
{<point name="input.a.page1.stak015" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stak015
            #add-point:ON CHANGE stak015
{<point name="input.g.page1.stak015" />}
            #END add-point
 
         #----<<stak016>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stak016
            #add-point:BEFORE FIELD stak016
{<point name="input.b.page1.stak016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stak016
            
            #add-point:AFTER FIELD stak016
{<point name="input.a.page1.stak016" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stak016
            #add-point:ON CHANGE stak016
{<point name="input.g.page1.stak016" />}
            #END add-point
 
         #----<<stak017>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stak017
            #add-point:BEFORE FIELD stak017
{<point name="input.b.page1.stak017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stak017
            
            #add-point:AFTER FIELD stak017
{<point name="input.a.page1.stak017" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stak017
            #add-point:ON CHANGE stak017
{<point name="input.g.page1.stak017" />}
            #END add-point
 
         #----<<stak018>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stak018
            #add-point:BEFORE FIELD stak018
{<point name="input.b.page1.stak018" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stak018
            
            #add-point:AFTER FIELD stak018
{<point name="input.a.page1.stak018" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stak018
            #add-point:ON CHANGE stak018
{<point name="input.g.page1.stak018" />}
            #END add-point
 
         #----<<stak019>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stak019
            #add-point:BEFORE FIELD stak019
{<point name="input.b.page1.stak019" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stak019
            
            #add-point:AFTER FIELD stak019
{<point name="input.a.page1.stak019" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stak019
            #add-point:ON CHANGE stak019
{<point name="input.g.page1.stak019" />}
            #END add-point
 
         #----<<stakunit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stakunit
            #add-point:BEFORE FIELD stakunit
{<point name="input.b.page1.stakunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stakunit
            
            #add-point:AFTER FIELD stakunit
{<point name="input.a.page1.stakunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stakunit
            #add-point:ON CHANGE stakunit
{<point name="input.g.page1.stakunit" />}
            #END add-point
 
         #----<<staksite>>----
         #此段落由子樣板a01產生
         BEFORE FIELD staksite
            #add-point:BEFORE FIELD staksite
{<point name="input.b.page1.staksite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD staksite
            
            #add-point:AFTER FIELD staksite
{<point name="input.a.page1.staksite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE staksite
            #add-point:ON CHANGE staksite
{<point name="input.g.page1.staksite" />}
            #END add-point
 
 
         #---------------------<  Detail: page1  >---------------------
         #----<<stakseq>>----
         #Ctrlp:input.c.page1.stakseq
         ON ACTION controlp INFIELD stakseq
            #add-point:ON ACTION controlp INFIELD stakseq
{<point name="input.c.page1.stakseq" />}
            #END add-point
 
         #----<<stak003>>----
         #Ctrlp:input.c.page1.stak003
         ON ACTION controlp INFIELD stak003
            #add-point:ON ACTION controlp INFIELD stak003
{<point name="input.c.page1.stak003" />}
            #END add-point
 
         #----<<stak004>>----
         #Ctrlp:input.c.page1.stak004
         ON ACTION controlp INFIELD stak004
            #add-point:ON ACTION controlp INFIELD stak004
{<point name="input.c.page1.stak004" />}
            #END add-point
 
         #----<<stak005>>----
         #Ctrlp:input.c.page1.stak005
         ON ACTION controlp INFIELD stak005
            #add-point:ON ACTION controlp INFIELD stak005
{<point name="input.c.page1.stak005" />}
            #END add-point
 
         #----<<stak006>>----
         #Ctrlp:input.c.page1.stak006
         ON ACTION controlp INFIELD stak006
            #add-point:ON ACTION controlp INFIELD stak006
{<point name="input.c.page1.stak006" />}
            #END add-point
 
         #----<<stak007>>----
         #Ctrlp:input.c.page1.stak007
         ON ACTION controlp INFIELD stak007
            #add-point:ON ACTION controlp INFIELD stak007
{<point name="input.c.page1.stak007" />}
            #END add-point
 
         #----<<stak008>>----
         #Ctrlp:input.c.page1.stak008
         ON ACTION controlp INFIELD stak008
            #add-point:ON ACTION controlp INFIELD stak008
{<point name="input.c.page1.stak008" />}
            #END add-point
 
         #----<<stak009>>----
         #Ctrlp:input.c.page1.stak009
         ON ACTION controlp INFIELD stak009
            #add-point:ON ACTION controlp INFIELD stak009
{<point name="input.c.page1.stak009" />}
            #END add-point
 
         #----<<stak010>>----
         #Ctrlp:input.c.page1.stak010
         ON ACTION controlp INFIELD stak010
            #add-point:ON ACTION controlp INFIELD stak010
{<point name="input.c.page1.stak010" />}
            #END add-point
 
         #----<<stak011>>----
         #Ctrlp:input.c.page1.stak011
         ON ACTION controlp INFIELD stak011
            #add-point:ON ACTION controlp INFIELD stak011
{<point name="input.c.page1.stak011" />}
            #END add-point
 
         #----<<stak012>>----
         #Ctrlp:input.c.page1.stak012
         ON ACTION controlp INFIELD stak012
            #add-point:ON ACTION controlp INFIELD stak012
{<point name="input.c.page1.stak012" />}
            #END add-point
 
         #----<<stak013>>----
         #Ctrlp:input.c.page1.stak013
         ON ACTION controlp INFIELD stak013
            #add-point:ON ACTION controlp INFIELD stak013
{<point name="input.c.page1.stak013" />}
            #END add-point
 
         #----<<stak014>>----
         #Ctrlp:input.c.page1.stak014
         ON ACTION controlp INFIELD stak014
            #add-point:ON ACTION controlp INFIELD stak014
{<point name="input.c.page1.stak014" />}
            #END add-point
 
         #----<<stak015>>----
         #Ctrlp:input.c.page1.stak015
         ON ACTION controlp INFIELD stak015
            #add-point:ON ACTION controlp INFIELD stak015
{<point name="input.c.page1.stak015" />}
            #END add-point
 
         #----<<stak016>>----
         #Ctrlp:input.c.page1.stak016
         ON ACTION controlp INFIELD stak016
            #add-point:ON ACTION controlp INFIELD stak016
{<point name="input.c.page1.stak016" />}
            #END add-point
 
         #----<<stak017>>----
         #Ctrlp:input.c.page1.stak017
         ON ACTION controlp INFIELD stak017
            #add-point:ON ACTION controlp INFIELD stak017
{<point name="input.c.page1.stak017" />}
            #END add-point
 
         #----<<stak018>>----
         #Ctrlp:input.c.page1.stak018
         ON ACTION controlp INFIELD stak018
            #add-point:ON ACTION controlp INFIELD stak018
{<point name="input.c.page1.stak018" />}
            #END add-point
 
         #----<<stak019>>----
         #Ctrlp:input.c.page1.stak019
         ON ACTION controlp INFIELD stak019
            #add-point:ON ACTION controlp INFIELD stak019
{<point name="input.c.page1.stak019" />}
            #END add-point
 
         #----<<stakunit>>----
         #Ctrlp:input.c.page1.stakunit
         ON ACTION controlp INFIELD stakunit
            #add-point:ON ACTION controlp INFIELD stakunit
{<point name="input.c.page1.stakunit" />}
            #END add-point
 
         #----<<staksite>>----
         #Ctrlp:input.c.page1.staksite
         ON ACTION controlp INFIELD staksite
            #add-point:ON ACTION controlp INFIELD staksite
{<point name="input.c.page1.staksite" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               LET g_stak_d[l_ac].* = g_stak_d_t.*
               CLOSE astt301_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = -263
               LET g_errparam.extend = g_stak_d[l_ac].stakseq
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_stak_d[l_ac].* = g_stak_d_t.*
            ELSE
            
               #add-point:單身修改前
{<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE stak_t SET (stakdocno,stakseq,stakacti,stak003,stak023,stak024,stak025,stak004,stak005,stak006,stak007,stak008,stak027,    #add by geza 20150610 stak023,stak024 #150612-00023#5 add stak027
                   stak009,stak010,stak011,stak012,stak013,stak014,stak015,stak016,stak022,stak017,stak018,stak026,stak019,stak020,stak021,stak028,stak029,stak030, 
                   stakunit,staksite) = (g_staj_m.stajdocno,g_stak_d[l_ac].stakseq,g_stak_d[l_ac].stakacti,g_stak_d[l_ac].stak003,g_stak_d[l_ac].stak023,g_stak_d[l_ac].stak024, #add by geza 20150610 stak023,stak024
                   g_stak_d[l_ac].stak025,g_stak_d[l_ac].stak004,g_stak_d[l_ac].stak005,g_stak_d[l_ac].stak006,g_stak_d[l_ac].stak007, 
                   g_stak_d[l_ac].stak008,g_stak_d[l_ac].stak027,g_stak_d[l_ac].stak009,g_stak_d[l_ac].stak010,g_stak_d[l_ac].stak011, 
                   g_stak_d[l_ac].stak012,g_stak_d[l_ac].stak013,g_stak_d[l_ac].stak014,g_stak_d[l_ac].stak015, 
                   g_stak_d[l_ac].stak016,g_stak_d[l_ac].stak022,g_stak_d[l_ac].stak017,g_stak_d[l_ac].stak018,g_stak_d[l_ac].stak026,g_stak_d[l_ac].stak019,g_stak_d[l_ac].stak020,g_stak_d[l_ac].stak021,
                   g_stak_d[l_ac].stak028,g_stak_d[l_ac].stak029,g_stak_d[l_ac].stak030,g_stak_d[l_ac].stakunit,g_stak_d[l_ac].staksite)
                WHERE stakent = g_enterprise AND stakdocno = g_staj_m.stajdocno 
 
                  AND stakseq = g_stak_d_t.stakseq #項次   
 
                  
               #add-point:單身修改中
{<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "std-00009"
                     LET g_errparam.extend = "stak_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     CALL s_transaction_end('N','0')
                     LET g_stak_d[l_ac].* = g_stak_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "stak_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

                     LET g_stak_d[l_ac].* = g_stak_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_staj_m.stajdocno
               LET gs_keys_bak[1] = g_stajdocno_t
               LET gs_keys[2] = g_stak_d[g_detail_idx].stakseq
               LET gs_keys_bak[2] = g_stak_d_t.stakseq
               CALL astt301_update_b('stak_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #add-point:單身修改後
{<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
{<point name="input.body.after_row"/>}
            #end add-point
            CALL astt301_unlock_b("stak_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            
              
         AFTER INPUT
            #add-point:input段after input 
{<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_stak_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_stak_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_stak2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stak2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astt301_b_fill()
            LET g_rec_b = g_stak2_d.getLength()
            #add-point:資料輸入前
{<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stak2_d[l_ac].* TO NULL 
                  LET g_stak2_d[l_ac].stam004 = "Y"
 
 
            LET g_stak2_d_t.* = g_stak2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astt301_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
{<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL astt301_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stak2_d[li_reproduce_target].* = g_stak2_d[li_reproduce].*
 
               LET g_stak2_d[li_reproduce_target].stamseq = NULL
            END IF
            #公用欄位給值(單身2)
            
            
            #add-point:modify段before insert
{<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astt301_cl USING g_enterprise,g_staj_m.stajdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code =  STATUS
               LET g_errparam.extend = "OPEN astt301_cl:"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CLOSE astt301_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_stak2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stak2_d[l_ac].stamseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_stak2_d_t.* = g_stak2_d[l_ac].*  #BACKUP
               CALL astt301_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
{<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL astt301_set_no_entry_b(l_cmd)
               IF NOT astt301_lock_b("stam_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astt301_bcl2 INTO g_stak2_d[l_ac].stamseq,g_stak2_d[l_ac].stam003,g_stak2_d[l_ac].stam003_desc,g_stak2_d[l_ac].stam005,
                      g_stak2_d[l_ac].stam004,g_stak2_d[l_ac].stamunit,g_stak2_d[l_ac].stamsite
                   IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL astt301_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
{<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_stak2_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_stak2_d.deleteElement(l_ac)
               NEXT FIELD stamseq
            END IF
         
            IF g_stak2_d[l_ac].stamseq IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  -263
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
{<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM stam_t
                WHERE stament = g_enterprise AND stamdocno = g_staj_m.stajdocno AND
                      stamseq = g_stak2_d_t.stamseq
                  
               #add-point:單身2刪除中
{<point name="input.body2.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "stak_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身2刪除後
{<point name="input.body2.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE astt301_bcl
               LET l_count = g_stak_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_staj_m.stajdocno
               LET gs_keys[2] = g_stak2_d[g_detail_idx].stamseq
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
{<point name="input.body2.after_delete"/>}
            #end add-point
                           CALL astt301_delete_b('stam_t',gs_keys,"'2'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
{<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM stam_t 
             WHERE stament = g_enterprise AND stamdocno = g_staj_m.stajdocno
               AND stamseq = g_stak2_d[l_ac].stamseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
{<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_staj_m.stajdocno
               LET gs_keys[2] = g_stak2_d[g_detail_idx].stamseq
               CALL astt301_insert_b('stam_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
{<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00006"
               LET g_errparam.extend = 'INSERT'
               LET g_errparam.popup = TRUE
               CALL cl_err()

               INITIALIZE g_stak_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "stam_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()
  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astt301_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
{<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               LET g_stak2_d[l_ac].* = g_stak2_d_t.*
               CLOSE astt301_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = -263
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_stak2_d[l_ac].* = g_stak2_d_t.*
            ELSE
               #add-point:單身page2修改前
{<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               UPDATE stam_t SET (stamdocno,stamseq,stam003,stam005,stam004,stamacti,stamunit,stamsite) = (g_staj_m.stajdocno, 
                   g_stak2_d[l_ac].stamseq,g_stak2_d[l_ac].stam003,g_stak2_d[l_ac].stam005,g_stak2_d[l_ac].stam004,g_stak2_d[l_ac].stamacti,g_stak2_d[l_ac].stamunit, 
                   g_stak2_d[l_ac].stamsite) #自訂欄位頁簽
                WHERE stament = g_enterprise AND stamdocno = g_staj_m.stajdocno
                  AND stamseq = g_stak2_d_t.stamseq #項次 
                  
               #add-point:單身page2修改中
{<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "std-00009"
                     LET g_errparam.extend = "stam_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     CALL s_transaction_end('N','0')
                     LET g_stak2_d[l_ac].* = g_stak2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "stam_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()
  
                     CALL s_transaction_end('N','0')
                     LET g_stak2_d[l_ac].* = g_stak2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_staj_m.stajdocno
               LET gs_keys_bak[1] = g_stajdocno_t
               LET gs_keys[2] = g_stak2_d[g_detail_idx].stamseq
               LET gs_keys_bak[2] = g_stak2_d_t.stamseq
               CALL astt301_update_b('stam_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               #add-point:單身page2修改後
{<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
         #---------------------<  Detail: page2  >---------------------
         #----<<stamseq>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stamseq
            #add-point:BEFORE FIELD stamseq
{<point name="input.b.page2.stamseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stamseq
            
            #add-point:AFTER FIELD stamseq
{<point name="input.a.page2.stamseq" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stamseq
            #add-point:ON CHANGE stamseq
{<point name="input.g.page2.stamseq" />}
            #END add-point
 
         #----<<stam003>>----
         #此段落由子樣板a02產生
         AFTER FIELD stam003
            
            #add-point:AFTER FIELD stam003
{<point name="input.a.page2.stam003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD stam003
            #add-point:BEFORE FIELD stam003
{<point name="input.b.page2.stam003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE stam003
            #add-point:ON CHANGE stam003
{<point name="input.g.page2.stam003" />}
            #END add-point
 
         #----<<stam004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stam004
            #add-point:BEFORE FIELD stam004
{<point name="input.b.page2.stam004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stam004
            
            #add-point:AFTER FIELD stam004
{<point name="input.a.page2.stam004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stam004
            #add-point:ON CHANGE stam004
{<point name="input.g.page2.stam004" />}
            #END add-point
 
         #----<<stamunit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stamunit
            #add-point:BEFORE FIELD stamunit
{<point name="input.b.page2.stamunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stamunit
            
            #add-point:AFTER FIELD stamunit
{<point name="input.a.page2.stamunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stamunit
            #add-point:ON CHANGE stamunit
{<point name="input.g.page2.stamunit" />}
            #END add-point
 
         #----<<stamsite>>----
         #此段落由子樣板a01產生
         BEFORE FIELD stamsite
            #add-point:BEFORE FIELD stamsite
{<point name="input.b.page2.stamsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stamsite
            
            #add-point:AFTER FIELD stamsite
{<point name="input.a.page2.stamsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stamsite
            #add-point:ON CHANGE stamsite
{<point name="input.g.page2.stamsite" />}
            #END add-point
 
 
         #---------------------<  Detail: page2  >---------------------
         #----<<stamseq>>----
         #Ctrlp:input.c.page2.stamseq
         ON ACTION controlp INFIELD stamseq
            #add-point:ON ACTION controlp INFIELD stamseq
{<point name="input.c.page2.stamseq" />}
            #END add-point
 
         #----<<stam003>>----
         #Ctrlp:input.c.page2.stam003
         ON ACTION controlp INFIELD stam003
            #add-point:ON ACTION controlp INFIELD stam003
{<point name="input.c.page2.stam003" />}
            #END add-point
 
         #----<<stam004>>----
         #Ctrlp:input.c.page2.stam004
         ON ACTION controlp INFIELD stam004
            #add-point:ON ACTION controlp INFIELD stam004
{<point name="input.c.page2.stam004" />}
            #END add-point
 
         #----<<stamunit>>----
         #Ctrlp:input.c.page2.stamunit
         ON ACTION controlp INFIELD stamunit
            #add-point:ON ACTION controlp INFIELD stamunit
{<point name="input.c.page2.stamunit" />}
            #END add-point
 
         #----<<stamsite>>----
         #Ctrlp:input.c.page2.stamsite
         ON ACTION controlp INFIELD stamsite
            #add-point:ON ACTION controlp INFIELD stamsite
{<point name="input.c.page2.stamsite" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row
{<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            LET l_ac_t = l_ac
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_stak2_d[l_ac].* = g_stak2_d_t.*
               END IF
               CLOSE astt301_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astt301_unlock_b("stam_t","'2'")
            CALL s_transaction_end('Y','0')
 
         AFTER INPUT
            #add-point:input段after input 
{<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_stak2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_stak2_d.getLength()+1
 
      END INPUT
 
 
      
 
      
 
      
 
      

{</section>}

{<section id="astt301.input.other" >}
      
      #add-point:自定義input
{<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
{<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD stajsite #sakura add
            NEXT FIELD stajdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD stakseq
               WHEN "s_detail2"
                  NEXT FIELD stamseq
 
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         CALL cl_set_head_visible("","AUTO")
          IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
         
      ON ACTION accept    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)

         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
{<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION

{</section>}

{<section id="astt301.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION astt301_show()
   {<Local define>}
   DEFINE l_ac_t    LIKE type_t.num5
   {</Local define>}
   #add-point:show段define
{<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
{<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_staj_m_t.* = g_staj_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL astt301_b_fill() #單身填充
      CALL astt301_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_staj_m.stajownid_desc = cl_get_username(g_staj_m.stajownid)
      #LET g_staj_m.stajowndp_desc = cl_get_deptname(g_staj_m.stajowndp)
      #LET g_staj_m.stajcrtid_desc = cl_get_username(g_staj_m.stajcrtid)
      #LET g_staj_m.stajcrtdp_desc = cl_get_deptname(g_staj_m.stajcrtdp)
      #LET g_staj_m.stajmodid_desc = cl_get_username(g_staj_m.stajmodid)
      #LET g_staj_m.stajcnfid_desc = cl_get_deptname(g_staj_m.stajcnfid)
      ##LET g_staj_m.stajpstid_desc = cl_get_deptname(g_staj_m.stajpstid)
      
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
{<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_staj_m.stajsite,g_staj_m.stajdocdt,g_staj_m.stajdocno,g_staj_m.staj000,g_staj_m.staj039,g_staj_m.staj001,g_staj_m.staj003,
              g_staj_m.staj004,g_staj_m.staj002,g_staj_m.staj031,g_staj_m.staj021,g_staj_m.staj005,g_staj_m.staj016,
              g_staj_m.staj017,g_staj_m.staj018,g_staj_m.staj012,g_staj_m.staj014,g_staj_m.staj041,g_staj_m.staj013,
              g_staj_m.staj036,g_staj_m.staj037,g_staj_m.staj038,g_staj_m.staj015,g_staj_m.staj009,g_staj_m.staj010,
              g_staj_m.staj034,g_staj_m.staj042,g_staj_m.staj033,g_staj_m.staj035,g_staj_m.staj019,g_staj_m.staj020,g_staj_m.staj029,
              g_staj_m.staj030,g_staj_m.staj008,g_staj_m.staj024,g_staj_m.staj006,g_staj_m.staj007,g_staj_m.staj025,
              g_staj_m.staj040,g_staj_m.staj026,g_staj_m.staj027,g_staj_m.staj028,g_staj_m.staj011,
              g_staj_m.stajstus,g_staj_m.stajunit,g_staj_m.stajownid,g_staj_m.stajownid_desc,g_staj_m.stajowndp, 
              g_staj_m.stajowndp_desc,g_staj_m.stajcrtid,g_staj_m.stajcrtid_desc,g_staj_m.stajcrtdp,g_staj_m.stajcrtdp_desc, 
              g_staj_m.stajcrtdt,g_staj_m.stajmodid,g_staj_m.stajmodid_desc,g_staj_m.stajmoddt,g_staj_m.stajcnfid, 
              g_staj_m.stajcnfid_desc,g_staj_m.stajcnfdt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_staj_m.stajstus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
 
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
 
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange","stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange","stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange","stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange","stus/32/signing.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_stak_d.getLength()
      #帶出公用欄位reference值
      
      #add-point:show段單身reference
{<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_stak2_d.getLength()
      #帶出公用欄位reference值
      
      #add-point:show段單身reference
{<point name="show.body2.reference"/>}
      #end add-point
   END FOR
 
 
   
    
   
   #add-point:show段other
{<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL astt301_detail_show()
   
   #add-point:show段之後
{<point name="show.after"/>}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="astt301.detail_show" >}
#+ 單身reference detail_show
PRIVATE FUNCTION astt301_detail_show()
   {<Local define>}
   DEFINE l_ac_t    LIKE type_t.num5
   {</Local define>}
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   LET l_ac_t = l_ac
 
   LET l_ac = l_ac_t
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="astt301.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION astt301_reproduce()
   {<Local define>}
   DEFINE l_newno     LIKE staj_t.stajdocno 
   DEFINE l_oldno     LIKE staj_t.stajdocno 
 
   DEFINE l_master    RECORD LIKE staj_t.*
   DEFINE l_detail    RECORD LIKE stak_t.*
   DEFINE l_detail2    RECORD LIKE stam_t.*
 
 
 
   DEFINE l_cnt       LIKE type_t.num5
   {</Local define>}
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_staj_m.stajdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN
   END IF
    
   LET g_stajdocno_t = g_staj_m.stajdocno
 
    
   LET g_staj_m.stajdocno = ""
 
    
   CALL astt301_set_entry('a')
   CALL astt301_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_staj_m.stajownid = g_user
      LET g_staj_m.stajowndp = g_dept
      LET g_staj_m.stajcrtid = g_user
      LET g_staj_m.stajcrtdp = g_dept 
      LET g_staj_m.stajcrtdt = cl_get_current()
      LET g_staj_m.stajmodid = ""
      LET g_staj_m.stajmoddt = ""
      #LET g_staj_m.stajstus = ""
 
 
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL astt301_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   
   LET g_wc = g_wc,  
              " OR (",
              " stajdocno = '", g_staj_m.stajdocno CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="astt301.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION astt301_detail_reproduce()
   {<Local define>}
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE stak_t.*
   DEFINE l_detail2    RECORD LIKE stam_t.*
 
 
 
   {</Local define>}
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE astt301_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE astt301_detail AS ",
                "SELECT * FROM stak_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO astt301_detail SELECT * FROM stak_t 
                                         WHERE stakent = g_enterprise AND stakdocno = g_stajdocno_t
 
   
   #將key修正為調整後   
   UPDATE astt301_detail 
      #更新key欄位
      SET stakdocno = g_staj_m.stajdocno
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO stak_t SELECT * FROM astt301_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "reproduce"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astt301_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE astt301_detail AS ",
      "SELECT * FROM stam_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO astt301_detail SELECT * FROM stam_t
                                         WHERE stament = g_enterprise AND stamdocno = g_stajdocno_t
 
 
   #將key修正為調整後   
   UPDATE astt301_detail SET stamdocno = g_staj_m.stajdocno
 
  
   #將資料塞回原table   
   INSERT INTO stam_t SELECT * FROM astt301_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astt301_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_stajdocno_t = g_staj_m.stajdocno
 
   
   DROP TABLE astt301_detail
   
END FUNCTION

{</section>}

{<section id="astt301.delete" >}
#+ 資料刪除
PRIVATE FUNCTION astt301_delete()
   {<Local define>}
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:delete段define
{<point name="delete.define"/>}
   #end add-point     
   
   IF g_staj_m.stajdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN
   END IF
 
    SELECT UNIQUE staj000,stajdocno,stajdocdt,staj002,staj001,staj003,staj021,staj004,staj005,staj006, 
        staj007,staj008,
        staj024,staj025,staj026,staj027,staj028,staj029,staj030, #150506-00007#3 150522 by sakura add
        staj031,staj033,staj034,
        staj009,staj010,staj015,staj016,staj011,staj012,staj013,staj014,staj017, 
        staj018,staj019,staj020,stajsite,stajunit,stajstus,stajownid,stajowndp,stajcrtid,stajcrtdp,stajcrtdt, 
        stajmodid,stajmoddt,stajcnfid,stajcnfdt
 INTO g_staj_m.staj000,g_staj_m.stajdocno,g_staj_m.stajdocdt,g_staj_m.staj002,g_staj_m.staj001,g_staj_m.staj003, 
     g_staj_m.staj021,g_staj_m.staj004,g_staj_m.staj005,g_staj_m.staj006,g_staj_m.staj007,g_staj_m.staj008, 
     g_staj_m.staj024,g_staj_m.staj025,g_staj_m.staj026,g_staj_m.staj027,g_staj_m.staj028,g_staj_m.staj029,g_staj_m.staj030, #150506-00007#3 150522 by sakura add
     g_staj_m.staj031,g_staj_m.staj033,g_staj_m.staj034,
     g_staj_m.staj009,g_staj_m.staj010,g_staj_m.staj015,g_staj_m.staj016,g_staj_m.staj011,
     g_staj_m.staj012,g_staj_m.staj013,g_staj_m.staj014,g_staj_m.staj017,g_staj_m.staj018,g_staj_m.staj019, 
     g_staj_m.staj020,g_staj_m.stajsite,g_staj_m.stajunit,g_staj_m.stajstus,g_staj_m.stajownid,g_staj_m.stajowndp, 
     g_staj_m.stajcrtid,g_staj_m.stajcrtdp,g_staj_m.stajcrtdt,g_staj_m.stajmodid,g_staj_m.stajmoddt, 
     g_staj_m.stajcnfid,g_staj_m.stajcnfdt
 FROM staj_t
 WHERE stajent = g_enterprise AND stajdocno = g_staj_m.stajdocno
   
   
 
   CALL astt301_show()
   
   CALL s_transaction_begin()
 
   OPEN astt301_cl USING g_enterprise,g_staj_m.stajdocno
 
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code =  STATUS
      LET g_errparam.extend = "OPEN astt301_cl:"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CLOSE astt301_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   FETCH astt301_cl INTO g_staj_m.staj000,g_staj_m.staj039,g_staj_m.stajdocno,g_staj_m.stajdocdt,g_staj_m.staj002,g_staj_m.staj001, 
       g_staj_m.staj003,g_staj_m.staj021,g_staj_m.stanstus,g_staj_m.staj004,g_staj_m.staj004_desc,g_staj_m.staj005, 
       g_staj_m.staj005_desc,g_staj_m.staj006,g_staj_m.staj006_desc,g_staj_m.staj007,g_staj_m.staj007_desc, 
       g_staj_m.staj008,g_staj_m.staj008_desc,
       g_staj_m.staj024,g_staj_m.staj024_desc,g_staj_m.staj025,g_staj_m.staj025_desc,g_staj_m.staj040,        #150506-00007#3 150522 by sakura add
       g_staj_m.staj026,g_staj_m.staj027,g_staj_m.staj028,g_staj_m.staj036,g_staj_m.staj037,g_staj_m.staj038,
       g_staj_m.staj029,g_staj_m.staj030, #150506-00007#3 150522 by sakura add
       g_staj_m.staj031,g_staj_m.staj033,g_staj_m.staj034,g_staj_m.staj042, #add by geza 20160318
       g_staj_m.staj009,g_staj_m.staj009_desc,g_staj_m.staj010,g_staj_m.staj010_desc, 
       g_staj_m.staj015,g_staj_m.staj015_desc,g_staj_m.staj016,g_staj_m.staj016_desc,g_staj_m.staj011, 
       g_staj_m.staj012,g_staj_m.staj013,g_staj_m.staj013_desc,g_staj_m.staj014,g_staj_m.staj014_desc,g_staj_m.staj041,g_staj_m.staj041_desc,
       g_staj_m.staj017,g_staj_m.staj018,g_staj_m.staj019,g_staj_m.staj020,g_staj_m.stajsite,g_staj_m.stajsite_desc, 
       g_staj_m.stajunit,g_staj_m.stajstus,g_staj_m.stajownid,g_staj_m.stajownid_desc,g_staj_m.stajowndp, 
       g_staj_m.stajowndp_desc,g_staj_m.stajcrtid,g_staj_m.stajcrtid_desc,g_staj_m.stajcrtdp,g_staj_m.stajcrtdp_desc, 
       g_staj_m.stajcrtdt,g_staj_m.stajmodid,g_staj_m.stajmodid_desc,g_staj_m.stajmoddt,g_staj_m.stajcnfid, 
       g_staj_m.stajcnfid_desc,g_staj_m.stajcnfdt              #鎖住將被更改或取消的資料 

   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = g_staj_m.stajdocno
      LET g_errparam.popup = FALSE
      CALL cl_err()
          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #IF NOT cl_ask_delete() THEN             #確認一下
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
{<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      INITIALIZE g_doc.* TO NULL         
      LET g_doc.column1 = "stajdocno"       
      LET g_doc.value1 = g_staj_m.stajdocno     
      CALL cl_doc_remove()  
  
      #資料備份
      LET g_stajdocno_t = g_staj_m.stajdocno
 
 
      DELETE FROM staj_t
       WHERE stajent = g_enterprise AND stajdocno = g_staj_m.stajdocno
 
       
      #add-point:單頭刪除中
{<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = g_staj_m.stajdocno
      LET g_errparam.popup = FALSE
      CALL cl_err()
 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
{<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
{<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM stak_t
       WHERE stakent = g_enterprise AND stakdocno = g_staj_m.stajdocno
 
 
      #add-point:單身刪除中
{<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "stak_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()
 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
{<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前
{<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM stam_t
       WHERE stament = g_enterprise AND
             stamdocno = g_staj_m.stajdocno
      #add-point:單身刪除中
{<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "stam_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()
 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
{<point name="delete.body.a_delete2"/>}
      #end add-point
 
 
 
 
                                                               
      CLEAR FORM
      CALL g_stak_d.clear() 
      CALL g_stak2_d.clear()
      CALL g_stak3_d.clear()
      CALL g_stak4_d.clear() 
      CALL g_stal_d.clear()         
      CALL g_staw_d.clear()
      CALL g_stay_d.clear()
      CALL g_stay1_d.clear()
 
     
      CALL astt301_ui_browser_refresh()  
      CALL astt301_ui_headershow()  
      CALL astt301_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL astt301_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL astt301_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
 
 
 
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE astt301_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_staj_m.stajdocno,'D')
    
END FUNCTION

{</section>}

{<section id="astt301.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION astt301_b_fill()
   {<Local define>}
   DEFINE p_wc2      STRING
   {</Local define>}
   #add-point:b_fill段define
{<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_stak_d.clear()    #g_stak_d 單頭及單身 
   CALL g_stak2_d.clear()
    CALL g_staw_d.clear()
    CALL g_stak3_d.clear()
    CALL g_stak4_d.clear()
 
 
   #add-point:b_fill段sql_before
{<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF astt301_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE stakseq,stak003,'',stak023,stak024,stak025,'',stak004,stak005,stak006,stak007,stak008,stak027,stak009,  
          '',stak010,'',stak011,stak012,stak013,stak014,stak015,stak016,stak022,stak017,stak018,stak026,stak019,stakunit, 
          staksite FROM stak_t",   
                  " INNER JOIN staj_t ON stajdocno = stakdocno ",
 
                  #"",
                  
                  "",
                  " WHERE stakent=? AND stakdocno=?"
      #add-point:b_fill段sql_before
{<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY stak_t.stakseq"
      
      #add-point:單身填充控制
{<point name="b_fill.sql"/>}
      #end add-point
      
      PREPARE astt301_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR astt301_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_staj_m.stajdocno
 
                                               
      FOREACH b_fill_cs INTO g_stak_d[l_ac].stakseq,g_stak_d[l_ac].stakacti,g_stak_d[l_ac].stak003,g_stak_d[l_ac].stak003_desc,g_stak_d[l_ac].stak023,g_stak_d[l_ac].stak024, #add by geza 20150610 stak023,stak024
          g_stak_d[l_ac].stak025,g_stak_d[l_ac].stak025_desc,g_stak_d[l_ac].stak004,g_stak_d[l_ac].stak005,g_stak_d[l_ac].stak006,g_stak_d[l_ac].stak028,g_stak_d[l_ac].stak007, 
          g_stak_d[l_ac].stak008,g_stak_d[l_ac].stak027,g_stak_d[l_ac].stak009,g_stak_d[l_ac].stak009_desc,g_stak_d[l_ac].stak010,   #150612-00023#add stak027
          g_stak_d[l_ac].stak010_desc,g_stak_d[l_ac].stak011,g_stak_d[l_ac].stak012,g_stak_d[l_ac].stak013, 
          g_stak_d[l_ac].stak014,g_stak_d[l_ac].stak015,g_stak_d[l_ac].stak016,g_stak_d[l_ac].stak029,g_stak_d[l_ac].stak030,g_stak_d[l_ac].stak022,g_stak_d[l_ac].stak017, 
          g_stak_d[l_ac].stak018,g_stak_d[l_ac].stak026,g_stak_d[l_ac].stak019,g_stak_d[l_ac].stak020,g_stak_d[l_ac].stak021,g_stak_d[l_ac].stakunit,g_stak_d[l_ac].staksite 

         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "FOREACH:"
            LET g_errparam.popup = TRUE
            CALL cl_err()

            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
{<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec AND g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code =  9035
            LET g_errparam.extend =  ''
            LET g_errparam.popup = TRUE
            CALL cl_err()

            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
   #判斷是否填充
   IF astt301_fill_chk(2) THEN
      LET g_sql = "SELECT  UNIQUE stamseq,stam003,'',stam005,stam004,stamacti,stamunit,stamsite FROM stam_t",   
                  " INNER JOIN staj_t ON stajdocno = stamdocno ",
 
                  "",
                  
                  " WHERE stament=? AND stamdocno=?"   
      #add-point:b_fill段sql_before
{<point name="b_fill.body2.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table2) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY stam_t.stamseq"
      
      #add-point:單身填充控制
{<point name="b_fill.sql2"/>}
      #end add-point
      
      PREPARE astt301_pb2 FROM g_sql
      DECLARE b_fill_cs2 CURSOR FOR astt301_pb2
      
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_staj_m.stajdocno
 
                                               
      FOREACH b_fill_cs2 INTO g_stak2_d[l_ac].stamseq,g_stak2_d[l_ac].stam003,g_stak2_d[l_ac].stam003_desc,g_stak2_d[l_ac].stam005, 
          g_stak2_d[l_ac].stam004,g_stak2_d[l_ac].stamacti,g_stak2_d[l_ac].stamunit,g_stak2_d[l_ac].stamsite
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "FOREACH:"
            LET g_errparam.popup = TRUE
            CALL cl_err()

            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
{<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code =  9035
            LET g_errparam.extend =  ''
            LET g_errparam.popup = FALSE
            CALL cl_err()

            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理
{<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_stak_d.deleteElement(g_stak_d.getLength())
   CALL g_stak2_d.deleteElement(g_stak2_d.getLength())
 
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE astt301_pb
   FREE astt301_pb2
 
 
   
END FUNCTION

{</section>}

{<section id="astt301.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION astt301_delete_b(ps_table,ps_keys_bak,ps_page)
   {<Local define>}
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM stak_t
       WHERE stakent = g_enterprise AND
         stakdocno = ps_keys_bak[1] AND stakseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = ""
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM stam_t
       WHERE stament = g_enterprise AND
         stamdocno = ps_keys_bak[1] AND stamseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "stam_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="astt301.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION astt301_insert_b(ps_table,ps_keys,ps_page)
   {<Local define>}
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   {</Local define>}
   #add-point:insert_b段define
{<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
{<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO stak_t
                  (stakent,
                   stakdocno,
                   stakseq,
                   stakacti
                   ,stak003,stak023,stak024,stak025,stak004,stak005,stak006,stak007,stak008,stak027,stak009,stak010,stak011,stak012,stak013,stak014,stak015,stak016,stak017,stak018,stak026,stak019,stak020,stak021,stak022,stak028,stak029,stak030,stakunit,staksite) #add by geza 20150610 stak023,stak024 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],
                   g_stak_d[g_detail_idx].stakacti
                   ,g_stak_d[g_detail_idx].stak003,g_stak_d[g_detail_idx].stak023,g_stak_d[g_detail_idx].stak024,g_stak_d[g_detail_idx].stak025,g_stak_d[g_detail_idx].stak004,g_stak_d[g_detail_idx].stak005, #add by geza 20150610 stak023,stak024
                       g_stak_d[g_detail_idx].stak006,g_stak_d[g_detail_idx].stak007,g_stak_d[g_detail_idx].stak008,g_stak_d[g_detail_idx].stak027,                                 #150612-00023#5 add stak027 
                       g_stak_d[g_detail_idx].stak009,g_stak_d[g_detail_idx].stak010,g_stak_d[g_detail_idx].stak011, 
                       g_stak_d[g_detail_idx].stak012,g_stak_d[g_detail_idx].stak013,g_stak_d[g_detail_idx].stak014, 
                       g_stak_d[g_detail_idx].stak015,g_stak_d[g_detail_idx].stak016,g_stak_d[g_detail_idx].stak017, 
                       g_stak_d[g_detail_idx].stak018,g_stak_d[g_detail_idx].stak026,g_stak_d[g_detail_idx].stak019,g_stak_d[g_detail_idx].stak020,g_stak_d[g_detail_idx].stak021,g_stak_d[g_detail_idx].stak022,g_stak_d[g_detail_idx].stak028,g_stak_d[g_detail_idx].stak029,g_stak_d[g_detail_idx].stak030,g_stak_d[g_detail_idx].stakunit, 
                       g_stak_d[g_detail_idx].staksite)
      #add-point:insert_b段資料新增中
{<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "stak_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      #add-point:insert_b段資料新增後
{<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
{<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO stam_t
                  (stament,
                   stamdocno,
                   stamseq
                   ,stam003,stam004,stamacti,stam005,stamunit,stamsite) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stak2_d[g_detail_idx].stam003,g_stak2_d[g_detail_idx].stam004,g_stak2_d[g_detail_idx].stamacti,g_stak2_d[g_detail_idx].stam005,g_stak2_d[g_detail_idx].stamunit, 
                       g_stak2_d[g_detail_idx].stamsite)
      #add-point:insert_b段資料新增中
{<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "stam_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      #add-point:insert_b段資料新增後
{<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other
{<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION

{</section>}

{<section id="astt301.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION astt301_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   {<Local define>}
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:update_b段define
{<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stak_t" THEN
      #add-point:update_b段修改前
{<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE stak_t 
         SET (stakdocno,
              stakseq,
              stakacti
              ,stak003,stak023,stak024,stak025,stak004,stak005,stak006,stak007,stak008,stak027,stak009,stak010,stak011,stak012,stak013,stak014,stak015,stak016,stak017,stak018,stak026,stak019,stak022,stak028,stak029,stak030,stakunit,staksite) #add by 20150610 stak023,stak024
              = 
             (ps_keys[1],ps_keys[2],
              g_stak_d[g_detail_idx].stakacti
              ,g_stak_d[g_detail_idx].stak003,g_stak_d[g_detail_idx].stak023,g_stak_d[g_detail_idx].stak024,g_stak_d[g_detail_idx].stak025,g_stak_d[g_detail_idx].stak004,g_stak_d[g_detail_idx].stak005, #add by 20150610 stak023,stak024
                  g_stak_d[g_detail_idx].stak006,g_stak_d[g_detail_idx].stak007,g_stak_d[g_detail_idx].stak008,g_stak_d[g_detail_idx].stak027,
                  g_stak_d[g_detail_idx].stak009,g_stak_d[g_detail_idx].stak010,g_stak_d[g_detail_idx].stak011, 
                  g_stak_d[g_detail_idx].stak012,g_stak_d[g_detail_idx].stak013,g_stak_d[g_detail_idx].stak014, 
                  g_stak_d[g_detail_idx].stak015,g_stak_d[g_detail_idx].stak016,g_stak_d[g_detail_idx].stak017, 
                  g_stak_d[g_detail_idx].stak018,g_stak_d[g_detail_idx].stak026,g_stak_d[g_detail_idx].stak019,g_stak_d[g_detail_idx].stak022,
                  g_stak_d[g_detail_idx].stak028,g_stak_d[g_detail_idx].stak029,g_stak_d[g_detail_idx].stak030,g_stak_d[g_detail_idx].stakunit, 
                  g_stak_d[g_detail_idx].staksite) 
         WHERE stakent = g_enterprise AND stakdocno = ps_keys_bak[1] AND stakseq = ps_keys_bak[2]
      #add-point:update_b段修改中
{<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = "std-00009"
            LET g_errparam.extend = "stak_t"
            LET g_errparam.popup = TRUE
            CALL cl_err()

            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "stak_t"
            LET g_errparam.popup = TRUE
            CALL cl_err()
  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
{<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stam_t" THEN
      #add-point:update_b段修改前
{<point name="update_b.before_update2" mark="Y"/>}
      #end add-point     
      UPDATE stam_t 
         SET (stamdocno,
              stamseq
              ,stam003,stam004,stam005,stamacti,stamunit,stamsite) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stak2_d[g_detail_idx].stam003,g_stak2_d[g_detail_idx].stam004,g_stak2_d[g_detail_idx].stam005,g_stak2_d[g_detail_idx].stamacti,g_stak2_d[g_detail_idx].stamunit, 
                  g_stak2_d[g_detail_idx].stamsite) 
         WHERE stament = g_enterprise AND stamdocno = ps_keys_bak[1] AND stamseq = ps_keys_bak[2]
      #add-point:update_b段修改中
{<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = "std-00009"
            LET g_errparam.extend = "stam_t"
            LET g_errparam.popup = TRUE
            CALL cl_err()

            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "stam_t"
            LET g_errparam.popup = TRUE
            CALL cl_err()
  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
{<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
 
   
 
   
 
   
   #add-point:update_b段other
{<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="astt301.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION astt301_lock_b(ps_table,ps_page)
   {<Local define>}
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL astt301_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "stak_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astt301_bcl USING g_enterprise,
                                       g_staj_m.stajdocno,g_stak_d[g_detail_idx].stakseq
                                       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "astt301_bcl"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
   
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "stam_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astt301_bcl2 USING g_enterprise,
                                             g_staj_m.stajdocno,g_stak2_d[g_detail_idx].stamseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "astt301_bcl2"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION

{</section>}

{<section id="astt301.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION astt301_unlock_b(ps_table,ps_page)
   {<Local define>}
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astt301_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astt301_bcl2
   END IF
 
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION

{</section>}

{<section id="astt301.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION astt301_set_entry(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1  
   {</Local define>}
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("stajdocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="astt301.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION astt301_set_no_entry(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1   
   {</Local define>}
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("stajdocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION

{</section>}

{<section id="astt301.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION astt301_set_entry_b(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1   
   {</Local define>}
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION

{</section>}

{<section id="astt301.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION astt301_set_no_entry_b(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1   
   {</Local define>}
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION

{</section>}

{<section id="astt301.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION astt301_default_search()
   {<Local define>}
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   {</Local define>}
   #add-point:default_search段define
{<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
{<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " stajdocno = '", g_argv[1], "' AND "
   END IF
   
     
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
   ELSE
      #160810-00002#1 160812 by lori mod---(S)  
      #舊程式樣板標準---(S)
      #IF cl_null(g_wc) THEN
      #   LET g_wc = " 1=1" 
      #END IF
      #舊程式樣板標準---(E)
      
      #若無外部參數則預設為1=2
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF  
      #160810-00002#1 160812 by lori mod---(E)
   END IF
   #add-point:default_search段結束前
{<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION

{</section>}

{<section id="astt301.state_change" >}
   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION astt301_statechange()
   {<Local define>}
   DEFINE lc_state LIKE type_t.chr5
   {</Local define>}
   #add-point:statechange段define
{<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
{<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_staj_m.stajdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_staj_m.stajstus
            WHEN "N"
               HIDE OPTION "open"
            WHEN "X"
               HIDE OPTION "invalid"
 
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
 
            
         END CASE
     
      #add-point:menu前
{<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION open
         LET lc_state = "N"
         #add-point:action控制
{<point name="statechange.open"/>}
         #end add-point
         EXIT MENU
  
{<point name="statechange.invalid"/>}
        
 
      ON ACTION confirmed
         LET lc_state = "Y"
         #add-point:action控制
{<point name="statechange.confirmed"/>}
         #end add-point
         EXIT MENU
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
       IF NOT astt301_send() THEN
         RETURN
       END IF
         END IF
         LET lc_state = ''  #因為_send()已有執行update動作
         EXIT MENU
 
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT astt301_draw_out() THEN
               RETURN
            END IF
         END IF
         LET lc_state = ''   #因為_draw_out()已有執行update動作
         EXIT MENU

 
      ON ACTION invalid
         LET lc_state = "X"
        
         EXIT MENU
      
      #add-point:stus控制
{<point name="statechange.more_control"/>}
      #end add-point
    
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "X"
 
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
 
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
{<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE staj_t SET stajstus = lc_state 
    WHERE stajent = g_enterprise AND stajdocno = g_staj_m.stajdocno
 
  
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
 
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
 
         
      END CASE
      LET g_staj_m.stajstus = lc_state
      DISPLAY BY NAME g_staj_m.stajstus
   END IF
 
   #add-point:stus修改後
{<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
{<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 

{</section>}

{<section id="astt301.idx_chk" >}
#+ 單身筆數變更
PRIVATE FUNCTION astt301_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_stak_d.getLength() THEN
         LET g_detail_idx = g_stak_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stak_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stak_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_stak2_d.getLength() THEN
         LET g_detail_idx = g_stak2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stak2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stak2_d.getLength() TO FORMONLY.cnt
   END IF
 
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION

{</section>}

{<section id="astt301.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION astt301_b_fill2(pi_idx)
   {<Local define>}
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   {</Local define>}
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL astt301_detail_show()
   
END FUNCTION

{</section>}

{<section id="astt301.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION astt301_fill_chk(ps_idx)
   {<Local define>}
   DEFINE ps_idx        LIKE type_t.chr10
   {</Local define>}
   #add-point:fill_chk段define
{<point name="fill_chk.define"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table4) OR g_wc2_table4.trim() = '1=1') THEN
      #add-point:fill_chk段define
{<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
   IF ps_idx = 2 AND
      ((NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
  
    #根據wc判定是否需要填充
   IF ps_idx = 4 AND
      ((NOT cl_null(g_wc2_table4) AND g_wc2_table4.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
     #根據wc判定是否需要填充
   IF ps_idx = 7 AND
      ((NOT cl_null(g_wc2_table7) AND g_wc2_table7.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
   IF ps_idx = 8 AND
      ((NOT cl_null(g_wc2_table8) AND g_wc2_table8.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
   RETURN FALSE
 
END FUNCTION

{</section>}

{<section id="astt301.signature" >}
   

{</section>}

{<section id="astt301.set_pk_array" >}


{</section>}

{<section id="astt301.other_dialog" readonly="Y" >}
 

{</section>}

{<section id="astt301.other_function" readonly="Y" >}
   
{<point name="other.function"/>}

{</section>}

