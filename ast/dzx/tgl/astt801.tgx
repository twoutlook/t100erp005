{<section id="astt801.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0018(2016-08-17 16:34:05), PR版次:
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:
#+ Build......: 000055
#+ Filename...: astt801
#+ Description: 招商租賃合約異動申請作業
#+ Creator....: 06189(2016-03-24 17:26:12)
#+ Modifier...: 06189 -SD/PR-
{</section>}



{<section id="astt801.global" >}
#應用 t01 樣板自動產生(Version:79)
#add-point:填寫註解說明 name="global.memo" 
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"
{<point name="global.memo_customerization" edit="c"/>}
#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"
{<point name="global.import"/>}
#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"
{<point name="global.inc" mark="Y"/>}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_stie_m        RECORD
       stiesite LIKE stie_t.stiesite, 
   stiesite_desc LIKE type_t.chr80, 
   stiedocdt LIKE stie_t.stiedocdt, 
   stiedocno LIKE stie_t.stiedocno, 
   stie000 LIKE stie_t.stie000, 
   stie001 LIKE stie_t.stie001, 
   stie002 LIKE stie_t.stie002, 
   stie200 LIKE stie_t.stie200, 
   stie004 LIKE stie_t.stie004, 
   stie005 LIKE stie_t.stie005, 
   stie006 LIKE stie_t.stie006, 
   stiestus LIKE stie_t.stiestus, 
   stie007 LIKE stie_t.stie007, 
   stie007_desc LIKE type_t.chr80, 
   stie008 LIKE stie_t.stie008, 
   stie008_desc LIKE type_t.chr80, 
   stie010 LIKE stie_t.stie010, 
   stie009 LIKE stie_t.stie009, 
   stie011 LIKE stie_t.stie011, 
   stie012 LIKE stie_t.stie012, 
   stie013 LIKE stie_t.stie013, 
   stie014 LIKE stie_t.stie014, 
   stie015 LIKE stie_t.stie015, 
   stie016 LIKE stie_t.stie016, 
   stie017 LIKE stie_t.stie017, 
   stie017_desc LIKE type_t.chr80, 
   stie018 LIKE stie_t.stie018, 
   stie018_desc LIKE type_t.chr80, 
   stie003 LIKE stie_t.stie003, 
   stie003_desc LIKE type_t.chr80, 
   stie049 LIKE stie_t.stie049, 
   stie019 LIKE stie_t.stie019, 
   stie019_desc LIKE type_t.chr80, 
   stie020 LIKE stie_t.stie020, 
   stie020_desc LIKE type_t.chr80, 
   stie021 LIKE stie_t.stie021, 
   stie021_desc LIKE type_t.chr80, 
   stie022 LIKE stie_t.stie022, 
   stie022_desc LIKE type_t.chr80, 
   stie027 LIKE stie_t.stie027, 
   stie027_desc LIKE type_t.chr80, 
   stie028 LIKE stie_t.stie028, 
   stie028_desc LIKE type_t.chr80, 
   stie029 LIKE stie_t.stie029, 
   stie029_desc LIKE type_t.chr80, 
   stie026 LIKE stie_t.stie026, 
   stie023 LIKE stie_t.stie023, 
   stie024 LIKE stie_t.stie024, 
   stie025 LIKE stie_t.stie025, 
   stie223 LIKE stie_t.stie223, 
   stie224 LIKE stie_t.stie224, 
   stie225 LIKE stie_t.stie225, 
   stie030 LIKE stie_t.stie030, 
   stie030_desc LIKE type_t.chr80, 
   stie031 LIKE stie_t.stie031, 
   stie031_desc LIKE type_t.chr80, 
   stie032 LIKE stie_t.stie032, 
   stie032_desc LIKE type_t.chr80, 
   stie033 LIKE stie_t.stie033, 
   stie034 LIKE stie_t.stie034, 
   stie034_desc LIKE type_t.chr80, 
   stie035 LIKE stie_t.stie035, 
   stie035_desc LIKE type_t.chr80, 
   stie036 LIKE stie_t.stie036, 
   stie036_desc LIKE type_t.chr80, 
   stie037 LIKE stie_t.stie037, 
   stie038 LIKE stie_t.stie038, 
   stie038_desc LIKE type_t.chr80, 
   stie039 LIKE stie_t.stie039, 
   stie039_desc LIKE type_t.chr80, 
   stie040 LIKE stie_t.stie040, 
   stie041 LIKE stie_t.stie041, 
   stie042 LIKE stie_t.stie042, 
   stie043 LIKE stie_t.stie043, 
   stie044 LIKE stie_t.stie044, 
   stie045 LIKE stie_t.stie045, 
   stie046 LIKE stie_t.stie046, 
   stie047 LIKE stie_t.stie047, 
   stie048 LIKE stie_t.stie048, 
   stie050 LIKE stie_t.stie050, 
   stie051 LIKE stie_t.stie051, 
   stie051_desc LIKE type_t.chr80, 
   stie052 LIKE stie_t.stie052, 
   stie053 LIKE stie_t.stie053, 
   stie053_desc LIKE type_t.chr80, 
   stieownid LIKE stie_t.stieownid, 
   stieownid_desc LIKE type_t.chr80, 
   stieowndp LIKE stie_t.stieowndp, 
   stieowndp_desc LIKE type_t.chr80, 
   stiecrtid LIKE stie_t.stiecrtid, 
   stiecrtid_desc LIKE type_t.chr80, 
   stiecrtdp LIKE stie_t.stiecrtdp, 
   stiecrtdp_desc LIKE type_t.chr80, 
   stiecrtdt LIKE stie_t.stiecrtdt, 
   stiemodid LIKE stie_t.stiemodid, 
   stiemodid_desc LIKE type_t.chr80, 
   stiemoddt LIKE stie_t.stiemoddt, 
   stiecnfid LIKE stie_t.stiecnfid, 
   stiecnfid_desc LIKE type_t.chr80, 
   stiecnfdt LIKE stie_t.stiecnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_stif_d        RECORD
       stifseq LIKE stif_t.stifseq, 
   stif001 LIKE stif_t.stif001, 
   stif002 LIKE stif_t.stif002, 
   stif003 LIKE stif_t.stif003, 
   stif021 LIKE stif_t.stif021, 
   stif004 LIKE stif_t.stif004, 
   stif004_desc LIKE type_t.chr500, 
   stae004 LIKE type_t.chr10, 
   stif022 LIKE stif_t.stif022, 
   stif022_desc LIKE type_t.chr500, 
   stif005 LIKE stif_t.stif005, 
   stif006 LIKE stif_t.stif006, 
   stif007 LIKE stif_t.stif007, 
   stif008 LIKE stif_t.stif008, 
   stif009 LIKE stif_t.stif009, 
   stif010 LIKE stif_t.stif010, 
   stif011 LIKE stif_t.stif011, 
   stif018 LIKE stif_t.stif018, 
   stif016 LIKE stif_t.stif016, 
   stif017 LIKE stif_t.stif017, 
   stif020 LIKE stif_t.stif020, 
   stif023 LIKE stif_t.stif023, 
   stif024 LIKE stif_t.stif024, 
   stif024_desc LIKE type_t.chr500, 
   stif025 LIKE stif_t.stif025, 
   stifsite LIKE stif_t.stifsite, 
   stifunit LIKE stif_t.stifunit
       END RECORD
PRIVATE TYPE type_g_stif11_d RECORD
       stinsite LIKE type_t.chr10, 
   stinunit LIKE type_t.chr10, 
   stinseq LIKE type_t.num10, 
   stin001 LIKE type_t.chr20, 
   stin002 LIKE type_t.dat, 
   stin004 LIKE type_t.chr10, 
   stin003 LIKE type_t.chr10, 
   stin005 LIKE type_t.chr10, 
   stin005_desc LIKE type_t.chr500, 
   stin006 LIKE stin_t.stin006, 
   stin007 LIKE type_t.chr20, 
   stin008 LIKE type_t.chr10, 
   stin009 LIKE type_t.chr10, 
   stin010 LIKE type_t.num10
       END RECORD
PRIVATE TYPE type_g_stif13_d RECORD
       stiosite LIKE type_t.chr10, 
   stiounit LIKE type_t.chr10, 
   stioseq LIKE type_t.num10, 
   stio001 LIKE type_t.chr20, 
   stio002 LIKE type_t.dat, 
   stio003 LIKE type_t.dat, 
   stio004 LIKE type_t.dat, 
   stio005 LIKE type_t.chr1, 
   stio006 LIKE type_t.chr20, 
   stio007 LIKE type_t.chr10
       END RECORD
PRIVATE TYPE type_g_stif2_d RECORD
       stihseq LIKE stih_t.stihseq, 
   stih001 LIKE stih_t.stih001, 
   stih002 LIKE stih_t.stih002, 
   stih002_desc LIKE type_t.chr500, 
   stae004 LIKE stae_t.stae004, 
   stih003 LIKE stih_t.stih003, 
   stih008 LIKE stih_t.stih008, 
   stih004 LIKE stih_t.stih004, 
   stih005 LIKE stih_t.stih005, 
   stih006 LIKE stih_t.stih006, 
   stih007 LIKE stih_t.stih007, 
   stihsite LIKE stih_t.stihsite, 
   stihunit LIKE stih_t.stihunit
       END RECORD
PRIVATE TYPE type_g_stif3_d RECORD
       stiiseq LIKE stii_t.stiiseq, 
   stii001 LIKE stii_t.stii001, 
   stii002 LIKE stii_t.stii002, 
   stii002_desc LIKE type_t.chr500, 
   stae004 LIKE stae_t.stae004, 
   stii003 LIKE stii_t.stii003, 
   stii003_desc LIKE type_t.chr500, 
   stii010 LIKE stii_t.stii010, 
   stii010_desc LIKE type_t.chr500, 
   stii004 LIKE stii_t.stii004, 
   stii005 LIKE stii_t.stii005, 
   stii006 LIKE stii_t.stii006, 
   stii007 LIKE stii_t.stii007, 
   stii008 LIKE stii_t.stii008, 
   stii009 LIKE stii_t.stii009, 
   stiisite LIKE stii_t.stiisite, 
   stiiunit LIKE stii_t.stiiunit
       END RECORD
PRIVATE TYPE type_g_stif4_d RECORD
       stilseq LIKE stil_t.stilseq, 
   stil001 LIKE stil_t.stil001, 
   stil002 LIKE stil_t.stil002, 
   stil003 LIKE stil_t.stil003, 
   stil003_desc LIKE type_t.chr500, 
   stil004 LIKE stil_t.stil004, 
   stil005 LIKE stil_t.stil005, 
   stil006 LIKE stil_t.stil006, 
   stil007 LIKE stil_t.stil007, 
   stil008 LIKE stil_t.stil008, 
   stilsite LIKE stil_t.stilsite, 
   stilunit LIKE stil_t.stilunit
       END RECORD
PRIVATE TYPE type_g_stif5_d RECORD
       stijacti LIKE stij_t.stijacti, 
   stijseq LIKE stij_t.stijseq, 
   stij001 LIKE stij_t.stij001, 
   stij002 LIKE stij_t.stij002, 
   stij002_desc LIKE type_t.chr500, 
   stij003 LIKE stij_t.stij003, 
   stij004 LIKE stij_t.stij004, 
   stij005 LIKE stij_t.stij005, 
   stij006 LIKE stij_t.stij006, 
   stij006_desc LIKE type_t.chr500, 
   stij007 LIKE stij_t.stij007, 
   stij007_desc LIKE type_t.chr500, 
   stij008 LIKE stij_t.stij008, 
   stij008_desc LIKE type_t.chr500, 
   stij009 LIKE stij_t.stij009, 
   stijsite LIKE stij_t.stijsite, 
   stijunit LIKE stij_t.stijunit
       END RECORD
PRIVATE TYPE type_g_stif6_d RECORD
       stikacti LIKE stik_t.stikacti, 
   stikseq LIKE stik_t.stikseq, 
   stik001 LIKE stik_t.stik001, 
   stik002 LIKE stik_t.stik002, 
   stik002_desc LIKE type_t.chr500, 
   stik004 LIKE stik_t.stik004, 
   stik003 LIKE stik_t.stik003, 
   stik003_desc LIKE type_t.chr500, 
   stik005 LIKE stik_t.stik005, 
   stiksite LIKE stik_t.stiksite, 
   stikunit LIKE stik_t.stikunit
       END RECORD
PRIVATE TYPE type_g_stif7_d RECORD
       stimseq LIKE stim_t.stimseq, 
   stim001 LIKE stim_t.stim001, 
   stim002 LIKE stim_t.stim002, 
   stim003 LIKE stim_t.stim003, 
   stim003_desc LIKE type_t.chr500, 
   stim004 LIKE stim_t.stim004, 
   stim005 LIKE stim_t.stim005, 
   stim006 LIKE stim_t.stim006, 
   stim007 LIKE stim_t.stim007, 
   stim008 LIKE stim_t.stim008, 
   stim009 LIKE stim_t.stim009, 
   stim010 LIKE stim_t.stim010, 
   stim011 LIKE stim_t.stim011, 
   stim012 LIKE stim_t.stim012, 
   stim013 LIKE stim_t.stim013, 
   stim014 LIKE stim_t.stim014, 
   stim015 LIKE stim_t.stim015, 
   stim016 LIKE stim_t.stim016, 
   stim018 LIKE stim_t.stim018, 
   stim019 LIKE stim_t.stim019, 
   stim019_desc LIKE type_t.chr500, 
   stim017 LIKE stim_t.stim017, 
   stimsite LIKE stim_t.stimsite, 
   stimunit LIKE stim_t.stimunit
       END RECORD
PRIVATE TYPE type_g_stif9_d RECORD
       stigsite LIKE type_t.chr10, 
   stigunit LIKE type_t.chr10, 
   stigseq1 LIKE type_t.num10, 
   stig001 LIKE type_t.chr20, 
   stig002 LIKE type_t.num20_6, 
   stig003 LIKE type_t.num20_6, 
   stig004 LIKE type_t.num20_6, 
   stig006 LIKE type_t.num20_6
       END RECORD

 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_stiedocno LIKE stie_t.stiedocno,
      b_stiedocdt LIKE stie_t.stiedocdt,
      b_stie000 LIKE stie_t.stie000,
      b_stie001 LIKE stie_t.stie001,
      b_stiesite LIKE stie_t.stiesite,
   b_stiesite_desc LIKE type_t.chr80,
      b_stie007 LIKE stie_t.stie007,
   b_stie007_desc LIKE type_t.chr80,
      b_stie008 LIKE stie_t.stie008,
   b_stie008_desc LIKE type_t.chr80,
      b_stie011 LIKE stie_t.stie011,
      b_stie012 LIKE stie_t.stie012,
      b_stie005 LIKE stie_t.stie005,
      b_stie002 LIKE stie_t.stie002,
      b_stie006 LIKE stie_t.stie006
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>} 
#end add-point
       
#模組變數(Module Variables)
DEFINE g_stie_m          type_g_stie_m
DEFINE g_stie_m_t        type_g_stie_m
DEFINE g_stie_m_o        type_g_stie_m
DEFINE g_stie_m_mask_o   type_g_stie_m #轉換遮罩前資料
DEFINE g_stie_m_mask_n   type_g_stie_m #轉換遮罩後資料
 
   DEFINE g_stiedocno_t LIKE stie_t.stiedocno

 
DEFINE g_stif_d          DYNAMIC ARRAY OF type_g_stif_d
DEFINE g_stif_d_t        type_g_stif_d
DEFINE g_stif_d_o        type_g_stif_d
DEFINE g_stif_d_mask_o   DYNAMIC ARRAY OF type_g_stif_d #轉換遮罩前資料
DEFINE g_stif_d_mask_n   DYNAMIC ARRAY OF type_g_stif_d #轉換遮罩後資料
DEFINE g_stif11_d          DYNAMIC ARRAY OF type_g_stif11_d
DEFINE g_stif11_d_t        type_g_stif11_d
DEFINE g_stif11_d_o        type_g_stif11_d
DEFINE g_stif11_d_mask_o   DYNAMIC ARRAY OF type_g_stif11_d #轉換遮罩前資料
DEFINE g_stif11_d_mask_n   DYNAMIC ARRAY OF type_g_stif11_d #轉換遮罩後資料
DEFINE g_stif13_d          DYNAMIC ARRAY OF type_g_stif13_d
DEFINE g_stif13_d_t        type_g_stif13_d
DEFINE g_stif13_d_o        type_g_stif13_d
DEFINE g_stif13_d_mask_o   DYNAMIC ARRAY OF type_g_stif13_d #轉換遮罩前資料
DEFINE g_stif13_d_mask_n   DYNAMIC ARRAY OF type_g_stif13_d #轉換遮罩後資料
DEFINE g_stif2_d          DYNAMIC ARRAY OF type_g_stif2_d
DEFINE g_stif2_d_t        type_g_stif2_d
DEFINE g_stif2_d_o        type_g_stif2_d
DEFINE g_stif2_d_mask_o   DYNAMIC ARRAY OF type_g_stif2_d #轉換遮罩前資料
DEFINE g_stif2_d_mask_n   DYNAMIC ARRAY OF type_g_stif2_d #轉換遮罩後資料
DEFINE g_stif3_d          DYNAMIC ARRAY OF type_g_stif3_d
DEFINE g_stif3_d_t        type_g_stif3_d
DEFINE g_stif3_d_o        type_g_stif3_d
DEFINE g_stif3_d_mask_o   DYNAMIC ARRAY OF type_g_stif3_d #轉換遮罩前資料
DEFINE g_stif3_d_mask_n   DYNAMIC ARRAY OF type_g_stif3_d #轉換遮罩後資料
DEFINE g_stif4_d          DYNAMIC ARRAY OF type_g_stif4_d
DEFINE g_stif4_d_t        type_g_stif4_d
DEFINE g_stif4_d_o        type_g_stif4_d
DEFINE g_stif4_d_mask_o   DYNAMIC ARRAY OF type_g_stif4_d #轉換遮罩前資料
DEFINE g_stif4_d_mask_n   DYNAMIC ARRAY OF type_g_stif4_d #轉換遮罩後資料
DEFINE g_stif5_d          DYNAMIC ARRAY OF type_g_stif5_d
DEFINE g_stif5_d_t        type_g_stif5_d
DEFINE g_stif5_d_o        type_g_stif5_d
DEFINE g_stif5_d_mask_o   DYNAMIC ARRAY OF type_g_stif5_d #轉換遮罩前資料
DEFINE g_stif5_d_mask_n   DYNAMIC ARRAY OF type_g_stif5_d #轉換遮罩後資料
DEFINE g_stif6_d          DYNAMIC ARRAY OF type_g_stif6_d
DEFINE g_stif6_d_t        type_g_stif6_d
DEFINE g_stif6_d_o        type_g_stif6_d
DEFINE g_stif6_d_mask_o   DYNAMIC ARRAY OF type_g_stif6_d #轉換遮罩前資料
DEFINE g_stif6_d_mask_n   DYNAMIC ARRAY OF type_g_stif6_d #轉換遮罩後資料
DEFINE g_stif7_d          DYNAMIC ARRAY OF type_g_stif7_d
DEFINE g_stif7_d_t        type_g_stif7_d
DEFINE g_stif7_d_o        type_g_stif7_d
DEFINE g_stif7_d_mask_o   DYNAMIC ARRAY OF type_g_stif7_d #轉換遮罩前資料
DEFINE g_stif7_d_mask_n   DYNAMIC ARRAY OF type_g_stif7_d #轉換遮罩後資料
DEFINE g_stif9_d          DYNAMIC ARRAY OF type_g_stif9_d
DEFINE g_stif9_d_t        type_g_stif9_d
DEFINE g_stif9_d_o        type_g_stif9_d
DEFINE g_stif9_d_mask_o   DYNAMIC ARRAY OF type_g_stif9_d #轉換遮罩前資料
DEFINE g_stif9_d_mask_n   DYNAMIC ARRAY OF type_g_stif9_d #轉換遮罩後資料

 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
#該樣板不需此段落
#該樣板不需此段落
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING

DEFINE g_wc2_table3   STRING

DEFINE g_wc2_table4   STRING

DEFINE g_wc2_table5   STRING

DEFINE g_wc2_table6   STRING

DEFINE g_wc2_table7   STRING

DEFINE g_wc2_table8   STRING

DEFINE g_wc2_table9   STRING


DEFINE g_wc2_table10   STRING


DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"
{<point name="global.argv"/>}
#end add-point
{</section>}
 
{<section id="astt801.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   {<point name="main.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   {<point name="main.define"/>}
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ast","")
 
   #add-point:作業初始化 name="main.init"
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT stiesite,'',stiedocdt,stiedocno,stie000,stie001,stie002,stie200,stie004,stie005,stie006,stiestus,stie007,'',stie008,'',stie010,stie009,stie011,stie012,stie013,stie014,stie015,stie016,stie017,'',stie018,'',stie003,'',stie049,stie019,'',stie020,'',stie021,'',stie022,'',stie027,'',stie028,'',stie029,'',stie026,stie023,stie024,stie025,stie223,stie224,stie225,stie030,'',stie031,'',stie032,'',stie033,stie034,'',stie035,'',stie036,'',stie037,stie038,'',stie039,'',stie040,stie041,stie042,stie043,stie044,stie045,stie046,stie047,stie048,stie050,stie051,'',stie052,stie053,'',stieownid,'',stieowndp,'',stiecrtid,'',stiecrtdp,'',stiecrtdt,stiemodid,'',stiemoddt,stiecnfid,'',stiecnfdt", 
                      " FROM stie_t",
                      " WHERE stieent= ? AND stiedocno=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt801_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.stiesite,t0.stiedocdt,t0.stiedocno,t0.stie000,t0.stie001,t0.stie002,t0.stie200,t0.stie004,t0.stie005,t0.stie006,t0.stiestus,t0.stie007,t0.stie008,t0.stie010,t0.stie009,t0.stie011,t0.stie012,t0.stie013,t0.stie014,t0.stie015,t0.stie016,t0.stie017,t0.stie018,t0.stie003,t0.stie049,t0.stie019,t0.stie020,t0.stie021,t0.stie022,t0.stie027,t0.stie028,t0.stie029,t0.stie026,t0.stie023,t0.stie024,t0.stie025,t0.stie223,t0.stie224,t0.stie225,t0.stie030,t0.stie031,t0.stie032,t0.stie033,t0.stie034,t0.stie035,t0.stie036,t0.stie037,t0.stie038,t0.stie039,t0.stie040,t0.stie041,t0.stie042,t0.stie043,t0.stie044,t0.stie045,t0.stie046,t0.stie047,t0.stie048,t0.stie050,t0.stie051,t0.stie052,t0.stie053,t0.stieownid,t0.stieowndp,t0.stiecrtid,t0.stiecrtdp,t0.stiecrtdt,t0.stiemodid,t0.stiemoddt,t0.stiecnfid,t0.stiecnfdt,t1.ooefl003 ,t2.pmaal003 ,t3.mhbel003 ,t4.ooag011 ,t5.ooefl003 ,t6.sthal003 ,t7.mhaal003 ,t8.mhabl004 ,t9.mhacl005 ,t10.oocql004 ,t11.rtaxl003 ,t12.rtaxl003 ,t13.oocql004 ,t14.ooefl003 ,t15.staal003 ,t16.oocql004 ,t17.ooibl004 ,t18.oocql004 ,t19.ooail003 ,t20.oodbl004 ,t21.isacl004 ,t22.ooag011 ,t23.ooag011 ,t24.ooag011 ,t25.ooefl003 ,t26.ooag011",
               " FROM stie_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.stiesite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t2 ON t2.pmaalent="||g_enterprise||" AND t2.pmaal001=t0.stie007 AND t2.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN mhbel_t t3 ON t3.mhbelent="||g_enterprise||" AND t3.mhbel001=t0.stie008 AND t3.mhbel002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent="||g_enterprise||" AND t4.ooag001=t0.stie017  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent="||g_enterprise||" AND t5.ooefl001=t0.stie018 AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN sthal_t t6 ON t6.sthalent="||g_enterprise||" AND t6.sthal001=t0.stie003 AND t6.sthal002='"||g_dlang||"' ",
               " LEFT JOIN mhaal_t t7 ON t7.mhaalent="||g_enterprise||" AND t7.mhaal001=t0.stie019 AND t7.mhaal002='"||g_dlang||"' ",
               " LEFT JOIN mhabl_t t8 ON t8.mhablent="||g_enterprise||" AND t8.mhabl001=t0.stie019 AND t8.mhabl002=t0.stie020 AND t8.mhabl003='"||g_dlang||"' ",
               " LEFT JOIN mhacl_t t9 ON t9.mhaclent="||g_enterprise||" AND t9.mhacl001=t0.stie019 AND t9.mhacl002=t0.stie020 AND t9.mhacl003=t0.stie021 AND t9.mhacl004='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t10 ON t10.oocqlent="||g_enterprise||" AND t10.oocql001='2144' AND t10.oocql002=t0.stie022 AND t10.oocql003='"||g_dlang||"' ",
               " LEFT JOIN rtaxl_t t11 ON t11.rtaxlent="||g_enterprise||" AND t11.rtaxl001=t0.stie027 AND t11.rtaxl002='"||g_dlang||"' ",
               " LEFT JOIN rtaxl_t t12 ON t12.rtaxlent="||g_enterprise||" AND t12.rtaxl001=t0.stie028 AND t12.rtaxl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t13 ON t13.oocqlent="||g_enterprise||" AND t13.oocql001='2002' AND t13.oocql002=t0.stie029 AND t13.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t14 ON t14.ooeflent="||g_enterprise||" AND t14.ooefl001=t0.stie030 AND t14.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN staal_t t15 ON t15.staalent="||g_enterprise||" AND t15.staal001=t0.stie031 AND t15.staal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t16 ON t16.oocqlent="||g_enterprise||" AND t16.oocql001='2060' AND t16.oocql002=t0.stie032 AND t16.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooibl_t t17 ON t17.ooiblent="||g_enterprise||" AND t17.ooibl002=t0.stie034 AND t17.ooibl003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t18 ON t18.oocqlent="||g_enterprise||" AND t18.oocql001='238' AND t18.oocql002=t0.stie035 AND t18.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t19 ON t19.ooailent="||g_enterprise||" AND t19.ooail001=t0.stie036 AND t19.ooail002='"||g_dlang||"' ",
               " LEFT JOIN oodbl_t t20 ON t20.oodblent="||g_enterprise||" AND t20.oodbl002=t0.stie038 AND t20.oodbl003='"||g_dlang||"' ",
               " LEFT JOIN isacl_t t21 ON t21.isaclent="||g_enterprise||" AND t21.isacl002=t0.stie039 AND t21.isacl003='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t22 ON t22.ooagent="||g_enterprise||" AND t22.ooag001=t0.stie051  ",
               " LEFT JOIN ooag_t t23 ON t23.ooagent="||g_enterprise||" AND t23.ooag001=t0.stie053  ",
               " LEFT JOIN ooag_t t24 ON t24.ooagent="||g_enterprise||" AND t24.ooag001=t0.stieownid  ",
               " LEFT JOIN ooefl_t t25 ON t25.ooeflent="||g_enterprise||" AND t25.ooefl001=t0.stieowndp AND t25.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t26 ON t26.ooagent="||g_enterprise||" AND t26.ooag001=t0.stiemodid  ",

               " WHERE t0.stieent = " ||g_enterprise|| " AND t0.stiedocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE astt801_master_referesh FROM g_sql
 
   #該樣板不需此段落#add-point:main段define_sql name="main.body.define_sql"
   #該樣板不需此段落{<point name="main.body.define_sql" mark="Y"/>}
   #該樣板不需此段落#end add-point 
   #該樣板不需此段落LET g_forupd_sql = "SELECT stifseq,stif001,stif002,stif003,stif021,stif004,stif022,stif005,stif006,stif007,stif008,stif009,stif010,stif011,stif018,stif016,stif017,stif020,stif023,stif024,stif025,stifsite,stifunit FROM stif_t WHERE stifent=? AND stifdocno=? AND stifseq=? FOR UPDATE"
   #該樣板不需此段落#add-point:main段define_sql name="main.body.after_define_sql"
   #該樣板不需此段落{<point name="main.body.after_define_sql"/>}
   #該樣板不需此段落#end add-point 
   #該樣板不需此段落LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   #該樣板不需此段落LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   #該樣板不需此段落DECLARE astt801_bcl CURSOR FROM g_forupd_sql
    
   #該樣板不需此段落#add-point:main段define_sql name="main.body2.define_sql"
   #該樣板不需此段落{<point name="main.body2.define_sql" mark="Y"/>}
   #該樣板不需此段落#end add-point 
   #該樣板不需此段落LET g_forupd_sql = "SELECT stinsite,stinunit,stinseq,stin001,stin002,stin004,stin003,stin005,stin006,stin007,stin008,stin009,stin010 FROM stin_t WHERE stinent=? AND stindocno=? AND stinseq=? FOR UPDATE"
   #該樣板不需此段落#add-point:main段define_sql name="main.body2.after_define_sql"
   #該樣板不需此段落{<point name="main.body2.after_define_sql"/>}
   #該樣板不需此段落#end add-point 
   #該樣板不需此段落LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   #該樣板不需此段落LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   #該樣板不需此段落DECLARE astt801_bcl2 CURSOR FROM g_forupd_sql
   #該樣板不需此段落#add-point:main段define_sql name="main.body3.define_sql"
   #該樣板不需此段落{<point name="main.body3.define_sql" mark="Y"/>}
   #該樣板不需此段落#end add-point 
   #該樣板不需此段落LET g_forupd_sql = "SELECT stiosite,stiounit,stioseq,stio001,stio002,stio003,stio004,stio005,stio006,stio007 FROM stio_t WHERE stioent=? AND stiodocno=? AND stioseq=? FOR UPDATE"
   #該樣板不需此段落#add-point:main段define_sql name="main.body3.after_define_sql"
   #該樣板不需此段落{<point name="main.body3.after_define_sql"/>}
   #該樣板不需此段落#end add-point 
   #該樣板不需此段落LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   #該樣板不需此段落LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   #該樣板不需此段落DECLARE astt801_bcl3 CURSOR FROM g_forupd_sql
   #該樣板不需此段落#add-point:main段define_sql name="main.body4.define_sql"
   #該樣板不需此段落{<point name="main.body4.define_sql" mark="Y"/>}
   #該樣板不需此段落#end add-point 
   #該樣板不需此段落LET g_forupd_sql = "SELECT stihseq,stih001,stih002,stih003,stih008,stih004,stih005,stih006,stih007,stihsite,stihunit FROM stih_t WHERE stihent=? AND stihdocno=? AND stihseq=? FOR UPDATE"
   #該樣板不需此段落#add-point:main段define_sql name="main.body4.after_define_sql"
   #該樣板不需此段落{<point name="main.body4.after_define_sql"/>}
   #該樣板不需此段落#end add-point 
   #該樣板不需此段落LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   #該樣板不需此段落LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   #該樣板不需此段落DECLARE astt801_bcl4 CURSOR FROM g_forupd_sql
   #該樣板不需此段落#add-point:main段define_sql name="main.body5.define_sql"
   #該樣板不需此段落{<point name="main.body5.define_sql" mark="Y"/>}
   #該樣板不需此段落#end add-point 
   #該樣板不需此段落LET g_forupd_sql = "SELECT stiiseq,stii001,stii002,stii003,stii010,stii004,stii005,stii006,stii007,stii008,stii009,stiisite,stiiunit FROM stii_t WHERE stiient=? AND stiidocno=? AND stiiseq=? FOR UPDATE"
   #該樣板不需此段落#add-point:main段define_sql name="main.body5.after_define_sql"
   #該樣板不需此段落{<point name="main.body5.after_define_sql"/>}
   #該樣板不需此段落#end add-point 
   #該樣板不需此段落LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   #該樣板不需此段落LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   #該樣板不需此段落DECLARE astt801_bcl5 CURSOR FROM g_forupd_sql
   #該樣板不需此段落#add-point:main段define_sql name="main.body6.define_sql"
   #該樣板不需此段落{<point name="main.body6.define_sql" mark="Y"/>}
   #該樣板不需此段落#end add-point 
   #該樣板不需此段落LET g_forupd_sql = "SELECT stilseq,stil001,stil002,stil003,stil004,stil005,stil006,stil007,stil008,stilsite,stilunit FROM stil_t WHERE stilent=? AND stildocno=? AND stilseq=? FOR UPDATE"
   #該樣板不需此段落#add-point:main段define_sql name="main.body6.after_define_sql"
   #該樣板不需此段落{<point name="main.body6.after_define_sql"/>}
   #該樣板不需此段落#end add-point 
   #該樣板不需此段落LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   #該樣板不需此段落LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   #該樣板不需此段落DECLARE astt801_bcl6 CURSOR FROM g_forupd_sql
   #該樣板不需此段落#add-point:main段define_sql name="main.body7.define_sql"
   #該樣板不需此段落{<point name="main.body7.define_sql" mark="Y"/>}
   #該樣板不需此段落#end add-point 
   #該樣板不需此段落LET g_forupd_sql = "SELECT stijacti,stijseq,stij001,stij002,stij003,stij004,stij005,stij006,stij007,stij008,stij009,stijsite,stijunit FROM stij_t WHERE stijent=? AND stijdocno=? AND stijseq=? FOR UPDATE"
   #該樣板不需此段落#add-point:main段define_sql name="main.body7.after_define_sql"
   #該樣板不需此段落{<point name="main.body7.after_define_sql"/>}
   #該樣板不需此段落#end add-point 
   #該樣板不需此段落LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   #該樣板不需此段落LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   #該樣板不需此段落DECLARE astt801_bcl7 CURSOR FROM g_forupd_sql
   #該樣板不需此段落#add-point:main段define_sql name="main.body8.define_sql"
   #該樣板不需此段落{<point name="main.body8.define_sql" mark="Y"/>}
   #該樣板不需此段落#end add-point 
   #該樣板不需此段落LET g_forupd_sql = "SELECT stikacti,stikseq,stik001,stik002,stik004,stik003,stik005,stiksite,stikunit FROM stik_t WHERE stikent=? AND stikdocno=? AND stikseq=? FOR UPDATE"
   #該樣板不需此段落#add-point:main段define_sql name="main.body8.after_define_sql"
   #該樣板不需此段落{<point name="main.body8.after_define_sql"/>}
   #該樣板不需此段落#end add-point 
   #該樣板不需此段落LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   #該樣板不需此段落LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   #該樣板不需此段落DECLARE astt801_bcl8 CURSOR FROM g_forupd_sql
   #該樣板不需此段落#add-point:main段define_sql name="main.body9.define_sql"
   #該樣板不需此段落{<point name="main.body9.define_sql" mark="Y"/>}
   #該樣板不需此段落#end add-point 
   #該樣板不需此段落LET g_forupd_sql = "SELECT stimseq,stim001,stim002,stim003,stim004,stim005,stim006,stim007,stim008,stim009,stim010,stim011,stim012,stim013,stim014,stim015,stim016,stim018,stim019,stim017,stimsite,stimunit FROM stim_t WHERE stiment=? AND stimdocno=? AND stimseq=? FOR UPDATE"
   #該樣板不需此段落#add-point:main段define_sql name="main.body9.after_define_sql"
   #該樣板不需此段落{<point name="main.body9.after_define_sql"/>}
   #該樣板不需此段落#end add-point 
   #該樣板不需此段落LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   #該樣板不需此段落LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   #該樣板不需此段落DECLARE astt801_bcl9 CURSOR FROM g_forupd_sql

   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_astt801 WITH FORM cl_ap_formpath("ast",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL astt801_init()   
 
      #進入選單 Menu (="N")
      CALL astt801_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_astt801
      
   END IF 
   
   CLOSE astt801_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN



{</section>}
 
{<section id="astt801.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION astt801_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   {<point name="init.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   {<point name="init.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   {<point name="init.pre_function"/>}
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
   LET g_detail_idx_list[4] = 1
   LET g_detail_idx_list[5] = 1
   LET g_detail_idx_list[6] = 1
   LET g_detail_idx_list[7] = 1
   LET g_detail_idx_list[8] = 1
   LET g_detail_idx_list[9] = 1
   LET g_detail_idx_list[10] = 1

   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('stiestus','13','N,X,Y,FP,FR,TP,TR,A,D,R,W')

      CALL cl_set_combo_scc('stie000','6863') 
   CALL cl_set_combo_scc('stie004','6013') 
   CALL cl_set_combo_scc('stie005','6785') 
   CALL cl_set_combo_scc('stif023','6932') 
   CALL cl_set_combo_scc('stim018','6932') 

   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1',","1")
   CALL g_idx_group.addAttribute("'2',","1")
   CALL g_idx_group.addAttribute("'3',","1")
   CALL g_idx_group.addAttribute("'4',","1")
   CALL g_idx_group.addAttribute("'5',","1")
   CALL g_idx_group.addAttribute("'6',","1")
   CALL g_idx_group.addAttribute("'7',","1")
   CALL g_idx_group.addAttribute("'8',","1")
   CALL g_idx_group.addAttribute("'9',","1")
   CALL g_idx_group.addAttribute("'10',","1")

 
   #add-point:畫面資料初始化 name="init.init"
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL astt801_default_search()
    
END FUNCTION
{</section>}
 
{<section id="astt801.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION astt801_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   {<point name="ui_dialog.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   {<point name="ui_dialog.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   {<point name="ui_dialog.pre_function"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL astt801_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            {<point name="menu.default.insert" />}
            #END add-point
         END IF

      #add-point:action default自訂 name="ui_dialog.action_default"
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE



   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_stie_m.* TO NULL
         CALL g_stif_d.clear()
         CALL g_stif11_d.clear()
         CALL g_stif13_d.clear()
         CALL g_stif2_d.clear()
         CALL g_stif3_d.clear()
         CALL g_stif4_d.clear()
         CALL g_stif5_d.clear()
         CALL g_stif6_d.clear()
         CALL g_stif7_d.clear()
         CALL g_stif9_d.clear()

         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL astt801_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL astt801_fetch('') # reload data
               LET l_ac = 1
               CALL astt801_ui_detailshow() #Setting the current row 
         
               CALL astt801_idx_chk()
               #NEXT FIELD stifseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_stif_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astt801_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1',",l_ac)
               CALL astt801_b_fill2('10')

               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL astt801_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_stif11_d TO s_detail11.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astt801_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail11")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[2] = l_ac
               CALL g_idx_group.addAttribute("'2',",l_ac)
               
               #add-point:page2, before row動作 name="ui_dialog.body11.before_row"
               {<point name="ui_dialog.body11.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail11")
               LET g_current_page = 2
               #顯示單身筆數
               CALL astt801_idx_chk()
               #add-point:page2自定義行為 name="ui_dialog.body11.before_display"
               {<point name="ui_dialog.body11.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為 name="ui_dialog.body11.action"
            {<point name="ui_dialog.body11.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_stif13_d TO s_detail13.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astt801_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail13")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[3] = l_ac
               CALL g_idx_group.addAttribute("'3',",l_ac)
               
               #add-point:page3, before row動作 name="ui_dialog.body13.before_row"
               {<point name="ui_dialog.body13.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail13")
               LET g_current_page = 3
               #顯示單身筆數
               CALL astt801_idx_chk()
               #add-point:page3自定義行為 name="ui_dialog.body13.before_display"
               {<point name="ui_dialog.body13.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為 name="ui_dialog.body13.action"
            {<point name="ui_dialog.body13.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_stif2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astt801_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[4] = l_ac
               CALL g_idx_group.addAttribute("'4',",l_ac)
               
               #add-point:page4, before row動作 name="ui_dialog.body2.before_row"
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'4',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 4
               #顯示單身筆數
               CALL astt801_idx_chk()
               #add-point:page4自定義行為 name="ui_dialog.body2.before_display"
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_4)
            
         
            #add-point:page4自定義行為 name="ui_dialog.body2.action"
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_stif3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astt801_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[5] = l_ac
               CALL g_idx_group.addAttribute("'5',",l_ac)
               
               #add-point:page5, before row動作 name="ui_dialog.body3.before_row"
               {<point name="ui_dialog.body3.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'5',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 5
               #顯示單身筆數
               CALL astt801_idx_chk()
               #add-point:page5自定義行為 name="ui_dialog.body3.before_display"
               {<point name="ui_dialog.body3.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_5)
            
         
            #add-point:page5自定義行為 name="ui_dialog.body3.action"
            {<point name="ui_dialog.body3.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_stif4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astt801_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[6] = l_ac
               CALL g_idx_group.addAttribute("'6',",l_ac)
               
               #add-point:page6, before row動作 name="ui_dialog.body4.before_row"
               {<point name="ui_dialog.body4.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'6',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_current_page = 6
               #顯示單身筆數
               CALL astt801_idx_chk()
               #add-point:page6自定義行為 name="ui_dialog.body4.before_display"
               {<point name="ui_dialog.body4.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_6)
            
         
            #add-point:page6自定義行為 name="ui_dialog.body4.action"
            {<point name="ui_dialog.body4.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_stif5_d TO s_detail5.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astt801_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[7] = l_ac
               CALL g_idx_group.addAttribute("'7',",l_ac)
               
               #add-point:page7, before row動作 name="ui_dialog.body5.before_row"
               {<point name="ui_dialog.body5.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'7',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               LET g_current_page = 7
               #顯示單身筆數
               CALL astt801_idx_chk()
               #add-point:page7自定義行為 name="ui_dialog.body5.before_display"
               {<point name="ui_dialog.body5.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_7)
            
         
            #add-point:page7自定義行為 name="ui_dialog.body5.action"
            {<point name="ui_dialog.body5.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_stif6_d TO s_detail6.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astt801_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail6")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[8] = l_ac
               CALL g_idx_group.addAttribute("'8',",l_ac)
               
               #add-point:page8, before row動作 name="ui_dialog.body6.before_row"
               {<point name="ui_dialog.body6.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'8',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail6")
               LET g_current_page = 8
               #顯示單身筆數
               CALL astt801_idx_chk()
               #add-point:page8自定義行為 name="ui_dialog.body6.before_display"
               {<point name="ui_dialog.body6.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_8)
            
         
            #add-point:page8自定義行為 name="ui_dialog.body6.action"
            {<point name="ui_dialog.body6.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_stif7_d TO s_detail7.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astt801_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail7")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[9] = l_ac
               CALL g_idx_group.addAttribute("'9',",l_ac)
               
               #add-point:page9, before row動作 name="ui_dialog.body7.before_row"
               {<point name="ui_dialog.body7.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'9',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail7")
               LET g_current_page = 9
               #顯示單身筆數
               CALL astt801_idx_chk()
               #add-point:page9自定義行為 name="ui_dialog.body7.before_display"
               {<point name="ui_dialog.body7.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_9)
            
         
            #add-point:page9自定義行為 name="ui_dialog.body7.action"
            {<point name="ui_dialog.body7.action"/>}
            #end add-point
         
         END DISPLAY

         
         #第二階單身段落
         DISPLAY ARRAY g_stif9_d TO s_detail9.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astt801_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail9")
               LET g_detail_idx2 = l_ac
               LET g_detail_idx_list[10] = l_ac
               CALL g_idx_group.addAttribute("'10',",l_ac)
               
               #add-point:page10, before row動作 name="ui_dialog.body9.before_row"
               {<point name="ui_dialog.body9.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在下階單身則控制筆數位置
               IF g_loc = 'd' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'10',"))
               END IF
               LET g_loc = 'd'
               LET l_ac = DIALOG.getCurrentRow("s_detail9")
               LET g_current_page = 10
               #顯示單身筆數
               CALL astt801_idx_chk()
               #add-point:page10自定義行為 name="ui_dialog.body9.before_display"
               {<point name="ui_dialog.body9.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_10)
            
         
            #add-point:page10自定義行為 name="ui_dialog.body9.action"
            {<point name="ui_dialog.body9.action"/>}
            #end add-point
         
         END DISPLAY

         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL astt801_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL astt801_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL astt801_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL astt801_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         {<point name="ui_dialog.more_action"/>}
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL astt801_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL astt801_set_act_visible()   
            CALL astt801_set_act_no_visible()
            IF NOT (g_stie_m.stiedocno IS NULL

              ) THEN
               #組合條件
               LET g_add_browse = " stieent = " ||g_enterprise|| " AND",
                                  " stiedocno = '", g_stie_m.stiedocno, "' "

               #填到對應位置
               CALL astt801_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:3)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status name="menu.bpm_status"
            {<point name="menu.bpm_status" />}
            #END add-point



          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL

               INITIALIZE g_wc2_table3 TO NULL

               INITIALIZE g_wc2_table4 TO NULL

               INITIALIZE g_wc2_table5 TO NULL

               INITIALIZE g_wc2_table6 TO NULL

               INITIALIZE g_wc2_table7 TO NULL

               INITIALIZE g_wc2_table8 TO NULL

               INITIALIZE g_wc2_table9 TO NULL


               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "stie_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "stif_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "stin_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc

                     WHEN la_wc[li_idx].tableid = "stio_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc

                     WHEN la_wc[li_idx].tableid = "stih_t" 
                        LET g_wc2_table4 = la_wc[li_idx].wc

                     WHEN la_wc[li_idx].tableid = "stii_t" 
                        LET g_wc2_table5 = la_wc[li_idx].wc

                     WHEN la_wc[li_idx].tableid = "stil_t" 
                        LET g_wc2_table6 = la_wc[li_idx].wc

                     WHEN la_wc[li_idx].tableid = "stij_t" 
                        LET g_wc2_table7 = la_wc[li_idx].wc

                     WHEN la_wc[li_idx].tableid = "stik_t" 
                        LET g_wc2_table8 = la_wc[li_idx].wc

                     WHEN la_wc[li_idx].tableid = "stim_t" 
                        LET g_wc2_table9 = la_wc[li_idx].wc


                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
                  OR NOT cl_null(g_wc2_table2)

                  OR NOT cl_null(g_wc2_table3)

                  OR NOT cl_null(g_wc2_table4)

                  OR NOT cl_null(g_wc2_table5)

                  OR NOT cl_null(g_wc2_table6)

                  OR NOT cl_null(g_wc2_table7)

                  OR NOT cl_null(g_wc2_table8)

                  OR NOT cl_null(g_wc2_table9)


                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF

                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF

                  IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
                  END IF

                  IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
                  END IF

                  IF g_wc2_table6 <> " 1=1" AND NOT cl_null(g_wc2_table6) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
                  END IF

                  IF g_wc2_table7 <> " 1=1" AND NOT cl_null(g_wc2_table7) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
                  END IF

                  IF g_wc2_table8 <> " 1=1" AND NOT cl_null(g_wc2_table8) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table8
                  END IF

                  IF g_wc2_table9 <> " 1=1" AND NOT cl_null(g_wc2_table9) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table9
                  END IF


                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL astt801_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL

               INITIALIZE g_wc2_table3 TO NULL

               INITIALIZE g_wc2_table4 TO NULL

               INITIALIZE g_wc2_table5 TO NULL

               INITIALIZE g_wc2_table6 TO NULL

               INITIALIZE g_wc2_table7 TO NULL

               INITIALIZE g_wc2_table8 TO NULL

               INITIALIZE g_wc2_table9 TO NULL


               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "stie_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "stif_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "stin_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc

                     WHEN la_wc[li_idx].tableid = "stio_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc

                     WHEN la_wc[li_idx].tableid = "stih_t" 
                        LET g_wc2_table4 = la_wc[li_idx].wc

                     WHEN la_wc[li_idx].tableid = "stii_t" 
                        LET g_wc2_table5 = la_wc[li_idx].wc

                     WHEN la_wc[li_idx].tableid = "stil_t" 
                        LET g_wc2_table6 = la_wc[li_idx].wc

                     WHEN la_wc[li_idx].tableid = "stij_t" 
                        LET g_wc2_table7 = la_wc[li_idx].wc

                     WHEN la_wc[li_idx].tableid = "stik_t" 
                        LET g_wc2_table8 = la_wc[li_idx].wc

                     WHEN la_wc[li_idx].tableid = "stim_t" 
                        LET g_wc2_table9 = la_wc[li_idx].wc


                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)

                  OR NOT cl_null(g_wc2_table3)

                  OR NOT cl_null(g_wc2_table4)

                  OR NOT cl_null(g_wc2_table5)

                  OR NOT cl_null(g_wc2_table6)

                  OR NOT cl_null(g_wc2_table7)

                  OR NOT cl_null(g_wc2_table8)

                  OR NOT cl_null(g_wc2_table9)


                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF

                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF

                  IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
                  END IF

                  IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
                  END IF

                  IF g_wc2_table6 <> " 1=1" AND NOT cl_null(g_wc2_table6) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
                  END IF

                  IF g_wc2_table7 <> " 1=1" AND NOT cl_null(g_wc2_table7) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
                  END IF

                  IF g_wc2_table8 <> " 1=1" AND NOT cl_null(g_wc2_table8) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table8
                  END IF

                  IF g_wc2_table9 <> " 1=1" AND NOT cl_null(g_wc2_table9) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table9
                  END IF


                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL astt801_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code = "-100" 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL astt801_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL astt801_filter()
               EXIT DIALOG



         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL astt801_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astt801_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL astt801_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astt801_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL astt801_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astt801_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL astt801_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astt801_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL astt801_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astt801_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_stif_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_stif11_d)
                  LET g_export_id[2]   = "s_detail11"
                  LET g_export_node[3] = base.typeInfo.create(g_stif13_d)
                  LET g_export_id[3]   = "s_detail13"
                  LET g_export_node[4] = base.typeInfo.create(g_stif2_d)
                  LET g_export_id[4]   = "s_detail2"
                  LET g_export_node[5] = base.typeInfo.create(g_stif3_d)
                  LET g_export_id[5]   = "s_detail3"
                  LET g_export_node[6] = base.typeInfo.create(g_stif4_d)
                  LET g_export_id[6]   = "s_detail4"
                  LET g_export_node[7] = base.typeInfo.create(g_stif5_d)
                  LET g_export_id[7]   = "s_detail5"
                  LET g_export_node[8] = base.typeInfo.create(g_stif6_d)
                  LET g_export_id[8]   = "s_detail6"
                  LET g_export_node[9] = base.typeInfo.create(g_stif7_d)
                  LET g_export_id[9]   = "s_detail7"
                  LET g_export_node[10] = base.typeInfo.create(g_stif9_d)
                  LET g_export_id[10]   = "s_detail9"

                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD stifseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL astt801_modify()
               #add-point:ON ACTION modify name="menu.modify"
               {<point name="menu.modify" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               
            END IF
 



         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL astt801_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               {<point name="menu.modify_detail" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               
            END IF
 



         #應用 a43 樣板自動產生(Version:4)
         ON ACTION produce__cost
            LET g_action_choice="produce__cost"
            IF cl_auth_chk_act("produce__cost") THEN
               #該樣板不需此段落
               
               #add-point:ON ACTION produce__cost name="menu.produce__cost"
               {<point name="menu.produce__cost" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               
            END IF
 



         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               #該樣板不需此段落
               CALL astt801_delete()
               #add-point:ON ACTION delete name="menu.delete"
               {<point name="menu.delete" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               
            END IF
 



         #應用 a43 樣板自動產生(Version:4)
         ON ACTION execute_standard
            LET g_action_choice="execute_standard"
            IF cl_auth_chk_act("execute_standard") THEN
               #該樣板不需此段落
               
               #add-point:ON ACTION execute_standard name="menu.execute_standard"
               {<point name="menu.execute_standard" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               
            END IF
 



         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               #該樣板不需此段落
               CALL astt801_insert()
               #add-point:ON ACTION insert name="menu.insert"
               {<point name="menu.insert" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               
            END IF
 



         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               #該樣板不需此段落
               
               #add-point:ON ACTION output name="menu.output"
               {<point name="menu.output" mark="Y"/>}
               #END add-point
               &include "erp/ast/astt801_rep.4gl"
               #add-point:ON ACTION output.after name="menu.after_output"
               {<point name="menu.after_output" />}
               #END add-point
               
            END IF
 



         #應用 a43 樣板自動產生(Version:4)
         ON ACTION quickprint
            LET g_action_choice="quickprint"
            IF cl_auth_chk_act("quickprint") THEN
               #該樣板不需此段落
               
               #add-point:ON ACTION quickprint name="menu.quickprint"
               {<point name="menu.quickprint" mark="Y"/>}
               #END add-point
               &include "erp/ast/astt801_rep.4gl"
               #add-point:ON ACTION quickprint.after name="menu.after_quickprint"
               {<point name="menu.after_quickprint" />}
               #END add-point
               
            END IF
 



         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               #該樣板不需此段落
               CALL astt801_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               {<point name="menu.reproduce" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               
            END IF
 



         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               #該樣板不需此段落
               CALL astt801_query()
               #add-point:ON ACTION query name="menu.query"
               {<point name="menu.query" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail11",1)
               CALL g_curr_diag.setCurrentRow("s_detail13",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
               CALL g_curr_diag.setCurrentRow("s_detail3",1)
               CALL g_curr_diag.setCurrentRow("s_detail4",1)
               CALL g_curr_diag.setCurrentRow("s_detail5",1)
               CALL g_curr_diag.setCurrentRow("s_detail6",1)
               CALL g_curr_diag.setCurrentRow("s_detail7",1)
               CALL g_curr_diag.setCurrentRow("s_detail9",1)




            END IF
 



         #應用 a43 樣板自動產生(Version:4)
         ON ACTION produce__bill
            LET g_action_choice="produce__bill"
            IF cl_auth_chk_act("produce__bill") THEN
               #該樣板不需此段落
               
               #add-point:ON ACTION produce__bill name="menu.produce__bill"
               {<point name="menu.produce__bill" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               
            END IF
 



         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_stin_t
            LET g_action_choice="modify_stin_t"
            IF cl_auth_chk_act("modify_stin_t") THEN
               #該樣板不需此段落
               
               #add-point:ON ACTION modify_stin_t name="menu.modify_stin_t"
               {<point name="menu.modify_stin_t" mark="Y"/>}
               #END add-point
               #該樣板不需此段落
               
            END IF
 



         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL astt801_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL astt801_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL astt801_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_stie_m.stiedocdt)



         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
 
      #(ver:79) ---add start---
      #add-point:ui_dialog段 after dialog name="ui_dialog.exit_dialog"
      {<point name="ui_dialog.exit_dialog"/>}
      #end add-point
      #(ver:79) --- add end ---
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
{</section>}
 
{<section id="astt801.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION astt801_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   {<point name="browser_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   {<point name="browser_fill.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT stiedocno ",
                      " FROM stie_t ",
                      " ",
                      " LEFT JOIN stif_t ON stifent = stieent AND stiedocno = stifdocno ", "  ",
                      #add-point:browser_fill段sql(stif_t1) name="browser_fill.cnt.join.}"
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
                      " LEFT JOIN stin_t ON stinent = stieent AND stiedocno = stindocno", "  ",
                      #add-point:browser_fill段sql(stin_t1) name="browser_fill.cnt.join.stin_t1"
                      {<point name="browser_fill.cnt.join.stin_t1"/>}
                      #end add-point

                      " LEFT JOIN stio_t ON stioent = stieent AND stiedocno = stiodocno", "  ",
                      #add-point:browser_fill段sql(stio_t1) name="browser_fill.cnt.join.stio_t1"
                      {<point name="browser_fill.cnt.join.stio_t1"/>}
                      #end add-point

                      " LEFT JOIN stih_t ON stihent = stieent AND stiedocno = stihdocno", "  ",
                      #add-point:browser_fill段sql(stih_t1) name="browser_fill.cnt.join.stih_t1"
                      {<point name="browser_fill.cnt.join.stih_t1"/>}
                      #end add-point

                      " LEFT JOIN stii_t ON stiient = stieent AND stiedocno = stiidocno", "  ",
                      #add-point:browser_fill段sql(stii_t1) name="browser_fill.cnt.join.stii_t1"
                      {<point name="browser_fill.cnt.join.stii_t1"/>}
                      #end add-point

                      " LEFT JOIN stil_t ON stilent = stieent AND stiedocno = stildocno", "  ",
                      #add-point:browser_fill段sql(stil_t1) name="browser_fill.cnt.join.stil_t1"
                      {<point name="browser_fill.cnt.join.stil_t1"/>}
                      #end add-point

                      " LEFT JOIN stij_t ON stijent = stieent AND stiedocno = stijdocno", "  ",
                      #add-point:browser_fill段sql(stij_t1) name="browser_fill.cnt.join.stij_t1"
                      {<point name="browser_fill.cnt.join.stij_t1"/>}
                      #end add-point

                      " LEFT JOIN stik_t ON stikent = stieent AND stiedocno = stikdocno", "  ",
                      #add-point:browser_fill段sql(stik_t1) name="browser_fill.cnt.join.stik_t1"
                      {<point name="browser_fill.cnt.join.stik_t1"/>}
                      #end add-point

                      " LEFT JOIN stim_t ON stiment = stieent AND stiedocno = stimdocno", "  ",
                      #add-point:browser_fill段sql(stim_t1) name="browser_fill.cnt.join.stim_t1"
                      {<point name="browser_fill.cnt.join.stim_t1"/>}
                      #end add-point


                      " LEFT JOIN stig_t ON stigent = stieent AND stifdocno = stigdocno AND stifseq = stigseq", "  ",
                      #add-point:browser_fill段sql(stig_t1) name="browser_fill.cnt.join.stig_t1"
                      {<point name="browser_fill.cnt.join.stig_t1"/>}
                      #end add-point


                      " ", 
                      " ", 
                      " ",                      

                      " ",                      

                      " ",                      

                      " ",                      

                      " ",                      

                      " ",                      

                      " ",                      

                      " ",                      


                      " ",


                      " WHERE stieent = " ||g_enterprise|| " AND stifent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("stie_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT stiedocno ",
                      " FROM stie_t ", 
                      "  ",
                      "  ",
                      " WHERE stieent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("stie_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code = 9035 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_stie_m.* TO NULL
      CALL g_stif_d.clear()        
      CALL g_stif11_d.clear() 
      CALL g_stif13_d.clear() 
      CALL g_stif2_d.clear() 
      CALL g_stif3_d.clear() 
      CALL g_stif4_d.clear() 
      CALL g_stif5_d.clear() 
      CALL g_stif6_d.clear() 
      CALL g_stif7_d.clear() 
      CALL g_stif9_d.clear() 

      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.stiedocno,t0.stiedocdt,t0.stie000,t0.stie001,t0.stiesite,t0.stie007,t0.stie008,t0.stie011,t0.stie012,t0.stie005,t0.stie002,t0.stie006 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.stiestus,t0.stiedocno,t0.stiedocdt,t0.stie000,t0.stie001,t0.stiesite,t0.stie007,t0.stie008,t0.stie011,t0.stie012,t0.stie005,t0.stie002,t0.stie006,t1.ooefl003 ,t2.pmaal003 ,t3.mhbel003 ",
                  " FROM stie_t t0",
                  "  ",
                  "  LEFT JOIN stif_t ON stifent = stieent AND stiedocno = stifdocno ", "  ", 
                  #add-point:browser_fill段sql(stif_t1) name="browser_fill.join.stif_t1"
                  {<point name="browser_fill.join.stif_t1"/>}
                  #end add-point
                  "  LEFT JOIN stin_t ON stinent = stieent AND stiedocno = stindocno", "  ", 
                  #add-point:browser_fill段sql(stin_t1) name="browser_fill.join.stin_t1"
                  {<point name="browser_fill.join.stin_t1"/>}
                  #end add-point

                  "  LEFT JOIN stio_t ON stioent = stieent AND stiedocno = stiodocno", "  ", 
                  #add-point:browser_fill段sql(stio_t1) name="browser_fill.join.stio_t1"
                  {<point name="browser_fill.join.stio_t1"/>}
                  #end add-point

                  "  LEFT JOIN stih_t ON stihent = stieent AND stiedocno = stihdocno", "  ", 
                  #add-point:browser_fill段sql(stih_t1) name="browser_fill.join.stih_t1"
                  {<point name="browser_fill.join.stih_t1"/>}
                  #end add-point

                  "  LEFT JOIN stii_t ON stiient = stieent AND stiedocno = stiidocno", "  ", 
                  #add-point:browser_fill段sql(stii_t1) name="browser_fill.join.stii_t1"
                  {<point name="browser_fill.join.stii_t1"/>}
                  #end add-point

                  "  LEFT JOIN stil_t ON stilent = stieent AND stiedocno = stildocno", "  ", 
                  #add-point:browser_fill段sql(stil_t1) name="browser_fill.join.stil_t1"
                  {<point name="browser_fill.join.stil_t1"/>}
                  #end add-point

                  "  LEFT JOIN stij_t ON stijent = stieent AND stiedocno = stijdocno", "  ", 
                  #add-point:browser_fill段sql(stij_t1) name="browser_fill.join.stij_t1"
                  {<point name="browser_fill.join.stij_t1"/>}
                  #end add-point

                  "  LEFT JOIN stik_t ON stikent = stieent AND stiedocno = stikdocno", "  ", 
                  #add-point:browser_fill段sql(stik_t1) name="browser_fill.join.stik_t1"
                  {<point name="browser_fill.join.stik_t1"/>}
                  #end add-point

                  "  LEFT JOIN stim_t ON stiment = stieent AND stiedocno = stimdocno", "  ", 
                  #add-point:browser_fill段sql(stim_t1) name="browser_fill.join.stim_t1"
                  {<point name="browser_fill.join.stim_t1"/>}
                  #end add-point


                  "  LEFT JOIN stig_t ON stigent = stieent AND stifdocno = stigdocno AND stifseq = stigseq", "  ", 
                  #add-point:browser_fill段sql(stig_t1) name="browser_fill.join.stig_t1"
                  {<point name="browser_fill.join.stig_t1"/>}
                  #end add-point


                  " ", 
                  " ",                      

                  " ",                      

                  " ",                      

                  " ",                      

                  " ",                      

                  " ",                      

                  " ",                      

                  " ",                      


                  " ",


                                 " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.stiesite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t2 ON t2.pmaalent="||g_enterprise||" AND t2.pmaal001=t0.stie007 AND t2.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN mhbel_t t3 ON t3.mhbelent="||g_enterprise||" AND t3.mhbel001=t0.stie008 AND t3.mhbel002='"||g_dlang||"' ",

                  " WHERE t0.stieent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("stie_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.stiestus,t0.stiedocno,t0.stiedocdt,t0.stie000,t0.stie001,t0.stiesite,t0.stie007,t0.stie008,t0.stie011,t0.stie012,t0.stie005,t0.stie002,t0.stie006,t1.ooefl003 ,t2.pmaal003 ,t3.mhbel003 ",
                  " FROM stie_t t0",
                  "  ",
                                 " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.stiesite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t2 ON t2.pmaalent="||g_enterprise||" AND t2.pmaal001=t0.stie007 AND t2.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN mhbel_t t3 ON t3.mhbelent="||g_enterprise||" AND t3.mhbel001=t0.stie008 AND t3.mhbel002='"||g_dlang||"' ",

                  " WHERE t0.stieent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("stie_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY stiedocno ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"stie_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      {<point name="browser_fill.open"/>}
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_stiedocno,g_browser[g_cnt].b_stiedocdt,g_browser[g_cnt].b_stie000,g_browser[g_cnt].b_stie001,g_browser[g_cnt].b_stiesite,g_browser[g_cnt].b_stie007,g_browser[g_cnt].b_stie008,g_browser[g_cnt].b_stie011,g_browser[g_cnt].b_stie012,g_browser[g_cnt].b_stie005,g_browser[g_cnt].b_stie002,g_browser[g_cnt].b_stie006,g_browser[g_cnt].b_stiesite_desc,g_browser[g_cnt].b_stie007_desc,g_browser[g_cnt].b_stie008_desc
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         {<point name="browser_fill.reference"/>}
         #end add-point
      
         #遮罩相關處理
         CALL astt801_browser_mask()
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "FP"
            LET g_browser[g_cnt].b_statepic = "stus/16/final_pass.png"
         WHEN "FR"
            LET g_browser[g_cnt].b_statepic = "stus/16/final_reject.png"
         WHEN "TP"
            LET g_browser[g_cnt].b_statepic = "stus/16/trial_pass.png"
         WHEN "TR"
            LET g_browser[g_cnt].b_statepic = "stus/16/trial_reject.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         
      END CASE



         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_stiedocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION
{</section>}
 
{<section id="astt801.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION astt801_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   {<point name="ui_headershow.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   {<point name="ui_headershow.define"/>} 
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   {<point name="ui_headershow.pre_function"/>}
   #end add-point
   
   LET g_stie_m.stiedocno = g_browser[g_current_idx].b_stiedocno   

   EXECUTE astt801_master_referesh USING g_stie_m.stiedocno INTO g_stie_m.stiesite,g_stie_m.stiedocdt,g_stie_m.stiedocno,g_stie_m.stie000,g_stie_m.stie001,g_stie_m.stie002,g_stie_m.stie200,g_stie_m.stie004,g_stie_m.stie005,g_stie_m.stie006,g_stie_m.stiestus,g_stie_m.stie007,g_stie_m.stie008,g_stie_m.stie010,g_stie_m.stie009,g_stie_m.stie011,g_stie_m.stie012,g_stie_m.stie013,g_stie_m.stie014,g_stie_m.stie015,g_stie_m.stie016,g_stie_m.stie017,g_stie_m.stie018,g_stie_m.stie003,g_stie_m.stie049,g_stie_m.stie019,g_stie_m.stie020,g_stie_m.stie021,g_stie_m.stie022,g_stie_m.stie027,g_stie_m.stie028,g_stie_m.stie029,g_stie_m.stie026,g_stie_m.stie023,g_stie_m.stie024,g_stie_m.stie025,g_stie_m.stie223,g_stie_m.stie224,g_stie_m.stie225,g_stie_m.stie030,g_stie_m.stie031,g_stie_m.stie032,g_stie_m.stie033,g_stie_m.stie034,g_stie_m.stie035,g_stie_m.stie036,g_stie_m.stie037,g_stie_m.stie038,g_stie_m.stie039,g_stie_m.stie040,g_stie_m.stie041,g_stie_m.stie042,g_stie_m.stie043,g_stie_m.stie044,g_stie_m.stie045,g_stie_m.stie046,g_stie_m.stie047,g_stie_m.stie048,g_stie_m.stie050,g_stie_m.stie051,g_stie_m.stie052,g_stie_m.stie053,g_stie_m.stieownid,g_stie_m.stieowndp,g_stie_m.stiecrtid,g_stie_m.stiecrtdp,g_stie_m.stiecrtdt,g_stie_m.stiemodid,g_stie_m.stiemoddt,g_stie_m.stiecnfid,g_stie_m.stiecnfdt,g_stie_m.stiesite_desc,g_stie_m.stie007_desc,g_stie_m.stie008_desc,g_stie_m.stie017_desc,g_stie_m.stie018_desc,g_stie_m.stie003_desc,g_stie_m.stie019_desc,g_stie_m.stie020_desc,g_stie_m.stie021_desc,g_stie_m.stie022_desc,g_stie_m.stie027_desc,g_stie_m.stie028_desc,g_stie_m.stie029_desc,g_stie_m.stie030_desc,g_stie_m.stie031_desc,g_stie_m.stie032_desc,g_stie_m.stie034_desc,g_stie_m.stie035_desc,g_stie_m.stie036_desc,g_stie_m.stie038_desc,g_stie_m.stie039_desc,g_stie_m.stie051_desc,g_stie_m.stie053_desc,g_stie_m.stieownid_desc,g_stie_m.stieowndp_desc,g_stie_m.stiemodid_desc
   
   CALL astt801_stie_t_mask()
   CALL astt801_show()
      
END FUNCTION
{</section>}
 
{<section id="astt801.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION astt801_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   {<point name="ui_detailshow.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   {<point name="ui_detailshow.define"/>} 
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail11",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail13",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail5",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail6",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail7",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail9",g_detail_idx)

   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
{</section>}
 
{<section id="astt801.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION astt801_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   {<point name="ui_browser_refresh.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   {<point name="ui_browser_refresh.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   {<point name="ui_browser_refresh.pre_function"/>}
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_stiedocno = g_stie_m.stiedocno 

         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION
{</section>}
 
{<section id="astt801.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION astt801_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   {<point name="cs.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   {<point name="cs.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   {<point name="cs.pre_function"/>}
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_stie_m.* TO NULL
   CALL g_stif_d.clear()        
   CALL g_stif11_d.clear() 
   CALL g_stif13_d.clear() 
   CALL g_stif2_d.clear() 
   CALL g_stif3_d.clear() 
   CALL g_stif4_d.clear() 
   CALL g_stif5_d.clear() 
   CALL g_stif6_d.clear() 
   CALL g_stif7_d.clear() 
   CALL g_stif9_d.clear() 

   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL

   INITIALIZE g_wc2_table3 TO NULL

   INITIALIZE g_wc2_table4 TO NULL

   INITIALIZE g_wc2_table5 TO NULL

   INITIALIZE g_wc2_table6 TO NULL

   INITIALIZE g_wc2_table7 TO NULL

   INITIALIZE g_wc2_table8 TO NULL

   INITIALIZE g_wc2_table9 TO NULL


    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON stiesite,stiedocdt,stiedocno,stie000,stie001,stie002,stie200,stie004,stie005,stie006,stiestus,stie007,stie008,stie010,stie009,stie011,stie012,stie013,stie014,stie015,stie016,stie017,stie018,stie003,stie049,stie019,stie020,stie021,stie022,stie027,stie028,stie029,stie026,stie023,stie024,stie025,stie223,stie224,stie225,stie030,stie031,stie032,stie033,stie034,stie035,stie036,stie037,stie038,stie039,stie040,stie041,stie042,stie043,stie044,stie045,stie046,stie047,stie048,stie050,stie051,stie052,stie053,stieownid,stieowndp,stiecrtid,stiecrtdp,stiecrtdt,stiemodid,stiemoddt,stiecnfid,stiecnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<stiecrtdt>>----
         AFTER FIELD stiecrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<stiemoddt>>----
         AFTER FIELD stiemoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<stiecnfdt>>----
         AFTER FIELD stiecnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<stiepstdt>>----
         #該樣板不需此段落AFTER FIELD stiepstdt
         #該樣板不需此段落   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #該樣板不需此段落   IF NOT cl_null(ls_result) THEN
         #該樣板不需此段落      IF NOT cl_chk_date_symbol(ls_result) THEN
         #該樣板不需此段落         LET ls_result = cl_add_date_extra_cond(ls_result)
         #該樣板不需此段落      END IF
         #該樣板不需此段落   END IF
         #該樣板不需此段落   CALL FGL_DIALOG_SETBUFFER(ls_result)



            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.stiesite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stiesite
            #add-point:ON ACTION controlp INFIELD stiesite name="construct.c.stiesite"
            {<point name="construct.c.stiesite" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stiesite
            #add-point:BEFORE FIELD stiesite name="construct.b.stiesite"
            {<point name="construct.b.stiesite" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stiesite
            
            #add-point:AFTER FIELD stiesite name="construct.a.stiesite"
            {<point name="construct.a.stiesite" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stiedocdt
            #add-point:BEFORE FIELD stiedocdt name="construct.b.stiedocdt"
            {<point name="construct.b.stiedocdt" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stiedocdt
            
            #add-point:AFTER FIELD stiedocdt name="construct.a.stiedocdt"
            {<point name="construct.a.stiedocdt" />}
            #END add-point
            


         #Ctrlp:construct.c.stiedocdt
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stiedocdt
            #add-point:ON ACTION controlp INFIELD stiedocdt name="construct.c.stiedocdt"
            {<point name="construct.c.stiedocdt" />}
            #END add-point


         #Ctrlp:construct.c.stiedocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stiedocno
            #add-point:ON ACTION controlp INFIELD stiedocno name="construct.c.stiedocno"
            {<point name="construct.c.stiedocno" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stiedocno
            #add-point:BEFORE FIELD stiedocno name="construct.b.stiedocno"
            {<point name="construct.b.stiedocno" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stiedocno
            
            #add-point:AFTER FIELD stiedocno name="construct.a.stiedocno"
            {<point name="construct.a.stiedocno" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie000
            #add-point:BEFORE FIELD stie000 name="construct.b.stie000"
            {<point name="construct.b.stie000" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie000
            
            #add-point:AFTER FIELD stie000 name="construct.a.stie000"
            {<point name="construct.a.stie000" />}
            #END add-point
            


         #Ctrlp:construct.c.stie000
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie000
            #add-point:ON ACTION controlp INFIELD stie000 name="construct.c.stie000"
            {<point name="construct.c.stie000" />}
            #END add-point


         #Ctrlp:construct.c.stie001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie001
            #add-point:ON ACTION controlp INFIELD stie001 name="construct.c.stie001"
            {<point name="construct.c.stie001" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie001
            #add-point:BEFORE FIELD stie001 name="construct.b.stie001"
            {<point name="construct.b.stie001" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie001
            
            #add-point:AFTER FIELD stie001 name="construct.a.stie001"
            {<point name="construct.a.stie001" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie002
            #add-point:BEFORE FIELD stie002 name="construct.b.stie002"
            {<point name="construct.b.stie002" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie002
            
            #add-point:AFTER FIELD stie002 name="construct.a.stie002"
            {<point name="construct.a.stie002" />}
            #END add-point
            


         #Ctrlp:construct.c.stie002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie002
            #add-point:ON ACTION controlp INFIELD stie002 name="construct.c.stie002"
            {<point name="construct.c.stie002" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie200
            #add-point:BEFORE FIELD stie200 name="construct.b.stie200"
            {<point name="construct.b.stie200" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie200
            
            #add-point:AFTER FIELD stie200 name="construct.a.stie200"
            {<point name="construct.a.stie200" />}
            #END add-point
            


         #Ctrlp:construct.c.stie200
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie200
            #add-point:ON ACTION controlp INFIELD stie200 name="construct.c.stie200"
            {<point name="construct.c.stie200" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie004
            #add-point:BEFORE FIELD stie004 name="construct.b.stie004"
            {<point name="construct.b.stie004" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie004
            
            #add-point:AFTER FIELD stie004 name="construct.a.stie004"
            {<point name="construct.a.stie004" />}
            #END add-point
            


         #Ctrlp:construct.c.stie004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie004
            #add-point:ON ACTION controlp INFIELD stie004 name="construct.c.stie004"
            {<point name="construct.c.stie004" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie005
            #add-point:BEFORE FIELD stie005 name="construct.b.stie005"
            {<point name="construct.b.stie005" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie005
            
            #add-point:AFTER FIELD stie005 name="construct.a.stie005"
            {<point name="construct.a.stie005" />}
            #END add-point
            


         #Ctrlp:construct.c.stie005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie005
            #add-point:ON ACTION controlp INFIELD stie005 name="construct.c.stie005"
            {<point name="construct.c.stie005" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie006
            #add-point:BEFORE FIELD stie006 name="construct.b.stie006"
            {<point name="construct.b.stie006" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie006
            
            #add-point:AFTER FIELD stie006 name="construct.a.stie006"
            {<point name="construct.a.stie006" />}
            #END add-point
            


         #Ctrlp:construct.c.stie006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie006
            #add-point:ON ACTION controlp INFIELD stie006 name="construct.c.stie006"
            {<point name="construct.c.stie006" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stiestus
            #add-point:BEFORE FIELD stiestus name="construct.b.stiestus"
            {<point name="construct.b.stiestus" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stiestus
            
            #add-point:AFTER FIELD stiestus name="construct.a.stiestus"
            {<point name="construct.a.stiestus" />}
            #END add-point
            


         #Ctrlp:construct.c.stiestus
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stiestus
            #add-point:ON ACTION controlp INFIELD stiestus name="construct.c.stiestus"
            {<point name="construct.c.stiestus" />}
            #END add-point


         #Ctrlp:construct.c.stie007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie007
            #add-point:ON ACTION controlp INFIELD stie007 name="construct.c.stie007"
            {<point name="construct.c.stie007" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie007
            #add-point:BEFORE FIELD stie007 name="construct.b.stie007"
            {<point name="construct.b.stie007" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie007
            
            #add-point:AFTER FIELD stie007 name="construct.a.stie007"
            {<point name="construct.a.stie007" />}
            #END add-point
            


         #Ctrlp:construct.c.stie008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie008
            #add-point:ON ACTION controlp INFIELD stie008 name="construct.c.stie008"
            {<point name="construct.c.stie008" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie008
            #add-point:BEFORE FIELD stie008 name="construct.b.stie008"
            {<point name="construct.b.stie008" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie008
            
            #add-point:AFTER FIELD stie008 name="construct.a.stie008"
            {<point name="construct.a.stie008" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie010
            #add-point:BEFORE FIELD stie010 name="construct.b.stie010"
            {<point name="construct.b.stie010" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie010
            
            #add-point:AFTER FIELD stie010 name="construct.a.stie010"
            {<point name="construct.a.stie010" />}
            #END add-point
            


         #Ctrlp:construct.c.stie010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie010
            #add-point:ON ACTION controlp INFIELD stie010 name="construct.c.stie010"
            {<point name="construct.c.stie010" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie009
            #add-point:BEFORE FIELD stie009 name="construct.b.stie009"
            {<point name="construct.b.stie009" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie009
            
            #add-point:AFTER FIELD stie009 name="construct.a.stie009"
            {<point name="construct.a.stie009" />}
            #END add-point
            


         #Ctrlp:construct.c.stie009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie009
            #add-point:ON ACTION controlp INFIELD stie009 name="construct.c.stie009"
            {<point name="construct.c.stie009" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie011
            #add-point:BEFORE FIELD stie011 name="construct.b.stie011"
            {<point name="construct.b.stie011" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie011
            
            #add-point:AFTER FIELD stie011 name="construct.a.stie011"
            {<point name="construct.a.stie011" />}
            #END add-point
            


         #Ctrlp:construct.c.stie011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie011
            #add-point:ON ACTION controlp INFIELD stie011 name="construct.c.stie011"
            {<point name="construct.c.stie011" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie012
            #add-point:BEFORE FIELD stie012 name="construct.b.stie012"
            {<point name="construct.b.stie012" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie012
            
            #add-point:AFTER FIELD stie012 name="construct.a.stie012"
            {<point name="construct.a.stie012" />}
            #END add-point
            


         #Ctrlp:construct.c.stie012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie012
            #add-point:ON ACTION controlp INFIELD stie012 name="construct.c.stie012"
            {<point name="construct.c.stie012" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie013
            #add-point:BEFORE FIELD stie013 name="construct.b.stie013"
            {<point name="construct.b.stie013" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie013
            
            #add-point:AFTER FIELD stie013 name="construct.a.stie013"
            {<point name="construct.a.stie013" />}
            #END add-point
            


         #Ctrlp:construct.c.stie013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie013
            #add-point:ON ACTION controlp INFIELD stie013 name="construct.c.stie013"
            {<point name="construct.c.stie013" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie014
            #add-point:BEFORE FIELD stie014 name="construct.b.stie014"
            {<point name="construct.b.stie014" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie014
            
            #add-point:AFTER FIELD stie014 name="construct.a.stie014"
            {<point name="construct.a.stie014" />}
            #END add-point
            


         #Ctrlp:construct.c.stie014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie014
            #add-point:ON ACTION controlp INFIELD stie014 name="construct.c.stie014"
            {<point name="construct.c.stie014" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie015
            #add-point:BEFORE FIELD stie015 name="construct.b.stie015"
            {<point name="construct.b.stie015" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie015
            
            #add-point:AFTER FIELD stie015 name="construct.a.stie015"
            {<point name="construct.a.stie015" />}
            #END add-point
            


         #Ctrlp:construct.c.stie015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie015
            #add-point:ON ACTION controlp INFIELD stie015 name="construct.c.stie015"
            {<point name="construct.c.stie015" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie016
            #add-point:BEFORE FIELD stie016 name="construct.b.stie016"
            {<point name="construct.b.stie016" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie016
            
            #add-point:AFTER FIELD stie016 name="construct.a.stie016"
            {<point name="construct.a.stie016" />}
            #END add-point
            


         #Ctrlp:construct.c.stie016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie016
            #add-point:ON ACTION controlp INFIELD stie016 name="construct.c.stie016"
            {<point name="construct.c.stie016" />}
            #END add-point


         #Ctrlp:construct.c.stie017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie017
            #add-point:ON ACTION controlp INFIELD stie017 name="construct.c.stie017"
            {<point name="construct.c.stie017" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie017
            #add-point:BEFORE FIELD stie017 name="construct.b.stie017"
            {<point name="construct.b.stie017" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie017
            
            #add-point:AFTER FIELD stie017 name="construct.a.stie017"
            {<point name="construct.a.stie017" />}
            #END add-point
            


         #Ctrlp:construct.c.stie018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie018
            #add-point:ON ACTION controlp INFIELD stie018 name="construct.c.stie018"
            {<point name="construct.c.stie018" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie018
            #add-point:BEFORE FIELD stie018 name="construct.b.stie018"
            {<point name="construct.b.stie018" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie018
            
            #add-point:AFTER FIELD stie018 name="construct.a.stie018"
            {<point name="construct.a.stie018" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie003
            #add-point:BEFORE FIELD stie003 name="construct.b.stie003"
            {<point name="construct.b.stie003" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie003
            
            #add-point:AFTER FIELD stie003 name="construct.a.stie003"
            {<point name="construct.a.stie003" />}
            #END add-point
            


         #Ctrlp:construct.c.stie003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie003
            #add-point:ON ACTION controlp INFIELD stie003 name="construct.c.stie003"
            {<point name="construct.c.stie003" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie049
            #add-point:BEFORE FIELD stie049 name="construct.b.stie049"
            {<point name="construct.b.stie049" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie049
            
            #add-point:AFTER FIELD stie049 name="construct.a.stie049"
            {<point name="construct.a.stie049" />}
            #END add-point
            


         #Ctrlp:construct.c.stie049
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie049
            #add-point:ON ACTION controlp INFIELD stie049 name="construct.c.stie049"
            {<point name="construct.c.stie049" />}
            #END add-point


         #Ctrlp:construct.c.stie019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie019
            #add-point:ON ACTION controlp INFIELD stie019 name="construct.c.stie019"
            {<point name="construct.c.stie019" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie019
            #add-point:BEFORE FIELD stie019 name="construct.b.stie019"
            {<point name="construct.b.stie019" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie019
            
            #add-point:AFTER FIELD stie019 name="construct.a.stie019"
            {<point name="construct.a.stie019" />}
            #END add-point
            


         #Ctrlp:construct.c.stie020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie020
            #add-point:ON ACTION controlp INFIELD stie020 name="construct.c.stie020"
            {<point name="construct.c.stie020" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie020
            #add-point:BEFORE FIELD stie020 name="construct.b.stie020"
            {<point name="construct.b.stie020" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie020
            
            #add-point:AFTER FIELD stie020 name="construct.a.stie020"
            {<point name="construct.a.stie020" />}
            #END add-point
            


         #Ctrlp:construct.c.stie021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie021
            #add-point:ON ACTION controlp INFIELD stie021 name="construct.c.stie021"
            {<point name="construct.c.stie021" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie021
            #add-point:BEFORE FIELD stie021 name="construct.b.stie021"
            {<point name="construct.b.stie021" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie021
            
            #add-point:AFTER FIELD stie021 name="construct.a.stie021"
            {<point name="construct.a.stie021" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie022
            #add-point:BEFORE FIELD stie022 name="construct.b.stie022"
            {<point name="construct.b.stie022" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie022
            
            #add-point:AFTER FIELD stie022 name="construct.a.stie022"
            {<point name="construct.a.stie022" />}
            #END add-point
            


         #Ctrlp:construct.c.stie022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie022
            #add-point:ON ACTION controlp INFIELD stie022 name="construct.c.stie022"
            {<point name="construct.c.stie022" />}
            #END add-point


         #Ctrlp:construct.c.stie027
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie027
            #add-point:ON ACTION controlp INFIELD stie027 name="construct.c.stie027"
            {<point name="construct.c.stie027" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie027
            #add-point:BEFORE FIELD stie027 name="construct.b.stie027"
            {<point name="construct.b.stie027" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie027
            
            #add-point:AFTER FIELD stie027 name="construct.a.stie027"
            {<point name="construct.a.stie027" />}
            #END add-point
            


         #Ctrlp:construct.c.stie028
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie028
            #add-point:ON ACTION controlp INFIELD stie028 name="construct.c.stie028"
            {<point name="construct.c.stie028" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie028
            #add-point:BEFORE FIELD stie028 name="construct.b.stie028"
            {<point name="construct.b.stie028" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie028
            
            #add-point:AFTER FIELD stie028 name="construct.a.stie028"
            {<point name="construct.a.stie028" />}
            #END add-point
            


         #Ctrlp:construct.c.stie029
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie029
            #add-point:ON ACTION controlp INFIELD stie029 name="construct.c.stie029"
            {<point name="construct.c.stie029" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie029
            #add-point:BEFORE FIELD stie029 name="construct.b.stie029"
            {<point name="construct.b.stie029" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie029
            
            #add-point:AFTER FIELD stie029 name="construct.a.stie029"
            {<point name="construct.a.stie029" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie026
            #add-point:BEFORE FIELD stie026 name="construct.b.stie026"
            {<point name="construct.b.stie026" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie026
            
            #add-point:AFTER FIELD stie026 name="construct.a.stie026"
            {<point name="construct.a.stie026" />}
            #END add-point
            


         #Ctrlp:construct.c.stie026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie026
            #add-point:ON ACTION controlp INFIELD stie026 name="construct.c.stie026"
            {<point name="construct.c.stie026" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie023
            #add-point:BEFORE FIELD stie023 name="construct.b.stie023"
            {<point name="construct.b.stie023" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie023
            
            #add-point:AFTER FIELD stie023 name="construct.a.stie023"
            {<point name="construct.a.stie023" />}
            #END add-point
            


         #Ctrlp:construct.c.stie023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie023
            #add-point:ON ACTION controlp INFIELD stie023 name="construct.c.stie023"
            {<point name="construct.c.stie023" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie024
            #add-point:BEFORE FIELD stie024 name="construct.b.stie024"
            {<point name="construct.b.stie024" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie024
            
            #add-point:AFTER FIELD stie024 name="construct.a.stie024"
            {<point name="construct.a.stie024" />}
            #END add-point
            


         #Ctrlp:construct.c.stie024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie024
            #add-point:ON ACTION controlp INFIELD stie024 name="construct.c.stie024"
            {<point name="construct.c.stie024" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie025
            #add-point:BEFORE FIELD stie025 name="construct.b.stie025"
            {<point name="construct.b.stie025" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie025
            
            #add-point:AFTER FIELD stie025 name="construct.a.stie025"
            {<point name="construct.a.stie025" />}
            #END add-point
            


         #Ctrlp:construct.c.stie025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie025
            #add-point:ON ACTION controlp INFIELD stie025 name="construct.c.stie025"
            {<point name="construct.c.stie025" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie223
            #add-point:BEFORE FIELD stie223 name="construct.b.stie223"
            {<point name="construct.b.stie223" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie223
            
            #add-point:AFTER FIELD stie223 name="construct.a.stie223"
            {<point name="construct.a.stie223" />}
            #END add-point
            


         #Ctrlp:construct.c.stie223
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie223
            #add-point:ON ACTION controlp INFIELD stie223 name="construct.c.stie223"
            {<point name="construct.c.stie223" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie224
            #add-point:BEFORE FIELD stie224 name="construct.b.stie224"
            {<point name="construct.b.stie224" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie224
            
            #add-point:AFTER FIELD stie224 name="construct.a.stie224"
            {<point name="construct.a.stie224" />}
            #END add-point
            


         #Ctrlp:construct.c.stie224
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie224
            #add-point:ON ACTION controlp INFIELD stie224 name="construct.c.stie224"
            {<point name="construct.c.stie224" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie225
            #add-point:BEFORE FIELD stie225 name="construct.b.stie225"
            {<point name="construct.b.stie225" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie225
            
            #add-point:AFTER FIELD stie225 name="construct.a.stie225"
            {<point name="construct.a.stie225" />}
            #END add-point
            


         #Ctrlp:construct.c.stie225
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie225
            #add-point:ON ACTION controlp INFIELD stie225 name="construct.c.stie225"
            {<point name="construct.c.stie225" />}
            #END add-point


         #Ctrlp:construct.c.stie030
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie030
            #add-point:ON ACTION controlp INFIELD stie030 name="construct.c.stie030"
            {<point name="construct.c.stie030" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie030
            #add-point:BEFORE FIELD stie030 name="construct.b.stie030"
            {<point name="construct.b.stie030" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie030
            
            #add-point:AFTER FIELD stie030 name="construct.a.stie030"
            {<point name="construct.a.stie030" />}
            #END add-point
            


         #Ctrlp:construct.c.stie031
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie031
            #add-point:ON ACTION controlp INFIELD stie031 name="construct.c.stie031"
            {<point name="construct.c.stie031" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie031
            #add-point:BEFORE FIELD stie031 name="construct.b.stie031"
            {<point name="construct.b.stie031" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie031
            
            #add-point:AFTER FIELD stie031 name="construct.a.stie031"
            {<point name="construct.a.stie031" />}
            #END add-point
            


         #Ctrlp:construct.c.stie032
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie032
            #add-point:ON ACTION controlp INFIELD stie032 name="construct.c.stie032"
            {<point name="construct.c.stie032" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie032
            #add-point:BEFORE FIELD stie032 name="construct.b.stie032"
            {<point name="construct.b.stie032" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie032
            
            #add-point:AFTER FIELD stie032 name="construct.a.stie032"
            {<point name="construct.a.stie032" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie033
            #add-point:BEFORE FIELD stie033 name="construct.b.stie033"
            {<point name="construct.b.stie033" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie033
            
            #add-point:AFTER FIELD stie033 name="construct.a.stie033"
            {<point name="construct.a.stie033" />}
            #END add-point
            


         #Ctrlp:construct.c.stie033
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie033
            #add-point:ON ACTION controlp INFIELD stie033 name="construct.c.stie033"
            {<point name="construct.c.stie033" />}
            #END add-point


         #Ctrlp:construct.c.stie034
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie034
            #add-point:ON ACTION controlp INFIELD stie034 name="construct.c.stie034"
            {<point name="construct.c.stie034" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie034
            #add-point:BEFORE FIELD stie034 name="construct.b.stie034"
            {<point name="construct.b.stie034" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie034
            
            #add-point:AFTER FIELD stie034 name="construct.a.stie034"
            {<point name="construct.a.stie034" />}
            #END add-point
            


         #Ctrlp:construct.c.stie035
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie035
            #add-point:ON ACTION controlp INFIELD stie035 name="construct.c.stie035"
            {<point name="construct.c.stie035" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie035
            #add-point:BEFORE FIELD stie035 name="construct.b.stie035"
            {<point name="construct.b.stie035" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie035
            
            #add-point:AFTER FIELD stie035 name="construct.a.stie035"
            {<point name="construct.a.stie035" />}
            #END add-point
            


         #Ctrlp:construct.c.stie036
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie036
            #add-point:ON ACTION controlp INFIELD stie036 name="construct.c.stie036"
            {<point name="construct.c.stie036" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie036
            #add-point:BEFORE FIELD stie036 name="construct.b.stie036"
            {<point name="construct.b.stie036" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie036
            
            #add-point:AFTER FIELD stie036 name="construct.a.stie036"
            {<point name="construct.a.stie036" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie037
            #add-point:BEFORE FIELD stie037 name="construct.b.stie037"
            {<point name="construct.b.stie037" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie037
            
            #add-point:AFTER FIELD stie037 name="construct.a.stie037"
            {<point name="construct.a.stie037" />}
            #END add-point
            


         #Ctrlp:construct.c.stie037
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie037
            #add-point:ON ACTION controlp INFIELD stie037 name="construct.c.stie037"
            {<point name="construct.c.stie037" />}
            #END add-point


         #Ctrlp:construct.c.stie038
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie038
            #add-point:ON ACTION controlp INFIELD stie038 name="construct.c.stie038"
            {<point name="construct.c.stie038" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie038
            #add-point:BEFORE FIELD stie038 name="construct.b.stie038"
            {<point name="construct.b.stie038" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie038
            
            #add-point:AFTER FIELD stie038 name="construct.a.stie038"
            {<point name="construct.a.stie038" />}
            #END add-point
            


         #Ctrlp:construct.c.stie039
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie039
            #add-point:ON ACTION controlp INFIELD stie039 name="construct.c.stie039"
            {<point name="construct.c.stie039" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie039
            #add-point:BEFORE FIELD stie039 name="construct.b.stie039"
            {<point name="construct.b.stie039" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie039
            
            #add-point:AFTER FIELD stie039 name="construct.a.stie039"
            {<point name="construct.a.stie039" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie040
            #add-point:BEFORE FIELD stie040 name="construct.b.stie040"
            {<point name="construct.b.stie040" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie040
            
            #add-point:AFTER FIELD stie040 name="construct.a.stie040"
            {<point name="construct.a.stie040" />}
            #END add-point
            


         #Ctrlp:construct.c.stie040
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie040
            #add-point:ON ACTION controlp INFIELD stie040 name="construct.c.stie040"
            {<point name="construct.c.stie040" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie041
            #add-point:BEFORE FIELD stie041 name="construct.b.stie041"
            {<point name="construct.b.stie041" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie041
            
            #add-point:AFTER FIELD stie041 name="construct.a.stie041"
            {<point name="construct.a.stie041" />}
            #END add-point
            


         #Ctrlp:construct.c.stie041
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie041
            #add-point:ON ACTION controlp INFIELD stie041 name="construct.c.stie041"
            {<point name="construct.c.stie041" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie042
            #add-point:BEFORE FIELD stie042 name="construct.b.stie042"
            {<point name="construct.b.stie042" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie042
            
            #add-point:AFTER FIELD stie042 name="construct.a.stie042"
            {<point name="construct.a.stie042" />}
            #END add-point
            


         #Ctrlp:construct.c.stie042
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie042
            #add-point:ON ACTION controlp INFIELD stie042 name="construct.c.stie042"
            {<point name="construct.c.stie042" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie043
            #add-point:BEFORE FIELD stie043 name="construct.b.stie043"
            {<point name="construct.b.stie043" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie043
            
            #add-point:AFTER FIELD stie043 name="construct.a.stie043"
            {<point name="construct.a.stie043" />}
            #END add-point
            


         #Ctrlp:construct.c.stie043
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie043
            #add-point:ON ACTION controlp INFIELD stie043 name="construct.c.stie043"
            {<point name="construct.c.stie043" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie044
            #add-point:BEFORE FIELD stie044 name="construct.b.stie044"
            {<point name="construct.b.stie044" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie044
            
            #add-point:AFTER FIELD stie044 name="construct.a.stie044"
            {<point name="construct.a.stie044" />}
            #END add-point
            


         #Ctrlp:construct.c.stie044
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie044
            #add-point:ON ACTION controlp INFIELD stie044 name="construct.c.stie044"
            {<point name="construct.c.stie044" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie045
            #add-point:BEFORE FIELD stie045 name="construct.b.stie045"
            {<point name="construct.b.stie045" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie045
            
            #add-point:AFTER FIELD stie045 name="construct.a.stie045"
            {<point name="construct.a.stie045" />}
            #END add-point
            


         #Ctrlp:construct.c.stie045
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie045
            #add-point:ON ACTION controlp INFIELD stie045 name="construct.c.stie045"
            {<point name="construct.c.stie045" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie046
            #add-point:BEFORE FIELD stie046 name="construct.b.stie046"
            {<point name="construct.b.stie046" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie046
            
            #add-point:AFTER FIELD stie046 name="construct.a.stie046"
            {<point name="construct.a.stie046" />}
            #END add-point
            


         #Ctrlp:construct.c.stie046
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie046
            #add-point:ON ACTION controlp INFIELD stie046 name="construct.c.stie046"
            {<point name="construct.c.stie046" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie047
            #add-point:BEFORE FIELD stie047 name="construct.b.stie047"
            {<point name="construct.b.stie047" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie047
            
            #add-point:AFTER FIELD stie047 name="construct.a.stie047"
            {<point name="construct.a.stie047" />}
            #END add-point
            


         #Ctrlp:construct.c.stie047
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie047
            #add-point:ON ACTION controlp INFIELD stie047 name="construct.c.stie047"
            {<point name="construct.c.stie047" />}
            #END add-point


         #Ctrlp:construct.c.stie048
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie048
            #add-point:ON ACTION controlp INFIELD stie048 name="construct.c.stie048"
            {<point name="construct.c.stie048" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie048
            #add-point:BEFORE FIELD stie048 name="construct.b.stie048"
            {<point name="construct.b.stie048" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie048
            
            #add-point:AFTER FIELD stie048 name="construct.a.stie048"
            {<point name="construct.a.stie048" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie050
            #add-point:BEFORE FIELD stie050 name="construct.b.stie050"
            {<point name="construct.b.stie050" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie050
            
            #add-point:AFTER FIELD stie050 name="construct.a.stie050"
            {<point name="construct.a.stie050" />}
            #END add-point
            


         #Ctrlp:construct.c.stie050
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie050
            #add-point:ON ACTION controlp INFIELD stie050 name="construct.c.stie050"
            {<point name="construct.c.stie050" />}
            #END add-point


         #Ctrlp:construct.c.stie051
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie051
            #add-point:ON ACTION controlp INFIELD stie051 name="construct.c.stie051"
            {<point name="construct.c.stie051" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie051
            #add-point:BEFORE FIELD stie051 name="construct.b.stie051"
            {<point name="construct.b.stie051" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie051
            
            #add-point:AFTER FIELD stie051 name="construct.a.stie051"
            {<point name="construct.a.stie051" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie052
            #add-point:BEFORE FIELD stie052 name="construct.b.stie052"
            {<point name="construct.b.stie052" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie052
            
            #add-point:AFTER FIELD stie052 name="construct.a.stie052"
            {<point name="construct.a.stie052" />}
            #END add-point
            


         #Ctrlp:construct.c.stie052
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie052
            #add-point:ON ACTION controlp INFIELD stie052 name="construct.c.stie052"
            {<point name="construct.c.stie052" />}
            #END add-point


         #Ctrlp:construct.c.stie053
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie053
            #add-point:ON ACTION controlp INFIELD stie053 name="construct.c.stie053"
            {<point name="construct.c.stie053" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie053
            #add-point:BEFORE FIELD stie053 name="construct.b.stie053"
            {<point name="construct.b.stie053" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie053
            
            #add-point:AFTER FIELD stie053 name="construct.a.stie053"
            {<point name="construct.a.stie053" />}
            #END add-point
            


         #Ctrlp:construct.c.stieownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stieownid
            #add-point:ON ACTION controlp INFIELD stieownid name="construct.c.stieownid"
            {<point name="construct.c.stieownid" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stieownid
            #add-point:BEFORE FIELD stieownid name="construct.b.stieownid"
            {<point name="construct.b.stieownid" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stieownid
            
            #add-point:AFTER FIELD stieownid name="construct.a.stieownid"
            {<point name="construct.a.stieownid" />}
            #END add-point
            


         #Ctrlp:construct.c.stieowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stieowndp
            #add-point:ON ACTION controlp INFIELD stieowndp name="construct.c.stieowndp"
            {<point name="construct.c.stieowndp" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stieowndp
            #add-point:BEFORE FIELD stieowndp name="construct.b.stieowndp"
            {<point name="construct.b.stieowndp" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stieowndp
            
            #add-point:AFTER FIELD stieowndp name="construct.a.stieowndp"
            {<point name="construct.a.stieowndp" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stiecrtid
            #add-point:BEFORE FIELD stiecrtid name="construct.b.stiecrtid"
            {<point name="construct.b.stiecrtid" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stiecrtid
            
            #add-point:AFTER FIELD stiecrtid name="construct.a.stiecrtid"
            {<point name="construct.a.stiecrtid" />}
            #END add-point
            


         #Ctrlp:construct.c.stiecrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stiecrtid
            #add-point:ON ACTION controlp INFIELD stiecrtid name="construct.c.stiecrtid"
            {<point name="construct.c.stiecrtid" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stiecrtdp
            #add-point:BEFORE FIELD stiecrtdp name="construct.b.stiecrtdp"
            {<point name="construct.b.stiecrtdp" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stiecrtdp
            
            #add-point:AFTER FIELD stiecrtdp name="construct.a.stiecrtdp"
            {<point name="construct.a.stiecrtdp" />}
            #END add-point
            


         #Ctrlp:construct.c.stiecrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stiecrtdp
            #add-point:ON ACTION controlp INFIELD stiecrtdp name="construct.c.stiecrtdp"
            {<point name="construct.c.stiecrtdp" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stiecrtdt
            #add-point:BEFORE FIELD stiecrtdt name="construct.b.stiecrtdt"
            {<point name="construct.b.stiecrtdt" />}
            #END add-point


         #Ctrlp:construct.c.stiemodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stiemodid
            #add-point:ON ACTION controlp INFIELD stiemodid name="construct.c.stiemodid"
            {<point name="construct.c.stiemodid" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stiemodid
            #add-point:BEFORE FIELD stiemodid name="construct.b.stiemodid"
            {<point name="construct.b.stiemodid" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stiemodid
            
            #add-point:AFTER FIELD stiemodid name="construct.a.stiemodid"
            {<point name="construct.a.stiemodid" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stiemoddt
            #add-point:BEFORE FIELD stiemoddt name="construct.b.stiemoddt"
            {<point name="construct.b.stiemoddt" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stiecnfid
            #add-point:BEFORE FIELD stiecnfid name="construct.b.stiecnfid"
            {<point name="construct.b.stiecnfid" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stiecnfid
            
            #add-point:AFTER FIELD stiecnfid name="construct.a.stiecnfid"
            {<point name="construct.a.stiecnfid" />}
            #END add-point
            


         #Ctrlp:construct.c.stiecnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stiecnfid
            #add-point:ON ACTION controlp INFIELD stiecnfid name="construct.c.stiecnfid"
            {<point name="construct.c.stiecnfid" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stiecnfdt
            #add-point:BEFORE FIELD stiecnfdt name="construct.b.stiecnfdt"
            {<point name="construct.b.stiecnfdt" />}
            #END add-point



         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON stifseq,stif001,stif002,stif003,stif021,stif004,stif022,stif005,stif006,stif007,stif008,stif009,stif010,stif011,stif018,stif016,stif017,stif020,stif023,stif024,stif025,stifsite,stifunit
           FROM s_detail1[1].stifseq,s_detail1[1].stif001,s_detail1[1].stif002,s_detail1[1].stif003,s_detail1[1].stif021,s_detail1[1].stif004,s_detail1[1].stif022,s_detail1[1].stif005,s_detail1[1].stif006,s_detail1[1].stif007,s_detail1[1].stif008,s_detail1[1].stif009,s_detail1[1].stif010,s_detail1[1].stif011,s_detail1[1].stif018,s_detail1[1].stif016,s_detail1[1].stif017,s_detail1[1].stif020,s_detail1[1].stif023,s_detail1[1].stif024,s_detail1[1].stif025,s_detail1[1].stifsite,s_detail1[1].stifunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stifseq
            #add-point:BEFORE FIELD stifseq name="construct.b.page1.stifseq"
            {<point name="construct.b.page1.stifseq" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stifseq
            
            #add-point:AFTER FIELD stifseq name="construct.a.page1.stifseq"
            {<point name="construct.a.page1.stifseq" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.stifseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stifseq
            #add-point:ON ACTION controlp INFIELD stifseq name="construct.c.page1.stifseq"
            {<point name="construct.c.page1.stifseq" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif001
            #add-point:BEFORE FIELD stif001 name="construct.b.page1.stif001"
            {<point name="construct.b.page1.stif001" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif001
            
            #add-point:AFTER FIELD stif001 name="construct.a.page1.stif001"
            {<point name="construct.a.page1.stif001" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.stif001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif001
            #add-point:ON ACTION controlp INFIELD stif001 name="construct.c.page1.stif001"
            {<point name="construct.c.page1.stif001" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif002
            #add-point:BEFORE FIELD stif002 name="construct.b.page1.stif002"
            {<point name="construct.b.page1.stif002" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif002
            
            #add-point:AFTER FIELD stif002 name="construct.a.page1.stif002"
            {<point name="construct.a.page1.stif002" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.stif002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif002
            #add-point:ON ACTION controlp INFIELD stif002 name="construct.c.page1.stif002"
            {<point name="construct.c.page1.stif002" />}
            #END add-point


         #Ctrlp:construct.c.page1.stif003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif003
            #add-point:ON ACTION controlp INFIELD stif003 name="construct.c.page1.stif003"
            {<point name="construct.c.page1.stif003" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif003
            #add-point:BEFORE FIELD stif003 name="construct.b.page1.stif003"
            {<point name="construct.b.page1.stif003" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif003
            
            #add-point:AFTER FIELD stif003 name="construct.a.page1.stif003"
            {<point name="construct.a.page1.stif003" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif021
            #add-point:BEFORE FIELD stif021 name="construct.b.page1.stif021"
            {<point name="construct.b.page1.stif021" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif021
            
            #add-point:AFTER FIELD stif021 name="construct.a.page1.stif021"
            {<point name="construct.a.page1.stif021" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.stif021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif021
            #add-point:ON ACTION controlp INFIELD stif021 name="construct.c.page1.stif021"
            {<point name="construct.c.page1.stif021" />}
            #END add-point


         #Ctrlp:construct.c.page1.stif004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif004
            #add-point:ON ACTION controlp INFIELD stif004 name="construct.c.page1.stif004"
            {<point name="construct.c.page1.stif004" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif004
            #add-point:BEFORE FIELD stif004 name="construct.b.page1.stif004"
            {<point name="construct.b.page1.stif004" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif004
            
            #add-point:AFTER FIELD stif004 name="construct.a.page1.stif004"
            {<point name="construct.a.page1.stif004" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.stif022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif022
            #add-point:ON ACTION controlp INFIELD stif022 name="construct.c.page1.stif022"
            {<point name="construct.c.page1.stif022" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif022
            #add-point:BEFORE FIELD stif022 name="construct.b.page1.stif022"
            {<point name="construct.b.page1.stif022" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif022
            
            #add-point:AFTER FIELD stif022 name="construct.a.page1.stif022"
            {<point name="construct.a.page1.stif022" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif005
            #add-point:BEFORE FIELD stif005 name="construct.b.page1.stif005"
            {<point name="construct.b.page1.stif005" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif005
            
            #add-point:AFTER FIELD stif005 name="construct.a.page1.stif005"
            {<point name="construct.a.page1.stif005" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.stif005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif005
            #add-point:ON ACTION controlp INFIELD stif005 name="construct.c.page1.stif005"
            {<point name="construct.c.page1.stif005" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif006
            #add-point:BEFORE FIELD stif006 name="construct.b.page1.stif006"
            {<point name="construct.b.page1.stif006" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif006
            
            #add-point:AFTER FIELD stif006 name="construct.a.page1.stif006"
            {<point name="construct.a.page1.stif006" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.stif006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif006
            #add-point:ON ACTION controlp INFIELD stif006 name="construct.c.page1.stif006"
            {<point name="construct.c.page1.stif006" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif007
            #add-point:BEFORE FIELD stif007 name="construct.b.page1.stif007"
            {<point name="construct.b.page1.stif007" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif007
            
            #add-point:AFTER FIELD stif007 name="construct.a.page1.stif007"
            {<point name="construct.a.page1.stif007" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.stif007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif007
            #add-point:ON ACTION controlp INFIELD stif007 name="construct.c.page1.stif007"
            {<point name="construct.c.page1.stif007" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif008
            #add-point:BEFORE FIELD stif008 name="construct.b.page1.stif008"
            {<point name="construct.b.page1.stif008" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif008
            
            #add-point:AFTER FIELD stif008 name="construct.a.page1.stif008"
            {<point name="construct.a.page1.stif008" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.stif008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif008
            #add-point:ON ACTION controlp INFIELD stif008 name="construct.c.page1.stif008"
            {<point name="construct.c.page1.stif008" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif009
            #add-point:BEFORE FIELD stif009 name="construct.b.page1.stif009"
            {<point name="construct.b.page1.stif009" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif009
            
            #add-point:AFTER FIELD stif009 name="construct.a.page1.stif009"
            {<point name="construct.a.page1.stif009" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.stif009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif009
            #add-point:ON ACTION controlp INFIELD stif009 name="construct.c.page1.stif009"
            {<point name="construct.c.page1.stif009" />}
            #END add-point


         #Ctrlp:construct.c.page1.stif010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif010
            #add-point:ON ACTION controlp INFIELD stif010 name="construct.c.page1.stif010"
            {<point name="construct.c.page1.stif010" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif010
            #add-point:BEFORE FIELD stif010 name="construct.b.page1.stif010"
            {<point name="construct.b.page1.stif010" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif010
            
            #add-point:AFTER FIELD stif010 name="construct.a.page1.stif010"
            {<point name="construct.a.page1.stif010" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif011
            #add-point:BEFORE FIELD stif011 name="construct.b.page1.stif011"
            {<point name="construct.b.page1.stif011" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif011
            
            #add-point:AFTER FIELD stif011 name="construct.a.page1.stif011"
            {<point name="construct.a.page1.stif011" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.stif011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif011
            #add-point:ON ACTION controlp INFIELD stif011 name="construct.c.page1.stif011"
            {<point name="construct.c.page1.stif011" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif018
            #add-point:BEFORE FIELD stif018 name="construct.b.page1.stif018"
            {<point name="construct.b.page1.stif018" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif018
            
            #add-point:AFTER FIELD stif018 name="construct.a.page1.stif018"
            {<point name="construct.a.page1.stif018" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.stif018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif018
            #add-point:ON ACTION controlp INFIELD stif018 name="construct.c.page1.stif018"
            {<point name="construct.c.page1.stif018" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif016
            #add-point:BEFORE FIELD stif016 name="construct.b.page1.stif016"
            {<point name="construct.b.page1.stif016" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif016
            
            #add-point:AFTER FIELD stif016 name="construct.a.page1.stif016"
            {<point name="construct.a.page1.stif016" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.stif016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif016
            #add-point:ON ACTION controlp INFIELD stif016 name="construct.c.page1.stif016"
            {<point name="construct.c.page1.stif016" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif017
            #add-point:BEFORE FIELD stif017 name="construct.b.page1.stif017"
            {<point name="construct.b.page1.stif017" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif017
            
            #add-point:AFTER FIELD stif017 name="construct.a.page1.stif017"
            {<point name="construct.a.page1.stif017" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.stif017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif017
            #add-point:ON ACTION controlp INFIELD stif017 name="construct.c.page1.stif017"
            {<point name="construct.c.page1.stif017" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif020
            #add-point:BEFORE FIELD stif020 name="construct.b.page1.stif020"
            {<point name="construct.b.page1.stif020" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif020
            
            #add-point:AFTER FIELD stif020 name="construct.a.page1.stif020"
            {<point name="construct.a.page1.stif020" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.stif020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif020
            #add-point:ON ACTION controlp INFIELD stif020 name="construct.c.page1.stif020"
            {<point name="construct.c.page1.stif020" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif023
            #add-point:BEFORE FIELD stif023 name="construct.b.page1.stif023"
            {<point name="construct.b.page1.stif023" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif023
            
            #add-point:AFTER FIELD stif023 name="construct.a.page1.stif023"
            {<point name="construct.a.page1.stif023" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.stif023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif023
            #add-point:ON ACTION controlp INFIELD stif023 name="construct.c.page1.stif023"
            {<point name="construct.c.page1.stif023" />}
            #END add-point


         #Ctrlp:construct.c.page1.stif024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif024
            #add-point:ON ACTION controlp INFIELD stif024 name="construct.c.page1.stif024"
            {<point name="construct.c.page1.stif024" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif024
            #add-point:BEFORE FIELD stif024 name="construct.b.page1.stif024"
            {<point name="construct.b.page1.stif024" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif024
            
            #add-point:AFTER FIELD stif024 name="construct.a.page1.stif024"
            {<point name="construct.a.page1.stif024" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif025
            #add-point:BEFORE FIELD stif025 name="construct.b.page1.stif025"
            {<point name="construct.b.page1.stif025" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif025
            
            #add-point:AFTER FIELD stif025 name="construct.a.page1.stif025"
            {<point name="construct.a.page1.stif025" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.stif025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif025
            #add-point:ON ACTION controlp INFIELD stif025 name="construct.c.page1.stif025"
            {<point name="construct.c.page1.stif025" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stifsite
            #add-point:BEFORE FIELD stifsite name="construct.b.page1.stifsite"
            {<point name="construct.b.page1.stifsite" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stifsite
            
            #add-point:AFTER FIELD stifsite name="construct.a.page1.stifsite"
            {<point name="construct.a.page1.stifsite" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.stifsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stifsite
            #add-point:ON ACTION controlp INFIELD stifsite name="construct.c.page1.stifsite"
            {<point name="construct.c.page1.stifsite" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stifunit
            #add-point:BEFORE FIELD stifunit name="construct.b.page1.stifunit"
            {<point name="construct.b.page1.stifunit" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stifunit
            
            #add-point:AFTER FIELD stifunit name="construct.a.page1.stifunit"
            {<point name="construct.a.page1.stifunit" />}
            #END add-point
            


         #Ctrlp:construct.c.page1.stifunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stifunit
            #add-point:ON ACTION controlp INFIELD stifunit name="construct.c.page1.stifunit"
            {<point name="construct.c.page1.stifunit" />}
            #END add-point


   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON stinsite,stinunit,stinseq,stin001,stin002,stin004,stin003,stin005,stin006,stin007,stin008,stin009,stin010
           FROM s_detail11[1].stinsite,s_detail11[1].stinunit,s_detail11[1].stinseq,s_detail11[1].stin001,s_detail11[1].stin002,s_detail11[1].stin004,s_detail11[1].stin003,s_detail11[1].stin005,s_detail11[1].stin006,s_detail11[1].stin007,s_detail11[1].stin008,s_detail11[1].stin009,s_detail11[1].stin010
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body2.before_construct"
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stinsite
            #add-point:BEFORE FIELD stinsite name="construct.b.page11.stinsite"
            {<point name="construct.b.page11.stinsite" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stinsite
            
            #add-point:AFTER FIELD stinsite name="construct.a.page11.stinsite"
            {<point name="construct.a.page11.stinsite" />}
            #END add-point
            


         #Ctrlp:construct.c.page11.stinsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stinsite
            #add-point:ON ACTION controlp INFIELD stinsite name="construct.c.page11.stinsite"
            {<point name="construct.c.page11.stinsite" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stinunit
            #add-point:BEFORE FIELD stinunit name="construct.b.page11.stinunit"
            {<point name="construct.b.page11.stinunit" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stinunit
            
            #add-point:AFTER FIELD stinunit name="construct.a.page11.stinunit"
            {<point name="construct.a.page11.stinunit" />}
            #END add-point
            


         #Ctrlp:construct.c.page11.stinunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stinunit
            #add-point:ON ACTION controlp INFIELD stinunit name="construct.c.page11.stinunit"
            {<point name="construct.c.page11.stinunit" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stinseq
            #add-point:BEFORE FIELD stinseq name="construct.b.page11.stinseq"
            {<point name="construct.b.page11.stinseq" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stinseq
            
            #add-point:AFTER FIELD stinseq name="construct.a.page11.stinseq"
            {<point name="construct.a.page11.stinseq" />}
            #END add-point
            


         #Ctrlp:construct.c.page11.stinseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stinseq
            #add-point:ON ACTION controlp INFIELD stinseq name="construct.c.page11.stinseq"
            {<point name="construct.c.page11.stinseq" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stin001
            #add-point:BEFORE FIELD stin001 name="construct.b.page11.stin001"
            {<point name="construct.b.page11.stin001" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stin001
            
            #add-point:AFTER FIELD stin001 name="construct.a.page11.stin001"
            {<point name="construct.a.page11.stin001" />}
            #END add-point
            


         #Ctrlp:construct.c.page11.stin001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stin001
            #add-point:ON ACTION controlp INFIELD stin001 name="construct.c.page11.stin001"
            {<point name="construct.c.page11.stin001" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stin002
            #add-point:BEFORE FIELD stin002 name="construct.b.page11.stin002"
            {<point name="construct.b.page11.stin002" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stin002
            
            #add-point:AFTER FIELD stin002 name="construct.a.page11.stin002"
            {<point name="construct.a.page11.stin002" />}
            #END add-point
            


         #Ctrlp:construct.c.page11.stin002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stin002
            #add-point:ON ACTION controlp INFIELD stin002 name="construct.c.page11.stin002"
            {<point name="construct.c.page11.stin002" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stin004
            #add-point:BEFORE FIELD stin004 name="construct.b.page11.stin004"
            {<point name="construct.b.page11.stin004" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stin004
            
            #add-point:AFTER FIELD stin004 name="construct.a.page11.stin004"
            {<point name="construct.a.page11.stin004" />}
            #END add-point
            


         #Ctrlp:construct.c.page11.stin004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stin004
            #add-point:ON ACTION controlp INFIELD stin004 name="construct.c.page11.stin004"
            {<point name="construct.c.page11.stin004" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stin003
            #add-point:BEFORE FIELD stin003 name="construct.b.page11.stin003"
            {<point name="construct.b.page11.stin003" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stin003
            
            #add-point:AFTER FIELD stin003 name="construct.a.page11.stin003"
            {<point name="construct.a.page11.stin003" />}
            #END add-point
            


         #Ctrlp:construct.c.page11.stin003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stin003
            #add-point:ON ACTION controlp INFIELD stin003 name="construct.c.page11.stin003"
            {<point name="construct.c.page11.stin003" />}
            #END add-point


         #Ctrlp:construct.c.page11.stin005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stin005
            #add-point:ON ACTION controlp INFIELD stin005 name="construct.c.page11.stin005"
            {<point name="construct.c.page11.stin005" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stin005
            #add-point:BEFORE FIELD stin005 name="construct.b.page11.stin005"
            {<point name="construct.b.page11.stin005" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stin005
            
            #add-point:AFTER FIELD stin005 name="construct.a.page11.stin005"
            {<point name="construct.a.page11.stin005" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stin006
            #add-point:BEFORE FIELD stin006 name="construct.b.page11.stin006"
            {<point name="construct.b.page11.stin006" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stin006
            
            #add-point:AFTER FIELD stin006 name="construct.a.page11.stin006"
            {<point name="construct.a.page11.stin006" />}
            #END add-point
            


         #Ctrlp:construct.c.page11.stin006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stin006
            #add-point:ON ACTION controlp INFIELD stin006 name="construct.c.page11.stin006"
            {<point name="construct.c.page11.stin006" />}
            #END add-point


         #Ctrlp:construct.c.page11.stin007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stin007
            #add-point:ON ACTION controlp INFIELD stin007 name="construct.c.page11.stin007"
            {<point name="construct.c.page11.stin007" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stin007
            #add-point:BEFORE FIELD stin007 name="construct.b.page11.stin007"
            {<point name="construct.b.page11.stin007" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stin007
            
            #add-point:AFTER FIELD stin007 name="construct.a.page11.stin007"
            {<point name="construct.a.page11.stin007" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stin008
            #add-point:BEFORE FIELD stin008 name="construct.b.page11.stin008"
            {<point name="construct.b.page11.stin008" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stin008
            
            #add-point:AFTER FIELD stin008 name="construct.a.page11.stin008"
            {<point name="construct.a.page11.stin008" />}
            #END add-point
            


         #Ctrlp:construct.c.page11.stin008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stin008
            #add-point:ON ACTION controlp INFIELD stin008 name="construct.c.page11.stin008"
            {<point name="construct.c.page11.stin008" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stin009
            #add-point:BEFORE FIELD stin009 name="construct.b.page11.stin009"
            {<point name="construct.b.page11.stin009" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stin009
            
            #add-point:AFTER FIELD stin009 name="construct.a.page11.stin009"
            {<point name="construct.a.page11.stin009" />}
            #END add-point
            


         #Ctrlp:construct.c.page11.stin009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stin009
            #add-point:ON ACTION controlp INFIELD stin009 name="construct.c.page11.stin009"
            {<point name="construct.c.page11.stin009" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stin010
            #add-point:BEFORE FIELD stin010 name="construct.b.page11.stin010"
            {<point name="construct.b.page11.stin010" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stin010
            
            #add-point:AFTER FIELD stin010 name="construct.a.page11.stin010"
            {<point name="construct.a.page11.stin010" />}
            #END add-point
            


         #Ctrlp:construct.c.page11.stin010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stin010
            #add-point:ON ACTION controlp INFIELD stin010 name="construct.c.page11.stin010"
            {<point name="construct.c.page11.stin010" />}
            #END add-point


   
       
      END CONSTRUCT

      CONSTRUCT g_wc2_table3 ON stiosite,stiounit,stioseq,stio001,stio002,stio003,stio004,stio005,stio006,stio007
           FROM s_detail13[1].stiosite,s_detail13[1].stiounit,s_detail13[1].stioseq,s_detail13[1].stio001,s_detail13[1].stio002,s_detail13[1].stio003,s_detail13[1].stio004,s_detail13[1].stio005,s_detail13[1].stio006,s_detail13[1].stio007
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body3.before_construct"
            {<point name="cs.body3.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stiosite
            #add-point:BEFORE FIELD stiosite name="construct.b.page13.stiosite"
            {<point name="construct.b.page13.stiosite" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stiosite
            
            #add-point:AFTER FIELD stiosite name="construct.a.page13.stiosite"
            {<point name="construct.a.page13.stiosite" />}
            #END add-point
            


         #Ctrlp:construct.c.page13.stiosite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stiosite
            #add-point:ON ACTION controlp INFIELD stiosite name="construct.c.page13.stiosite"
            {<point name="construct.c.page13.stiosite" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stiounit
            #add-point:BEFORE FIELD stiounit name="construct.b.page13.stiounit"
            {<point name="construct.b.page13.stiounit" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stiounit
            
            #add-point:AFTER FIELD stiounit name="construct.a.page13.stiounit"
            {<point name="construct.a.page13.stiounit" />}
            #END add-point
            


         #Ctrlp:construct.c.page13.stiounit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stiounit
            #add-point:ON ACTION controlp INFIELD stiounit name="construct.c.page13.stiounit"
            {<point name="construct.c.page13.stiounit" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stioseq
            #add-point:BEFORE FIELD stioseq name="construct.b.page13.stioseq"
            {<point name="construct.b.page13.stioseq" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stioseq
            
            #add-point:AFTER FIELD stioseq name="construct.a.page13.stioseq"
            {<point name="construct.a.page13.stioseq" />}
            #END add-point
            


         #Ctrlp:construct.c.page13.stioseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stioseq
            #add-point:ON ACTION controlp INFIELD stioseq name="construct.c.page13.stioseq"
            {<point name="construct.c.page13.stioseq" />}
            #END add-point


         #Ctrlp:construct.c.page13.stio001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stio001
            #add-point:ON ACTION controlp INFIELD stio001 name="construct.c.page13.stio001"
            {<point name="construct.c.page13.stio001" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stio001
            #add-point:BEFORE FIELD stio001 name="construct.b.page13.stio001"
            {<point name="construct.b.page13.stio001" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stio001
            
            #add-point:AFTER FIELD stio001 name="construct.a.page13.stio001"
            {<point name="construct.a.page13.stio001" />}
            #END add-point
            


         #Ctrlp:construct.c.page13.stio002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stio002
            #add-point:ON ACTION controlp INFIELD stio002 name="construct.c.page13.stio002"
            {<point name="construct.c.page13.stio002" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stio002
            #add-point:BEFORE FIELD stio002 name="construct.b.page13.stio002"
            {<point name="construct.b.page13.stio002" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stio002
            
            #add-point:AFTER FIELD stio002 name="construct.a.page13.stio002"
            {<point name="construct.a.page13.stio002" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stio003
            #add-point:BEFORE FIELD stio003 name="construct.b.page13.stio003"
            {<point name="construct.b.page13.stio003" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stio003
            
            #add-point:AFTER FIELD stio003 name="construct.a.page13.stio003"
            {<point name="construct.a.page13.stio003" />}
            #END add-point
            


         #Ctrlp:construct.c.page13.stio003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stio003
            #add-point:ON ACTION controlp INFIELD stio003 name="construct.c.page13.stio003"
            {<point name="construct.c.page13.stio003" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stio004
            #add-point:BEFORE FIELD stio004 name="construct.b.page13.stio004"
            {<point name="construct.b.page13.stio004" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stio004
            
            #add-point:AFTER FIELD stio004 name="construct.a.page13.stio004"
            {<point name="construct.a.page13.stio004" />}
            #END add-point
            


         #Ctrlp:construct.c.page13.stio004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stio004
            #add-point:ON ACTION controlp INFIELD stio004 name="construct.c.page13.stio004"
            {<point name="construct.c.page13.stio004" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stio005
            #add-point:BEFORE FIELD stio005 name="construct.b.page13.stio005"
            {<point name="construct.b.page13.stio005" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stio005
            
            #add-point:AFTER FIELD stio005 name="construct.a.page13.stio005"
            {<point name="construct.a.page13.stio005" />}
            #END add-point
            


         #Ctrlp:construct.c.page13.stio005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stio005
            #add-point:ON ACTION controlp INFIELD stio005 name="construct.c.page13.stio005"
            {<point name="construct.c.page13.stio005" />}
            #END add-point


         #Ctrlp:construct.c.page13.stio006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stio006
            #add-point:ON ACTION controlp INFIELD stio006 name="construct.c.page13.stio006"
            {<point name="construct.c.page13.stio006" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stio006
            #add-point:BEFORE FIELD stio006 name="construct.b.page13.stio006"
            {<point name="construct.b.page13.stio006" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stio006
            
            #add-point:AFTER FIELD stio006 name="construct.a.page13.stio006"
            {<point name="construct.a.page13.stio006" />}
            #END add-point
            


         #Ctrlp:construct.c.page13.stio007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stio007
            #add-point:ON ACTION controlp INFIELD stio007 name="construct.c.page13.stio007"
            {<point name="construct.c.page13.stio007" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stio007
            #add-point:BEFORE FIELD stio007 name="construct.b.page13.stio007"
            {<point name="construct.b.page13.stio007" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stio007
            
            #add-point:AFTER FIELD stio007 name="construct.a.page13.stio007"
            {<point name="construct.a.page13.stio007" />}
            #END add-point
            


   
       
      END CONSTRUCT

      CONSTRUCT g_wc2_table4 ON stihseq,stih001,stih002,stih003,stih008,stih004,stih005,stih006,stih007,stihsite,stihunit
           FROM s_detail2[1].stihseq,s_detail2[1].stih001,s_detail2[1].stih002,s_detail2[1].stih003,s_detail2[1].stih008,s_detail2[1].stih004,s_detail2[1].stih005,s_detail2[1].stih006,s_detail2[1].stih007,s_detail2[1].stihsite,s_detail2[1].stihunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body4.before_construct"
            {<point name="cs.body4.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 4)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stihseq
            #add-point:BEFORE FIELD stihseq name="construct.b.page2.stihseq"
            {<point name="construct.b.page2.stihseq" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stihseq
            
            #add-point:AFTER FIELD stihseq name="construct.a.page2.stihseq"
            {<point name="construct.a.page2.stihseq" />}
            #END add-point
            


         #Ctrlp:construct.c.page2.stihseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stihseq
            #add-point:ON ACTION controlp INFIELD stihseq name="construct.c.page2.stihseq"
            {<point name="construct.c.page2.stihseq" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stih001
            #add-point:BEFORE FIELD stih001 name="construct.b.page2.stih001"
            {<point name="construct.b.page2.stih001" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stih001
            
            #add-point:AFTER FIELD stih001 name="construct.a.page2.stih001"
            {<point name="construct.a.page2.stih001" />}
            #END add-point
            


         #Ctrlp:construct.c.page2.stih001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stih001
            #add-point:ON ACTION controlp INFIELD stih001 name="construct.c.page2.stih001"
            {<point name="construct.c.page2.stih001" />}
            #END add-point


         #Ctrlp:construct.c.page2.stih002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stih002
            #add-point:ON ACTION controlp INFIELD stih002 name="construct.c.page2.stih002"
            {<point name="construct.c.page2.stih002" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stih002
            #add-point:BEFORE FIELD stih002 name="construct.b.page2.stih002"
            {<point name="construct.b.page2.stih002" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stih002
            
            #add-point:AFTER FIELD stih002 name="construct.a.page2.stih002"
            {<point name="construct.a.page2.stih002" />}
            #END add-point
            


         #Ctrlp:construct.c.page2.stih003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stih003
            #add-point:ON ACTION controlp INFIELD stih003 name="construct.c.page2.stih003"
            {<point name="construct.c.page2.stih003" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stih003
            #add-point:BEFORE FIELD stih003 name="construct.b.page2.stih003"
            {<point name="construct.b.page2.stih003" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stih003
            
            #add-point:AFTER FIELD stih003 name="construct.a.page2.stih003"
            {<point name="construct.a.page2.stih003" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stih008
            #add-point:BEFORE FIELD stih008 name="construct.b.page2.stih008"
            {<point name="construct.b.page2.stih008" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stih008
            
            #add-point:AFTER FIELD stih008 name="construct.a.page2.stih008"
            {<point name="construct.a.page2.stih008" />}
            #END add-point
            


         #Ctrlp:construct.c.page2.stih008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stih008
            #add-point:ON ACTION controlp INFIELD stih008 name="construct.c.page2.stih008"
            {<point name="construct.c.page2.stih008" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stih004
            #add-point:BEFORE FIELD stih004 name="construct.b.page2.stih004"
            {<point name="construct.b.page2.stih004" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stih004
            
            #add-point:AFTER FIELD stih004 name="construct.a.page2.stih004"
            {<point name="construct.a.page2.stih004" />}
            #END add-point
            


         #Ctrlp:construct.c.page2.stih004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stih004
            #add-point:ON ACTION controlp INFIELD stih004 name="construct.c.page2.stih004"
            {<point name="construct.c.page2.stih004" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stih005
            #add-point:BEFORE FIELD stih005 name="construct.b.page2.stih005"
            {<point name="construct.b.page2.stih005" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stih005
            
            #add-point:AFTER FIELD stih005 name="construct.a.page2.stih005"
            {<point name="construct.a.page2.stih005" />}
            #END add-point
            


         #Ctrlp:construct.c.page2.stih005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stih005
            #add-point:ON ACTION controlp INFIELD stih005 name="construct.c.page2.stih005"
            {<point name="construct.c.page2.stih005" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stih006
            #add-point:BEFORE FIELD stih006 name="construct.b.page2.stih006"
            {<point name="construct.b.page2.stih006" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stih006
            
            #add-point:AFTER FIELD stih006 name="construct.a.page2.stih006"
            {<point name="construct.a.page2.stih006" />}
            #END add-point
            


         #Ctrlp:construct.c.page2.stih006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stih006
            #add-point:ON ACTION controlp INFIELD stih006 name="construct.c.page2.stih006"
            {<point name="construct.c.page2.stih006" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stih007
            #add-point:BEFORE FIELD stih007 name="construct.b.page2.stih007"
            {<point name="construct.b.page2.stih007" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stih007
            
            #add-point:AFTER FIELD stih007 name="construct.a.page2.stih007"
            {<point name="construct.a.page2.stih007" />}
            #END add-point
            


         #Ctrlp:construct.c.page2.stih007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stih007
            #add-point:ON ACTION controlp INFIELD stih007 name="construct.c.page2.stih007"
            {<point name="construct.c.page2.stih007" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stihsite
            #add-point:BEFORE FIELD stihsite name="construct.b.page2.stihsite"
            {<point name="construct.b.page2.stihsite" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stihsite
            
            #add-point:AFTER FIELD stihsite name="construct.a.page2.stihsite"
            {<point name="construct.a.page2.stihsite" />}
            #END add-point
            


         #Ctrlp:construct.c.page2.stihsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stihsite
            #add-point:ON ACTION controlp INFIELD stihsite name="construct.c.page2.stihsite"
            {<point name="construct.c.page2.stihsite" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stihunit
            #add-point:BEFORE FIELD stihunit name="construct.b.page2.stihunit"
            {<point name="construct.b.page2.stihunit" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stihunit
            
            #add-point:AFTER FIELD stihunit name="construct.a.page2.stihunit"
            {<point name="construct.a.page2.stihunit" />}
            #END add-point
            


         #Ctrlp:construct.c.page2.stihunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stihunit
            #add-point:ON ACTION controlp INFIELD stihunit name="construct.c.page2.stihunit"
            {<point name="construct.c.page2.stihunit" />}
            #END add-point


   
       
      END CONSTRUCT

      CONSTRUCT g_wc2_table5 ON stiiseq,stii001,stii002,stii003,stii010,stii004,stii005,stii006,stii007,stii008,stii009,stiisite,stiiunit
           FROM s_detail3[1].stiiseq,s_detail3[1].stii001,s_detail3[1].stii002,s_detail3[1].stii003,s_detail3[1].stii010,s_detail3[1].stii004,s_detail3[1].stii005,s_detail3[1].stii006,s_detail3[1].stii007,s_detail3[1].stii008,s_detail3[1].stii009,s_detail3[1].stiisite,s_detail3[1].stiiunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body5.before_construct"
            {<point name="cs.body5.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 5)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stiiseq
            #add-point:BEFORE FIELD stiiseq name="construct.b.page3.stiiseq"
            {<point name="construct.b.page3.stiiseq" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stiiseq
            
            #add-point:AFTER FIELD stiiseq name="construct.a.page3.stiiseq"
            {<point name="construct.a.page3.stiiseq" />}
            #END add-point
            


         #Ctrlp:construct.c.page3.stiiseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stiiseq
            #add-point:ON ACTION controlp INFIELD stiiseq name="construct.c.page3.stiiseq"
            {<point name="construct.c.page3.stiiseq" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stii001
            #add-point:BEFORE FIELD stii001 name="construct.b.page3.stii001"
            {<point name="construct.b.page3.stii001" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stii001
            
            #add-point:AFTER FIELD stii001 name="construct.a.page3.stii001"
            {<point name="construct.a.page3.stii001" />}
            #END add-point
            


         #Ctrlp:construct.c.page3.stii001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stii001
            #add-point:ON ACTION controlp INFIELD stii001 name="construct.c.page3.stii001"
            {<point name="construct.c.page3.stii001" />}
            #END add-point


         #Ctrlp:construct.c.page3.stii002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stii002
            #add-point:ON ACTION controlp INFIELD stii002 name="construct.c.page3.stii002"
            {<point name="construct.c.page3.stii002" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stii002
            #add-point:BEFORE FIELD stii002 name="construct.b.page3.stii002"
            {<point name="construct.b.page3.stii002" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stii002
            
            #add-point:AFTER FIELD stii002 name="construct.a.page3.stii002"
            {<point name="construct.a.page3.stii002" />}
            #END add-point
            


         #Ctrlp:construct.c.page3.stii003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stii003
            #add-point:ON ACTION controlp INFIELD stii003 name="construct.c.page3.stii003"
            {<point name="construct.c.page3.stii003" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stii003
            #add-point:BEFORE FIELD stii003 name="construct.b.page3.stii003"
            {<point name="construct.b.page3.stii003" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stii003
            
            #add-point:AFTER FIELD stii003 name="construct.a.page3.stii003"
            {<point name="construct.a.page3.stii003" />}
            #END add-point
            


         #Ctrlp:construct.c.page3.stii010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stii010
            #add-point:ON ACTION controlp INFIELD stii010 name="construct.c.page3.stii010"
            {<point name="construct.c.page3.stii010" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stii010
            #add-point:BEFORE FIELD stii010 name="construct.b.page3.stii010"
            {<point name="construct.b.page3.stii010" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stii010
            
            #add-point:AFTER FIELD stii010 name="construct.a.page3.stii010"
            {<point name="construct.a.page3.stii010" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stii004
            #add-point:BEFORE FIELD stii004 name="construct.b.page3.stii004"
            {<point name="construct.b.page3.stii004" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stii004
            
            #add-point:AFTER FIELD stii004 name="construct.a.page3.stii004"
            {<point name="construct.a.page3.stii004" />}
            #END add-point
            


         #Ctrlp:construct.c.page3.stii004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stii004
            #add-point:ON ACTION controlp INFIELD stii004 name="construct.c.page3.stii004"
            {<point name="construct.c.page3.stii004" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stii005
            #add-point:BEFORE FIELD stii005 name="construct.b.page3.stii005"
            {<point name="construct.b.page3.stii005" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stii005
            
            #add-point:AFTER FIELD stii005 name="construct.a.page3.stii005"
            {<point name="construct.a.page3.stii005" />}
            #END add-point
            


         #Ctrlp:construct.c.page3.stii005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stii005
            #add-point:ON ACTION controlp INFIELD stii005 name="construct.c.page3.stii005"
            {<point name="construct.c.page3.stii005" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stii006
            #add-point:BEFORE FIELD stii006 name="construct.b.page3.stii006"
            {<point name="construct.b.page3.stii006" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stii006
            
            #add-point:AFTER FIELD stii006 name="construct.a.page3.stii006"
            {<point name="construct.a.page3.stii006" />}
            #END add-point
            


         #Ctrlp:construct.c.page3.stii006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stii006
            #add-point:ON ACTION controlp INFIELD stii006 name="construct.c.page3.stii006"
            {<point name="construct.c.page3.stii006" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stii007
            #add-point:BEFORE FIELD stii007 name="construct.b.page3.stii007"
            {<point name="construct.b.page3.stii007" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stii007
            
            #add-point:AFTER FIELD stii007 name="construct.a.page3.stii007"
            {<point name="construct.a.page3.stii007" />}
            #END add-point
            


         #Ctrlp:construct.c.page3.stii007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stii007
            #add-point:ON ACTION controlp INFIELD stii007 name="construct.c.page3.stii007"
            {<point name="construct.c.page3.stii007" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stii008
            #add-point:BEFORE FIELD stii008 name="construct.b.page3.stii008"
            {<point name="construct.b.page3.stii008" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stii008
            
            #add-point:AFTER FIELD stii008 name="construct.a.page3.stii008"
            {<point name="construct.a.page3.stii008" />}
            #END add-point
            


         #Ctrlp:construct.c.page3.stii008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stii008
            #add-point:ON ACTION controlp INFIELD stii008 name="construct.c.page3.stii008"
            {<point name="construct.c.page3.stii008" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stii009
            #add-point:BEFORE FIELD stii009 name="construct.b.page3.stii009"
            {<point name="construct.b.page3.stii009" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stii009
            
            #add-point:AFTER FIELD stii009 name="construct.a.page3.stii009"
            {<point name="construct.a.page3.stii009" />}
            #END add-point
            


         #Ctrlp:construct.c.page3.stii009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stii009
            #add-point:ON ACTION controlp INFIELD stii009 name="construct.c.page3.stii009"
            {<point name="construct.c.page3.stii009" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stiisite
            #add-point:BEFORE FIELD stiisite name="construct.b.page3.stiisite"
            {<point name="construct.b.page3.stiisite" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stiisite
            
            #add-point:AFTER FIELD stiisite name="construct.a.page3.stiisite"
            {<point name="construct.a.page3.stiisite" />}
            #END add-point
            


         #Ctrlp:construct.c.page3.stiisite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stiisite
            #add-point:ON ACTION controlp INFIELD stiisite name="construct.c.page3.stiisite"
            {<point name="construct.c.page3.stiisite" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stiiunit
            #add-point:BEFORE FIELD stiiunit name="construct.b.page3.stiiunit"
            {<point name="construct.b.page3.stiiunit" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stiiunit
            
            #add-point:AFTER FIELD stiiunit name="construct.a.page3.stiiunit"
            {<point name="construct.a.page3.stiiunit" />}
            #END add-point
            


         #Ctrlp:construct.c.page3.stiiunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stiiunit
            #add-point:ON ACTION controlp INFIELD stiiunit name="construct.c.page3.stiiunit"
            {<point name="construct.c.page3.stiiunit" />}
            #END add-point


   
       
      END CONSTRUCT

      CONSTRUCT g_wc2_table6 ON stilseq,stil001,stil002,stil003,stil004,stil005,stil006,stil007,stil008,stilsite,stilunit
           FROM s_detail4[1].stilseq,s_detail4[1].stil001,s_detail4[1].stil002,s_detail4[1].stil003,s_detail4[1].stil004,s_detail4[1].stil005,s_detail4[1].stil006,s_detail4[1].stil007,s_detail4[1].stil008,s_detail4[1].stilsite,s_detail4[1].stilunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body6.before_construct"
            {<point name="cs.body6.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 6)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stilseq
            #add-point:BEFORE FIELD stilseq name="construct.b.page4.stilseq"
            {<point name="construct.b.page4.stilseq" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stilseq
            
            #add-point:AFTER FIELD stilseq name="construct.a.page4.stilseq"
            {<point name="construct.a.page4.stilseq" />}
            #END add-point
            


         #Ctrlp:construct.c.page4.stilseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stilseq
            #add-point:ON ACTION controlp INFIELD stilseq name="construct.c.page4.stilseq"
            {<point name="construct.c.page4.stilseq" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stil001
            #add-point:BEFORE FIELD stil001 name="construct.b.page4.stil001"
            {<point name="construct.b.page4.stil001" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stil001
            
            #add-point:AFTER FIELD stil001 name="construct.a.page4.stil001"
            {<point name="construct.a.page4.stil001" />}
            #END add-point
            


         #Ctrlp:construct.c.page4.stil001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stil001
            #add-point:ON ACTION controlp INFIELD stil001 name="construct.c.page4.stil001"
            {<point name="construct.c.page4.stil001" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stil002
            #add-point:BEFORE FIELD stil002 name="construct.b.page4.stil002"
            {<point name="construct.b.page4.stil002" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stil002
            
            #add-point:AFTER FIELD stil002 name="construct.a.page4.stil002"
            {<point name="construct.a.page4.stil002" />}
            #END add-point
            


         #Ctrlp:construct.c.page4.stil002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stil002
            #add-point:ON ACTION controlp INFIELD stil002 name="construct.c.page4.stil002"
            {<point name="construct.c.page4.stil002" />}
            #END add-point


         #Ctrlp:construct.c.page4.stil003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stil003
            #add-point:ON ACTION controlp INFIELD stil003 name="construct.c.page4.stil003"
            {<point name="construct.c.page4.stil003" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stil003
            #add-point:BEFORE FIELD stil003 name="construct.b.page4.stil003"
            {<point name="construct.b.page4.stil003" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stil003
            
            #add-point:AFTER FIELD stil003 name="construct.a.page4.stil003"
            {<point name="construct.a.page4.stil003" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stil004
            #add-point:BEFORE FIELD stil004 name="construct.b.page4.stil004"
            {<point name="construct.b.page4.stil004" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stil004
            
            #add-point:AFTER FIELD stil004 name="construct.a.page4.stil004"
            {<point name="construct.a.page4.stil004" />}
            #END add-point
            


         #Ctrlp:construct.c.page4.stil004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stil004
            #add-point:ON ACTION controlp INFIELD stil004 name="construct.c.page4.stil004"
            {<point name="construct.c.page4.stil004" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stil005
            #add-point:BEFORE FIELD stil005 name="construct.b.page4.stil005"
            {<point name="construct.b.page4.stil005" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stil005
            
            #add-point:AFTER FIELD stil005 name="construct.a.page4.stil005"
            {<point name="construct.a.page4.stil005" />}
            #END add-point
            


         #Ctrlp:construct.c.page4.stil005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stil005
            #add-point:ON ACTION controlp INFIELD stil005 name="construct.c.page4.stil005"
            {<point name="construct.c.page4.stil005" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stil006
            #add-point:BEFORE FIELD stil006 name="construct.b.page4.stil006"
            {<point name="construct.b.page4.stil006" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stil006
            
            #add-point:AFTER FIELD stil006 name="construct.a.page4.stil006"
            {<point name="construct.a.page4.stil006" />}
            #END add-point
            


         #Ctrlp:construct.c.page4.stil006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stil006
            #add-point:ON ACTION controlp INFIELD stil006 name="construct.c.page4.stil006"
            {<point name="construct.c.page4.stil006" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stil007
            #add-point:BEFORE FIELD stil007 name="construct.b.page4.stil007"
            {<point name="construct.b.page4.stil007" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stil007
            
            #add-point:AFTER FIELD stil007 name="construct.a.page4.stil007"
            {<point name="construct.a.page4.stil007" />}
            #END add-point
            


         #Ctrlp:construct.c.page4.stil007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stil007
            #add-point:ON ACTION controlp INFIELD stil007 name="construct.c.page4.stil007"
            {<point name="construct.c.page4.stil007" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stil008
            #add-point:BEFORE FIELD stil008 name="construct.b.page4.stil008"
            {<point name="construct.b.page4.stil008" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stil008
            
            #add-point:AFTER FIELD stil008 name="construct.a.page4.stil008"
            {<point name="construct.a.page4.stil008" />}
            #END add-point
            


         #Ctrlp:construct.c.page4.stil008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stil008
            #add-point:ON ACTION controlp INFIELD stil008 name="construct.c.page4.stil008"
            {<point name="construct.c.page4.stil008" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stilsite
            #add-point:BEFORE FIELD stilsite name="construct.b.page4.stilsite"
            {<point name="construct.b.page4.stilsite" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stilsite
            
            #add-point:AFTER FIELD stilsite name="construct.a.page4.stilsite"
            {<point name="construct.a.page4.stilsite" />}
            #END add-point
            


         #Ctrlp:construct.c.page4.stilsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stilsite
            #add-point:ON ACTION controlp INFIELD stilsite name="construct.c.page4.stilsite"
            {<point name="construct.c.page4.stilsite" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stilunit
            #add-point:BEFORE FIELD stilunit name="construct.b.page4.stilunit"
            {<point name="construct.b.page4.stilunit" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stilunit
            
            #add-point:AFTER FIELD stilunit name="construct.a.page4.stilunit"
            {<point name="construct.a.page4.stilunit" />}
            #END add-point
            


         #Ctrlp:construct.c.page4.stilunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stilunit
            #add-point:ON ACTION controlp INFIELD stilunit name="construct.c.page4.stilunit"
            {<point name="construct.c.page4.stilunit" />}
            #END add-point


   
       
      END CONSTRUCT

      CONSTRUCT g_wc2_table7 ON stijacti,stijseq,stij001,stij002,stij003,stij004,stij005,stij006,stij007,stij008,stij009,stijsite,stijunit
           FROM s_detail5[1].stijacti,s_detail5[1].stijseq,s_detail5[1].stij001,s_detail5[1].stij002,s_detail5[1].stij003,s_detail5[1].stij004,s_detail5[1].stij005,s_detail5[1].stij006,s_detail5[1].stij007,s_detail5[1].stij008,s_detail5[1].stij009,s_detail5[1].stijsite,s_detail5[1].stijunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body7.before_construct"
            {<point name="cs.body7.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 7)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stijacti
            #add-point:BEFORE FIELD stijacti name="construct.b.page5.stijacti"
            {<point name="construct.b.page5.stijacti" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stijacti
            
            #add-point:AFTER FIELD stijacti name="construct.a.page5.stijacti"
            {<point name="construct.a.page5.stijacti" />}
            #END add-point
            


         #Ctrlp:construct.c.page5.stijacti
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stijacti
            #add-point:ON ACTION controlp INFIELD stijacti name="construct.c.page5.stijacti"
            {<point name="construct.c.page5.stijacti" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stijseq
            #add-point:BEFORE FIELD stijseq name="construct.b.page5.stijseq"
            {<point name="construct.b.page5.stijseq" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stijseq
            
            #add-point:AFTER FIELD stijseq name="construct.a.page5.stijseq"
            {<point name="construct.a.page5.stijseq" />}
            #END add-point
            


         #Ctrlp:construct.c.page5.stijseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stijseq
            #add-point:ON ACTION controlp INFIELD stijseq name="construct.c.page5.stijseq"
            {<point name="construct.c.page5.stijseq" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stij001
            #add-point:BEFORE FIELD stij001 name="construct.b.page5.stij001"
            {<point name="construct.b.page5.stij001" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stij001
            
            #add-point:AFTER FIELD stij001 name="construct.a.page5.stij001"
            {<point name="construct.a.page5.stij001" />}
            #END add-point
            


         #Ctrlp:construct.c.page5.stij001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stij001
            #add-point:ON ACTION controlp INFIELD stij001 name="construct.c.page5.stij001"
            {<point name="construct.c.page5.stij001" />}
            #END add-point


         #Ctrlp:construct.c.page5.stij002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stij002
            #add-point:ON ACTION controlp INFIELD stij002 name="construct.c.page5.stij002"
            {<point name="construct.c.page5.stij002" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stij002
            #add-point:BEFORE FIELD stij002 name="construct.b.page5.stij002"
            {<point name="construct.b.page5.stij002" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stij002
            
            #add-point:AFTER FIELD stij002 name="construct.a.page5.stij002"
            {<point name="construct.a.page5.stij002" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stij003
            #add-point:BEFORE FIELD stij003 name="construct.b.page5.stij003"
            {<point name="construct.b.page5.stij003" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stij003
            
            #add-point:AFTER FIELD stij003 name="construct.a.page5.stij003"
            {<point name="construct.a.page5.stij003" />}
            #END add-point
            


         #Ctrlp:construct.c.page5.stij003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stij003
            #add-point:ON ACTION controlp INFIELD stij003 name="construct.c.page5.stij003"
            {<point name="construct.c.page5.stij003" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stij004
            #add-point:BEFORE FIELD stij004 name="construct.b.page5.stij004"
            {<point name="construct.b.page5.stij004" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stij004
            
            #add-point:AFTER FIELD stij004 name="construct.a.page5.stij004"
            {<point name="construct.a.page5.stij004" />}
            #END add-point
            


         #Ctrlp:construct.c.page5.stij004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stij004
            #add-point:ON ACTION controlp INFIELD stij004 name="construct.c.page5.stij004"
            {<point name="construct.c.page5.stij004" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stij005
            #add-point:BEFORE FIELD stij005 name="construct.b.page5.stij005"
            {<point name="construct.b.page5.stij005" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stij005
            
            #add-point:AFTER FIELD stij005 name="construct.a.page5.stij005"
            {<point name="construct.a.page5.stij005" />}
            #END add-point
            


         #Ctrlp:construct.c.page5.stij005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stij005
            #add-point:ON ACTION controlp INFIELD stij005 name="construct.c.page5.stij005"
            {<point name="construct.c.page5.stij005" />}
            #END add-point


         #Ctrlp:construct.c.page5.stij006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stij006
            #add-point:ON ACTION controlp INFIELD stij006 name="construct.c.page5.stij006"
            {<point name="construct.c.page5.stij006" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stij006
            #add-point:BEFORE FIELD stij006 name="construct.b.page5.stij006"
            {<point name="construct.b.page5.stij006" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stij006
            
            #add-point:AFTER FIELD stij006 name="construct.a.page5.stij006"
            {<point name="construct.a.page5.stij006" />}
            #END add-point
            


         #Ctrlp:construct.c.page5.stij007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stij007
            #add-point:ON ACTION controlp INFIELD stij007 name="construct.c.page5.stij007"
            {<point name="construct.c.page5.stij007" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stij007
            #add-point:BEFORE FIELD stij007 name="construct.b.page5.stij007"
            {<point name="construct.b.page5.stij007" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stij007
            
            #add-point:AFTER FIELD stij007 name="construct.a.page5.stij007"
            {<point name="construct.a.page5.stij007" />}
            #END add-point
            


         #Ctrlp:construct.c.page5.stij008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stij008
            #add-point:ON ACTION controlp INFIELD stij008 name="construct.c.page5.stij008"
            {<point name="construct.c.page5.stij008" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stij008
            #add-point:BEFORE FIELD stij008 name="construct.b.page5.stij008"
            {<point name="construct.b.page5.stij008" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stij008
            
            #add-point:AFTER FIELD stij008 name="construct.a.page5.stij008"
            {<point name="construct.a.page5.stij008" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stij009
            #add-point:BEFORE FIELD stij009 name="construct.b.page5.stij009"
            {<point name="construct.b.page5.stij009" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stij009
            
            #add-point:AFTER FIELD stij009 name="construct.a.page5.stij009"
            {<point name="construct.a.page5.stij009" />}
            #END add-point
            


         #Ctrlp:construct.c.page5.stij009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stij009
            #add-point:ON ACTION controlp INFIELD stij009 name="construct.c.page5.stij009"
            {<point name="construct.c.page5.stij009" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stijsite
            #add-point:BEFORE FIELD stijsite name="construct.b.page5.stijsite"
            {<point name="construct.b.page5.stijsite" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stijsite
            
            #add-point:AFTER FIELD stijsite name="construct.a.page5.stijsite"
            {<point name="construct.a.page5.stijsite" />}
            #END add-point
            


         #Ctrlp:construct.c.page5.stijsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stijsite
            #add-point:ON ACTION controlp INFIELD stijsite name="construct.c.page5.stijsite"
            {<point name="construct.c.page5.stijsite" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stijunit
            #add-point:BEFORE FIELD stijunit name="construct.b.page5.stijunit"
            {<point name="construct.b.page5.stijunit" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stijunit
            
            #add-point:AFTER FIELD stijunit name="construct.a.page5.stijunit"
            {<point name="construct.a.page5.stijunit" />}
            #END add-point
            


         #Ctrlp:construct.c.page5.stijunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stijunit
            #add-point:ON ACTION controlp INFIELD stijunit name="construct.c.page5.stijunit"
            {<point name="construct.c.page5.stijunit" />}
            #END add-point


   
       
      END CONSTRUCT

      CONSTRUCT g_wc2_table8 ON stikacti,stikseq,stik001,stik002,stik004,stik003,stik005,stiksite,stikunit
           FROM s_detail6[1].stikacti,s_detail6[1].stikseq,s_detail6[1].stik001,s_detail6[1].stik002,s_detail6[1].stik004,s_detail6[1].stik003,s_detail6[1].stik005,s_detail6[1].stiksite,s_detail6[1].stikunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body8.before_construct"
            {<point name="cs.body8.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 8)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stikacti
            #add-point:BEFORE FIELD stikacti name="construct.b.page6.stikacti"
            {<point name="construct.b.page6.stikacti" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stikacti
            
            #add-point:AFTER FIELD stikacti name="construct.a.page6.stikacti"
            {<point name="construct.a.page6.stikacti" />}
            #END add-point
            


         #Ctrlp:construct.c.page6.stikacti
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stikacti
            #add-point:ON ACTION controlp INFIELD stikacti name="construct.c.page6.stikacti"
            {<point name="construct.c.page6.stikacti" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stikseq
            #add-point:BEFORE FIELD stikseq name="construct.b.page6.stikseq"
            {<point name="construct.b.page6.stikseq" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stikseq
            
            #add-point:AFTER FIELD stikseq name="construct.a.page6.stikseq"
            {<point name="construct.a.page6.stikseq" />}
            #END add-point
            


         #Ctrlp:construct.c.page6.stikseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stikseq
            #add-point:ON ACTION controlp INFIELD stikseq name="construct.c.page6.stikseq"
            {<point name="construct.c.page6.stikseq" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stik001
            #add-point:BEFORE FIELD stik001 name="construct.b.page6.stik001"
            {<point name="construct.b.page6.stik001" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stik001
            
            #add-point:AFTER FIELD stik001 name="construct.a.page6.stik001"
            {<point name="construct.a.page6.stik001" />}
            #END add-point
            


         #Ctrlp:construct.c.page6.stik001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stik001
            #add-point:ON ACTION controlp INFIELD stik001 name="construct.c.page6.stik001"
            {<point name="construct.c.page6.stik001" />}
            #END add-point


         #Ctrlp:construct.c.page6.stik002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stik002
            #add-point:ON ACTION controlp INFIELD stik002 name="construct.c.page6.stik002"
            {<point name="construct.c.page6.stik002" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stik002
            #add-point:BEFORE FIELD stik002 name="construct.b.page6.stik002"
            {<point name="construct.b.page6.stik002" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stik002
            
            #add-point:AFTER FIELD stik002 name="construct.a.page6.stik002"
            {<point name="construct.a.page6.stik002" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stik004
            #add-point:BEFORE FIELD stik004 name="construct.b.page6.stik004"
            {<point name="construct.b.page6.stik004" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stik004
            
            #add-point:AFTER FIELD stik004 name="construct.a.page6.stik004"
            {<point name="construct.a.page6.stik004" />}
            #END add-point
            


         #Ctrlp:construct.c.page6.stik004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stik004
            #add-point:ON ACTION controlp INFIELD stik004 name="construct.c.page6.stik004"
            {<point name="construct.c.page6.stik004" />}
            #END add-point


         #Ctrlp:construct.c.page6.stik003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stik003
            #add-point:ON ACTION controlp INFIELD stik003 name="construct.c.page6.stik003"
            {<point name="construct.c.page6.stik003" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stik003
            #add-point:BEFORE FIELD stik003 name="construct.b.page6.stik003"
            {<point name="construct.b.page6.stik003" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stik003
            
            #add-point:AFTER FIELD stik003 name="construct.a.page6.stik003"
            {<point name="construct.a.page6.stik003" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stik005
            #add-point:BEFORE FIELD stik005 name="construct.b.page6.stik005"
            {<point name="construct.b.page6.stik005" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stik005
            
            #add-point:AFTER FIELD stik005 name="construct.a.page6.stik005"
            {<point name="construct.a.page6.stik005" />}
            #END add-point
            


         #Ctrlp:construct.c.page6.stik005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stik005
            #add-point:ON ACTION controlp INFIELD stik005 name="construct.c.page6.stik005"
            {<point name="construct.c.page6.stik005" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stiksite
            #add-point:BEFORE FIELD stiksite name="construct.b.page6.stiksite"
            {<point name="construct.b.page6.stiksite" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stiksite
            
            #add-point:AFTER FIELD stiksite name="construct.a.page6.stiksite"
            {<point name="construct.a.page6.stiksite" />}
            #END add-point
            


         #Ctrlp:construct.c.page6.stiksite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stiksite
            #add-point:ON ACTION controlp INFIELD stiksite name="construct.c.page6.stiksite"
            {<point name="construct.c.page6.stiksite" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stikunit
            #add-point:BEFORE FIELD stikunit name="construct.b.page6.stikunit"
            {<point name="construct.b.page6.stikunit" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stikunit
            
            #add-point:AFTER FIELD stikunit name="construct.a.page6.stikunit"
            {<point name="construct.a.page6.stikunit" />}
            #END add-point
            


         #Ctrlp:construct.c.page6.stikunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stikunit
            #add-point:ON ACTION controlp INFIELD stikunit name="construct.c.page6.stikunit"
            {<point name="construct.c.page6.stikunit" />}
            #END add-point


   
       
      END CONSTRUCT

      CONSTRUCT g_wc2_table9 ON stimseq,stim001,stim002,stim003,stim004,stim005,stim006,stim007,stim008,stim009,stim010,stim011,stim012,stim013,stim014,stim015,stim016,stim018,stim019,stim017,stimsite,stimunit
           FROM s_detail7[1].stimseq,s_detail7[1].stim001,s_detail7[1].stim002,s_detail7[1].stim003,s_detail7[1].stim004,s_detail7[1].stim005,s_detail7[1].stim006,s_detail7[1].stim007,s_detail7[1].stim008,s_detail7[1].stim009,s_detail7[1].stim010,s_detail7[1].stim011,s_detail7[1].stim012,s_detail7[1].stim013,s_detail7[1].stim014,s_detail7[1].stim015,s_detail7[1].stim016,s_detail7[1].stim018,s_detail7[1].stim019,s_detail7[1].stim017,s_detail7[1].stimsite,s_detail7[1].stimunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body9.before_construct"
            {<point name="cs.body9.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 9)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stimseq
            #add-point:BEFORE FIELD stimseq name="construct.b.page7.stimseq"
            {<point name="construct.b.page7.stimseq" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stimseq
            
            #add-point:AFTER FIELD stimseq name="construct.a.page7.stimseq"
            {<point name="construct.a.page7.stimseq" />}
            #END add-point
            


         #Ctrlp:construct.c.page7.stimseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stimseq
            #add-point:ON ACTION controlp INFIELD stimseq name="construct.c.page7.stimseq"
            {<point name="construct.c.page7.stimseq" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stim001
            #add-point:BEFORE FIELD stim001 name="construct.b.page7.stim001"
            {<point name="construct.b.page7.stim001" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stim001
            
            #add-point:AFTER FIELD stim001 name="construct.a.page7.stim001"
            {<point name="construct.a.page7.stim001" />}
            #END add-point
            


         #Ctrlp:construct.c.page7.stim001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stim001
            #add-point:ON ACTION controlp INFIELD stim001 name="construct.c.page7.stim001"
            {<point name="construct.c.page7.stim001" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stim002
            #add-point:BEFORE FIELD stim002 name="construct.b.page7.stim002"
            {<point name="construct.b.page7.stim002" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stim002
            
            #add-point:AFTER FIELD stim002 name="construct.a.page7.stim002"
            {<point name="construct.a.page7.stim002" />}
            #END add-point
            


         #Ctrlp:construct.c.page7.stim002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stim002
            #add-point:ON ACTION controlp INFIELD stim002 name="construct.c.page7.stim002"
            {<point name="construct.c.page7.stim002" />}
            #END add-point


         #Ctrlp:construct.c.page7.stim003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stim003
            #add-point:ON ACTION controlp INFIELD stim003 name="construct.c.page7.stim003"
            {<point name="construct.c.page7.stim003" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stim003
            #add-point:BEFORE FIELD stim003 name="construct.b.page7.stim003"
            {<point name="construct.b.page7.stim003" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stim003
            
            #add-point:AFTER FIELD stim003 name="construct.a.page7.stim003"
            {<point name="construct.a.page7.stim003" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stim004
            #add-point:BEFORE FIELD stim004 name="construct.b.page7.stim004"
            {<point name="construct.b.page7.stim004" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stim004
            
            #add-point:AFTER FIELD stim004 name="construct.a.page7.stim004"
            {<point name="construct.a.page7.stim004" />}
            #END add-point
            


         #Ctrlp:construct.c.page7.stim004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stim004
            #add-point:ON ACTION controlp INFIELD stim004 name="construct.c.page7.stim004"
            {<point name="construct.c.page7.stim004" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stim005
            #add-point:BEFORE FIELD stim005 name="construct.b.page7.stim005"
            {<point name="construct.b.page7.stim005" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stim005
            
            #add-point:AFTER FIELD stim005 name="construct.a.page7.stim005"
            {<point name="construct.a.page7.stim005" />}
            #END add-point
            


         #Ctrlp:construct.c.page7.stim005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stim005
            #add-point:ON ACTION controlp INFIELD stim005 name="construct.c.page7.stim005"
            {<point name="construct.c.page7.stim005" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stim006
            #add-point:BEFORE FIELD stim006 name="construct.b.page7.stim006"
            {<point name="construct.b.page7.stim006" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stim006
            
            #add-point:AFTER FIELD stim006 name="construct.a.page7.stim006"
            {<point name="construct.a.page7.stim006" />}
            #END add-point
            


         #Ctrlp:construct.c.page7.stim006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stim006
            #add-point:ON ACTION controlp INFIELD stim006 name="construct.c.page7.stim006"
            {<point name="construct.c.page7.stim006" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stim007
            #add-point:BEFORE FIELD stim007 name="construct.b.page7.stim007"
            {<point name="construct.b.page7.stim007" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stim007
            
            #add-point:AFTER FIELD stim007 name="construct.a.page7.stim007"
            {<point name="construct.a.page7.stim007" />}
            #END add-point
            


         #Ctrlp:construct.c.page7.stim007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stim007
            #add-point:ON ACTION controlp INFIELD stim007 name="construct.c.page7.stim007"
            {<point name="construct.c.page7.stim007" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stim008
            #add-point:BEFORE FIELD stim008 name="construct.b.page7.stim008"
            {<point name="construct.b.page7.stim008" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stim008
            
            #add-point:AFTER FIELD stim008 name="construct.a.page7.stim008"
            {<point name="construct.a.page7.stim008" />}
            #END add-point
            


         #Ctrlp:construct.c.page7.stim008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stim008
            #add-point:ON ACTION controlp INFIELD stim008 name="construct.c.page7.stim008"
            {<point name="construct.c.page7.stim008" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stim009
            #add-point:BEFORE FIELD stim009 name="construct.b.page7.stim009"
            {<point name="construct.b.page7.stim009" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stim009
            
            #add-point:AFTER FIELD stim009 name="construct.a.page7.stim009"
            {<point name="construct.a.page7.stim009" />}
            #END add-point
            


         #Ctrlp:construct.c.page7.stim009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stim009
            #add-point:ON ACTION controlp INFIELD stim009 name="construct.c.page7.stim009"
            {<point name="construct.c.page7.stim009" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stim010
            #add-point:BEFORE FIELD stim010 name="construct.b.page7.stim010"
            {<point name="construct.b.page7.stim010" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stim010
            
            #add-point:AFTER FIELD stim010 name="construct.a.page7.stim010"
            {<point name="construct.a.page7.stim010" />}
            #END add-point
            


         #Ctrlp:construct.c.page7.stim010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stim010
            #add-point:ON ACTION controlp INFIELD stim010 name="construct.c.page7.stim010"
            {<point name="construct.c.page7.stim010" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stim011
            #add-point:BEFORE FIELD stim011 name="construct.b.page7.stim011"
            {<point name="construct.b.page7.stim011" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stim011
            
            #add-point:AFTER FIELD stim011 name="construct.a.page7.stim011"
            {<point name="construct.a.page7.stim011" />}
            #END add-point
            


         #Ctrlp:construct.c.page7.stim011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stim011
            #add-point:ON ACTION controlp INFIELD stim011 name="construct.c.page7.stim011"
            {<point name="construct.c.page7.stim011" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stim012
            #add-point:BEFORE FIELD stim012 name="construct.b.page7.stim012"
            {<point name="construct.b.page7.stim012" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stim012
            
            #add-point:AFTER FIELD stim012 name="construct.a.page7.stim012"
            {<point name="construct.a.page7.stim012" />}
            #END add-point
            


         #Ctrlp:construct.c.page7.stim012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stim012
            #add-point:ON ACTION controlp INFIELD stim012 name="construct.c.page7.stim012"
            {<point name="construct.c.page7.stim012" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stim013
            #add-point:BEFORE FIELD stim013 name="construct.b.page7.stim013"
            {<point name="construct.b.page7.stim013" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stim013
            
            #add-point:AFTER FIELD stim013 name="construct.a.page7.stim013"
            {<point name="construct.a.page7.stim013" />}
            #END add-point
            


         #Ctrlp:construct.c.page7.stim013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stim013
            #add-point:ON ACTION controlp INFIELD stim013 name="construct.c.page7.stim013"
            {<point name="construct.c.page7.stim013" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stim014
            #add-point:BEFORE FIELD stim014 name="construct.b.page7.stim014"
            {<point name="construct.b.page7.stim014" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stim014
            
            #add-point:AFTER FIELD stim014 name="construct.a.page7.stim014"
            {<point name="construct.a.page7.stim014" />}
            #END add-point
            


         #Ctrlp:construct.c.page7.stim014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stim014
            #add-point:ON ACTION controlp INFIELD stim014 name="construct.c.page7.stim014"
            {<point name="construct.c.page7.stim014" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stim015
            #add-point:BEFORE FIELD stim015 name="construct.b.page7.stim015"
            {<point name="construct.b.page7.stim015" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stim015
            
            #add-point:AFTER FIELD stim015 name="construct.a.page7.stim015"
            {<point name="construct.a.page7.stim015" />}
            #END add-point
            


         #Ctrlp:construct.c.page7.stim015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stim015
            #add-point:ON ACTION controlp INFIELD stim015 name="construct.c.page7.stim015"
            {<point name="construct.c.page7.stim015" />}
            #END add-point


         #Ctrlp:construct.c.page7.stim016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stim016
            #add-point:ON ACTION controlp INFIELD stim016 name="construct.c.page7.stim016"
            {<point name="construct.c.page7.stim016" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stim016
            #add-point:BEFORE FIELD stim016 name="construct.b.page7.stim016"
            {<point name="construct.b.page7.stim016" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stim016
            
            #add-point:AFTER FIELD stim016 name="construct.a.page7.stim016"
            {<point name="construct.a.page7.stim016" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stim018
            #add-point:BEFORE FIELD stim018 name="construct.b.page7.stim018"
            {<point name="construct.b.page7.stim018" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stim018
            
            #add-point:AFTER FIELD stim018 name="construct.a.page7.stim018"
            {<point name="construct.a.page7.stim018" />}
            #END add-point
            


         #Ctrlp:construct.c.page7.stim018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stim018
            #add-point:ON ACTION controlp INFIELD stim018 name="construct.c.page7.stim018"
            {<point name="construct.c.page7.stim018" />}
            #END add-point


         #Ctrlp:construct.c.page7.stim019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stim019
            #add-point:ON ACTION controlp INFIELD stim019 name="construct.c.page7.stim019"
            {<point name="construct.c.page7.stim019" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stim019
            #add-point:BEFORE FIELD stim019 name="construct.b.page7.stim019"
            {<point name="construct.b.page7.stim019" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stim019
            
            #add-point:AFTER FIELD stim019 name="construct.a.page7.stim019"
            {<point name="construct.a.page7.stim019" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stim017
            #add-point:BEFORE FIELD stim017 name="construct.b.page7.stim017"
            {<point name="construct.b.page7.stim017" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stim017
            
            #add-point:AFTER FIELD stim017 name="construct.a.page7.stim017"
            {<point name="construct.a.page7.stim017" />}
            #END add-point
            


         #Ctrlp:construct.c.page7.stim017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stim017
            #add-point:ON ACTION controlp INFIELD stim017 name="construct.c.page7.stim017"
            {<point name="construct.c.page7.stim017" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stimsite
            #add-point:BEFORE FIELD stimsite name="construct.b.page7.stimsite"
            {<point name="construct.b.page7.stimsite" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stimsite
            
            #add-point:AFTER FIELD stimsite name="construct.a.page7.stimsite"
            {<point name="construct.a.page7.stimsite" />}
            #END add-point
            


         #Ctrlp:construct.c.page7.stimsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stimsite
            #add-point:ON ACTION controlp INFIELD stimsite name="construct.c.page7.stimsite"
            {<point name="construct.c.page7.stimsite" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stimunit
            #add-point:BEFORE FIELD stimunit name="construct.b.page7.stimunit"
            {<point name="construct.b.page7.stimunit" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stimunit
            
            #add-point:AFTER FIELD stimunit name="construct.a.page7.stimunit"
            {<point name="construct.a.page7.stimunit" />}
            #END add-point
            


         #Ctrlp:construct.c.page7.stimunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stimunit
            #add-point:ON ACTION controlp INFIELD stimunit name="construct.c.page7.stimunit"
            {<point name="construct.c.page7.stimunit" />}
            #END add-point


   
       
      END CONSTRUCT


      
      CONSTRUCT g_wc2_table10 ON stigsite,stigunit,stigseq1,stig001,stig002,stig003,stig004,stig006
           FROM s_detail9[1].stigsite,s_detail9[1].stigunit,s_detail9[1].stigseq1,s_detail9[1].stig001,s_detail9[1].stig002,s_detail9[1].stig003,s_detail9[1].stig004,s_detail9[1].stig006
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body10.before_construct"
            {<point name="cs.body10.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 10)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stigsite
            #add-point:BEFORE FIELD stigsite name="construct.b.page9.stigsite"
            {<point name="construct.b.page9.stigsite" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stigsite
            
            #add-point:AFTER FIELD stigsite name="construct.a.page9.stigsite"
            {<point name="construct.a.page9.stigsite" />}
            #END add-point
            


         #Ctrlp:construct.c.page9.stigsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stigsite
            #add-point:ON ACTION controlp INFIELD stigsite name="construct.c.page9.stigsite"
            {<point name="construct.c.page9.stigsite" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stigunit
            #add-point:BEFORE FIELD stigunit name="construct.b.page9.stigunit"
            {<point name="construct.b.page9.stigunit" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stigunit
            
            #add-point:AFTER FIELD stigunit name="construct.a.page9.stigunit"
            {<point name="construct.a.page9.stigunit" />}
            #END add-point
            


         #Ctrlp:construct.c.page9.stigunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stigunit
            #add-point:ON ACTION controlp INFIELD stigunit name="construct.c.page9.stigunit"
            {<point name="construct.c.page9.stigunit" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stigseq1
            #add-point:BEFORE FIELD stigseq1 name="construct.b.page9.stigseq1"
            {<point name="construct.b.page9.stigseq1" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stigseq1
            
            #add-point:AFTER FIELD stigseq1 name="construct.a.page9.stigseq1"
            {<point name="construct.a.page9.stigseq1" />}
            #END add-point
            


         #Ctrlp:construct.c.page9.stigseq1
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stigseq1
            #add-point:ON ACTION controlp INFIELD stigseq1 name="construct.c.page9.stigseq1"
            {<point name="construct.c.page9.stigseq1" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stig001
            #add-point:BEFORE FIELD stig001 name="construct.b.page9.stig001"
            {<point name="construct.b.page9.stig001" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stig001
            
            #add-point:AFTER FIELD stig001 name="construct.a.page9.stig001"
            {<point name="construct.a.page9.stig001" />}
            #END add-point
            


         #Ctrlp:construct.c.page9.stig001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stig001
            #add-point:ON ACTION controlp INFIELD stig001 name="construct.c.page9.stig001"
            {<point name="construct.c.page9.stig001" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stig002
            #add-point:BEFORE FIELD stig002 name="construct.b.page9.stig002"
            {<point name="construct.b.page9.stig002" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stig002
            
            #add-point:AFTER FIELD stig002 name="construct.a.page9.stig002"
            {<point name="construct.a.page9.stig002" />}
            #END add-point
            


         #Ctrlp:construct.c.page9.stig002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stig002
            #add-point:ON ACTION controlp INFIELD stig002 name="construct.c.page9.stig002"
            {<point name="construct.c.page9.stig002" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stig003
            #add-point:BEFORE FIELD stig003 name="construct.b.page9.stig003"
            {<point name="construct.b.page9.stig003" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stig003
            
            #add-point:AFTER FIELD stig003 name="construct.a.page9.stig003"
            {<point name="construct.a.page9.stig003" />}
            #END add-point
            


         #Ctrlp:construct.c.page9.stig003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stig003
            #add-point:ON ACTION controlp INFIELD stig003 name="construct.c.page9.stig003"
            {<point name="construct.c.page9.stig003" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stig004
            #add-point:BEFORE FIELD stig004 name="construct.b.page9.stig004"
            {<point name="construct.b.page9.stig004" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stig004
            
            #add-point:AFTER FIELD stig004 name="construct.a.page9.stig004"
            {<point name="construct.a.page9.stig004" />}
            #END add-point
            


         #Ctrlp:construct.c.page9.stig004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stig004
            #add-point:ON ACTION controlp INFIELD stig004 name="construct.c.page9.stig004"
            {<point name="construct.c.page9.stig004" />}
            #END add-point


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stig006
            #add-point:BEFORE FIELD stig006 name="construct.b.page9.stig006"
            {<point name="construct.b.page9.stig006" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stig006
            
            #add-point:AFTER FIELD stig006 name="construct.a.page9.stig006"
            {<point name="construct.a.page9.stig006" />}
            #END add-point
            


         #Ctrlp:construct.c.page9.stig006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stig006
            #add-point:ON ACTION controlp INFIELD stig006 name="construct.c.page9.stig006"
            {<point name="construct.c.page9.stig006" />}
            #END add-point


   
       
      END CONSTRUCT


      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
            INITIALIZE g_wc2_table2 TO NULL

            INITIALIZE g_wc2_table3 TO NULL

            INITIALIZE g_wc2_table4 TO NULL

            INITIALIZE g_wc2_table5 TO NULL

            INITIALIZE g_wc2_table6 TO NULL

            INITIALIZE g_wc2_table7 TO NULL

            INITIALIZE g_wc2_table8 TO NULL

            INITIALIZE g_wc2_table9 TO NULL


            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "stie_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "stif_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "stin_t" 
                     LET g_wc2_table2 = la_wc[li_idx].wc

                  WHEN la_wc[li_idx].tableid = "stio_t" 
                     LET g_wc2_table3 = la_wc[li_idx].wc

                  WHEN la_wc[li_idx].tableid = "stih_t" 
                     LET g_wc2_table4 = la_wc[li_idx].wc

                  WHEN la_wc[li_idx].tableid = "stii_t" 
                     LET g_wc2_table5 = la_wc[li_idx].wc

                  WHEN la_wc[li_idx].tableid = "stil_t" 
                     LET g_wc2_table6 = la_wc[li_idx].wc

                  WHEN la_wc[li_idx].tableid = "stij_t" 
                     LET g_wc2_table7 = la_wc[li_idx].wc

                  WHEN la_wc[li_idx].tableid = "stik_t" 
                     LET g_wc2_table8 = la_wc[li_idx].wc

                  WHEN la_wc[li_idx].tableid = "stim_t" 
                     LET g_wc2_table9 = la_wc[li_idx].wc


               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF

   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF

   IF g_wc2_table4 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
   END IF

   IF g_wc2_table5 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
   END IF

   IF g_wc2_table6 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
   END IF

   IF g_wc2_table7 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
   END IF

   IF g_wc2_table8 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table8
   END IF

   IF g_wc2_table9 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table9
   END IF



   IF g_wc2_table10 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table10
   END IF


   
   #add-point:cs段結束前 name="cs.after_construct"
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
{</section>}
 
{<section id="astt801.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION astt801_filter()
   #add-point:filter段define name="filter.define_customerization"
   {<point name="filter.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   {<point name="filter.define"/>}
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   {<point name="filter.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON stiedocno,stiedocdt,stie000,stie001,stiesite,stie007,stie008,stie011,stie012,stie005,stie002,stie006
                          FROM s_browse[1].b_stiedocno,s_browse[1].b_stiedocdt,s_browse[1].b_stie000,s_browse[1].b_stie001,s_browse[1].b_stiesite,s_browse[1].b_stie007,s_browse[1].b_stie008,s_browse[1].b_stie011,s_browse[1].b_stie012,s_browse[1].b_stie005,s_browse[1].b_stie002,s_browse[1].b_stie006
 
         BEFORE CONSTRUCT
               DISPLAY astt801_filter_parser('stiedocno') TO s_browse[1].b_stiedocno
            DISPLAY astt801_filter_parser('stiedocdt') TO s_browse[1].b_stiedocdt
            DISPLAY astt801_filter_parser('stie000') TO s_browse[1].b_stie000
            DISPLAY astt801_filter_parser('stie001') TO s_browse[1].b_stie001
            DISPLAY astt801_filter_parser('stiesite') TO s_browse[1].b_stiesite
            DISPLAY astt801_filter_parser('stie007') TO s_browse[1].b_stie007
            DISPLAY astt801_filter_parser('stie008') TO s_browse[1].b_stie008
            DISPLAY astt801_filter_parser('stie011') TO s_browse[1].b_stie011
            DISPLAY astt801_filter_parser('stie012') TO s_browse[1].b_stie012
            DISPLAY astt801_filter_parser('stie005') TO s_browse[1].b_stie005
            DISPLAY astt801_filter_parser('stie002') TO s_browse[1].b_stie002
            DISPLAY astt801_filter_parser('stie006') TO s_browse[1].b_stie006
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL astt801_filter_show('stiedocno')
   CALL astt801_filter_show('stiedocdt')
   CALL astt801_filter_show('stie000')
   CALL astt801_filter_show('stie001')
   CALL astt801_filter_show('stiesite')
   CALL astt801_filter_show('stie007')
   CALL astt801_filter_show('stie008')
   CALL astt801_filter_show('stie011')
   CALL astt801_filter_show('stie012')
   CALL astt801_filter_show('stie005')
   CALL astt801_filter_show('stie002')
   CALL astt801_filter_show('stie006')
 
END FUNCTION
{</section>}
 
{<section id="astt801.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION astt801_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   {<point name="filter_parser.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   {<point name="filter_parser.define"/>}
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
{</section>}
 
{<section id="astt801.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION astt801_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = astt801_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
{</section>}
 



 
{<section id="astt801.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION astt801_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   {<point name="query.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   {<point name="query.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   {<point name="query.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_stif_d.clear()
   CALL g_stif11_d.clear()
   CALL g_stif13_d.clear()
   CALL g_stif2_d.clear()
   CALL g_stif3_d.clear()
   CALL g_stif4_d.clear()
   CALL g_stif5_d.clear()
   CALL g_stif6_d.clear()
   CALL g_stif7_d.clear()
   CALL g_stif9_d.clear()

   
   #add-point:query段other name="query.other"
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL astt801_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL astt801_browser_fill("")
      CALL astt801_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
   LET g_detail_idx_list[4] = 1
   LET g_detail_idx_list[5] = 1
   LET g_detail_idx_list[6] = 1
   LET g_detail_idx_list[7] = 1
   LET g_detail_idx_list[8] = 1
   LET g_detail_idx_list[9] = 1
   LET g_detail_idx_list[10] = 1

   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL astt801_filter_show('stiedocno')
   CALL astt801_filter_show('stiedocdt')
   CALL astt801_filter_show('stie000')
   CALL astt801_filter_show('stie001')
   CALL astt801_filter_show('stiesite')
   CALL astt801_filter_show('stie007')
   CALL astt801_filter_show('stie008')
   CALL astt801_filter_show('stie011')
   CALL astt801_filter_show('stie012')
   CALL astt801_filter_show('stie005')
   CALL astt801_filter_show('stie002')
   CALL astt801_filter_show('stie006')
   CALL astt801_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "-100" 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
   ELSE
      CALL astt801_fetch("F") 
      #顯示單身筆數
      CALL astt801_idx_chk()
   END IF
 
END FUNCTION
{</section>}
 
{<section id="astt801.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION astt801_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   {<point name="fetch.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   {<point name="fetch.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   {<point name="fetch.pre_function"/>}
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
   CALL g_stif9_d.clear()

   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   #該樣板不需此段落LET g_pagestart = g_current_idx
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   #該樣板不需此段落DISPLAY g_pagestart TO FORMONLY.b_index   #當下筆數
   #該樣板不需此段落DISPLAY g_pagestart TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   #該樣板不需此段落CALL cl_navigator_setting( g_pagestart, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_stie_m.stiedocno = g_browser[g_current_idx].b_stiedocno

   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE astt801_master_referesh USING g_stie_m.stiedocno INTO g_stie_m.stiesite,g_stie_m.stiedocdt,g_stie_m.stiedocno,g_stie_m.stie000,g_stie_m.stie001,g_stie_m.stie002,g_stie_m.stie200,g_stie_m.stie004,g_stie_m.stie005,g_stie_m.stie006,g_stie_m.stiestus,g_stie_m.stie007,g_stie_m.stie008,g_stie_m.stie010,g_stie_m.stie009,g_stie_m.stie011,g_stie_m.stie012,g_stie_m.stie013,g_stie_m.stie014,g_stie_m.stie015,g_stie_m.stie016,g_stie_m.stie017,g_stie_m.stie018,g_stie_m.stie003,g_stie_m.stie049,g_stie_m.stie019,g_stie_m.stie020,g_stie_m.stie021,g_stie_m.stie022,g_stie_m.stie027,g_stie_m.stie028,g_stie_m.stie029,g_stie_m.stie026,g_stie_m.stie023,g_stie_m.stie024,g_stie_m.stie025,g_stie_m.stie223,g_stie_m.stie224,g_stie_m.stie225,g_stie_m.stie030,g_stie_m.stie031,g_stie_m.stie032,g_stie_m.stie033,g_stie_m.stie034,g_stie_m.stie035,g_stie_m.stie036,g_stie_m.stie037,g_stie_m.stie038,g_stie_m.stie039,g_stie_m.stie040,g_stie_m.stie041,g_stie_m.stie042,g_stie_m.stie043,g_stie_m.stie044,g_stie_m.stie045,g_stie_m.stie046,g_stie_m.stie047,g_stie_m.stie048,g_stie_m.stie050,g_stie_m.stie051,g_stie_m.stie052,g_stie_m.stie053,g_stie_m.stieownid,g_stie_m.stieowndp,g_stie_m.stiecrtid,g_stie_m.stiecrtdp,g_stie_m.stiecrtdt,g_stie_m.stiemodid,g_stie_m.stiemoddt,g_stie_m.stiecnfid,g_stie_m.stiecnfdt,g_stie_m.stiesite_desc,g_stie_m.stie007_desc,g_stie_m.stie008_desc,g_stie_m.stie017_desc,g_stie_m.stie018_desc,g_stie_m.stie003_desc,g_stie_m.stie019_desc,g_stie_m.stie020_desc,g_stie_m.stie021_desc,g_stie_m.stie022_desc,g_stie_m.stie027_desc,g_stie_m.stie028_desc,g_stie_m.stie029_desc,g_stie_m.stie030_desc,g_stie_m.stie031_desc,g_stie_m.stie032_desc,g_stie_m.stie034_desc,g_stie_m.stie035_desc,g_stie_m.stie036_desc,g_stie_m.stie038_desc,g_stie_m.stie039_desc,g_stie_m.stie051_desc,g_stie_m.stie053_desc,g_stie_m.stieownid_desc,g_stie_m.stieowndp_desc,g_stie_m.stiemodid_desc
   
   #遮罩相關處理
   LET g_stie_m_mask_o.* =  g_stie_m.*
   CALL astt801_stie_t_mask()
   LET g_stie_m_mask_n.* =  g_stie_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL astt801_set_act_visible()   
   CALL astt801_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_stie_m_t.* = g_stie_m.*
   LET g_stie_m_o.* = g_stie_m.*
   
   LET g_data_owner = g_stie_m.stieownid      
   LET g_data_dept  = g_stie_m.stieowndp
   
   #重新顯示   
   CALL astt801_show()
 
   #應用 a56 樣板自動產生(Version:3)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 



 
END FUNCTION
{</section>}
 
{<section id="astt801.insert" >}
#+ 資料新增
PRIVATE FUNCTION astt801_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   {<point name="insert.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   {<point name="insert.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   {<point name="insert.pre_function"/>}
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_stif_d.clear()   
   CALL g_stif11_d.clear()  
   CALL g_stif13_d.clear()  
   CALL g_stif2_d.clear()  
   CALL g_stif3_d.clear()  
   CALL g_stif4_d.clear()  
   CALL g_stif5_d.clear()  
   CALL g_stif6_d.clear()  
   CALL g_stif7_d.clear()  
   CALL g_stif9_d.clear()  

 
   INITIALIZE g_stie_m.* TO NULL             #DEFAULT 設定
   
   LET g_stiedocno_t = NULL

   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_stie_m.stieownid = g_user
      LET g_stie_m.stieowndp = g_dept
      LET g_stie_m.stiecrtid = g_user
      LET g_stie_m.stiecrtdp = g_dept 
      LET g_stie_m.stiecrtdt = cl_get_current()
      LET g_stie_m.stiemodid = g_user
      LET g_stie_m.stiemoddt = cl_get_current()
      LET g_stie_m.stiestus = 'N'



 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_stie_m.stie000 = "I"
      LET g_stie_m.stie004 = "5"
      LET g_stie_m.stie005 = "1"
      LET g_stie_m.stie009 = "1"
      LET g_stie_m.stie013 = "0"
      LET g_stie_m.stie014 = "N"
      LET g_stie_m.stie015 = "N"
      LET g_stie_m.stie026 = "1"
      LET g_stie_m.stie033 = "0"
      LET g_stie_m.stie040 = "N"

  
      #add-point:單頭預設值 name="insert.default"
      {<point name="insert.default"/>}
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_stie_m_t.* = g_stie_m.*
      LET g_stie_m_o.* = g_stie_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_stie_m.stiestus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "FP"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/final_pass.png")
         WHEN "FR"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/final_reject.png")
         WHEN "TP"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/trial_pass.png")
         WHEN "TR"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/trial_reject.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         
      END CASE



    
      CALL astt801_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_stie_m.* TO NULL
         INITIALIZE g_stif_d TO NULL
         INITIALIZE g_stif11_d TO NULL
         INITIALIZE g_stif13_d TO NULL
         INITIALIZE g_stif2_d TO NULL
         INITIALIZE g_stif3_d TO NULL
         INITIALIZE g_stif4_d TO NULL
         INITIALIZE g_stif5_d TO NULL
         INITIALIZE g_stif6_d TO NULL
         INITIALIZE g_stif7_d TO NULL
         INITIALIZE g_stif9_d TO NULL

         #add-point:取消新增後 name="insert.cancel"
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL astt801_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_stif_d.clear()
      #CALL g_stif11_d.clear()
      #CALL g_stif13_d.clear()
      #CALL g_stif2_d.clear()
      #CALL g_stif3_d.clear()
      #CALL g_stif4_d.clear()
      #CALL g_stif5_d.clear()
      #CALL g_stif6_d.clear()
      #CALL g_stif7_d.clear()
      #CALL g_stif9_d.clear()

 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL astt801_set_act_visible()   
   CALL astt801_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_stiedocno_t = g_stie_m.stiedocno

   
   #組合新增資料的條件
   LET g_add_browse = " stieent = " ||g_enterprise|| " AND",
                      " stiedocno = '", g_stie_m.stiedocno, "' "

                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL astt801_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE astt801_cl
   
   CALL astt801_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE astt801_master_referesh USING g_stie_m.stiedocno INTO g_stie_m.stiesite,g_stie_m.stiedocdt,g_stie_m.stiedocno,g_stie_m.stie000,g_stie_m.stie001,g_stie_m.stie002,g_stie_m.stie200,g_stie_m.stie004,g_stie_m.stie005,g_stie_m.stie006,g_stie_m.stiestus,g_stie_m.stie007,g_stie_m.stie008,g_stie_m.stie010,g_stie_m.stie009,g_stie_m.stie011,g_stie_m.stie012,g_stie_m.stie013,g_stie_m.stie014,g_stie_m.stie015,g_stie_m.stie016,g_stie_m.stie017,g_stie_m.stie018,g_stie_m.stie003,g_stie_m.stie049,g_stie_m.stie019,g_stie_m.stie020,g_stie_m.stie021,g_stie_m.stie022,g_stie_m.stie027,g_stie_m.stie028,g_stie_m.stie029,g_stie_m.stie026,g_stie_m.stie023,g_stie_m.stie024,g_stie_m.stie025,g_stie_m.stie223,g_stie_m.stie224,g_stie_m.stie225,g_stie_m.stie030,g_stie_m.stie031,g_stie_m.stie032,g_stie_m.stie033,g_stie_m.stie034,g_stie_m.stie035,g_stie_m.stie036,g_stie_m.stie037,g_stie_m.stie038,g_stie_m.stie039,g_stie_m.stie040,g_stie_m.stie041,g_stie_m.stie042,g_stie_m.stie043,g_stie_m.stie044,g_stie_m.stie045,g_stie_m.stie046,g_stie_m.stie047,g_stie_m.stie048,g_stie_m.stie050,g_stie_m.stie051,g_stie_m.stie052,g_stie_m.stie053,g_stie_m.stieownid,g_stie_m.stieowndp,g_stie_m.stiecrtid,g_stie_m.stiecrtdp,g_stie_m.stiecrtdt,g_stie_m.stiemodid,g_stie_m.stiemoddt,g_stie_m.stiecnfid,g_stie_m.stiecnfdt,g_stie_m.stiesite_desc,g_stie_m.stie007_desc,g_stie_m.stie008_desc,g_stie_m.stie017_desc,g_stie_m.stie018_desc,g_stie_m.stie003_desc,g_stie_m.stie019_desc,g_stie_m.stie020_desc,g_stie_m.stie021_desc,g_stie_m.stie022_desc,g_stie_m.stie027_desc,g_stie_m.stie028_desc,g_stie_m.stie029_desc,g_stie_m.stie030_desc,g_stie_m.stie031_desc,g_stie_m.stie032_desc,g_stie_m.stie034_desc,g_stie_m.stie035_desc,g_stie_m.stie036_desc,g_stie_m.stie038_desc,g_stie_m.stie039_desc,g_stie_m.stie051_desc,g_stie_m.stie053_desc,g_stie_m.stieownid_desc,g_stie_m.stieowndp_desc,g_stie_m.stiemodid_desc
   
   
   #遮罩相關處理
   LET g_stie_m_mask_o.* =  g_stie_m.*
   CALL astt801_stie_t_mask()
   LET g_stie_m_mask_n.* =  g_stie_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_stie_m.stiesite,g_stie_m.stiesite_desc,g_stie_m.stiedocdt,g_stie_m.stiedocno,g_stie_m.stie000,g_stie_m.stie001,g_stie_m.stie002,g_stie_m.stie200,g_stie_m.stie004,g_stie_m.stie005,g_stie_m.stie006,g_stie_m.stiestus,g_stie_m.stie007,g_stie_m.stie007_desc,g_stie_m.stie008,g_stie_m.stie008_desc,g_stie_m.stie010,g_stie_m.stie009,g_stie_m.stie011,g_stie_m.stie012,g_stie_m.stie013,g_stie_m.stie014,g_stie_m.stie015,g_stie_m.stie016,g_stie_m.stie017,g_stie_m.stie017_desc,g_stie_m.stie018,g_stie_m.stie018_desc,g_stie_m.stie003,g_stie_m.stie003_desc,g_stie_m.stie049,g_stie_m.stie019,g_stie_m.stie019_desc,g_stie_m.stie020,g_stie_m.stie020_desc,g_stie_m.stie021,g_stie_m.stie021_desc,g_stie_m.stie022,g_stie_m.stie022_desc,g_stie_m.stie027,g_stie_m.stie027_desc,g_stie_m.stie028,g_stie_m.stie028_desc,g_stie_m.stie029,g_stie_m.stie029_desc,g_stie_m.stie026,g_stie_m.stie023,g_stie_m.stie024,g_stie_m.stie025,g_stie_m.stie223,g_stie_m.stie224,g_stie_m.stie225,g_stie_m.stie030,g_stie_m.stie030_desc,g_stie_m.stie031,g_stie_m.stie031_desc,g_stie_m.stie032,g_stie_m.stie032_desc,g_stie_m.stie033,g_stie_m.stie034,g_stie_m.stie034_desc,g_stie_m.stie035,g_stie_m.stie035_desc,g_stie_m.stie036,g_stie_m.stie036_desc,g_stie_m.stie037,g_stie_m.stie038,g_stie_m.stie038_desc,g_stie_m.stie039,g_stie_m.stie039_desc,g_stie_m.stie040,g_stie_m.stie041,g_stie_m.stie042,g_stie_m.stie043,g_stie_m.stie044,g_stie_m.stie045,g_stie_m.stie046,g_stie_m.stie047,g_stie_m.stie048,g_stie_m.stie050,g_stie_m.stie051,g_stie_m.stie051_desc,g_stie_m.stie052,g_stie_m.stie053,g_stie_m.stie053_desc,g_stie_m.stieownid,g_stie_m.stieownid_desc,g_stie_m.stieowndp,g_stie_m.stieowndp_desc,g_stie_m.stiecrtid,g_stie_m.stiecrtid_desc,g_stie_m.stiecrtdp,g_stie_m.stiecrtdp_desc,g_stie_m.stiecrtdt,g_stie_m.stiemodid,g_stie_m.stiemodid_desc,g_stie_m.stiemoddt,g_stie_m.stiecnfid,g_stie_m.stiecnfid_desc,g_stie_m.stiecnfdt
   
   #add-point:新增結束後 name="insert.after"
   {<point name="insert.after"/>}
   #end add-point 
   
   LET g_data_owner = g_stie_m.stieownid      
   LET g_data_dept  = g_stie_m.stieowndp
   
   #功能已完成,通報訊息中心
   CALL astt801_msgcentre_notify('insert')
   
END FUNCTION
{</section>}
 
{<section id="astt801.modify" >}
#+ 資料修改
PRIVATE FUNCTION astt801_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   {<point name="modify.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING

   DEFINE l_wc2_table3   STRING

   DEFINE l_wc2_table4   STRING

   DEFINE l_wc2_table5   STRING

   DEFINE l_wc2_table6   STRING

   DEFINE l_wc2_table7   STRING

   DEFINE l_wc2_table8   STRING

   DEFINE l_wc2_table9   STRING


   DEFINE l_wc2_table10   STRING


   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   {<point name="modify.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   {<point name="modify.pre_function"/>}
   #end add-point
   
   #保存單頭舊值
   LET g_stie_m_t.* = g_stie_m.*
   LET g_stie_m_o.* = g_stie_m.*
   
   IF g_stie_m.stiedocno IS NULL

   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_stiedocno_t = g_stie_m.stiedocno

   CALL s_transaction_begin()
   
   OPEN astt801_cl USING g_enterprise,g_stie_m.stiedocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN astt801_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE astt801_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE astt801_master_referesh USING g_stie_m.stiedocno INTO g_stie_m.stiesite,g_stie_m.stiedocdt,g_stie_m.stiedocno,g_stie_m.stie000,g_stie_m.stie001,g_stie_m.stie002,g_stie_m.stie200,g_stie_m.stie004,g_stie_m.stie005,g_stie_m.stie006,g_stie_m.stiestus,g_stie_m.stie007,g_stie_m.stie008,g_stie_m.stie010,g_stie_m.stie009,g_stie_m.stie011,g_stie_m.stie012,g_stie_m.stie013,g_stie_m.stie014,g_stie_m.stie015,g_stie_m.stie016,g_stie_m.stie017,g_stie_m.stie018,g_stie_m.stie003,g_stie_m.stie049,g_stie_m.stie019,g_stie_m.stie020,g_stie_m.stie021,g_stie_m.stie022,g_stie_m.stie027,g_stie_m.stie028,g_stie_m.stie029,g_stie_m.stie026,g_stie_m.stie023,g_stie_m.stie024,g_stie_m.stie025,g_stie_m.stie223,g_stie_m.stie224,g_stie_m.stie225,g_stie_m.stie030,g_stie_m.stie031,g_stie_m.stie032,g_stie_m.stie033,g_stie_m.stie034,g_stie_m.stie035,g_stie_m.stie036,g_stie_m.stie037,g_stie_m.stie038,g_stie_m.stie039,g_stie_m.stie040,g_stie_m.stie041,g_stie_m.stie042,g_stie_m.stie043,g_stie_m.stie044,g_stie_m.stie045,g_stie_m.stie046,g_stie_m.stie047,g_stie_m.stie048,g_stie_m.stie050,g_stie_m.stie051,g_stie_m.stie052,g_stie_m.stie053,g_stie_m.stieownid,g_stie_m.stieowndp,g_stie_m.stiecrtid,g_stie_m.stiecrtdp,g_stie_m.stiecrtdt,g_stie_m.stiemodid,g_stie_m.stiemoddt,g_stie_m.stiecnfid,g_stie_m.stiecnfdt,g_stie_m.stiesite_desc,g_stie_m.stie007_desc,g_stie_m.stie008_desc,g_stie_m.stie017_desc,g_stie_m.stie018_desc,g_stie_m.stie003_desc,g_stie_m.stie019_desc,g_stie_m.stie020_desc,g_stie_m.stie021_desc,g_stie_m.stie022_desc,g_stie_m.stie027_desc,g_stie_m.stie028_desc,g_stie_m.stie029_desc,g_stie_m.stie030_desc,g_stie_m.stie031_desc,g_stie_m.stie032_desc,g_stie_m.stie034_desc,g_stie_m.stie035_desc,g_stie_m.stie036_desc,g_stie_m.stie038_desc,g_stie_m.stie039_desc,g_stie_m.stie051_desc,g_stie_m.stie053_desc,g_stie_m.stieownid_desc,g_stie_m.stieowndp_desc,g_stie_m.stiemodid_desc
   
   #檢查是否允許此動作
   IF NOT astt801_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_stie_m_mask_o.* =  g_stie_m.*
   CALL astt801_stie_t_mask()
   LET g_stie_m_mask_n.* =  g_stie_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"

   #LET l_wc2_table3 = g_wc2_table3
   #LET l_wc2_table3 = " 1=1"

   #LET l_wc2_table4 = g_wc2_table4
   #LET l_wc2_table4 = " 1=1"

   #LET l_wc2_table5 = g_wc2_table5
   #LET l_wc2_table5 = " 1=1"

   #LET l_wc2_table6 = g_wc2_table6
   #LET l_wc2_table6 = " 1=1"

   #LET l_wc2_table7 = g_wc2_table7
   #LET l_wc2_table7 = " 1=1"

   #LET l_wc2_table8 = g_wc2_table8
   #LET l_wc2_table8 = " 1=1"

   #LET l_wc2_table9 = g_wc2_table9
   #LET l_wc2_table9 = " 1=1"


   #LET l_wc2_table10 = g_wc2_table10
   #LET l_wc2_table10 = " 1=1"


   
   CALL astt801_show()
   #add-point:modify段show之後 name="modify.after_show"
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 

   #LET  g_wc2_table3 = l_wc2_table3 

   #LET  g_wc2_table4 = l_wc2_table4 

   #LET  g_wc2_table5 = l_wc2_table5 

   #LET  g_wc2_table6 = l_wc2_table6 

   #LET  g_wc2_table7 = l_wc2_table7 

   #LET  g_wc2_table8 = l_wc2_table8 

   #LET  g_wc2_table9 = l_wc2_table9 


   #LET  g_wc2_table10 = l_wc2_table10 


    
   WHILE TRUE
      LET g_stiedocno_t = g_stie_m.stiedocno

      
      #寫入修改者/修改日期資訊(單頭)
      LET g_stie_m.stiemodid = g_user 
LET g_stie_m.stiemoddt = cl_get_current()
LET g_stie_m.stiemodid_desc = cl_get_username(g_stie_m.stiemodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL astt801_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE stie_t SET (stiemodid,stiemoddt) = (g_stie_m.stiemodid,g_stie_m.stiemoddt)
          WHERE stieent = g_enterprise AND stiedocno = g_stiedocno_t

      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_stie_m.* = g_stie_m_t.*
            CALL astt801_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_stie_m.stiedocno != g_stie_m_t.stiedocno

      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE stif_t SET stifdocno = g_stie_m.stiedocno

          WHERE stifent = g_enterprise AND stifdocno = g_stie_m_t.stiedocno

            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stif_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stif_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update2"
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         
         UPDATE stin_t
            SET stindocno = g_stie_m.stiedocno

          WHERE stinent = g_enterprise AND
                stindocno = g_stiedocno_t

         #add-point:單身fk修改中 name="modify.body.m_fk_update2"
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stin_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stin_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update2"
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point

         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update3"
         {<point name="modify.body.b_fk_update3" mark="Y"/>}
         #end add-point
         
         UPDATE stio_t
            SET stiodocno = g_stie_m.stiedocno

          WHERE stioent = g_enterprise AND
                stiodocno = g_stiedocno_t

         #add-point:單身fk修改中 name="modify.body.m_fk_update3"
         {<point name="modify.body.m_fk_update3"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stio_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stio_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update3"
         {<point name="modify.body.a_fk_update3"/>}
         #end add-point

         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update4"
         {<point name="modify.body.b_fk_update4" mark="Y"/>}
         #end add-point
         
         UPDATE stih_t
            SET stihdocno = g_stie_m.stiedocno

          WHERE stihent = g_enterprise AND
                stihdocno = g_stiedocno_t

         #add-point:單身fk修改中 name="modify.body.m_fk_update4"
         {<point name="modify.body.m_fk_update4"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stih_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stih_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update4"
         {<point name="modify.body.a_fk_update4"/>}
         #end add-point

         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update5"
         {<point name="modify.body.b_fk_update5" mark="Y"/>}
         #end add-point
         
         UPDATE stii_t
            SET stiidocno = g_stie_m.stiedocno

          WHERE stiient = g_enterprise AND
                stiidocno = g_stiedocno_t

         #add-point:單身fk修改中 name="modify.body.m_fk_update5"
         {<point name="modify.body.m_fk_update5"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stii_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stii_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update5"
         {<point name="modify.body.a_fk_update5"/>}
         #end add-point

         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update6"
         {<point name="modify.body.b_fk_update6" mark="Y"/>}
         #end add-point
         
         UPDATE stil_t
            SET stildocno = g_stie_m.stiedocno

          WHERE stilent = g_enterprise AND
                stildocno = g_stiedocno_t

         #add-point:單身fk修改中 name="modify.body.m_fk_update6"
         {<point name="modify.body.m_fk_update6"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stil_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stil_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update6"
         {<point name="modify.body.a_fk_update6"/>}
         #end add-point

         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update7"
         {<point name="modify.body.b_fk_update7" mark="Y"/>}
         #end add-point
         
         UPDATE stij_t
            SET stijdocno = g_stie_m.stiedocno

          WHERE stijent = g_enterprise AND
                stijdocno = g_stiedocno_t

         #add-point:單身fk修改中 name="modify.body.m_fk_update7"
         {<point name="modify.body.m_fk_update7"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stij_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stij_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update7"
         {<point name="modify.body.a_fk_update7"/>}
         #end add-point

         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update8"
         {<point name="modify.body.b_fk_update8" mark="Y"/>}
         #end add-point
         
         UPDATE stik_t
            SET stikdocno = g_stie_m.stiedocno

          WHERE stikent = g_enterprise AND
                stikdocno = g_stiedocno_t

         #add-point:單身fk修改中 name="modify.body.m_fk_update8"
         {<point name="modify.body.m_fk_update8"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stik_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stik_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update8"
         {<point name="modify.body.a_fk_update8"/>}
         #end add-point

         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update9"
         {<point name="modify.body.b_fk_update9" mark="Y"/>}
         #end add-point
         
         UPDATE stim_t
            SET stimdocno = g_stie_m.stiedocno

          WHERE stiment = g_enterprise AND
                stimdocno = g_stiedocno_t

         #add-point:單身fk修改中 name="modify.body.m_fk_update9"
         {<point name="modify.body.m_fk_update9"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stim_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stim_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update9"
         {<point name="modify.body.a_fk_update9"/>}
         #end add-point


         
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update10"
         {<point name="modify.body.b_fk_update10" mark="Y"/>}
         #end add-point
         UPDATE stig_t
            SET stigdocno = g_stie_m.stiedocno

          WHERE stigent = g_enterprise AND
                stigdocno = g_stiedocno_t

         #add-point:單身fk修改中 name="modify.body.m_fk_update10"
         {<point name="modify.body.m_fk_update10"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stig_t" 
               LET g_errparam.code = "std-00009" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stig_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update10"
         {<point name="modify.body.a_fk_update10"/>}
         #end add-point


         
         #UPDATE 多語言table key值
         
         
         
         
         
         
         
         
         
         

         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL astt801_set_act_visible()   
   CALL astt801_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " stieent = " ||g_enterprise|| " AND",
                      " stiedocno = '", g_stie_m.stiedocno, "' "

   #填到對應位置
   CALL astt801_browser_fill("")
 
   CLOSE astt801_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL astt801_msgcentre_notify('modify')
 
END FUNCTION 
{</section>}
 
{<section id="astt801.input" >}
#+ 資料輸入
PRIVATE FUNCTION astt801_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   {<point name="input.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   {<point name="input.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   {<point name="input.pre_function"/>}
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_stie_m.stiesite,g_stie_m.stiesite_desc,g_stie_m.stiedocdt,g_stie_m.stiedocno,g_stie_m.stie000,g_stie_m.stie001,g_stie_m.stie002,g_stie_m.stie200,g_stie_m.stie004,g_stie_m.stie005,g_stie_m.stie006,g_stie_m.stiestus,g_stie_m.stie007,g_stie_m.stie007_desc,g_stie_m.stie008,g_stie_m.stie008_desc,g_stie_m.stie010,g_stie_m.stie009,g_stie_m.stie011,g_stie_m.stie012,g_stie_m.stie013,g_stie_m.stie014,g_stie_m.stie015,g_stie_m.stie016,g_stie_m.stie017,g_stie_m.stie017_desc,g_stie_m.stie018,g_stie_m.stie018_desc,g_stie_m.stie003,g_stie_m.stie003_desc,g_stie_m.stie049,g_stie_m.stie019,g_stie_m.stie019_desc,g_stie_m.stie020,g_stie_m.stie020_desc,g_stie_m.stie021,g_stie_m.stie021_desc,g_stie_m.stie022,g_stie_m.stie022_desc,g_stie_m.stie027,g_stie_m.stie027_desc,g_stie_m.stie028,g_stie_m.stie028_desc,g_stie_m.stie029,g_stie_m.stie029_desc,g_stie_m.stie026,g_stie_m.stie023,g_stie_m.stie024,g_stie_m.stie025,g_stie_m.stie223,g_stie_m.stie224,g_stie_m.stie225,g_stie_m.stie030,g_stie_m.stie030_desc,g_stie_m.stie031,g_stie_m.stie031_desc,g_stie_m.stie032,g_stie_m.stie032_desc,g_stie_m.stie033,g_stie_m.stie034,g_stie_m.stie034_desc,g_stie_m.stie035,g_stie_m.stie035_desc,g_stie_m.stie036,g_stie_m.stie036_desc,g_stie_m.stie037,g_stie_m.stie038,g_stie_m.stie038_desc,g_stie_m.stie039,g_stie_m.stie039_desc,g_stie_m.stie040,g_stie_m.stie041,g_stie_m.stie042,g_stie_m.stie043,g_stie_m.stie044,g_stie_m.stie045,g_stie_m.stie046,g_stie_m.stie047,g_stie_m.stie048,g_stie_m.stie050,g_stie_m.stie051,g_stie_m.stie051_desc,g_stie_m.stie052,g_stie_m.stie053,g_stie_m.stie053_desc,g_stie_m.stieownid,g_stie_m.stieownid_desc,g_stie_m.stieowndp,g_stie_m.stieowndp_desc,g_stie_m.stiecrtid,g_stie_m.stiecrtid_desc,g_stie_m.stiecrtdp,g_stie_m.stiecrtdp_desc,g_stie_m.stiecrtdt,g_stie_m.stiemodid,g_stie_m.stiemodid_desc,g_stie_m.stiemoddt,g_stie_m.stiecnfid,g_stie_m.stiecnfid_desc,g_stie_m.stiecnfdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT stifseq,stif001,stif002,stif003,stif021,stif004,stif022,stif005,stif006,stif007,stif008,stif009,stif010,stif011,stif018,stif016,stif017,stif020,stif023,stif024,stif025,stifsite,stifunit FROM stif_t WHERE stifent=? AND stifdocno=? AND stifseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt801_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql name="input.define_sql2"
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT stinsite,stinunit,stinseq,stin001,stin002,stin004,stin003,stin005,stin006,stin007,stin008,stin009,stin010 FROM stin_t WHERE stinent=? AND stindocno=? AND stinseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql2"
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt801_bcl2 CURSOR FROM g_forupd_sql

   #add-point:input段define_sql name="input.define_sql3"
   {<point name="input.define_sql3" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT stiosite,stiounit,stioseq,stio001,stio002,stio003,stio004,stio005,stio006,stio007 FROM stio_t WHERE stioent=? AND stiodocno=? AND stioseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql3"
   {<point name="input.after_define_sql3"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt801_bcl3 CURSOR FROM g_forupd_sql

   #add-point:input段define_sql name="input.define_sql4"
   {<point name="input.define_sql4" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT stihseq,stih001,stih002,stih003,stih008,stih004,stih005,stih006,stih007,stihsite,stihunit FROM stih_t WHERE stihent=? AND stihdocno=? AND stihseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql4"
   {<point name="input.after_define_sql4"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt801_bcl4 CURSOR FROM g_forupd_sql

   #add-point:input段define_sql name="input.define_sql5"
   {<point name="input.define_sql5" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT stiiseq,stii001,stii002,stii003,stii010,stii004,stii005,stii006,stii007,stii008,stii009,stiisite,stiiunit FROM stii_t WHERE stiient=? AND stiidocno=? AND stiiseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql5"
   {<point name="input.after_define_sql5"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt801_bcl5 CURSOR FROM g_forupd_sql

   #add-point:input段define_sql name="input.define_sql6"
   {<point name="input.define_sql6" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT stilseq,stil001,stil002,stil003,stil004,stil005,stil006,stil007,stil008,stilsite,stilunit FROM stil_t WHERE stilent=? AND stildocno=? AND stilseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql6"
   {<point name="input.after_define_sql6"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt801_bcl6 CURSOR FROM g_forupd_sql

   #add-point:input段define_sql name="input.define_sql7"
   {<point name="input.define_sql7" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT stijacti,stijseq,stij001,stij002,stij003,stij004,stij005,stij006,stij007,stij008,stij009,stijsite,stijunit FROM stij_t WHERE stijent=? AND stijdocno=? AND stijseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql7"
   {<point name="input.after_define_sql7"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt801_bcl7 CURSOR FROM g_forupd_sql

   #add-point:input段define_sql name="input.define_sql8"
   {<point name="input.define_sql8" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT stikacti,stikseq,stik001,stik002,stik004,stik003,stik005,stiksite,stikunit FROM stik_t WHERE stikent=? AND stikdocno=? AND stikseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql8"
   {<point name="input.after_define_sql8"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt801_bcl8 CURSOR FROM g_forupd_sql

   #add-point:input段define_sql name="input.define_sql9"
   {<point name="input.define_sql9" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT stimseq,stim001,stim002,stim003,stim004,stim005,stim006,stim007,stim008,stim009,stim010,stim011,stim012,stim013,stim014,stim015,stim016,stim018,stim019,stim017,stimsite,stimunit FROM stim_t WHERE stiment=? AND stimdocno=? AND stimseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql9"
   {<point name="input.after_define_sql9"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt801_bcl9 CURSOR FROM g_forupd_sql


   
   #add-point:input段define_sql name="input.define_sql10"
   {<point name="input.define_sql10" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT stigsite,stigunit,stigseq1,stig001,stig002,stig003,stig004,stig006 FROM stig_t WHERE stigent=? AND stigdocno=? AND stigseq=? AND stigseq1=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql10"
   {<point name="input.after_define_sql10"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt801_bcl10 CURSOR FROM g_forupd_sql


 
   #add-point:input段define_sql name="input.other_sql"
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL astt801_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL astt801_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_stie_m.stiesite,g_stie_m.stiedocdt,g_stie_m.stiedocno,g_stie_m.stie000,g_stie_m.stie001,g_stie_m.stie002,g_stie_m.stie200,g_stie_m.stie004,g_stie_m.stie005,g_stie_m.stie006,g_stie_m.stiestus,g_stie_m.stie007,g_stie_m.stie008,g_stie_m.stie010,g_stie_m.stie009,g_stie_m.stie011,g_stie_m.stie012,g_stie_m.stie013,g_stie_m.stie014,g_stie_m.stie015,g_stie_m.stie016,g_stie_m.stie017,g_stie_m.stie018,g_stie_m.stie003,g_stie_m.stie049,g_stie_m.stie019,g_stie_m.stie020,g_stie_m.stie021,g_stie_m.stie022,g_stie_m.stie027,g_stie_m.stie028,g_stie_m.stie029,g_stie_m.stie026,g_stie_m.stie023,g_stie_m.stie024,g_stie_m.stie025,g_stie_m.stie223,g_stie_m.stie224,g_stie_m.stie225,g_stie_m.stie030,g_stie_m.stie031,g_stie_m.stie032,g_stie_m.stie033,g_stie_m.stie034,g_stie_m.stie035,g_stie_m.stie036,g_stie_m.stie037,g_stie_m.stie038,g_stie_m.stie039,g_stie_m.stie040,g_stie_m.stie041,g_stie_m.stie042,g_stie_m.stie043,g_stie_m.stie044,g_stie_m.stie045,g_stie_m.stie046,g_stie_m.stie047,g_stie_m.stie048,g_stie_m.stie050,g_stie_m.stie051,g_stie_m.stie052,g_stie_m.stie053
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
{</section>}
 
{<section id="astt801.input.head" >}
      #單頭段
      INPUT BY NAME g_stie_m.stiesite,g_stie_m.stiedocdt,g_stie_m.stiedocno,g_stie_m.stie000,g_stie_m.stie001,g_stie_m.stie002,g_stie_m.stie200,g_stie_m.stie004,g_stie_m.stie005,g_stie_m.stie006,g_stie_m.stiestus,g_stie_m.stie007,g_stie_m.stie008,g_stie_m.stie010,g_stie_m.stie009,g_stie_m.stie011,g_stie_m.stie012,g_stie_m.stie013,g_stie_m.stie014,g_stie_m.stie015,g_stie_m.stie016,g_stie_m.stie017,g_stie_m.stie018,g_stie_m.stie003,g_stie_m.stie049,g_stie_m.stie019,g_stie_m.stie020,g_stie_m.stie021,g_stie_m.stie022,g_stie_m.stie027,g_stie_m.stie028,g_stie_m.stie029,g_stie_m.stie026,g_stie_m.stie023,g_stie_m.stie024,g_stie_m.stie025,g_stie_m.stie223,g_stie_m.stie224,g_stie_m.stie225,g_stie_m.stie030,g_stie_m.stie031,g_stie_m.stie032,g_stie_m.stie033,g_stie_m.stie034,g_stie_m.stie035,g_stie_m.stie036,g_stie_m.stie037,g_stie_m.stie038,g_stie_m.stie039,g_stie_m.stie040,g_stie_m.stie041,g_stie_m.stie042,g_stie_m.stie043,g_stie_m.stie044,g_stie_m.stie045,g_stie_m.stie046,g_stie_m.stie047,g_stie_m.stie048,g_stie_m.stie050,g_stie_m.stie051,g_stie_m.stie052,g_stie_m.stie053 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN astt801_cl USING g_enterprise,g_stie_m.stiedocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astt801_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astt801_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL astt801_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL astt801_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stiesite
            
            #add-point:AFTER FIELD stiesite name="input.a.stiesite"
            {<point name="input.a.stiesite" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stiesite
            #add-point:BEFORE FIELD stiesite name="input.b.stiesite"
            {<point name="input.b.stiesite" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stiesite
            #add-point:ON CHANGE stiesite name="input.g.stiesite"
            {<point name="input.g.stiesite" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stiedocdt
            #add-point:BEFORE FIELD stiedocdt name="input.b.stiedocdt"
            {<point name="input.b.stiedocdt" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stiedocdt
            
            #add-point:AFTER FIELD stiedocdt name="input.a.stiedocdt"
            {<point name="input.a.stiedocdt" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stiedocdt
            #add-point:ON CHANGE stiedocdt name="input.g.stiedocdt"
            {<point name="input.g.stiedocdt" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stiedocno
            #add-point:BEFORE FIELD stiedocno name="input.b.stiedocno"
            {<point name="input.b.stiedocno" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stiedocno
            
            #add-point:AFTER FIELD stiedocno name="input.a.stiedocno"
            {<point name="input.a.stiedocno" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stiedocno
            #add-point:ON CHANGE stiedocno name="input.g.stiedocno"
            {<point name="input.g.stiedocno" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie000
            #add-point:BEFORE FIELD stie000 name="input.b.stie000"
            {<point name="input.b.stie000" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie000
            
            #add-point:AFTER FIELD stie000 name="input.a.stie000"
            {<point name="input.a.stie000" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie000
            #add-point:ON CHANGE stie000 name="input.g.stie000"
            {<point name="input.g.stie000" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie001
            #add-point:BEFORE FIELD stie001 name="input.b.stie001"
            {<point name="input.b.stie001" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie001
            
            #add-point:AFTER FIELD stie001 name="input.a.stie001"
            {<point name="input.a.stie001" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie001
            #add-point:ON CHANGE stie001 name="input.g.stie001"
            {<point name="input.g.stie001" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie002
            #add-point:BEFORE FIELD stie002 name="input.b.stie002"
            {<point name="input.b.stie002" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie002
            
            #add-point:AFTER FIELD stie002 name="input.a.stie002"
            {<point name="input.a.stie002" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie002
            #add-point:ON CHANGE stie002 name="input.g.stie002"
            {<point name="input.g.stie002" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie200
            #add-point:BEFORE FIELD stie200 name="input.b.stie200"
            {<point name="input.b.stie200" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie200
            
            #add-point:AFTER FIELD stie200 name="input.a.stie200"
            {<point name="input.a.stie200" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie200
            #add-point:ON CHANGE stie200 name="input.g.stie200"
            {<point name="input.g.stie200" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie004
            #add-point:BEFORE FIELD stie004 name="input.b.stie004"
            {<point name="input.b.stie004" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie004
            
            #add-point:AFTER FIELD stie004 name="input.a.stie004"
            {<point name="input.a.stie004" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie004
            #add-point:ON CHANGE stie004 name="input.g.stie004"
            {<point name="input.g.stie004" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie005
            #add-point:BEFORE FIELD stie005 name="input.b.stie005"
            {<point name="input.b.stie005" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie005
            
            #add-point:AFTER FIELD stie005 name="input.a.stie005"
            {<point name="input.a.stie005" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie005
            #add-point:ON CHANGE stie005 name="input.g.stie005"
            {<point name="input.g.stie005" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie006
            #add-point:BEFORE FIELD stie006 name="input.b.stie006"
            {<point name="input.b.stie006" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie006
            
            #add-point:AFTER FIELD stie006 name="input.a.stie006"
            {<point name="input.a.stie006" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie006
            #add-point:ON CHANGE stie006 name="input.g.stie006"
            {<point name="input.g.stie006" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stiestus
            #add-point:BEFORE FIELD stiestus name="input.b.stiestus"
            {<point name="input.b.stiestus" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stiestus
            
            #add-point:AFTER FIELD stiestus name="input.a.stiestus"
            {<point name="input.a.stiestus" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stiestus
            #add-point:ON CHANGE stiestus name="input.g.stiestus"
            {<point name="input.g.stiestus" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie007
            
            #add-point:AFTER FIELD stie007 name="input.a.stie007"
            {<point name="input.a.stie007" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie007
            #add-point:BEFORE FIELD stie007 name="input.b.stie007"
            {<point name="input.b.stie007" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie007
            #add-point:ON CHANGE stie007 name="input.g.stie007"
            {<point name="input.g.stie007" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie008
            
            #add-point:AFTER FIELD stie008 name="input.a.stie008"
            {<point name="input.a.stie008" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie008
            #add-point:BEFORE FIELD stie008 name="input.b.stie008"
            {<point name="input.b.stie008" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie008
            #add-point:ON CHANGE stie008 name="input.g.stie008"
            {<point name="input.g.stie008" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie010
            #add-point:BEFORE FIELD stie010 name="input.b.stie010"
            {<point name="input.b.stie010" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie010
            
            #add-point:AFTER FIELD stie010 name="input.a.stie010"
            {<point name="input.a.stie010" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie010
            #add-point:ON CHANGE stie010 name="input.g.stie010"
            {<point name="input.g.stie010" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie009
            #add-point:BEFORE FIELD stie009 name="input.b.stie009"
            {<point name="input.b.stie009" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie009
            
            #add-point:AFTER FIELD stie009 name="input.a.stie009"
            {<point name="input.a.stie009" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie009
            #add-point:ON CHANGE stie009 name="input.g.stie009"
            {<point name="input.g.stie009" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie011
            #add-point:BEFORE FIELD stie011 name="input.b.stie011"
            {<point name="input.b.stie011" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie011
            
            #add-point:AFTER FIELD stie011 name="input.a.stie011"
            {<point name="input.a.stie011" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie011
            #add-point:ON CHANGE stie011 name="input.g.stie011"
            {<point name="input.g.stie011" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie012
            #add-point:BEFORE FIELD stie012 name="input.b.stie012"
            {<point name="input.b.stie012" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie012
            
            #add-point:AFTER FIELD stie012 name="input.a.stie012"
            {<point name="input.a.stie012" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie012
            #add-point:ON CHANGE stie012 name="input.g.stie012"
            {<point name="input.g.stie012" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie013
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_stie_m.stie013,"0","1","","","azz-00079",1) THEN
               NEXT FIELD stie013
            END IF 



            #add-point:AFTER FIELD stie013 name="input.a.stie013"
            {<point name="input.a.stie013" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie013
            #add-point:BEFORE FIELD stie013 name="input.b.stie013"
            {<point name="input.b.stie013" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie013
            #add-point:ON CHANGE stie013 name="input.g.stie013"
            {<point name="input.g.stie013" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie014
            #add-point:BEFORE FIELD stie014 name="input.b.stie014"
            {<point name="input.b.stie014" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie014
            
            #add-point:AFTER FIELD stie014 name="input.a.stie014"
            {<point name="input.a.stie014" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie014
            #add-point:ON CHANGE stie014 name="input.g.stie014"
            {<point name="input.g.stie014" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie015
            #add-point:BEFORE FIELD stie015 name="input.b.stie015"
            {<point name="input.b.stie015" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie015
            
            #add-point:AFTER FIELD stie015 name="input.a.stie015"
            {<point name="input.a.stie015" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie015
            #add-point:ON CHANGE stie015 name="input.g.stie015"
            {<point name="input.g.stie015" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie016
            #add-point:BEFORE FIELD stie016 name="input.b.stie016"
            {<point name="input.b.stie016" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie016
            
            #add-point:AFTER FIELD stie016 name="input.a.stie016"
            {<point name="input.a.stie016" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie016
            #add-point:ON CHANGE stie016 name="input.g.stie016"
            {<point name="input.g.stie016" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie017
            
            #add-point:AFTER FIELD stie017 name="input.a.stie017"
            {<point name="input.a.stie017" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie017
            #add-point:BEFORE FIELD stie017 name="input.b.stie017"
            {<point name="input.b.stie017" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie017
            #add-point:ON CHANGE stie017 name="input.g.stie017"
            {<point name="input.g.stie017" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie018
            
            #add-point:AFTER FIELD stie018 name="input.a.stie018"
            {<point name="input.a.stie018" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie018
            #add-point:BEFORE FIELD stie018 name="input.b.stie018"
            {<point name="input.b.stie018" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie018
            #add-point:ON CHANGE stie018 name="input.g.stie018"
            {<point name="input.g.stie018" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie003
            
            #add-point:AFTER FIELD stie003 name="input.a.stie003"
            {<point name="input.a.stie003" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie003
            #add-point:BEFORE FIELD stie003 name="input.b.stie003"
            {<point name="input.b.stie003" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie003
            #add-point:ON CHANGE stie003 name="input.g.stie003"
            {<point name="input.g.stie003" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie049
            #add-point:BEFORE FIELD stie049 name="input.b.stie049"
            {<point name="input.b.stie049" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie049
            
            #add-point:AFTER FIELD stie049 name="input.a.stie049"
            {<point name="input.a.stie049" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie049
            #add-point:ON CHANGE stie049 name="input.g.stie049"
            {<point name="input.g.stie049" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie019
            
            #add-point:AFTER FIELD stie019 name="input.a.stie019"
            {<point name="input.a.stie019" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie019
            #add-point:BEFORE FIELD stie019 name="input.b.stie019"
            {<point name="input.b.stie019" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie019
            #add-point:ON CHANGE stie019 name="input.g.stie019"
            {<point name="input.g.stie019" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie020
            
            #add-point:AFTER FIELD stie020 name="input.a.stie020"
            {<point name="input.a.stie020" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie020
            #add-point:BEFORE FIELD stie020 name="input.b.stie020"
            {<point name="input.b.stie020" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie020
            #add-point:ON CHANGE stie020 name="input.g.stie020"
            {<point name="input.g.stie020" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie021
            
            #add-point:AFTER FIELD stie021 name="input.a.stie021"
            {<point name="input.a.stie021" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie021
            #add-point:BEFORE FIELD stie021 name="input.b.stie021"
            {<point name="input.b.stie021" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie021
            #add-point:ON CHANGE stie021 name="input.g.stie021"
            {<point name="input.g.stie021" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie022
            
            #add-point:AFTER FIELD stie022 name="input.a.stie022"
            {<point name="input.a.stie022" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie022
            #add-point:BEFORE FIELD stie022 name="input.b.stie022"
            {<point name="input.b.stie022" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie022
            #add-point:ON CHANGE stie022 name="input.g.stie022"
            {<point name="input.g.stie022" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie027
            
            #add-point:AFTER FIELD stie027 name="input.a.stie027"
            {<point name="input.a.stie027" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie027
            #add-point:BEFORE FIELD stie027 name="input.b.stie027"
            {<point name="input.b.stie027" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie027
            #add-point:ON CHANGE stie027 name="input.g.stie027"
            {<point name="input.g.stie027" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie028
            
            #add-point:AFTER FIELD stie028 name="input.a.stie028"
            {<point name="input.a.stie028" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie028
            #add-point:BEFORE FIELD stie028 name="input.b.stie028"
            {<point name="input.b.stie028" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie028
            #add-point:ON CHANGE stie028 name="input.g.stie028"
            {<point name="input.g.stie028" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie029
            
            #add-point:AFTER FIELD stie029 name="input.a.stie029"
            {<point name="input.a.stie029" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie029
            #add-point:BEFORE FIELD stie029 name="input.b.stie029"
            {<point name="input.b.stie029" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie029
            #add-point:ON CHANGE stie029 name="input.g.stie029"
            {<point name="input.g.stie029" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie026
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_stie_m.stie026,"0","0","","","azz-00079",1) THEN
               NEXT FIELD stie026
            END IF 



            #add-point:AFTER FIELD stie026 name="input.a.stie026"
            {<point name="input.a.stie026" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie026
            #add-point:BEFORE FIELD stie026 name="input.b.stie026"
            {<point name="input.b.stie026" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie026
            #add-point:ON CHANGE stie026 name="input.g.stie026"
            {<point name="input.g.stie026" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie023
            #add-point:BEFORE FIELD stie023 name="input.b.stie023"
            {<point name="input.b.stie023" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie023
            
            #add-point:AFTER FIELD stie023 name="input.a.stie023"
            {<point name="input.a.stie023" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie023
            #add-point:ON CHANGE stie023 name="input.g.stie023"
            {<point name="input.g.stie023" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie024
            #add-point:BEFORE FIELD stie024 name="input.b.stie024"
            {<point name="input.b.stie024" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie024
            
            #add-point:AFTER FIELD stie024 name="input.a.stie024"
            {<point name="input.a.stie024" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie024
            #add-point:ON CHANGE stie024 name="input.g.stie024"
            {<point name="input.g.stie024" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie025
            #add-point:BEFORE FIELD stie025 name="input.b.stie025"
            {<point name="input.b.stie025" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie025
            
            #add-point:AFTER FIELD stie025 name="input.a.stie025"
            {<point name="input.a.stie025" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie025
            #add-point:ON CHANGE stie025 name="input.g.stie025"
            {<point name="input.g.stie025" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie223
            #add-point:BEFORE FIELD stie223 name="input.b.stie223"
            {<point name="input.b.stie223" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie223
            
            #add-point:AFTER FIELD stie223 name="input.a.stie223"
            {<point name="input.a.stie223" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie223
            #add-point:ON CHANGE stie223 name="input.g.stie223"
            {<point name="input.g.stie223" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie224
            #add-point:BEFORE FIELD stie224 name="input.b.stie224"
            {<point name="input.b.stie224" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie224
            
            #add-point:AFTER FIELD stie224 name="input.a.stie224"
            {<point name="input.a.stie224" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie224
            #add-point:ON CHANGE stie224 name="input.g.stie224"
            {<point name="input.g.stie224" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie225
            #add-point:BEFORE FIELD stie225 name="input.b.stie225"
            {<point name="input.b.stie225" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie225
            
            #add-point:AFTER FIELD stie225 name="input.a.stie225"
            {<point name="input.a.stie225" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie225
            #add-point:ON CHANGE stie225 name="input.g.stie225"
            {<point name="input.g.stie225" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie030
            
            #add-point:AFTER FIELD stie030 name="input.a.stie030"
            {<point name="input.a.stie030" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie030
            #add-point:BEFORE FIELD stie030 name="input.b.stie030"
            {<point name="input.b.stie030" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie030
            #add-point:ON CHANGE stie030 name="input.g.stie030"
            {<point name="input.g.stie030" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie031
            
            #add-point:AFTER FIELD stie031 name="input.a.stie031"
            {<point name="input.a.stie031" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie031
            #add-point:BEFORE FIELD stie031 name="input.b.stie031"
            {<point name="input.b.stie031" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie031
            #add-point:ON CHANGE stie031 name="input.g.stie031"
            {<point name="input.g.stie031" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie032
            
            #add-point:AFTER FIELD stie032 name="input.a.stie032"
            {<point name="input.a.stie032" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie032
            #add-point:BEFORE FIELD stie032 name="input.b.stie032"
            {<point name="input.b.stie032" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie032
            #add-point:ON CHANGE stie032 name="input.g.stie032"
            {<point name="input.g.stie032" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie033
            #add-point:BEFORE FIELD stie033 name="input.b.stie033"
            {<point name="input.b.stie033" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie033
            
            #add-point:AFTER FIELD stie033 name="input.a.stie033"
            {<point name="input.a.stie033" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie033
            #add-point:ON CHANGE stie033 name="input.g.stie033"
            {<point name="input.g.stie033" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie034
            
            #add-point:AFTER FIELD stie034 name="input.a.stie034"
            {<point name="input.a.stie034" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie034
            #add-point:BEFORE FIELD stie034 name="input.b.stie034"
            {<point name="input.b.stie034" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie034
            #add-point:ON CHANGE stie034 name="input.g.stie034"
            {<point name="input.g.stie034" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie035
            
            #add-point:AFTER FIELD stie035 name="input.a.stie035"
            {<point name="input.a.stie035" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie035
            #add-point:BEFORE FIELD stie035 name="input.b.stie035"
            {<point name="input.b.stie035" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie035
            #add-point:ON CHANGE stie035 name="input.g.stie035"
            {<point name="input.g.stie035" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie036
            
            #add-point:AFTER FIELD stie036 name="input.a.stie036"
            {<point name="input.a.stie036" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie036
            #add-point:BEFORE FIELD stie036 name="input.b.stie036"
            {<point name="input.b.stie036" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie036
            #add-point:ON CHANGE stie036 name="input.g.stie036"
            {<point name="input.g.stie036" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie037
            #add-point:BEFORE FIELD stie037 name="input.b.stie037"
            {<point name="input.b.stie037" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie037
            
            #add-point:AFTER FIELD stie037 name="input.a.stie037"
            {<point name="input.a.stie037" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie037
            #add-point:ON CHANGE stie037 name="input.g.stie037"
            {<point name="input.g.stie037" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie038
            
            #add-point:AFTER FIELD stie038 name="input.a.stie038"
            {<point name="input.a.stie038" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie038
            #add-point:BEFORE FIELD stie038 name="input.b.stie038"
            {<point name="input.b.stie038" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie038
            #add-point:ON CHANGE stie038 name="input.g.stie038"
            {<point name="input.g.stie038" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie039
            
            #add-point:AFTER FIELD stie039 name="input.a.stie039"
            {<point name="input.a.stie039" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie039
            #add-point:BEFORE FIELD stie039 name="input.b.stie039"
            {<point name="input.b.stie039" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie039
            #add-point:ON CHANGE stie039 name="input.g.stie039"
            {<point name="input.g.stie039" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie040
            #add-point:BEFORE FIELD stie040 name="input.b.stie040"
            {<point name="input.b.stie040" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie040
            
            #add-point:AFTER FIELD stie040 name="input.a.stie040"
            {<point name="input.a.stie040" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie040
            #add-point:ON CHANGE stie040 name="input.g.stie040"
            {<point name="input.g.stie040" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie041
            #add-point:BEFORE FIELD stie041 name="input.b.stie041"
            {<point name="input.b.stie041" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie041
            
            #add-point:AFTER FIELD stie041 name="input.a.stie041"
            {<point name="input.a.stie041" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie041
            #add-point:ON CHANGE stie041 name="input.g.stie041"
            {<point name="input.g.stie041" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie042
            #add-point:BEFORE FIELD stie042 name="input.b.stie042"
            {<point name="input.b.stie042" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie042
            
            #add-point:AFTER FIELD stie042 name="input.a.stie042"
            {<point name="input.a.stie042" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie042
            #add-point:ON CHANGE stie042 name="input.g.stie042"
            {<point name="input.g.stie042" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie043
            #add-point:BEFORE FIELD stie043 name="input.b.stie043"
            {<point name="input.b.stie043" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie043
            
            #add-point:AFTER FIELD stie043 name="input.a.stie043"
            {<point name="input.a.stie043" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie043
            #add-point:ON CHANGE stie043 name="input.g.stie043"
            {<point name="input.g.stie043" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie044
            #add-point:BEFORE FIELD stie044 name="input.b.stie044"
            {<point name="input.b.stie044" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie044
            
            #add-point:AFTER FIELD stie044 name="input.a.stie044"
            {<point name="input.a.stie044" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie044
            #add-point:ON CHANGE stie044 name="input.g.stie044"
            {<point name="input.g.stie044" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie045
            #add-point:BEFORE FIELD stie045 name="input.b.stie045"
            {<point name="input.b.stie045" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie045
            
            #add-point:AFTER FIELD stie045 name="input.a.stie045"
            {<point name="input.a.stie045" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie045
            #add-point:ON CHANGE stie045 name="input.g.stie045"
            {<point name="input.g.stie045" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie046
            #add-point:BEFORE FIELD stie046 name="input.b.stie046"
            {<point name="input.b.stie046" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie046
            
            #add-point:AFTER FIELD stie046 name="input.a.stie046"
            {<point name="input.a.stie046" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie046
            #add-point:ON CHANGE stie046 name="input.g.stie046"
            {<point name="input.g.stie046" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie047
            #add-point:BEFORE FIELD stie047 name="input.b.stie047"
            {<point name="input.b.stie047" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie047
            
            #add-point:AFTER FIELD stie047 name="input.a.stie047"
            {<point name="input.a.stie047" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie047
            #add-point:ON CHANGE stie047 name="input.g.stie047"
            {<point name="input.g.stie047" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie048
            #add-point:BEFORE FIELD stie048 name="input.b.stie048"
            {<point name="input.b.stie048" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie048
            
            #add-point:AFTER FIELD stie048 name="input.a.stie048"
            {<point name="input.a.stie048" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie048
            #add-point:ON CHANGE stie048 name="input.g.stie048"
            {<point name="input.g.stie048" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie050
            #add-point:BEFORE FIELD stie050 name="input.b.stie050"
            {<point name="input.b.stie050" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie050
            
            #add-point:AFTER FIELD stie050 name="input.a.stie050"
            {<point name="input.a.stie050" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie050
            #add-point:ON CHANGE stie050 name="input.g.stie050"
            {<point name="input.g.stie050" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie051
            
            #add-point:AFTER FIELD stie051 name="input.a.stie051"
            {<point name="input.a.stie051" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie051
            #add-point:BEFORE FIELD stie051 name="input.b.stie051"
            {<point name="input.b.stie051" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie051
            #add-point:ON CHANGE stie051 name="input.g.stie051"
            {<point name="input.g.stie051" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie052
            #add-point:BEFORE FIELD stie052 name="input.b.stie052"
            {<point name="input.b.stie052" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie052
            
            #add-point:AFTER FIELD stie052 name="input.a.stie052"
            {<point name="input.a.stie052" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie052
            #add-point:ON CHANGE stie052 name="input.g.stie052"
            {<point name="input.g.stie052" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stie053
            
            #add-point:AFTER FIELD stie053 name="input.a.stie053"
            {<point name="input.a.stie053" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stie053
            #add-point:BEFORE FIELD stie053 name="input.b.stie053"
            {<point name="input.b.stie053" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stie053
            #add-point:ON CHANGE stie053 name="input.g.stie053"
            {<point name="input.g.stie053" />}
            #END add-point 


 #欄位檢查
                  #Ctrlp:input.c.stiesite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stiesite
            #add-point:ON ACTION controlp INFIELD stiesite name="input.c.stiesite"
            {<point name="input.c.stiesite" />}
            #END add-point


         #Ctrlp:input.c.stiedocdt
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stiedocdt
            #add-point:ON ACTION controlp INFIELD stiedocdt name="input.c.stiedocdt"
            {<point name="input.c.stiedocdt" />}
            #END add-point


         #Ctrlp:input.c.stiedocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stiedocno
            #add-point:ON ACTION controlp INFIELD stiedocno name="input.c.stiedocno"
            {<point name="input.c.stiedocno" />}
            #END add-point


         #Ctrlp:input.c.stie000
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie000
            #add-point:ON ACTION controlp INFIELD stie000 name="input.c.stie000"
            {<point name="input.c.stie000" />}
            #END add-point


         #Ctrlp:input.c.stie001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie001
            #add-point:ON ACTION controlp INFIELD stie001 name="input.c.stie001"
            {<point name="input.c.stie001" />}
            #END add-point


         #Ctrlp:input.c.stie002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie002
            #add-point:ON ACTION controlp INFIELD stie002 name="input.c.stie002"
            {<point name="input.c.stie002" />}
            #END add-point


         #Ctrlp:input.c.stie200
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie200
            #add-point:ON ACTION controlp INFIELD stie200 name="input.c.stie200"
            {<point name="input.c.stie200" />}
            #END add-point


         #Ctrlp:input.c.stie004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie004
            #add-point:ON ACTION controlp INFIELD stie004 name="input.c.stie004"
            {<point name="input.c.stie004" />}
            #END add-point


         #Ctrlp:input.c.stie005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie005
            #add-point:ON ACTION controlp INFIELD stie005 name="input.c.stie005"
            {<point name="input.c.stie005" />}
            #END add-point


         #Ctrlp:input.c.stie006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie006
            #add-point:ON ACTION controlp INFIELD stie006 name="input.c.stie006"
            {<point name="input.c.stie006" />}
            #END add-point


         #Ctrlp:input.c.stiestus
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stiestus
            #add-point:ON ACTION controlp INFIELD stiestus name="input.c.stiestus"
            {<point name="input.c.stiestus" />}
            #END add-point


         #Ctrlp:input.c.stie007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie007
            #add-point:ON ACTION controlp INFIELD stie007 name="input.c.stie007"
            {<point name="input.c.stie007" />}
            #END add-point


         #Ctrlp:input.c.stie008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie008
            #add-point:ON ACTION controlp INFIELD stie008 name="input.c.stie008"
            {<point name="input.c.stie008" />}
            #END add-point


         #Ctrlp:input.c.stie010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie010
            #add-point:ON ACTION controlp INFIELD stie010 name="input.c.stie010"
            {<point name="input.c.stie010" />}
            #END add-point


         #Ctrlp:input.c.stie009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie009
            #add-point:ON ACTION controlp INFIELD stie009 name="input.c.stie009"
            {<point name="input.c.stie009" />}
            #END add-point


         #Ctrlp:input.c.stie011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie011
            #add-point:ON ACTION controlp INFIELD stie011 name="input.c.stie011"
            {<point name="input.c.stie011" />}
            #END add-point


         #Ctrlp:input.c.stie012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie012
            #add-point:ON ACTION controlp INFIELD stie012 name="input.c.stie012"
            {<point name="input.c.stie012" />}
            #END add-point


         #Ctrlp:input.c.stie013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie013
            #add-point:ON ACTION controlp INFIELD stie013 name="input.c.stie013"
            {<point name="input.c.stie013" />}
            #END add-point


         #Ctrlp:input.c.stie014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie014
            #add-point:ON ACTION controlp INFIELD stie014 name="input.c.stie014"
            {<point name="input.c.stie014" />}
            #END add-point


         #Ctrlp:input.c.stie015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie015
            #add-point:ON ACTION controlp INFIELD stie015 name="input.c.stie015"
            {<point name="input.c.stie015" />}
            #END add-point


         #Ctrlp:input.c.stie016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie016
            #add-point:ON ACTION controlp INFIELD stie016 name="input.c.stie016"
            {<point name="input.c.stie016" />}
            #END add-point


         #Ctrlp:input.c.stie017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie017
            #add-point:ON ACTION controlp INFIELD stie017 name="input.c.stie017"
            {<point name="input.c.stie017" />}
            #END add-point


         #Ctrlp:input.c.stie018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie018
            #add-point:ON ACTION controlp INFIELD stie018 name="input.c.stie018"
            {<point name="input.c.stie018" />}
            #END add-point


         #Ctrlp:input.c.stie003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie003
            #add-point:ON ACTION controlp INFIELD stie003 name="input.c.stie003"
            {<point name="input.c.stie003" />}
            #END add-point


         #Ctrlp:input.c.stie049
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie049
            #add-point:ON ACTION controlp INFIELD stie049 name="input.c.stie049"
            {<point name="input.c.stie049" />}
            #END add-point


         #Ctrlp:input.c.stie019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie019
            #add-point:ON ACTION controlp INFIELD stie019 name="input.c.stie019"
            {<point name="input.c.stie019" />}
            #END add-point


         #Ctrlp:input.c.stie020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie020
            #add-point:ON ACTION controlp INFIELD stie020 name="input.c.stie020"
            {<point name="input.c.stie020" />}
            #END add-point


         #Ctrlp:input.c.stie021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie021
            #add-point:ON ACTION controlp INFIELD stie021 name="input.c.stie021"
            {<point name="input.c.stie021" />}
            #END add-point


         #Ctrlp:input.c.stie022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie022
            #add-point:ON ACTION controlp INFIELD stie022 name="input.c.stie022"
            {<point name="input.c.stie022" />}
            #END add-point


         #Ctrlp:input.c.stie027
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie027
            #add-point:ON ACTION controlp INFIELD stie027 name="input.c.stie027"
            {<point name="input.c.stie027" />}
            #END add-point


         #Ctrlp:input.c.stie028
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie028
            #add-point:ON ACTION controlp INFIELD stie028 name="input.c.stie028"
            {<point name="input.c.stie028" />}
            #END add-point


         #Ctrlp:input.c.stie029
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie029
            #add-point:ON ACTION controlp INFIELD stie029 name="input.c.stie029"
            {<point name="input.c.stie029" />}
            #END add-point


         #Ctrlp:input.c.stie026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie026
            #add-point:ON ACTION controlp INFIELD stie026 name="input.c.stie026"
            {<point name="input.c.stie026" />}
            #END add-point


         #Ctrlp:input.c.stie023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie023
            #add-point:ON ACTION controlp INFIELD stie023 name="input.c.stie023"
            {<point name="input.c.stie023" />}
            #END add-point


         #Ctrlp:input.c.stie024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie024
            #add-point:ON ACTION controlp INFIELD stie024 name="input.c.stie024"
            {<point name="input.c.stie024" />}
            #END add-point


         #Ctrlp:input.c.stie025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie025
            #add-point:ON ACTION controlp INFIELD stie025 name="input.c.stie025"
            {<point name="input.c.stie025" />}
            #END add-point


         #Ctrlp:input.c.stie223
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie223
            #add-point:ON ACTION controlp INFIELD stie223 name="input.c.stie223"
            {<point name="input.c.stie223" />}
            #END add-point


         #Ctrlp:input.c.stie224
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie224
            #add-point:ON ACTION controlp INFIELD stie224 name="input.c.stie224"
            {<point name="input.c.stie224" />}
            #END add-point


         #Ctrlp:input.c.stie225
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie225
            #add-point:ON ACTION controlp INFIELD stie225 name="input.c.stie225"
            {<point name="input.c.stie225" />}
            #END add-point


         #Ctrlp:input.c.stie030
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie030
            #add-point:ON ACTION controlp INFIELD stie030 name="input.c.stie030"
            {<point name="input.c.stie030" />}
            #END add-point


         #Ctrlp:input.c.stie031
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie031
            #add-point:ON ACTION controlp INFIELD stie031 name="input.c.stie031"
            {<point name="input.c.stie031" />}
            #END add-point


         #Ctrlp:input.c.stie032
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie032
            #add-point:ON ACTION controlp INFIELD stie032 name="input.c.stie032"
            {<point name="input.c.stie032" />}
            #END add-point


         #Ctrlp:input.c.stie033
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie033
            #add-point:ON ACTION controlp INFIELD stie033 name="input.c.stie033"
            {<point name="input.c.stie033" />}
            #END add-point


         #Ctrlp:input.c.stie034
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie034
            #add-point:ON ACTION controlp INFIELD stie034 name="input.c.stie034"
            {<point name="input.c.stie034" />}
            #END add-point


         #Ctrlp:input.c.stie035
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie035
            #add-point:ON ACTION controlp INFIELD stie035 name="input.c.stie035"
            {<point name="input.c.stie035" />}
            #END add-point


         #Ctrlp:input.c.stie036
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie036
            #add-point:ON ACTION controlp INFIELD stie036 name="input.c.stie036"
            {<point name="input.c.stie036" />}
            #END add-point


         #Ctrlp:input.c.stie037
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie037
            #add-point:ON ACTION controlp INFIELD stie037 name="input.c.stie037"
            {<point name="input.c.stie037" />}
            #END add-point


         #Ctrlp:input.c.stie038
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie038
            #add-point:ON ACTION controlp INFIELD stie038 name="input.c.stie038"
            {<point name="input.c.stie038" />}
            #END add-point


         #Ctrlp:input.c.stie039
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie039
            #add-point:ON ACTION controlp INFIELD stie039 name="input.c.stie039"
            {<point name="input.c.stie039" />}
            #END add-point


         #Ctrlp:input.c.stie040
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie040
            #add-point:ON ACTION controlp INFIELD stie040 name="input.c.stie040"
            {<point name="input.c.stie040" />}
            #END add-point


         #Ctrlp:input.c.stie041
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie041
            #add-point:ON ACTION controlp INFIELD stie041 name="input.c.stie041"
            {<point name="input.c.stie041" />}
            #END add-point


         #Ctrlp:input.c.stie042
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie042
            #add-point:ON ACTION controlp INFIELD stie042 name="input.c.stie042"
            {<point name="input.c.stie042" />}
            #END add-point


         #Ctrlp:input.c.stie043
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie043
            #add-point:ON ACTION controlp INFIELD stie043 name="input.c.stie043"
            {<point name="input.c.stie043" />}
            #END add-point


         #Ctrlp:input.c.stie044
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie044
            #add-point:ON ACTION controlp INFIELD stie044 name="input.c.stie044"
            {<point name="input.c.stie044" />}
            #END add-point


         #Ctrlp:input.c.stie045
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie045
            #add-point:ON ACTION controlp INFIELD stie045 name="input.c.stie045"
            {<point name="input.c.stie045" />}
            #END add-point


         #Ctrlp:input.c.stie046
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie046
            #add-point:ON ACTION controlp INFIELD stie046 name="input.c.stie046"
            {<point name="input.c.stie046" />}
            #END add-point


         #Ctrlp:input.c.stie047
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie047
            #add-point:ON ACTION controlp INFIELD stie047 name="input.c.stie047"
            {<point name="input.c.stie047" />}
            #END add-point


         #Ctrlp:input.c.stie048
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie048
            #add-point:ON ACTION controlp INFIELD stie048 name="input.c.stie048"
            {<point name="input.c.stie048" />}
            #END add-point


         #Ctrlp:input.c.stie050
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie050
            #add-point:ON ACTION controlp INFIELD stie050 name="input.c.stie050"
            {<point name="input.c.stie050" />}
            #END add-point


         #Ctrlp:input.c.stie051
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie051
            #add-point:ON ACTION controlp INFIELD stie051 name="input.c.stie051"
            {<point name="input.c.stie051" />}
            #END add-point


         #Ctrlp:input.c.stie052
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie052
            #add-point:ON ACTION controlp INFIELD stie052 name="input.c.stie052"
            {<point name="input.c.stie052" />}
            #END add-point


         #Ctrlp:input.c.stie053
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stie053
            #add-point:ON ACTION controlp INFIELD stie053 name="input.c.stie053"
            {<point name="input.c.stie053" />}
            #END add-point


 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_stie_m.stiedocno
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO stie_t (stieent,stiesite,stiedocdt,stiedocno,stie000,stie001,stie002,stie200,stie004,stie005,stie006,stiestus,stie007,stie008,stie010,stie009,stie011,stie012,stie013,stie014,stie015,stie016,stie017,stie018,stie003,stie049,stie019,stie020,stie021,stie022,stie027,stie028,stie029,stie026,stie023,stie024,stie025,stie223,stie224,stie225,stie030,stie031,stie032,stie033,stie034,stie035,stie036,stie037,stie038,stie039,stie040,stie041,stie042,stie043,stie044,stie045,stie046,stie047,stie048,stie050,stie051,stie052,stie053,stieownid,stieowndp,stiecrtid,stiecrtdp,stiecrtdt,stiemodid,stiemoddt,stiecnfid,stiecnfdt)
               VALUES (g_enterprise,g_stie_m.stiesite,g_stie_m.stiedocdt,g_stie_m.stiedocno,g_stie_m.stie000,g_stie_m.stie001,g_stie_m.stie002,g_stie_m.stie200,g_stie_m.stie004,g_stie_m.stie005,g_stie_m.stie006,g_stie_m.stiestus,g_stie_m.stie007,g_stie_m.stie008,g_stie_m.stie010,g_stie_m.stie009,g_stie_m.stie011,g_stie_m.stie012,g_stie_m.stie013,g_stie_m.stie014,g_stie_m.stie015,g_stie_m.stie016,g_stie_m.stie017,g_stie_m.stie018,g_stie_m.stie003,g_stie_m.stie049,g_stie_m.stie019,g_stie_m.stie020,g_stie_m.stie021,g_stie_m.stie022,g_stie_m.stie027,g_stie_m.stie028,g_stie_m.stie029,g_stie_m.stie026,g_stie_m.stie023,g_stie_m.stie024,g_stie_m.stie025,g_stie_m.stie223,g_stie_m.stie224,g_stie_m.stie225,g_stie_m.stie030,g_stie_m.stie031,g_stie_m.stie032,g_stie_m.stie033,g_stie_m.stie034,g_stie_m.stie035,g_stie_m.stie036,g_stie_m.stie037,g_stie_m.stie038,g_stie_m.stie039,g_stie_m.stie040,g_stie_m.stie041,g_stie_m.stie042,g_stie_m.stie043,g_stie_m.stie044,g_stie_m.stie045,g_stie_m.stie046,g_stie_m.stie047,g_stie_m.stie048,g_stie_m.stie050,g_stie_m.stie051,g_stie_m.stie052,g_stie_m.stie053,g_stie_m.stieownid,g_stie_m.stieowndp,g_stie_m.stiecrtid,g_stie_m.stiecrtdp,g_stie_m.stiecrtdt,g_stie_m.stiemodid,g_stie_m.stiemoddt,g_stie_m.stiecnfid,g_stie_m.stiecnfdt) 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_stie_m:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後 name="input.head.a_insert"
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL astt801_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL astt801_b_fill()
                  CALL astt801_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL astt801_stie_t_mask_restore('restore_mask_o')
               
               UPDATE stie_t SET (stiesite,stiedocdt,stiedocno,stie000,stie001,stie002,stie200,stie004,stie005,stie006,stiestus,stie007,stie008,stie010,stie009,stie011,stie012,stie013,stie014,stie015,stie016,stie017,stie018,stie003,stie049,stie019,stie020,stie021,stie022,stie027,stie028,stie029,stie026,stie023,stie024,stie025,stie223,stie224,stie225,stie030,stie031,stie032,stie033,stie034,stie035,stie036,stie037,stie038,stie039,stie040,stie041,stie042,stie043,stie044,stie045,stie046,stie047,stie048,stie050,stie051,stie052,stie053,stieownid,stieowndp,stiecrtid,stiecrtdp,stiecrtdt,stiemodid,stiemoddt,stiecnfid,stiecnfdt) = (g_stie_m.stiesite,g_stie_m.stiedocdt,g_stie_m.stiedocno,g_stie_m.stie000,g_stie_m.stie001,g_stie_m.stie002,g_stie_m.stie200,g_stie_m.stie004,g_stie_m.stie005,g_stie_m.stie006,g_stie_m.stiestus,g_stie_m.stie007,g_stie_m.stie008,g_stie_m.stie010,g_stie_m.stie009,g_stie_m.stie011,g_stie_m.stie012,g_stie_m.stie013,g_stie_m.stie014,g_stie_m.stie015,g_stie_m.stie016,g_stie_m.stie017,g_stie_m.stie018,g_stie_m.stie003,g_stie_m.stie049,g_stie_m.stie019,g_stie_m.stie020,g_stie_m.stie021,g_stie_m.stie022,g_stie_m.stie027,g_stie_m.stie028,g_stie_m.stie029,g_stie_m.stie026,g_stie_m.stie023,g_stie_m.stie024,g_stie_m.stie025,g_stie_m.stie223,g_stie_m.stie224,g_stie_m.stie225,g_stie_m.stie030,g_stie_m.stie031,g_stie_m.stie032,g_stie_m.stie033,g_stie_m.stie034,g_stie_m.stie035,g_stie_m.stie036,g_stie_m.stie037,g_stie_m.stie038,g_stie_m.stie039,g_stie_m.stie040,g_stie_m.stie041,g_stie_m.stie042,g_stie_m.stie043,g_stie_m.stie044,g_stie_m.stie045,g_stie_m.stie046,g_stie_m.stie047,g_stie_m.stie048,g_stie_m.stie050,g_stie_m.stie051,g_stie_m.stie052,g_stie_m.stie053,g_stie_m.stieownid,g_stie_m.stieowndp,g_stie_m.stiecrtid,g_stie_m.stiecrtdp,g_stie_m.stiecrtdt,g_stie_m.stiemodid,g_stie_m.stiemoddt,g_stie_m.stiecnfid,g_stie_m.stiecnfdt)
                WHERE stieent = g_enterprise AND stiedocno = g_stiedocno_t

               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "stie_t:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL astt801_stie_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_stie_m_t)
               LET g_log2 = util.JSON.stringify(g_stie_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_stiedocno_t = g_stie_m.stiedocno

            
      END INPUT
   
{</section>}
 
{<section id="astt801.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_stif_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stif_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 

            CALL astt801_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_stif_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            CALL astt801_b_fill2('10')

            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astt801_cl USING g_enterprise,g_stie_m.stiedocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astt801_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astt801_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_stif_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stif_d[l_ac].stifseq IS NOT NULL

            THEN
               LET l_cmd='u'
               LET g_stif_d_t.* = g_stif_d[l_ac].*  #BACKUP
               LET g_stif_d_o.* = g_stif_d[l_ac].*  #BACKUP
               CALL astt801_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL astt801_set_no_entry_b(l_cmd)
               IF NOT astt801_lock_b("stif_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astt801_bcl INTO g_stif_d[l_ac].stifseq,g_stif_d[l_ac].stif001,g_stif_d[l_ac].stif002,g_stif_d[l_ac].stif003,g_stif_d[l_ac].stif021,g_stif_d[l_ac].stif004,g_stif_d[l_ac].stif022,g_stif_d[l_ac].stif005,g_stif_d[l_ac].stif006,g_stif_d[l_ac].stif007,g_stif_d[l_ac].stif008,g_stif_d[l_ac].stif009,g_stif_d[l_ac].stif010,g_stif_d[l_ac].stif011,g_stif_d[l_ac].stif018,g_stif_d[l_ac].stif016,g_stif_d[l_ac].stif017,g_stif_d[l_ac].stif020,g_stif_d[l_ac].stif023,g_stif_d[l_ac].stif024,g_stif_d[l_ac].stif025,g_stif_d[l_ac].stifsite,g_stif_d[l_ac].stifunit
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_stif_d_t.stifseq,":",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stif_d_mask_o[l_ac].* =  g_stif_d[l_ac].*
                  CALL astt801_stif_t_mask()
                  LET g_stif_d_mask_n[l_ac].* =  g_stif_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astt801_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            

            #其他table進行lock
            

        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stif_d[l_ac].* TO NULL 
            INITIALIZE g_stif_d_t.* TO NULL 
            INITIALIZE g_stif_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_stif_d[l_ac].stif002 = "N"
      LET g_stif_d[l_ac].stif007 = "1"
      LET g_stif_d[l_ac].stif008 = "1"
      LET g_stif_d[l_ac].stif016 = "1"
      LET g_stif_d[l_ac].stif020 = "Y"

            #add-point:modify段before備份 name="input.body.insert.before_bak"
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_stif_d_t.* = g_stif_d[l_ac].*     #新輸入資料
            LET g_stif_d_o.* = g_stif_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astt801_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL astt801_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stif_d[li_reproduce_target].* = g_stif_d[li_reproduce].*

               LET g_stif_d[li_reproduce_target].stifseq = NULL

            END IF
            

            #add-point:modify段before insert name="input.body.before_insert"
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stif_t 
             WHERE stifent = g_enterprise AND stifdocno = g_stie_m.stiedocno

               AND stifseq = g_stif_d[l_ac].stifseq

                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stie_m.stiedocno
               LET gs_keys[2] = g_stif_d[g_detail_idx].stifseq
               CALL astt801_insert_b('stif_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               INITIALIZE g_stif_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stif_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astt801_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               {<point name="input.body.b_delete_ask" />}
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stie_m.stiedocno

               LET gs_keys[gs_keys.getLength()+1] = g_stif_d_t.stifseq

            
               #刪除同層單身
               IF NOT astt801_delete_b('stif_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt801_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astt801_key_delete_b(gs_keys,'stif_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt801_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               

               
               #add-point:單身刪除中 name="input.body.m_delete"
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE astt801_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_stif_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stif_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stifseq
            #add-point:BEFORE FIELD stifseq name="input.b.page1.stifseq"
            {<point name="input.b.page1.stifseq" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stifseq
            
            #add-point:AFTER FIELD stifseq name="input.a.page1.stifseq"
            {<point name="input.a.page1.stifseq" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stifseq
            #add-point:ON CHANGE stifseq name="input.g.page1.stifseq"
            {<point name="input.g.page1.stifseq" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif001
            #add-point:BEFORE FIELD stif001 name="input.b.page1.stif001"
            {<point name="input.b.page1.stif001" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif001
            
            #add-point:AFTER FIELD stif001 name="input.a.page1.stif001"
            {<point name="input.a.page1.stif001" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stif001
            #add-point:ON CHANGE stif001 name="input.g.page1.stif001"
            {<point name="input.g.page1.stif001" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif002
            #add-point:BEFORE FIELD stif002 name="input.b.page1.stif002"
            {<point name="input.b.page1.stif002" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif002
            
            #add-point:AFTER FIELD stif002 name="input.a.page1.stif002"
            {<point name="input.a.page1.stif002" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stif002
            #add-point:ON CHANGE stif002 name="input.g.page1.stif002"
            {<point name="input.g.page1.stif002" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif003
            #add-point:BEFORE FIELD stif003 name="input.b.page1.stif003"
            {<point name="input.b.page1.stif003" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif003
            
            #add-point:AFTER FIELD stif003 name="input.a.page1.stif003"
            {<point name="input.a.page1.stif003" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stif003
            #add-point:ON CHANGE stif003 name="input.g.page1.stif003"
            {<point name="input.g.page1.stif003" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif021
            #add-point:BEFORE FIELD stif021 name="input.b.page1.stif021"
            {<point name="input.b.page1.stif021" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif021
            
            #add-point:AFTER FIELD stif021 name="input.a.page1.stif021"
            {<point name="input.a.page1.stif021" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stif021
            #add-point:ON CHANGE stif021 name="input.g.page1.stif021"
            {<point name="input.g.page1.stif021" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif004
            
            #add-point:AFTER FIELD stif004 name="input.a.page1.stif004"
            {<point name="input.a.page1.stif004" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif004
            #add-point:BEFORE FIELD stif004 name="input.b.page1.stif004"
            {<point name="input.b.page1.stif004" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stif004
            #add-point:ON CHANGE stif004 name="input.g.page1.stif004"
            {<point name="input.g.page1.stif004" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stae004
            #add-point:BEFORE FIELD stae004 name="input.b.page1.stae004"
            {<point name="input.b.page1.stae004" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stae004
            
            #add-point:AFTER FIELD stae004 name="input.a.page1.stae004"
            {<point name="input.a.page1.stae004" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stae004
            #add-point:ON CHANGE stae004 name="input.g.page1.stae004"
            {<point name="input.g.page1.stae004" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif022
            
            #add-point:AFTER FIELD stif022 name="input.a.page1.stif022"
            {<point name="input.a.page1.stif022" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif022
            #add-point:BEFORE FIELD stif022 name="input.b.page1.stif022"
            {<point name="input.b.page1.stif022" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stif022
            #add-point:ON CHANGE stif022 name="input.g.page1.stif022"
            {<point name="input.g.page1.stif022" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif005
            #add-point:BEFORE FIELD stif005 name="input.b.page1.stif005"
            {<point name="input.b.page1.stif005" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif005
            
            #add-point:AFTER FIELD stif005 name="input.a.page1.stif005"
            {<point name="input.a.page1.stif005" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stif005
            #add-point:ON CHANGE stif005 name="input.g.page1.stif005"
            {<point name="input.g.page1.stif005" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif006
            #add-point:BEFORE FIELD stif006 name="input.b.page1.stif006"
            {<point name="input.b.page1.stif006" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif006
            
            #add-point:AFTER FIELD stif006 name="input.a.page1.stif006"
            {<point name="input.a.page1.stif006" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stif006
            #add-point:ON CHANGE stif006 name="input.g.page1.stif006"
            {<point name="input.g.page1.stif006" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif007
            #add-point:BEFORE FIELD stif007 name="input.b.page1.stif007"
            {<point name="input.b.page1.stif007" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif007
            
            #add-point:AFTER FIELD stif007 name="input.a.page1.stif007"
            {<point name="input.a.page1.stif007" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stif007
            #add-point:ON CHANGE stif007 name="input.g.page1.stif007"
            {<point name="input.g.page1.stif007" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif008
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_stif_d[l_ac].stif008,"0","0","","","azz-00079",1) THEN
               NEXT FIELD stif008
            END IF 



            #add-point:AFTER FIELD stif008 name="input.a.page1.stif008"
            {<point name="input.a.page1.stif008" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif008
            #add-point:BEFORE FIELD stif008 name="input.b.page1.stif008"
            {<point name="input.b.page1.stif008" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stif008
            #add-point:ON CHANGE stif008 name="input.g.page1.stif008"
            {<point name="input.g.page1.stif008" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif009
            #add-point:BEFORE FIELD stif009 name="input.b.page1.stif009"
            {<point name="input.b.page1.stif009" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif009
            
            #add-point:AFTER FIELD stif009 name="input.a.page1.stif009"
            {<point name="input.a.page1.stif009" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stif009
            #add-point:ON CHANGE stif009 name="input.g.page1.stif009"
            {<point name="input.g.page1.stif009" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif010
            #add-point:BEFORE FIELD stif010 name="input.b.page1.stif010"
            {<point name="input.b.page1.stif010" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif010
            
            #add-point:AFTER FIELD stif010 name="input.a.page1.stif010"
            {<point name="input.a.page1.stif010" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stif010
            #add-point:ON CHANGE stif010 name="input.g.page1.stif010"
            {<point name="input.g.page1.stif010" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif011
            #add-point:BEFORE FIELD stif011 name="input.b.page1.stif011"
            {<point name="input.b.page1.stif011" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif011
            
            #add-point:AFTER FIELD stif011 name="input.a.page1.stif011"
            {<point name="input.a.page1.stif011" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stif011
            #add-point:ON CHANGE stif011 name="input.g.page1.stif011"
            {<point name="input.g.page1.stif011" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif018
            #add-point:BEFORE FIELD stif018 name="input.b.page1.stif018"
            {<point name="input.b.page1.stif018" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif018
            
            #add-point:AFTER FIELD stif018 name="input.a.page1.stif018"
            {<point name="input.a.page1.stif018" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stif018
            #add-point:ON CHANGE stif018 name="input.g.page1.stif018"
            {<point name="input.g.page1.stif018" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif016
            #add-point:BEFORE FIELD stif016 name="input.b.page1.stif016"
            {<point name="input.b.page1.stif016" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif016
            
            #add-point:AFTER FIELD stif016 name="input.a.page1.stif016"
            {<point name="input.a.page1.stif016" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stif016
            #add-point:ON CHANGE stif016 name="input.g.page1.stif016"
            {<point name="input.g.page1.stif016" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif017
            #add-point:BEFORE FIELD stif017 name="input.b.page1.stif017"
            {<point name="input.b.page1.stif017" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif017
            
            #add-point:AFTER FIELD stif017 name="input.a.page1.stif017"
            {<point name="input.a.page1.stif017" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stif017
            #add-point:ON CHANGE stif017 name="input.g.page1.stif017"
            {<point name="input.g.page1.stif017" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif020
            #add-point:BEFORE FIELD stif020 name="input.b.page1.stif020"
            {<point name="input.b.page1.stif020" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif020
            
            #add-point:AFTER FIELD stif020 name="input.a.page1.stif020"
            {<point name="input.a.page1.stif020" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stif020
            #add-point:ON CHANGE stif020 name="input.g.page1.stif020"
            {<point name="input.g.page1.stif020" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif023
            #add-point:BEFORE FIELD stif023 name="input.b.page1.stif023"
            {<point name="input.b.page1.stif023" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif023
            
            #add-point:AFTER FIELD stif023 name="input.a.page1.stif023"
            {<point name="input.a.page1.stif023" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stif023
            #add-point:ON CHANGE stif023 name="input.g.page1.stif023"
            {<point name="input.g.page1.stif023" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif024
            
            #add-point:AFTER FIELD stif024 name="input.a.page1.stif024"
            {<point name="input.a.page1.stif024" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif024
            #add-point:BEFORE FIELD stif024 name="input.b.page1.stif024"
            {<point name="input.b.page1.stif024" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stif024
            #add-point:ON CHANGE stif024 name="input.g.page1.stif024"
            {<point name="input.g.page1.stif024" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stif025
            #add-point:BEFORE FIELD stif025 name="input.b.page1.stif025"
            {<point name="input.b.page1.stif025" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stif025
            
            #add-point:AFTER FIELD stif025 name="input.a.page1.stif025"
            {<point name="input.a.page1.stif025" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stif025
            #add-point:ON CHANGE stif025 name="input.g.page1.stif025"
            {<point name="input.g.page1.stif025" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stifsite
            #add-point:BEFORE FIELD stifsite name="input.b.page1.stifsite"
            {<point name="input.b.page1.stifsite" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stifsite
            
            #add-point:AFTER FIELD stifsite name="input.a.page1.stifsite"
            {<point name="input.a.page1.stifsite" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stifsite
            #add-point:ON CHANGE stifsite name="input.g.page1.stifsite"
            {<point name="input.g.page1.stifsite" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stifunit
            #add-point:BEFORE FIELD stifunit name="input.b.page1.stifunit"
            {<point name="input.b.page1.stifunit" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stifunit
            
            #add-point:AFTER FIELD stifunit name="input.a.page1.stifunit"
            {<point name="input.a.page1.stifunit" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stifunit
            #add-point:ON CHANGE stifunit name="input.g.page1.stifunit"
            {<point name="input.g.page1.stifunit" />}
            #END add-point 



                  #Ctrlp:input.c.page1.stifseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stifseq
            #add-point:ON ACTION controlp INFIELD stifseq name="input.c.page1.stifseq"
            {<point name="input.c.page1.stifseq" />}
            #END add-point


         #Ctrlp:input.c.page1.stif001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif001
            #add-point:ON ACTION controlp INFIELD stif001 name="input.c.page1.stif001"
            {<point name="input.c.page1.stif001" />}
            #END add-point


         #Ctrlp:input.c.page1.stif002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif002
            #add-point:ON ACTION controlp INFIELD stif002 name="input.c.page1.stif002"
            {<point name="input.c.page1.stif002" />}
            #END add-point


         #Ctrlp:input.c.page1.stif003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif003
            #add-point:ON ACTION controlp INFIELD stif003 name="input.c.page1.stif003"
            {<point name="input.c.page1.stif003" />}
            #END add-point


         #Ctrlp:input.c.page1.stif021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif021
            #add-point:ON ACTION controlp INFIELD stif021 name="input.c.page1.stif021"
            {<point name="input.c.page1.stif021" />}
            #END add-point


         #Ctrlp:input.c.page1.stif004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif004
            #add-point:ON ACTION controlp INFIELD stif004 name="input.c.page1.stif004"
            {<point name="input.c.page1.stif004" />}
            #END add-point


         #Ctrlp:input.c.page1.stae004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stae004
            #add-point:ON ACTION controlp INFIELD stae004 name="input.c.page1.stae004"
            {<point name="input.c.page1.stae004" />}
            #END add-point


         #Ctrlp:input.c.page1.stif022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif022
            #add-point:ON ACTION controlp INFIELD stif022 name="input.c.page1.stif022"
            {<point name="input.c.page1.stif022" />}
            #END add-point


         #Ctrlp:input.c.page1.stif005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif005
            #add-point:ON ACTION controlp INFIELD stif005 name="input.c.page1.stif005"
            {<point name="input.c.page1.stif005" />}
            #END add-point


         #Ctrlp:input.c.page1.stif006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif006
            #add-point:ON ACTION controlp INFIELD stif006 name="input.c.page1.stif006"
            {<point name="input.c.page1.stif006" />}
            #END add-point


         #Ctrlp:input.c.page1.stif007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif007
            #add-point:ON ACTION controlp INFIELD stif007 name="input.c.page1.stif007"
            {<point name="input.c.page1.stif007" />}
            #END add-point


         #Ctrlp:input.c.page1.stif008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif008
            #add-point:ON ACTION controlp INFIELD stif008 name="input.c.page1.stif008"
            {<point name="input.c.page1.stif008" />}
            #END add-point


         #Ctrlp:input.c.page1.stif009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif009
            #add-point:ON ACTION controlp INFIELD stif009 name="input.c.page1.stif009"
            {<point name="input.c.page1.stif009" />}
            #END add-point


         #Ctrlp:input.c.page1.stif010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif010
            #add-point:ON ACTION controlp INFIELD stif010 name="input.c.page1.stif010"
            {<point name="input.c.page1.stif010" />}
            #END add-point


         #Ctrlp:input.c.page1.stif011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif011
            #add-point:ON ACTION controlp INFIELD stif011 name="input.c.page1.stif011"
            {<point name="input.c.page1.stif011" />}
            #END add-point


         #Ctrlp:input.c.page1.stif018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif018
            #add-point:ON ACTION controlp INFIELD stif018 name="input.c.page1.stif018"
            {<point name="input.c.page1.stif018" />}
            #END add-point


         #Ctrlp:input.c.page1.stif016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif016
            #add-point:ON ACTION controlp INFIELD stif016 name="input.c.page1.stif016"
            {<point name="input.c.page1.stif016" />}
            #END add-point


         #Ctrlp:input.c.page1.stif017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif017
            #add-point:ON ACTION controlp INFIELD stif017 name="input.c.page1.stif017"
            {<point name="input.c.page1.stif017" />}
            #END add-point


         #Ctrlp:input.c.page1.stif020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif020
            #add-point:ON ACTION controlp INFIELD stif020 name="input.c.page1.stif020"
            {<point name="input.c.page1.stif020" />}
            #END add-point


         #Ctrlp:input.c.page1.stif023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif023
            #add-point:ON ACTION controlp INFIELD stif023 name="input.c.page1.stif023"
            {<point name="input.c.page1.stif023" />}
            #END add-point


         #Ctrlp:input.c.page1.stif024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif024
            #add-point:ON ACTION controlp INFIELD stif024 name="input.c.page1.stif024"
            {<point name="input.c.page1.stif024" />}
            #END add-point


         #Ctrlp:input.c.page1.stif025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stif025
            #add-point:ON ACTION controlp INFIELD stif025 name="input.c.page1.stif025"
            {<point name="input.c.page1.stif025" />}
            #END add-point


         #Ctrlp:input.c.page1.stifsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stifsite
            #add-point:ON ACTION controlp INFIELD stifsite name="input.c.page1.stifsite"
            {<point name="input.c.page1.stifsite" />}
            #END add-point


         #Ctrlp:input.c.page1.stifunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stifunit
            #add-point:ON ACTION controlp INFIELD stifunit name="input.c.page1.stifunit"
            {<point name="input.c.page1.stifunit" />}
            #END add-point



 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_stif_d[l_ac].* = g_stif_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astt801_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_stif_d[l_ac].stifseq 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_stif_d[l_ac].* = g_stif_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL astt801_stif_t_mask_restore('restore_mask_o')
      
               UPDATE stif_t SET (stifdocno,stifseq,stif001,stif002,stif003,stif021,stif004,stif022,stif005,stif006,stif007,stif008,stif009,stif010,stif011,stif018,stif016,stif017,stif020,stif023,stif024,stif025,stifsite,stifunit) = (g_stie_m.stiedocno,g_stif_d[l_ac].stifseq,g_stif_d[l_ac].stif001,g_stif_d[l_ac].stif002,g_stif_d[l_ac].stif003,g_stif_d[l_ac].stif021,g_stif_d[l_ac].stif004,g_stif_d[l_ac].stif022,g_stif_d[l_ac].stif005,g_stif_d[l_ac].stif006,g_stif_d[l_ac].stif007,g_stif_d[l_ac].stif008,g_stif_d[l_ac].stif009,g_stif_d[l_ac].stif010,g_stif_d[l_ac].stif011,g_stif_d[l_ac].stif018,g_stif_d[l_ac].stif016,g_stif_d[l_ac].stif017,g_stif_d[l_ac].stif020,g_stif_d[l_ac].stif023,g_stif_d[l_ac].stif024,g_stif_d[l_ac].stif025,g_stif_d[l_ac].stifsite,g_stif_d[l_ac].stifunit)
                WHERE stifent = g_enterprise AND stifdocno = g_stie_m.stiedocno 

                  AND stifseq = g_stif_d_t.stifseq #項次   

                  
               #add-point:單身修改中 name="input.body.m_update"
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_stif_d[l_ac].* = g_stif_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stif_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_stif_d[l_ac].* = g_stif_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stif_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stie_m.stiedocno
               LET gs_keys_bak[1] = g_stiedocno_t
               LET gs_keys[2] = g_stif_d[g_detail_idx].stifseq
               LET gs_keys_bak[2] = g_stif_d_t.stifseq
               CALL astt801_update_b('stif_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL astt801_stif_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_stif_d[g_detail_idx].stifseq = g_stif_d_t.stifseq 

                  ) THEN
                  LET gs_keys[01] = g_stie_m.stiedocno

                  LET gs_keys[gs_keys.getLength()+1] = g_stif_d_t.stifseq

                  CALL astt801_key_update_b(gs_keys,'stif_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stie_m),util.JSON.stringify(g_stif_d_t)
               LET g_log2 = util.JSON.stringify(g_stie_m),util.JSON.stringify(g_stif_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL astt801_unlock_b("stif_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            {<point name="input.body.after_input"/>}
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_stif_d[li_reproduce_target].* = g_stif_d[li_reproduce].*

               LET g_stif_d[li_reproduce_target].stifseq = NULL

            ELSE
               CALL FGL_SET_ARR_CURR(g_stif_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_stif_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_stif2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效!
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_4)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body2.before_input2"
            {<point name="input.body2.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stif2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 

            CALL astt801_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'4',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_stif2_d.getLength()
            #add-point:資料輸入前 name="input.body2.before_input"
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stif2_d[l_ac].* TO NULL 
            INITIALIZE g_stif2_d_t.* TO NULL 
            INITIALIZE g_stif2_d_o.* TO NULL 
            #公用欄位給值(單身4)
            
            #自定義預設值(單身4)
            
            #add-point:modify段before備份 name="input.body2.insert.before_bak"
            {<point name="input.body2.insert.before_bak"/>}
            #end add-point
            LET g_stif2_d_t.* = g_stif2_d[l_ac].*     #新輸入資料
            LET g_stif2_d_o.* = g_stif2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astt801_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body2.insert.after_set_entry_b"
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL astt801_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stif2_d[li_reproduce_target].* = g_stif2_d[li_reproduce].*

               LET g_stif2_d[li_reproduce_target].stihseq = NULL
            END IF
            

            #add-point:modify段before insert name="input.body2.before_insert"
            {<point name="input.body2.before_insert"/>}
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body2.before_row2"
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[4] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 4
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astt801_cl USING g_enterprise,g_stie_m.stiedocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astt801_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astt801_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_stif2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stif2_d[l_ac].stihseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_stif2_d_t.* = g_stif2_d[l_ac].*  #BACKUP
               LET g_stif2_d_o.* = g_stif2_d[l_ac].*  #BACKUP
               CALL astt801_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body2.after_set_entry_b"
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL astt801_set_no_entry_b(l_cmd)
               IF NOT astt801_lock_b("stih_t","'4'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astt801_bcl4 INTO g_stif2_d[l_ac].stihseq,g_stif2_d[l_ac].stih001,g_stif2_d[l_ac].stih002,g_stif2_d[l_ac].stih003,g_stif2_d[l_ac].stih008,g_stif2_d[l_ac].stih004,g_stif2_d[l_ac].stih005,g_stif2_d[l_ac].stih006,g_stif2_d[l_ac].stih007,g_stif2_d[l_ac].stihsite,g_stif2_d[l_ac].stihunit
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stif2_d_mask_o[l_ac].* =  g_stif2_d[l_ac].*
                  CALL astt801_stih_t_mask()
                  LET g_stif2_d_mask_n[l_ac].* =  g_stif2_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astt801_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body2.before_row"
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            

            #其他table進行lock
            

            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body2.after_delete_d"
               {<point name="input.body2.after_delete_d"/>}
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body2.b_delete_ask"
               {<point name="input.body2.b_delete_ask" />}
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身4刪除前 name="input.body2.b_delete"
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stie_m.stiedocno
               LET gs_keys[gs_keys.getLength()+1] = g_stif2_d_t.stihseq
            
               #刪除同層單身
               IF NOT astt801_delete_b('stih_t',gs_keys,"'4'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt801_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astt801_key_delete_b(gs_keys,'stih_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt801_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               

               
               #add-point:單身4刪除中 name="input.body2.m_delete"
               {<point name="input.body2.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astt801_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身4刪除後 name="input.body2.a_delete"
               {<point name="input.body2.a_delete"/>}
               #end add-point
               LET l_count = g_stif_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body2.after_delete"
               {<point name="input.body2.after_delete"/>}
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stif2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身4新增前 name="input.body2.b_a_insert"
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stih_t 
             WHERE stihent = g_enterprise AND stihdocno = g_stie_m.stiedocno
               AND stihseq = g_stif2_d[l_ac].stihseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身4新增前 name="input.body2.b_insert"
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stie_m.stiedocno
               LET gs_keys[2] = g_stif2_d[g_detail_idx].stihseq
               CALL astt801_insert_b('stih_t',gs_keys,"'4'")
                           
               #add-point:單身新增後4 name="input.body2.a_insert"
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_stif_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stih_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astt801_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body2.after_insert"
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_stif2_d[l_ac].* = g_stif2_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astt801_bcl4
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_stif2_d[l_ac].* = g_stif2_d_t.*
            ELSE
               #add-point:單身page4修改前 name="input.body2.b_update"
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身4)
               
               
               #將遮罩欄位還原
               CALL astt801_stih_t_mask_restore('restore_mask_o')
                              
               UPDATE stih_t SET (stihdocno,stihseq,stih001,stih002,stih003,stih008,stih004,stih005,stih006,stih007,stihsite,stihunit) = (g_stie_m.stiedocno,g_stif2_d[l_ac].stihseq,g_stif2_d[l_ac].stih001,g_stif2_d[l_ac].stih002,g_stif2_d[l_ac].stih003,g_stif2_d[l_ac].stih008,g_stif2_d[l_ac].stih004,g_stif2_d[l_ac].stih005,g_stif2_d[l_ac].stih006,g_stif2_d[l_ac].stih007,g_stif2_d[l_ac].stihsite,g_stif2_d[l_ac].stihunit) #自訂欄位頁簽
                WHERE stihent = g_enterprise AND stihdocno = g_stie_m.stiedocno
                  AND stihseq = g_stif2_d_t.stihseq #項次 
                  
               #add-point:單身page4修改中 name="input.body2.m_update"
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_stif2_d[l_ac].* = g_stif2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stih_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_stif2_d[l_ac].* = g_stif2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stih_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stie_m.stiedocno
               LET gs_keys_bak[1] = g_stiedocno_t
               LET gs_keys[2] = g_stif2_d[g_detail_idx].stihseq
               LET gs_keys_bak[2] = g_stif2_d_t.stihseq
               CALL astt801_update_b('stih_t',gs_keys,gs_keys_bak,"'4'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astt801_stih_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_stif2_d[g_detail_idx].stihseq = g_stif2_d_t.stihseq 
                  ) THEN
                  LET gs_keys[01] = g_stie_m.stiedocno
                  LET gs_keys[gs_keys.getLength()+1] = g_stif2_d_t.stihseq
                  CALL astt801_key_update_b(gs_keys,'stih_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stie_m),util.JSON.stringify(g_stif2_d_t)
               LET g_log2 = util.JSON.stringify(g_stie_m),util.JSON.stringify(g_stif2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page4修改後 name="input.body2.a_update"
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stihseq
            #add-point:BEFORE FIELD stihseq name="input.b.page2.stihseq"
            {<point name="input.b.page2.stihseq" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stihseq
            
            #add-point:AFTER FIELD stihseq name="input.a.page2.stihseq"
            {<point name="input.a.page2.stihseq" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stihseq
            #add-point:ON CHANGE stihseq name="input.g.page2.stihseq"
            {<point name="input.g.page2.stihseq" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stih001
            #add-point:BEFORE FIELD stih001 name="input.b.page2.stih001"
            {<point name="input.b.page2.stih001" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stih001
            
            #add-point:AFTER FIELD stih001 name="input.a.page2.stih001"
            {<point name="input.a.page2.stih001" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stih001
            #add-point:ON CHANGE stih001 name="input.g.page2.stih001"
            {<point name="input.g.page2.stih001" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stih002
            
            #add-point:AFTER FIELD stih002 name="input.a.page2.stih002"
            {<point name="input.a.page2.stih002" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stih002
            #add-point:BEFORE FIELD stih002 name="input.b.page2.stih002"
            {<point name="input.b.page2.stih002" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stih002
            #add-point:ON CHANGE stih002 name="input.g.page2.stih002"
            {<point name="input.g.page2.stih002" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stae004_4
            #add-point:BEFORE FIELD stae004_4 name="input.b.page2.stae004_4"
            {<point name="input.b.page2.stae004_4" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stae004_4
            
            #add-point:AFTER FIELD stae004_4 name="input.a.page2.stae004_4"
            {<point name="input.a.page2.stae004_4" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stae004_4
            #add-point:ON CHANGE stae004_4 name="input.g.page2.stae004_4"
            {<point name="input.g.page2.stae004_4" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stih003
            #add-point:BEFORE FIELD stih003 name="input.b.page2.stih003"
            {<point name="input.b.page2.stih003" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stih003
            
            #add-point:AFTER FIELD stih003 name="input.a.page2.stih003"
            {<point name="input.a.page2.stih003" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stih003
            #add-point:ON CHANGE stih003 name="input.g.page2.stih003"
            {<point name="input.g.page2.stih003" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stih008
            #add-point:BEFORE FIELD stih008 name="input.b.page2.stih008"
            {<point name="input.b.page2.stih008" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stih008
            
            #add-point:AFTER FIELD stih008 name="input.a.page2.stih008"
            {<point name="input.a.page2.stih008" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stih008
            #add-point:ON CHANGE stih008 name="input.g.page2.stih008"
            {<point name="input.g.page2.stih008" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stih004
            #add-point:BEFORE FIELD stih004 name="input.b.page2.stih004"
            {<point name="input.b.page2.stih004" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stih004
            
            #add-point:AFTER FIELD stih004 name="input.a.page2.stih004"
            {<point name="input.a.page2.stih004" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stih004
            #add-point:ON CHANGE stih004 name="input.g.page2.stih004"
            {<point name="input.g.page2.stih004" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stih005
            #add-point:BEFORE FIELD stih005 name="input.b.page2.stih005"
            {<point name="input.b.page2.stih005" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stih005
            
            #add-point:AFTER FIELD stih005 name="input.a.page2.stih005"
            {<point name="input.a.page2.stih005" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stih005
            #add-point:ON CHANGE stih005 name="input.g.page2.stih005"
            {<point name="input.g.page2.stih005" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stih006
            #add-point:BEFORE FIELD stih006 name="input.b.page2.stih006"
            {<point name="input.b.page2.stih006" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stih006
            
            #add-point:AFTER FIELD stih006 name="input.a.page2.stih006"
            {<point name="input.a.page2.stih006" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stih006
            #add-point:ON CHANGE stih006 name="input.g.page2.stih006"
            {<point name="input.g.page2.stih006" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stih007
            #add-point:BEFORE FIELD stih007 name="input.b.page2.stih007"
            {<point name="input.b.page2.stih007" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stih007
            
            #add-point:AFTER FIELD stih007 name="input.a.page2.stih007"
            {<point name="input.a.page2.stih007" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stih007
            #add-point:ON CHANGE stih007 name="input.g.page2.stih007"
            {<point name="input.g.page2.stih007" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stihsite
            #add-point:BEFORE FIELD stihsite name="input.b.page2.stihsite"
            {<point name="input.b.page2.stihsite" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stihsite
            
            #add-point:AFTER FIELD stihsite name="input.a.page2.stihsite"
            {<point name="input.a.page2.stihsite" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stihsite
            #add-point:ON CHANGE stihsite name="input.g.page2.stihsite"
            {<point name="input.g.page2.stihsite" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stihunit
            #add-point:BEFORE FIELD stihunit name="input.b.page2.stihunit"
            {<point name="input.b.page2.stihunit" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stihunit
            
            #add-point:AFTER FIELD stihunit name="input.a.page2.stihunit"
            {<point name="input.a.page2.stihunit" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stihunit
            #add-point:ON CHANGE stihunit name="input.g.page2.stihunit"
            {<point name="input.g.page2.stihunit" />}
            #END add-point 



                  #Ctrlp:input.c.page2.stihseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stihseq
            #add-point:ON ACTION controlp INFIELD stihseq name="input.c.page2.stihseq"
            {<point name="input.c.page2.stihseq" />}
            #END add-point


         #Ctrlp:input.c.page2.stih001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stih001
            #add-point:ON ACTION controlp INFIELD stih001 name="input.c.page2.stih001"
            {<point name="input.c.page2.stih001" />}
            #END add-point


         #Ctrlp:input.c.page2.stih002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stih002
            #add-point:ON ACTION controlp INFIELD stih002 name="input.c.page2.stih002"
            {<point name="input.c.page2.stih002" />}
            #END add-point


         #Ctrlp:input.c.page2.stae004_4
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stae004_4
            #add-point:ON ACTION controlp INFIELD stae004_4 name="input.c.page2.stae004_4"
            {<point name="input.c.page2.stae004_4" />}
            #END add-point


         #Ctrlp:input.c.page2.stih003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stih003
            #add-point:ON ACTION controlp INFIELD stih003 name="input.c.page2.stih003"
            {<point name="input.c.page2.stih003" />}
            #END add-point


         #Ctrlp:input.c.page2.stih008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stih008
            #add-point:ON ACTION controlp INFIELD stih008 name="input.c.page2.stih008"
            {<point name="input.c.page2.stih008" />}
            #END add-point


         #Ctrlp:input.c.page2.stih004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stih004
            #add-point:ON ACTION controlp INFIELD stih004 name="input.c.page2.stih004"
            {<point name="input.c.page2.stih004" />}
            #END add-point


         #Ctrlp:input.c.page2.stih005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stih005
            #add-point:ON ACTION controlp INFIELD stih005 name="input.c.page2.stih005"
            {<point name="input.c.page2.stih005" />}
            #END add-point


         #Ctrlp:input.c.page2.stih006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stih006
            #add-point:ON ACTION controlp INFIELD stih006 name="input.c.page2.stih006"
            {<point name="input.c.page2.stih006" />}
            #END add-point


         #Ctrlp:input.c.page2.stih007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stih007
            #add-point:ON ACTION controlp INFIELD stih007 name="input.c.page2.stih007"
            {<point name="input.c.page2.stih007" />}
            #END add-point


         #Ctrlp:input.c.page2.stihsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stihsite
            #add-point:ON ACTION controlp INFIELD stihsite name="input.c.page2.stihsite"
            {<point name="input.c.page2.stihsite" />}
            #END add-point


         #Ctrlp:input.c.page2.stihunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stihunit
            #add-point:ON ACTION controlp INFIELD stihunit name="input.c.page2.stihunit"
            {<point name="input.c.page2.stihunit" />}
            #END add-point



 
         AFTER ROW
            #add-point:單身page4 after_row name="input.body2.after_row"
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_stif2_d[l_ac].* = g_stif2_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astt801_bcl4
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astt801_unlock_b("stih_t","'4'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page4 after_row2 name="input.body2.after_row2"
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body2.after_input"
            {<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_stif2_d[li_reproduce_target].* = g_stif2_d[li_reproduce].*

               LET g_stif2_d[li_reproduce_target].stihseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_stif2_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_stif2_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_stif3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = FALSE, #此頁面insert功能由產生器控制, 手動之設定無效!
                 DELETE ROW = FALSE,
                 APPEND ROW = FALSE)
                 
         #自訂ACTION(detail_input,page_5)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body3.before_input2"
            {<point name="input.body3.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stif3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 

            CALL astt801_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'5',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_stif3_d.getLength()
            #add-point:資料輸入前 name="input.body3.before_input"
            {<point name="input.body3.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stif3_d[l_ac].* TO NULL 
            INITIALIZE g_stif3_d_t.* TO NULL 
            INITIALIZE g_stif3_d_o.* TO NULL 
            #公用欄位給值(單身5)
            
            #自定義預設值(單身5)
                  LET g_stif3_d[l_ac].stii007 = "N"
      LET g_stif3_d[l_ac].stii008 = "N"

            #add-point:modify段before備份 name="input.body3.insert.before_bak"
            {<point name="input.body3.insert.before_bak"/>}
            #end add-point
            LET g_stif3_d_t.* = g_stif3_d[l_ac].*     #新輸入資料
            LET g_stif3_d_o.* = g_stif3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astt801_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body3.insert.after_set_entry_b"
            {<point name="input.body3.insert.after_set_entry_b"/>}
            #end add-point
            CALL astt801_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stif3_d[li_reproduce_target].* = g_stif3_d[li_reproduce].*

               LET g_stif3_d[li_reproduce_target].stiiseq = NULL
            END IF
            

            #add-point:modify段before insert name="input.body3.before_insert"
            {<point name="input.body3.before_insert"/>}
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body3.before_row2"
            {<point name="input.body3.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[5] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 5
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astt801_cl USING g_enterprise,g_stie_m.stiedocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astt801_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astt801_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_stif3_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stif3_d[l_ac].stiiseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_stif3_d_t.* = g_stif3_d[l_ac].*  #BACKUP
               LET g_stif3_d_o.* = g_stif3_d[l_ac].*  #BACKUP
               CALL astt801_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body3.after_set_entry_b"
               {<point name="input.body3.after_set_entry_b"/>}
               #end add-point  
               CALL astt801_set_no_entry_b(l_cmd)
               IF NOT astt801_lock_b("stii_t","'5'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astt801_bcl5 INTO g_stif3_d[l_ac].stiiseq,g_stif3_d[l_ac].stii001,g_stif3_d[l_ac].stii002,g_stif3_d[l_ac].stii003,g_stif3_d[l_ac].stii010,g_stif3_d[l_ac].stii004,g_stif3_d[l_ac].stii005,g_stif3_d[l_ac].stii006,g_stif3_d[l_ac].stii007,g_stif3_d[l_ac].stii008,g_stif3_d[l_ac].stii009,g_stif3_d[l_ac].stiisite,g_stif3_d[l_ac].stiiunit
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stif3_d_mask_o[l_ac].* =  g_stif3_d[l_ac].*
                  CALL astt801_stii_t_mask()
                  LET g_stif3_d_mask_n[l_ac].* =  g_stif3_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astt801_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body3.before_row"
            {<point name="input.body3.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            

            #其他table進行lock
            

            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body3.after_delete_d"
               {<point name="input.body3.after_delete_d"/>}
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body3.b_delete_ask"
               {<point name="input.body3.b_delete_ask" />}
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身5刪除前 name="input.body3.b_delete"
               {<point name="input.body3.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stie_m.stiedocno
               LET gs_keys[gs_keys.getLength()+1] = g_stif3_d_t.stiiseq
            
               #刪除同層單身
               IF NOT astt801_delete_b('stii_t',gs_keys,"'5'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt801_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astt801_key_delete_b(gs_keys,'stii_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt801_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               

               
               #add-point:單身5刪除中 name="input.body3.m_delete"
               {<point name="input.body3.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astt801_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身5刪除後 name="input.body3.a_delete"
               {<point name="input.body3.a_delete"/>}
               #end add-point
               LET l_count = g_stif_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body3.after_delete"
               {<point name="input.body3.after_delete"/>}
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stif3_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身5新增前 name="input.body3.b_a_insert"
            {<point name="input.body3.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stii_t 
             WHERE stiient = g_enterprise AND stiidocno = g_stie_m.stiedocno
               AND stiiseq = g_stif3_d[l_ac].stiiseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身5新增前 name="input.body3.b_insert"
               {<point name="input.body3.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stie_m.stiedocno
               LET gs_keys[2] = g_stif3_d[g_detail_idx].stiiseq
               CALL astt801_insert_b('stii_t',gs_keys,"'5'")
                           
               #add-point:單身新增後5 name="input.body3.a_insert"
               {<point name="input.body3.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_stif_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stii_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astt801_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body3.after_insert"
               {<point name="input.body3.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_stif3_d[l_ac].* = g_stif3_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astt801_bcl5
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_stif3_d[l_ac].* = g_stif3_d_t.*
            ELSE
               #add-point:單身page5修改前 name="input.body3.b_update"
               {<point name="input.body3.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身5)
               
               
               #將遮罩欄位還原
               CALL astt801_stii_t_mask_restore('restore_mask_o')
                              
               UPDATE stii_t SET (stiidocno,stiiseq,stii001,stii002,stii003,stii010,stii004,stii005,stii006,stii007,stii008,stii009,stiisite,stiiunit) = (g_stie_m.stiedocno,g_stif3_d[l_ac].stiiseq,g_stif3_d[l_ac].stii001,g_stif3_d[l_ac].stii002,g_stif3_d[l_ac].stii003,g_stif3_d[l_ac].stii010,g_stif3_d[l_ac].stii004,g_stif3_d[l_ac].stii005,g_stif3_d[l_ac].stii006,g_stif3_d[l_ac].stii007,g_stif3_d[l_ac].stii008,g_stif3_d[l_ac].stii009,g_stif3_d[l_ac].stiisite,g_stif3_d[l_ac].stiiunit) #自訂欄位頁簽
                WHERE stiient = g_enterprise AND stiidocno = g_stie_m.stiedocno
                  AND stiiseq = g_stif3_d_t.stiiseq #項次 
                  
               #add-point:單身page5修改中 name="input.body3.m_update"
               {<point name="input.body3.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_stif3_d[l_ac].* = g_stif3_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stii_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_stif3_d[l_ac].* = g_stif3_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stii_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stie_m.stiedocno
               LET gs_keys_bak[1] = g_stiedocno_t
               LET gs_keys[2] = g_stif3_d[g_detail_idx].stiiseq
               LET gs_keys_bak[2] = g_stif3_d_t.stiiseq
               CALL astt801_update_b('stii_t',gs_keys,gs_keys_bak,"'5'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astt801_stii_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_stif3_d[g_detail_idx].stiiseq = g_stif3_d_t.stiiseq 
                  ) THEN
                  LET gs_keys[01] = g_stie_m.stiedocno
                  LET gs_keys[gs_keys.getLength()+1] = g_stif3_d_t.stiiseq
                  CALL astt801_key_update_b(gs_keys,'stii_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stie_m),util.JSON.stringify(g_stif3_d_t)
               LET g_log2 = util.JSON.stringify(g_stie_m),util.JSON.stringify(g_stif3_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page5修改後 name="input.body3.a_update"
               {<point name="input.body3.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stiiseq
            #add-point:BEFORE FIELD stiiseq name="input.b.page3.stiiseq"
            {<point name="input.b.page3.stiiseq" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stiiseq
            
            #add-point:AFTER FIELD stiiseq name="input.a.page3.stiiseq"
            {<point name="input.a.page3.stiiseq" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stiiseq
            #add-point:ON CHANGE stiiseq name="input.g.page3.stiiseq"
            {<point name="input.g.page3.stiiseq" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stii001
            #add-point:BEFORE FIELD stii001 name="input.b.page3.stii001"
            {<point name="input.b.page3.stii001" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stii001
            
            #add-point:AFTER FIELD stii001 name="input.a.page3.stii001"
            {<point name="input.a.page3.stii001" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stii001
            #add-point:ON CHANGE stii001 name="input.g.page3.stii001"
            {<point name="input.g.page3.stii001" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stii002
            
            #add-point:AFTER FIELD stii002 name="input.a.page3.stii002"
            {<point name="input.a.page3.stii002" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stii002
            #add-point:BEFORE FIELD stii002 name="input.b.page3.stii002"
            {<point name="input.b.page3.stii002" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stii002
            #add-point:ON CHANGE stii002 name="input.g.page3.stii002"
            {<point name="input.g.page3.stii002" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stii003
            
            #add-point:AFTER FIELD stii003 name="input.a.page3.stii003"
            {<point name="input.a.page3.stii003" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stii003
            #add-point:BEFORE FIELD stii003 name="input.b.page3.stii003"
            {<point name="input.b.page3.stii003" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stii003
            #add-point:ON CHANGE stii003 name="input.g.page3.stii003"
            {<point name="input.g.page3.stii003" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stii010
            
            #add-point:AFTER FIELD stii010 name="input.a.page3.stii010"
            {<point name="input.a.page3.stii010" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stii010
            #add-point:BEFORE FIELD stii010 name="input.b.page3.stii010"
            {<point name="input.b.page3.stii010" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stii010
            #add-point:ON CHANGE stii010 name="input.g.page3.stii010"
            {<point name="input.g.page3.stii010" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stii004
            #add-point:BEFORE FIELD stii004 name="input.b.page3.stii004"
            {<point name="input.b.page3.stii004" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stii004
            
            #add-point:AFTER FIELD stii004 name="input.a.page3.stii004"
            {<point name="input.a.page3.stii004" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stii004
            #add-point:ON CHANGE stii004 name="input.g.page3.stii004"
            {<point name="input.g.page3.stii004" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stii005
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_stif3_d[l_ac].stii005,"0","0","31","1","azz-00087",1) THEN
               NEXT FIELD stii005
            END IF 



            #add-point:AFTER FIELD stii005 name="input.a.page3.stii005"
            {<point name="input.a.page3.stii005" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stii005
            #add-point:BEFORE FIELD stii005 name="input.b.page3.stii005"
            {<point name="input.b.page3.stii005" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stii005
            #add-point:ON CHANGE stii005 name="input.g.page3.stii005"
            {<point name="input.g.page3.stii005" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stii006
            #add-point:BEFORE FIELD stii006 name="input.b.page3.stii006"
            {<point name="input.b.page3.stii006" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stii006
            
            #add-point:AFTER FIELD stii006 name="input.a.page3.stii006"
            {<point name="input.a.page3.stii006" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stii006
            #add-point:ON CHANGE stii006 name="input.g.page3.stii006"
            {<point name="input.g.page3.stii006" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stii007
            #add-point:BEFORE FIELD stii007 name="input.b.page3.stii007"
            {<point name="input.b.page3.stii007" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stii007
            
            #add-point:AFTER FIELD stii007 name="input.a.page3.stii007"
            {<point name="input.a.page3.stii007" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stii007
            #add-point:ON CHANGE stii007 name="input.g.page3.stii007"
            {<point name="input.g.page3.stii007" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stii008
            #add-point:BEFORE FIELD stii008 name="input.b.page3.stii008"
            {<point name="input.b.page3.stii008" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stii008
            
            #add-point:AFTER FIELD stii008 name="input.a.page3.stii008"
            {<point name="input.a.page3.stii008" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stii008
            #add-point:ON CHANGE stii008 name="input.g.page3.stii008"
            {<point name="input.g.page3.stii008" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stii009
            #add-point:BEFORE FIELD stii009 name="input.b.page3.stii009"
            {<point name="input.b.page3.stii009" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stii009
            
            #add-point:AFTER FIELD stii009 name="input.a.page3.stii009"
            {<point name="input.a.page3.stii009" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stii009
            #add-point:ON CHANGE stii009 name="input.g.page3.stii009"
            {<point name="input.g.page3.stii009" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stiisite
            #add-point:BEFORE FIELD stiisite name="input.b.page3.stiisite"
            {<point name="input.b.page3.stiisite" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stiisite
            
            #add-point:AFTER FIELD stiisite name="input.a.page3.stiisite"
            {<point name="input.a.page3.stiisite" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stiisite
            #add-point:ON CHANGE stiisite name="input.g.page3.stiisite"
            {<point name="input.g.page3.stiisite" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stiiunit
            #add-point:BEFORE FIELD stiiunit name="input.b.page3.stiiunit"
            {<point name="input.b.page3.stiiunit" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stiiunit
            
            #add-point:AFTER FIELD stiiunit name="input.a.page3.stiiunit"
            {<point name="input.a.page3.stiiunit" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stiiunit
            #add-point:ON CHANGE stiiunit name="input.g.page3.stiiunit"
            {<point name="input.g.page3.stiiunit" />}
            #END add-point 



                  #Ctrlp:input.c.page3.stiiseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stiiseq
            #add-point:ON ACTION controlp INFIELD stiiseq name="input.c.page3.stiiseq"
            {<point name="input.c.page3.stiiseq" />}
            #END add-point


         #Ctrlp:input.c.page3.stii001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stii001
            #add-point:ON ACTION controlp INFIELD stii001 name="input.c.page3.stii001"
            {<point name="input.c.page3.stii001" />}
            #END add-point


         #Ctrlp:input.c.page3.stii002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stii002
            #add-point:ON ACTION controlp INFIELD stii002 name="input.c.page3.stii002"
            {<point name="input.c.page3.stii002" />}
            #END add-point


         #Ctrlp:input.c.page3.stii003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stii003
            #add-point:ON ACTION controlp INFIELD stii003 name="input.c.page3.stii003"
            {<point name="input.c.page3.stii003" />}
            #END add-point


         #Ctrlp:input.c.page3.stii010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stii010
            #add-point:ON ACTION controlp INFIELD stii010 name="input.c.page3.stii010"
            {<point name="input.c.page3.stii010" />}
            #END add-point


         #Ctrlp:input.c.page3.stii004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stii004
            #add-point:ON ACTION controlp INFIELD stii004 name="input.c.page3.stii004"
            {<point name="input.c.page3.stii004" />}
            #END add-point


         #Ctrlp:input.c.page3.stii005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stii005
            #add-point:ON ACTION controlp INFIELD stii005 name="input.c.page3.stii005"
            {<point name="input.c.page3.stii005" />}
            #END add-point


         #Ctrlp:input.c.page3.stii006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stii006
            #add-point:ON ACTION controlp INFIELD stii006 name="input.c.page3.stii006"
            {<point name="input.c.page3.stii006" />}
            #END add-point


         #Ctrlp:input.c.page3.stii007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stii007
            #add-point:ON ACTION controlp INFIELD stii007 name="input.c.page3.stii007"
            {<point name="input.c.page3.stii007" />}
            #END add-point


         #Ctrlp:input.c.page3.stii008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stii008
            #add-point:ON ACTION controlp INFIELD stii008 name="input.c.page3.stii008"
            {<point name="input.c.page3.stii008" />}
            #END add-point


         #Ctrlp:input.c.page3.stii009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stii009
            #add-point:ON ACTION controlp INFIELD stii009 name="input.c.page3.stii009"
            {<point name="input.c.page3.stii009" />}
            #END add-point


         #Ctrlp:input.c.page3.stiisite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stiisite
            #add-point:ON ACTION controlp INFIELD stiisite name="input.c.page3.stiisite"
            {<point name="input.c.page3.stiisite" />}
            #END add-point


         #Ctrlp:input.c.page3.stiiunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stiiunit
            #add-point:ON ACTION controlp INFIELD stiiunit name="input.c.page3.stiiunit"
            {<point name="input.c.page3.stiiunit" />}
            #END add-point



 
         AFTER ROW
            #add-point:單身page5 after_row name="input.body3.after_row"
            {<point name="input.body3.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_stif3_d[l_ac].* = g_stif3_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astt801_bcl5
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astt801_unlock_b("stii_t","'5'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page5 after_row2 name="input.body3.after_row2"
            {<point name="input.body3.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body3.after_input"
            {<point name="input.body3.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_stif3_d[li_reproduce_target].* = g_stif3_d[li_reproduce].*

               LET g_stif3_d[li_reproduce_target].stiiseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_stif3_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_stif3_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_stif4_d FROM s_detail4.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效!
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_6)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body4.before_input2"
            {<point name="input.body4.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stif4_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 

            CALL astt801_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'6',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_stif4_d.getLength()
            #add-point:資料輸入前 name="input.body4.before_input"
            {<point name="input.body4.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stif4_d[l_ac].* TO NULL 
            INITIALIZE g_stif4_d_t.* TO NULL 
            INITIALIZE g_stif4_d_o.* TO NULL 
            #公用欄位給值(單身6)
            
            #自定義預設值(單身6)
                  LET g_stif4_d[l_ac].stil004 = "N"
      LET g_stif4_d[l_ac].stil005 = "N"
      LET g_stif4_d[l_ac].stil007 = "0"
      LET g_stif4_d[l_ac].stil008 = "0"

            #add-point:modify段before備份 name="input.body4.insert.before_bak"
            {<point name="input.body4.insert.before_bak"/>}
            #end add-point
            LET g_stif4_d_t.* = g_stif4_d[l_ac].*     #新輸入資料
            LET g_stif4_d_o.* = g_stif4_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astt801_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body4.insert.after_set_entry_b"
            {<point name="input.body4.insert.after_set_entry_b"/>}
            #end add-point
            CALL astt801_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stif4_d[li_reproduce_target].* = g_stif4_d[li_reproduce].*

               LET g_stif4_d[li_reproduce_target].stilseq = NULL
            END IF
            

            #add-point:modify段before insert name="input.body4.before_insert"
            {<point name="input.body4.before_insert"/>}
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body4.before_row2"
            {<point name="input.body4.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[6] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 6
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astt801_cl USING g_enterprise,g_stie_m.stiedocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astt801_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astt801_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_stif4_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stif4_d[l_ac].stilseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_stif4_d_t.* = g_stif4_d[l_ac].*  #BACKUP
               LET g_stif4_d_o.* = g_stif4_d[l_ac].*  #BACKUP
               CALL astt801_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body4.after_set_entry_b"
               {<point name="input.body4.after_set_entry_b"/>}
               #end add-point  
               CALL astt801_set_no_entry_b(l_cmd)
               IF NOT astt801_lock_b("stil_t","'6'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astt801_bcl6 INTO g_stif4_d[l_ac].stilseq,g_stif4_d[l_ac].stil001,g_stif4_d[l_ac].stil002,g_stif4_d[l_ac].stil003,g_stif4_d[l_ac].stil004,g_stif4_d[l_ac].stil005,g_stif4_d[l_ac].stil006,g_stif4_d[l_ac].stil007,g_stif4_d[l_ac].stil008,g_stif4_d[l_ac].stilsite,g_stif4_d[l_ac].stilunit
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stif4_d_mask_o[l_ac].* =  g_stif4_d[l_ac].*
                  CALL astt801_stil_t_mask()
                  LET g_stif4_d_mask_n[l_ac].* =  g_stif4_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astt801_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body4.before_row"
            {<point name="input.body4.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            

            #其他table進行lock
            

            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body4.after_delete_d"
               {<point name="input.body4.after_delete_d"/>}
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body4.b_delete_ask"
               {<point name="input.body4.b_delete_ask" />}
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身6刪除前 name="input.body4.b_delete"
               {<point name="input.body4.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stie_m.stiedocno
               LET gs_keys[gs_keys.getLength()+1] = g_stif4_d_t.stilseq
            
               #刪除同層單身
               IF NOT astt801_delete_b('stil_t',gs_keys,"'6'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt801_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astt801_key_delete_b(gs_keys,'stil_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt801_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               

               
               #add-point:單身6刪除中 name="input.body4.m_delete"
               {<point name="input.body4.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astt801_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身6刪除後 name="input.body4.a_delete"
               {<point name="input.body4.a_delete"/>}
               #end add-point
               LET l_count = g_stif_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body4.after_delete"
               {<point name="input.body4.after_delete"/>}
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stif4_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身6新增前 name="input.body4.b_a_insert"
            {<point name="input.body4.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stil_t 
             WHERE stilent = g_enterprise AND stildocno = g_stie_m.stiedocno
               AND stilseq = g_stif4_d[l_ac].stilseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身6新增前 name="input.body4.b_insert"
               {<point name="input.body4.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stie_m.stiedocno
               LET gs_keys[2] = g_stif4_d[g_detail_idx].stilseq
               CALL astt801_insert_b('stil_t',gs_keys,"'6'")
                           
               #add-point:單身新增後6 name="input.body4.a_insert"
               {<point name="input.body4.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_stif_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stil_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astt801_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body4.after_insert"
               {<point name="input.body4.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_stif4_d[l_ac].* = g_stif4_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astt801_bcl6
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_stif4_d[l_ac].* = g_stif4_d_t.*
            ELSE
               #add-point:單身page6修改前 name="input.body4.b_update"
               {<point name="input.body4.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身6)
               
               
               #將遮罩欄位還原
               CALL astt801_stil_t_mask_restore('restore_mask_o')
                              
               UPDATE stil_t SET (stildocno,stilseq,stil001,stil002,stil003,stil004,stil005,stil006,stil007,stil008,stilsite,stilunit) = (g_stie_m.stiedocno,g_stif4_d[l_ac].stilseq,g_stif4_d[l_ac].stil001,g_stif4_d[l_ac].stil002,g_stif4_d[l_ac].stil003,g_stif4_d[l_ac].stil004,g_stif4_d[l_ac].stil005,g_stif4_d[l_ac].stil006,g_stif4_d[l_ac].stil007,g_stif4_d[l_ac].stil008,g_stif4_d[l_ac].stilsite,g_stif4_d[l_ac].stilunit) #自訂欄位頁簽
                WHERE stilent = g_enterprise AND stildocno = g_stie_m.stiedocno
                  AND stilseq = g_stif4_d_t.stilseq #項次 
                  
               #add-point:單身page6修改中 name="input.body4.m_update"
               {<point name="input.body4.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_stif4_d[l_ac].* = g_stif4_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stil_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_stif4_d[l_ac].* = g_stif4_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stil_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stie_m.stiedocno
               LET gs_keys_bak[1] = g_stiedocno_t
               LET gs_keys[2] = g_stif4_d[g_detail_idx].stilseq
               LET gs_keys_bak[2] = g_stif4_d_t.stilseq
               CALL astt801_update_b('stil_t',gs_keys,gs_keys_bak,"'6'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astt801_stil_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_stif4_d[g_detail_idx].stilseq = g_stif4_d_t.stilseq 
                  ) THEN
                  LET gs_keys[01] = g_stie_m.stiedocno
                  LET gs_keys[gs_keys.getLength()+1] = g_stif4_d_t.stilseq
                  CALL astt801_key_update_b(gs_keys,'stil_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stie_m),util.JSON.stringify(g_stif4_d_t)
               LET g_log2 = util.JSON.stringify(g_stie_m),util.JSON.stringify(g_stif4_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page6修改後 name="input.body4.a_update"
               {<point name="input.body4.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stilseq
            #add-point:BEFORE FIELD stilseq name="input.b.page4.stilseq"
            {<point name="input.b.page4.stilseq" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stilseq
            
            #add-point:AFTER FIELD stilseq name="input.a.page4.stilseq"
            {<point name="input.a.page4.stilseq" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stilseq
            #add-point:ON CHANGE stilseq name="input.g.page4.stilseq"
            {<point name="input.g.page4.stilseq" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stil001
            #add-point:BEFORE FIELD stil001 name="input.b.page4.stil001"
            {<point name="input.b.page4.stil001" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stil001
            
            #add-point:AFTER FIELD stil001 name="input.a.page4.stil001"
            {<point name="input.a.page4.stil001" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stil001
            #add-point:ON CHANGE stil001 name="input.g.page4.stil001"
            {<point name="input.g.page4.stil001" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stil002
            #add-point:BEFORE FIELD stil002 name="input.b.page4.stil002"
            {<point name="input.b.page4.stil002" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stil002
            
            #add-point:AFTER FIELD stil002 name="input.a.page4.stil002"
            {<point name="input.a.page4.stil002" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stil002
            #add-point:ON CHANGE stil002 name="input.g.page4.stil002"
            {<point name="input.g.page4.stil002" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stil003
            
            #add-point:AFTER FIELD stil003 name="input.a.page4.stil003"
            {<point name="input.a.page4.stil003" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stil003
            #add-point:BEFORE FIELD stil003 name="input.b.page4.stil003"
            {<point name="input.b.page4.stil003" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stil003
            #add-point:ON CHANGE stil003 name="input.g.page4.stil003"
            {<point name="input.g.page4.stil003" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stil004
            #add-point:BEFORE FIELD stil004 name="input.b.page4.stil004"
            {<point name="input.b.page4.stil004" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stil004
            
            #add-point:AFTER FIELD stil004 name="input.a.page4.stil004"
            {<point name="input.a.page4.stil004" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stil004
            #add-point:ON CHANGE stil004 name="input.g.page4.stil004"
            {<point name="input.g.page4.stil004" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stil005
            #add-point:BEFORE FIELD stil005 name="input.b.page4.stil005"
            {<point name="input.b.page4.stil005" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stil005
            
            #add-point:AFTER FIELD stil005 name="input.a.page4.stil005"
            {<point name="input.a.page4.stil005" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stil005
            #add-point:ON CHANGE stil005 name="input.g.page4.stil005"
            {<point name="input.g.page4.stil005" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stil006
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_stif4_d[l_ac].stil006,"0","0","","","azz-00079",1) THEN
               NEXT FIELD stil006
            END IF 



            #add-point:AFTER FIELD stil006 name="input.a.page4.stil006"
            {<point name="input.a.page4.stil006" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stil006
            #add-point:BEFORE FIELD stil006 name="input.b.page4.stil006"
            {<point name="input.b.page4.stil006" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stil006
            #add-point:ON CHANGE stil006 name="input.g.page4.stil006"
            {<point name="input.g.page4.stil006" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stil007
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_stif4_d[l_ac].stil007,"0","1","","","azz-00079",1) THEN
               NEXT FIELD stil007
            END IF 



            #add-point:AFTER FIELD stil007 name="input.a.page4.stil007"
            {<point name="input.a.page4.stil007" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stil007
            #add-point:BEFORE FIELD stil007 name="input.b.page4.stil007"
            {<point name="input.b.page4.stil007" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stil007
            #add-point:ON CHANGE stil007 name="input.g.page4.stil007"
            {<point name="input.g.page4.stil007" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stil008
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_stif4_d[l_ac].stil008,"0","1","","","azz-00079",1) THEN
               NEXT FIELD stil008
            END IF 



            #add-point:AFTER FIELD stil008 name="input.a.page4.stil008"
            {<point name="input.a.page4.stil008" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stil008
            #add-point:BEFORE FIELD stil008 name="input.b.page4.stil008"
            {<point name="input.b.page4.stil008" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stil008
            #add-point:ON CHANGE stil008 name="input.g.page4.stil008"
            {<point name="input.g.page4.stil008" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stilsite
            #add-point:BEFORE FIELD stilsite name="input.b.page4.stilsite"
            {<point name="input.b.page4.stilsite" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stilsite
            
            #add-point:AFTER FIELD stilsite name="input.a.page4.stilsite"
            {<point name="input.a.page4.stilsite" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stilsite
            #add-point:ON CHANGE stilsite name="input.g.page4.stilsite"
            {<point name="input.g.page4.stilsite" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stilunit
            #add-point:BEFORE FIELD stilunit name="input.b.page4.stilunit"
            {<point name="input.b.page4.stilunit" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stilunit
            
            #add-point:AFTER FIELD stilunit name="input.a.page4.stilunit"
            {<point name="input.a.page4.stilunit" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stilunit
            #add-point:ON CHANGE stilunit name="input.g.page4.stilunit"
            {<point name="input.g.page4.stilunit" />}
            #END add-point 



                  #Ctrlp:input.c.page4.stilseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stilseq
            #add-point:ON ACTION controlp INFIELD stilseq name="input.c.page4.stilseq"
            {<point name="input.c.page4.stilseq" />}
            #END add-point


         #Ctrlp:input.c.page4.stil001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stil001
            #add-point:ON ACTION controlp INFIELD stil001 name="input.c.page4.stil001"
            {<point name="input.c.page4.stil001" />}
            #END add-point


         #Ctrlp:input.c.page4.stil002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stil002
            #add-point:ON ACTION controlp INFIELD stil002 name="input.c.page4.stil002"
            {<point name="input.c.page4.stil002" />}
            #END add-point


         #Ctrlp:input.c.page4.stil003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stil003
            #add-point:ON ACTION controlp INFIELD stil003 name="input.c.page4.stil003"
            {<point name="input.c.page4.stil003" />}
            #END add-point


         #Ctrlp:input.c.page4.stil004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stil004
            #add-point:ON ACTION controlp INFIELD stil004 name="input.c.page4.stil004"
            {<point name="input.c.page4.stil004" />}
            #END add-point


         #Ctrlp:input.c.page4.stil005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stil005
            #add-point:ON ACTION controlp INFIELD stil005 name="input.c.page4.stil005"
            {<point name="input.c.page4.stil005" />}
            #END add-point


         #Ctrlp:input.c.page4.stil006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stil006
            #add-point:ON ACTION controlp INFIELD stil006 name="input.c.page4.stil006"
            {<point name="input.c.page4.stil006" />}
            #END add-point


         #Ctrlp:input.c.page4.stil007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stil007
            #add-point:ON ACTION controlp INFIELD stil007 name="input.c.page4.stil007"
            {<point name="input.c.page4.stil007" />}
            #END add-point


         #Ctrlp:input.c.page4.stil008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stil008
            #add-point:ON ACTION controlp INFIELD stil008 name="input.c.page4.stil008"
            {<point name="input.c.page4.stil008" />}
            #END add-point


         #Ctrlp:input.c.page4.stilsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stilsite
            #add-point:ON ACTION controlp INFIELD stilsite name="input.c.page4.stilsite"
            {<point name="input.c.page4.stilsite" />}
            #END add-point


         #Ctrlp:input.c.page4.stilunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stilunit
            #add-point:ON ACTION controlp INFIELD stilunit name="input.c.page4.stilunit"
            {<point name="input.c.page4.stilunit" />}
            #END add-point



 
         AFTER ROW
            #add-point:單身page6 after_row name="input.body4.after_row"
            {<point name="input.body4.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_stif4_d[l_ac].* = g_stif4_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astt801_bcl6
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astt801_unlock_b("stil_t","'6'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page6 after_row2 name="input.body4.after_row2"
            {<point name="input.body4.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body4.after_input"
            {<point name="input.body4.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_stif4_d[li_reproduce_target].* = g_stif4_d[li_reproduce].*

               LET g_stif4_d[li_reproduce_target].stilseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_stif4_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_stif4_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_stif6_d FROM s_detail6.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效!
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_8)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body6.before_input2"
            {<point name="input.body6.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stif6_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 

            CALL astt801_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'8',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_stif6_d.getLength()
            #add-point:資料輸入前 name="input.body6.before_input"
            {<point name="input.body6.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stif6_d[l_ac].* TO NULL 
            INITIALIZE g_stif6_d_t.* TO NULL 
            INITIALIZE g_stif6_d_o.* TO NULL 
            #公用欄位給值(單身8)
            
            #自定義預設值(單身8)
                  LET g_stif6_d[l_ac].stikacti = "Y"
      LET g_stif6_d[l_ac].stik004 = "N"
      LET g_stif6_d[l_ac].stik005 = "N"

            #add-point:modify段before備份 name="input.body6.insert.before_bak"
            {<point name="input.body6.insert.before_bak"/>}
            #end add-point
            LET g_stif6_d_t.* = g_stif6_d[l_ac].*     #新輸入資料
            LET g_stif6_d_o.* = g_stif6_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astt801_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body6.insert.after_set_entry_b"
            {<point name="input.body6.insert.after_set_entry_b"/>}
            #end add-point
            CALL astt801_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stif6_d[li_reproduce_target].* = g_stif6_d[li_reproduce].*

               LET g_stif6_d[li_reproduce_target].stikseq = NULL
            END IF
            

            #add-point:modify段before insert name="input.body6.before_insert"
            {<point name="input.body6.before_insert"/>}
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body6.before_row2"
            {<point name="input.body6.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[8] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 8
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astt801_cl USING g_enterprise,g_stie_m.stiedocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astt801_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astt801_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_stif6_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stif6_d[l_ac].stikseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_stif6_d_t.* = g_stif6_d[l_ac].*  #BACKUP
               LET g_stif6_d_o.* = g_stif6_d[l_ac].*  #BACKUP
               CALL astt801_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body6.after_set_entry_b"
               {<point name="input.body6.after_set_entry_b"/>}
               #end add-point  
               CALL astt801_set_no_entry_b(l_cmd)
               IF NOT astt801_lock_b("stik_t","'8'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astt801_bcl8 INTO g_stif6_d[l_ac].stikacti,g_stif6_d[l_ac].stikseq,g_stif6_d[l_ac].stik001,g_stif6_d[l_ac].stik002,g_stif6_d[l_ac].stik004,g_stif6_d[l_ac].stik003,g_stif6_d[l_ac].stik005,g_stif6_d[l_ac].stiksite,g_stif6_d[l_ac].stikunit
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stif6_d_mask_o[l_ac].* =  g_stif6_d[l_ac].*
                  CALL astt801_stik_t_mask()
                  LET g_stif6_d_mask_n[l_ac].* =  g_stif6_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astt801_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body6.before_row"
            {<point name="input.body6.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            

            #其他table進行lock
            

            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body6.after_delete_d"
               {<point name="input.body6.after_delete_d"/>}
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body6.b_delete_ask"
               {<point name="input.body6.b_delete_ask" />}
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身8刪除前 name="input.body6.b_delete"
               {<point name="input.body6.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stie_m.stiedocno
               LET gs_keys[gs_keys.getLength()+1] = g_stif6_d_t.stikseq
            
               #刪除同層單身
               IF NOT astt801_delete_b('stik_t',gs_keys,"'8'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt801_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astt801_key_delete_b(gs_keys,'stik_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt801_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               

               
               #add-point:單身8刪除中 name="input.body6.m_delete"
               {<point name="input.body6.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astt801_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身8刪除後 name="input.body6.a_delete"
               {<point name="input.body6.a_delete"/>}
               #end add-point
               LET l_count = g_stif_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body6.after_delete"
               {<point name="input.body6.after_delete"/>}
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stif6_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身8新增前 name="input.body6.b_a_insert"
            {<point name="input.body6.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stik_t 
             WHERE stikent = g_enterprise AND stikdocno = g_stie_m.stiedocno
               AND stikseq = g_stif6_d[l_ac].stikseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身8新增前 name="input.body6.b_insert"
               {<point name="input.body6.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stie_m.stiedocno
               LET gs_keys[2] = g_stif6_d[g_detail_idx].stikseq
               CALL astt801_insert_b('stik_t',gs_keys,"'8'")
                           
               #add-point:單身新增後8 name="input.body6.a_insert"
               {<point name="input.body6.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_stif_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stik_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astt801_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body6.after_insert"
               {<point name="input.body6.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_stif6_d[l_ac].* = g_stif6_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astt801_bcl8
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_stif6_d[l_ac].* = g_stif6_d_t.*
            ELSE
               #add-point:單身page8修改前 name="input.body6.b_update"
               {<point name="input.body6.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身8)
               
               
               #將遮罩欄位還原
               CALL astt801_stik_t_mask_restore('restore_mask_o')
                              
               UPDATE stik_t SET (stikdocno,stikacti,stikseq,stik001,stik002,stik004,stik003,stik005,stiksite,stikunit) = (g_stie_m.stiedocno,g_stif6_d[l_ac].stikacti,g_stif6_d[l_ac].stikseq,g_stif6_d[l_ac].stik001,g_stif6_d[l_ac].stik002,g_stif6_d[l_ac].stik004,g_stif6_d[l_ac].stik003,g_stif6_d[l_ac].stik005,g_stif6_d[l_ac].stiksite,g_stif6_d[l_ac].stikunit) #自訂欄位頁簽
                WHERE stikent = g_enterprise AND stikdocno = g_stie_m.stiedocno
                  AND stikseq = g_stif6_d_t.stikseq #項次 
                  
               #add-point:單身page8修改中 name="input.body6.m_update"
               {<point name="input.body6.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_stif6_d[l_ac].* = g_stif6_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stik_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_stif6_d[l_ac].* = g_stif6_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stik_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stie_m.stiedocno
               LET gs_keys_bak[1] = g_stiedocno_t
               LET gs_keys[2] = g_stif6_d[g_detail_idx].stikseq
               LET gs_keys_bak[2] = g_stif6_d_t.stikseq
               CALL astt801_update_b('stik_t',gs_keys,gs_keys_bak,"'8'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astt801_stik_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_stif6_d[g_detail_idx].stikseq = g_stif6_d_t.stikseq 
                  ) THEN
                  LET gs_keys[01] = g_stie_m.stiedocno
                  LET gs_keys[gs_keys.getLength()+1] = g_stif6_d_t.stikseq
                  CALL astt801_key_update_b(gs_keys,'stik_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stie_m),util.JSON.stringify(g_stif6_d_t)
               LET g_log2 = util.JSON.stringify(g_stie_m),util.JSON.stringify(g_stif6_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page8修改後 name="input.body6.a_update"
               {<point name="input.body6.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stikacti
            #add-point:BEFORE FIELD stikacti name="input.b.page6.stikacti"
            {<point name="input.b.page6.stikacti" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stikacti
            
            #add-point:AFTER FIELD stikacti name="input.a.page6.stikacti"
            {<point name="input.a.page6.stikacti" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stikacti
            #add-point:ON CHANGE stikacti name="input.g.page6.stikacti"
            {<point name="input.g.page6.stikacti" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stikseq
            #add-point:BEFORE FIELD stikseq name="input.b.page6.stikseq"
            {<point name="input.b.page6.stikseq" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stikseq
            
            #add-point:AFTER FIELD stikseq name="input.a.page6.stikseq"
            {<point name="input.a.page6.stikseq" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stikseq
            #add-point:ON CHANGE stikseq name="input.g.page6.stikseq"
            {<point name="input.g.page6.stikseq" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stik001
            #add-point:BEFORE FIELD stik001 name="input.b.page6.stik001"
            {<point name="input.b.page6.stik001" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stik001
            
            #add-point:AFTER FIELD stik001 name="input.a.page6.stik001"
            {<point name="input.a.page6.stik001" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stik001
            #add-point:ON CHANGE stik001 name="input.g.page6.stik001"
            {<point name="input.g.page6.stik001" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stik002
            
            #add-point:AFTER FIELD stik002 name="input.a.page6.stik002"
            {<point name="input.a.page6.stik002" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stik002
            #add-point:BEFORE FIELD stik002 name="input.b.page6.stik002"
            {<point name="input.b.page6.stik002" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stik002
            #add-point:ON CHANGE stik002 name="input.g.page6.stik002"
            {<point name="input.g.page6.stik002" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stik004
            #add-point:BEFORE FIELD stik004 name="input.b.page6.stik004"
            {<point name="input.b.page6.stik004" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stik004
            
            #add-point:AFTER FIELD stik004 name="input.a.page6.stik004"
            {<point name="input.a.page6.stik004" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stik004
            #add-point:ON CHANGE stik004 name="input.g.page6.stik004"
            {<point name="input.g.page6.stik004" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stik003
            
            #add-point:AFTER FIELD stik003 name="input.a.page6.stik003"
            {<point name="input.a.page6.stik003" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stik003
            #add-point:BEFORE FIELD stik003 name="input.b.page6.stik003"
            {<point name="input.b.page6.stik003" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stik003
            #add-point:ON CHANGE stik003 name="input.g.page6.stik003"
            {<point name="input.g.page6.stik003" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stik005
            #add-point:BEFORE FIELD stik005 name="input.b.page6.stik005"
            {<point name="input.b.page6.stik005" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stik005
            
            #add-point:AFTER FIELD stik005 name="input.a.page6.stik005"
            {<point name="input.a.page6.stik005" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stik005
            #add-point:ON CHANGE stik005 name="input.g.page6.stik005"
            {<point name="input.g.page6.stik005" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stiksite
            #add-point:BEFORE FIELD stiksite name="input.b.page6.stiksite"
            {<point name="input.b.page6.stiksite" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stiksite
            
            #add-point:AFTER FIELD stiksite name="input.a.page6.stiksite"
            {<point name="input.a.page6.stiksite" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stiksite
            #add-point:ON CHANGE stiksite name="input.g.page6.stiksite"
            {<point name="input.g.page6.stiksite" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stikunit
            #add-point:BEFORE FIELD stikunit name="input.b.page6.stikunit"
            {<point name="input.b.page6.stikunit" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stikunit
            
            #add-point:AFTER FIELD stikunit name="input.a.page6.stikunit"
            {<point name="input.a.page6.stikunit" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stikunit
            #add-point:ON CHANGE stikunit name="input.g.page6.stikunit"
            {<point name="input.g.page6.stikunit" />}
            #END add-point 



                  #Ctrlp:input.c.page6.stikacti
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stikacti
            #add-point:ON ACTION controlp INFIELD stikacti name="input.c.page6.stikacti"
            {<point name="input.c.page6.stikacti" />}
            #END add-point


         #Ctrlp:input.c.page6.stikseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stikseq
            #add-point:ON ACTION controlp INFIELD stikseq name="input.c.page6.stikseq"
            {<point name="input.c.page6.stikseq" />}
            #END add-point


         #Ctrlp:input.c.page6.stik001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stik001
            #add-point:ON ACTION controlp INFIELD stik001 name="input.c.page6.stik001"
            {<point name="input.c.page6.stik001" />}
            #END add-point


         #Ctrlp:input.c.page6.stik002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stik002
            #add-point:ON ACTION controlp INFIELD stik002 name="input.c.page6.stik002"
            {<point name="input.c.page6.stik002" />}
            #END add-point


         #Ctrlp:input.c.page6.stik004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stik004
            #add-point:ON ACTION controlp INFIELD stik004 name="input.c.page6.stik004"
            {<point name="input.c.page6.stik004" />}
            #END add-point


         #Ctrlp:input.c.page6.stik003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stik003
            #add-point:ON ACTION controlp INFIELD stik003 name="input.c.page6.stik003"
            {<point name="input.c.page6.stik003" />}
            #END add-point


         #Ctrlp:input.c.page6.stik005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stik005
            #add-point:ON ACTION controlp INFIELD stik005 name="input.c.page6.stik005"
            {<point name="input.c.page6.stik005" />}
            #END add-point


         #Ctrlp:input.c.page6.stiksite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stiksite
            #add-point:ON ACTION controlp INFIELD stiksite name="input.c.page6.stiksite"
            {<point name="input.c.page6.stiksite" />}
            #END add-point


         #Ctrlp:input.c.page6.stikunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stikunit
            #add-point:ON ACTION controlp INFIELD stikunit name="input.c.page6.stikunit"
            {<point name="input.c.page6.stikunit" />}
            #END add-point



 
         AFTER ROW
            #add-point:單身page8 after_row name="input.body6.after_row"
            {<point name="input.body6.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_stif6_d[l_ac].* = g_stif6_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astt801_bcl8
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astt801_unlock_b("stik_t","'8'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page8 after_row2 name="input.body6.after_row2"
            {<point name="input.body6.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body6.after_input"
            {<point name="input.body6.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_stif6_d[li_reproduce_target].* = g_stif6_d[li_reproduce].*

               LET g_stif6_d[li_reproduce_target].stikseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_stif6_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_stif6_d.getLength()+1
            END IF
            
      END INPUT

      
      INPUT ARRAY g_stif9_d FROM s_detail9.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效!
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_10)
         
        
         BEFORE INPUT
            #先將上層單身的idx放入g_detail_idx
            LET g_detail_idx_tmp = g_detail_idx
            LET g_detail_idx = g_detail_idx_list[1]
            #檢查上層單身是否為空
            IF g_detail_idx = 0 OR g_stif_d.getLength() = 0 THEN
               NEXT FIELD stifseq
            END IF
            #檢查上層單身是否有資料
            IF cl_null(g_stif_d[g_detail_idx].stifseq) THEN
               NEXT FIELD stifseq
            END IF
            #add-point:資料輸入前 name="input.body9.before_input2"
            {<point name="input.body9.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stif9_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 

            #如果一直都在單身2則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'10',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_stif9_d.getLength()
            #add-point:資料輸入前 name="input.body9.before_input"
            {<point name="input.body9.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stif9_d[l_ac].* TO NULL 
            INITIALIZE g_stif9_d_t.* TO NULL 
            INITIALIZE g_stif9_d_o.* TO NULL 
            #公用欄位給值(單身10)
            
            #自定義預設值(單身10)
            
            #add-point:modify段before備份 name="input.body9.insert.before_bak"
            {<point name="input.body9.insert.before_bak"/>}
            #end add-point
            LET g_stif9_d_t.* = g_stif9_d[l_ac].*     #新輸入資料
            LET g_stif9_d_o.* = g_stif9_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astt801_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body9.insert.after_set_entry_b"
            {<point name="input.body9.insert.after_set_entry_b"/>}
            #end add-point
            CALL astt801_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stif9_d[li_reproduce_target].* = g_stif9_d[li_reproduce].*

               LET g_stif9_d[li_reproduce_target].stigseq1 = NULL
            END IF
            

            #add-point:modify段before insert name="input.body9.before_insert"
            {<point name="input.body9.before_insert"/>}
            #end add-point  
            
         BEFORE ROW
            #add-point:modify段before row2 name="input.body9.before_row2"
            {<point name="input.body9.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx2 = l_ac
            LET g_detail_idx_list[10] = l_ac
            LET g_current_page = 10
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astt801_cl USING g_enterprise,g_stie_m.stiedocno
            #(ver:78) ---start---
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astt801_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE
               LET g_errparam.popup = TRUE 
               CLOSE astt801_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            #(ver:78) --- end ---
            OPEN astt801_bcl USING g_enterprise,g_stie_m.stiedocno,g_stif_d[g_detail_idx].stifseq
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astt801_bcl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astt801_cl
               CLOSE astt801_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_stif9_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stif9_d[l_ac].stigseq1 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_stif9_d_t.* = g_stif9_d[l_ac].*  #BACKUP
               LET g_stif9_d_o.* = g_stif9_d[l_ac].*  #BACKUP
               CALL astt801_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body9.after_set_entry_b"
               {<point name="input.body9.after_set_entry_b"/>}
               #end add-point  
               CALL astt801_set_no_entry_b(l_cmd)
               IF NOT astt801_lock_b("stig_t","'10'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astt801_bcl10 INTO g_stif9_d[l_ac].stigsite,g_stif9_d[l_ac].stigunit,g_stif9_d[l_ac].stigseq1,g_stif9_d[l_ac].stig001,g_stif9_d[l_ac].stig002,g_stif9_d[l_ac].stig003,g_stif9_d[l_ac].stig004,g_stif9_d[l_ac].stig006
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stif9_d_mask_o[l_ac].* =  g_stif9_d[l_ac].*
                  CALL astt801_stig_t_mask()
                  LET g_stif9_d_mask_n[l_ac].* =  g_stif9_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astt801_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body9.before_row"
            {<point name="input.body9.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            

            #其他table進行lock
            

            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body9.after_delete_d"
               {<point name="input.body9.after_delete_d"/>}
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body9.b_delete_ask"
               {<point name="input.body9.b_delete_ask" />}
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身10刪除前 name="input.body9.b_delete"
               {<point name="input.body9.b_delete" mark="Y"/>}
               #end add-point    
 
               #取得該筆資料key值
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stie_m.stiedocno
               LET gs_keys[2] = g_stif_d[g_detail_idx].stifseq
               LET gs_keys[3] = g_stif9_d_t.stigseq1

 
               #刪除同層單身
               IF NOT astt801_delete_b('stig_t',gs_keys,"'10'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt801_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               

               
               #add-point:單身10刪除中 name="input.body9.m_delete"
               {<point name="input.body9.m_delete"/>}
               #end add-point   
               
               CALL s_transaction_end('Y','0')
               CLOSE astt801_bcl
                  
               LET g_rec_b = g_rec_b-1
               #add-point:單身10刪除後 name="input.body9.a_delete"
               {<point name="input.body9.a_delete"/>}
               #end add-point
 
               LET l_count = g_stif_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body9.after_delete"
               {<point name="input.body9.after_delete"/>}
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stif9_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
         
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身10新增前 name="input.body9.b_a_insert"
            {<point name="input.body9.b_a_insert"/>}
            #end add-point
    
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stig_t 
             WHERE stigent = g_enterprise AND stigdocno = g_stie_m.stiedocno AND stigseq = g_stif_d[g_detail_idx].stifseq AND stigseq1 = g_stif9_d[g_detail_idx2].stigseq1
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身10新增前 name="input.body9.b_insert"
               {<point name="input.body9.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stie_m.stiedocno
               LET gs_keys[2] = g_stif_d[g_detail_idx].stifseq
               LET gs_keys[3] = g_stif9_d[g_detail_idx2].stigseq1
               CALL astt801_insert_b('stig_t',gs_keys,"'10'")
                           
               #add-point:單身新增後10 name="input.body9.a_insert"
               {<point name="input.body9.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_stif_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stig_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astt801_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body9.after_insert"
               {<point name="input.body9.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
            #還原g_detail_idx
            LET g_detail_idx = g_detail_idx_tmp
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_stif9_d[l_ac].* = g_stif9_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astt801_bcl10
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_stif9_d[l_ac].* = g_stif9_d_t.*
            ELSE
               #add-point:單身page10修改前 name="input.body9.b_update"
               {<point name="input.body9.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身10)
               
               
               #將遮罩欄位還原
               CALL astt801_stig_t_mask_restore('restore_mask_o')
               
               UPDATE stig_t SET (stigdocno,stigseq,stigsite,stigunit,stigseq1,stig001,stig002,stig003,stig004,stig006) = (g_stie_m.stiedocno,g_stif_d[g_detail_idx].stifseq,g_stif9_d[l_ac].stigsite,g_stif9_d[l_ac].stigunit,g_stif9_d[l_ac].stigseq1,g_stif9_d[l_ac].stig001,g_stif9_d[l_ac].stig002,g_stif9_d[l_ac].stig003,g_stif9_d[l_ac].stig004,g_stif9_d[l_ac].stig006) #自訂欄位頁簽
                WHERE stigent = g_enterprise AND stigdocno = g_stiedocno_t AND stigseq = g_stif_d[g_detail_idx].stifseq AND stigseq1 = g_stif9_d_t.stigseq1
                  
               #add-point:單身page10修改中 name="input.body9.m_update"
               {<point name="input.body9.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_stif9_d[l_ac].* = g_stif9_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stig_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_stif9_d[l_ac].* = g_stif9_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stig_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stie_m.stiedocno
               LET gs_keys_bak[1] = g_stiedocno_t
               LET gs_keys[2] = g_stif_d[g_detail_idx].stifseq
               LET gs_keys_bak[2] = g_stif_d[g_detail_idx].stifseq
               LET gs_keys[3] = g_stif9_d[g_detail_idx2].stigseq1
               LET gs_keys_bak[3] = g_stif9_d_t.stigseq1
               CALL astt801_update_b('stig_t',gs_keys,gs_keys_bak,"'10'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astt801_stig_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stie_m),util.JSON.stringify(g_stif9_d_t)
               LET g_log2 = util.JSON.stringify(g_stie_m),util.JSON.stringify(g_stif9_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page10修改後 name="input.body9.a_update"
               {<point name="input.body9.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stigsite
            #add-point:BEFORE FIELD stigsite name="input.b.page9.stigsite"
            {<point name="input.b.page9.stigsite" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stigsite
            
            #add-point:AFTER FIELD stigsite name="input.a.page9.stigsite"
            {<point name="input.a.page9.stigsite" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stigsite
            #add-point:ON CHANGE stigsite name="input.g.page9.stigsite"
            {<point name="input.g.page9.stigsite" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stigunit
            #add-point:BEFORE FIELD stigunit name="input.b.page9.stigunit"
            {<point name="input.b.page9.stigunit" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stigunit
            
            #add-point:AFTER FIELD stigunit name="input.a.page9.stigunit"
            {<point name="input.a.page9.stigunit" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stigunit
            #add-point:ON CHANGE stigunit name="input.g.page9.stigunit"
            {<point name="input.g.page9.stigunit" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stigseq1
            #add-point:BEFORE FIELD stigseq1 name="input.b.page9.stigseq1"
            {<point name="input.b.page9.stigseq1" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stigseq1
            
            #add-point:AFTER FIELD stigseq1 name="input.a.page9.stigseq1"
            {<point name="input.a.page9.stigseq1" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stigseq1
            #add-point:ON CHANGE stigseq1 name="input.g.page9.stigseq1"
            {<point name="input.g.page9.stigseq1" />}
            #END add-point 


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stig001
            #add-point:BEFORE FIELD stig001 name="input.b.page9.stig001"
            {<point name="input.b.page9.stig001" />}
            #END add-point


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stig001
            
            #add-point:AFTER FIELD stig001 name="input.a.page9.stig001"
            {<point name="input.a.page9.stig001" />}
            #END add-point
            


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stig001
            #add-point:ON CHANGE stig001 name="input.g.page9.stig001"
            {<point name="input.g.page9.stig001" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stig002
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_stif9_d[l_ac].stig002,"0","0","","","azz-00079",1) THEN
               NEXT FIELD stig002
            END IF 



            #add-point:AFTER FIELD stig002 name="input.a.page9.stig002"
            {<point name="input.a.page9.stig002" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stig002
            #add-point:BEFORE FIELD stig002 name="input.b.page9.stig002"
            {<point name="input.b.page9.stig002" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stig002
            #add-point:ON CHANGE stig002 name="input.g.page9.stig002"
            {<point name="input.g.page9.stig002" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stig003
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_stif9_d[l_ac].stig003,"0","0","","","azz-00079",1) THEN
               NEXT FIELD stig003
            END IF 



            #add-point:AFTER FIELD stig003 name="input.a.page9.stig003"
            {<point name="input.a.page9.stig003" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stig003
            #add-point:BEFORE FIELD stig003 name="input.b.page9.stig003"
            {<point name="input.b.page9.stig003" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stig003
            #add-point:ON CHANGE stig003 name="input.g.page9.stig003"
            {<point name="input.g.page9.stig003" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stig004
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_stif9_d[l_ac].stig004,"0","0","","","azz-00079",1) THEN
               NEXT FIELD stig004
            END IF 



            #add-point:AFTER FIELD stig004 name="input.a.page9.stig004"
            {<point name="input.a.page9.stig004" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stig004
            #add-point:BEFORE FIELD stig004 name="input.b.page9.stig004"
            {<point name="input.b.page9.stig004" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stig004
            #add-point:ON CHANGE stig004 name="input.g.page9.stig004"
            {<point name="input.g.page9.stig004" />}
            #END add-point 


         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stig006
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_stif9_d[l_ac].stig006,"0","0","","","azz-00079",1) THEN
               NEXT FIELD stig006
            END IF 



            #add-point:AFTER FIELD stig006 name="input.a.page9.stig006"
            {<point name="input.a.page9.stig006" />}
            #END add-point
            


         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stig006
            #add-point:BEFORE FIELD stig006 name="input.b.page9.stig006"
            {<point name="input.b.page9.stig006" />}
            #END add-point


         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stig006
            #add-point:ON CHANGE stig006 name="input.g.page9.stig006"
            {<point name="input.g.page9.stig006" />}
            #END add-point 



                  #Ctrlp:input.c.page9.stigsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stigsite
            #add-point:ON ACTION controlp INFIELD stigsite name="input.c.page9.stigsite"
            {<point name="input.c.page9.stigsite" />}
            #END add-point


         #Ctrlp:input.c.page9.stigunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stigunit
            #add-point:ON ACTION controlp INFIELD stigunit name="input.c.page9.stigunit"
            {<point name="input.c.page9.stigunit" />}
            #END add-point


         #Ctrlp:input.c.page9.stigseq1
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stigseq1
            #add-point:ON ACTION controlp INFIELD stigseq1 name="input.c.page9.stigseq1"
            {<point name="input.c.page9.stigseq1" />}
            #END add-point


         #Ctrlp:input.c.page9.stig001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stig001
            #add-point:ON ACTION controlp INFIELD stig001 name="input.c.page9.stig001"
            {<point name="input.c.page9.stig001" />}
            #END add-point


         #Ctrlp:input.c.page9.stig002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stig002
            #add-point:ON ACTION controlp INFIELD stig002 name="input.c.page9.stig002"
            {<point name="input.c.page9.stig002" />}
            #END add-point


         #Ctrlp:input.c.page9.stig003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stig003
            #add-point:ON ACTION controlp INFIELD stig003 name="input.c.page9.stig003"
            {<point name="input.c.page9.stig003" />}
            #END add-point


         #Ctrlp:input.c.page9.stig004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stig004
            #add-point:ON ACTION controlp INFIELD stig004 name="input.c.page9.stig004"
            {<point name="input.c.page9.stig004" />}
            #END add-point


         #Ctrlp:input.c.page9.stig006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stig006
            #add-point:ON ACTION controlp INFIELD stig006 name="input.c.page9.stig006"
            {<point name="input.c.page9.stig006" />}
            #END add-point



 
         AFTER ROW
            #add-point:單身page10_after_row name="input.body9.after_row"
            {<point name="input.body9.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_stif9_d[l_ac].* = g_stif9_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astt801_bcl10
               CLOSE astt801_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astt801_unlock_b("stig_t","'10'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page10_after_row2 name="input.body9.after_row2"
            {<point name="input.body9.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body9.after_input"
            {<point name="input.body9.after_input"/>}
            #end add-point  
 
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_stif9_d[li_reproduce_target].* = g_stif9_d[li_reproduce].*

               LET g_stif9_d[li_reproduce_target].stigseq1 = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_stif9_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_stif9_d.getLength()+1
            END IF
        
      END INPUT

      DISPLAY ARRAY g_stif11_d TO s_detail11.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL astt801_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail11")
            LET g_detail_idx = l_ac
            
            #add-point:page2, before row動作 name="input.body11.before_row"
            {<point name="input.body11.before_row"/>}
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail11")
            CALL astt801_idx_chk()
            LET g_current_page = 2
      
         #add-point:page2自定義行為 name="input.body11.action"
         {<point name="input.body11.action"/>}
         #end add-point
      
      END DISPLAY
      DISPLAY ARRAY g_stif13_d TO s_detail13.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL astt801_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail13")
            LET g_detail_idx = l_ac
            
            #add-point:page3, before row動作 name="input.body13.before_row"
            {<point name="input.body13.before_row"/>}
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail13")
            CALL astt801_idx_chk()
            LET g_current_page = 3
      
         #add-point:page3自定義行為 name="input.body13.action"
         {<point name="input.body13.action"/>}
         #end add-point
      
      END DISPLAY
      DISPLAY ARRAY g_stif5_d TO s_detail5.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL astt801_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail5")
            LET g_detail_idx = l_ac
            
            #add-point:page7, before row動作 name="input.body5.before_row"
            {<point name="input.body5.before_row"/>}
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'7',"))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail5")
            CALL astt801_idx_chk()
            LET g_current_page = 7
      
         #add-point:page7自定義行為 name="input.body5.action"
         {<point name="input.body5.action"/>}
         #end add-point
      
      END DISPLAY
      DISPLAY ARRAY g_stif7_d TO s_detail7.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL astt801_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail7")
            LET g_detail_idx = l_ac
            
            #add-point:page9, before row動作 name="input.body7.before_row"
            {<point name="input.body7.before_row"/>}
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'9',"))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail7")
            CALL astt801_idx_chk()
            LET g_current_page = 9
      
         #add-point:page9自定義行為 name="input.body7.action"
         {<point name="input.body7.action"/>}
         #end add-point
      
      END DISPLAY


{</section>}
 
{<section id="astt801.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1',"))      
         CALL DIALOG.setCurrentRow("s_detail11",g_idx_group.getValue("'2',"))
         CALL DIALOG.setCurrentRow("s_detail13",g_idx_group.getValue("'3',"))
         CALL DIALOG.setCurrentRow("s_detail2",g_idx_group.getValue("'4',"))
         CALL DIALOG.setCurrentRow("s_detail3",g_idx_group.getValue("'5',"))
         CALL DIALOG.setCurrentRow("s_detail4",g_idx_group.getValue("'6',"))
         CALL DIALOG.setCurrentRow("s_detail5",g_idx_group.getValue("'7',"))
         CALL DIALOG.setCurrentRow("s_detail6",g_idx_group.getValue("'8',"))
         CALL DIALOG.setCurrentRow("s_detail7",g_idx_group.getValue("'9',"))
         CALL DIALOG.setCurrentRow("s_detail9",g_idx_group.getValue("'10',"))

         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD stiedocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD stifseq
               WHEN "s_detail11"
                  NEXT FIELD stinsite
               WHEN "s_detail13"
                  NEXT FIELD stiosite
               WHEN "s_detail2"
                  NEXT FIELD stihseq
               WHEN "s_detail3"
                  NEXT FIELD stiiseq
               WHEN "s_detail4"
                  NEXT FIELD stilseq
               WHEN "s_detail5"
                  NEXT FIELD stijacti
               WHEN "s_detail6"
                  NEXT FIELD stikacti
               WHEN "s_detail7"
                  NEXT FIELD stimseq
               WHEN "s_detail9"
                  NEXT FIELD stigsite

               #add-point:input段modify_detail  name="input.modify_detail.other"
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         {<point name="input.after_dialog"/>}
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         {<point name="input.cancel"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
         LET g_detail_idx_list[4] = 1
         LET g_detail_idx_list[5] = 1
         LET g_detail_idx_list[6] = 1
         LET g_detail_idx_list[7] = 1
         LET g_detail_idx_list[8] = 1
         LET g_detail_idx_list[9] = 1
         LET g_detail_idx_list[10] = 1

         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail11",1)
         CALL g_curr_diag.setCurrentRow("s_detail13",1)
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
         CALL g_curr_diag.setCurrentRow("s_detail4",1)
         CALL g_curr_diag.setCurrentRow("s_detail5",1)
         CALL g_curr_diag.setCurrentRow("s_detail6",1)
         CALL g_curr_diag.setCurrentRow("s_detail7",1)
         CALL g_curr_diag.setCurrentRow("s_detail9",1)

         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         {<point name="input.close"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         {<point name="input.exit"/>}
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
         LET g_detail_idx_list[4] = 1
         LET g_detail_idx_list[5] = 1
         LET g_detail_idx_list[6] = 1
         LET g_detail_idx_list[7] = 1
         LET g_detail_idx_list[8] = 1
         LET g_detail_idx_list[9] = 1
         LET g_detail_idx_list[10] = 1

         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail11",1)
         CALL g_curr_diag.setCurrentRow("s_detail13",1)
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
         CALL g_curr_diag.setCurrentRow("s_detail4",1)
         CALL g_curr_diag.setCurrentRow("s_detail5",1)
         CALL g_curr_diag.setCurrentRow("s_detail6",1)
         CALL g_curr_diag.setCurrentRow("s_detail7",1)
         CALL g_curr_diag.setCurrentRow("s_detail9",1)

         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
{</section>}
 
{<section id="astt801.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION astt801_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   {<point name="show.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   {<point name="show.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL astt801_b_fill() #單身填充
      CALL astt801_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)



   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL astt801_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  



   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_stie_m_mask_o.* =  g_stie_m.*
   CALL astt801_stie_t_mask()
   LET g_stie_m_mask_n.* =  g_stie_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_stie_m.stiesite,g_stie_m.stiesite_desc,g_stie_m.stiedocdt,g_stie_m.stiedocno,g_stie_m.stie000,g_stie_m.stie001,g_stie_m.stie002,g_stie_m.stie200,g_stie_m.stie004,g_stie_m.stie005,g_stie_m.stie006,g_stie_m.stiestus,g_stie_m.stie007,g_stie_m.stie007_desc,g_stie_m.stie008,g_stie_m.stie008_desc,g_stie_m.stie010,g_stie_m.stie009,g_stie_m.stie011,g_stie_m.stie012,g_stie_m.stie013,g_stie_m.stie014,g_stie_m.stie015,g_stie_m.stie016,g_stie_m.stie017,g_stie_m.stie017_desc,g_stie_m.stie018,g_stie_m.stie018_desc,g_stie_m.stie003,g_stie_m.stie003_desc,g_stie_m.stie049,g_stie_m.stie019,g_stie_m.stie019_desc,g_stie_m.stie020,g_stie_m.stie020_desc,g_stie_m.stie021,g_stie_m.stie021_desc,g_stie_m.stie022,g_stie_m.stie022_desc,g_stie_m.stie027,g_stie_m.stie027_desc,g_stie_m.stie028,g_stie_m.stie028_desc,g_stie_m.stie029,g_stie_m.stie029_desc,g_stie_m.stie026,g_stie_m.stie023,g_stie_m.stie024,g_stie_m.stie025,g_stie_m.stie223,g_stie_m.stie224,g_stie_m.stie225,g_stie_m.stie030,g_stie_m.stie030_desc,g_stie_m.stie031,g_stie_m.stie031_desc,g_stie_m.stie032,g_stie_m.stie032_desc,g_stie_m.stie033,g_stie_m.stie034,g_stie_m.stie034_desc,g_stie_m.stie035,g_stie_m.stie035_desc,g_stie_m.stie036,g_stie_m.stie036_desc,g_stie_m.stie037,g_stie_m.stie038,g_stie_m.stie038_desc,g_stie_m.stie039,g_stie_m.stie039_desc,g_stie_m.stie040,g_stie_m.stie041,g_stie_m.stie042,g_stie_m.stie043,g_stie_m.stie044,g_stie_m.stie045,g_stie_m.stie046,g_stie_m.stie047,g_stie_m.stie048,g_stie_m.stie050,g_stie_m.stie051,g_stie_m.stie051_desc,g_stie_m.stie052,g_stie_m.stie053,g_stie_m.stie053_desc,g_stie_m.stieownid,g_stie_m.stieownid_desc,g_stie_m.stieowndp,g_stie_m.stieowndp_desc,g_stie_m.stiecrtid,g_stie_m.stiecrtid_desc,g_stie_m.stiecrtdp,g_stie_m.stiecrtdp_desc,g_stie_m.stiecrtdt,g_stie_m.stiemodid,g_stie_m.stiemodid_desc,g_stie_m.stiemoddt,g_stie_m.stiecnfid,g_stie_m.stiecnfid_desc,g_stie_m.stiecnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_stie_m.stiestus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "FP"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/final_pass.png")
         WHEN "FR"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/final_reject.png")
         WHEN "TP"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/trial_pass.png")
         WHEN "TR"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/trial_reject.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         
      END CASE



   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_stif_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_stif11_d.getLength()
      #add-point:show段單身reference name="show.body11.reference"
      {<point name="show.body11.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_stif13_d.getLength()
      #add-point:show段單身reference name="show.body13.reference"
      {<point name="show.body13.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_stif2_d.getLength()
      #add-point:show段單身reference name="show.body2.reference"
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_stif3_d.getLength()
      #add-point:show段單身reference name="show.body3.reference"
      {<point name="show.body3.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_stif4_d.getLength()
      #add-point:show段單身reference name="show.body4.reference"
      {<point name="show.body4.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_stif5_d.getLength()
      #add-point:show段單身reference name="show.body5.reference"
      {<point name="show.body5.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_stif6_d.getLength()
      #add-point:show段單身reference name="show.body6.reference"
      {<point name="show.body6.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_stif7_d.getLength()
      #add-point:show段單身reference name="show.body7.reference"
      {<point name="show.body7.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_stif9_d.getLength()
      #add-point:show段單身reference name="show.body9.reference"
      {<point name="show.body9.reference"/>}
      #end add-point
   END FOR

   
    
   
   #add-point:show段other name="show.other"
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL astt801_detail_show()
 
   #add-point:show段之後 name="show.after"
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
{</section>}
 
{<section id="astt801.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION astt801_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   {<point name="detail_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   {<point name="detail_show.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
{</section>}
 
{<section id="astt801.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION astt801_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   {<point name="reproduce.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE l_newno     LIKE stie_t.stiedocno 
   DEFINE l_oldno     LIKE stie_t.stiedocno 

   DEFINE l_master    RECORD LIKE stie_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE stif_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE stin_t.* #此變數樣板目前無使用

   DEFINE l_detail3    RECORD LIKE stio_t.* #此變數樣板目前無使用

   DEFINE l_detail4    RECORD LIKE stih_t.* #此變數樣板目前無使用

   DEFINE l_detail5    RECORD LIKE stii_t.* #此變數樣板目前無使用

   DEFINE l_detail6    RECORD LIKE stil_t.* #此變數樣板目前無使用

   DEFINE l_detail7    RECORD LIKE stij_t.* #此變數樣板目前無使用

   DEFINE l_detail8    RECORD LIKE stik_t.* #此變數樣板目前無使用

   DEFINE l_detail9    RECORD LIKE stim_t.* #此變數樣板目前無使用


   DEFINE l_detail10    RECORD LIKE stig_t.* #此變數樣板目前無使用


   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   {<point name="reproduce.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   {<point name="reproduce.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_stie_m.stiedocno IS NULL

   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_stiedocno_t = g_stie_m.stiedocno

    
   LET g_stie_m.stiedocno = ""

 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_stie_m.stieownid = g_user
      LET g_stie_m.stieowndp = g_dept
      LET g_stie_m.stiecrtid = g_user
      LET g_stie_m.stiecrtdp = g_dept 
      LET g_stie_m.stiecrtdt = cl_get_current()
      LET g_stie_m.stiemodid = g_user
      LET g_stie_m.stiemoddt = cl_get_current()
      LET g_stie_m.stiestus = 'N'



   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_stie_m.stiestus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "FP"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/final_pass.png")
         WHEN "FR"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/final_reject.png")
         WHEN "TP"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/trial_pass.png")
         WHEN "TR"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/trial_reject.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         
      END CASE



   
   #清空key欄位的desc
   
   
   CALL astt801_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_stie_m.* TO NULL
      INITIALIZE g_stif_d TO NULL
      INITIALIZE g_stif11_d TO NULL
      INITIALIZE g_stif13_d TO NULL
      INITIALIZE g_stif2_d TO NULL
      INITIALIZE g_stif3_d TO NULL
      INITIALIZE g_stif4_d TO NULL
      INITIALIZE g_stif5_d TO NULL
      INITIALIZE g_stif6_d TO NULL
      INITIALIZE g_stif7_d TO NULL
      INITIALIZE g_stif9_d TO NULL

      #add-point:複製取消後 name="reproduce.cancel"
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL astt801_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code = 9001 
      LET g_errparam.popup = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL astt801_set_act_visible()   
   CALL astt801_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_stiedocno_t = g_stie_m.stiedocno

   
   #組合新增資料的條件
   LET g_add_browse = " stieent = " ||g_enterprise|| " AND",
                      " stiedocno = '", g_stie_m.stiedocno, "' "

   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL astt801_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL astt801_idx_chk()
   
   LET g_data_owner = g_stie_m.stieownid      
   LET g_data_dept  = g_stie_m.stieowndp
   
   #功能已完成,通報訊息中心
   CALL astt801_msgcentre_notify('reproduce')
 
END FUNCTION
{</section>}
 
{<section id="astt801.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION astt801_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   {<point name="detail_reproduce.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE stif_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE stin_t.* #此變數樣板目前無使用

   DEFINE l_detail3    RECORD LIKE stio_t.* #此變數樣板目前無使用

   DEFINE l_detail4    RECORD LIKE stih_t.* #此變數樣板目前無使用

   DEFINE l_detail5    RECORD LIKE stii_t.* #此變數樣板目前無使用

   DEFINE l_detail6    RECORD LIKE stil_t.* #此變數樣板目前無使用

   DEFINE l_detail7    RECORD LIKE stij_t.* #此變數樣板目前無使用

   DEFINE l_detail8    RECORD LIKE stik_t.* #此變數樣板目前無使用

   DEFINE l_detail9    RECORD LIKE stim_t.* #此變數樣板目前無使用


   DEFINE l_detail10    RECORD LIKE stig_t.* #此變數樣板目前無使用


   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   {<point name="detail_reproduce.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   {<point name="detail_reproduce.pre_function"/>}
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE astt801_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stif_t
    WHERE stifent = g_enterprise AND stifdocno = g_stiedocno_t

    INTO TEMP astt801_detail
 
   #將key修正為調整後   
   UPDATE astt801_detail 
      #更新key欄位
      SET stifdocno = g_stie_m.stiedocno

      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO stif_t SELECT * FROM astt801_detail
   
   IF SQLCA.SQLCODE THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astt801_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table2.b_insert"
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stin_t 
    WHERE stinent = g_enterprise AND stindocno = g_stiedocno_t

    INTO TEMP astt801_detail
 
   #將key修正為調整後   
   UPDATE astt801_detail SET stindocno = g_stie_m.stiedocno

  
   #add-point:單身修改前 name="detail_reproduce.body.table2.b_update"
   {<point name="detail_reproduce.body.table2.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO stin_t SELECT * FROM astt801_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table2.m_insert"
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astt801_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table2.a_insert"
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point

   #add-point:單身複製前 name="detail_reproduce.body.table3.b_insert"
   {<point name="detail_reproduce.body.table3.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stio_t 
    WHERE stioent = g_enterprise AND stiodocno = g_stiedocno_t

    INTO TEMP astt801_detail
 
   #將key修正為調整後   
   UPDATE astt801_detail SET stiodocno = g_stie_m.stiedocno

  
   #add-point:單身修改前 name="detail_reproduce.body.table3.b_update"
   {<point name="detail_reproduce.body.table3.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO stio_t SELECT * FROM astt801_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table3.m_insert"
   {<point name="detail_reproduce.body.table3.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astt801_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table3.a_insert"
   {<point name="detail_reproduce.body.table3.a_insert"/>}
   #end add-point

   #add-point:單身複製前 name="detail_reproduce.body.table4.b_insert"
   {<point name="detail_reproduce.body.table4.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stih_t 
    WHERE stihent = g_enterprise AND stihdocno = g_stiedocno_t

    INTO TEMP astt801_detail
 
   #將key修正為調整後   
   UPDATE astt801_detail SET stihdocno = g_stie_m.stiedocno

  
   #add-point:單身修改前 name="detail_reproduce.body.table4.b_update"
   {<point name="detail_reproduce.body.table4.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO stih_t SELECT * FROM astt801_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table4.m_insert"
   {<point name="detail_reproduce.body.table4.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astt801_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table4.a_insert"
   {<point name="detail_reproduce.body.table4.a_insert"/>}
   #end add-point

   #add-point:單身複製前 name="detail_reproduce.body.table5.b_insert"
   {<point name="detail_reproduce.body.table5.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stii_t 
    WHERE stiient = g_enterprise AND stiidocno = g_stiedocno_t

    INTO TEMP astt801_detail
 
   #將key修正為調整後   
   UPDATE astt801_detail SET stiidocno = g_stie_m.stiedocno

  
   #add-point:單身修改前 name="detail_reproduce.body.table5.b_update"
   {<point name="detail_reproduce.body.table5.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO stii_t SELECT * FROM astt801_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table5.m_insert"
   {<point name="detail_reproduce.body.table5.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astt801_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table5.a_insert"
   {<point name="detail_reproduce.body.table5.a_insert"/>}
   #end add-point

   #add-point:單身複製前 name="detail_reproduce.body.table6.b_insert"
   {<point name="detail_reproduce.body.table6.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stil_t 
    WHERE stilent = g_enterprise AND stildocno = g_stiedocno_t

    INTO TEMP astt801_detail
 
   #將key修正為調整後   
   UPDATE astt801_detail SET stildocno = g_stie_m.stiedocno

  
   #add-point:單身修改前 name="detail_reproduce.body.table6.b_update"
   {<point name="detail_reproduce.body.table6.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO stil_t SELECT * FROM astt801_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table6.m_insert"
   {<point name="detail_reproduce.body.table6.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astt801_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table6.a_insert"
   {<point name="detail_reproduce.body.table6.a_insert"/>}
   #end add-point

   #add-point:單身複製前 name="detail_reproduce.body.table7.b_insert"
   {<point name="detail_reproduce.body.table7.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stij_t 
    WHERE stijent = g_enterprise AND stijdocno = g_stiedocno_t

    INTO TEMP astt801_detail
 
   #將key修正為調整後   
   UPDATE astt801_detail SET stijdocno = g_stie_m.stiedocno

  
   #add-point:單身修改前 name="detail_reproduce.body.table7.b_update"
   {<point name="detail_reproduce.body.table7.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO stij_t SELECT * FROM astt801_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table7.m_insert"
   {<point name="detail_reproduce.body.table7.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astt801_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table7.a_insert"
   {<point name="detail_reproduce.body.table7.a_insert"/>}
   #end add-point

   #add-point:單身複製前 name="detail_reproduce.body.table8.b_insert"
   {<point name="detail_reproduce.body.table8.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stik_t 
    WHERE stikent = g_enterprise AND stikdocno = g_stiedocno_t

    INTO TEMP astt801_detail
 
   #將key修正為調整後   
   UPDATE astt801_detail SET stikdocno = g_stie_m.stiedocno

  
   #add-point:單身修改前 name="detail_reproduce.body.table8.b_update"
   {<point name="detail_reproduce.body.table8.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO stik_t SELECT * FROM astt801_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table8.m_insert"
   {<point name="detail_reproduce.body.table8.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astt801_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table8.a_insert"
   {<point name="detail_reproduce.body.table8.a_insert"/>}
   #end add-point

   #add-point:單身複製前 name="detail_reproduce.body.table9.b_insert"
   {<point name="detail_reproduce.body.table9.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stim_t 
    WHERE stiment = g_enterprise AND stimdocno = g_stiedocno_t

    INTO TEMP astt801_detail
 
   #將key修正為調整後   
   UPDATE astt801_detail SET stimdocno = g_stie_m.stiedocno

  
   #add-point:單身修改前 name="detail_reproduce.body.table9.b_update"
   {<point name="detail_reproduce.body.table9.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO stim_t SELECT * FROM astt801_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table9.m_insert"
   {<point name="detail_reproduce.body.table9.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astt801_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table9.a_insert"
   {<point name="detail_reproduce.body.table9.a_insert"/>}
   #end add-point


   
   #add-point:單身複製前 name="detail_reproduce.body.table10.b_insert"
   {<point name="detail_reproduce.body.table10.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stig_t 
    WHERE stigent = g_enterprise AND stigdocno = g_stiedocno_t

    INTO TEMP astt801_detail
 
   #將key修正為調整後   
   UPDATE astt801_detail SET stigdocno = g_stie_m.stiedocno

  
   #add-point:單身修改前 name="detail_reproduce.body.table10.b_update"
   {<point name="detail_reproduce.body.table10.b_update"/>}
   #end add-point    
  
   #將資料塞回原table   
   INSERT INTO stig_t SELECT * FROM astt801_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table10.m_insert"
   {<point name="detail_reproduce.body.table10.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astt801_detail
   
   LET g_data_owner = g_stie_m.stieownid      
   LET g_data_dept  = g_stie_m.stieowndp
   
   #add-point:單身複製後 name="detail_reproduce.body.table10.a_insert"
   {<point name="detail_reproduce.body.table10.a_insert"/>}
   #end add-point


   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_stiedocno_t = g_stie_m.stiedocno

   
END FUNCTION
{</section>}
 
{<section id="astt801.delete" >}
#+ 資料刪除
PRIVATE FUNCTION astt801_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   {<point name="delete.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   {<point name="delete.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   {<point name="delete.pre_function"/>}
   #end add-point
   
   IF g_stie_m.stiedocno IS NULL

   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN astt801_cl USING g_enterprise,g_stie_m.stiedocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN astt801_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE astt801_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE astt801_master_referesh USING g_stie_m.stiedocno INTO g_stie_m.stiesite,g_stie_m.stiedocdt,g_stie_m.stiedocno,g_stie_m.stie000,g_stie_m.stie001,g_stie_m.stie002,g_stie_m.stie200,g_stie_m.stie004,g_stie_m.stie005,g_stie_m.stie006,g_stie_m.stiestus,g_stie_m.stie007,g_stie_m.stie008,g_stie_m.stie010,g_stie_m.stie009,g_stie_m.stie011,g_stie_m.stie012,g_stie_m.stie013,g_stie_m.stie014,g_stie_m.stie015,g_stie_m.stie016,g_stie_m.stie017,g_stie_m.stie018,g_stie_m.stie003,g_stie_m.stie049,g_stie_m.stie019,g_stie_m.stie020,g_stie_m.stie021,g_stie_m.stie022,g_stie_m.stie027,g_stie_m.stie028,g_stie_m.stie029,g_stie_m.stie026,g_stie_m.stie023,g_stie_m.stie024,g_stie_m.stie025,g_stie_m.stie223,g_stie_m.stie224,g_stie_m.stie225,g_stie_m.stie030,g_stie_m.stie031,g_stie_m.stie032,g_stie_m.stie033,g_stie_m.stie034,g_stie_m.stie035,g_stie_m.stie036,g_stie_m.stie037,g_stie_m.stie038,g_stie_m.stie039,g_stie_m.stie040,g_stie_m.stie041,g_stie_m.stie042,g_stie_m.stie043,g_stie_m.stie044,g_stie_m.stie045,g_stie_m.stie046,g_stie_m.stie047,g_stie_m.stie048,g_stie_m.stie050,g_stie_m.stie051,g_stie_m.stie052,g_stie_m.stie053,g_stie_m.stieownid,g_stie_m.stieowndp,g_stie_m.stiecrtid,g_stie_m.stiecrtdp,g_stie_m.stiecrtdt,g_stie_m.stiemodid,g_stie_m.stiemoddt,g_stie_m.stiecnfid,g_stie_m.stiecnfdt,g_stie_m.stiesite_desc,g_stie_m.stie007_desc,g_stie_m.stie008_desc,g_stie_m.stie017_desc,g_stie_m.stie018_desc,g_stie_m.stie003_desc,g_stie_m.stie019_desc,g_stie_m.stie020_desc,g_stie_m.stie021_desc,g_stie_m.stie022_desc,g_stie_m.stie027_desc,g_stie_m.stie028_desc,g_stie_m.stie029_desc,g_stie_m.stie030_desc,g_stie_m.stie031_desc,g_stie_m.stie032_desc,g_stie_m.stie034_desc,g_stie_m.stie035_desc,g_stie_m.stie036_desc,g_stie_m.stie038_desc,g_stie_m.stie039_desc,g_stie_m.stie051_desc,g_stie_m.stie053_desc,g_stie_m.stieownid_desc,g_stie_m.stieowndp_desc,g_stie_m.stiemodid_desc
   
   
   #檢查是否允許此動作
   IF NOT astt801_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_stie_m_mask_o.* =  g_stie_m.*
   CALL astt801_stie_t_mask()
   LET g_stie_m_mask_n.* =  g_stie_m.*
   
   CALL astt801_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL astt801_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 


  
  
      #資料備份
      LET g_stiedocno_t = g_stie_m.stiedocno

 
      DELETE FROM stie_t
       WHERE stieent = g_enterprise AND stiedocno = g_stie_m.stiedocno

       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_stie_m.stiedocno,":",SQLERRMESSAGE  
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM stif_t
       WHERE stifent = g_enterprise AND stifdocno = g_stie_m.stiedocno

 
      #add-point:單身刪除中 name="delete.body.m_delete"
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stif_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前 name="delete.body.b_delete2"
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM stin_t
       WHERE stinent = g_enterprise AND
             stindocno = g_stie_m.stiedocno
      #add-point:單身刪除中 name="delete.body.m_delete2"
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stin_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete2"
      {<point name="delete.body.a_delete2"/>}
      #end add-point

      #add-point:單身刪除前 name="delete.body.b_delete3"
      {<point name="delete.body.b_delete3" mark="Y"/>}
      #end add-point
      DELETE FROM stio_t
       WHERE stioent = g_enterprise AND
             stiodocno = g_stie_m.stiedocno
      #add-point:單身刪除中 name="delete.body.m_delete3"
      {<point name="delete.body.m_delete3"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stio_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete3"
      {<point name="delete.body.a_delete3"/>}
      #end add-point

      #add-point:單身刪除前 name="delete.body.b_delete4"
      {<point name="delete.body.b_delete4" mark="Y"/>}
      #end add-point
      DELETE FROM stih_t
       WHERE stihent = g_enterprise AND
             stihdocno = g_stie_m.stiedocno
      #add-point:單身刪除中 name="delete.body.m_delete4"
      {<point name="delete.body.m_delete4"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stih_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete4"
      {<point name="delete.body.a_delete4"/>}
      #end add-point

      #add-point:單身刪除前 name="delete.body.b_delete5"
      {<point name="delete.body.b_delete5" mark="Y"/>}
      #end add-point
      DELETE FROM stii_t
       WHERE stiient = g_enterprise AND
             stiidocno = g_stie_m.stiedocno
      #add-point:單身刪除中 name="delete.body.m_delete5"
      {<point name="delete.body.m_delete5"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stii_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete5"
      {<point name="delete.body.a_delete5"/>}
      #end add-point

      #add-point:單身刪除前 name="delete.body.b_delete6"
      {<point name="delete.body.b_delete6" mark="Y"/>}
      #end add-point
      DELETE FROM stil_t
       WHERE stilent = g_enterprise AND
             stildocno = g_stie_m.stiedocno
      #add-point:單身刪除中 name="delete.body.m_delete6"
      {<point name="delete.body.m_delete6"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stil_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete6"
      {<point name="delete.body.a_delete6"/>}
      #end add-point

      #add-point:單身刪除前 name="delete.body.b_delete7"
      {<point name="delete.body.b_delete7" mark="Y"/>}
      #end add-point
      DELETE FROM stij_t
       WHERE stijent = g_enterprise AND
             stijdocno = g_stie_m.stiedocno
      #add-point:單身刪除中 name="delete.body.m_delete7"
      {<point name="delete.body.m_delete7"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stij_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete7"
      {<point name="delete.body.a_delete7"/>}
      #end add-point

      #add-point:單身刪除前 name="delete.body.b_delete8"
      {<point name="delete.body.b_delete8" mark="Y"/>}
      #end add-point
      DELETE FROM stik_t
       WHERE stikent = g_enterprise AND
             stikdocno = g_stie_m.stiedocno
      #add-point:單身刪除中 name="delete.body.m_delete8"
      {<point name="delete.body.m_delete8"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stik_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete8"
      {<point name="delete.body.a_delete8"/>}
      #end add-point

      #add-point:單身刪除前 name="delete.body.b_delete9"
      {<point name="delete.body.b_delete9" mark="Y"/>}
      #end add-point
      DELETE FROM stim_t
       WHERE stiment = g_enterprise AND
             stimdocno = g_stie_m.stiedocno
      #add-point:單身刪除中 name="delete.body.m_delete9"
      {<point name="delete.body.m_delete9"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stim_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete9"
      {<point name="delete.body.a_delete9"/>}
      #end add-point


 
      #add-point:單身刪除前 name="delete.body.b_delete10"
      {<point name="delete.body.b_delete10" mark="Y"/>}
      #end add-point
      DELETE FROM stig_t
       WHERE stigent = g_enterprise AND
             stigdocno = g_stie_m.stiedocno
      #add-point:單身刪除中 name="delete.body.m_delete10"
      {<point name="delete.body.m_delete10"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stig_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete10"
      {<point name="delete.body.a_delete10"/>}
      #end add-point


      
      #修改歷程記錄(刪除)
      LET g_log1 = util.JSON.stringify(g_stie_m)   #(ver:78)
      IF NOT cl_log_modified_record(g_log1,'') THEN    #(ver:78)
         CLOSE astt801_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_stif_d.clear() 
      CALL g_stif11_d.clear()       
      CALL g_stif13_d.clear()       
      CALL g_stif2_d.clear()       
      CALL g_stif3_d.clear()       
      CALL g_stif4_d.clear()       
      CALL g_stif5_d.clear()       
      CALL g_stif6_d.clear()       
      CALL g_stif7_d.clear()       
      CALL g_stif9_d.clear()       

     
      CALL astt801_ui_browser_refresh()  
      #CALL astt801_ui_headershow()  
      #CALL astt801_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
      
      
      
      
      
      
      
      

   
      #add-point:多語言刪除 name="delete.lang.delete"
      {<point name="delete.lang.delete"/>}
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL astt801_browser_fill("")
         CALL astt801_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE astt801_cl
 
   #功能已完成,通報訊息中心
   CALL astt801_msgcentre_notify('delete')
    
END FUNCTION
{</section>}
 
{<section id="astt801.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION astt801_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   {<point name="b_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   {<point name="b_fill.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   {<point name="b_fill.pre_function"/>}
   #end add-point
   
   #清空第一階單身
   CALL g_stif_d.clear()
   CALL g_stif11_d.clear()
   CALL g_stif13_d.clear()
   CALL g_stif2_d.clear()
   CALL g_stif3_d.clear()
   CALL g_stif4_d.clear()
   CALL g_stif5_d.clear()
   CALL g_stif6_d.clear()
   CALL g_stif7_d.clear()

 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF astt801_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      {<point name="b_fill.long_sql_if"/>}
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stifseq,stif001,stif002,stif003,stif021,stif004,stif022,stif005,stif006,stif007,stif008,stif009,stif010,stif011,stif018,stif016,stif017,stif020,stif023,stif024,stif025,stifsite,stifunit ,t1.stael003 ,t2.mhadl006 ,t3.ooefl003 FROM stif_t",   
                     " INNER JOIN stie_t ON stieent = " ||g_enterprise|| " AND stiedocno = stifdocno ",

                     #"",
                     " LEFT JOIN stig_t ON stifent = stigent AND stifdocno = stigdocno AND stifseq = stigseq ",
                     "",
                     #下層單身所需的join條件
                     " ",


                                    " LEFT JOIN stael_t t1 ON t1.staelent="||g_enterprise||" AND t1.stael001=stif004 AND t1.stael002='"||g_dlang||"' ",
               " LEFT JOIN mhadl_t t2 ON t2.mhadlent="||g_enterprise||" AND t2.mhadl004=stif022 AND t2.mhadl005='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent="||g_enterprise||" AND t3.ooefl001=stif024 AND t3.ooefl002='"||g_dlang||"' ",

                     " WHERE stifent=? AND stifdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
            IF NOT cl_null(g_wc2_table10) THEN 
      LET g_sql = g_sql CLIPPED," AND ", g_wc2_table10 CLIPPED
   END IF 

         
         LET g_sql = g_sql, " ORDER BY stif_t.stifseq"
         
         #add-point:單身填充控制 name="b_fill.sql"
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astt801_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR astt801_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
   #  OPEN b_fill_cs USING g_enterprise,g_stie_m.stiedocno   #(ver:78)
                                               
      FOREACH b_fill_cs USING g_enterprise,g_stie_m.stiedocno INTO g_stif_d[l_ac].stifseq,g_stif_d[l_ac].stif001,g_stif_d[l_ac].stif002,g_stif_d[l_ac].stif003,g_stif_d[l_ac].stif021,g_stif_d[l_ac].stif004,g_stif_d[l_ac].stif022,g_stif_d[l_ac].stif005,g_stif_d[l_ac].stif006,g_stif_d[l_ac].stif007,g_stif_d[l_ac].stif008,g_stif_d[l_ac].stif009,g_stif_d[l_ac].stif010,g_stif_d[l_ac].stif011,g_stif_d[l_ac].stif018,g_stif_d[l_ac].stif016,g_stif_d[l_ac].stif017,g_stif_d[l_ac].stif020,g_stif_d[l_ac].stif023,g_stif_d[l_ac].stif024,g_stif_d[l_ac].stif025,g_stif_d[l_ac].stifsite,g_stif_d[l_ac].stifunit,g_stif_d[l_ac].stif004_desc,g_stif_d[l_ac].stif022_desc,g_stif_d[l_ac].stif024_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code = 9035 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
   #判斷是否填充
   IF astt801_fill_chk(2) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body2.long_sql_if"
         {<point name="b_fill.body2.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stinsite,stinunit,stinseq,stin001,stin002,stin004,stin003,stin005,stin006,stin007,stin008,stin009,stin010 ,t4.stael003 FROM stin_t",   
                     " INNER JOIN  stie_t ON stieent = " ||g_enterprise|| " AND stiedocno = stindocno ",

                     "",
                     
                                    " LEFT JOIN stael_t t4 ON t4.staelent="||g_enterprise||" AND t4.stael001=stin005 AND t4.stael002='"||g_dlang||"' ",

                     " WHERE stinent=? AND stindocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body2.fill_sql"
         {<point name="b_fill.body2.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stin_t.stinseq"
         
         #add-point:單身填充控制 name="b_fill.sql2"
         {<point name="b_fill.sql2"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astt801_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR astt801_pb2
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs2 USING g_enterprise,g_stie_m.stiedocno   #(ver:78)
                                               
      FOREACH b_fill_cs2 USING g_enterprise,g_stie_m.stiedocno INTO g_stif11_d[l_ac].stinsite,g_stif11_d[l_ac].stinunit,g_stif11_d[l_ac].stinseq,g_stif11_d[l_ac].stin001,g_stif11_d[l_ac].stin002,g_stif11_d[l_ac].stin004,g_stif11_d[l_ac].stin003,g_stif11_d[l_ac].stin005,g_stif11_d[l_ac].stin006,g_stif11_d[l_ac].stin007,g_stif11_d[l_ac].stin008,g_stif11_d[l_ac].stin009,g_stif11_d[l_ac].stin010,g_stif11_d[l_ac].stin005_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill2.fill"
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF

   #判斷是否填充
   IF astt801_fill_chk(3) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body3.long_sql_if"
         {<point name="b_fill.body3.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stiosite,stiounit,stioseq,stio001,stio002,stio003,stio004,stio005,stio006,stio007  FROM stio_t",   
                     " INNER JOIN  stie_t ON stieent = " ||g_enterprise|| " AND stiedocno = stiodocno ",

                     "",
                     
                     
                     " WHERE stioent=? AND stiodocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body3.fill_sql"
         {<point name="b_fill.body3.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table3) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stio_t.stioseq"
         
         #add-point:單身填充控制 name="b_fill.sql3"
         {<point name="b_fill.sql3"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astt801_pb3 FROM g_sql
         DECLARE b_fill_cs3 CURSOR FOR astt801_pb3
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs3 USING g_enterprise,g_stie_m.stiedocno   #(ver:78)
                                               
      FOREACH b_fill_cs3 USING g_enterprise,g_stie_m.stiedocno INTO g_stif13_d[l_ac].stiosite,g_stif13_d[l_ac].stiounit,g_stif13_d[l_ac].stioseq,g_stif13_d[l_ac].stio001,g_stif13_d[l_ac].stio002,g_stif13_d[l_ac].stio003,g_stif13_d[l_ac].stio004,g_stif13_d[l_ac].stio005,g_stif13_d[l_ac].stio006,g_stif13_d[l_ac].stio007   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill3.fill"
         {<point name="b_fill3.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF

   #判斷是否填充
   IF astt801_fill_chk(4) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body4.long_sql_if"
         {<point name="b_fill.body4.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stihseq,stih001,stih002,stih003,stih008,stih004,stih005,stih006,stih007,stihsite,stihunit ,t5.stael003 FROM stih_t",   
                     " INNER JOIN  stie_t ON stieent = " ||g_enterprise|| " AND stiedocno = stihdocno ",

                     "",
                     
                                    " LEFT JOIN stael_t t5 ON t5.staelent="||g_enterprise||" AND t5.stael001=stih002 AND t5.stael002='"||g_dlang||"' ",

                     " WHERE stihent=? AND stihdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body4.fill_sql"
         {<point name="b_fill.body4.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table4) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table4 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stih_t.stihseq"
         
         #add-point:單身填充控制 name="b_fill.sql4"
         {<point name="b_fill.sql4"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astt801_pb4 FROM g_sql
         DECLARE b_fill_cs4 CURSOR FOR astt801_pb4
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs4 USING g_enterprise,g_stie_m.stiedocno   #(ver:78)
                                               
      FOREACH b_fill_cs4 USING g_enterprise,g_stie_m.stiedocno INTO g_stif2_d[l_ac].stihseq,g_stif2_d[l_ac].stih001,g_stif2_d[l_ac].stih002,g_stif2_d[l_ac].stih003,g_stif2_d[l_ac].stih008,g_stif2_d[l_ac].stih004,g_stif2_d[l_ac].stih005,g_stif2_d[l_ac].stih006,g_stif2_d[l_ac].stih007,g_stif2_d[l_ac].stihsite,g_stif2_d[l_ac].stihunit,g_stif2_d[l_ac].stih002_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill4.fill"
         {<point name="b_fill4.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF

   #判斷是否填充
   IF astt801_fill_chk(5) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body5.long_sql_if"
         {<point name="b_fill.body5.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stiiseq,stii001,stii002,stii003,stii010,stii004,stii005,stii006,stii007,stii008,stii009,stiisite,stiiunit ,t6.stael003 ,t7.staal003 ,t8.oodbl004 FROM stii_t",   
                     " INNER JOIN  stie_t ON stieent = " ||g_enterprise|| " AND stiedocno = stiidocno ",

                     "",
                     
                                    " LEFT JOIN stael_t t6 ON t6.staelent="||g_enterprise||" AND t6.stael001=stii002 AND t6.stael002='"||g_dlang||"' ",
               " LEFT JOIN staal_t t7 ON t7.staalent="||g_enterprise||" AND t7.staal001=stii003 AND t7.staal002='"||g_dlang||"' ",
               " LEFT JOIN oodbl_t t8 ON t8.oodblent="||g_enterprise||" AND t8.oodbl002=stii010 AND t8.oodbl003='"||g_dlang||"' ",

                     " WHERE stiient=? AND stiidocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body5.fill_sql"
         {<point name="b_fill.body5.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table5) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table5 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stii_t.stiiseq"
         
         #add-point:單身填充控制 name="b_fill.sql5"
         {<point name="b_fill.sql5"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astt801_pb5 FROM g_sql
         DECLARE b_fill_cs5 CURSOR FOR astt801_pb5
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs5 USING g_enterprise,g_stie_m.stiedocno   #(ver:78)
                                               
      FOREACH b_fill_cs5 USING g_enterprise,g_stie_m.stiedocno INTO g_stif3_d[l_ac].stiiseq,g_stif3_d[l_ac].stii001,g_stif3_d[l_ac].stii002,g_stif3_d[l_ac].stii003,g_stif3_d[l_ac].stii010,g_stif3_d[l_ac].stii004,g_stif3_d[l_ac].stii005,g_stif3_d[l_ac].stii006,g_stif3_d[l_ac].stii007,g_stif3_d[l_ac].stii008,g_stif3_d[l_ac].stii009,g_stif3_d[l_ac].stiisite,g_stif3_d[l_ac].stiiunit,g_stif3_d[l_ac].stii002_desc,g_stif3_d[l_ac].stii003_desc,g_stif3_d[l_ac].stii010_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill5.fill"
         {<point name="b_fill5.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF

   #判斷是否填充
   IF astt801_fill_chk(6) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body6.long_sql_if"
         {<point name="b_fill.body6.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stilseq,stil001,stil002,stil003,stil004,stil005,stil006,stil007,stil008,stilsite,stilunit ,t9.stael003 FROM stil_t",   
                     " INNER JOIN  stie_t ON stieent = " ||g_enterprise|| " AND stiedocno = stildocno ",

                     "",
                     
                                    " LEFT JOIN stael_t t9 ON t9.staelent="||g_enterprise||" AND t9.stael001=stil003 AND t9.stael002='"||g_dlang||"' ",

                     " WHERE stilent=? AND stildocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body6.fill_sql"
         {<point name="b_fill.body6.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table6) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table6 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stil_t.stilseq"
         
         #add-point:單身填充控制 name="b_fill.sql6"
         {<point name="b_fill.sql6"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astt801_pb6 FROM g_sql
         DECLARE b_fill_cs6 CURSOR FOR astt801_pb6
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs6 USING g_enterprise,g_stie_m.stiedocno   #(ver:78)
                                               
      FOREACH b_fill_cs6 USING g_enterprise,g_stie_m.stiedocno INTO g_stif4_d[l_ac].stilseq,g_stif4_d[l_ac].stil001,g_stif4_d[l_ac].stil002,g_stif4_d[l_ac].stil003,g_stif4_d[l_ac].stil004,g_stif4_d[l_ac].stil005,g_stif4_d[l_ac].stil006,g_stif4_d[l_ac].stil007,g_stif4_d[l_ac].stil008,g_stif4_d[l_ac].stilsite,g_stif4_d[l_ac].stilunit,g_stif4_d[l_ac].stil003_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill6.fill"
         {<point name="b_fill6.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF

   #判斷是否填充
   IF astt801_fill_chk(7) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body7.long_sql_if"
         {<point name="b_fill.body7.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stijacti,stijseq,stij001,stij002,stij003,stij004,stij005,stij006,stij007,stij008,stij009,stijsite,stijunit ,t10.mhadl006 ,t11.mhaal003 ,t12.mhabl004 ,t13.mhacl005 FROM stij_t",   
                     " INNER JOIN  stie_t ON stieent = " ||g_enterprise|| " AND stiedocno = stijdocno ",

                     "",
                     
                                    " LEFT JOIN mhadl_t t10 ON t10.mhadlent="||g_enterprise||" AND t10.mhadl004=stij002 AND t10.mhadl005='"||g_dlang||"' ",
               " LEFT JOIN mhaal_t t11 ON t11.mhaalent="||g_enterprise||" AND t11.mhaal001=stij006 AND t11.mhaal002='"||g_dlang||"' ",
               " LEFT JOIN mhabl_t t12 ON t12.mhablent="||g_enterprise||" AND t12.mhabl001=stij006 AND t12.mhabl002=stij007 AND t12.mhabl003='"||g_dlang||"' ",
               " LEFT JOIN mhacl_t t13 ON t13.mhaclent="||g_enterprise||" AND t13.mhacl001=stij006 AND t13.mhacl002=stij007 AND t13.mhacl003=stij008 AND t13.mhacl004='"||g_dlang||"' ",

                     " WHERE stijent=? AND stijdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body7.fill_sql"
         {<point name="b_fill.body7.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table7) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table7 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stij_t.stijseq"
         
         #add-point:單身填充控制 name="b_fill.sql7"
         {<point name="b_fill.sql7"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astt801_pb7 FROM g_sql
         DECLARE b_fill_cs7 CURSOR FOR astt801_pb7
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs7 USING g_enterprise,g_stie_m.stiedocno   #(ver:78)
                                               
      FOREACH b_fill_cs7 USING g_enterprise,g_stie_m.stiedocno INTO g_stif5_d[l_ac].stijacti,g_stif5_d[l_ac].stijseq,g_stif5_d[l_ac].stij001,g_stif5_d[l_ac].stij002,g_stif5_d[l_ac].stij003,g_stif5_d[l_ac].stij004,g_stif5_d[l_ac].stij005,g_stif5_d[l_ac].stij006,g_stif5_d[l_ac].stij007,g_stif5_d[l_ac].stij008,g_stif5_d[l_ac].stij009,g_stif5_d[l_ac].stijsite,g_stif5_d[l_ac].stijunit,g_stif5_d[l_ac].stij002_desc,g_stif5_d[l_ac].stij006_desc,g_stif5_d[l_ac].stij007_desc,g_stif5_d[l_ac].stij008_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill7.fill"
         {<point name="b_fill7.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF

   #判斷是否填充
   IF astt801_fill_chk(8) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body8.long_sql_if"
         {<point name="b_fill.body8.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stikacti,stikseq,stik001,stik002,stik004,stik003,stik005,stiksite,stikunit ,t14.rtaxl003 ,t15.oocql004 FROM stik_t",   
                     " INNER JOIN  stie_t ON stieent = " ||g_enterprise|| " AND stiedocno = stikdocno ",

                     "",
                     
                                    " LEFT JOIN rtaxl_t t14 ON t14.rtaxlent="||g_enterprise||" AND t14.rtaxl001=stik002 AND t14.rtaxl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t15 ON t15.oocqlent="||g_enterprise||" AND t15.oocql001='2002' AND t15.oocql002=stik003 AND t15.oocql003='"||g_dlang||"' ",

                     " WHERE stikent=? AND stikdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body8.fill_sql"
         {<point name="b_fill.body8.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table8) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table8 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stik_t.stikseq"
         
         #add-point:單身填充控制 name="b_fill.sql8"
         {<point name="b_fill.sql8"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astt801_pb8 FROM g_sql
         DECLARE b_fill_cs8 CURSOR FOR astt801_pb8
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs8 USING g_enterprise,g_stie_m.stiedocno   #(ver:78)
                                               
      FOREACH b_fill_cs8 USING g_enterprise,g_stie_m.stiedocno INTO g_stif6_d[l_ac].stikacti,g_stif6_d[l_ac].stikseq,g_stif6_d[l_ac].stik001,g_stif6_d[l_ac].stik002,g_stif6_d[l_ac].stik004,g_stif6_d[l_ac].stik003,g_stif6_d[l_ac].stik005,g_stif6_d[l_ac].stiksite,g_stif6_d[l_ac].stikunit,g_stif6_d[l_ac].stik002_desc,g_stif6_d[l_ac].stik003_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill8.fill"
         {<point name="b_fill8.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF

   #判斷是否填充
   IF astt801_fill_chk(9) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body9.long_sql_if"
         {<point name="b_fill.body9.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stimseq,stim001,stim002,stim003,stim004,stim005,stim006,stim007,stim008,stim009,stim010,stim011,stim012,stim013,stim014,stim015,stim016,stim018,stim019,stim017,stimsite,stimunit ,t16.stael003 ,t17.ooefl003 FROM stim_t",   
                     " INNER JOIN  stie_t ON stieent = " ||g_enterprise|| " AND stiedocno = stimdocno ",

                     "",
                     
                                    " LEFT JOIN stael_t t16 ON t16.staelent="||g_enterprise||" AND t16.stael001=stim003 AND t16.stael002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t17 ON t17.ooeflent="||g_enterprise||" AND t17.ooefl001=stim019 AND t17.ooefl002='"||g_dlang||"' ",

                     " WHERE stiment=? AND stimdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body9.fill_sql"
         {<point name="b_fill.body9.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table9) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table9 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stim_t.stimseq"
         
         #add-point:單身填充控制 name="b_fill.sql9"
         {<point name="b_fill.sql9"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astt801_pb9 FROM g_sql
         DECLARE b_fill_cs9 CURSOR FOR astt801_pb9
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs9 USING g_enterprise,g_stie_m.stiedocno   #(ver:78)
                                               
      FOREACH b_fill_cs9 USING g_enterprise,g_stie_m.stiedocno INTO g_stif7_d[l_ac].stimseq,g_stif7_d[l_ac].stim001,g_stif7_d[l_ac].stim002,g_stif7_d[l_ac].stim003,g_stif7_d[l_ac].stim004,g_stif7_d[l_ac].stim005,g_stif7_d[l_ac].stim006,g_stif7_d[l_ac].stim007,g_stif7_d[l_ac].stim008,g_stif7_d[l_ac].stim009,g_stif7_d[l_ac].stim010,g_stif7_d[l_ac].stim011,g_stif7_d[l_ac].stim012,g_stif7_d[l_ac].stim013,g_stif7_d[l_ac].stim014,g_stif7_d[l_ac].stim015,g_stif7_d[l_ac].stim016,g_stif7_d[l_ac].stim018,g_stif7_d[l_ac].stim019,g_stif7_d[l_ac].stim017,g_stif7_d[l_ac].stimsite,g_stif7_d[l_ac].stimunit,g_stif7_d[l_ac].stim003_desc,g_stif7_d[l_ac].stim019_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill9.fill"
         {<point name="b_fill9.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF


   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_stif_d.deleteElement(g_stif_d.getLength())
   CALL g_stif11_d.deleteElement(g_stif11_d.getLength())
   CALL g_stif13_d.deleteElement(g_stif13_d.getLength())
   CALL g_stif2_d.deleteElement(g_stif2_d.getLength())
   CALL g_stif3_d.deleteElement(g_stif3_d.getLength())
   CALL g_stif4_d.deleteElement(g_stif4_d.getLength())
   CALL g_stif5_d.deleteElement(g_stif5_d.getLength())
   CALL g_stif6_d.deleteElement(g_stif6_d.getLength())
   CALL g_stif7_d.deleteElement(g_stif7_d.getLength())

   

   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE astt801_pb
   FREE astt801_pb2

   FREE astt801_pb3

   FREE astt801_pb4

   FREE astt801_pb5

   FREE astt801_pb6

   FREE astt801_pb7

   FREE astt801_pb8

   FREE astt801_pb9


   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_stif_d.getLength()
      LET g_stif_d_mask_o[l_ac].* =  g_stif_d[l_ac].*
      CALL astt801_stif_t_mask()
      LET g_stif_d_mask_n[l_ac].* =  g_stif_d[l_ac].*
   END FOR
   
   LET g_stif11_d_mask_o.* =  g_stif11_d.*
   FOR l_ac = 1 TO g_stif11_d.getLength()
      LET g_stif11_d_mask_o[l_ac].* =  g_stif11_d[l_ac].*
      CALL astt801_stin_t_mask()
      LET g_stif11_d_mask_n[l_ac].* =  g_stif11_d[l_ac].*
   END FOR
   LET g_stif13_d_mask_o.* =  g_stif13_d.*
   FOR l_ac = 1 TO g_stif13_d.getLength()
      LET g_stif13_d_mask_o[l_ac].* =  g_stif13_d[l_ac].*
      CALL astt801_stio_t_mask()
      LET g_stif13_d_mask_n[l_ac].* =  g_stif13_d[l_ac].*
   END FOR
   LET g_stif2_d_mask_o.* =  g_stif2_d.*
   FOR l_ac = 1 TO g_stif2_d.getLength()
      LET g_stif2_d_mask_o[l_ac].* =  g_stif2_d[l_ac].*
      CALL astt801_stih_t_mask()
      LET g_stif2_d_mask_n[l_ac].* =  g_stif2_d[l_ac].*
   END FOR
   LET g_stif3_d_mask_o.* =  g_stif3_d.*
   FOR l_ac = 1 TO g_stif3_d.getLength()
      LET g_stif3_d_mask_o[l_ac].* =  g_stif3_d[l_ac].*
      CALL astt801_stii_t_mask()
      LET g_stif3_d_mask_n[l_ac].* =  g_stif3_d[l_ac].*
   END FOR
   LET g_stif4_d_mask_o.* =  g_stif4_d.*
   FOR l_ac = 1 TO g_stif4_d.getLength()
      LET g_stif4_d_mask_o[l_ac].* =  g_stif4_d[l_ac].*
      CALL astt801_stil_t_mask()
      LET g_stif4_d_mask_n[l_ac].* =  g_stif4_d[l_ac].*
   END FOR
   LET g_stif5_d_mask_o.* =  g_stif5_d.*
   FOR l_ac = 1 TO g_stif5_d.getLength()
      LET g_stif5_d_mask_o[l_ac].* =  g_stif5_d[l_ac].*
      CALL astt801_stij_t_mask()
      LET g_stif5_d_mask_n[l_ac].* =  g_stif5_d[l_ac].*
   END FOR
   LET g_stif6_d_mask_o.* =  g_stif6_d.*
   FOR l_ac = 1 TO g_stif6_d.getLength()
      LET g_stif6_d_mask_o[l_ac].* =  g_stif6_d[l_ac].*
      CALL astt801_stik_t_mask()
      LET g_stif6_d_mask_n[l_ac].* =  g_stif6_d[l_ac].*
   END FOR
   LET g_stif7_d_mask_o.* =  g_stif7_d.*
   FOR l_ac = 1 TO g_stif7_d.getLength()
      LET g_stif7_d_mask_o[l_ac].* =  g_stif7_d[l_ac].*
      CALL astt801_stim_t_mask()
      LET g_stif7_d_mask_n[l_ac].* =  g_stif7_d[l_ac].*
   END FOR
   LET g_stif9_d_mask_o.* =  g_stif9_d.*
   FOR l_ac = 1 TO g_stif9_d.getLength()
      LET g_stif9_d_mask_o[l_ac].* =  g_stif9_d[l_ac].*
      CALL astt801_stig_t_mask()
      LET g_stif9_d_mask_n[l_ac].* =  g_stif9_d[l_ac].*
   END FOR

   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
{</section>}
 
{<section id="astt801.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION astt801_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   {<point name="delete_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   {<point name="delete_b.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   {<point name="delete_b.pre_function"/>}
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM stif_t
       WHERE stifent = g_enterprise AND
         stifdocno = ps_keys_bak[1] AND stifseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_stif_d.deleteElement(li_idx) 
      END IF 

   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete2"
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM stin_t
       WHERE stinent = g_enterprise AND
             stindocno = ps_keys_bak[1] AND stinseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete2"
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stin_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_stif11_d.deleteElement(li_idx) 
      END IF 

      #add-point:delete_b段刪除後 name="delete_b.a_delete2"
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF

   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete3"
      {<point name="delete_b.b_delete3" mark="Y"/>}
      #end add-point    
      DELETE FROM stio_t
       WHERE stioent = g_enterprise AND
             stiodocno = ps_keys_bak[1] AND stioseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete3"
      {<point name="delete_b.m_delete3"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stio_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_stif13_d.deleteElement(li_idx) 
      END IF 

      #add-point:delete_b段刪除後 name="delete_b.a_delete3"
      {<point name="delete_b.a_delete3"/>}
      #end add-point    
   END IF

   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete4"
      {<point name="delete_b.b_delete4" mark="Y"/>}
      #end add-point    
      DELETE FROM stih_t
       WHERE stihent = g_enterprise AND
             stihdocno = ps_keys_bak[1] AND stihseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete4"
      {<point name="delete_b.m_delete4"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stih_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_stif2_d.deleteElement(li_idx) 
      END IF 

      #add-point:delete_b段刪除後 name="delete_b.a_delete4"
      {<point name="delete_b.a_delete4"/>}
      #end add-point    
   END IF

   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete5"
      {<point name="delete_b.b_delete5" mark="Y"/>}
      #end add-point    
      DELETE FROM stii_t
       WHERE stiient = g_enterprise AND
             stiidocno = ps_keys_bak[1] AND stiiseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete5"
      {<point name="delete_b.m_delete5"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stii_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'5'" THEN 
         CALL g_stif3_d.deleteElement(li_idx) 
      END IF 

      #add-point:delete_b段刪除後 name="delete_b.a_delete5"
      {<point name="delete_b.a_delete5"/>}
      #end add-point    
   END IF

   LET ls_group = "'6',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete6"
      {<point name="delete_b.b_delete6" mark="Y"/>}
      #end add-point    
      DELETE FROM stil_t
       WHERE stilent = g_enterprise AND
             stildocno = ps_keys_bak[1] AND stilseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete6"
      {<point name="delete_b.m_delete6"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stil_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'6'" THEN 
         CALL g_stif4_d.deleteElement(li_idx) 
      END IF 

      #add-point:delete_b段刪除後 name="delete_b.a_delete6"
      {<point name="delete_b.a_delete6"/>}
      #end add-point    
   END IF

   LET ls_group = "'7',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete7"
      {<point name="delete_b.b_delete7" mark="Y"/>}
      #end add-point    
      DELETE FROM stij_t
       WHERE stijent = g_enterprise AND
             stijdocno = ps_keys_bak[1] AND stijseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete7"
      {<point name="delete_b.m_delete7"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stij_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'7'" THEN 
         CALL g_stif5_d.deleteElement(li_idx) 
      END IF 

      #add-point:delete_b段刪除後 name="delete_b.a_delete7"
      {<point name="delete_b.a_delete7"/>}
      #end add-point    
   END IF

   LET ls_group = "'8',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete8"
      {<point name="delete_b.b_delete8" mark="Y"/>}
      #end add-point    
      DELETE FROM stik_t
       WHERE stikent = g_enterprise AND
             stikdocno = ps_keys_bak[1] AND stikseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete8"
      {<point name="delete_b.m_delete8"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stik_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'8'" THEN 
         CALL g_stif6_d.deleteElement(li_idx) 
      END IF 

      #add-point:delete_b段刪除後 name="delete_b.a_delete8"
      {<point name="delete_b.a_delete8"/>}
      #end add-point    
   END IF

   LET ls_group = "'9',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete9"
      {<point name="delete_b.b_delete9" mark="Y"/>}
      #end add-point    
      DELETE FROM stim_t
       WHERE stiment = g_enterprise AND
             stimdocno = ps_keys_bak[1] AND stimseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete9"
      {<point name="delete_b.m_delete9"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stim_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'9'" THEN 
         CALL g_stif7_d.deleteElement(li_idx) 
      END IF 

      #add-point:delete_b段刪除後 name="delete_b.a_delete9"
      {<point name="delete_b.a_delete9"/>}
      #end add-point    
   END IF


   
   LET ls_group = "'10',"
   #判斷是否是同一群組的table2
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete10"
      {<point name="delete_b.b_delete10" mark="Y"/>}
      #end add-point    
      DELETE FROM stig_t
       WHERE stigent = g_enterprise AND
             stigdocno = ps_keys_bak[1] AND stigseq = ps_keys_bak[2] AND stigseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中 name="delete_b.m_delete10"
      {<point name="delete_b.m_delete10"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stig_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
    
      LET li_idx = g_detail_idx2
      IF ps_page <> "'10'" THEN 
         CALL g_stif9_d.deleteElement(li_idx) 
      END IF 

      #add-point:delete_b段刪除後 name="delete_b.a_delete10"
      {<point name="delete_b.a_delete10"/>}
      #end add-point    
   END IF


   
   #add-point:delete_b段other name="delete_b.other"
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
{</section>}
 
{<section id="astt801.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION astt801_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   {<point name="insert_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   {<point name="insert_b.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   {<point name="insert_b.pre_function"/>}
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO stif_t
                  (stifent,
                   stifdocno,
                   stifseq
                   ,stif001,stif002,stif003,stif021,stif004,stif022,stif005,stif006,stif007,stif008,stif009,stif010,stif011,stif018,stif016,stif017,stif020,stif023,stif024,stif025,stifsite,stifunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stif_d[g_detail_idx].stif001,g_stif_d[g_detail_idx].stif002,g_stif_d[g_detail_idx].stif003,g_stif_d[g_detail_idx].stif021,g_stif_d[g_detail_idx].stif004,g_stif_d[g_detail_idx].stif022,g_stif_d[g_detail_idx].stif005,g_stif_d[g_detail_idx].stif006,g_stif_d[g_detail_idx].stif007,g_stif_d[g_detail_idx].stif008,g_stif_d[g_detail_idx].stif009,g_stif_d[g_detail_idx].stif010,g_stif_d[g_detail_idx].stif011,g_stif_d[g_detail_idx].stif018,g_stif_d[g_detail_idx].stif016,g_stif_d[g_detail_idx].stif017,g_stif_d[g_detail_idx].stif020,g_stif_d[g_detail_idx].stif023,g_stif_d[g_detail_idx].stif024,g_stif_d[g_detail_idx].stif025,g_stif_d[g_detail_idx].stifsite,g_stif_d[g_detail_idx].stifunit)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stif_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_stif_d.insertElement(li_idx) 
      END IF 

      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert2"
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO stin_t
                  (stinent,
                   stindocno,
                   stinseq
                   ,stinsite,stinunit,stin001,stin002,stin004,stin003,stin005,stin006,stin007,stin008,stin009,stin010) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stif11_d[g_detail_idx].stinsite,g_stif11_d[g_detail_idx].stinunit,g_stif11_d[g_detail_idx].stin001,g_stif11_d[g_detail_idx].stin002,g_stif11_d[g_detail_idx].stin004,g_stif11_d[g_detail_idx].stin003,g_stif11_d[g_detail_idx].stin005,g_stif11_d[g_detail_idx].stin006,g_stif11_d[g_detail_idx].stin007,g_stif11_d[g_detail_idx].stin008,g_stif11_d[g_detail_idx].stin009,g_stif11_d[g_detail_idx].stin010)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert2"
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stin_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_stif11_d.insertElement(li_idx) 
      END IF 

      #add-point:insert_b段資料新增後 name="insert_b.after_insert2"
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF

   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert3"
      {<point name="insert_b.before_insert3" mark="Y"/>}
      #end add-point 
      INSERT INTO stio_t
                  (stioent,
                   stiodocno,
                   stioseq
                   ,stiosite,stiounit,stio001,stio002,stio003,stio004,stio005,stio006,stio007) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stif13_d[g_detail_idx].stiosite,g_stif13_d[g_detail_idx].stiounit,g_stif13_d[g_detail_idx].stio001,g_stif13_d[g_detail_idx].stio002,g_stif13_d[g_detail_idx].stio003,g_stif13_d[g_detail_idx].stio004,g_stif13_d[g_detail_idx].stio005,g_stif13_d[g_detail_idx].stio006,g_stif13_d[g_detail_idx].stio007)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert3"
      {<point name="insert_b.m_insert3"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stio_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_stif13_d.insertElement(li_idx) 
      END IF 

      #add-point:insert_b段資料新增後 name="insert_b.after_insert3"
      {<point name="insert_b.after_insert3"/>}
      #end add-point
   END IF

   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert4"
      {<point name="insert_b.before_insert4" mark="Y"/>}
      #end add-point 
      INSERT INTO stih_t
                  (stihent,
                   stihdocno,
                   stihseq
                   ,stih001,stih002,stih003,stih008,stih004,stih005,stih006,stih007,stihsite,stihunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stif2_d[g_detail_idx].stih001,g_stif2_d[g_detail_idx].stih002,g_stif2_d[g_detail_idx].stih003,g_stif2_d[g_detail_idx].stih008,g_stif2_d[g_detail_idx].stih004,g_stif2_d[g_detail_idx].stih005,g_stif2_d[g_detail_idx].stih006,g_stif2_d[g_detail_idx].stih007,g_stif2_d[g_detail_idx].stihsite,g_stif2_d[g_detail_idx].stihunit)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert4"
      {<point name="insert_b.m_insert4"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stih_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_stif2_d.insertElement(li_idx) 
      END IF 

      #add-point:insert_b段資料新增後 name="insert_b.after_insert4"
      {<point name="insert_b.after_insert4"/>}
      #end add-point
   END IF

   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert5"
      {<point name="insert_b.before_insert5" mark="Y"/>}
      #end add-point 
      INSERT INTO stii_t
                  (stiient,
                   stiidocno,
                   stiiseq
                   ,stii001,stii002,stii003,stii010,stii004,stii005,stii006,stii007,stii008,stii009,stiisite,stiiunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stif3_d[g_detail_idx].stii001,g_stif3_d[g_detail_idx].stii002,g_stif3_d[g_detail_idx].stii003,g_stif3_d[g_detail_idx].stii010,g_stif3_d[g_detail_idx].stii004,g_stif3_d[g_detail_idx].stii005,g_stif3_d[g_detail_idx].stii006,g_stif3_d[g_detail_idx].stii007,g_stif3_d[g_detail_idx].stii008,g_stif3_d[g_detail_idx].stii009,g_stif3_d[g_detail_idx].stiisite,g_stif3_d[g_detail_idx].stiiunit)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert5"
      {<point name="insert_b.m_insert5"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stii_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'5'" THEN 
         CALL g_stif3_d.insertElement(li_idx) 
      END IF 

      #add-point:insert_b段資料新增後 name="insert_b.after_insert5"
      {<point name="insert_b.after_insert5"/>}
      #end add-point
   END IF

   LET ls_group = "'6',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert6"
      {<point name="insert_b.before_insert6" mark="Y"/>}
      #end add-point 
      INSERT INTO stil_t
                  (stilent,
                   stildocno,
                   stilseq
                   ,stil001,stil002,stil003,stil004,stil005,stil006,stil007,stil008,stilsite,stilunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stif4_d[g_detail_idx].stil001,g_stif4_d[g_detail_idx].stil002,g_stif4_d[g_detail_idx].stil003,g_stif4_d[g_detail_idx].stil004,g_stif4_d[g_detail_idx].stil005,g_stif4_d[g_detail_idx].stil006,g_stif4_d[g_detail_idx].stil007,g_stif4_d[g_detail_idx].stil008,g_stif4_d[g_detail_idx].stilsite,g_stif4_d[g_detail_idx].stilunit)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert6"
      {<point name="insert_b.m_insert6"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stil_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'6'" THEN 
         CALL g_stif4_d.insertElement(li_idx) 
      END IF 

      #add-point:insert_b段資料新增後 name="insert_b.after_insert6"
      {<point name="insert_b.after_insert6"/>}
      #end add-point
   END IF

   LET ls_group = "'7',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert7"
      {<point name="insert_b.before_insert7" mark="Y"/>}
      #end add-point 
      INSERT INTO stij_t
                  (stijent,
                   stijdocno,
                   stijseq
                   ,stijacti,stij001,stij002,stij003,stij004,stij005,stij006,stij007,stij008,stij009,stijsite,stijunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stif5_d[g_detail_idx].stijacti,g_stif5_d[g_detail_idx].stij001,g_stif5_d[g_detail_idx].stij002,g_stif5_d[g_detail_idx].stij003,g_stif5_d[g_detail_idx].stij004,g_stif5_d[g_detail_idx].stij005,g_stif5_d[g_detail_idx].stij006,g_stif5_d[g_detail_idx].stij007,g_stif5_d[g_detail_idx].stij008,g_stif5_d[g_detail_idx].stij009,g_stif5_d[g_detail_idx].stijsite,g_stif5_d[g_detail_idx].stijunit)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert7"
      {<point name="insert_b.m_insert7"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stij_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'7'" THEN 
         CALL g_stif5_d.insertElement(li_idx) 
      END IF 

      #add-point:insert_b段資料新增後 name="insert_b.after_insert7"
      {<point name="insert_b.after_insert7"/>}
      #end add-point
   END IF

   LET ls_group = "'8',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert8"
      {<point name="insert_b.before_insert8" mark="Y"/>}
      #end add-point 
      INSERT INTO stik_t
                  (stikent,
                   stikdocno,
                   stikseq
                   ,stikacti,stik001,stik002,stik004,stik003,stik005,stiksite,stikunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stif6_d[g_detail_idx].stikacti,g_stif6_d[g_detail_idx].stik001,g_stif6_d[g_detail_idx].stik002,g_stif6_d[g_detail_idx].stik004,g_stif6_d[g_detail_idx].stik003,g_stif6_d[g_detail_idx].stik005,g_stif6_d[g_detail_idx].stiksite,g_stif6_d[g_detail_idx].stikunit)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert8"
      {<point name="insert_b.m_insert8"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stik_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'8'" THEN 
         CALL g_stif6_d.insertElement(li_idx) 
      END IF 

      #add-point:insert_b段資料新增後 name="insert_b.after_insert8"
      {<point name="insert_b.after_insert8"/>}
      #end add-point
   END IF

   LET ls_group = "'9',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert9"
      {<point name="insert_b.before_insert9" mark="Y"/>}
      #end add-point 
      INSERT INTO stim_t
                  (stiment,
                   stimdocno,
                   stimseq
                   ,stim001,stim002,stim003,stim004,stim005,stim006,stim007,stim008,stim009,stim010,stim011,stim012,stim013,stim014,stim015,stim016,stim018,stim019,stim017,stimsite,stimunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stif7_d[g_detail_idx].stim001,g_stif7_d[g_detail_idx].stim002,g_stif7_d[g_detail_idx].stim003,g_stif7_d[g_detail_idx].stim004,g_stif7_d[g_detail_idx].stim005,g_stif7_d[g_detail_idx].stim006,g_stif7_d[g_detail_idx].stim007,g_stif7_d[g_detail_idx].stim008,g_stif7_d[g_detail_idx].stim009,g_stif7_d[g_detail_idx].stim010,g_stif7_d[g_detail_idx].stim011,g_stif7_d[g_detail_idx].stim012,g_stif7_d[g_detail_idx].stim013,g_stif7_d[g_detail_idx].stim014,g_stif7_d[g_detail_idx].stim015,g_stif7_d[g_detail_idx].stim016,g_stif7_d[g_detail_idx].stim018,g_stif7_d[g_detail_idx].stim019,g_stif7_d[g_detail_idx].stim017,g_stif7_d[g_detail_idx].stimsite,g_stif7_d[g_detail_idx].stimunit)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert9"
      {<point name="insert_b.m_insert9"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stim_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'9'" THEN 
         CALL g_stif7_d.insertElement(li_idx) 
      END IF 

      #add-point:insert_b段資料新增後 name="insert_b.after_insert9"
      {<point name="insert_b.after_insert9"/>}
      #end add-point
   END IF


   
   LET ls_group = "'10',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert10"
      {<point name="insert_b.before_insert10" mark="Y"/>}
      #end add-point 
      INSERT INTO stig_t
                  (stigent,
                   stigdocno,stigseq,
                   stigseq1
                   ,stigsite,stigunit,stig001,stig002,stig003,stig004,stig006) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_stif9_d[g_detail_idx2].stigsite,g_stif9_d[g_detail_idx2].stigunit,g_stif9_d[g_detail_idx2].stig001,g_stif9_d[g_detail_idx2].stig002,g_stif9_d[g_detail_idx2].stig003,g_stif9_d[g_detail_idx2].stig004,g_stif9_d[g_detail_idx2].stig006)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert10"
      {<point name="insert_b.m_insert10"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stig_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx2
      IF ps_page <> "'10'" THEN 
         CALL g_stif9_d.insertElement(li_idx) 
      END IF 

      #add-point:insert_b段資料新增後 name="insert_b.after_insert10"
      {<point name="insert_b.after_insert10"/>}
      #end add-point
   END IF


   
   #add-point:insert_b段other name="insert_b.other"
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
{</section>}
 
{<section id="astt801.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION astt801_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   {<point name="update_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   {<point name="update_b.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   {<point name="update_b.pre_function"/>}
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stif_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL astt801_stif_t_mask_restore('restore_mask_o')
               
      UPDATE stif_t 
         SET (stifdocno,
              stifseq
              ,stif001,stif002,stif003,stif021,stif004,stif022,stif005,stif006,stif007,stif008,stif009,stif010,stif011,stif018,stif016,stif017,stif020,stif023,stif024,stif025,stifsite,stifunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stif_d[g_detail_idx].stif001,g_stif_d[g_detail_idx].stif002,g_stif_d[g_detail_idx].stif003,g_stif_d[g_detail_idx].stif021,g_stif_d[g_detail_idx].stif004,g_stif_d[g_detail_idx].stif022,g_stif_d[g_detail_idx].stif005,g_stif_d[g_detail_idx].stif006,g_stif_d[g_detail_idx].stif007,g_stif_d[g_detail_idx].stif008,g_stif_d[g_detail_idx].stif009,g_stif_d[g_detail_idx].stif010,g_stif_d[g_detail_idx].stif011,g_stif_d[g_detail_idx].stif018,g_stif_d[g_detail_idx].stif016,g_stif_d[g_detail_idx].stif017,g_stif_d[g_detail_idx].stif020,g_stif_d[g_detail_idx].stif023,g_stif_d[g_detail_idx].stif024,g_stif_d[g_detail_idx].stif025,g_stif_d[g_detail_idx].stifsite,g_stif_d[g_detail_idx].stifunit) 
         WHERE stifent = g_enterprise AND stifdocno = ps_keys_bak[1] AND stifseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stif_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stif_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astt801_stif_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stin_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update2"
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL astt801_stin_t_mask_restore('restore_mask_o')
               
      UPDATE stin_t 
         SET (stindocno,
              stinseq
              ,stinsite,stinunit,stin001,stin002,stin004,stin003,stin005,stin006,stin007,stin008,stin009,stin010) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stif11_d[g_detail_idx].stinsite,g_stif11_d[g_detail_idx].stinunit,g_stif11_d[g_detail_idx].stin001,g_stif11_d[g_detail_idx].stin002,g_stif11_d[g_detail_idx].stin004,g_stif11_d[g_detail_idx].stin003,g_stif11_d[g_detail_idx].stin005,g_stif11_d[g_detail_idx].stin006,g_stif11_d[g_detail_idx].stin007,g_stif11_d[g_detail_idx].stin008,g_stif11_d[g_detail_idx].stin009,g_stif11_d[g_detail_idx].stin010) 
         WHERE stinent = g_enterprise AND stindocno = ps_keys_bak[1] AND stinseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update2"
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stin_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stin_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astt801_stin_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update2"
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF

   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF

   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stio_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update3"
      {<point name="update_b.before_update3" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL astt801_stio_t_mask_restore('restore_mask_o')
               
      UPDATE stio_t 
         SET (stiodocno,
              stioseq
              ,stiosite,stiounit,stio001,stio002,stio003,stio004,stio005,stio006,stio007) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stif13_d[g_detail_idx].stiosite,g_stif13_d[g_detail_idx].stiounit,g_stif13_d[g_detail_idx].stio001,g_stif13_d[g_detail_idx].stio002,g_stif13_d[g_detail_idx].stio003,g_stif13_d[g_detail_idx].stio004,g_stif13_d[g_detail_idx].stio005,g_stif13_d[g_detail_idx].stio006,g_stif13_d[g_detail_idx].stio007) 
         WHERE stioent = g_enterprise AND stiodocno = ps_keys_bak[1] AND stioseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update3"
      {<point name="update_b.m_update3"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stio_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stio_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astt801_stio_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update3"
      {<point name="update_b.after_update3"/>}
      #end add-point  
   END IF

   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF

   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stih_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update4"
      {<point name="update_b.before_update4" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL astt801_stih_t_mask_restore('restore_mask_o')
               
      UPDATE stih_t 
         SET (stihdocno,
              stihseq
              ,stih001,stih002,stih003,stih008,stih004,stih005,stih006,stih007,stihsite,stihunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stif2_d[g_detail_idx].stih001,g_stif2_d[g_detail_idx].stih002,g_stif2_d[g_detail_idx].stih003,g_stif2_d[g_detail_idx].stih008,g_stif2_d[g_detail_idx].stih004,g_stif2_d[g_detail_idx].stih005,g_stif2_d[g_detail_idx].stih006,g_stif2_d[g_detail_idx].stih007,g_stif2_d[g_detail_idx].stihsite,g_stif2_d[g_detail_idx].stihunit) 
         WHERE stihent = g_enterprise AND stihdocno = ps_keys_bak[1] AND stihseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update4"
      {<point name="update_b.m_update4"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stih_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stih_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astt801_stih_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update4"
      {<point name="update_b.after_update4"/>}
      #end add-point  
   END IF

   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF

   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stii_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update5"
      {<point name="update_b.before_update5" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL astt801_stii_t_mask_restore('restore_mask_o')
               
      UPDATE stii_t 
         SET (stiidocno,
              stiiseq
              ,stii001,stii002,stii003,stii010,stii004,stii005,stii006,stii007,stii008,stii009,stiisite,stiiunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stif3_d[g_detail_idx].stii001,g_stif3_d[g_detail_idx].stii002,g_stif3_d[g_detail_idx].stii003,g_stif3_d[g_detail_idx].stii010,g_stif3_d[g_detail_idx].stii004,g_stif3_d[g_detail_idx].stii005,g_stif3_d[g_detail_idx].stii006,g_stif3_d[g_detail_idx].stii007,g_stif3_d[g_detail_idx].stii008,g_stif3_d[g_detail_idx].stii009,g_stif3_d[g_detail_idx].stiisite,g_stif3_d[g_detail_idx].stiiunit) 
         WHERE stiient = g_enterprise AND stiidocno = ps_keys_bak[1] AND stiiseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update5"
      {<point name="update_b.m_update5"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stii_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stii_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astt801_stii_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update5"
      {<point name="update_b.after_update5"/>}
      #end add-point  
   END IF

   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF

   LET ls_group = "'6',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stil_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update6"
      {<point name="update_b.before_update6" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL astt801_stil_t_mask_restore('restore_mask_o')
               
      UPDATE stil_t 
         SET (stildocno,
              stilseq
              ,stil001,stil002,stil003,stil004,stil005,stil006,stil007,stil008,stilsite,stilunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stif4_d[g_detail_idx].stil001,g_stif4_d[g_detail_idx].stil002,g_stif4_d[g_detail_idx].stil003,g_stif4_d[g_detail_idx].stil004,g_stif4_d[g_detail_idx].stil005,g_stif4_d[g_detail_idx].stil006,g_stif4_d[g_detail_idx].stil007,g_stif4_d[g_detail_idx].stil008,g_stif4_d[g_detail_idx].stilsite,g_stif4_d[g_detail_idx].stilunit) 
         WHERE stilent = g_enterprise AND stildocno = ps_keys_bak[1] AND stilseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update6"
      {<point name="update_b.m_update6"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stil_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stil_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astt801_stil_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update6"
      {<point name="update_b.after_update6"/>}
      #end add-point  
   END IF

   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF

   LET ls_group = "'7',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stij_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update7"
      {<point name="update_b.before_update7" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL astt801_stij_t_mask_restore('restore_mask_o')
               
      UPDATE stij_t 
         SET (stijdocno,
              stijseq
              ,stijacti,stij001,stij002,stij003,stij004,stij005,stij006,stij007,stij008,stij009,stijsite,stijunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stif5_d[g_detail_idx].stijacti,g_stif5_d[g_detail_idx].stij001,g_stif5_d[g_detail_idx].stij002,g_stif5_d[g_detail_idx].stij003,g_stif5_d[g_detail_idx].stij004,g_stif5_d[g_detail_idx].stij005,g_stif5_d[g_detail_idx].stij006,g_stif5_d[g_detail_idx].stij007,g_stif5_d[g_detail_idx].stij008,g_stif5_d[g_detail_idx].stij009,g_stif5_d[g_detail_idx].stijsite,g_stif5_d[g_detail_idx].stijunit) 
         WHERE stijent = g_enterprise AND stijdocno = ps_keys_bak[1] AND stijseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update7"
      {<point name="update_b.m_update7"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stij_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stij_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astt801_stij_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update7"
      {<point name="update_b.after_update7"/>}
      #end add-point  
   END IF

   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF

   LET ls_group = "'8',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stik_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update8"
      {<point name="update_b.before_update8" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL astt801_stik_t_mask_restore('restore_mask_o')
               
      UPDATE stik_t 
         SET (stikdocno,
              stikseq
              ,stikacti,stik001,stik002,stik004,stik003,stik005,stiksite,stikunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stif6_d[g_detail_idx].stikacti,g_stif6_d[g_detail_idx].stik001,g_stif6_d[g_detail_idx].stik002,g_stif6_d[g_detail_idx].stik004,g_stif6_d[g_detail_idx].stik003,g_stif6_d[g_detail_idx].stik005,g_stif6_d[g_detail_idx].stiksite,g_stif6_d[g_detail_idx].stikunit) 
         WHERE stikent = g_enterprise AND stikdocno = ps_keys_bak[1] AND stikseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update8"
      {<point name="update_b.m_update8"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stik_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stik_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astt801_stik_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update8"
      {<point name="update_b.after_update8"/>}
      #end add-point  
   END IF

   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF

   LET ls_group = "'9',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stim_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update9"
      {<point name="update_b.before_update9" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL astt801_stim_t_mask_restore('restore_mask_o')
               
      UPDATE stim_t 
         SET (stimdocno,
              stimseq
              ,stim001,stim002,stim003,stim004,stim005,stim006,stim007,stim008,stim009,stim010,stim011,stim012,stim013,stim014,stim015,stim016,stim018,stim019,stim017,stimsite,stimunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stif7_d[g_detail_idx].stim001,g_stif7_d[g_detail_idx].stim002,g_stif7_d[g_detail_idx].stim003,g_stif7_d[g_detail_idx].stim004,g_stif7_d[g_detail_idx].stim005,g_stif7_d[g_detail_idx].stim006,g_stif7_d[g_detail_idx].stim007,g_stif7_d[g_detail_idx].stim008,g_stif7_d[g_detail_idx].stim009,g_stif7_d[g_detail_idx].stim010,g_stif7_d[g_detail_idx].stim011,g_stif7_d[g_detail_idx].stim012,g_stif7_d[g_detail_idx].stim013,g_stif7_d[g_detail_idx].stim014,g_stif7_d[g_detail_idx].stim015,g_stif7_d[g_detail_idx].stim016,g_stif7_d[g_detail_idx].stim018,g_stif7_d[g_detail_idx].stim019,g_stif7_d[g_detail_idx].stim017,g_stif7_d[g_detail_idx].stimsite,g_stif7_d[g_detail_idx].stimunit) 
         WHERE stiment = g_enterprise AND stimdocno = ps_keys_bak[1] AND stimseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update9"
      {<point name="update_b.m_update9"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stim_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stim_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astt801_stim_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update9"
      {<point name="update_b.after_update9"/>}
      #end add-point  
   END IF

   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF


   
   LET ls_group = "'10',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stig_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update10"
      {<point name="update_b.before_update10" mark="Y"/>}
      #end add-point
      
      #將遮罩欄位還原
      CALL astt801_stig_t_mask_restore('restore_mask_o')
               
      UPDATE stig_t 
         SET (stigdocno,stigseq,
              stigseq1
              ,stigsite,stigunit,stig001,stig002,stig003,stig004,stig006) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_stif9_d[g_detail_idx2].stigsite,g_stif9_d[g_detail_idx2].stigunit,g_stif9_d[g_detail_idx2].stig001,g_stif9_d[g_detail_idx2].stig002,g_stif9_d[g_detail_idx2].stig003,g_stif9_d[g_detail_idx2].stig004,g_stif9_d[g_detail_idx2].stig006) 
         WHERE stigent = g_enterprise AND stigdocno = ps_keys_bak[1] AND stigseq = ps_keys_bak[2] AND stigseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中 name="update_b.m_update10"
      {<point name="update_b.m_update10"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stig_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stig_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE

      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astt801_stig_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update10"
      {<point name="update_b.after_update10"/>}
      #end add-point  
   END IF

   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF


   
   #add-point:update_b段other name="update_b.other"
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
{</section>}
 
{<section id="astt801.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION astt801_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   {<point name="key_update_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   {<point name="key_update_b.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   {<point name="key_update_b.pre_function"/>}
   #end add-point
   
   #如果是上層單身則進行update
   IF ps_table = 'stif_t' THEN
      #add-point:update_b段修改前 name="key_update_b.before_update10"
      {<point name="key_update_b.before_update10" mark="Y"/>}
      #end add-point
      
      UPDATE stig_t 
         SET (stigdocno,stigseq) 
              = 
             (g_stie_m.stiedocno,g_stif_d[g_detail_idx].stifseq) 
         WHERE stigent = g_enterprise AND
               stigdocno = ps_keys_bak[1] AND stigseq = ps_keys_bak[2]
 
      #add-point:update_b段修改中 name="key_update_b.m_update10"
      {<point name="key_update_b.m_update10"/>}
      #end add-point
              
      CASE
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stig_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
            #若有多語言table資料一同更新
            
      END CASE
      
      #add-point:update_b段修改後 name="key_update_b.after_update10"
      {<point name="key_update_b.after_update10"/>}
      #end add-point
   END IF


   
END FUNCTION
{</section>}
 
{<section id="astt801.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION astt801_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   {<point name="key_delete_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   {<point name="key_delete_b.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   {<point name="key_delete_b.pre_function"/>}
   #end add-point
   
   #如果是上層單身則進行delete
   IF ps_table = 'stif_t' THEN
      #add-point:delete_b段修改前 name="key_delete_b.before_delete10"
      {<point name="key_delete_b.before_delete10" mark="Y"/>}
      #end add-point
      
      DELETE FROM stig_t 
            WHERE stigent = g_enterprise AND
                  stigdocno = ps_keys_bak[1] AND stigseq = ps_keys_bak[2]
 
      #add-point:delete_b段修改中 name="key_delete_b.m_delete10"
      {<point name="key_delete_b.m_delete10"/>}
      #end add-point
              
      CASE
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stig_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            RETURN FALSE
         OTHERWISE
      END CASE
 
       
 
      #add-point:delete_b段修改後 name="key_delete_b.after_delete10"
      {<point name="key_delete_b.after_delete10"/>}
      #end add-point
   END IF


   
   RETURN TRUE
   
END FUNCTION
{</section>}
 
{<section id="astt801.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION astt801_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   {<point name="lock_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   {<point name="lock_b.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   {<point name="lock_b.pre_function"/>}
   #end add-point
    
   #先刷新資料
   #CALL astt801_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "stif_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN astt801_bcl USING g_enterprise,
                                       g_stie_m.stiedocno,g_stif_d[g_detail_idx].stifseq     
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astt801_bcl:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "stin_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astt801_bcl2 USING g_enterprise,
                                             g_stie_m.stiedocno,g_stif11_d[g_detail_idx].stinseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astt801_bcl2:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF

   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "stio_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astt801_bcl3 USING g_enterprise,
                                             g_stie_m.stiedocno,g_stif13_d[g_detail_idx].stioseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astt801_bcl3:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF

   #鎖定整組table
   #LET ls_group = "'4',"
   #僅鎖定自身table
   LET ls_group = "stih_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astt801_bcl4 USING g_enterprise,
                                             g_stie_m.stiedocno,g_stif2_d[g_detail_idx].stihseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astt801_bcl4:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF

   #鎖定整組table
   #LET ls_group = "'5',"
   #僅鎖定自身table
   LET ls_group = "stii_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astt801_bcl5 USING g_enterprise,
                                             g_stie_m.stiedocno,g_stif3_d[g_detail_idx].stiiseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astt801_bcl5:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF

   #鎖定整組table
   #LET ls_group = "'6',"
   #僅鎖定自身table
   LET ls_group = "stil_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astt801_bcl6 USING g_enterprise,
                                             g_stie_m.stiedocno,g_stif4_d[g_detail_idx].stilseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astt801_bcl6:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF

   #鎖定整組table
   #LET ls_group = "'7',"
   #僅鎖定自身table
   LET ls_group = "stij_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astt801_bcl7 USING g_enterprise,
                                             g_stie_m.stiedocno,g_stif5_d[g_detail_idx].stijseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astt801_bcl7:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF

   #鎖定整組table
   #LET ls_group = "'8',"
   #僅鎖定自身table
   LET ls_group = "stik_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astt801_bcl8 USING g_enterprise,
                                             g_stie_m.stiedocno,g_stif6_d[g_detail_idx].stikseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astt801_bcl8:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF

   #鎖定整組table
   #LET ls_group = "'9',"
   #僅鎖定自身table
   LET ls_group = "stim_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astt801_bcl9 USING g_enterprise,
                                             g_stie_m.stiedocno,g_stif7_d[g_detail_idx].stimseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astt801_bcl9:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF


   
   #鎖定整組table
   #LET ls_group = "'10',"
   #僅鎖定自身table
   LET ls_group = "stig_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astt801_bcl10 USING g_enterprise,
                                             g_stie_m.stiedocno,g_stif_d[g_detail_idx].stifseq,
                                             g_stif9_d[g_detail_idx2].stigseq1
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astt801_bcl10:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF


   
   #add-point:lock_b段other name="lock_b.other"
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
{</section>}
 
{<section id="astt801.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION astt801_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   {<point name="unlock_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   {<point name="unlock_b.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   {<point name="unlock_b.pre_function"/>}
   #end add-point
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astt801_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astt801_bcl2
   END IF

   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astt801_bcl3
   END IF

   LET ls_group = "'4',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astt801_bcl4
   END IF

   LET ls_group = "'5',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astt801_bcl5
   END IF

   LET ls_group = "'6',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astt801_bcl6
   END IF

   LET ls_group = "'7',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astt801_bcl7
   END IF

   LET ls_group = "'8',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astt801_bcl8
   END IF

   LET ls_group = "'9',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astt801_bcl9
   END IF


   
   LET ls_group = "'10',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astt801_bcl10
   END IF


 
   #add-point:unlock_b段other name="unlock_b.other"
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
{</section>}
 
{<section id="astt801.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION astt801_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   {<point name="set_entry.define_customerization" edit="c" mark="Y"/>}
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   {<point name="set_entry.define"/>} 
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   {<point name="set_entry.pre_function"/>}
   #end add-point
   
   CALL cl_set_comp_entry("stiedocno",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("stiedocno",TRUE)
      CALL cl_set_comp_entry("stiedocdt",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
{</section>}
 
{<section id="astt801.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION astt801_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   {<point name="set_no_entry.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   {<point name="set_no_entry.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   {<point name="set_no_entry.pre_function"/>}
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("stiedocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("stiedocno",FALSE)
   END IF 
 
#  IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正) #(ver:78)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("stiedocdt",FALSE)
      END IF
#  END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
{</section>}
 
{<section id="astt801.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION astt801_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   {<point name="set_entry_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   {<point name="set_entry_b.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   {<point name="set_entry_b.pre_function"/>}
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
{</section>}
 
{<section id="astt801.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION astt801_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   {<point name="set_no_entry_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   {<point name="set_no_entry_b.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   {<point name="set_no_entry_b.pre_function"/>}
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
{</section>}
 
{<section id="astt801.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION astt801_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   {<point name="set_act_visible.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   {<point name="set_act_visible.define"/>} 
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION
{</section>}
 
{<section id="astt801.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION astt801_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   {<point name="set_act_no_visible.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   {<point name="set_act_no_visible.define"/>} 
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION
{</section>}
 
{<section id="astt801.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION astt801_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   {<point name="set_act_visible_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   {<point name="set_act_visible_b.define"/>} 
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION
{</section>}
 
{<section id="astt801.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION astt801_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   {<point name="set_act_no_visible_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   {<point name="set_act_no_visible_b.define"/>} 
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION
{</section>}
 
{<section id="astt801.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION astt801_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   {<point name="default_search.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   {<point name="default_search.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " stiedocno = '", g_argv[01], "' AND "
   END IF
   

   
   #add-point:default_search段after sql name="default_search.after_sql"
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
         INITIALIZE g_wc2_table2 TO NULL

         INITIALIZE g_wc2_table3 TO NULL

         INITIALIZE g_wc2_table4 TO NULL

         INITIALIZE g_wc2_table5 TO NULL

         INITIALIZE g_wc2_table6 TO NULL

         INITIALIZE g_wc2_table7 TO NULL

         INITIALIZE g_wc2_table8 TO NULL

         INITIALIZE g_wc2_table9 TO NULL


         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "stie_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "stif_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "stin_t" 
                  LET g_wc2_table2 = la_wc[li_idx].wc

               WHEN la_wc[li_idx].tableid = "stio_t" 
                  LET g_wc2_table3 = la_wc[li_idx].wc

               WHEN la_wc[li_idx].tableid = "stih_t" 
                  LET g_wc2_table4 = la_wc[li_idx].wc

               WHEN la_wc[li_idx].tableid = "stii_t" 
                  LET g_wc2_table5 = la_wc[li_idx].wc

               WHEN la_wc[li_idx].tableid = "stil_t" 
                  LET g_wc2_table6 = la_wc[li_idx].wc

               WHEN la_wc[li_idx].tableid = "stij_t" 
                  LET g_wc2_table7 = la_wc[li_idx].wc

               WHEN la_wc[li_idx].tableid = "stik_t" 
                  LET g_wc2_table8 = la_wc[li_idx].wc

               WHEN la_wc[li_idx].tableid = "stim_t" 
                  LET g_wc2_table9 = la_wc[li_idx].wc


               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
            OR NOT cl_null(g_wc2_table2)

            OR NOT cl_null(g_wc2_table3)

            OR NOT cl_null(g_wc2_table4)

            OR NOT cl_null(g_wc2_table5)

            OR NOT cl_null(g_wc2_table6)

            OR NOT cl_null(g_wc2_table7)

            OR NOT cl_null(g_wc2_table8)

            OR NOT cl_null(g_wc2_table9)


            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
            IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
            END IF

            IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
            END IF

            IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
            END IF

            IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
            END IF

            IF g_wc2_table6 <> " 1=1" AND NOT cl_null(g_wc2_table6) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
            END IF

            IF g_wc2_table7 <> " 1=1" AND NOT cl_null(g_wc2_table7) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
            END IF

            IF g_wc2_table8 <> " 1=1" AND NOT cl_null(g_wc2_table8) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table8
            END IF

            IF g_wc2_table9 <> " 1=1" AND NOT cl_null(g_wc2_table9) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table9
            END IF


            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
{</section>}
 
{<section id="astt801.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION astt801_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   {<point name="statechange.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_stie_m.stiedocno IS NULL

   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN astt801_cl USING g_enterprise,g_stie_m.stiedocno
   IF STATUS THEN
      CLOSE astt801_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN astt801_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE astt801_master_referesh USING g_stie_m.stiedocno INTO g_stie_m.stiesite,g_stie_m.stiedocdt,g_stie_m.stiedocno,g_stie_m.stie000,g_stie_m.stie001,g_stie_m.stie002,g_stie_m.stie200,g_stie_m.stie004,g_stie_m.stie005,g_stie_m.stie006,g_stie_m.stiestus,g_stie_m.stie007,g_stie_m.stie008,g_stie_m.stie010,g_stie_m.stie009,g_stie_m.stie011,g_stie_m.stie012,g_stie_m.stie013,g_stie_m.stie014,g_stie_m.stie015,g_stie_m.stie016,g_stie_m.stie017,g_stie_m.stie018,g_stie_m.stie003,g_stie_m.stie049,g_stie_m.stie019,g_stie_m.stie020,g_stie_m.stie021,g_stie_m.stie022,g_stie_m.stie027,g_stie_m.stie028,g_stie_m.stie029,g_stie_m.stie026,g_stie_m.stie023,g_stie_m.stie024,g_stie_m.stie025,g_stie_m.stie223,g_stie_m.stie224,g_stie_m.stie225,g_stie_m.stie030,g_stie_m.stie031,g_stie_m.stie032,g_stie_m.stie033,g_stie_m.stie034,g_stie_m.stie035,g_stie_m.stie036,g_stie_m.stie037,g_stie_m.stie038,g_stie_m.stie039,g_stie_m.stie040,g_stie_m.stie041,g_stie_m.stie042,g_stie_m.stie043,g_stie_m.stie044,g_stie_m.stie045,g_stie_m.stie046,g_stie_m.stie047,g_stie_m.stie048,g_stie_m.stie050,g_stie_m.stie051,g_stie_m.stie052,g_stie_m.stie053,g_stie_m.stieownid,g_stie_m.stieowndp,g_stie_m.stiecrtid,g_stie_m.stiecrtdp,g_stie_m.stiecrtdt,g_stie_m.stiemodid,g_stie_m.stiemoddt,g_stie_m.stiecnfid,g_stie_m.stiecnfdt,g_stie_m.stiesite_desc,g_stie_m.stie007_desc,g_stie_m.stie008_desc,g_stie_m.stie017_desc,g_stie_m.stie018_desc,g_stie_m.stie003_desc,g_stie_m.stie019_desc,g_stie_m.stie020_desc,g_stie_m.stie021_desc,g_stie_m.stie022_desc,g_stie_m.stie027_desc,g_stie_m.stie028_desc,g_stie_m.stie029_desc,g_stie_m.stie030_desc,g_stie_m.stie031_desc,g_stie_m.stie032_desc,g_stie_m.stie034_desc,g_stie_m.stie035_desc,g_stie_m.stie036_desc,g_stie_m.stie038_desc,g_stie_m.stie039_desc,g_stie_m.stie051_desc,g_stie_m.stie053_desc,g_stie_m.stieownid_desc,g_stie_m.stieowndp_desc,g_stie_m.stiemodid_desc
   
 
   #檢查是否允許此動作
   IF NOT astt801_action_chk() THEN
      CLOSE astt801_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_stie_m.stiesite,g_stie_m.stiesite_desc,g_stie_m.stiedocdt,g_stie_m.stiedocno,g_stie_m.stie000,g_stie_m.stie001,g_stie_m.stie002,g_stie_m.stie200,g_stie_m.stie004,g_stie_m.stie005,g_stie_m.stie006,g_stie_m.stiestus,g_stie_m.stie007,g_stie_m.stie007_desc,g_stie_m.stie008,g_stie_m.stie008_desc,g_stie_m.stie010,g_stie_m.stie009,g_stie_m.stie011,g_stie_m.stie012,g_stie_m.stie013,g_stie_m.stie014,g_stie_m.stie015,g_stie_m.stie016,g_stie_m.stie017,g_stie_m.stie017_desc,g_stie_m.stie018,g_stie_m.stie018_desc,g_stie_m.stie003,g_stie_m.stie003_desc,g_stie_m.stie049,g_stie_m.stie019,g_stie_m.stie019_desc,g_stie_m.stie020,g_stie_m.stie020_desc,g_stie_m.stie021,g_stie_m.stie021_desc,g_stie_m.stie022,g_stie_m.stie022_desc,g_stie_m.stie027,g_stie_m.stie027_desc,g_stie_m.stie028,g_stie_m.stie028_desc,g_stie_m.stie029,g_stie_m.stie029_desc,g_stie_m.stie026,g_stie_m.stie023,g_stie_m.stie024,g_stie_m.stie025,g_stie_m.stie223,g_stie_m.stie224,g_stie_m.stie225,g_stie_m.stie030,g_stie_m.stie030_desc,g_stie_m.stie031,g_stie_m.stie031_desc,g_stie_m.stie032,g_stie_m.stie032_desc,g_stie_m.stie033,g_stie_m.stie034,g_stie_m.stie034_desc,g_stie_m.stie035,g_stie_m.stie035_desc,g_stie_m.stie036,g_stie_m.stie036_desc,g_stie_m.stie037,g_stie_m.stie038,g_stie_m.stie038_desc,g_stie_m.stie039,g_stie_m.stie039_desc,g_stie_m.stie040,g_stie_m.stie041,g_stie_m.stie042,g_stie_m.stie043,g_stie_m.stie044,g_stie_m.stie045,g_stie_m.stie046,g_stie_m.stie047,g_stie_m.stie048,g_stie_m.stie050,g_stie_m.stie051,g_stie_m.stie051_desc,g_stie_m.stie052,g_stie_m.stie053,g_stie_m.stie053_desc,g_stie_m.stieownid,g_stie_m.stieownid_desc,g_stie_m.stieowndp,g_stie_m.stieowndp_desc,g_stie_m.stiecrtid,g_stie_m.stiecrtid_desc,g_stie_m.stiecrtdp,g_stie_m.stiecrtdp_desc,g_stie_m.stiecrtdt,g_stie_m.stiemodid,g_stie_m.stiemodid_desc,g_stie_m.stiemoddt,g_stie_m.stiecnfid,g_stie_m.stiecnfid_desc,g_stie_m.stiecnfdt
 
   CASE g_stie_m.stiestus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "FP"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/final_pass.png")
      WHEN "FR"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/final_reject.png")
      WHEN "TP"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/trial_pass.png")
      WHEN "TR"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/trial_reject.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_stie_m.stiestus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "X"
               HIDE OPTION "invalid"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "FP"
               HIDE OPTION "final_pass"
            WHEN "FR"
               HIDE OPTION "final_reject"
            WHEN "TP"
               HIDE OPTION "trial_pass"
            WHEN "TR"
               HIDE OPTION "trial_reject"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      #應用 a36 樣板自動產生(Version:5)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT astt801_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE astt801_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT astt801_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE astt801_cl
            RETURN
         END IF



	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.unconfirmed"
            {<point name="statechange.unconfirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.invalid"
            {<point name="statechange.invalid"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.confirmed"
            {<point name="statechange.confirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION final_pass
         IF cl_auth_chk_act("final_pass") THEN
            LET lc_state = "FP"
            #add-point:action控制 name="statechange.final_pass"
            {<point name="statechange.final_pass"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION final_reject
         IF cl_auth_chk_act("final_reject") THEN
            LET lc_state = "FR"
            #add-point:action控制 name="statechange.final_reject"
            {<point name="statechange.final_reject"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION trial_pass
         IF cl_auth_chk_act("trial_pass") THEN
            LET lc_state = "TP"
            #add-point:action控制 name="statechange.trial_pass"
            {<point name="statechange.trial_pass"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION trial_reject
         IF cl_auth_chk_act("trial_reject") THEN
            LET lc_state = "TR"
            #add-point:action控制 name="statechange.trial_reject"
            {<point name="statechange.trial_reject"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制 name="statechange.approved"
            {<point name="statechange.approved"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制 name="statechange.withdraw"
      #      {<point name="statechange.withdraw"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制 name="statechange.rejection"
            {<point name="statechange.rejection"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制 name="statechange.signing"
      #      {<point name="statechange.signing"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "X"
      AND lc_state <> "Y"
      AND lc_state <> "FP"
      AND lc_state <> "FR"
      AND lc_state <> "TP"
      AND lc_state <> "TR"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      ) OR 
      g_stie_m.stiestus = lc_state OR cl_null(lc_state) THEN
      CLOSE astt801_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_stie_m.stiemodid = g_user
   LET g_stie_m.stiemoddt = cl_get_current()
   LET g_stie_m.stiestus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE stie_t 
      SET (stiestus,stiemodid,stiemoddt) 
        = (g_stie_m.stiestus,g_stie_m.stiemodid,g_stie_m.stiemoddt)     
    WHERE stieent = g_enterprise AND stiedocno = g_stie_m.stiedocno

    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "FP"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/final_pass.png")
         WHEN "FR"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/final_reject.png")
         WHEN "TP"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/trial_pass.png")
         WHEN "TR"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/trial_reject.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE astt801_master_referesh USING g_stie_m.stiedocno INTO g_stie_m.stiesite,g_stie_m.stiedocdt,g_stie_m.stiedocno,g_stie_m.stie000,g_stie_m.stie001,g_stie_m.stie002,g_stie_m.stie200,g_stie_m.stie004,g_stie_m.stie005,g_stie_m.stie006,g_stie_m.stiestus,g_stie_m.stie007,g_stie_m.stie008,g_stie_m.stie010,g_stie_m.stie009,g_stie_m.stie011,g_stie_m.stie012,g_stie_m.stie013,g_stie_m.stie014,g_stie_m.stie015,g_stie_m.stie016,g_stie_m.stie017,g_stie_m.stie018,g_stie_m.stie003,g_stie_m.stie049,g_stie_m.stie019,g_stie_m.stie020,g_stie_m.stie021,g_stie_m.stie022,g_stie_m.stie027,g_stie_m.stie028,g_stie_m.stie029,g_stie_m.stie026,g_stie_m.stie023,g_stie_m.stie024,g_stie_m.stie025,g_stie_m.stie223,g_stie_m.stie224,g_stie_m.stie225,g_stie_m.stie030,g_stie_m.stie031,g_stie_m.stie032,g_stie_m.stie033,g_stie_m.stie034,g_stie_m.stie035,g_stie_m.stie036,g_stie_m.stie037,g_stie_m.stie038,g_stie_m.stie039,g_stie_m.stie040,g_stie_m.stie041,g_stie_m.stie042,g_stie_m.stie043,g_stie_m.stie044,g_stie_m.stie045,g_stie_m.stie046,g_stie_m.stie047,g_stie_m.stie048,g_stie_m.stie050,g_stie_m.stie051,g_stie_m.stie052,g_stie_m.stie053,g_stie_m.stieownid,g_stie_m.stieowndp,g_stie_m.stiecrtid,g_stie_m.stiecrtdp,g_stie_m.stiecrtdt,g_stie_m.stiemodid,g_stie_m.stiemoddt,g_stie_m.stiecnfid,g_stie_m.stiecnfdt,g_stie_m.stiesite_desc,g_stie_m.stie007_desc,g_stie_m.stie008_desc,g_stie_m.stie017_desc,g_stie_m.stie018_desc,g_stie_m.stie003_desc,g_stie_m.stie019_desc,g_stie_m.stie020_desc,g_stie_m.stie021_desc,g_stie_m.stie022_desc,g_stie_m.stie027_desc,g_stie_m.stie028_desc,g_stie_m.stie029_desc,g_stie_m.stie030_desc,g_stie_m.stie031_desc,g_stie_m.stie032_desc,g_stie_m.stie034_desc,g_stie_m.stie035_desc,g_stie_m.stie036_desc,g_stie_m.stie038_desc,g_stie_m.stie039_desc,g_stie_m.stie051_desc,g_stie_m.stie053_desc,g_stie_m.stieownid_desc,g_stie_m.stieowndp_desc,g_stie_m.stiemodid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_stie_m.stiesite,g_stie_m.stiesite_desc,g_stie_m.stiedocdt,g_stie_m.stiedocno,g_stie_m.stie000,g_stie_m.stie001,g_stie_m.stie002,g_stie_m.stie200,g_stie_m.stie004,g_stie_m.stie005,g_stie_m.stie006,g_stie_m.stiestus,g_stie_m.stie007,g_stie_m.stie007_desc,g_stie_m.stie008,g_stie_m.stie008_desc,g_stie_m.stie010,g_stie_m.stie009,g_stie_m.stie011,g_stie_m.stie012,g_stie_m.stie013,g_stie_m.stie014,g_stie_m.stie015,g_stie_m.stie016,g_stie_m.stie017,g_stie_m.stie017_desc,g_stie_m.stie018,g_stie_m.stie018_desc,g_stie_m.stie003,g_stie_m.stie003_desc,g_stie_m.stie049,g_stie_m.stie019,g_stie_m.stie019_desc,g_stie_m.stie020,g_stie_m.stie020_desc,g_stie_m.stie021,g_stie_m.stie021_desc,g_stie_m.stie022,g_stie_m.stie022_desc,g_stie_m.stie027,g_stie_m.stie027_desc,g_stie_m.stie028,g_stie_m.stie028_desc,g_stie_m.stie029,g_stie_m.stie029_desc,g_stie_m.stie026,g_stie_m.stie023,g_stie_m.stie024,g_stie_m.stie025,g_stie_m.stie223,g_stie_m.stie224,g_stie_m.stie225,g_stie_m.stie030,g_stie_m.stie030_desc,g_stie_m.stie031,g_stie_m.stie031_desc,g_stie_m.stie032,g_stie_m.stie032_desc,g_stie_m.stie033,g_stie_m.stie034,g_stie_m.stie034_desc,g_stie_m.stie035,g_stie_m.stie035_desc,g_stie_m.stie036,g_stie_m.stie036_desc,g_stie_m.stie037,g_stie_m.stie038,g_stie_m.stie038_desc,g_stie_m.stie039,g_stie_m.stie039_desc,g_stie_m.stie040,g_stie_m.stie041,g_stie_m.stie042,g_stie_m.stie043,g_stie_m.stie044,g_stie_m.stie045,g_stie_m.stie046,g_stie_m.stie047,g_stie_m.stie048,g_stie_m.stie050,g_stie_m.stie051,g_stie_m.stie051_desc,g_stie_m.stie052,g_stie_m.stie053,g_stie_m.stie053_desc,g_stie_m.stieownid,g_stie_m.stieownid_desc,g_stie_m.stieowndp,g_stie_m.stieowndp_desc,g_stie_m.stiecrtid,g_stie_m.stiecrtid_desc,g_stie_m.stiecrtdp,g_stie_m.stiecrtdp_desc,g_stie_m.stiecrtdt,g_stie_m.stiemodid,g_stie_m.stiemodid_desc,g_stie_m.stiemoddt,g_stie_m.stiecnfid,g_stie_m.stiecnfid_desc,g_stie_m.stiecnfdt
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE astt801_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL astt801_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION



{</section>}
 
{<section id="astt801.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION astt801_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   {<point name="idx_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   {<point name="idx_chk.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   {<point name="idx_chk.pre_function"/>}
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_stif_d.getLength() THEN
         LET g_detail_idx = g_stif_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stif_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stif_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail11")
      IF g_detail_idx > g_stif11_d.getLength() THEN
         LET g_detail_idx = g_stif11_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stif11_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stif11_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail13")
      IF g_detail_idx > g_stif13_d.getLength() THEN
         LET g_detail_idx = g_stif13_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stif13_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stif13_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 4 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_stif2_d.getLength() THEN
         LET g_detail_idx = g_stif2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stif2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stif2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 5 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_stif3_d.getLength() THEN
         LET g_detail_idx = g_stif3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stif3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stif3_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 6 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail4")
      IF g_detail_idx > g_stif4_d.getLength() THEN
         LET g_detail_idx = g_stif4_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stif4_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stif4_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 7 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail5")
      IF g_detail_idx > g_stif5_d.getLength() THEN
         LET g_detail_idx = g_stif5_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stif5_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stif5_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 8 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail6")
      IF g_detail_idx > g_stif6_d.getLength() THEN
         LET g_detail_idx = g_stif6_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stif6_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stif6_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 9 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail7")
      IF g_detail_idx > g_stif7_d.getLength() THEN
         LET g_detail_idx = g_stif7_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stif7_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stif7_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 10 THEN
      LET g_detail_idx2 = g_curr_diag.getCurrentRow("s_detail9")
      IF g_detail_idx2 > g_stif9_d.getLength() THEN
         LET g_detail_idx2 = g_stif9_d.getLength()
      END IF
      IF g_detail_idx2 = 0 AND g_stif9_d.getLength() <> 0 THEN
         LET g_detail_idx2 = 1
      END IF
      DISPLAY g_detail_idx2 TO FORMONLY.idx
      DISPLAY g_stif9_d.getLength() TO FORMONLY.cnt
   END IF

   
   #add-point:idx_chk段other name="idx_chk.other"
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
{</section>}
 
{<section id="astt801.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION astt801_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   {<point name="b_fill2.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   {<point name="b_fill2.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   {<point name="b_fill2.pre_function"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
   IF astt801_fill_chk(10) THEN
      IF (pi_idx = 10 OR pi_idx = 0 ) AND g_stif_d.getLength() > 0 THEN
               CALL g_stif9_d.clear()

         
         #取得該單身上階單身的idx
         LET g_detail_idx = g_detail_idx_list[1]
         
         LET g_sql = "SELECT  DISTINCT stigsite,stigunit,stigseq1,stig001,stig002,stig003,stig004,stig006  FROM stig_t",    
                     "",
                     
                     " WHERE stigent=? AND stigdocno=? AND stigseq=?"
         
         IF NOT cl_null(g_wc2_table10) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table10 CLIPPED
         END IF
         
         LET g_sql = g_sql, " ORDER BY  stig_t.stigseq1" 
                            
         #add-point:單身填充前 name="b_fill2.before_fill10"
         {<point name="b_fill2.before_fill10" />}
         #end add-point
         
         #先清空資料
               CALL g_stif9_d.clear()

         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astt801_pb10 FROM g_sql
         DECLARE b_fill_curs10 CURSOR FOR astt801_pb10
         
      #  OPEN b_fill_curs10 USING g_enterprise,g_stie_m.stiedocno,g_stif_d[g_detail_idx].stifseq   #(ver:78)
         LET l_ac = 1
         FOREACH b_fill_curs10 USING g_enterprise,g_stie_m.stiedocno,g_stif_d[g_detail_idx].stifseq INTO g_stif9_d[l_ac].stigsite,g_stif9_d[l_ac].stigunit,g_stif9_d[l_ac].stigseq1,g_stif9_d[l_ac].stig001,g_stif9_d[l_ac].stig002,g_stif9_d[l_ac].stig003,g_stif9_d[l_ac].stig004,g_stif9_d[l_ac].stig006   #(ver:78)
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               EXIT FOREACH
            END IF
            
            #add-point:b_fill段資料填充 name="b_fill2.fill10"
            {<point name="b_fill2.fill10"/>}
            #end add-point
           
            IF l_ac > g_max_rec THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code = 9035 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               EXIT FOREACH
            END IF
            
            LET l_ac = l_ac + 1
            
         END FOREACH
               CALL g_stif9_d.deleteElement(g_stif9_d.getLength())

      END IF
   END IF


      
   LET g_stif9_d_mask_o.* =  g_stif9_d.*
   FOR l_ac = 1 TO g_stif9_d.getLength()
      LET g_stif9_d_mask_o[l_ac].* =  g_stif9_d[l_ac].*
      CALL astt801_stig_t_mask()
      LET g_stif9_d_mask_n[l_ac].* =  g_stif9_d[l_ac].*
   END FOR

      
   #add-point:單身填充後 name="b_fill2.after_fill"
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL astt801_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
{</section>}
 
{<section id="astt801.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION astt801_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   {<point name="fill_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   {<point name="fill_chk.define"/>} 
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1')  AND 
      (cl_null(g_wc2_table4) OR g_wc2_table4.trim() = '1=1')  AND 
      (cl_null(g_wc2_table5) OR g_wc2_table5.trim() = '1=1')  AND 
      (cl_null(g_wc2_table6) OR g_wc2_table6.trim() = '1=1')  AND 
      (cl_null(g_wc2_table7) OR g_wc2_table7.trim() = '1=1')  AND 
      (cl_null(g_wc2_table8) OR g_wc2_table8.trim() = '1=1')  AND 
      (cl_null(g_wc2_table9) OR g_wc2_table9.trim() = '1=1')  AND 
      (cl_null(g_wc2_table10) OR g_wc2_table10.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
{</section>}
 
{<section id="astt801.status_show" >}
PRIVATE FUNCTION astt801_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   {<point name="status_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   {<point name="status_show.define"/>} 
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION
{</section>}
 
{<section id="astt801.mask_functions" >}
&include "erp/ast/astt801_mask.4gl"
{</section>}
 
{<section id="astt801.signature" >}
   #應用 a39 樣板自動產生(Version:10)
#+ BPM提交
PRIVATE FUNCTION astt801_send()
   #add-point:send段define(客製用) name="send.define_customerization"
   {<point name="send.define_customerization" edit="c" mark="Y"/>}
   #end add-point 
   #add-point:send段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="send.define"
   {<point name="send.define"/>}
   #end add-point 
   
   #add-point:Function前置處理  name="send.pre_function"
   {<point name="send.pre_function"/>}
   #end add-point
   
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
   LET g_wc2_table2 = " 1=1"
   LET g_wc2_table3 = " 1=1"
   LET g_wc2_table4 = " 1=1"
   LET g_wc2_table5 = " 1=1"
   LET g_wc2_table6 = " 1=1"
   LET g_wc2_table7 = " 1=1"
   LET g_wc2_table8 = " 1=1"
   LET g_wc2_table9 = " 1=1"

 
   CALL astt801_show()
   CALL astt801_set_pk_array()
   
   #add-point: 初始化的ADP name="send.before_send"
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_stie_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_stif_d))
   CALL cl_bpm_set_detail_data("s_detail11", util.JSONArray.fromFGL(g_stif11_d))
   CALL cl_bpm_set_detail_data("s_detail13", util.JSONArray.fromFGL(g_stif13_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_stif2_d))
   CALL cl_bpm_set_detail_data("s_detail3", util.JSONArray.fromFGL(g_stif3_d))
   CALL cl_bpm_set_detail_data("s_detail4", util.JSONArray.fromFGL(g_stif4_d))
   CALL cl_bpm_set_detail_data("s_detail5", util.JSONArray.fromFGL(g_stif5_d))
   CALL cl_bpm_set_detail_data("s_detail6", util.JSONArray.fromFGL(g_stif6_d))
   CALL cl_bpm_set_detail_data("s_detail7", util.JSONArray.fromFGL(g_stif7_d))
   CALL cl_bpm_set_detail_data("s_detail9", util.JSONArray.fromFGL(g_stif9_d))

 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP name="send.before_cli"
   {<point name="send.before_cli" />}
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP name="send.after_send"
   {<point name="send.after_send" />}
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL astt801_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL astt801_ui_headershow()
   CALL astt801_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION



#應用 a40 樣板自動產生(Version:9)
#+ BPM抽單
PRIVATE FUNCTION astt801_draw_out()
   #add-point:draw段define name="draw.define_customerization"
   {<point name="draw.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:draw段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="draw.define"
   {<point name="draw.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="draw.pre_function"
   {<point name="draw.pre_function"/>}
   #end add-point
   
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_idx].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL astt801_ui_headershow()  
   CALL astt801_ui_detailshow()
 
   #add-point:Function後置處理  name="draw.after_function"
   {<point name="draw.after_function"/>}
   #end add-point
 
   RETURN TRUE
   
END FUNCTION
 



{</section>}
 
{<section id="astt801.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION astt801_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   {<point name="set_pk_array.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_stie_m.stiedocno
   LET g_pk_array[1].column = 'stiedocno'

   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION



{</section>}
 
{<section id="astt801.other_dialog" readonly="Y" >}
   
{</section>}
 
{<section id="astt801.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION astt801_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   {<point name="msgcentre_notify.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   {<point name="msgcentre_notify.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   {<point name="msgcentre_notify.pre_function"/>}
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL astt801_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_stie_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION



{</section>}
 
{<section id="astt801.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION astt801_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   {<point name="action_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   {<point name="action_chk.define"/>} 
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   {<point name="action_chk.action_chk"/>}
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
{</section>}
 
{<section id="astt801.other_function" readonly="Y" >}
{<point name="other.function"/>}
{</section>}
 
 

