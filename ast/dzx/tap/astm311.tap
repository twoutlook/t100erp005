<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="astm311" std_prog="astm311" erpver="1.0" module="AST" ver="2" env="s" zone="t10prd" booking="Y" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
    <start_arg value="" status=""/>
  </other>
  <point name="function.astm311_display_stas003" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+display
PRIVATE FUNCTION astm311_display_stas003(p_stas003)
   DEFINE p_stas003   LIKE stas_t.stas003
   SELECT imaal003,imaal004  INTO g_stas_d[l_ac].imaal003,g_stas_d[l_ac].imaal004 
     FROM imaal_t
    WHERE imaal001 = p_stas003 AND imaalent = g_enterprise AND imaal002 = g_dlang
    
   SELECT imaa009,imaa126,imaa104
     INTO g_stas_d[l_ac].imaa009,g_stas_d[l_ac].imaa126,g_stas_d[l_ac].imaa104
     FROM imaa_t
    WHERE imaa001 = p_stas003  AND imaaent = g_enterprise 
    
   SELECT  rtaxl003 INTO  g_stas_d[l_ac].imaa009_desc
     FROM rtaxl_t
    WHERE rtaxl001 = g_stas_d[l_ac].imaa009  AND rtaxl002 = g_dlang
    
   SELECT oocql004 INTO   g_stas_d[l_ac].imaa126_desc
     FROM oocql_t
    WHERE oocql001 = '2002'  AND oocql002 = g_stas_d[l_ac].imaa126 AND oocql003 = g_dlang
    
   SELECT oocal003 INTO g_stas_d[l_ac].imaa104_desc 
     FROM oocal_t
    WHERE oocal001 = g_stas_d[l_ac].imaa104 AND oocal002 = g_dlang
    
   #SELECT oocal003 INTO g_stas_d[l_ac].imaa106_desc 
   #  FROM oocal_t
   # WHERE oocal001 = g_stas_d[l_ac].imaa106 AND oocal002 = g_dlang
   #CALL astm311_stas008_ref() 
END FUNCTION]]>
  </point>
  <point name="function.astm311_stas008_ref" order="2" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#display stas008
PRIVATE FUNCTION astm311_stas008_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stas_d[l_ac].stas008
   CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_stas_d[l_ac].stas008_desc = '', g_rtn_fields[1] , ''
   DISPLAY  g_stas_d[l_ac].stas008_desc to s_detail1[l_ac].stas008_desc
END FUNCTION]]>
  </point>
  <point name="function.astm311_stas005_ref" order="3" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#display stas005
PRIVATE FUNCTION astm311_stas005_ref()
   SELECT oocal003 INTO g_stas_d[l_ac].stas005_desc 
     FROM oocal_t
    WHERE oocal001 = g_stas_d[l_ac].stas005 AND oocal002 = g_dlang
   DISPLAY  g_stas_d[l_ac].stas005_desc to s_detail1[l_ac].stas005_desc  
END FUNCTION]]>
  </point>
  <point name="b_fill.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      call astm311_display_stas003(g_stas_d[l_ac].stas003)]]>
  </point>
  <point name="browser_fill.before_browser_fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_aooi500_sql_where(g_prog,'starsite') RETURNING l_where
   LET g_wc = g_wc," AND ",l_where
   LET g_wc  = g_wc.trim() ]]>
  </point>
  <point name="browser_fill.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_where           STRING]]>
  </point>
  <point name="construct.c.page1.imaa009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_rtax001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imaa009  #顯示到畫面上

            NEXT FIELD imaa009                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.imaa104" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imaa104  #顯示到畫面上

            NEXT FIELD imaa104                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.imaa106" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imaa106  #顯示到畫面上

            NEXT FIELD imaa106                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.imaa126" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO imaa126  #顯示到畫面上

            NEXT FIELD imaa126                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.stas003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'            
            LET g_qryparam.reqry = FALSE
            CALL q_imay001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stas003  #顯示到畫面上

            NEXT FIELD stas003                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.stas004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imay003_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stas004  #顯示到畫面上

            NEXT FIELD stas004                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.stas005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'            
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stas005  #顯示到畫面上

            NEXT FIELD stas005                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.stas008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'            
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stas008  #顯示到畫面上

            NEXT FIELD stas008                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.stas009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'            
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stas009  #顯示到畫面上

            NEXT FIELD stas009                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.stas020" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_oodb002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stas020  #顯示到畫面上

            NEXT FIELD stas020                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.stas022" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:1)
            #開窗c段
    
            #ken----------------------s
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            CALL q_ooaj002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stas022  #顯示到畫面上
            NEXT FIELD stas022                     #返回原欄位
            #ken----------------------e    
]]>
  </point>
  <point name="construct.c.page1.stas023" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:1)
            #開窗c段

            #ken----------------------s
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stas023  #顯示到畫面上
            NEXT FIELD stas023                     #返回原欄位
            #ken----------------------e
]]>
  </point>
  <point name="construct.c.stan013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stan013  #顯示到畫面上

            NEXT FIELD stan013                     #返回原欄位

]]>
  </point>
  <point name="construct.c.star001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_star001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO star001  #顯示到畫面上

            NEXT FIELD star001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.star003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "('1','3')"
            CALL q_pmaa001_1()                           #呼叫開窗
            LET g_qryparam.arg1 = null
            DISPLAY g_qryparam.return1 TO star003  #顯示到畫面上

            NEXT FIELD star003                     #返回原欄位

]]>
  </point>
  <point name="construct.c.star004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_stan001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO star004  #顯示到畫面上

            NEXT FIELD star004                     #返回原欄位

]]>
  </point>
  <point name="construct.c.star006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_staa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO star006  #顯示到畫面上

            NEXT FIELD star006                     #返回原欄位

]]>
  </point>
  <point name="construct.c.star007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            
            #ken----------------------s            
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO star007  #顯示到畫面上

            NEXT FIELD star007                     #返回原欄位
            #ken----------------------e

]]>
  </point>
  <point name="construct.c.star008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:1)
            #開窗c段
            
            #ken----------------------s
            IF s_aooi500_setpoint(g_prog,'star008') THEN
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.where = s_aooi500_q_where(g_prog,'star008',g_site,'c')   #150308-00001#5  By benson add 'c'
               CALL q_ooef001_24()
               DISPLAY g_qryparam.return1 TO star008          #顯示到畫面上
               NEXT FIELD star008                             #返回原欄位
            ELSE    
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.where = "ooef303 = 'Y' "
               CALL q_ooef001()                           #呼叫開窗
               DISPLAY g_qryparam.return1 TO star008  #顯示到畫面上
               NEXT FIELD star008                     #返回原欄位
            END IF
            #ken----------------------e                    #返回原欄位
    

]]>
  </point>
  <point name="construct.c.star009" order="" ver="2" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_star009()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO star009  #顯示到畫面上

            NEXT FIELD star009                     #返回原欄位

]]>
  </point>
  <point name="construct.c.starcnfid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO starcnfid  #顯示到畫面上

            NEXT FIELD starcnfid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.starcrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO starcrtdp  #顯示到畫面上

            NEXT FIELD starcrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.starcrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO starcrtid  #顯示到畫面上

            NEXT FIELD starcrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.starmodid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO starmodid  #顯示到畫面上

            NEXT FIELD starmodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.starowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO starowndp  #顯示到畫面上

            NEXT FIELD starowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.starownid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO starownid  #顯示到畫面上

            NEXT FIELD starownid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.starsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'starsite',g_site,'c')    
            CALL q_ooef001_24()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO starsite  #顯示到畫面上
            NEXT FIELD starsite                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.starunit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
#            CALL q_ooef001()                           #呼叫開窗
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'starunit',g_site,'c')   #150308-00001#5  By benson add 'c'
            CALL q_ooef001_24()
            DISPLAY g_qryparam.return1 TO starunit  #顯示到畫面上
            LET g_qryparam.where = ''

            NEXT FIELD starunit                     #返回原欄位

]]>
  </point>
  <point name="fetch.action_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_star_m.starstus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   ELSE
      CALL cl_set_act_visible("modify,delete,modify_detail", TRUE)   
   END IF ]]>
  </point>
  <point name="fetch.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL astm311_set_act_visible_b()
   CALL astm311_set_act_no_visible_b()]]>
  </point>
  <point name="init.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success LIKE type_t.num5      #150308-00001#5  By benson 150309]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_combo_scc_part('star005','6013','1,2,3')
   CALL s_aooi500_create_temp() RETURNING l_success    #150308-00001#5  By benson 150309]]>
  </point>
  <point name="input.a.page1.imaa009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stas_d[l_ac].imaa009
            CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stas_d[l_ac].imaa009_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stas_d[l_ac].imaa009_desc
]]>
  </point>
  <point name="input.a.page1.imaa104" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stas_d[l_ac].imaa104
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stas_d[l_ac].imaa104_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stas_d[l_ac].imaa104_desc
]]>
  </point>
  <point name="input.a.page1.imaa106" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stas_d[l_ac].imaa106
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stas_d[l_ac].imaa106_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stas_d[l_ac].imaa106_desc
]]>
  </point>
  <point name="input.a.page1.imaa126" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stas_d[l_ac].imaa126
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2002' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stas_d[l_ac].imaa126_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stas_d[l_ac].imaa126_desc
]]>
  </point>
  <point name="input.a.page1.stas002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_star_m.star001) AND NOT cl_null(g_stas_d[l_ac].stas002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_star_m.star001 != g_star001_t OR g_stas_d[l_ac].stas002 != g_stas_d_t.stas002))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stas_t WHERE "||"stasent = '" ||g_enterprise|| "' AND "||"stas001 = '"||g_star_m.star001 ||"' AND "|| "stas002 = '"||g_stas_d[l_ac].stas002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.stas005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stas_d[l_ac].stas005
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stas_d[l_ac].stas005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stas_d[l_ac].stas005_desc
]]>
  </point>
  <point name="input.a.page1.stas008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stas_d[l_ac].stas008
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stas_d[l_ac].stas008_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stas_d[l_ac].stas008_desc
]]>
  </point>
  <point name="input.a.page1.stas009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stas_d[l_ac].stas009
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_stas_d[l_ac].stas009_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stas_d[l_ac].stas009_desc
]]>
  </point>
  <point name="input.a.page1.stas020" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stas_d[l_ac].stas020
            CALL ap_ref_array2(g_ref_fields,"SELECT oodbl004 FROM oodbl_t WHERE oodblent='"||g_enterprise||"' AND oodbl002=? AND oodbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stas_d[l_ac].stas020_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stas_d[l_ac].stas020_desc
]]>
  </point>
  <point name="input.a.page1.stas022" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #ken----------------------s
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stas_d[l_ac].stas022
            CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stas_d[l_ac].stas022_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stas_d[l_ac].stas022_desc
            #ken----------------------e
]]>
  </point>
  <point name="input.a.page1.stas023" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #ken----------------------s
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stas_d[l_ac].stas023
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stas_d[l_ac].stas023_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stas_d[l_ac].stas023_desc
            #ken----------------------e
]]>
  </point>
  <point name="input.a.stan013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_star_m.stan013
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_star_m.stan013_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_star_m.stan013_desc
]]>
  </point>
  <point name="input.a.star001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_star_m.star001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_star_m.star001 != g_star001_t ))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM star_t WHERE "||"starent = '" ||g_enterprise|| "' AND "||"star001 = '"||g_star_m.star001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
  </point>
  <point name="input.a.star003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_star_m.star003
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal003 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_star_m.star003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_star_m.star003_desc
]]>
  </point>
  <point name="input.a.star006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_star_m.star006
            CALL ap_ref_array2(g_ref_fields,"SELECT staal003 FROM staal_t WHERE staalent='"||g_enterprise||"' AND staal001=? AND staal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_star_m.star006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_star_m.star006_desc
]]>
  </point>
  <point name="input.a.star007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #ken----------------------s
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_star_m.star007
            CALL ap_ref_array2(g_ref_fields,"SELECT oodcl003 FROM oodcl_t WHERE oodclent='"||g_enterprise||"' AND oodcl001=? AND oodcl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_star_m.star007_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_star_m.star007_desc
            #ken----------------------e
            
]]>
  </point>
  <point name="input.a.star008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #ken----------------------s
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_star_m.star008
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_star_m.star008_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_star_m.star008_desc
            #ken----------------------e
]]>
  </point>
  <point name="input.a.star009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_star_m.star009
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_star_m.star009_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_star_m.star009_desc
]]>
  </point>
  <point name="input.a.starsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_star_m.starsite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_star_m.starsite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_star_m.starsite_desc

            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_star_m.star001) AND NOT cl_null(g_star_m.starsite) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_star_m.star001 != g_star001_t  OR g_star_m.starsite != g_starsite_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM star_t WHERE "||"starent = '" ||g_enterprise|| "' AND "||"star001 = '"||g_star_m.star001 ||"' AND "|| "starsite = '"||g_star_m.starsite ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.starunit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_star_m.starunit
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_star_m.starunit_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_star_m.starunit_desc
]]>
  </point>
  <point name="input.c.page1.imaa126" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stas_d[l_ac].imaa126             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            CALL q_oocq002()                                #呼叫開窗

            LET g_stas_d[l_ac].imaa126 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_stas_d[l_ac].imaa126 TO imaa126              #顯示到畫面上

            NEXT FIELD imaa126                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.stas003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stas_d[l_ac].stas003             #給予default值

            #給予arg

            CALL q_imay001()                                #呼叫開窗

            LET g_stas_d[l_ac].stas003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_stas_d[l_ac].stas003 TO stas003              #顯示到畫面上

            NEXT FIELD stas003                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.stas004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stas_d[l_ac].stas004             #給予default值

            #給予arg

            CALL q_imay003_1()                                #呼叫開窗

            LET g_stas_d[l_ac].stas004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_stas_d[l_ac].stas004 TO stas004              #顯示到畫面上

            NEXT FIELD stas004                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.stas005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stas_d[l_ac].stas005             #給予default值

            #給予arg

            CALL q_ooca001_1()                                #呼叫開窗

            LET g_stas_d[l_ac].stas005 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_stas_d[l_ac].stas005 TO stas005              #顯示到畫面上

            NEXT FIELD stas005                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.stas008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stas_d[l_ac].stas008             #給予default值

            #給予arg

            CALL q_ooca001_1()                                #呼叫開窗

            LET g_stas_d[l_ac].stas008 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_stas_d[l_ac].stas008 TO stas008              #顯示到畫面上

            NEXT FIELD stas008                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.stas009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stas_d[l_ac].stas009             #給予default值

            #給予arg

            CALL q_ooag001_4()                                #呼叫開窗

            LET g_stas_d[l_ac].stas009 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_stas_d[l_ac].stas009 TO stas009              #顯示到畫面上

            NEXT FIELD stas009                          #返回原欄位

]]>
  </point>
  <point name="input.c.stan013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_star_m.stan013             #給予default值

            #給予arg

            CALL q_ooea001_2()                                #呼叫開窗

            LET g_star_m.stan013 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_star_m.stan013 TO stan013              #顯示到畫面上

            NEXT FIELD stan013                          #返回原欄位

]]>
  </point>
  <point name="input.c.star003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_star_m.star003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #交易對象類型

            CALL q_pmaa001_1()                                #呼叫開窗

            LET g_star_m.star003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_star_m.star003 TO star003              #顯示到畫面上

            NEXT FIELD star003                          #返回原欄位

]]>
  </point>
  <point name="input.c.star004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_star_m.star004             #給予default值

            #給予arg

            CALL q_stan001()                                #呼叫開窗

            LET g_star_m.star004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_star_m.star004 TO star004              #顯示到畫面上

            NEXT FIELD star004                          #返回原欄位

]]>
  </point>
  <point name="input.c.star006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_star_m.star006             #給予default值

            #給予arg

            CALL q_staa001()                                #呼叫開窗

            LET g_star_m.star006 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_star_m.star006 TO star006              #顯示到畫面上

            NEXT FIELD star006                          #返回原欄位

]]>
  </point>
  <point name="input.c.star007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_star_m.star007             #給予default值

            #給予arg

            CALL q_oodb002()                                #呼叫開窗

            LET g_star_m.star007 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_star_m.star007 TO star007              #顯示到畫面上

            NEXT FIELD star007                          #返回原欄位

]]>
  </point>
  <point name="input.c.starunit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_star_m.starunit             #給予default值

            #給予arg

            CALL q_ooef001()                                #呼叫開窗

            LET g_star_m.starunit = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_star_m.starunit TO starunit              #顯示到畫面上

            NEXT FIELD starunit                          #返回原欄位

]]>
  </point>
  <point name="main.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success LIKE type_t.num5      #150308-00001#5  By benson 150309]]>
  </point>
  <point name="main.exit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_aooi500_drop_temp() RETURNING l_success      #150308-00001#5  By benson 150309]]>
  </point>
  <point name="modify.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      IF g_star_m.starstus MATCHES "[DR]" THEN 
         LET g_star_m.starstus = "N"
      END IF ]]>
  </point>
  <point name="query.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_visible("stas025",TRUE)    #结算扣率]]>
  </point>
  <point name="set_act_no_visible.set_act_no_visible" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #應用 a63 樣板自動產生(Version:1)
   IF g_star_m.starstus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF

]]>
  </point>
  <point name="set_act_no_visible_b.set_act_no_visible_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #150512-00006#1 2015/05/18 By geza add(S)
   IF g_star_m.star005 != '3' THEN
      CALL cl_set_comp_visible("stas025",FALSE)    #结算扣率
   END IF
   #150512-00006#1 2015/05/18 By geza add(E)]]>
  </point>
  <point name="set_act_visible_b.set_act_visible_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_visible("stas025",TRUE)    #结算扣率]]>
  </point>
  <point name="show.body.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL astm311_display_stas003(g_stas_d[l_ac].stas003)          
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stas_d[l_ac].stas009
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_stas_d[l_ac].stas009_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stas_d[l_ac].stas009_desc
      SELECT ooef019 INTO l_ooef019 FROM ooef_t WHERE ooef001 = g_star_m.starunit and ooefent = g_enterprise      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_stas_d[l_ac].stas020
      CALL ap_ref_array2(g_ref_fields,"SELECT oodbl004 FROM oodbl_t WHERE oodblent='"||g_enterprise||"' AND oodbl002=? AND oodbl003='"||g_dlang||"' AND oodbl001='"||l_ooef019||"'","") RETURNING g_rtn_fields
      LET g_stas_d[l_ac].stas020_desc = '', g_rtn_fields[1] , ''
      DISPLAY  g_stas_d[l_ac].stas020_desc TO s_detail1[l_ac].stas020_desc
      call astm311_stas005_ref()]]>
  </point>
  <point name="show.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   define l_ooef019  like ooef_t.ooef019]]>
  </point>
  <point name="show.head.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            #ken_mark-------------------------------s
            #SELECT stan013 INTO g_star_m.stan013 FROM stan_t
            # WHERE stan001 = g_star_m.star004 AND stanent = g_enterprise
            #
            #INITIALIZE g_ref_fields TO NULL
            #LET g_ref_fields[1] = g_star_m.stan013
            #CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            #LET g_star_m.stan013_desc = '', g_rtn_fields[1] , ''
            #DISPLAY BY NAME g_star_m.stan013_desc            
            #DISPLAY BY NAME g_star_m.stan013
            #ken_mark-------------------------------e
            
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_star_m.star003
#            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal003 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_star_m.star003_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_star_m.star003_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_star_m.star006
#            CALL ap_ref_array2(g_ref_fields,"SELECT staal003 FROM staal_t WHERE staalent='"||g_enterprise||"' AND staal001=? AND staal002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_star_m.star006_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_star_m.star006_desc
#
#            
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_star_m.starunit
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_star_m.starunit_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_star_m.starunit_desc
#            
#            
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_star_m.starownid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_star_m.starownid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_star_m.starownid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_star_m.starowndp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_star_m.starowndp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_star_m.starowndp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_star_m.starcrtid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_star_m.starcrtid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_star_m.starcrtid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_star_m.starcrtdp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_star_m.starcrtdp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_star_m.starcrtdp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_star_m.starmodid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_star_m.starmodid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_star_m.starmodid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_star_m.starcnfid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_star_m.starcnfid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_star_m.starcnfid_desc
]]>
  </point>
  <point name="statechange.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CASE
                
      WHEN lc_state = 'X' 
         LET g_star_m.starcnfdt=null
         LET g_star_m.starcnfid=null
      WHEN lc_state = 'N'
         LET g_star_m.starcnfdt=null 
         LET g_star_m.starcnfid=null         
      WHEN lc_state = 'Y' 
         LET g_star_m.starcnfdt=cl_get_current()
         LET g_star_m.starcnfid=g_user
      OTHERWISE 
         RETURN     
   END CASE 
   UPDATE star_t SET starcnfdt = g_star_m.starcnfdt,
                     starcnfid = g_star_m.starcnfid
    WHERE starent = g_enterprise AND star001 = g_star_m.star001
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

   END IF
   SELECT starstus,starcnfid,starcnfdt
     INTO g_star_m.starstus,g_star_m.starcnfid,g_star_m.starcnfdt
     FROM star_t
    WHERE starent = g_enterprise AND star001 = g_star_m.star001
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_star_m.starcnfid
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_star_m.starcnfid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_star_m.starcnfid_desc ]]>
  </point>
  <point name="statechange.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[        ]]>
  </point>
  <point name="statechange.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #IF g_star_m.starstus = 'X' or g_star_m.starstus = 'Y' or g_star_m.starstus = 'C' THEN
   #   RETURN
   #END IF
   
   RETURN #ken---add 此主檔不可修改狀態
   ]]>
  </point>
  <point name="statechange.before_menu" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL cl_set_act_visible("invalid,unconfirmed,confirmed", false)
#      CALL cl_set_act_visible("invalid,open,confirmed", true)
#      IF g_star_m.starstus <> 'N' THEN
#         CALL cl_set_act_visible("invalid", FALSE)
#      ELSE
#         CALL cl_set_act_visible("invalid", TRUE)
#         CALL cl_set_act_visible("open", FALSE)      
#      END IF
#      IF g_star_m.starstus = 'Y' THEN
#         CALL cl_set_act_visible("open", TRUE)
#         CALL cl_set_act_visible("confirmed", FALSE)      
#      END IF
#      IF g_star_m.starstus = 'X' THEN
#         CALL cl_set_act_visible("invalid,open,confirmed", false)      
#      END IF
      CALL cl_set_act_visible("signing,withdraw",FALSE)
#      CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
      CALL cl_set_act_visible("closed",FALSE)

      CASE g_star_m.starstus
         WHEN "N"  
            CALL cl_set_act_visible("unconfirmed,hold",FALSE)
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            IF cl_bpm_chk() THEN
                CALL cl_set_act_visible("signing",TRUE)
                CALL cl_set_act_visible("confirmed",FALSE)
            END IF
 
         WHEN "R"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE)

         WHEN "D"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE) 
          
         WHEN "X"
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)

         WHEN "Y"
            CALL cl_set_act_visible("invalid,confirmed,hold",FALSE)
         
         WHEN "W"    #只能顯示抽單;其餘應用功能皆隱藏
             CALL cl_set_act_visible("withdraw",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)
         
         WHEN "A"     #只能顯示確認; 其餘應用功能皆隱藏
#             CALL cl_set_act_visible("confirmed ",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,hold",FALSE)

      END CASE]]>
  </point>
  <point name="statechange.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#   RETURN]]>
  </point>
  <section id="astm311.action_chk" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION astm311_action_chk()
   #add-point:action_chk段define
   {<point name="action_chk.define" edit="s"/>}
   #end add-point
   #add-point:action_chk段define(客製用)
   {<point name="action_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:action_chk段action_chk
   {<point name="action_chk.action_chk"/>}
   #end add-point
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="astm311.b_fill" ver="18" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION astm311_b_fill()
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define
   {<point name="b_fill.define" edit="s"/>}
   #end add-point     
   #add-point:b_fill段define(客製用)
   {<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point     
 
   CALL g_stas_d.clear()    #g_stas_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF astm311_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE stas002,stas004,stas003,stas005,stas006,stas008,stas022,stas023, 
             stas010,stas011,stas020,stas021,stas024,stas012,stas013,stas014,stas015,stas016,stas009, 
             stas017,stas018,stas019,stas025 ,t1.oocal003 ,t2.oocal003 ,t3.ooail003 ,t4.oocal003 ,t5.ooag011 FROM stas_t", 
                
                     " INNER JOIN star_t ON star001 = stas001 ",
                     " AND starsite = stassite ",
 
                     #"",
                     
                     "",
                                    " LEFT JOIN oocal_t t1 ON t1.oocalent='"||g_enterprise||"' AND t1.oocal001=stas005 AND t1.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t2 ON t2.oocalent='"||g_enterprise||"' AND t2.oocal001=stas008 AND t2.oocal002='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t3 ON t3.ooailent='"||g_enterprise||"' AND t3.ooail001=stas022 AND t3.ooail002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t4 ON t4.oocalent='"||g_enterprise||"' AND t4.oocal001=stas023 AND t4.oocal002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent='"||g_enterprise||"' AND t5.ooag001=stas009  ",
 
                     " WHERE stasent=? AND stas001=? AND stassite=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stas_t.stas002"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astm311_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR astm311_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_star_m.star001,g_star_m.starsite
                                               
      FOREACH b_fill_cs INTO g_stas_d[l_ac].stas002,g_stas_d[l_ac].stas004,g_stas_d[l_ac].stas003,g_stas_d[l_ac].stas005, 
          g_stas_d[l_ac].stas006,g_stas_d[l_ac].stas008,g_stas_d[l_ac].stas022,g_stas_d[l_ac].stas023, 
          g_stas_d[l_ac].stas010,g_stas_d[l_ac].stas011,g_stas_d[l_ac].stas020,g_stas_d[l_ac].stas021, 
          g_stas_d[l_ac].stas024,g_stas_d[l_ac].stas012,g_stas_d[l_ac].stas013,g_stas_d[l_ac].stas014, 
          g_stas_d[l_ac].stas015,g_stas_d[l_ac].stas016,g_stas_d[l_ac].stas009,g_stas_d[l_ac].stas017, 
          g_stas_d[l_ac].stas018,g_stas_d[l_ac].stas019,g_stas_d[l_ac].stas025,g_stas_d[l_ac].stas005_desc, 
          g_stas_d[l_ac].stas008_desc,g_stas_d[l_ac].stas022_desc,g_stas_d[l_ac].stas023_desc,g_stas_d[l_ac].stas009_desc 

         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_stas_d.deleteElement(g_stas_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE astm311_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_stas_d.getLength()
      LET g_stas_d_mask_o[l_ac].* =  g_stas_d[l_ac].*
      CALL astm311_stas_t_mask()
      LET g_stas_d_mask_n[l_ac].* =  g_stas_d[l_ac].*
   END FOR
   
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
]]>
  </section>
  <section id="astm311.b_fill2" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION astm311_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define" edit="s"/>}
   #end add-point
   #add-point:b_fill2段define(客製用)
   {<point name="b_fill2.define_customerization" edit="c"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL astm311_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="astm311.browser_fill" ver="25" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION astm311_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define" edit="s"/>}
   #end add-point   
   #add-point:browser_fill段define(客製用)
   {<point name="browser_fill.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE star001,starsite ",
                      " FROM star_t ",
                      " ",
                      " LEFT JOIN stas_t ON stasent = starent AND star001 = stas001 AND starsite = stassite ", "  ",
                      #add-point:browser_fill段sql(stas_t1)
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
 
 
                      " ", 
                      " ", 
                      " WHERE starent = '" ||g_enterprise|| "' AND stasent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("star_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE star001,starsite ",
                      " FROM star_t ", 
                      "  ",
                      "  ",
                      " WHERE starent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("star_t")
   END IF
   
   #add-point:browser_fill,cnt wc
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_star_m.* TO NULL
      CALL g_stas_d.clear()        
 
      #add-point:browser_fill g_add_browse段額外處理
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.star001,t0.starsite Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   LET g_sql = " SELECT DISTINCT t0.starstus,t0.star001,t0.starsite ",
               " FROM star_t t0",
               "  ",
               "  LEFT JOIN stas_t ON stasent = starent AND star001 = stas001 AND starsite = stassite ", "  ", 
               #add-point:browser_fill段sql(stas_t1)
               {<point name="browser_fill.join.stas_t1"/>}
               #end add-point
 
 
               "  ",
               
               " WHERE t0.starent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("star_t")
   #add-point:browser_fill,sql wc
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY star001,starsite ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"star_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill段open cursor
   {<point name="browser_fill.open"/>}
   #end add-point
   
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_star001,g_browser[g_cnt].b_starsite 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
  
            #應用 a24 樣板自動產生(Version:2)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_browse THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_star001) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION
]]>
  </section>
  <section id="astm311.construct" ver="20" status="" src="s" readonly="">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION astm311_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define
   {<point name="cs.define" edit="s"/>}
   #end add-point    
   #add-point:cs段define(客製用)
   {<point name="cs.define_customerization" edit="c"/>}
   #end add-point    
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_star_m.* TO NULL
   CALL g_stas_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON starunit,starsite,star001,star002,star003,star004,star009,star007,star005, 
          star006,star008,starstus,starownid,starowndp,starcrtid,starcrtdp,starcrtdt,starmodid,starmoddt, 
          starcnfid,starcnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<starcrtdt>>----
         AFTER FIELD starcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<starmoddt>>----
         AFTER FIELD starmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<starcnfdt>>----
         AFTER FIELD starcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<starpstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.starunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD starunit
            #add-point:ON ACTION controlp INFIELD starunit
            {<point name="construct.c.starunit" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD starunit
            #add-point:BEFORE FIELD starunit
            {<point name="construct.b.starunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD starunit
            
            #add-point:AFTER FIELD starunit
            {<point name="construct.a.starunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.starsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD starsite
            #add-point:ON ACTION controlp INFIELD starsite
            {<point name="construct.c.starsite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD starsite
            #add-point:BEFORE FIELD starsite
            {<point name="construct.b.starsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD starsite
            
            #add-point:AFTER FIELD starsite
            {<point name="construct.a.starsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.star001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD star001
            #add-point:ON ACTION controlp INFIELD star001
            {<point name="construct.c.star001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD star001
            #add-point:BEFORE FIELD star001
            {<point name="construct.b.star001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD star001
            
            #add-point:AFTER FIELD star001
            {<point name="construct.a.star001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD star002
            #add-point:BEFORE FIELD star002
            {<point name="construct.b.star002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD star002
            
            #add-point:AFTER FIELD star002
            {<point name="construct.a.star002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.star002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD star002
            #add-point:ON ACTION controlp INFIELD star002
            {<point name="construct.c.star002" />}
            #END add-point
 
         #Ctrlp:construct.c.star003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD star003
            #add-point:ON ACTION controlp INFIELD star003
            {<point name="construct.c.star003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD star003
            #add-point:BEFORE FIELD star003
            {<point name="construct.b.star003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD star003
            
            #add-point:AFTER FIELD star003
            {<point name="construct.a.star003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.star004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD star004
            #add-point:ON ACTION controlp INFIELD star004
            {<point name="construct.c.star004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD star004
            #add-point:BEFORE FIELD star004
            {<point name="construct.b.star004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD star004
            
            #add-point:AFTER FIELD star004
            {<point name="construct.a.star004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD star009
            #add-point:BEFORE FIELD star009
            {<point name="construct.b.star009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD star009
            
            #add-point:AFTER FIELD star009
            {<point name="construct.a.star009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.star009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD star009
            #add-point:ON ACTION controlp INFIELD star009
            {<point name="construct.c.star009" />}
            #END add-point
 
         #Ctrlp:construct.c.star007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD star007
            #add-point:ON ACTION controlp INFIELD star007
            {<point name="construct.c.star007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD star007
            #add-point:BEFORE FIELD star007
            {<point name="construct.b.star007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD star007
            
            #add-point:AFTER FIELD star007
            {<point name="construct.a.star007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD star005
            #add-point:BEFORE FIELD star005
            {<point name="construct.b.star005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD star005
            
            #add-point:AFTER FIELD star005
            {<point name="construct.a.star005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.star005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD star005
            #add-point:ON ACTION controlp INFIELD star005
            {<point name="construct.c.star005" />}
            #END add-point
 
         #Ctrlp:construct.c.star006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD star006
            #add-point:ON ACTION controlp INFIELD star006
            {<point name="construct.c.star006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD star006
            #add-point:BEFORE FIELD star006
            {<point name="construct.b.star006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD star006
            
            #add-point:AFTER FIELD star006
            {<point name="construct.a.star006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD star008
            #add-point:BEFORE FIELD star008
            {<point name="construct.b.star008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD star008
            
            #add-point:AFTER FIELD star008
            {<point name="construct.a.star008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.star008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD star008
            #add-point:ON ACTION controlp INFIELD star008
            {<point name="construct.c.star008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD starstus
            #add-point:BEFORE FIELD starstus
            {<point name="construct.b.starstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD starstus
            
            #add-point:AFTER FIELD starstus
            {<point name="construct.a.starstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.starstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD starstus
            #add-point:ON ACTION controlp INFIELD starstus
            {<point name="construct.c.starstus" />}
            #END add-point
 
         #Ctrlp:construct.c.starownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD starownid
            #add-point:ON ACTION controlp INFIELD starownid
            {<point name="construct.c.starownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD starownid
            #add-point:BEFORE FIELD starownid
            {<point name="construct.b.starownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD starownid
            
            #add-point:AFTER FIELD starownid
            {<point name="construct.a.starownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.starowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD starowndp
            #add-point:ON ACTION controlp INFIELD starowndp
            {<point name="construct.c.starowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD starowndp
            #add-point:BEFORE FIELD starowndp
            {<point name="construct.b.starowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD starowndp
            
            #add-point:AFTER FIELD starowndp
            {<point name="construct.a.starowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.starcrtid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD starcrtid
            #add-point:ON ACTION controlp INFIELD starcrtid
            {<point name="construct.c.starcrtid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD starcrtid
            #add-point:BEFORE FIELD starcrtid
            {<point name="construct.b.starcrtid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD starcrtid
            
            #add-point:AFTER FIELD starcrtid
            {<point name="construct.a.starcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.starcrtdp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD starcrtdp
            #add-point:ON ACTION controlp INFIELD starcrtdp
            {<point name="construct.c.starcrtdp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD starcrtdp
            #add-point:BEFORE FIELD starcrtdp
            {<point name="construct.b.starcrtdp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD starcrtdp
            
            #add-point:AFTER FIELD starcrtdp
            {<point name="construct.a.starcrtdp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD starcrtdt
            #add-point:BEFORE FIELD starcrtdt
            {<point name="construct.b.starcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.starmodid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD starmodid
            #add-point:ON ACTION controlp INFIELD starmodid
            {<point name="construct.c.starmodid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD starmodid
            #add-point:BEFORE FIELD starmodid
            {<point name="construct.b.starmodid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD starmodid
            
            #add-point:AFTER FIELD starmodid
            {<point name="construct.a.starmodid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD starmoddt
            #add-point:BEFORE FIELD starmoddt
            {<point name="construct.b.starmoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.starcnfid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD starcnfid
            #add-point:ON ACTION controlp INFIELD starcnfid
            {<point name="construct.c.starcnfid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD starcnfid
            #add-point:BEFORE FIELD starcnfid
            {<point name="construct.b.starcnfid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD starcnfid
            
            #add-point:AFTER FIELD starcnfid
            {<point name="construct.a.starcnfid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD starcnfdt
            #add-point:BEFORE FIELD starcnfdt
            {<point name="construct.b.starcnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON stas002,stas004,stas003,stas005,stas006,stas008,stas022,stas023,stas010, 
          stas011,stas020,stas021,stas024,stas012,stas013,stas014,stas015,stas016,stas009,stas017,stas018, 
          stas019,stas025
           FROM s_detail1[1].stas002,s_detail1[1].stas004,s_detail1[1].stas003,s_detail1[1].stas005, 
               s_detail1[1].stas006,s_detail1[1].stas008,s_detail1[1].stas022,s_detail1[1].stas023,s_detail1[1].stas010, 
               s_detail1[1].stas011,s_detail1[1].stas020,s_detail1[1].stas021,s_detail1[1].stas024,s_detail1[1].stas012, 
               s_detail1[1].stas013,s_detail1[1].stas014,s_detail1[1].stas015,s_detail1[1].stas016,s_detail1[1].stas009, 
               s_detail1[1].stas017,s_detail1[1].stas018,s_detail1[1].stas019,s_detail1[1].stas025
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas002
            #add-point:BEFORE FIELD stas002
            {<point name="construct.b.page1.stas002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas002
            
            #add-point:AFTER FIELD stas002
            {<point name="construct.a.page1.stas002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stas002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas002
            #add-point:ON ACTION controlp INFIELD stas002
            {<point name="construct.c.page1.stas002" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.stas004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas004
            #add-point:ON ACTION controlp INFIELD stas004
            {<point name="construct.c.page1.stas004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas004
            #add-point:BEFORE FIELD stas004
            {<point name="construct.b.page1.stas004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas004
            
            #add-point:AFTER FIELD stas004
            {<point name="construct.a.page1.stas004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stas003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas003
            #add-point:ON ACTION controlp INFIELD stas003
            {<point name="construct.c.page1.stas003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas003
            #add-point:BEFORE FIELD stas003
            {<point name="construct.b.page1.stas003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas003
            
            #add-point:AFTER FIELD stas003
            {<point name="construct.a.page1.stas003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stas005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas005
            #add-point:ON ACTION controlp INFIELD stas005
            {<point name="construct.c.page1.stas005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas005
            #add-point:BEFORE FIELD stas005
            {<point name="construct.b.page1.stas005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas005
            
            #add-point:AFTER FIELD stas005
            {<point name="construct.a.page1.stas005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas006
            #add-point:BEFORE FIELD stas006
            {<point name="construct.b.page1.stas006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas006
            
            #add-point:AFTER FIELD stas006
            {<point name="construct.a.page1.stas006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stas006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas006
            #add-point:ON ACTION controlp INFIELD stas006
            {<point name="construct.c.page1.stas006" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.stas008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas008
            #add-point:ON ACTION controlp INFIELD stas008
            {<point name="construct.c.page1.stas008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas008
            #add-point:BEFORE FIELD stas008
            {<point name="construct.b.page1.stas008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas008
            
            #add-point:AFTER FIELD stas008
            {<point name="construct.a.page1.stas008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stas022
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas022
            #add-point:ON ACTION controlp INFIELD stas022
            {<point name="construct.c.page1.stas022" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas022
            #add-point:BEFORE FIELD stas022
            {<point name="construct.b.page1.stas022" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas022
            
            #add-point:AFTER FIELD stas022
            {<point name="construct.a.page1.stas022" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stas023
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas023
            #add-point:ON ACTION controlp INFIELD stas023
            {<point name="construct.c.page1.stas023" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas023
            #add-point:BEFORE FIELD stas023
            {<point name="construct.b.page1.stas023" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas023
            
            #add-point:AFTER FIELD stas023
            {<point name="construct.a.page1.stas023" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas010
            #add-point:BEFORE FIELD stas010
            {<point name="construct.b.page1.stas010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas010
            
            #add-point:AFTER FIELD stas010
            {<point name="construct.a.page1.stas010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stas010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas010
            #add-point:ON ACTION controlp INFIELD stas010
            {<point name="construct.c.page1.stas010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas011
            #add-point:BEFORE FIELD stas011
            {<point name="construct.b.page1.stas011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas011
            
            #add-point:AFTER FIELD stas011
            {<point name="construct.a.page1.stas011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stas011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas011
            #add-point:ON ACTION controlp INFIELD stas011
            {<point name="construct.c.page1.stas011" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.stas020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas020
            #add-point:ON ACTION controlp INFIELD stas020
            {<point name="construct.c.page1.stas020" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas020
            #add-point:BEFORE FIELD stas020
            {<point name="construct.b.page1.stas020" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas020
            
            #add-point:AFTER FIELD stas020
            {<point name="construct.a.page1.stas020" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas021
            #add-point:BEFORE FIELD stas021
            {<point name="construct.b.page1.stas021" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas021
            
            #add-point:AFTER FIELD stas021
            {<point name="construct.a.page1.stas021" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stas021
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas021
            #add-point:ON ACTION controlp INFIELD stas021
            {<point name="construct.c.page1.stas021" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas024
            #add-point:BEFORE FIELD stas024
            {<point name="construct.b.page1.stas024" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas024
            
            #add-point:AFTER FIELD stas024
            {<point name="construct.a.page1.stas024" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stas024
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas024
            #add-point:ON ACTION controlp INFIELD stas024
            {<point name="construct.c.page1.stas024" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas012
            #add-point:BEFORE FIELD stas012
            {<point name="construct.b.page1.stas012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas012
            
            #add-point:AFTER FIELD stas012
            {<point name="construct.a.page1.stas012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stas012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas012
            #add-point:ON ACTION controlp INFIELD stas012
            {<point name="construct.c.page1.stas012" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas013
            #add-point:BEFORE FIELD stas013
            {<point name="construct.b.page1.stas013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas013
            
            #add-point:AFTER FIELD stas013
            {<point name="construct.a.page1.stas013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stas013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas013
            #add-point:ON ACTION controlp INFIELD stas013
            {<point name="construct.c.page1.stas013" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas014
            #add-point:BEFORE FIELD stas014
            {<point name="construct.b.page1.stas014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas014
            
            #add-point:AFTER FIELD stas014
            {<point name="construct.a.page1.stas014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stas014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas014
            #add-point:ON ACTION controlp INFIELD stas014
            {<point name="construct.c.page1.stas014" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas015
            #add-point:BEFORE FIELD stas015
            {<point name="construct.b.page1.stas015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas015
            
            #add-point:AFTER FIELD stas015
            {<point name="construct.a.page1.stas015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stas015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas015
            #add-point:ON ACTION controlp INFIELD stas015
            {<point name="construct.c.page1.stas015" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas016
            #add-point:BEFORE FIELD stas016
            {<point name="construct.b.page1.stas016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas016
            
            #add-point:AFTER FIELD stas016
            {<point name="construct.a.page1.stas016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stas016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas016
            #add-point:ON ACTION controlp INFIELD stas016
            {<point name="construct.c.page1.stas016" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.stas009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas009
            #add-point:ON ACTION controlp INFIELD stas009
            {<point name="construct.c.page1.stas009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas009
            #add-point:BEFORE FIELD stas009
            {<point name="construct.b.page1.stas009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas009
            
            #add-point:AFTER FIELD stas009
            {<point name="construct.a.page1.stas009" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas017
            #add-point:BEFORE FIELD stas017
            {<point name="construct.b.page1.stas017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas017
            
            #add-point:AFTER FIELD stas017
            {<point name="construct.a.page1.stas017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stas017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas017
            #add-point:ON ACTION controlp INFIELD stas017
            {<point name="construct.c.page1.stas017" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas018
            #add-point:BEFORE FIELD stas018
            {<point name="construct.b.page1.stas018" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas018
            
            #add-point:AFTER FIELD stas018
            {<point name="construct.a.page1.stas018" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stas018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas018
            #add-point:ON ACTION controlp INFIELD stas018
            {<point name="construct.c.page1.stas018" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas019
            #add-point:BEFORE FIELD stas019
            {<point name="construct.b.page1.stas019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas019
            
            #add-point:AFTER FIELD stas019
            {<point name="construct.a.page1.stas019" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stas019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas019
            #add-point:ON ACTION controlp INFIELD stas019
            {<point name="construct.c.page1.stas019" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas025
            #add-point:BEFORE FIELD stas025
            {<point name="construct.b.page1.stas025" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas025
            
            #add-point:AFTER FIELD stas025
            {<point name="construct.a.page1.stas025" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stas025
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas025
            #add-point:ON ACTION controlp INFIELD stas025
            {<point name="construct.c.page1.stas025" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "star_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "stas_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="astm311.default_search" ver="13" status="" src="s" readonly="">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION astm311_default_search()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point  
   #add-point:default_search段define(客製用)
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " star001 = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " starsite = '", g_argv[02], "' AND "
   END IF
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "star_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "stas_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
]]>
  </section>
  <section id="astm311.delete" ver="26" status="" src="s" readonly="">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION astm311_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define" edit="s"/>}
   #end add-point     
   #add-point:delete段define(客製用)
   {<point name="delete.define_customerization" edit="c"/>}
   #end add-point     
   
   IF g_star_m.star001 IS NULL
   OR g_star_m.starsite IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN astm311_cl USING g_enterprise,g_star_m.star001,g_star_m.starsite
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN astm311_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE astm311_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE astm311_master_referesh USING g_star_m.star001,g_star_m.starsite INTO g_star_m.starunit,g_star_m.starsite, 
       g_star_m.star001,g_star_m.star002,g_star_m.star003,g_star_m.star004,g_star_m.star009,g_star_m.star007, 
       g_star_m.star005,g_star_m.star006,g_star_m.star008,g_star_m.starstus,g_star_m.starownid,g_star_m.starowndp, 
       g_star_m.starcrtid,g_star_m.starcrtdp,g_star_m.starcrtdt,g_star_m.starmodid,g_star_m.starmoddt, 
       g_star_m.starcnfid,g_star_m.starcnfdt,g_star_m.starunit_desc,g_star_m.starsite_desc,g_star_m.star003_desc, 
       g_star_m.star007_desc,g_star_m.star006_desc,g_star_m.star008_desc,g_star_m.starownid_desc,g_star_m.starowndp_desc, 
       g_star_m.starcrtid_desc,g_star_m.starcrtdp_desc,g_star_m.starmodid_desc,g_star_m.starcnfid_desc 

   
   #檢查是否允許此動作
   IF NOT astm311_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_star_m_mask_o.* =  g_star_m.*
   CALL astm311_star_t_mask()
   LET g_star_m_mask_n.* =  g_star_m.*
   
   CALL astm311_show()
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL astm311_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
  
  
      #資料備份
      LET g_star001_t = g_star_m.star001
      LET g_starsite_t = g_star_m.starsite
 
 
      DELETE FROM star_t
       WHERE starent = g_enterprise AND star001 = g_star_m.star001
         AND starsite = g_star_m.starsite
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_star_m.star001 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM stas_t
       WHERE stasent = g_enterprise AND stas001 = g_star_m.star001
         AND stassite = g_star_m.starsite
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stas_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE astm311_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_stas_d.clear() 
 
     
      CALL astm311_ui_browser_refresh()  
      #CALL astm311_ui_headershow()  
      #CALL astm311_ui_detailshow()
      
      IF g_browser_cnt > 0 THEN 
         #CALL astm311_browser_fill("")
         CALL astm311_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
 
      #add-point:多語言刪除
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   CLOSE astm311_cl
 
   #功能已完成,通報訊息中心
   CALL astm311_msgcentre_notify('delete')
    
END FUNCTION
]]>
  </section>
  <section id="astm311.delete_b" ver="12" status="" src="s" readonly="">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION astm311_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define(客製用)
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point     
 
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM stas_t
       WHERE stasent = g_enterprise AND
         stas001 = ps_keys_bak[1] AND stassite = ps_keys_bak[2] AND stas002 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_stas_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="astm311.description" ver="18" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000004
#+ 
#+ Filename...: astm311
#+ Description: 供應商採購協議維護作業
#+ Creator....: 02003(2015-05-19 16:32:36)
#+ Modifier...: 02003(2015-06-30 21:02:29) -SD/PR-
]]>
  </section>
  <section id="astm311.detail_reproduce" ver="9" status="" src="s" readonly="">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION astm311_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE stas_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define" edit="s"/>}
   #end add-point    
   #add-point:delete段define(客製用)
   {<point name="detail_reproduce.define_customerization" edit="c"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE astm311_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE astm311_detail AS ",
                "SELECT * FROM stas_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO astm311_detail SELECT * FROM stas_t 
                                         WHERE stasent = g_enterprise AND stas001 = g_star001_t
                                         AND stassite = g_starsite_t
 
   
   #將key修正為調整後   
   UPDATE astm311_detail 
      #更新key欄位
      SET stas001 = g_star_m.star001
          , stassite = g_star_m.starsite
 
      #更新共用欄位
      
 
   #add-point:單身修改前
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO stas_t SELECT * FROM astm311_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astm311_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_star001_t = g_star_m.star001
   LET g_starsite_t = g_star_m.starsite
 
   
END FUNCTION
]]>
  </section>
  <section id="astm311.detail_show" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION astm311_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define" edit="s"/>}
   #end add-point  
   #add-point:detail_show段define(客製用)
   {<point name="detail_show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="astm311.fetch" ver="25" status="" src="s" readonly="">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION astm311_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define" edit="s"/>}
   #end add-point    
   #add-point:fetch段define(客製用)
   {<point name="fetch.define_customerization" edit="c"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_pagestart = g_current_idx
   DISPLAY g_pagestart TO FORMONLY.b_index   #當下筆數
   DISPLAY g_pagestart TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_pagestart, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_star_m.star001 = g_browser[g_current_idx].b_star001
   LET g_star_m.starsite = g_browser[g_current_idx].b_starsite
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE astm311_master_referesh USING g_star_m.star001,g_star_m.starsite INTO g_star_m.starunit,g_star_m.starsite, 
       g_star_m.star001,g_star_m.star002,g_star_m.star003,g_star_m.star004,g_star_m.star009,g_star_m.star007, 
       g_star_m.star005,g_star_m.star006,g_star_m.star008,g_star_m.starstus,g_star_m.starownid,g_star_m.starowndp, 
       g_star_m.starcrtid,g_star_m.starcrtdp,g_star_m.starcrtdt,g_star_m.starmodid,g_star_m.starmoddt, 
       g_star_m.starcnfid,g_star_m.starcnfdt,g_star_m.starunit_desc,g_star_m.starsite_desc,g_star_m.star003_desc, 
       g_star_m.star007_desc,g_star_m.star006_desc,g_star_m.star008_desc,g_star_m.starownid_desc,g_star_m.starowndp_desc, 
       g_star_m.starcrtid_desc,g_star_m.starcrtdp_desc,g_star_m.starmodid_desc,g_star_m.starcnfid_desc 

   
   #遮罩相關處理
   LET g_star_m_mask_o.* =  g_star_m.*
   CALL astm311_star_t_mask()
   LET g_star_m_mask_n.* =  g_star_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL astm311_set_act_visible()   
   CALL astm311_set_act_no_visible()
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_star_m_t.* = g_star_m.*
   LET g_star_m_o.* = g_star_m.*
   
   LET g_data_owner = g_star_m.starownid      
   LET g_data_dept  = g_star_m.starowndp
   
   #重新顯示   
   CALL astm311_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="astm311.fill_chk" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION astm311_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define" edit="s"/>}
   #end add-point
   #add-point:fill_chk段define(客製用)
   {<point name="fill_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="astm311.global" ver="25" status="" src="s" readonly="">
    <![CDATA[#應用 t01 樣板自動產生(Version:38)
{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_star_m        RECORD
       starunit LIKE star_t.starunit, 
   starunit_desc LIKE type_t.chr80, 
   starsite LIKE star_t.starsite, 
   starsite_desc LIKE type_t.chr80, 
   star001 LIKE star_t.star001, 
   star002 LIKE star_t.star002, 
   star003 LIKE star_t.star003, 
   star003_desc LIKE type_t.chr80, 
   star004 LIKE star_t.star004, 
   star009 LIKE star_t.star009, 
   star007 LIKE star_t.star007, 
   star007_desc LIKE type_t.chr80, 
   star005 LIKE star_t.star005, 
   star006 LIKE star_t.star006, 
   star006_desc LIKE type_t.chr80, 
   star008 LIKE star_t.star008, 
   star008_desc LIKE type_t.chr80, 
   starstus LIKE star_t.starstus, 
   starownid LIKE star_t.starownid, 
   starownid_desc LIKE type_t.chr80, 
   starowndp LIKE star_t.starowndp, 
   starowndp_desc LIKE type_t.chr80, 
   starcrtid LIKE star_t.starcrtid, 
   starcrtid_desc LIKE type_t.chr80, 
   starcrtdp LIKE star_t.starcrtdp, 
   starcrtdp_desc LIKE type_t.chr80, 
   starcrtdt LIKE star_t.starcrtdt, 
   starmodid LIKE star_t.starmodid, 
   starmodid_desc LIKE type_t.chr80, 
   starmoddt LIKE star_t.starmoddt, 
   starcnfid LIKE star_t.starcnfid, 
   starcnfid_desc LIKE type_t.chr80, 
   starcnfdt LIKE star_t.starcnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_stas_d        RECORD
       stas002 LIKE stas_t.stas002, 
   stas004 LIKE stas_t.stas004, 
   stas003 LIKE stas_t.stas003, 
   imaal003 LIKE type_t.chr500, 
   imaal004 LIKE type_t.chr500, 
   imaa009 LIKE type_t.chr500, 
   imaa009_desc LIKE type_t.chr500, 
   imaa126 LIKE type_t.chr500, 
   imaa126_desc LIKE type_t.chr500, 
   stas005 LIKE stas_t.stas005, 
   stas005_desc LIKE type_t.chr500, 
   stas006 LIKE stas_t.stas006, 
   imaa104 LIKE type_t.chr500, 
   imaa104_desc LIKE type_t.chr500, 
   stas008 LIKE stas_t.stas008, 
   stas008_desc LIKE type_t.chr500, 
   stas022 LIKE stas_t.stas022, 
   stas022_desc LIKE type_t.chr500, 
   stas023 LIKE stas_t.stas023, 
   stas023_desc LIKE type_t.chr500, 
   stas010 LIKE stas_t.stas010, 
   stas011 LIKE stas_t.stas011, 
   stas020 LIKE stas_t.stas020, 
   stas020_desc LIKE type_t.chr500, 
   stas021 LIKE stas_t.stas021, 
   stas024 LIKE stas_t.stas024, 
   stas012 LIKE stas_t.stas012, 
   stas013 LIKE stas_t.stas013, 
   stas014 LIKE stas_t.stas014, 
   stas015 LIKE stas_t.stas015, 
   stas016 LIKE stas_t.stas016, 
   stas009 LIKE stas_t.stas009, 
   stas009_desc LIKE type_t.chr500, 
   stas017 LIKE stas_t.stas017, 
   stas018 LIKE stas_t.stas018, 
   stas019 LIKE stas_t.stas019, 
   stas025 LIKE stas_t.stas025
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_star001 LIKE star_t.star001,
      b_starsite LIKE star_t.starsite
       END RECORD
       
#模組變數(Module Variables)
DEFINE g_star_m          type_g_star_m
DEFINE g_star_m_t        type_g_star_m
DEFINE g_star_m_o        type_g_star_m
DEFINE g_star_m_mask_o   type_g_star_m #轉換遮罩前資料
DEFINE g_star_m_mask_n   type_g_star_m #轉換遮罩後資料
 
   DEFINE g_starsite_t LIKE star_t.starsite
DEFINE g_star001_t LIKE star_t.star001
 
 
DEFINE g_stas_d          DYNAMIC ARRAY OF type_g_stas_d
DEFINE g_stas_d_t        type_g_stas_d
DEFINE g_stas_d_o        type_g_stas_d
DEFINE g_stas_d_mask_o   DYNAMIC ARRAY OF type_g_stas_d #轉換遮罩前資料
DEFINE g_stas_d_mask_n   DYNAMIC ARRAY OF type_g_stas_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10              #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="astm311.idx_chk" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION astm311_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define" edit="s"/>}
   #end add-point  
   #add-point:idx_chk段define(客製用)
   {<point name="idx_chk.define_customerization" edit="c"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_stas_d.getLength() THEN
         LET g_detail_idx = g_stas_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stas_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stas_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="astm311.init" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION astm311_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point    
   #add-point:init段define(客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point    
 
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('starstus','13','N,Y,A,D,R,W,X')
 
      CALL cl_set_combo_scc('star005','6013') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL astm311_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="astm311.input" ver="16" status="" src="s" readonly="">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION astm311_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define
   {<point name="input.define" edit="s"/>}
   #end add-point  
   #add-point:input段define(客製用)
   {<point name="input.define_customerization" edit="c"/>}
   #end add-point  
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_star_m.starunit,g_star_m.starunit_desc,g_star_m.starsite,g_star_m.starsite_desc, 
       g_star_m.star001,g_star_m.star002,g_star_m.star003,g_star_m.star003_desc,g_star_m.star004,g_star_m.star009, 
       g_star_m.star007,g_star_m.star007_desc,g_star_m.star005,g_star_m.star006,g_star_m.star006_desc, 
       g_star_m.star008,g_star_m.star008_desc,g_star_m.starstus,g_star_m.starownid,g_star_m.starownid_desc, 
       g_star_m.starowndp,g_star_m.starowndp_desc,g_star_m.starcrtid,g_star_m.starcrtid_desc,g_star_m.starcrtdp, 
       g_star_m.starcrtdp_desc,g_star_m.starcrtdt,g_star_m.starmodid,g_star_m.starmodid_desc,g_star_m.starmoddt, 
       g_star_m.starcnfid,g_star_m.starcnfid_desc,g_star_m.starcnfdt
   
   #切換畫面
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT stas002,stas004,stas003,stas005,stas006,stas008,stas022,stas023,stas010, 
       stas011,stas020,stas021,stas024,stas012,stas013,stas014,stas015,stas016,stas009,stas017,stas018, 
       stas019,stas025 FROM stas_t WHERE stasent=? AND stassite=? AND stas001=? AND stas002=? FOR UPDATE" 

   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm311_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL astm311_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL astm311_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_star_m.starunit,g_star_m.starsite,g_star_m.star001,g_star_m.star002,g_star_m.star003, 
       g_star_m.star004,g_star_m.star007,g_star_m.star005,g_star_m.star006,g_star_m.star008,g_star_m.starstus 

   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="astm311.input.body" ver="25" status="" src="s" readonly="">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_stas_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stas_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astm311_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_stas_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astm311_cl USING g_enterprise,g_star_m.star001,g_star_m.starsite
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm311_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE astm311_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_stas_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stas_d[l_ac].stas002 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_stas_d_t.* = g_stas_d[l_ac].*  #BACKUP
               LET g_stas_d_o.* = g_stas_d[l_ac].*  #BACKUP
               CALL astm311_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL astm311_set_no_entry_b(l_cmd)
               IF NOT astm311_lock_b("stas_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astm311_bcl INTO g_stas_d[l_ac].stas002,g_stas_d[l_ac].stas004,g_stas_d[l_ac].stas003, 
                      g_stas_d[l_ac].stas005,g_stas_d[l_ac].stas006,g_stas_d[l_ac].stas008,g_stas_d[l_ac].stas022, 
                      g_stas_d[l_ac].stas023,g_stas_d[l_ac].stas010,g_stas_d[l_ac].stas011,g_stas_d[l_ac].stas020, 
                      g_stas_d[l_ac].stas021,g_stas_d[l_ac].stas024,g_stas_d[l_ac].stas012,g_stas_d[l_ac].stas013, 
                      g_stas_d[l_ac].stas014,g_stas_d[l_ac].stas015,g_stas_d[l_ac].stas016,g_stas_d[l_ac].stas009, 
                      g_stas_d[l_ac].stas017,g_stas_d[l_ac].stas018,g_stas_d[l_ac].stas019,g_stas_d[l_ac].stas025 

                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_stas_d_t.stas002 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stas_d_mask_o[l_ac].* =  g_stas_d[l_ac].*
                  CALL astm311_stas_t_mask()
                  LET g_stas_d_mask_n[l_ac].* =  g_stas_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astm311_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stas_d[l_ac].* TO NULL 
            INITIALIZE g_stas_d_t.* TO NULL 
            INITIALIZE g_stas_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_stas_d[l_ac].stas017 = "N"
 
            #add-point:modify段before備份
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_stas_d_t.* = g_stas_d[l_ac].*     #新輸入資料
            LET g_stas_d_o.* = g_stas_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astm311_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL astm311_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stas_d[li_reproduce_target].* = g_stas_d[li_reproduce].*
 
               LET g_stas_d[li_reproduce_target].stas002 = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM stas_t 
             WHERE stasent = g_enterprise AND stas001 = g_star_m.star001
               AND stassite = g_star_m.starsite
 
               AND stas002 = g_stas_d[l_ac].stas002
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_star_m.star001
               LET gs_keys[2] = g_star_m.starsite
               LET gs_keys[3] = g_stas_d[g_detail_idx].stas002
               CALL astm311_insert_b('stas_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_stas_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stas_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astm311_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d)
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_star_m.star001
               LET gs_keys[gs_keys.getLength()+1] = g_star_m.starsite
 
               LET gs_keys[gs_keys.getLength()+1] = g_stas_d_t.stas002
 
            
               #刪除同層單身
               IF NOT astm311_delete_b('stas_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm311_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astm311_key_delete_b(gs_keys,'stas_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm311_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE astm311_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_stas_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stas_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas002
            #add-point:BEFORE FIELD stas002
            {<point name="input.b.page1.stas002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas002
            
            #add-point:AFTER FIELD stas002
            {<point name="input.a.page1.stas002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stas002
            #add-point:ON CHANGE stas002
            {<point name="input.g.page1.stas002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas004
            #add-point:BEFORE FIELD stas004
            {<point name="input.b.page1.stas004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas004
            
            #add-point:AFTER FIELD stas004
            {<point name="input.a.page1.stas004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stas004
            #add-point:ON CHANGE stas004
            {<point name="input.g.page1.stas004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas003
            #add-point:BEFORE FIELD stas003
            {<point name="input.b.page1.stas003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas003
            
            #add-point:AFTER FIELD stas003
            {<point name="input.a.page1.stas003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stas003
            #add-point:ON CHANGE stas003
            {<point name="input.g.page1.stas003" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas005
            
            #add-point:AFTER FIELD stas005
            {<point name="input.a.page1.stas005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas005
            #add-point:BEFORE FIELD stas005
            {<point name="input.b.page1.stas005" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stas005
            #add-point:ON CHANGE stas005
            {<point name="input.g.page1.stas005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas006
            #add-point:BEFORE FIELD stas006
            {<point name="input.b.page1.stas006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas006
            
            #add-point:AFTER FIELD stas006
            {<point name="input.a.page1.stas006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stas006
            #add-point:ON CHANGE stas006
            {<point name="input.g.page1.stas006" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas008
            
            #add-point:AFTER FIELD stas008
            {<point name="input.a.page1.stas008" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas008
            #add-point:BEFORE FIELD stas008
            {<point name="input.b.page1.stas008" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stas008
            #add-point:ON CHANGE stas008
            {<point name="input.g.page1.stas008" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas022
            
            #add-point:AFTER FIELD stas022
            {<point name="input.a.page1.stas022" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas022
            #add-point:BEFORE FIELD stas022
            {<point name="input.b.page1.stas022" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stas022
            #add-point:ON CHANGE stas022
            {<point name="input.g.page1.stas022" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas023
            
            #add-point:AFTER FIELD stas023
            {<point name="input.a.page1.stas023" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas023
            #add-point:BEFORE FIELD stas023
            {<point name="input.b.page1.stas023" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stas023
            #add-point:ON CHANGE stas023
            {<point name="input.g.page1.stas023" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas010
            #add-point:BEFORE FIELD stas010
            {<point name="input.b.page1.stas010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas010
            
            #add-point:AFTER FIELD stas010
            {<point name="input.a.page1.stas010" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stas010
            #add-point:ON CHANGE stas010
            {<point name="input.g.page1.stas010" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas011
            #add-point:BEFORE FIELD stas011
            {<point name="input.b.page1.stas011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas011
            
            #add-point:AFTER FIELD stas011
            {<point name="input.a.page1.stas011" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stas011
            #add-point:ON CHANGE stas011
            {<point name="input.g.page1.stas011" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas020
            
            #add-point:AFTER FIELD stas020
            {<point name="input.a.page1.stas020" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas020
            #add-point:BEFORE FIELD stas020
            {<point name="input.b.page1.stas020" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stas020
            #add-point:ON CHANGE stas020
            {<point name="input.g.page1.stas020" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas021
            #add-point:BEFORE FIELD stas021
            {<point name="input.b.page1.stas021" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas021
            
            #add-point:AFTER FIELD stas021
            {<point name="input.a.page1.stas021" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stas021
            #add-point:ON CHANGE stas021
            {<point name="input.g.page1.stas021" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas024
            #add-point:BEFORE FIELD stas024
            {<point name="input.b.page1.stas024" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas024
            
            #add-point:AFTER FIELD stas024
            {<point name="input.a.page1.stas024" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stas024
            #add-point:ON CHANGE stas024
            {<point name="input.g.page1.stas024" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas012
            #add-point:BEFORE FIELD stas012
            {<point name="input.b.page1.stas012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas012
            
            #add-point:AFTER FIELD stas012
            {<point name="input.a.page1.stas012" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stas012
            #add-point:ON CHANGE stas012
            {<point name="input.g.page1.stas012" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas013
            #add-point:BEFORE FIELD stas013
            {<point name="input.b.page1.stas013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas013
            
            #add-point:AFTER FIELD stas013
            {<point name="input.a.page1.stas013" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stas013
            #add-point:ON CHANGE stas013
            {<point name="input.g.page1.stas013" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas014
            #add-point:BEFORE FIELD stas014
            {<point name="input.b.page1.stas014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas014
            
            #add-point:AFTER FIELD stas014
            {<point name="input.a.page1.stas014" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stas014
            #add-point:ON CHANGE stas014
            {<point name="input.g.page1.stas014" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas015
            #add-point:BEFORE FIELD stas015
            {<point name="input.b.page1.stas015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas015
            
            #add-point:AFTER FIELD stas015
            {<point name="input.a.page1.stas015" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stas015
            #add-point:ON CHANGE stas015
            {<point name="input.g.page1.stas015" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas016
            #add-point:BEFORE FIELD stas016
            {<point name="input.b.page1.stas016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas016
            
            #add-point:AFTER FIELD stas016
            {<point name="input.a.page1.stas016" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stas016
            #add-point:ON CHANGE stas016
            {<point name="input.g.page1.stas016" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas009
            
            #add-point:AFTER FIELD stas009
            {<point name="input.a.page1.stas009" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas009
            #add-point:BEFORE FIELD stas009
            {<point name="input.b.page1.stas009" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stas009
            #add-point:ON CHANGE stas009
            {<point name="input.g.page1.stas009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas017
            #add-point:BEFORE FIELD stas017
            {<point name="input.b.page1.stas017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas017
            
            #add-point:AFTER FIELD stas017
            {<point name="input.a.page1.stas017" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stas017
            #add-point:ON CHANGE stas017
            {<point name="input.g.page1.stas017" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas018
            #add-point:BEFORE FIELD stas018
            {<point name="input.b.page1.stas018" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas018
            
            #add-point:AFTER FIELD stas018
            {<point name="input.a.page1.stas018" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stas018
            #add-point:ON CHANGE stas018
            {<point name="input.g.page1.stas018" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas019
            #add-point:BEFORE FIELD stas019
            {<point name="input.b.page1.stas019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas019
            
            #add-point:AFTER FIELD stas019
            {<point name="input.a.page1.stas019" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stas019
            #add-point:ON CHANGE stas019
            {<point name="input.g.page1.stas019" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stas025
            #add-point:BEFORE FIELD stas025
            {<point name="input.b.page1.stas025" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stas025
            
            #add-point:AFTER FIELD stas025
            {<point name="input.a.page1.stas025" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stas025
            #add-point:ON CHANGE stas025
            {<point name="input.g.page1.stas025" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.stas002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas002
            #add-point:ON ACTION controlp INFIELD stas002
            {<point name="input.c.page1.stas002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stas004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas004
            #add-point:ON ACTION controlp INFIELD stas004
            {<point name="input.c.page1.stas004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stas003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas003
            #add-point:ON ACTION controlp INFIELD stas003
            {<point name="input.c.page1.stas003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stas005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas005
            #add-point:ON ACTION controlp INFIELD stas005
            {<point name="input.c.page1.stas005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stas006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas006
            #add-point:ON ACTION controlp INFIELD stas006
            {<point name="input.c.page1.stas006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stas008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas008
            #add-point:ON ACTION controlp INFIELD stas008
            {<point name="input.c.page1.stas008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stas022
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas022
            #add-point:ON ACTION controlp INFIELD stas022
            {<point name="input.c.page1.stas022" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stas023
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas023
            #add-point:ON ACTION controlp INFIELD stas023
            {<point name="input.c.page1.stas023" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stas010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas010
            #add-point:ON ACTION controlp INFIELD stas010
            {<point name="input.c.page1.stas010" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stas011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas011
            #add-point:ON ACTION controlp INFIELD stas011
            {<point name="input.c.page1.stas011" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stas020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas020
            #add-point:ON ACTION controlp INFIELD stas020
            {<point name="input.c.page1.stas020" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stas021
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas021
            #add-point:ON ACTION controlp INFIELD stas021
            {<point name="input.c.page1.stas021" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stas024
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas024
            #add-point:ON ACTION controlp INFIELD stas024
            {<point name="input.c.page1.stas024" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stas012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas012
            #add-point:ON ACTION controlp INFIELD stas012
            {<point name="input.c.page1.stas012" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stas013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas013
            #add-point:ON ACTION controlp INFIELD stas013
            {<point name="input.c.page1.stas013" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stas014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas014
            #add-point:ON ACTION controlp INFIELD stas014
            {<point name="input.c.page1.stas014" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stas015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas015
            #add-point:ON ACTION controlp INFIELD stas015
            {<point name="input.c.page1.stas015" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stas016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas016
            #add-point:ON ACTION controlp INFIELD stas016
            {<point name="input.c.page1.stas016" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stas009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas009
            #add-point:ON ACTION controlp INFIELD stas009
            {<point name="input.c.page1.stas009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stas017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas017
            #add-point:ON ACTION controlp INFIELD stas017
            {<point name="input.c.page1.stas017" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stas018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas018
            #add-point:ON ACTION controlp INFIELD stas018
            {<point name="input.c.page1.stas018" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stas019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas019
            #add-point:ON ACTION controlp INFIELD stas019
            {<point name="input.c.page1.stas019" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stas025
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stas025
            #add-point:ON ACTION controlp INFIELD stas025
            {<point name="input.c.page1.stas025" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_stas_d[l_ac].* = g_stas_d_t.*
               CLOSE astm311_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_stas_d[l_ac].stas002 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_stas_d[l_ac].* = g_stas_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL astm311_stas_t_mask_restore('restore_mask_o')
      
               UPDATE stas_t SET (stas001,stassite,stas002,stas004,stas003,stas005,stas006,stas008,stas022, 
                   stas023,stas010,stas011,stas020,stas021,stas024,stas012,stas013,stas014,stas015,stas016, 
                   stas009,stas017,stas018,stas019,stas025) = (g_star_m.star001,g_star_m.starsite,g_stas_d[l_ac].stas002, 
                   g_stas_d[l_ac].stas004,g_stas_d[l_ac].stas003,g_stas_d[l_ac].stas005,g_stas_d[l_ac].stas006, 
                   g_stas_d[l_ac].stas008,g_stas_d[l_ac].stas022,g_stas_d[l_ac].stas023,g_stas_d[l_ac].stas010, 
                   g_stas_d[l_ac].stas011,g_stas_d[l_ac].stas020,g_stas_d[l_ac].stas021,g_stas_d[l_ac].stas024, 
                   g_stas_d[l_ac].stas012,g_stas_d[l_ac].stas013,g_stas_d[l_ac].stas014,g_stas_d[l_ac].stas015, 
                   g_stas_d[l_ac].stas016,g_stas_d[l_ac].stas009,g_stas_d[l_ac].stas017,g_stas_d[l_ac].stas018, 
                   g_stas_d[l_ac].stas019,g_stas_d[l_ac].stas025)
                WHERE stasent = g_enterprise AND stas001 = g_star_m.star001 
                  AND stassite = g_star_m.starsite 
 
                  AND stas002 = g_stas_d_t.stas002 #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stas_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_stas_d[l_ac].* = g_stas_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stas_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_stas_d[l_ac].* = g_stas_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_star_m.star001
               LET gs_keys_bak[1] = g_star001_t
               LET gs_keys[2] = g_star_m.starsite
               LET gs_keys_bak[2] = g_starsite_t
               LET gs_keys[3] = g_stas_d[g_detail_idx].stas002
               LET gs_keys_bak[3] = g_stas_d_t.stas002
               CALL astm311_update_b('stas_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL astm311_stas_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_stas_d[g_detail_idx].stas002 = g_stas_d_t.stas002 
 
                  ) THEN
                  LET gs_keys[01] = g_star_m.star001
                  LET gs_keys[gs_keys.getLength()+1] = g_star_m.starsite
 
                  LET gs_keys[gs_keys.getLength()+1] = g_stas_d_t.stas002
 
                  CALL astm311_key_update_b(gs_keys,'stas_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_star_m),util.JSON.stringify(g_stas_d_t)
               LET g_log2 = util.JSON.stringify(g_star_m),util.JSON.stringify(g_stas_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL astm311_unlock_b("stas_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_stas_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_stas_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
 
 
]]>
  </section>
  <section id="astm311.input.head" ver="27" status="" src="s" readonly="">
    <![CDATA[      #單頭段
      INPUT BY NAME g_star_m.starunit,g_star_m.starsite,g_star_m.star001,g_star_m.star002,g_star_m.star003, 
          g_star_m.star004,g_star_m.star007,g_star_m.star005,g_star_m.star006,g_star_m.star008,g_star_m.starstus  

         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN astm311_cl USING g_enterprise,g_star_m.star001,g_star_m.starsite
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm311_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE astm311_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL astm311_set_entry(p_cmd)
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL astm311_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD starunit
            
            #add-point:AFTER FIELD starunit
            {<point name="input.a.starunit" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD starunit
            #add-point:BEFORE FIELD starunit
            {<point name="input.b.starunit" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE starunit
            #add-point:ON CHANGE starunit
            {<point name="input.g.starunit" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD starsite
            
            #add-point:AFTER FIELD starsite
            {<point name="input.a.starsite" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD starsite
            #add-point:BEFORE FIELD starsite
            {<point name="input.b.starsite" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE starsite
            #add-point:ON CHANGE starsite
            {<point name="input.g.starsite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD star001
            #add-point:BEFORE FIELD star001
            {<point name="input.b.star001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD star001
            
            #add-point:AFTER FIELD star001
            {<point name="input.a.star001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE star001
            #add-point:ON CHANGE star001
            {<point name="input.g.star001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD star002
            #add-point:BEFORE FIELD star002
            {<point name="input.b.star002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD star002
            
            #add-point:AFTER FIELD star002
            {<point name="input.a.star002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE star002
            #add-point:ON CHANGE star002
            {<point name="input.g.star002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD star003
            
            #add-point:AFTER FIELD star003
            {<point name="input.a.star003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD star003
            #add-point:BEFORE FIELD star003
            {<point name="input.b.star003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE star003
            #add-point:ON CHANGE star003
            {<point name="input.g.star003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD star004
            #add-point:BEFORE FIELD star004
            {<point name="input.b.star004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD star004
            
            #add-point:AFTER FIELD star004
            {<point name="input.a.star004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE star004
            #add-point:ON CHANGE star004
            {<point name="input.g.star004" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD star007
            
            #add-point:AFTER FIELD star007
            {<point name="input.a.star007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD star007
            #add-point:BEFORE FIELD star007
            {<point name="input.b.star007" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE star007
            #add-point:ON CHANGE star007
            {<point name="input.g.star007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD star005
            #add-point:BEFORE FIELD star005
            {<point name="input.b.star005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD star005
            
            #add-point:AFTER FIELD star005
            {<point name="input.a.star005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE star005
            #add-point:ON CHANGE star005
            {<point name="input.g.star005" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD star006
            
            #add-point:AFTER FIELD star006
            {<point name="input.a.star006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD star006
            #add-point:BEFORE FIELD star006
            {<point name="input.b.star006" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE star006
            #add-point:ON CHANGE star006
            {<point name="input.g.star006" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD star008
            
            #add-point:AFTER FIELD star008
            {<point name="input.a.star008" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD star008
            #add-point:BEFORE FIELD star008
            {<point name="input.b.star008" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE star008
            #add-point:ON CHANGE star008
            {<point name="input.g.star008" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD starstus
            #add-point:BEFORE FIELD starstus
            {<point name="input.b.starstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD starstus
            
            #add-point:AFTER FIELD starstus
            {<point name="input.a.starstus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE starstus
            #add-point:ON CHANGE starstus
            {<point name="input.g.starstus" />}
            #END add-point 
 
 #欄位檢查
                  #Ctrlp:input.c.starunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD starunit
            #add-point:ON ACTION controlp INFIELD starunit
            {<point name="input.c.starunit" />}
            #END add-point
 
         #Ctrlp:input.c.starsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD starsite
            #add-point:ON ACTION controlp INFIELD starsite
            {<point name="input.c.starsite" />}
            #END add-point
 
         #Ctrlp:input.c.star001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD star001
            #add-point:ON ACTION controlp INFIELD star001
            {<point name="input.c.star001" />}
            #END add-point
 
         #Ctrlp:input.c.star002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD star002
            #add-point:ON ACTION controlp INFIELD star002
            {<point name="input.c.star002" />}
            #END add-point
 
         #Ctrlp:input.c.star003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD star003
            #add-point:ON ACTION controlp INFIELD star003
            {<point name="input.c.star003" />}
            #END add-point
 
         #Ctrlp:input.c.star004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD star004
            #add-point:ON ACTION controlp INFIELD star004
            {<point name="input.c.star004" />}
            #END add-point
 
         #Ctrlp:input.c.star007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD star007
            #add-point:ON ACTION controlp INFIELD star007
            {<point name="input.c.star007" />}
            #END add-point
 
         #Ctrlp:input.c.star005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD star005
            #add-point:ON ACTION controlp INFIELD star005
            {<point name="input.c.star005" />}
            #END add-point
 
         #Ctrlp:input.c.star006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD star006
            #add-point:ON ACTION controlp INFIELD star006
            {<point name="input.c.star006" />}
            #END add-point
 
         #Ctrlp:input.c.star008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD star008
            #add-point:ON ACTION controlp INFIELD star008
            {<point name="input.c.star008" />}
            #END add-point
 
         #Ctrlp:input.c.starstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD starstus
            #add-point:ON ACTION controlp INFIELD starstus
            {<point name="input.c.starstus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_star_m.star001,g_star_m.starsite
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO star_t (starent,starunit,starsite,star001,star002,star003,star004,star009, 
                   star007,star005,star006,star008,starstus,starownid,starowndp,starcrtid,starcrtdp, 
                   starcrtdt,starmodid,starmoddt,starcnfid,starcnfdt)
               VALUES (g_enterprise,g_star_m.starunit,g_star_m.starsite,g_star_m.star001,g_star_m.star002, 
                   g_star_m.star003,g_star_m.star004,g_star_m.star009,g_star_m.star007,g_star_m.star005, 
                   g_star_m.star006,g_star_m.star008,g_star_m.starstus,g_star_m.starownid,g_star_m.starowndp, 
                   g_star_m.starcrtid,g_star_m.starcrtdp,g_star_m.starcrtdt,g_star_m.starmodid,g_star_m.starmoddt, 
                   g_star_m.starcnfid,g_star_m.starcnfdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_star_m" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL astm311_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL astm311_b_fill()
               END IF
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL astm311_star_t_mask_restore('restore_mask_o')
               
               UPDATE star_t SET (starunit,starsite,star001,star002,star003,star004,star009,star007, 
                   star005,star006,star008,starstus,starownid,starowndp,starcrtid,starcrtdp,starcrtdt, 
                   starmodid,starmoddt,starcnfid,starcnfdt) = (g_star_m.starunit,g_star_m.starsite,g_star_m.star001, 
                   g_star_m.star002,g_star_m.star003,g_star_m.star004,g_star_m.star009,g_star_m.star007, 
                   g_star_m.star005,g_star_m.star006,g_star_m.star008,g_star_m.starstus,g_star_m.starownid, 
                   g_star_m.starowndp,g_star_m.starcrtid,g_star_m.starcrtdp,g_star_m.starcrtdt,g_star_m.starmodid, 
                   g_star_m.starmoddt,g_star_m.starcnfid,g_star_m.starcnfdt)
                WHERE starent = g_enterprise AND star001 = g_star001_t
                  AND starsite = g_starsite_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "star_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL astm311_star_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_star_m_t)
               LET g_log2 = util.JSON.stringify(g_star_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_star001_t = g_star_m.star001
            LET g_starsite_t = g_star_m.starsite
 
            
      END INPUT
   
]]>
  </section>
  <section id="astm311.input.other" ver="10" status="" src="s" readonly="">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD star001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD stas002
 
               #add-point:input段modify_detail 
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog
         {<point name="input.after_dialog"/>}
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel
         {<point name="input.cancel"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close
         {<point name="input.close"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit
         {<point name="input.exit"/>}
         #end add-point
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="astm311.insert" ver="22" status="" src="s" readonly="">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION astm311_insert()
   #add-point:insert段define
   {<point name="insert.define" edit="s"/>}
   #end add-point    
   #add-point:insert段define(客製用)
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_stas_d.clear()   
 
 
   INITIALIZE g_star_m.* LIKE star_t.*             #DEFAULT 設定
   
   LET g_star001_t = NULL
   LET g_starsite_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_star_m.starownid = g_user
      LET g_star_m.starowndp = g_dept
      LET g_star_m.starcrtid = g_user
      LET g_star_m.starcrtdp = g_dept 
      LET g_star_m.starcrtdt = cl_get_current()
      LET g_star_m.starmodid = g_user
      LET g_star_m.starmoddt = cl_get_current()
      LET g_star_m.starstus = 'N'
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
      
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_star_m_t.* = g_star_m.*
      LET g_star_m_o.* = g_star_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_star_m.starstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
    
      CALL astm311_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_star_m.* TO NULL
         INITIALIZE g_stas_d TO NULL
 
         #add-point:取消新增後
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL astm311_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_stas_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL astm311_set_act_visible()   
   CALL astm311_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_star001_t = g_star_m.star001
   LET g_starsite_t = g_star_m.starsite
 
   
   #組合新增資料的條件
   LET g_add_browse = " starent = '" ||g_enterprise|| "' AND",
                      " star001 = '", g_star_m.star001, "' "
                      ," AND starsite = '", g_star_m.starsite, "' "
 
                      
   #add-point:組合新增資料的條件後
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL astm311_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE astm311_cl
   
   CALL astm311_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE astm311_master_referesh USING g_star_m.star001,g_star_m.starsite INTO g_star_m.starunit,g_star_m.starsite, 
       g_star_m.star001,g_star_m.star002,g_star_m.star003,g_star_m.star004,g_star_m.star009,g_star_m.star007, 
       g_star_m.star005,g_star_m.star006,g_star_m.star008,g_star_m.starstus,g_star_m.starownid,g_star_m.starowndp, 
       g_star_m.starcrtid,g_star_m.starcrtdp,g_star_m.starcrtdt,g_star_m.starmodid,g_star_m.starmoddt, 
       g_star_m.starcnfid,g_star_m.starcnfdt,g_star_m.starunit_desc,g_star_m.starsite_desc,g_star_m.star003_desc, 
       g_star_m.star007_desc,g_star_m.star006_desc,g_star_m.star008_desc,g_star_m.starownid_desc,g_star_m.starowndp_desc, 
       g_star_m.starcrtid_desc,g_star_m.starcrtdp_desc,g_star_m.starmodid_desc,g_star_m.starcnfid_desc 

   
   #遮罩相關處理
   LET g_star_m_mask_o.* =  g_star_m.*
   CALL astm311_star_t_mask()
   LET g_star_m_mask_n.* =  g_star_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_star_m.starunit,g_star_m.starunit_desc,g_star_m.starsite,g_star_m.starsite_desc, 
       g_star_m.star001,g_star_m.star002,g_star_m.star003,g_star_m.star003_desc,g_star_m.star004,g_star_m.star009, 
       g_star_m.star007,g_star_m.star007_desc,g_star_m.star005,g_star_m.star006,g_star_m.star006_desc, 
       g_star_m.star008,g_star_m.star008_desc,g_star_m.starstus,g_star_m.starownid,g_star_m.starownid_desc, 
       g_star_m.starowndp,g_star_m.starowndp_desc,g_star_m.starcrtid,g_star_m.starcrtid_desc,g_star_m.starcrtdp, 
       g_star_m.starcrtdp_desc,g_star_m.starcrtdt,g_star_m.starmodid,g_star_m.starmodid_desc,g_star_m.starmoddt, 
       g_star_m.starcnfid,g_star_m.starcnfid_desc,g_star_m.starcnfdt
   
   #add-point:新增結束後
   {<point name="insert.after"/>}
   #end add-point 
   
   #功能已完成,通報訊息中心
   CALL astm311_msgcentre_notify('insert')
   
END FUNCTION
]]>
  </section>
  <section id="astm311.insert_b" ver="12" status="" src="s" readonly="">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION astm311_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define
   {<point name="insert_b.define" edit="s"/>}
   #end add-point     
   #add-point:insert_b段define(客製用)
   {<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point     
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO stas_t
                  (stasent,
                   stas001,stassite,
                   stas002
                   ,stas004,stas003,stas005,stas006,stas008,stas022,stas023,stas010,stas011,stas020,stas021,stas024,stas012,stas013,stas014,stas015,stas016,stas009,stas017,stas018,stas019,stas025) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_stas_d[g_detail_idx].stas004,g_stas_d[g_detail_idx].stas003,g_stas_d[g_detail_idx].stas005, 
                       g_stas_d[g_detail_idx].stas006,g_stas_d[g_detail_idx].stas008,g_stas_d[g_detail_idx].stas022, 
                       g_stas_d[g_detail_idx].stas023,g_stas_d[g_detail_idx].stas010,g_stas_d[g_detail_idx].stas011, 
                       g_stas_d[g_detail_idx].stas020,g_stas_d[g_detail_idx].stas021,g_stas_d[g_detail_idx].stas024, 
                       g_stas_d[g_detail_idx].stas012,g_stas_d[g_detail_idx].stas013,g_stas_d[g_detail_idx].stas014, 
                       g_stas_d[g_detail_idx].stas015,g_stas_d[g_detail_idx].stas016,g_stas_d[g_detail_idx].stas009, 
                       g_stas_d[g_detail_idx].stas017,g_stas_d[g_detail_idx].stas018,g_stas_d[g_detail_idx].stas019, 
                       g_stas_d[g_detail_idx].stas025)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stas_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_stas_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="astm311.key_delete_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION astm311_key_delete_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define
   {<point name="key_delete_b.define" edit="s"/>}
   #end add-point
   #add-point:delete_b段define(客製用)
   {<point name="key_delete_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="astm311.key_update_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION astm311_key_update_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:update_b段define
   {<point name="key_update_b.define" edit="s"/>}
   #end add-point
   #add-point:update_b段define(客製用)
   {<point name="key_update_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
END FUNCTION
]]>
  </section>
  <section id="astm311.lock_b" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION astm311_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define(客製用)
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point   
    
   #先刷新資料
   #CALL astm311_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "stas_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN astm311_bcl USING g_enterprise,
                                       g_star_m.star001,g_star_m.starsite,g_stas_d[g_detail_idx].stas002  
                                               
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astm311_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="astm311.main" ver="17" status="" src="s" readonly="">
    <![CDATA[#應用 a26 樣板自動產生(Version:4)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ast","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT starunit,'',starsite,'',star001,star002,star003,'',star004,star009,star007, 
       '',star005,star006,'',star008,'',starstus,starownid,'',starowndp,'',starcrtid,'',starcrtdp,'', 
       starcrtdt,starmodid,'',starmoddt,starcnfid,'',starcnfdt", 
                      " FROM star_t",
                      " WHERE starent= ? AND star001=? AND starsite=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm311_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.starunit,t0.starsite,t0.star001,t0.star002,t0.star003,t0.star004,t0.star009, 
       t0.star007,t0.star005,t0.star006,t0.star008,t0.starstus,t0.starownid,t0.starowndp,t0.starcrtid, 
       t0.starcrtdp,t0.starcrtdt,t0.starmodid,t0.starmoddt,t0.starcnfid,t0.starcnfdt,t1.ooefl003 ,t2.ooefl003 , 
       t3.pmaal003 ,t4.ooefl003 ,t5.staal003 ,t6.ooefl003 ,t7.ooag011 ,t8.ooefl003 ,t9.ooag011 ,t10.ooefl003 , 
       t11.ooag011 ,t12.ooag011",
               " FROM star_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=t0.starunit AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=t0.starsite AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t3 ON t3.pmaalent='"||g_enterprise||"' AND t3.pmaal001=t0.star003 AND t3.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=t0.star007 AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN staal_t t5 ON t5.staalent='"||g_enterprise||"' AND t5.staal001=t0.star006 AND t5.staal002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent='"||g_enterprise||"' AND t6.ooefl001=t0.star008 AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent='"||g_enterprise||"' AND t7.ooag001=t0.starownid  ",
               " LEFT JOIN ooefl_t t8 ON t8.ooeflent='"||g_enterprise||"' AND t8.ooefl001=t0.starowndp AND t8.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t9 ON t9.ooagent='"||g_enterprise||"' AND t9.ooag001=t0.starcrtid  ",
               " LEFT JOIN ooefl_t t10 ON t10.ooeflent='"||g_enterprise||"' AND t10.ooefl001=t0.starcrtdp AND t10.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t11 ON t11.ooagent='"||g_enterprise||"' AND t11.ooag001=t0.starmodid  ",
               " LEFT JOIN ooag_t t12 ON t12.ooagent='"||g_enterprise||"' AND t12.ooag001=t0.starcnfid  ",
 
               " WHERE t0.starent = '" ||g_enterprise|| "' AND t0.star001 = ? AND t0.starsite = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE astm311_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_astm311 WITH FORM cl_ap_formpath("ast",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL astm311_init()   
 
      #進入選單 Menu (="N")
      CALL astm311_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_astm311
      
   END IF 
   
   CLOSE astm311_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
]]>
  </section>
  <section id="astm311.mask_functions" ver="1" status="" src="s" readonly="">
    <![CDATA[&include "erp/ast/astm311_mask.4gl"
]]>
  </section>
  <section id="astm311.modify" ver="22" status="" src="s" readonly="">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION astm311_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
 
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point    
   #add-point:modify段define(客製用)
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point    
   
   #保存單頭舊值
   LET g_star_m_t.* = g_star_m.*
   LET g_star_m_o.* = g_star_m.*
   
   IF g_star_m.star001 IS NULL
   OR g_star_m.starsite IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_star001_t = g_star_m.star001
   LET g_starsite_t = g_star_m.starsite
 
   CALL s_transaction_begin()
   
   OPEN astm311_cl USING g_enterprise,g_star_m.star001,g_star_m.starsite
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN astm311_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE astm311_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE astm311_master_referesh USING g_star_m.star001,g_star_m.starsite INTO g_star_m.starunit,g_star_m.starsite, 
       g_star_m.star001,g_star_m.star002,g_star_m.star003,g_star_m.star004,g_star_m.star009,g_star_m.star007, 
       g_star_m.star005,g_star_m.star006,g_star_m.star008,g_star_m.starstus,g_star_m.starownid,g_star_m.starowndp, 
       g_star_m.starcrtid,g_star_m.starcrtdp,g_star_m.starcrtdt,g_star_m.starmodid,g_star_m.starmoddt, 
       g_star_m.starcnfid,g_star_m.starcnfdt,g_star_m.starunit_desc,g_star_m.starsite_desc,g_star_m.star003_desc, 
       g_star_m.star007_desc,g_star_m.star006_desc,g_star_m.star008_desc,g_star_m.starownid_desc,g_star_m.starowndp_desc, 
       g_star_m.starcrtid_desc,g_star_m.starcrtdp_desc,g_star_m.starmodid_desc,g_star_m.starcnfid_desc 

   
   #檢查是否允許此動作
   IF NOT astm311_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_star_m_mask_o.* =  g_star_m.*
   CALL astm311_star_t_mask()
   LET g_star_m_mask_n.* =  g_star_m.*
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
 
   
   CALL astm311_show()
   #add-point:modify段show之後
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
 
    
   WHILE TRUE
      LET g_star001_t = g_star_m.star001
      LET g_starsite_t = g_star_m.starsite
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_star_m.starmodid = g_user 
LET g_star_m.starmoddt = cl_get_current()
LET g_star_m.starmodid_desc = cl_get_username(g_star_m.starmodid)
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      CALL astm311_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE star_t SET (starmodid,starmoddt) = (g_star_m.starmodid,g_star_m.starmoddt)
          WHERE starent = g_enterprise AND star001 = g_star001_t
            AND starsite = g_starsite_t
 
      END IF
    
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_star_m.* = g_star_m_t.*
         CALL astm311_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_star_m.star001 != g_star001_t 
      OR g_star_m.starsite != g_starsite_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE stas_t SET stas001 = g_star_m.star001
                                       ,stassite = g_star_m.starsite
 
          WHERE stasent = g_enterprise AND stas001 = g_star001_t
            AND stassite = g_starsite_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stas_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stas_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL astm311_set_act_visible()   
   CALL astm311_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " starent = '" ||g_enterprise|| "' AND",
                      " star001 = '", g_star_m.star001, "' "
                      ," AND starsite = '", g_star_m.starsite, "' "
 
   #填到對應位置
   CALL astm311_browser_fill("")
 
   CLOSE astm311_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL astm311_msgcentre_notify('modify')
 
END FUNCTION   
]]>
  </section>
  <section id="astm311.msgcentre_notify" ver="2" status="" src="s" readonly="">
    <![CDATA[#應用 a66 樣板自動產生(Version:3)
PRIVATE FUNCTION astm311_msgcentre_notify(lc_state)
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define" edit="s"/>}
   #end add-point
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define_customerization" edit="c"/>}
   #end add-point   
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL astm311_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_star_m)
 
   #add-point:msgcentre其他通知
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
]]>
  </section>
  <section id="astm311.other_dialog" ver="2" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="astm311.other_function" ver="2" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="astm311.query" ver="10" status="" src="s" readonly="">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION astm311_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point   
   #add-point:query段define(客製用)
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_stas_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL astm311_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL astm311_browser_fill("")
      CALL astm311_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
   CALL astm311_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL astm311_fetch("F") 
      #顯示單身筆數
      CALL astm311_idx_chk()
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="astm311.reproduce" ver="23" status="" src="s" readonly="">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION astm311_reproduce()
   DEFINE l_newno     LIKE star_t.star001 
   DEFINE l_oldno     LIKE star_t.star001 
   DEFINE l_newno02     LIKE star_t.starsite 
   DEFINE l_oldno02     LIKE star_t.starsite 
 
   DEFINE l_master    RECORD LIKE star_t.*
   DEFINE l_detail    RECORD LIKE stas_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define
   {<point name="reproduce.define" edit="s"/>}
   #end add-point   
   #add-point:reproduce段define(客製用)
   {<point name="reproduce.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   
   LET g_master_insert = FALSE
   
   IF g_star_m.star001 IS NULL
   OR g_star_m.starsite IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_star001_t = g_star_m.star001
   LET g_starsite_t = g_star_m.starsite
 
    
   LET g_star_m.star001 = ""
   LET g_star_m.starsite = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_star_m.starownid = g_user
      LET g_star_m.starowndp = g_dept
      LET g_star_m.starcrtid = g_user
      LET g_star_m.starcrtdp = g_dept 
      LET g_star_m.starcrtdt = cl_get_current()
      LET g_star_m.starmodid = g_user
      LET g_star_m.starmoddt = cl_get_current()
      LET g_star_m.starstus = 'N'
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_star_m.starstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #清空key欄位的desc
      LET g_star_m.starsite_desc = ''
   DISPLAY BY NAME g_star_m.starsite_desc
 
   
   CALL astm311_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_star_m.* TO NULL
      INITIALIZE g_stas_d TO NULL
 
      #add-point:複製取消後
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL astm311_show()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL astm311_set_act_visible()   
   CALL astm311_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_star001_t = g_star_m.star001
   LET g_starsite_t = g_star_m.starsite
 
   
   #組合新增資料的條件
   LET g_add_browse = " starent = '" ||g_enterprise|| "' AND",
                      " star001 = '", g_star_m.star001, "' "
                      ," AND starsite = '", g_star_m.starsite, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL astm311_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL astm311_idx_chk()
   
   #功能已完成,通報訊息中心
   CALL astm311_msgcentre_notify('reproduce')
 
END FUNCTION
]]>
  </section>
  <section id="astm311.set_act_no_visible" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限關閉
PRIVATE FUNCTION astm311_set_act_no_visible()
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible段define(客製用)
   {<point name="set_act_no_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible段
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="astm311.set_act_no_visible_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限關閉
PRIVATE FUNCTION astm311_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define(客製用)
   {<point name="set_act_no_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="astm311.set_act_visible" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限開啟
PRIVATE FUNCTION astm311_set_act_visible()
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible段define(客製用)
   {<point name="set_act_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible段
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="astm311.set_act_visible_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限開啟
PRIVATE FUNCTION astm311_set_act_visible_b()
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible_b段define(客製用)
   {<point name="set_act_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible_b段
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="astm311.set_entry" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION astm311_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define" edit="s"/>}
   #end add-point       
   #add-point:set_entry段define(客製用)
   {<point name="set_entry.define_customerization" edit="c"/>}
   #end add-point       
   
   CALL cl_set_comp_entry("",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("star001,starsite",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="astm311.set_entry_b" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION astm311_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define" edit="s"/>}
   #end add-point     
   #add-point:set_entry_b段define(客製用)
   {<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point     
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="astm311.set_no_entry" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION astm311_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define" edit="s"/>}
   #end add-point     
   #add-point:set_no_entry段define(客製用)
   {<point name="set_no_entry.define_customerization" edit="c"/>}
   #end add-point     
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("star001,starsite",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("",FALSE)
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="astm311.set_no_entry_b" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION astm311_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point    
   #add-point:set_no_entry_b段define(客製用)
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point    
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="astm311.set_pk_array" ver="7" status="" src="s" readonly="">
    <![CDATA[   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION astm311_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_star_m.star001
   LET g_pk_array[1].column = 'star001'
   LET g_pk_array[2].values = g_star_m.starsite
   LET g_pk_array[2].column = 'starsite'
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="astm311.show" ver="17" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION astm311_show()
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define
   {<point name="show.define" edit="s"/>}
   #end add-point  
   #add-point:show段define(客製用)
   {<point name="show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL astm311_b_fill() #單身填充
      CALL astm311_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:3)
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:2)
   CALL astm311_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_star_m_mask_o.* =  g_star_m.*
   CALL astm311_star_t_mask()
   LET g_star_m_mask_n.* =  g_star_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_star_m.starunit,g_star_m.starunit_desc,g_star_m.starsite,g_star_m.starsite_desc, 
       g_star_m.star001,g_star_m.star002,g_star_m.star003,g_star_m.star003_desc,g_star_m.star004,g_star_m.star009, 
       g_star_m.star007,g_star_m.star007_desc,g_star_m.star005,g_star_m.star006,g_star_m.star006_desc, 
       g_star_m.star008,g_star_m.star008_desc,g_star_m.starstus,g_star_m.starownid,g_star_m.starownid_desc, 
       g_star_m.starowndp,g_star_m.starowndp_desc,g_star_m.starcrtid,g_star_m.starcrtid_desc,g_star_m.starcrtdp, 
       g_star_m.starcrtdp_desc,g_star_m.starcrtdt,g_star_m.starmodid,g_star_m.starmodid_desc,g_star_m.starmoddt, 
       g_star_m.starcnfid,g_star_m.starcnfid_desc,g_star_m.starcnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_star_m.starstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_stas_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL astm311_detail_show()
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="astm311.signature" ver="9" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="astm311.state_change" ver="17" status="" src="s" readonly="">
    <![CDATA[   #應用 a09 樣板自動產生(Version:12)
#+ 確認碼變更 
PRIVATE FUNCTION astm311_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define" edit="s"/>}
   #end add-point  
   #add-point:statechange段define(客製用)
   {<point name="statechange.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_star_m.star001 IS NULL
      OR g_star_m.starsite IS NULL
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN astm311_cl USING g_enterprise,g_star_m.star001,g_star_m.starsite
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN astm311_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE astm311_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE astm311_master_referesh USING g_star_m.star001,g_star_m.starsite INTO g_star_m.starunit,g_star_m.starsite, 
       g_star_m.star001,g_star_m.star002,g_star_m.star003,g_star_m.star004,g_star_m.star009,g_star_m.star007, 
       g_star_m.star005,g_star_m.star006,g_star_m.star008,g_star_m.starstus,g_star_m.starownid,g_star_m.starowndp, 
       g_star_m.starcrtid,g_star_m.starcrtdp,g_star_m.starcrtdt,g_star_m.starmodid,g_star_m.starmoddt, 
       g_star_m.starcnfid,g_star_m.starcnfdt,g_star_m.starunit_desc,g_star_m.starsite_desc,g_star_m.star003_desc, 
       g_star_m.star007_desc,g_star_m.star006_desc,g_star_m.star008_desc,g_star_m.starownid_desc,g_star_m.starowndp_desc, 
       g_star_m.starcrtid_desc,g_star_m.starcrtdp_desc,g_star_m.starmodid_desc,g_star_m.starcnfid_desc 

 
   #檢查是否允許此動作
   IF NOT astm311_action_chk() THEN
      CLOSE astm311_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_star_m.starunit,g_star_m.starunit_desc,g_star_m.starsite,g_star_m.starsite_desc, 
       g_star_m.star001,g_star_m.star002,g_star_m.star003,g_star_m.star003_desc,g_star_m.star004,g_star_m.star009, 
       g_star_m.star007,g_star_m.star007_desc,g_star_m.star005,g_star_m.star006,g_star_m.star006_desc, 
       g_star_m.star008,g_star_m.star008_desc,g_star_m.starstus,g_star_m.starownid,g_star_m.starownid_desc, 
       g_star_m.starowndp,g_star_m.starowndp_desc,g_star_m.starcrtid,g_star_m.starcrtid_desc,g_star_m.starcrtdp, 
       g_star_m.starcrtdp_desc,g_star_m.starcrtdt,g_star_m.starmodid,g_star_m.starmodid_desc,g_star_m.starmoddt, 
       g_star_m.starcnfid,g_star_m.starcnfid_desc,g_star_m.starcnfdt
 
   CASE g_star_m.starstus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_star_m.starstus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制
            {<point name="statechange.unconfirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制
            {<point name="statechange.confirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制
            {<point name="statechange.approved"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制
      #      {<point name="statechange.withdraw"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制
            {<point name="statechange.rejection"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制
      #      {<point name="statechange.signing"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制
            {<point name="statechange.invalid"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "X"
      ) OR 
      g_star_m.starstus = lc_state OR cl_null(lc_state) THEN
      CLOSE astm311_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_star_m.starmodid = g_user
   LET g_star_m.starmoddt = cl_get_current()
   LET g_star_m.starstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE star_t 
      SET (starstus,starmodid,starmoddt) 
        = (g_star_m.starstus,g_star_m.starmodid,g_star_m.starmoddt)     
    WHERE starent = g_enterprise AND star001 = g_star_m.star001
      AND starsite = g_star_m.starsite
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE astm311_master_referesh USING g_star_m.star001,g_star_m.starsite INTO g_star_m.starunit, 
          g_star_m.starsite,g_star_m.star001,g_star_m.star002,g_star_m.star003,g_star_m.star004,g_star_m.star009, 
          g_star_m.star007,g_star_m.star005,g_star_m.star006,g_star_m.star008,g_star_m.starstus,g_star_m.starownid, 
          g_star_m.starowndp,g_star_m.starcrtid,g_star_m.starcrtdp,g_star_m.starcrtdt,g_star_m.starmodid, 
          g_star_m.starmoddt,g_star_m.starcnfid,g_star_m.starcnfdt,g_star_m.starunit_desc,g_star_m.starsite_desc, 
          g_star_m.star003_desc,g_star_m.star007_desc,g_star_m.star006_desc,g_star_m.star008_desc,g_star_m.starownid_desc, 
          g_star_m.starowndp_desc,g_star_m.starcrtid_desc,g_star_m.starcrtdp_desc,g_star_m.starmodid_desc, 
          g_star_m.starcnfid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_star_m.starunit,g_star_m.starunit_desc,g_star_m.starsite,g_star_m.starsite_desc, 
          g_star_m.star001,g_star_m.star002,g_star_m.star003,g_star_m.star003_desc,g_star_m.star004, 
          g_star_m.star009,g_star_m.star007,g_star_m.star007_desc,g_star_m.star005,g_star_m.star006, 
          g_star_m.star006_desc,g_star_m.star008,g_star_m.star008_desc,g_star_m.starstus,g_star_m.starownid, 
          g_star_m.starownid_desc,g_star_m.starowndp,g_star_m.starowndp_desc,g_star_m.starcrtid,g_star_m.starcrtid_desc, 
          g_star_m.starcrtdp,g_star_m.starcrtdp_desc,g_star_m.starcrtdt,g_star_m.starmodid,g_star_m.starmodid_desc, 
          g_star_m.starmoddt,g_star_m.starcnfid,g_star_m.starcnfid_desc,g_star_m.starcnfdt
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE astm311_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL astm311_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
]]>
  </section>
  <section id="astm311.status_show" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION astm311_status_show()
   #add-point:status_show段define
   {<point name="status_show.define" edit="s"/>}
   #end add-point
   #add-point:status_show段define(客製用)
   {<point name="status_show.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:status_show段status_show
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="astm311.ui_browser_refresh" ver="9" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION astm311_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define" edit="s"/>}
   #end add-point    
   #add-point:ui_browser_refresh段define(客製用)
   {<point name="ui_browser_refresh.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_star001 = g_star_m.star001 
         AND g_browser[l_i].b_starsite = g_star_m.starsite 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="astm311.ui_detailshow" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION astm311_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_detailshow段define(客製用)
   {<point name="ui_detailshow.define_customerization" edit="c"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="astm311.ui_dialog" ver="29" status="" src="s" readonly="">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION astm311_ui_dialog()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define(客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   
   #action default動作
   
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_star_m.* TO NULL
         CALL g_stas_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL astm311_init()
      END IF
   
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
    
         DISPLAY ARRAY g_stas_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astm311_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL astm311_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
      
         BEFORE DIALOG
            #先填充browser資料
            CALL astm311_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL astm311_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL astm311_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL astm311_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL astm311_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL astm311_set_act_visible()   
            CALL astm311_set_act_no_visible()
            IF NOT (g_star_m.star001 IS NULL
              OR g_star_m.starsite IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " starent = '" ||g_enterprise|| "' AND",
                                  " star001 = '", g_star_m.star001, "' "
                                  ," AND starsite = '", g_star_m.starsite, "' "
 
               #填到對應位置
               CALL astm311_browser_fill("")
            END IF
         
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "star_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "stas_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL astm311_browser_fill("F")   #browser_fill()會將notice區塊清空
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "star_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "stas_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL astm311_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL astm311_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
          
         
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL astm311_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astm311_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL astm311_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astm311_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL astm311_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astm311_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL astm311_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astm311_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL astm311_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astm311_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_stas_d)
                  LET g_export_id[1]   = "s_detail1"
 
                  #add-point:ON ACTION exporttoexcel
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL astm311_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
 
 
 
            END IF
 
 
 
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL astm311_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL astm311_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL astm311_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="astm311.ui_headershow" ver="9" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION astm311_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_headershow段define(客製用)
   {<point name="ui_headershow.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_star_m.star001 = g_browser[g_current_idx].b_star001   
   LET g_star_m.starsite = g_browser[g_current_idx].b_starsite   
 
   EXECUTE astm311_master_referesh USING g_star_m.star001,g_star_m.starsite INTO g_star_m.starunit,g_star_m.starsite, 
       g_star_m.star001,g_star_m.star002,g_star_m.star003,g_star_m.star004,g_star_m.star009,g_star_m.star007, 
       g_star_m.star005,g_star_m.star006,g_star_m.star008,g_star_m.starstus,g_star_m.starownid,g_star_m.starowndp, 
       g_star_m.starcrtid,g_star_m.starcrtdp,g_star_m.starcrtdt,g_star_m.starmodid,g_star_m.starmoddt, 
       g_star_m.starcnfid,g_star_m.starcnfdt,g_star_m.starunit_desc,g_star_m.starsite_desc,g_star_m.star003_desc, 
       g_star_m.star007_desc,g_star_m.star006_desc,g_star_m.star008_desc,g_star_m.starownid_desc,g_star_m.starowndp_desc, 
       g_star_m.starcrtid_desc,g_star_m.starcrtdp_desc,g_star_m.starmodid_desc,g_star_m.starcnfid_desc 

   CALL astm311_star_t_mask()
   CALL astm311_show()
      
END FUNCTION
]]>
  </section>
  <section id="astm311.unlock_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION astm311_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define(客製用)
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point  
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astm311_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="astm311.update_b" ver="13" status="" src="s" readonly="">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION astm311_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define" edit="s"/>}
   #end add-point   
   #add-point:update_b段define(客製用)
   {<point name="update_b.define_customerization" edit="c"/>}
   #end add-point   
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stas_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL astm311_stas_t_mask_restore('restore_mask_o')
               
      UPDATE stas_t 
         SET (stas001,stassite,
              stas002
              ,stas004,stas003,stas005,stas006,stas008,stas022,stas023,stas010,stas011,stas020,stas021,stas024,stas012,stas013,stas014,stas015,stas016,stas009,stas017,stas018,stas019,stas025) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_stas_d[g_detail_idx].stas004,g_stas_d[g_detail_idx].stas003,g_stas_d[g_detail_idx].stas005, 
                  g_stas_d[g_detail_idx].stas006,g_stas_d[g_detail_idx].stas008,g_stas_d[g_detail_idx].stas022, 
                  g_stas_d[g_detail_idx].stas023,g_stas_d[g_detail_idx].stas010,g_stas_d[g_detail_idx].stas011, 
                  g_stas_d[g_detail_idx].stas020,g_stas_d[g_detail_idx].stas021,g_stas_d[g_detail_idx].stas024, 
                  g_stas_d[g_detail_idx].stas012,g_stas_d[g_detail_idx].stas013,g_stas_d[g_detail_idx].stas014, 
                  g_stas_d[g_detail_idx].stas015,g_stas_d[g_detail_idx].stas016,g_stas_d[g_detail_idx].stas009, 
                  g_stas_d[g_detail_idx].stas017,g_stas_d[g_detail_idx].stas018,g_stas_d[g_detail_idx].stas019, 
                  g_stas_d[g_detail_idx].stas025) 
         WHERE stasent = g_enterprise AND stas001 = ps_keys_bak[1] AND stassite = ps_keys_bak[2] AND stas002 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stas_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stas_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astm311_stas_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
