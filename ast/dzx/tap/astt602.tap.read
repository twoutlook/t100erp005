<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="astt602" std_prog="astt602" erpver="1.0" module="AST" ver="3" env="s" zone="t10dev" booking="N" type="M" identity="s">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="function.astt602_stcm001_chk" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 合约编号检查
# Memo...........:
# Usage..........: CALL astt602_stcm001_chk()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/06/20 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION astt602_stcm001_chk()
   DEFINE l_stcestus   LIKE stce_t.stcestus
   DEFINE l_stce005    LIKE stce_t.stce005
   DEFINE l_stce006    LIKE stce_t.stce006
   DEFINE l_stce007    LIKE stce_t.stce007
   DEFINE l_stce008    LIKE stce_t.stce008
   DEFINE l_stce009    LIKE stce_t.stce009
   DEFINE l_stce010    LIKE stce_t.stce010
   DEFINE l_stce017    LIKE stce_t.stce017
   DEFINE l_stce018    LIKE stce_t.stce018
   DEFINE l_stce021    LIKE stce_t.stce021
   DEFINE l_stce022    LIKE stce_t.stce022
   DEFINE l_stce024    LIKE stce_t.stce024
   DEFINE l_ooef019    LIKE ooef_t.ooef019
   
   LET g_errno = ''
   SELECT stcestus,stce009,stce010,stce005,stce006,stce007,stce008,stce017,stce018,stce021,stce022,stce024
     INTO l_stcestus,l_stce009,l_stce010,l_stce005,l_stce006,l_stce007,l_stce008,l_stce017,l_stce018,l_stce021,l_stce022,l_stce024
     FROM stce_t
    WHERE stceent = g_enterprise
      AND stce001 = g_stcm_m.stcm001
   CASE 
      WHEN SQLCA.SQLCODE = 100 LET g_errno = 'ast-00051'
      WHEN l_stcestus <> 'Y'   LET g_errno = 'ast-00052'
      WHEN l_stce017 > g_stcm_m.stcmdocdt OR l_stce018 < g_stcm_m.stcmdocdt
                               LET g_errno = 'ast-00055'
      OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
   END CASE
   IF cl_null(g_errno) THEN 
      LET g_stcm_m.stcm003 = l_stce009
      LET g_stcm_m.stcm004 = l_stce010
      LET g_stcm_m.stcm005 = l_stce005
      LET g_stcm_m.stcm006 = l_stce006
      LET g_stcm_m.stcm007 = l_stce007
      LET g_stcm_m.stcm002 = l_stce008
      LET g_stcm_m.stcm018 = l_stce017
      LET g_stcm_m.stcm019 = l_stce018
      LET g_stcm_m.stcm016 = l_stce021
      LET g_stcm_m.stcm017 = l_stce022
      LET g_stcm_m.stcm010 = l_stce024
      DISPLAY BY NAME g_stcm_m.stcm003,g_stcm_m.stcm004,g_stcm_m.stcm005,g_stcm_m.stcm006,
                      g_stcm_m.stcm007,g_stcm_m.stcm016,g_stcm_m.stcm017,g_stcm_m.stcm010,
                      g_stcm_m.stcm018,g_stcm_m.stcm019
                      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_stcm_m.stcm003
      CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_stcm_m.stcm003_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_stcm_m.stcm003_desc
      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_stcm_m.stcm004
      CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_stcm_m.stcm004_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_stcm_m.stcm004_desc
      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_stcm_m.stcm006
      CALL ap_ref_array2(g_ref_fields,"SELECT staal003 FROM staal_t WHERE staalent='"||g_enterprise||"' AND staal001=? AND staal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_stcm_m.stcm006_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_stcm_m.stcm006_desc
      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_stcm_m.stcm007
      CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_stcm_m.stcm007_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_stcm_m.stcm007_desc
      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_stcm_m.stcm016
      CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_stcm_m.stcm016_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_stcm_m.stcm016_desc
      
      SELECT ooef019 INTO l_ooef019
        FROM ooef_t
       WHERE ooefent = g_enterprise
         AND ooef001 = g_stcm_m.stcmsite                  
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_stcm_m.stcm017
      CALL ap_ref_array2(g_ref_fields,"SELECT oodbl004 FROM oodbl_t WHERE oodblent='"||g_enterprise||"' AND oodbl001 = '"||l_ooef019||"' AND oodbl002=? AND oodbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_stcm_m.stcm017_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_stcm_m.stcm017_desc
      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_stcm_m.stcm010
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_stcm_m.stcm010_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_stcm_m.stcm010_desc
   END IF 
END FUNCTION]]>
  </point>
  <point name="function.astt602_stcm003_chk" order="2" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 经销商检查
# Memo...........:
# Usage..........: astt602_stcm003_chk()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/06/20 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION astt602_stcm003_chk()
   DEFINE l_pmaastus   LIKE pmaa_t.pmaastus
   DEFINE l_stce005    LIKE stce_t.stce005
   DEFINE l_stce006    LIKE stce_t.stce006
   DEFINE l_stce007    LIKE stce_t.stce007
   DEFINE l_stce008    LIKE stce_t.stce008
   DEFINE l_stce001    LIKE stce_t.stce001
   DEFINE l_stce010    LIKE stce_t.stce010
   DEFINE l_stcw004    LIKE stcw_t.stcw004
   DEFINE l_stce017    LIKE stce_t.stce017
   DEFINE l_stce018    LIKE stce_t.stce018
   DEFINE l_stce021    LIKE stce_t.stce021
   DEFINE l_stce022    LIKE stce_t.stce022
   DEFINE l_stce024    LIKE stce_t.stce024
   DEFINE l_ooef019    LIKE ooef_t.ooef019
   DEFINE l_n          LIKE type_t.num5
   
   LET g_errno = ''
   SELECT pmaastus INTO l_pmaastus
     FROM pmaa_t
    WHERE pmaaent = g_enterprise
      AND pmaa230 = '1' 
      AND pmaa092 = '2' 
      AND pmaa002 <> '1'
      AND pmaa001 = g_stcm_m.stcm003
   CASE 
      WHEN SQLCA.SQLCODE = 100 LET g_errno = 'ast-00053'
      WHEN l_pmaastus <> 'Y'   LET g_errno = 'ast-00054'
      OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
   END CASE
   IF cl_null(g_errno) THEN
      IF NOT cl_null(g_stcm_m.stcm001) THEN
         LET l_n = 0
         #检查经销商是否存在合同中      
         SELECT COUNT(*) INTO l_n
           FROM stce_t         
          WHERE stceent = g_enterprise
            AND stce001 = g_stcm_m.stcm001
            AND stce009 = g_stcm_m.stcm003
         IF l_n = 0 THEN 
            LET g_errno = 'ast-00056'
         END IF 
      ELSE
         IF NOT cl_null(g_stcm_m.stcmdocdt) THEN 
            #带出符合条件的合约编号及其他栏位
            SELECT stce001,stce010,stce005,stce006,stce007,stce008,stce021,stce022,stce024,stce017,stce018
              INTO l_stce001,l_stce010,l_stce005,l_stce006,l_stce007,l_stce008,l_stce021,l_stce022,l_stce024,l_stce017,l_stce018
              FROM stce_t
             WHERE stceent = g_enterprise
               AND stce009 = g_stcm_m.stcm003
               AND stce010 = g_stcm_m.stcm004
               AND stce017 <= g_stcm_m.stcmdocdt
               AND stce018 >= g_stcm_m.stcmdocdt
               AND stcestus = 'Y'
            IF NOT cl_null(l_stce001) THEN    
               LET g_stcm_m.stcm001 = l_stce001
               LET g_stcm_m.stcm004 = l_stce010
               LET g_stcm_m.stcm005 = l_stce005
               LET g_stcm_m.stcm006 = l_stce006
               LET g_stcm_m.stcm007 = l_stce007
               LET g_stcm_m.stcm002 = l_stce008
               LET g_stcm_m.stcm018 = l_stce017
               LET g_stcm_m.stcm019 = l_stce018
               LET g_stcm_m.stcm016 = l_stce021
               LET g_stcm_m.stcm017 = l_stce022
               LET g_stcm_m.stcm010 = l_stce024               
               DISPLAY BY NAME g_stcm_m.stcm003,g_stcm_m.stcm004,g_stcm_m.stcm005,g_stcm_m.stcm006,
                               g_stcm_m.stcm007,g_stcm_m.stcm016,g_stcm_m.stcm017,g_stcm_m.stcm010,
                               g_stcm_m.stcm018,g_stcm_m.stcm019

               LET l_stcw004 = ''
               SELECT stcw004 INTO l_stcw004
                 FROM stcw_t
                WHERE stcw001 = g_stcm_m.stcm001
                  AND stcw005 = 'N'
                ORDER BY stcwseq       
               DISPLAY l_stcw004 TO next_b   
               
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_stcm_m.stcm003
               CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
               LET g_stcm_m.stcm003_desc = '', g_rtn_fields[1] , ''
               DISPLAY BY NAME g_stcm_m.stcm003_desc
               
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_stcm_m.stcm004
               CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
               LET g_stcm_m.stcm004_desc = '', g_rtn_fields[1] , ''
               DISPLAY BY NAME g_stcm_m.stcm004_desc
               
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_stcm_m.stcm006
               CALL ap_ref_array2(g_ref_fields,"SELECT staal003 FROM staal_t WHERE staalent='"||g_enterprise||"' AND staal001=? AND staal002='"||g_dlang||"'","") RETURNING g_rtn_fields
               LET g_stcm_m.stcm006_desc = '', g_rtn_fields[1] , ''
               DISPLAY BY NAME g_stcm_m.stcm006_desc
               
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_stcm_m.stcm007
               CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
               LET g_stcm_m.stcm007_desc = '', g_rtn_fields[1] , ''
               DISPLAY BY NAME g_stcm_m.stcm007_desc             

               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_stcm_m.stcm016
               CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
               LET g_stcm_m.stcm016_desc = '', g_rtn_fields[1] , ''
               DISPLAY BY NAME g_stcm_m.stcm016_desc
               
               SELECT ooef019 INTO l_ooef019
                 FROM ooef_t
                WHERE ooefent = g_enterprise
                  AND ooef001 = g_stcm_m.stcmsite                  
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_stcm_m.stcm017
               CALL ap_ref_array2(g_ref_fields,"SELECT oodbl004 FROM oodbl_t WHERE oodblent='"||g_enterprise||"' AND oodbl001 = '"||l_ooef019||"' AND oodbl002=? AND oodbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
               LET g_stcm_m.stcm017_desc = '', g_rtn_fields[1] , ''
               DISPLAY BY NAME g_stcm_m.stcm017_desc
               
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_stcm_m.stcm010
               CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
               LET g_stcm_m.stcm010_desc = '', g_rtn_fields[1] , ''
               DISPLAY BY NAME g_stcm_m.stcm010_desc
            END IF
         END IF 
      END IF          
   END IF 
END FUNCTION]]>
  </point>
  <point name="function.astt602_stcm004_chk" order="3" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[# Descriptions...: 网点检查
# Memo...........:
# Usage..........: astt602_stcm004_chk()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/06/20 By yangxf
# Modify.........:
PRIVATE FUNCTION astt602_stcm004_chk()
   DEFINE l_pmaastus   LIKE pmaa_t.pmaastus
   DEFINE l_stce005    LIKE stce_t.stce005
   DEFINE l_stce006    LIKE stce_t.stce006
   DEFINE l_stce007    LIKE stce_t.stce007
   DEFINE l_stce008    LIKE stce_t.stce008
   DEFINE l_stce001    LIKE stce_t.stce001
   DEFINE l_stce009    LIKE stce_t.stce009
   DEFINE l_stcw004    LIKE stcw_t.stcw004
   DEFINE l_stce017    LIKE stce_t.stce017
   DEFINE l_stce018    LIKE stce_t.stce018
   DEFINE l_stce021    LIKE stce_t.stce021
   DEFINE l_stce022    LIKE stce_t.stce022
   DEFINE l_stce024    LIKE stce_t.stce024
   DEFINE l_ooef019    LIKE ooef_t.ooef019   
   DEFINE l_n          LIKE type_t.num5
   
   LET g_errno = ''
   #网点编号存在
   IF NOT cl_null(g_stcm_m.stcm003) THEN
      LET l_n = 0      
      SELECT COUNT(*) INTO l_n 
        FROM pmaa_t 
       WHERE pmaaent = g_enterprise 
         AND pmaa006 = g_stcm_m.stcm003 
         AND pmaa001 = g_stcm_m.stcm004
      IF l_n =0 THEN
        LET g_errno = 'ast-00043'
        RETURN 
      END IF
   END IF 
   IF cl_null(g_errno) THEN
      IF NOT cl_null(g_stcm_m.stcm001) THEN
         LET l_n = 0
         #检查网点是否存在合同中      
         SELECT COUNT(*) INTO l_n
           FROM stce_t         
          WHERE stceent = g_enterprise
            AND stce001 = g_stcm_m.stcm001
            AND stce010 = g_stcm_m.stcm004
         IF l_n = 0 THEN 
            LET g_errno = 'ast-00057'
         END IF 
      ELSE
         IF NOT cl_null(g_stcm_m.stcmdocdt) AND NOT cl_null(g_stcm_m.stcm003) THEN 
            #带出符合条件的合约编号及其他栏位
            SELECT stce001,stce009,stce005,stce006,stce007,stce008,stce021,stce022,stce024,stce017,stce018
              INTO l_stce001,l_stce009,l_stce005,l_stce006,l_stce007,l_stce008,l_stce021,l_stce022,l_stce024,l_stce017,l_stce018
              FROM stce_t
             WHERE stceent = g_enterprise
               AND stce010 = g_stcm_m.stcm004
               AND stce009 = g_stcm_m.stcm003
               AND stce017 <= g_stcm_m.stcmdocdt
               AND stce018 >= g_stcm_m.stcmdocdt
               AND stcestus = 'Y'
            IF NOT cl_null(l_stce001) THEN    
               LET g_stcm_m.stcm001 = l_stce001
               LET g_stcm_m.stcm003 = l_stce009
               LET g_stcm_m.stcm005 = l_stce005
               LET g_stcm_m.stcm006 = l_stce006
               LET g_stcm_m.stcm007 = l_stce007
               LET g_stcm_m.stcm002 = l_stce008
               LET g_stcm_m.stcm018 = l_stce017
               LET g_stcm_m.stcm019 = l_stce018
               LET g_stcm_m.stcm016 = l_stce021
               LET g_stcm_m.stcm017 = l_stce022
               LET g_stcm_m.stcm010 = l_stce024
               DISPLAY BY NAME g_stcm_m.stcm003,g_stcm_m.stcm004,g_stcm_m.stcm005,g_stcm_m.stcm006,
                               g_stcm_m.stcm007,g_stcm_m.stcm016,g_stcm_m.stcm017,g_stcm_m.stcm010,
                               g_stcm_m.stcm018,g_stcm_m.stcm019
                               
               LET l_stcw004 = ''
               SELECT stcw004 INTO l_stcw004
                 FROM stcw_t
                WHERE stcw001 = g_stcm_m.stcm001
                  AND stcw005 = 'N'
                ORDER BY stcwseq       
               DISPLAY l_stcw004 TO next_b   
               
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_stcm_m.stcm003
               CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
               LET g_stcm_m.stcm003_desc = '', g_rtn_fields[1] , ''
               DISPLAY BY NAME g_stcm_m.stcm003_desc
               
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_stcm_m.stcm004
               CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
               LET g_stcm_m.stcm004_desc = '', g_rtn_fields[1] , ''
               DISPLAY BY NAME g_stcm_m.stcm004_desc

               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_stcm_m.stcm006
               CALL ap_ref_array2(g_ref_fields,"SELECT staal003 FROM staal_t WHERE staalent='"||g_enterprise||"' AND staal001=? AND staal002='"||g_dlang||"'","") RETURNING g_rtn_fields
               LET g_stcm_m.stcm006_desc = '', g_rtn_fields[1] , ''
               DISPLAY BY NAME g_stcm_m.stcm006_desc
               
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_stcm_m.stcm007
               CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
               LET g_stcm_m.stcm007_desc = '', g_rtn_fields[1] , ''
               DISPLAY BY NAME g_stcm_m.stcm007_desc
               
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_stcm_m.stcm016
               CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
               LET g_stcm_m.stcm016_desc = '', g_rtn_fields[1] , ''
               DISPLAY BY NAME g_stcm_m.stcm016_desc
               
               SELECT ooef019 INTO l_ooef019
                 FROM ooef_t
                WHERE ooefent = g_enterprise
                  AND ooef001 = g_stcm_m.stcmsite                
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_stcm_m.stcm017
               CALL ap_ref_array2(g_ref_fields,"SELECT oodbl004 FROM oodbl_t WHERE oodblent='"||g_enterprise||"' AND oodbl001 = '"||l_ooef019||"' AND oodbl002=? AND oodbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
               LET g_stcm_m.stcm017_desc = '', g_rtn_fields[1] , ''
               DISPLAY BY NAME g_stcm_m.stcm017_desc
               
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_stcm_m.stcm010
               CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
               LET g_stcm_m.stcm010_desc = '', g_rtn_fields[1] , ''
               DISPLAY BY NAME g_stcm_m.stcm010_desc
            END IF
         END IF 
      END IF          
   END IF 
END FUNCTION]]>
  </point>
  <point name="function.astt602_stcmdocdt_chk" order="4" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL astt602_stcmdocdt_chk()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/06/20 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION astt602_stcmdocdt_chk()
   DEFINE l_n   LIKE type_t.num5
   
   LET g_errno = ''
   IF NOT cl_null(g_stcm_m.stcm001) THEN 
      LET l_n = 0
      SELECT COUNT(*) INTO l_n
        FROM stce_t
       WHERE stceent = g_enterprise
         AND stce001 = g_stcm_m.stcm001
         AND stce017 <= g_stcm_m.stcmdocdt
         AND stce018 >= g_stcm_m.stcmdocdt
         AND stcestus = 'Y'
      IF l_n = 0 THEN 
         LET g_errno = 'ast-00055'
      END IF 
   END IF 
END FUNCTION]]>
  </point>
  <point name="function.astt602_stcm008_chk" order="5" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 谈判人员检查
# Memo...........:
# Usage..........: astt602_stcm008_chk()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/06/20 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION astt602_stcm008_chk()
DEFINE l_ooag003   LIKE ooag_t.ooag003
DEFINE l_ooagstus  LIKE ooag_t.ooagstus

   LET g_errno = ''
   SELECT ooag003,ooagstus INTO l_ooag003,l_ooagstus
     FROM ooag_t
    WHERE ooagent = g_enterprise
      AND ooag001 = g_stcm_m.stcm008
   CASE 
      WHEN SQLCA.SQLCODE = 100 LET g_errno = 'aim-00069'
      WHEN l_ooagstus <> 'Y'   LET g_errno = 'ais-00018'
      OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
   END CASE
   IF cl_null(g_errno) THEN 
      LET g_stcm_m.stcm009 = l_ooag003
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_stcm_m.stcm009
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_stcm_m.stcm009_desc = '', g_rtn_fields[1] , ''
   ELSE
      LET g_stcm_m.stcm009 = ''  
      LET g_stcm_m.stcm009_desc = ''
   END IF
   DISPLAY BY NAME g_stcm_m.stcm009,g_stcm_m.stcm009_desc
END FUNCTION]]>
  </point>
  <point name="function.astt602_stcm009_chk" order="6" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 部门检查
# Memo...........:
# Usage..........: 
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/06/20 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION astt602_stcm009_chk()
DEFINE l_ooegstus  LIKE ooag_t.ooagstus
DEFINE l_n         LIKE type_t.num5

   LET g_errno = ''
   SELECT ooegstus INTO l_ooegstus
     FROM ooeg_t
    WHERE ooegent = g_enterprise
      AND ooeg001 = g_stcm_m.stcm009
   CASE 
      WHEN SQLCA.SQLCODE = 100 LET g_errno = 'art-00352'
      WHEN l_ooegstus <> 'Y'   LET g_errno = 'art-00353'
      OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
   END CASE
   IF cl_null(g_errno) THEN 
      IF NOT cl_null(g_stcm_m.stcm008) THEN
         LET l_n = 0      
         SELECT COUNT(*) INTO l_n
           FROM ooag_t
          WHERE ooagent = g_enterprise
            AND ooag001 = g_stcm_m.stcm008 
            AND ooag003 = g_stcm_m.stcm009
         IF l_n = 0 THEN 
            LET g_errno = 'ast-00058'
         END IF 
      END IF 
   END IF
END FUNCTION]]>
  </point>
  <point name="function.astt602_stcm016_chk" order="7" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 币别检查
# Memo...........:
# Usage..........: 无
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/06/20 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION astt602_stcm016_chk()
DEFINE l_ooajstus   LIKE ooaj_t.ooajstus

   LET g_errno = ''
   SELECT ooajstus INTO l_ooajstus
     FROM ooaj_t,ooef_t
    WHERE ooajent = ooefent
      AND ooaj001 = ooef014
      AND ooefent = g_enterprise
      AND ooef001 = g_stcm_m.stcmsite
      AND ooaj002 = g_stcm_m.stcm016
   CASE 
      WHEN SQLCA.SQLCODE = 100 LET g_errno = 'art-00237'
      WHEN l_ooajstus <> 'Y'   LET g_errno = 'art-00238'
      OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
   END CASE
END FUNCTION]]>
  </point>
  <point name="function.astt602_stcm017_chk" order="8" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 检查税种
# Memo...........:
# Usage..........: 无
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/06/20 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION astt602_stcm017_chk()
DEFINE l_oodbstus   LIKE oodb_t.oodbstus

   LET g_errno = ''
   SELECT oodbstus INTO l_oodbstus
     FROM oodb_t,ooef_t
    WHERE oodbent = g_enterprise
      AND ooef019 = oodb001
      AND ooefent = oodbent
      AND oodb002 = g_stcm_m.stcm017
      AND ooef001 = g_stcm_m.stcmsite
   CASE 
      WHEN SQLCA.SQLCODE = 100 LET g_errno = 'amm-00419'
      WHEN l_oodbstus <> 'Y'   LET g_errno = 'amm-00420'
      OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
   END CASE

END FUNCTION]]>
  </point>
  <point name="function.astt602_stcm012_chk" order="9" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 销售范围检查
# Memo...........:
# Usage..........: CALL astt602_stcm012_chk()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/06/20 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION astt602_stcm012_chk()
   DEFINE l_dbbcstus   LIKE dbbc_t.dbbcstus
   DEFINE l_dbbc003    LIKE dbbc_t.dbbc003
   DEFINE l_dbbc004    LIKE dbbc_t.dbbc004
   DEFINE l_dbbc005    LIKE dbbc_t.dbbc005
   DEFINE l_dbbc002    LIKE dbbc_t.dbbc002
   
   LET g_errno = ''
   IF NOT cl_null(g_stcm_m.stcm011) THEN 
      SELECT dbbcstus,dbbc003,dbbc004,dbbc005
        INTO l_dbbcstus,l_dbbc003,l_dbbc004,l_dbbc005
        FROM dbbc_t
       WHERE dbbcent = g_enterprise
         AND dbbc001 = g_stcm_m.stcm012
         AND dbbc002 = g_stcm_m.stcm011
      CASE 
         WHEN SQLCA.SQLCODE = 100 LET g_errno = 'ast-00061'
         WHEN l_dbbcstus <> 'Y'   LET g_errno = 'ast-00062'
         OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
      END CASE              
   ELSE
      SELECT dbbcstus,dbbc002,dbbc003,dbbc004,dbbc005
        INTO l_dbbcstus,l_dbbc002,l_dbbc003,l_dbbc004,l_dbbc005
        FROM dbbc_t
       WHERE dbbcent = g_enterprise
         AND dbbc001 = g_stcm_m.stcm012
      CASE 
         WHEN SQLCA.SQLCODE = 100 LET g_errno = 'ast-00059'
         WHEN l_dbbcstus <> 'Y'   LET g_errno = 'ast-00060'
         OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
      END CASE
   END IF 
   IF cl_null(g_errno) THEN 
      LET g_stcm_m.stcm013 = l_dbbc003
      LET g_stcm_m.stcm014 = l_dbbc004
      LET g_stcm_m.stcm015 = l_dbbc005
      IF cl_null(g_stcm_m.stcm011) THEN 
         LET g_stcm_m.stcm011 = l_dbbc002
      END IF 
      DISPLAY BY NAME g_stcm_m.stcm011,g_stcm_m.stcm013,g_stcm_m.stcm014,g_stcm_m.stcm015
      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_stcm_m.stcm011
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_stcm_m.stcm011_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_stcm_m.stcm011_desc
            
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_stcm_m.stcm013
      CALL ap_ref_array2(g_ref_fields,"SELECT oojdl003 FROM oojdl_t WHERE oojdlent='"||g_enterprise||"' AND oojdl001=? AND oojdl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_stcm_m.stcm013_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_stcm_m.stcm013_desc

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_stcm_m.stcm014
      CALL ap_ref_array2(g_ref_fields,"SELECT dbbal003 FROM dbbal_t WHERE dbbalent='"||g_enterprise||"' AND dbbal001=? AND dbbal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_stcm_m.stcm014_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_stcm_m.stcm014_desc

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_stcm_m.stcm015
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_stcm_m.stcm015_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_stcm_m.stcm015_desc
   END IF 
END FUNCTION]]>
  </point>
  <point name="function.astt602_stcm011_chk" order="10" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 销售组织检查
# Memo...........:
# Usage..........: astt602_stcm011_chk()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/06/20 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION astt602_stcm011_chk()
   DEFINE l_dbbcstus   LIKE dbbc_t.dbbcstus
   
   LET g_errno = ''
   IF NOT cl_null(g_stcm_m.stcm012) THEN 
      SELECT dbbcstus
        INTO l_dbbcstus
        FROM dbbc_t
       WHERE dbbcent = g_enterprise
         AND dbbc001 = g_stcm_m.stcm012
         AND dbbc002 = g_stcm_m.stcm011
      CASE 
         WHEN SQLCA.SQLCODE = 100 LET g_errno = 'ast-00061'
         WHEN l_dbbcstus <> 'Y'   LET g_errno = 'ast-00062'
         OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
      END CASE
   END IF 

END FUNCTION]]>
  </point>
  <point name="function.astt602_stcm018_stcm019_chk" order="11" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 开始结束日期检查
# Memo...........:
# Usage..........: astt602_stcm018_stcm019_chk()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/06/20 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION astt602_stcm018_stcm019_chk()
   DEFINE l_n   LIKE type_t.num5
   
   LET g_errno = ''
   IF NOT cl_null(g_stcm_m.stcm018) AND NOT cl_null(g_stcm_m.stcm019) THEN 
      IF g_stcm_m.stcm018 > g_stcm_m.stcm019 THEN 
         LET g_errno = 'ast-00063'
         RETURN 
      END IF 
      IF NOT cl_null(g_stcm_m.stcm001) THEN 
         #检查日期范围是否在合约日期范围内
         LET l_n = 0
         SELECT COUNT(*) INTO l_n
           FROM stce_t
          WHERE stce001 = g_stcm_m.stcm001
            AND stce017 <= g_stcm_m.stcm018
            AND stce018 >= g_stcm_m.stcm019
         IF l_n = 0 THEN 
            LET g_errno = 'ast-00096'
            RETURN 
         END IF 
      END IF       
      LET l_n = 0
      #检查单身日期是否都在单头日期范围内
      SELECT COUNT(*) INTO l_n
        FROM stcn_t
       WHERE stcnent = g_enterprise
         AND stcndocno = g_stcm_m.stcmdocno
         AND (stcn005 < g_stcm_m.stcm018 
          OR stcn005 > g_stcm_m.stcm019)
      IF l_n > 0 THEN 
         LET g_errno = 'ast-00064'
      END IF 
   END IF   
   IF NOT cl_null(g_stcm_m.stcm018) AND cl_null(g_stcm_m.stcm019) THEN  
      IF NOT cl_null(g_stcm_m.stcm001) THEN 
         #检查日期范围是否在合约日期范围内
         LET l_n = 0
         SELECT COUNT(*) INTO l_n
           FROM stce_t
          WHERE stce001 = g_stcm_m.stcm001
            AND stce017 <= g_stcm_m.stcm018
            AND stce018 >= g_stcm_m.stcm018
         IF l_n = 0 THEN 
            LET g_errno = 'ast-00096'
            RETURN 
         END IF 
      END IF      
      LET l_n = 0
      #检查单身日期是否都在单头日期范围内
      SELECT COUNT(*) INTO l_n
        FROM stcn_t
       WHERE stcnent = g_enterprise
         AND stcndocno = g_stcm_m.stcmdocno
         AND stcn005 < g_stcm_m.stcm018
      IF l_n > 0 THEN 
         LET g_errno = 'ast-00065'
      END IF 
   END IF
   IF NOT cl_null(g_stcm_m.stcm019) AND cl_null(g_stcm_m.stcm018) THEN  
      IF NOT cl_null(g_stcm_m.stcm001) THEN 
         #检查日期范围是否在合约日期范围内
         LET l_n = 0
         SELECT COUNT(*) INTO l_n
           FROM stce_t
          WHERE stce001 = g_stcm_m.stcm001
            AND stce017 <= g_stcm_m.stcm019
            AND stce018 >= g_stcm_m.stcm019
         IF l_n = 0 THEN 
            LET g_errno = 'ast-00096'
            RETURN 
         END IF 
      END IF  
      LET l_n = 0
      #检查单身日期是否都在单头日期范围内
      SELECT COUNT(*) INTO l_n
        FROM stcn_t
       WHERE stcnent = g_enterprise
         AND stcndocno = g_stcm_m.stcmdocno
         AND stcn005 > g_stcm_m.stcm019
      IF l_n > 0 THEN 
         LET g_errno = 'ast-00066'
      END IF 
   END IF   
END FUNCTION]]>
  </point>
  <point name="function.astt602_stcn001_chk" order="12" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 费用编号检查
# Memo...........:
# Usage..........: astt602_stcn001_chk()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/06/21 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION astt602_stcn001_chk()
   DEFINE l_staestus LIKE stae_t.staestus

   LET g_errno = ''
   SELECT staestus 
     INTO l_staestus 
     FROM stae_t
    WHERE stae001 = g_stcn_d[l_ac].stcn001 
      AND staeent = g_enterprise
   CASE 
      WHEN SQLCA.SQLCODE = 100 LET g_errno = 'ast-00001'
      WHEN l_staestus <> 'Y'   LET g_errno = 'ast-00002'
      OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
   END CASE     
END FUNCTION]]>
  </point>
  <point name="function.astt602_stcn005_chk" order="13" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 生效日期检查
# Memo...........:
# Usage..........: astt602_stcn005_chk()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/06/21 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION astt602_stcn005_chk()

   LET g_errno = ''
   IF g_stcn_d[l_ac].stcn005 > g_stcm_m.stcm019 
   OR g_stcn_d[l_ac].stcn005 < g_stcm_m.stcm018 THEN 
      LET g_errno = 'ast-00064'
   END IF 
   
END FUNCTION]]>
  </point>
  <point name="function.astt602_stco001_chk" order="14" ver="3" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 产品检查
# Memo...........:
# Usage..........: astt602_stco001_chk()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/06/21 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION astt602_stco001_chk()
   DEFINE l_imaastus   LIKE imaa_t.imaastus
   DEFINE l_n          LIKE type_t.num5
   DEFINE l_sql        STRING 
   DEFINE l_stcm004    LIKE stcm_t.stcm004
   
   LET g_errno = ''
   SELECT imaastus INTO l_imaastus
     FROM imaa_t
    WHERE imaa001 = g_stcn2_d[l_ac].stco001
      AND imaaent = g_enterprise
   CASE 
      WHEN SQLCA.SQLCODE = 100 LET g_errno = 'art-00016'
      WHEN l_imaastus <> 'Y'   LET g_errno = 'art-00126'
      OTHERWISE                LET g_errno = SQLCA.SQLCODE USING '-------'
   END CASE  
   IF cl_null(g_errno) THEN 
      LET l_n = 0
      #判断产品是否在合约销售范围内
      LET l_sql = " SELECT COUNT(*) ",
                  "   FROM imaa_t ",
                  "  WHERE imaaent = '",g_enterprise,"'",
                  "    AND imaa001 = '",g_stcn2_d[l_ac].stco001,"'",
                  "    AND imaa009 IN (SELECT DISTINCT rtax001 ",
                  "                      FROM rtax_t ",
                  "                     WHERE rtax005 = 0 ",
                  "                     START WITH rtax003 IN(SELECT stch002 FROM stch_t WHERE stch001 = '",g_stcm_m.stcm001,"') ",
                  "                    CONNECT BY nocycle PRIOR rtax001 = rtax003",
                  "                    UNION",
                  "                    SELECT rtax001",
                  "                      FROM rtax_t,stch_t",
                  "                     WHERE rtax001 = stch002",
                  "                       AND rtax005 = 0 ",
                  "                       AND stch001 = '",g_stcm_m.stcm001,"')"
      PREPARE sel_cn FROM l_sql
      EXECUTE sel_cn INTO l_n
      IF l_n = 0 THEN 
         LET g_errno = 'ast-00088'
      END IF 
   END IF 
   IF cl_null(g_errno) THEN 
      LET l_n = 0
      IF cl_null(g_stcm_m.stcm004) THEN 
         LET l_stcm004 = ' '
      ELSE
         LET l_stcm004 = g_stcm_m.stcm004
      END IF 
      #检查商品是否存在stcp_t结存档中
      SELECT COUNT(*) INTO l_n
        FROM stcp_t
       WHERE stcp005 = g_stcn2_d[l_ac].stco001
         AND stcpsite = g_stcm_m.stcmsite
         AND stcp001 = g_stcm_m.stcm002
         AND stcp002 = g_stcm_m.stcm003
         AND stcp003 = l_stcm004
         AND stcp004 = g_stcm_m.stcm005
         AND stcpent = g_enterprise
      IF l_n > 0 THEN 
         LET g_errno = 'ast-00068'
      END IF 
   END IF 
END FUNCTION]]>
  </point>
  <point name="function.astt602_stcn001_stcn005_chk" order="15" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 费用编号+生效日期检查
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt602_stcn001_stcn005_chk()
   DEFINE l_n   LIKE type_t.num5
   
   LET g_errno = ''
   LET l_n = 0
   SELECT COUNT(*) INTO l_n 
     FROM stcn_t
    WHERE stcnent = g_enterprise
      AND stcn001 = g_stcn_d[l_ac].stcn001
      AND stcn005 = g_stcn_d[l_ac].stcn005
      AND stcndocno = g_stcm_m.stcmdocno
   IF l_n > 0 THEN
      LET g_errno = 'ast-00070'
   END IF 
   
END FUNCTION]]>
  </point>
  <point name="function.astt602_stcm001_b" order="16" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 检查单身产品是否存在合约经营范围内
# Memo...........:
# Usage..........: CALL astt602_stcm001_b()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/06/24 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION astt602_stcm001_b()
   DEFINE l_n   LIKE type_t.num5
   DEFINE l_sql STRING 
   
   LET l_n = 0
   LET g_errno = ''
   SELECT COUNT(*) INTO l_n
     FROM stco_t
    WHERE stcodocno = g_stcm_m.stcmdocno
   IF l_n > 0 THEN 
      LET l_n = 0
      #判断产品是否在合约销售范围内
      LET l_sql = " SELECT COUNT(*) ",
                  "   FROM stch_t,stco_t,imaa_t ",
                  "  WHERE stchent = imaaent",
                  "    AND imaaent = stcoent",
                  "    AND stcoent = '",g_enterprise,"'",
                  "    AND imaa001 = stco001",
                  "    AND stcodocno = '",g_stcm_m.stcmdocno,"'",
                  "    AND imaa009 NOT IN (SELECT DISTINCT rtax001 ",
                  "                      FROM rtax_t,stch_t ",
                  "                     WHERE rtax005 = 0 ",
                  "                       AND stch001 = '",g_stcm_m.stcm001,"'",
                  "                     START WITH rtax003 = stch002 ",
                  "                    CONNECT BY nocycle PRIOR rtax001 = rtax003",
                  "                    UNION",
                  "                    SELECT rtax001",
                  "                      FROM rtax_t,stch_t",
                  "                     WHERE rtax001 = stch002",
                  "                       AND stch001 = '",g_stcm_m.stcm001,"')",
                  "    AND stch001 = '",g_stcm_m.stcm001,"'"
      PREPARE sel_cn1 FROM l_sql
      EXECUTE sel_cn1 INTO l_n
      IF l_n > 0 THEN 
         LET g_errno = 'ast-00088'
      END IF 
   END IF 
END FUNCTION]]>
  </point>
  <point name="function.astt602_stcm003_null_chk" order="17" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 经销商为空检查
# Memo...........:
# Usage..........: CALL astt603_stcm003_null_chk()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/06/25 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION astt602_stcm003_null_chk()
   DEFINE l_n   LIKE type_t.num5
   
   LET g_errno = ''
   IF NOT cl_null(g_stcm_m.stcm001) THEN
      LET l_n = 0
      #检查经销商是否存在合同中      
      SELECT COUNT(*) INTO l_n
        FROM stce_t         
       WHERE stceent = g_enterprise
         AND stce001 = g_stcm_m.stcm001
         AND stce009 IS NULL
      IF l_n = 0 THEN 
         LET g_errno = 'ast-00089'
      END IF
   END IF 
END FUNCTION]]>
  </point>
  <point name="function.astt602_stcm004_null_chk" order="18" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 网点编号为空检查
# Memo...........:
# Usage..........: CALL astt603_stcm004_null_chk()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/06/25 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION astt602_stcm004_null_chk()
   DEFINE l_n   LIKE type_t.num5
   DEFINE l_stce005    LIKE stce_t.stce005
   DEFINE l_stce006    LIKE stce_t.stce006
   DEFINE l_stce007    LIKE stce_t.stce007
   DEFINE l_stce008    LIKE stce_t.stce008
   DEFINE l_stce009    LIKE stce_t.stce009
   DEFINE l_stce001    LIKE stce_t.stce001
   DEFINE l_stce010    LIKE stce_t.stce010
   DEFINE l_stcw004    LIKE stcw_t.stcw004
   DEFINE l_stce017    LIKE stce_t.stce017
   DEFINE l_stce018    LIKE stce_t.stce018
   DEFINE l_stce021    LIKE stce_t.stce021
   DEFINE l_stce022    LIKE stce_t.stce022
   DEFINE l_stce024    LIKE stce_t.stce024
   DEFINE l_ooef019    LIKE ooef_t.ooef019
      
   LET g_errno = ''
   IF NOT cl_null(g_stcm_m.stcm001) THEN
      LET l_n = 0
      #检查经销商是否存在合同中      
      SELECT COUNT(*) INTO l_n
        FROM stce_t         
       WHERE stceent = g_enterprise
         AND stce001 = g_stcm_m.stcm001
         AND stce009 = g_stcm_m.stcm003
         AND stce010 IS NULL
      IF l_n = 0 THEN 
         LET g_errno = 'ast-00090'
      END IF
   ELSE
      IF NOT cl_null(g_stcm_m.stcm003) THEN 
          #带出符合条件的合约编号及其他栏位
          SELECT stce001,stce009,stce005,stce006,stce007,stce008,stce021,stce022,stce024,stce017,stce018
            INTO l_stce001,l_stce009,l_stce005,l_stce006,l_stce007,l_stce008,l_stce021,l_stce022,l_stce024,l_stce017,l_stce018
            FROM stce_t
           WHERE stceent = g_enterprise
             AND stce010 IS NULL
             AND stce009 = g_stcm_m.stcm003
             AND stce017 <= g_stcm_m.stcmdocdt
             AND stce018 >= g_stcm_m.stcmdocdt
             AND stcestus = 'Y'
          IF NOT cl_null(l_stce001) THEN    
             LET g_stcm_m.stcm001 = l_stce001
             LET g_stcm_m.stcm003 = l_stce009
             LET g_stcm_m.stcm005 = l_stce005
             LET g_stcm_m.stcm006 = l_stce006
             LET g_stcm_m.stcm007 = l_stce007
             LET g_stcm_m.stcm002 = l_stce008
             LET g_stcm_m.stcm018 = l_stce017
             LET g_stcm_m.stcm019 = l_stce018
             LET g_stcm_m.stcm016 = l_stce021
             LET g_stcm_m.stcm017 = l_stce022
             LET g_stcm_m.stcm010 = l_stce024
             DISPLAY BY NAME g_stcm_m.stcm003,g_stcm_m.stcm004,g_stcm_m.stcm005,g_stcm_m.stcm006,
                             g_stcm_m.stcm007,g_stcm_m.stcm016,g_stcm_m.stcm017,g_stcm_m.stcm010,
                             g_stcm_m.stcm018,g_stcm_m.stcm019
                             
             LET l_stcw004 = ''
             SELECT stcw004 INTO l_stcw004
               FROM stcw_t
              WHERE stcw001 = g_stcm_m.stcm001
                AND stcw005 = 'N'
              ORDER BY stcwseq       
             DISPLAY l_stcw004 TO next_b   
             
             INITIALIZE g_ref_fields TO NULL
             LET g_ref_fields[1] = g_stcm_m.stcm003
             CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
             LET g_stcm_m.stcm003_desc = '', g_rtn_fields[1] , ''
             DISPLAY BY NAME g_stcm_m.stcm003_desc
             
             INITIALIZE g_ref_fields TO NULL
             LET g_ref_fields[1] = g_stcm_m.stcm004
             CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
             LET g_stcm_m.stcm004_desc = '', g_rtn_fields[1] , ''
             DISPLAY BY NAME g_stcm_m.stcm004_desc

             INITIALIZE g_ref_fields TO NULL
             LET g_ref_fields[1] = g_stcm_m.stcm006
             CALL ap_ref_array2(g_ref_fields,"SELECT staal003 FROM staal_t WHERE staalent='"||g_enterprise||"' AND staal001=? AND staal002='"||g_dlang||"'","") RETURNING g_rtn_fields
             LET g_stcm_m.stcm006_desc = '', g_rtn_fields[1] , ''
             DISPLAY BY NAME g_stcm_m.stcm006_desc
             
             INITIALIZE g_ref_fields TO NULL
             LET g_ref_fields[1] = g_stcm_m.stcm007
             CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
             LET g_stcm_m.stcm007_desc = '', g_rtn_fields[1] , ''
             DISPLAY BY NAME g_stcm_m.stcm007_desc
             
             INITIALIZE g_ref_fields TO NULL
             LET g_ref_fields[1] = g_stcm_m.stcm016
             CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
             LET g_stcm_m.stcm016_desc = '', g_rtn_fields[1] , ''
             DISPLAY BY NAME g_stcm_m.stcm016_desc
             
             SELECT ooef019 INTO l_ooef019
               FROM ooef_t
              WHERE ooefent = g_enterprise
                AND ooef001 = g_stcm_m.stcmsite                
             INITIALIZE g_ref_fields TO NULL
             LET g_ref_fields[1] = g_stcm_m.stcm017
             CALL ap_ref_array2(g_ref_fields,"SELECT oodbl004 FROM oodbl_t WHERE oodblent='"||g_enterprise||"' AND oodbl001 = '"||l_ooef019||"' AND oodbl002=? AND oodbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
             LET g_stcm_m.stcm017_desc = '', g_rtn_fields[1] , ''
             DISPLAY BY NAME g_stcm_m.stcm017_desc
             
             INITIALIZE g_ref_fields TO NULL
             LET g_ref_fields[1] = g_stcm_m.stcm010
             CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
             LET g_stcm_m.stcm010_desc = '', g_rtn_fields[1] , ''
             DISPLAY BY NAME g_stcm_m.stcm010_desc
          END IF
      END IF 
   END IF 
END FUNCTION]]>
  </point>
  <point name="browser_fill.define" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_ooef019         LIKE ooef_t.ooef019]]>
  </point>
  <point name="browser_fill.open" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="browser_fill.reference" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      SELECT ooef019 INTO l_ooef019
        FROM ooef_t
       WHERE ooefent = g_enterprise
         AND ooef001 = g_browser[g_cnt].b_stcmsite
      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_browser[g_cnt].b_stcm017
      CALL ap_ref_array2(g_ref_fields,"SELECT oodbl004 FROM oodbl_t WHERE oodblent='"||g_enterprise||"' AND oodbl001 = '"||l_ooef019||"' AND oodbl002=? AND oodbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_browser[g_cnt].b_b_oodbl004 = '', g_rtn_fields[1] , '']]>
  </point>
  <point name="construct.c.page1.stcn001" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_stae001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stcn001  #顯示到畫面上
            NEXT FIELD stcn001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.stco001" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stco001  #顯示到畫面上
            NEXT FIELD stco001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stcm001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ###  ### start ###
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = "1=1"
            CALL q_stce001_2()
            DISPLAY g_qryparam.return1 TO stcm001
            ###  ### end ###
]]>
  </point>
  <point name="construct.c.stcm003" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_21()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stcm003  #顯示到畫面上
            NEXT FIELD stcm003                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stcm004" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_18()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stcm004  #顯示到畫面上
            NEXT FIELD stcm004                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stcm006" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_staa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stcm006  #顯示到畫面上
            NEXT FIELD stcm006                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stcm007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '281'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stcm007  #顯示到畫面上
            NEXT FIELD stcm007                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stcm008" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stcm008  #顯示到畫面上
            NEXT FIELD stcm008                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stcm009" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stcm009  #顯示到畫面上
            NEXT FIELD stcm009                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stcm010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 ='A' 
            CALL q_ooef001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stcm010  #顯示到畫面上
            NEXT FIELD stcm010                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stcm011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "F"
            CALL q_ooef001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stcm011  #顯示到畫面上
            NEXT FIELD stcm011                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stcm012" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dbbc001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stcm012  #顯示到畫面上
            NEXT FIELD stcm012                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stcm013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '1'
            CALL q_oojd001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stcm013  #顯示到畫面上
            NEXT FIELD stcm013                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stcm014" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dbba001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stcm014  #顯示到畫面上
            NEXT FIELD stcm014                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stcm015" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "G"
            CALL q_ooef001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stcm015  #顯示到畫面上
            NEXT FIELD stcm015                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stcm016" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_aooi001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stcm016  #顯示到畫面上
            NEXT FIELD stcm016                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stcm017" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmab084()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stcm017  #顯示到畫面上
            NEXT FIELD stcm017                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stcmcnfid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stcmcnfid  #顯示到畫面上
            NEXT FIELD stcmcnfid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stcmcrtdp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stcmcrtdp  #顯示到畫面上
            NEXT FIELD stcmcrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stcmcrtid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stcmcrtid  #顯示到畫面上
            NEXT FIELD stcmcrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stcmdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ###  ### start ###
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = "1=1"
            CALL q_stcmdocno()
            DISPLAY g_qryparam.return1 TO stcmdocno
            ###  ### end ###
]]>
  </point>
  <point name="construct.c.stcmmodid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stcmmodid  #顯示到畫面上
            NEXT FIELD stcmmodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stcmowndp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stcmowndp  #顯示到畫面上
            NEXT FIELD stcmowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stcmownid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stcmownid  #顯示到畫面上
            NEXT FIELD stcmownid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stcmsite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '2'
            CALL q_ooef001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stcmsite  #顯示到畫面上
            NEXT FIELD stcmsite                     #返回原欄位
    

]]>
  </point>
  <point name="fetch.action_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_act_visible("modify,delete,insert,modify_detail", TRUE)
   IF g_stcm_m.stcmstus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF
   IF NOT cl_bpm_chk() THEN    #此單據不需提交至BPM，則隱藏按鈕 
       CALL cl_set_act_visible("bpm_status",FALSE)
   END IF]]>
  </point>
  <point name="filter.cs_ctrl" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         DISPLAY '' TO s_browse[1].b_stcmsite_desc 
         DISPLAY '' TO s_browse[1].b_stcm003_desc
         DISPLAY '' TO s_browse[1].b_stcm004_desc
         DISPLAY '' TO s_browse[1].b_stcm006_desc
         DISPLAY '' TO s_browse[1].b_stcm007_desc
         DISPLAY '' TO s_browse[1].b_stcm008_desc
         DISPLAY '' TO s_browse[1].b_stcm009_desc
         DISPLAY '' TO s_browse[1].b_stcm010_desc
         DISPLAY '' TO s_browse[1].b_stcm011_desc
         DISPLAY '' TO s_browse[1].b_stcm012_desc
         DISPLAY '' TO s_browse[1].b_stcm013_desc
         DISPLAY '' TO s_browse[1].b_stcm014_desc
         DISPLAY '' TO s_browse[1].b_stcm015_desc
         DISPLAY '' TO s_browse[1].b_stcm016_desc
         DISPLAY '' TO s_browse[1].b_stcm017_desc
         
         
         ON ACTION controlp INFIELD b_stcmsite
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '2'
            CALL q_ooef001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_stcmsite  #顯示到畫面上
            NEXT FIELD b_stcmsite      


         ON ACTION controlp INFIELD b_stcmdocno
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = "1=1"
            CALL q_stcmdocno()
            DISPLAY g_qryparam.return1 TO b_stcmdocno

         ON ACTION controlp INFIELD b_stcm001
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = "1=1"
            CALL q_stce001_2()
            DISPLAY g_qryparam.return1 TO b_stcm001

         ON ACTION controlp INFIELD b_stcm003
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_21()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_stcm003  #顯示到畫面上
            NEXT FIELD b_stcm003      

         ON ACTION controlp INFIELD b_stcm004
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_18()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_stcm004  #顯示到畫面上
            NEXT FIELD b_stcm004  

         ON ACTION controlp INFIELD b_stcm006
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_staa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_stcm006  #顯示到畫面上
            NEXT FIELD b_stcm006                     #返回原欄位

         ON ACTION controlp INFIELD b_stcm007
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '281'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_stcm007  #顯示到畫面上
            NEXT FIELD b_stcm007    

         ON ACTION controlp INFIELD b_stcm008
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_stcm008  #顯示到畫面上
            NEXT FIELD b_stcm008                     #返回原欄位

         ON ACTION controlp INFIELD b_stcm009
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_stcm009  #顯示到畫面上
            NEXT FIELD b_stcm009                     #返回原欄位

         ON ACTION controlp INFIELD b_stcm016
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_aooi001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_stcm016  #顯示到畫面上
            NEXT FIELD b_stcm016                     #返回原欄位

         ON ACTION controlp INFIELD b_stcm017
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmab084()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_stcm017  #顯示到畫面上
            NEXT FIELD b_stcm017                     #返回原欄位

         ON ACTION controlp INFIELD b_stcm010
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 ='A' 
            CALL q_ooef001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_stcm010  #顯示到畫面上
            NEXT FIELD b_stcm010                     #返回原欄位

         ON ACTION controlp INFIELD b_stcm011
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "2"
            CALL q_ooef001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_stcm011  #顯示到畫面上
            NEXT FIELD b_stcm011                     #返回原欄位

         ON ACTION controlp INFIELD b_stcm012
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dbbc001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_stcm012  #顯示到畫面上
            NEXT FIELD b_stcm012                     #返回原欄位	

         ON ACTION controlp INFIELD b_stcm013
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '1'
            CALL q_oojd001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_stcm013  #顯示到畫面上
            NEXT FIELD b_stcm013                     #返回原欄位

         ON ACTION controlp INFIELD b_stcm014
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_dbba001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_stcm014  #顯示到畫面上
            NEXT FIELD b_stcm014                     #返回原欄位

         ON ACTION controlp INFIELD b_stcm015
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "G"
            CALL q_ooef001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO b_stcm015  #顯示到畫面上
            NEXT FIELD b_stcm015                     #返回原欄位]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_combo_scc_part('b_stcm005','6013','11,12,13')
   CALL cl_set_combo_scc_part('stcm005','6013','11,12,13')]]>
  </point>
  <point name="input.a.page1.stcn001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_stcn_d[l_ac].stcn001) THEN 
               CALL astt602_stcn001_chk()
               IF NOT cl_null(g_errno) THEN 
                  CALL cl_err('',g_errno,1)
                  LET g_stcn_d[l_ac].stcn001 = g_stcn_d_t.stcn001
                  NEXT FIELD stcn001
               END IF 
               IF NOT cl_null(g_stcn_d[l_ac].stcn005) THEN 
                  IF l_cmd = 'a' OR ( l_cmd = 'u' AND g_stcn_d[l_ac].stcn001 != g_stcn_d_t.stcn001) THEN 
                     CALL astt602_stcn001_stcn005_chk()
                     IF NOT cl_null(g_errno) THEN 
                        CALL cl_err('',g_errno,1)
                        LET g_stcn_d[l_ac].stcn001 = g_stcn_d_t.stcn001
                        NEXT FIELD stcn001
                     END IF 
                  END IF 
               END IF 
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stcn_d[l_ac].stcn001
            CALL ap_ref_array2(g_ref_fields,"SELECT stael003 FROM stael_t WHERE staelent='"||g_enterprise||"' AND stael001=? AND stael002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stcn_d[l_ac].stcn001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stcn_d[l_ac].stcn001_desc

]]>
  </point>
  <point name="input.a.page1.stcn002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.a.page1.stcn005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_stcn_d[l_ac].stcn005) THEN 
               CALL astt602_stcn005_chk()
               IF NOT cl_null(g_errno) THEN 
                  CALL cl_err('',g_errno,1)
                  LET g_stcn_d[l_ac].stcn005 = g_stcn_d_t.stcn005
                  NEXT FIELD stcn005
               END IF 
               IF NOT cl_null(g_stcn_d[l_ac].stcn001) THEN 
                  IF l_cmd = 'a' OR ( l_cmd = 'u' AND g_stcn_d[l_ac].stcn005 != g_stcn_d_t.stcn005) THEN 
                     CALL astt602_stcn001_stcn005_chk()
                     IF NOT cl_null(g_errno) THEN 
                        CALL cl_err('',g_errno,1)
                        LET g_stcn_d[l_ac].stcn005 = g_stcn_d_t.stcn005
                        NEXT FIELD stcn005
                     END IF
                  END IF                      
               END IF  
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND g_stcn_d[l_ac].stcn005 != g_stcn_d_t.stcn005) THEN 
                  IF cl_null(g_stcn_d[l_ac].stcn007) THEN 
                     LET g_stcn_d[l_ac].stcn007 = g_stcn_d[l_ac].stcn005
                  END IF 
               END IF 
            END IF ]]>
  </point>
  <point name="input.a.page1.stcn006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_stcn_d[l_ac].stcn006) THEN 
               IF g_stcn_d[l_ac].stcn006 < 0 THEN 
                  CALL cl_err('','ast-00067',1)
                  LET g_stcn_d[l_ac].stcn006 = g_stcn_d_t.stcn006
                  NEXT FIELD stcn006
               END IF 
            END IF ]]>
  </point>
  <point name="input.a.page1.stcnseq" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_stcm_m.stcmdocno IS NOT NULL AND g_stcn_d[g_detail_idx].stcnseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stcm_m.stcmdocno != g_stcmdocno_t OR g_stcn_d[g_detail_idx].stcnseq != g_stcn_d_t.stcnseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stcn_t WHERE "||"stcnent = '" ||g_enterprise|| "' AND "||"stcndocno = '"||g_stcm_m.stcmdocno ||"' AND "|| "stcnseq = '"||g_stcn_d[g_detail_idx].stcnseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.stco001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_stcn2_d[l_ac].stco001) THEN 
               CALL astt602_stco001_chk()
               IF NOT cl_null(g_errno) THEN 
                  CALL cl_err('',g_errno,1)
                  LET g_stcn2_d[l_ac].stco001 = g_stcn2_d_t.stco001
                  NEXT FIELD stco001
               END IF 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND g_stcn2_d[l_ac].stco001 != g_stcn2_d_t.stco001) THEN 
                  LET l_n = 0
                  SELECT COUNT(*) INTO l_n 
                    FROM stco_t
                   WHERE stcoent = g_enterprise
                     AND stcodocno = g_stcm_m.stcmdocno
                     AND stco001 = g_stcn2_d[l_ac].stco001
                  IF l_n > 0 THEN 
                     CALL cl_err('','ast-00069',1)
                     LET g_stcn2_d[l_ac].stco001 = g_stcn2_d_t.stco001
                     NEXT FIELD stco001
                  END IF 
               END IF                
            END IF 

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stcn2_d[l_ac].stco001
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stcn2_d[l_ac].stco001_desc = '', g_rtn_fields[1] , ''
            LET g_stcn2_d[l_ac].stco001_desc_desc = '', g_rtn_fields[2] , ''
            DISPLAY BY NAME g_stcn2_d[l_ac].stco001_desc,g_stcn2_d[l_ac].stco001_desc_desc

]]>
  </point>
  <point name="input.a.page2.stcoseq" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_stcm_m.stcmdocno IS NOT NULL AND g_stcn2_d[g_detail_idx].stcoseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stcm_m.stcmdocno != g_stcmdocno_t OR g_stcn2_d[g_detail_idx].stcoseq != g_stcn2_d_t.stcoseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stco_t WHERE "||"stcoent = '" ||g_enterprise|| "' AND "||"stcodocno = '"||g_stcm_m.stcmdocno ||"' AND "|| "stcoseq = '"||g_stcn2_d[g_detail_idx].stcoseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.stcm001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_stcm_m.stcm001) THEN 
               CALL astt602_stcm001_chk()
               IF NOT cl_null(g_errno) THEN 
                  LET g_stcm_m.stcm001 = g_stcm_m_t.stcm001
                  CALL cl_err('',g_errno,1)
                  NEXT FIELD stcm001
               END IF 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND  g_stcm_m.stcm001 != g_stcm_m_t.stcm001) THEN 
                   CALL astt602_stcm001_b()
                   IF NOT cl_null(g_errno) THEN 
                      LET g_stcm_m.stcm001 = g_stcm_m_t.stcm001
                      CALL cl_err('',g_errno,1)
                      NEXT FIELD stcm001
                   END IF 
               END IF
               LET l_stcw004 = ''
               SELECT stcw004 INTO l_stcw004
                 FROM stcw_t
                WHERE stcw001 = g_stcm_m.stcm001
                  AND stcw005 = 'N'
                ORDER BY stcwseq       
               DISPLAY l_stcw004 TO next_b           
            ELSE
               DISPLAY '' TO next_b          
            END IF ]]>
  </point>
  <point name="input.a.stcm003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_stcm_m.stcm003) THEN
               CALL astt602_stcm003_chk()
               IF NOT cl_null(g_errno) THEN 
                  CALL cl_err('',g_errno,1)
                  LET g_stcm_m.stcm003 = g_stcm_m_t.stcm003
                  NEXT FIELD stcm003
               END IF 
            ELSE
               CALL astt602_stcm003_null_chk()
               IF NOT cl_null(g_errno) THEN 
                  CALL cl_err('',g_errno,1)
                  SELECT stce009 INTO g_stcm_m.stcm003
                    FROM stce_t
                   WHERE stce001 = g_stcm_m.stcm001
                  DISPLAY BY NAME g_stcm_m.stcm003
                  NEXT FIELD stcm003
               END IF   
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stcm_m.stcm003
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stcm_m.stcm003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stcm_m.stcm003_desc

]]>
  </point>
  <point name="input.a.stcm004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_stcm_m.stcm004) THEN
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = '1'
               LET g_chkparam.arg1 = g_stcm_m.stcm004
               IF NOT cl_chk_exist("v_pmaa001_14") THEN
                  LET g_stcm_m.stcm004 = g_stcm_m_t.stcm004
                  NEXT FIELD stcm004
               END IF
               CALL astt602_stcm004_chk()
               IF NOT cl_null(g_errno) THEN 
                  CALL cl_err('',g_errno,1)
                  LET g_stcm_m.stcm004 = g_stcm_m_t.stcm004
                  NEXT FIELD stcm004
               END IF
            ELSE
               CALL astt602_stcm004_null_chk()
               IF NOT cl_null(g_errno) THEN 
                  CALL cl_err('',g_errno,1)
                  SELECT stce010 INTO g_stcm_m.stcm004
                    FROM stce_t
                   WHERE stce001 = g_stcm_m.stcm001
                  DISPLAY BY NAME g_stcm_m.stcm004
                  NEXT FIELD stcm004
               END IF    
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stcm_m.stcm004
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stcm_m.stcm004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stcm_m.stcm004_desc]]>
  </point>
  <point name="input.a.stcm006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stcm_m.stcm006
            CALL ap_ref_array2(g_ref_fields,"SELECT staal003 FROM staal_t WHERE staalent='"||g_enterprise||"' AND staal001=? AND staal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stcm_m.stcm006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stcm_m.stcm006_desc

]]>
  </point>
  <point name="input.a.stcm007" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stcm_m.stcm007
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stcm_m.stcm007_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stcm_m.stcm007_desc

]]>
  </point>
  <point name="input.a.stcm008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_stcm_m.stcm008) THEN 
               CALL astt602_stcm008_chk()
               IF NOT cl_null(g_errno) THEN 
                  CALL cl_err('',g_errno,1)
                  LET g_stcm_m.stcm008 = g_stcm_m_t.stcm008
                  NEXT FIELD stcm008
               END IF 
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stcm_m.stcm008
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_stcm_m.stcm008_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stcm_m.stcm008_desc

]]>
  </point>
  <point name="input.a.stcm009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_stcm_m.stcm009) THEN 
               CALL astt602_stcm009_chk()
               IF NOT cl_null(g_errno) THEN 
                  CALL cl_err('',g_errno,1)
                  LET g_stcm_m.stcm009 = g_stcm_m_t.stcm009
                  NEXT FIELD stcm009
               END IF 
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stcm_m.stcm009
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stcm_m.stcm009_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stcm_m.stcm009_desc]]>
  </point>
  <point name="input.a.stcm010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_stcm_m.stcm010) THEN 
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = '1'
               LET g_chkparam.arg1 = g_stcm_m.stcm010
               LET g_chkparam.arg2 = 'A'
               IF NOT cl_chk_exist("v_ooef001_2") THEN
                  LET g_stcm_m.stcm010 = g_stcm_m_t.stcm010
                  NEXT FIELD stcm010
               END IF 
            END IF
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stcm_m.stcm010
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stcm_m.stcm010_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stcm_m.stcm010_desc

]]>
  </point>
  <point name="input.a.stcm011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_stcm_m.stcm011) THEN 
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = '1'
               LET g_chkparam.arg1 = g_stcm_m.stcm011
               LET g_chkparam.arg2 = '2'
               IF NOT cl_chk_exist("v_ooef001_3") THEN
                  LET g_stcm_m.stcm011 = g_stcm_m_t.stcm011
                  NEXT FIELD stcm011
               END IF
               CALL astt602_stcm011_chk()
               IF NOT cl_null(g_errno) THEN 
                  CALL cl_err('',g_errno,1)
                  LET g_stcm_m.stcm011 = g_stcm_m_t.stcm011
                  NEXT FIELD stcm011
               END IF 
            END IF
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stcm_m.stcm011
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stcm_m.stcm011_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stcm_m.stcm011_desc

]]>
  </point>
  <point name="input.a.stcm012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_stcm_m.stcm012) THEN 
               CALL astt602_stcm012_chk()
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err('',g_errno,1)               
                  LET g_stcm_m.stcm012 = g_stcm_m_t.stcm012
                  NEXT FIELD stcm012
               END IF 
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stcm_m.stcm012
            CALL ap_ref_array2(g_ref_fields,"SELECT dbbcl003 FROM dbbcl_t WHERE dbbclent='"||g_enterprise||"' AND dbbcl001=? AND dbbcl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stcm_m.stcm012_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stcm_m.stcm012_desc

]]>
  </point>
  <point name="input.a.stcm013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stcm_m.stcm013
            CALL ap_ref_array2(g_ref_fields,"SELECT oojdl003 FROM oojdl_t WHERE oojdlent='"||g_enterprise||"' AND oojdl001=? AND oojdl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stcm_m.stcm013_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stcm_m.stcm013_desc

]]>
  </point>
  <point name="input.a.stcm014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stcm_m.stcm014
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stcm_m.stcm014_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stcm_m.stcm014_desc

]]>
  </point>
  <point name="input.a.stcm015" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stcm_m.stcm015
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stcm_m.stcm015_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stcm_m.stcm015_desc

]]>
  </point>
  <point name="input.a.stcm016" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_stcm_m.stcm016) THEN 
               CALL astt602_stcm016_chk()
               IF NOT cl_null(g_errno) THEN 
                  CALL cl_err('',g_errno,1)
                  LET g_stcm_m.stcm016 = g_stcm_m_t.stcm016
                  NEXT FIELD stcm016
               END IF 
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stcm_m.stcm016
            CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stcm_m.stcm016_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stcm_m.stcm016_desc

]]>
  </point>
  <point name="input.a.stcm017" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_stcm_m.stcm017) THEN 
               CALL astt602_stcm017_chk()
               IF NOT cl_null(g_errno) THEN 
                  CALL cl_err('',g_errno,1)
                  LET g_stcm_m.stcm017 = g_stcm_m_t.stcm017
                  NEXT FIELD stcm017
               END IF 
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stcm_m.stcm017
            CALL ap_ref_array2(g_ref_fields,"SELECT oodbl004 FROM oodbl_t WHERE oodblent='"||g_enterprise||"' AND oodbl001 = '"||l_ooef019||"' AND oodbl002=? AND oodbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stcm_m.stcm017_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stcm_m.stcm017_desc

]]>
  </point>
  <point name="input.a.stcm018" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_stcm_m.stcm018) THEN 
               CALL astt602_stcm018_stcm019_chk()
               IF NOT cl_null(g_errno) THEN 
                  CALL cl_err('',g_errno,1)
                  LET g_stcm_m.stcm018 = g_stcm_m_t.stcm018
                  NEXT FIELD stcm018
               END IF
            END IF ]]>
  </point>
  <point name="input.a.stcm019" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_stcm_m.stcm019) THEN 
               CALL astt602_stcm018_stcm019_chk()
               IF NOT cl_null(g_errno) THEN 
                  CALL cl_err('',g_errno,1)
                  LET g_stcm_m.stcm019 = g_stcm_m_t.stcm019
                  NEXT FIELD stcm019
               END IF
            END IF ]]>
  </point>
  <point name="input.a.stcmdocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_stcm_m.stcmdocdt) THEN 
               CALL astt602_stcmdocdt_chk()
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err('',g_errno,1)
                  LET g_stcm_m.stcmdocdt = g_stcm_m_t.stcmdocdt
                  NEXT FIELD stcmdocdt
               END IF 
            END IF ]]>
  </point>
  <point name="input.a.stcmdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_stcm_m.stcmdocno) THEN 
                LET l_ooef004 = ""
                SELECT ooef004 INTO l_ooef004
                  FROM ooef_t
                 WHERE ooef001 = g_stcm_m.stcmsite
                   AND ooefent = g_enterprise
               CALL s_aooi200_chk_slip(g_stcm_m.stcmsite,l_ooef004,g_stcm_m.stcmdocno,g_prog) RETURNING l_success
               IF NOT l_success THEN
                  LET g_stcm_m.stcmdocno = g_stcmdocno_t
                  NEXT FIELD CURRENT
               END IF
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_stcm_m.stcmdocno != g_stcmdocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stcm_t WHERE "||"stcment = '" ||g_enterprise|| "' AND "||"stcmdocno = '"||g_stcm_m.stcmdocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
  </point>
  <point name="input.a.stcmsite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stcm_m.stcmsite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stcm_m.stcmsite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stcm_m.stcmsite_desc

]]>
  </point>
  <point name="input.b.stcm003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.b.stcm004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.b.stcm018" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_stcm_m_t.stcm018 = g_stcm_m.stcm018]]>
  </point>
  <point name="input.b.stcm019" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_stcm_m_t.stcm019 = g_stcm_m.stcm019]]>
  </point>
  <point name="input.before_input" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DISPLAY BY NAME g_stcm_m.stcmsite,g_stcm_m.stcmownid,g_stcm_m.stcmowndp,g_stcm_m.stcmcrtid,g_stcm_m.stcmcrtdp,
                   g_stcm_m.stcmcrtdt,g_stcm_m.stcmmodid,g_stcm_m.stcmmoddt,g_stcm_m.stcmstus,g_stcm_m.stcmcnfid,
                   g_stcm_m.stcmcnfdt
   
   SELECT ooef019 INTO l_ooef019
     FROM ooef_t
    WHERE ooefent = g_enterprise
      AND ooef001 = g_stcm_m.stcmsite

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stcm_m.stcm008
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_stcm_m.stcm008_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stcm_m.stcm008_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stcm_m.stcm009
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_stcm_m.stcm009_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stcm_m.stcm009_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stcm_m.stcm017
   CALL ap_ref_array2(g_ref_fields,"SELECT oodbl004 FROM oodbl_t WHERE oodblent='"||g_enterprise||"' AND oodbl001 = '"||l_ooef019||"' AND oodbl002=? AND oodbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_stcm_m.stcm017_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stcm_m.stcm017_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stcm_m.stcmsite
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_stcm_m.stcmsite_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stcm_m.stcmsite_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stcm_m.stcmownid
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_stcm_m.stcmownid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stcm_m.stcmownid_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stcm_m.stcmowndp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_stcm_m.stcmowndp_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stcm_m.stcmowndp_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stcm_m.stcmcrtid
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_stcm_m.stcmcrtid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stcm_m.stcmcrtid_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stcm_m.stcmcrtdp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_stcm_m.stcmcrtdp_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stcm_m.stcmcrtdp_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stcm_m.stcmmodid
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_stcm_m.stcmmodid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stcm_m.stcmmodid_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stcm_m.stcmcnfid
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_stcm_m.stcmcnfid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stcm_m.stcmcnfid_desc
   ]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            SELECT MAX(stcnseq)+1 INTO g_stcn_d[l_ac].stcnseq
              FROM stcn_t
             WHERE stcnent = g_enterprise
               AND stcndocno = g_stcm_m.stcmdocno
            IF cl_null(g_stcn_d[l_ac].stcnseq) THEN 
               LET g_stcn_d[l_ac].stcnseq = 1
            END IF 
            LET g_stcn_d[l_ac].stcn002 = g_stcm_m.stcm016
            LET g_stcn_d[l_ac].stcn003 = g_stcm_m.stcm017
            LET g_stcn_d[l_ac].stcn008 = g_stcm_m.stcm002
            LET g_stcn_d[l_ac].stcn009 = g_stcm_m.stcm003
            LET g_stcn_d[l_ac].stcn010 = g_stcm_m.stcm004
            LET g_stcn_d[l_ac].stcn011 = g_stcm_m.stcm005
            LET g_stcn_d[l_ac].stcn012 = g_stcm_m.stcm007
            LET g_stcn_d[l_ac].stcn013 = g_stcm_m.stcm006
            LET g_stcn_d[l_ac].stcn014 = g_stcm_m.stcm011
            LET g_stcn_d[l_ac].stcn015 = g_stcm_m.stcm012
            LET g_stcn_d[l_ac].stcn016 = g_stcm_m.stcm013
            LET g_stcn_d[l_ac].stcn017 = g_stcm_m.stcm014
            LET g_stcn_d[l_ac].stcn018 = g_stcm_m.stcm015
            LET g_stcn_d[l_ac].stcnunit = g_stcm_m.stcmunit
            LET g_stcn_d[l_ac].stcnsite = g_stcm_m.stcmsite]]>
  </point>
  <point name="input.body.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stcn_d[l_ac].stcn001
            CALL ap_ref_array2(g_ref_fields,"SELECT stael003 FROM stael_t WHERE staelent='"||g_enterprise||"' AND stael001=? AND stael002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stcn_d[l_ac].stcn001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stcn_d[l_ac].stcn001_desc]]>
  </point>
  <point name="input.body.insert.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body2.after_row2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET l_n = 0
            SELECT COUNT(*) INTO l_n
              FROM stco_t
             WHERE stcoent = g_enterprise
               AND stcodocno = g_stcm_m.stcmdocno
            DISPLAY l_n TO num]]>
  </point>
  <point name="input.body2.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body2.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            SELECT MAX(stcoseq)+1 INTO g_stcn2_d[l_ac].stcoseq
              FROM stco_t
             WHERE stcoent = g_enterprise
               AND stcodocno = g_stcm_m.stcmdocno
            IF cl_null(g_stcn2_d[l_ac].stcoseq) THEN 
               LET g_stcn2_d[l_ac].stcoseq = 1
            END IF
            LET g_stcn2_d[l_ac].stcounit = g_stcm_m.stcmunit
            LET g_stcn2_d[l_ac].stcosite = g_stcm_m.stcmsite]]>
  </point>
  <point name="input.body2.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stcn2_d[l_ac].stco001
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stcn2_d[l_ac].stco001_desc = '', g_rtn_fields[1] , ''
            LET g_stcn2_d[l_ac].stco001_desc_desc = '', g_rtn_fields[2] , ''
            DISPLAY BY NAME g_stcn2_d[l_ac].stco001_desc,g_stcn2_d[l_ac].stco001_desc_desc]]>
  </point>
  <point name="input.c.page1.stcn001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stcn_d[l_ac].stcn001             #給予default值
            LET g_qryparam.default2 = "" #g_stcn_d[l_ac].stael004 #助記碼
            LET g_qryparam.default3 = "" #g_stcn_d[l_ac].stael003 #說明
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_stae001()                                #呼叫開窗

            LET g_stcn_d[l_ac].stcn001 = g_qryparam.return1              
            LET g_stcn_d[l_ac].stcn001_desc = g_qryparam.return2 
            DISPLAY g_stcn_d[l_ac].stcn001 TO stcn001          
            DISPLAY g_stcn_d[l_ac].stcn001_desc TO stcn001_desc #說明
            NEXT FIELD stcn001                           #返回原欄位

]]>
  </point>
  <point name="input.c.page2.stco001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stcn2_d[l_ac].stco001
            #給予arg
            LET g_qryparam.arg1 = "" #
            CALL q_imaa001()
            LET g_stcn2_d[l_ac].stco001 = g_qryparam.return1              
            LET g_stcn2_d[l_ac].stco001_desc = g_qryparam.return2 
            LET g_stcn2_d[l_ac].stco001_desc_desc = g_qryparam.return3 
            DISPLAY g_stcn2_d[l_ac].stco001 TO stco001              #
            DISPLAY g_stcn2_d[l_ac].stco001_desc TO stco001_desc #品名
            DISPLAY g_stcn2_d[l_ac].stco001_desc_desc TO stco001_desc_desc #規格
            NEXT FIELD stco001                          #返回原欄位

]]>
  </point>
  <point name="input.c.stcm001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ###  ### start ###
            INITIALIZE g_qryparam.* TO NULL 
            LET g_qryparam.state = "i"
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = ""
            IF NOT cl_null(g_stcm_m.stcmdocdt) THEN 
               LET g_qryparam.where = " stce017 <= '",g_stcm_m.stcmdocdt,"' AND stce018 >= '",g_stcm_m.stcmdocdt,"'"
            END IF 
            CALL q_stce001_2()
            LET g_stcm_m.stcm001 = g_qryparam.return1
            IF NOT cl_null(g_stcm_m.stcm001) THEN 
               LET g_stcm_m.stcm003 = g_qryparam.return2
               LET g_stcm_m.stcm004 = g_qryparam.return3
               LET g_stcm_m.stcm005 = g_qryparam.return4
               LET g_stcm_m.stcm006 = g_qryparam.return5
               LET g_stcm_m.stcm007 = g_qryparam.return6
               LET g_stcm_m.stcm002 = g_qryparam.return7
            END IF 
            DISPLAY BY NAME g_stcm_m.stcm001,g_stcm_m.stcm003,g_stcm_m.stcm004,g_stcm_m.stcm005,
                            g_stcm_m.stcm006,g_stcm_m.stcm007
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stcm_m.stcm003
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stcm_m.stcm003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stcm_m.stcm003_desc
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stcm_m.stcm004
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stcm_m.stcm004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stcm_m.stcm004_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stcm_m.stcm006
            CALL ap_ref_array2(g_ref_fields,"SELECT staal003 FROM staal_t WHERE staalent='"||g_enterprise||"' AND staal001=? AND staal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stcm_m.stcm006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stcm_m.stcm006_desc
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stcm_m.stcm007
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stcm_m.stcm007_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stcm_m.stcm007_desc
            ###  ### end ###
]]>
  </point>
  <point name="input.c.stcm003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stcm_m.stcm003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_pmaa001_21()                                #呼叫開窗

            LET g_stcm_m.stcm003 = g_qryparam.return1              

            DISPLAY g_stcm_m.stcm003 TO stcm003              #
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stcm_m.stcm003
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stcm_m.stcm003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stcm_m.stcm003_desc
            NEXT FIELD stcm003                          #返回原欄位

]]>
  </point>
  <point name="input.c.stcm004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stcm_m.stcm004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_pmaa001_18()                                #呼叫開窗

            LET g_stcm_m.stcm004 = g_qryparam.return1              

            DISPLAY g_stcm_m.stcm004 TO stcm004              #

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stcm_m.stcm004
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stcm_m.stcm004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stcm_m.stcm004_desc
            NEXT FIELD stcm004                          #返回原欄位

]]>
  </point>
  <point name="input.c.stcm006" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stcm_m.stcm006             #給予default值
            LET g_qryparam.default2 = "" #g_stcm_m.staa001 #結算方式編號
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_staa001()                                #呼叫開窗

            LET g_stcm_m.stcm006 = g_qryparam.return1              
            #LET g_stcm_m.staa001 = g_qryparam.return2 
            DISPLAY g_stcm_m.stcm006 TO stcm006              #
            #DISPLAY g_stcm_m.staa001 TO staa001 #結算方式編號
            NEXT FIELD stcm006                          #返回原欄位

]]>
  </point>
  <point name="input.c.stcm007" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stcm_m.stcm007             #給予default值
            LET g_qryparam.default2 = "" #g_stcm_m.oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_stcm_m.stcm007 = g_qryparam.return1              
            #LET g_stcm_m.oocq002 = g_qryparam.return2 
            DISPLAY g_stcm_m.stcm007 TO stcm007              #
            #DISPLAY g_stcm_m.oocq002 TO oocq002 #應用分類碼
            NEXT FIELD stcm007                          #返回原欄位

]]>
  </point>
  <point name="input.c.stcm008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_stcm_m.stcm008             #給予default值
            #給予arg
            LET g_qryparam.arg1 = "" #
            CALL q_ooag001()                                #呼叫開窗
            LET g_stcm_m.stcm008 = g_qryparam.return1              
            DISPLAY g_stcm_m.stcm008 TO stcm008              #
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stcm_m.stcm008
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_stcm_m.stcm008_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stcm_m.stcm008_desc
            NEXT FIELD stcm008                          #返回原欄位

]]>
  </point>
  <point name="input.c.stcm009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stcm_m.stcm009             #給予default值
            LET g_qryparam.default2 = "" #g_stcm_m.ooeg001 #部門編號
            #給予arg
            LET g_qryparam.arg1 = g_today #
            CALL q_ooeg001()                                #呼叫開窗
            LET g_stcm_m.stcm009 = g_qryparam.return1              
            LET g_stcm_m.stcm009_desc = g_qryparam.return2
            DISPLAY g_stcm_m.stcm009 TO stcm009           
            DISPLAY g_stcm_m.stcm009_desc TO stcm009_desc 
            NEXT FIELD stcm009                          #返回原欄位

]]>
  </point>
  <point name="input.c.stcm010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stcm_m.stcm010             #給予default值
            LET g_qryparam.default2 = "" #g_stcm_m.ooefl003 #說明(簡稱)
            #給予arg
            LET g_qryparam.arg1 = "A" #
            CALL q_ooef001_3()                                #呼叫開窗
            LET g_stcm_m.stcm010 = g_qryparam.return1
            DISPLAY g_stcm_m.stcm010 TO stcm010              
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stcm_m.stcm010
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stcm_m.stcm010_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stcm_m.stcm010_desc

            NEXT FIELD stcm010                          #返回原欄位

]]>
  </point>
  <point name="input.c.stcm011" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stcm_m.stcm011             #給予default值
            LET g_qryparam.default2 = "" #g_stcm_m.ooefl003 #說明(簡稱)
            #給予arg
            LET g_qryparam.arg1 = "2" #
            CALL q_ooef001_4()                                #呼叫開窗
            LET g_stcm_m.stcm011 = g_qryparam.return1
            DISPLAY g_stcm_m.stcm011 TO stcm011              #
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stcm_m.stcm011
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stcm_m.stcm011_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stcm_m.stcm011_desc

            NEXT FIELD stcm011                          #返回原欄位

]]>
  </point>
  <point name="input.c.stcm012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stcm_m.stcm012             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #
            IF NOT cl_null(g_stcm_m.stcm011) THEN 
               LET g_qryparam.where = " dbbc002 = '",g_stcm_m.stcm011,"'"
            END IF
            CALL q_dbbc001()                                #呼叫開窗
            LET g_stcm_m.stcm012 = g_qryparam.return1              
            DISPLAY g_stcm_m.stcm012 TO stcm012              #
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stcm_m.stcm012
            CALL ap_ref_array2(g_ref_fields,"SELECT dbbcl003 FROM dbbcl_t WHERE dbbclent='"||g_enterprise||"' AND dbbcl001=? AND dbbcl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stcm_m.stcm012_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stcm_m.stcm012_desc
            NEXT FIELD stcm012                          #返回原欄位

]]>
  </point>
  <point name="input.c.stcm013" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stcm_m.stcm013             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_oojd001()                                #呼叫開窗

            LET g_stcm_m.stcm013 = g_qryparam.return1              

            DISPLAY g_stcm_m.stcm013 TO stcm013              #

            NEXT FIELD stcm013                          #返回原欄位

]]>
  </point>
  <point name="input.c.stcm014" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stcm_m.stcm014             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_dbba001()                                #呼叫開窗

            LET g_stcm_m.stcm014 = g_qryparam.return1              

            DISPLAY g_stcm_m.stcm014 TO stcm014              #

            NEXT FIELD stcm014                          #返回原欄位

]]>
  </point>
  <point name="input.c.stcm015" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stcm_m.stcm015             #給予default值
            LET g_qryparam.default2 = "" #g_stcm_m.ooefl003 #說明(簡稱)
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooef001_3()                                #呼叫開窗

            LET g_stcm_m.stcm015 = g_qryparam.return1              
            #LET g_stcm_m.ooefl003 = g_qryparam.return2 
            DISPLAY g_stcm_m.stcm015 TO stcm015              #
            #DISPLAY g_stcm_m.ooefl003 TO ooefl003 #說明(簡稱)
            NEXT FIELD stcm015                          #返回原欄位

]]>
  </point>
  <point name="input.c.stcm016" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_stcm_m.stcm016             #給予default值
            #給予arg
            LET g_qryparam.arg1 = g_site
            CALL q_ooaj002_1()                                #呼叫開窗
            LET g_stcm_m.stcm016 = g_qryparam.return1
            DISPLAY g_stcm_m.stcm016 TO stcm016              #
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stcm_m.stcm016
            CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stcm_m.stcm016_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stcm_m.stcm016_desc            
            NEXT FIELD stcm016                          #返回原欄位

]]>
  </point>
  <point name="input.c.stcm017" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_stcm_m.stcm017             #給予default值
            #給予arg
            LET g_qryparam.arg1 = g_stcm_m.stcmsite
            CALL q_oodb002_1()
            LET g_stcm_m.stcm017 = g_qryparam.return1    
            DISPLAY g_stcm_m.stcm017 TO stcm017
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stcm_m.stcm017
            CALL ap_ref_array2(g_ref_fields,"SELECT oodbl004 FROM oodbl_t WHERE oodblent='"||g_enterprise||"' AND oodbl001 = '"||l_ooef019||"' AND oodbl002=? AND oodbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stcm_m.stcm017_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stcm_m.stcm017_desc
            NEXT FIELD stcm017                          #返回原欄位

]]>
  </point>
  <point name="input.c.stcmdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
		   	LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_stcm_m.stcmdocno             #給予default值
            LET l_ooef004 = ""
            SELECT ooef004 INTO l_ooef004
              FROM ooef_t
             WHERE ooef001 = g_stcm_m.stcmsite
               AND ooefent = g_enterprise
            #給予arg
            LET g_qryparam.arg1 = l_ooef004 #
            LET g_qryparam.arg2 = g_prog #
            CALL q_ooba002_1()                            #呼叫開窗
            LET g_stcm_m.stcmdocno = g_qryparam.return1   #將開窗取得的值回傳到變數
            DISPLAY g_stcm_m.stcmdocno TO stcmdocno       #顯示到畫面上
            NEXT FIELD stcmdocno                          #返回原欄位]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_ooef004              LIKE ooef_t.ooef004
   DEFINE l_success              LIKE type_t.num5
   DEFINE l_ooef019              LIKE ooef_t.ooef019
   DEFINE l_stcw004 LIKE stcw_t.stcw004]]>
  </point>
  <point name="input.g.stcm001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.head.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL s_aooi200_gen_docno(g_stcm_m.stcmsite,g_stcm_m.stcmdocno,g_stcm_m.stcmdocdt,g_prog) RETURNING l_success,g_stcm_m.stcmdocno
               IF NOT l_success THEN
                  CALL cl_err(g_stcm_m.stcmdocno,'apm-00003',1)
                  NEXT FIELD stcmdocno
               END IF]]>
  </point>
  <point name="input.m.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      LET g_stcm_m.stcmsite = g_site
      LET g_stcm_m.stcmunit = g_site
      LET g_stcm_m.stcmdocdt = g_today
      LET g_stcm_m.stcm008 = g_user
      SELECT ooag003 INTO g_stcm_m.stcm009
        FROM ooag_t 
       WHERE ooagent = g_enterprise
         AND ooag001 = g_user 
      INITIALIZE g_stcm_m_t.* TO NULL
      LET g_stcm_m_t.* = g_stcm_m.*]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="3" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_stcm_m.stcmdocdt = g_today
   LET g_stcm_m.stcmcnfid = ""
   LET g_stcm_m.stcmcnfdt = ""
   LET g_stcm_m.stcmsite = g_site
   LET g_stcm_m.stcmunit = g_site
   LET g_stcm_m.stcm008 = g_user
   SELECT ooag003 INTO g_stcm_m.stcm009
     FROM ooag_t 
    WHERE ooagent = g_enterprise
      AND ooag001 = g_user    ]]>
  </point>
  <point name="show.body.reference" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="show.body2.reference" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="show.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_ooef019 LIKE ooef_t.ooef019
   DEFINE l_n       LIKE type_t.num5
   DEFINE l_stcw004 LIKE stcw_t.stcw004]]>
  </point>
  <point name="show.head.reference" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
   SELECT ooef019 INTO l_ooef019
     FROM ooef_t
    WHERE ooefent = g_enterprise
      AND ooef001 = g_stcm_m.stcmsite

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stcm_m.stcm017
   CALL ap_ref_array2(g_ref_fields,"SELECT oodbl004 FROM oodbl_t WHERE oodblent='"||g_enterprise||"' AND oodbl001 = '"||l_ooef019||"' AND oodbl002=? AND oodbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_stcm_m.stcm017_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stcm_m.stcm017_desc
     ]]>
  </point>
  <point name="show.other" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET l_n = 0
   SELECT COUNT(*) INTO l_n
     FROM stco_t
    WHERE stcoent = g_enterprise
      AND stcodocno = g_stcm_m.stcmdocno
   DISPLAY l_n TO num
   LET l_stcw004 = ''
   SELECT stcw004 INTO l_stcw004
     FROM stcw_t
    WHERE stcw001 = g_stcm_m.stcm001
      AND stcw005 = 'N'
    ORDER BY stcwseq       
   DISPLAY l_stcw004 TO next_b     ]]>
  </point>
  <point name="statechange.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_act_visible("modify,delete,insert,modify_detail", TRUE)
   IF g_stcm_m.stcmstus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF]]>
  </point>
  <point name="statechange.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="statechange.before_menu" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL cl_set_act_visible("open,invalid,valid,approved,withdraw,rejection,signing",TRUE)
      CASE g_stcm_m.stcmstus
         WHEN "N"
            CALL cl_set_act_visible("open,approved,withdraw,rejection,signing",FALSE)
            IF cl_bpm_chk() THEN
                CALL cl_set_act_visible("signing",TRUE)
            END IF
         WHEN "X"
            #HIDE OPTION "invalid"
            CALL cl_set_act_visible("void,valid,approved,withdraw,rejection,signing",FALSE)
      
         WHEN "Y"
            #HIDE OPTION "confirmed"
            CALL cl_set_act_visible("void,valid,approved,withdraw,rejection,signing",FALSE)
      END CASE]]>
  </point>
  <point name="statechange.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_success LIKE type_t.num5]]>
  </point>
  <point name="statechange.open" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         IF NOT cl_ask_confirm('ast-00076') THEN
            RETURN
         END IF 
         CALL s_astt602_unconf_chk(g_stcm_m.stcmdocno,'N') RETURNING l_success,g_errno
         IF l_success THEN 
            CALL s_transaction_begin()
            CALL s_astt602_unconf_upd(g_stcm_m.stcmdocno,'N') RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            CALL s_transaction_end('Y','0')
         ELSE
            CALL cl_err(g_stcm_m.stcmdocno,g_errno,1)
            RETURN 
         END IF ]]>
  </point>
  <point name="statechange.valid" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         IF NOT cl_ask_confirm('aim-00108') THEN
            RETURN
         END IF 
         CALL s_astt602_conf_chk(g_stcm_m.stcmdocno,'Y') RETURNING l_success,g_errno
         IF l_success THEN 
            CALL s_transaction_begin()
            CALL s_astt602_conf_upd(g_stcm_m.stcmdocno,'Y') RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            CALL s_transaction_end('Y','0')
         ELSE
            CALL cl_err(g_stcm_m.stcmdocno,g_errno,1)
            RETURN 
         END IF ]]>
  </point>
  <point name="statechange.void" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         IF NOT cl_ask_confirm('art-00039') THEN
            RETURN
         END IF
         CALL s_transaction_begin()
         CALL s_astt602_unconf_upd(g_stcm_m.stcmdocno,'X') RETURNING l_success
         IF NOT l_success THEN
            CALL s_transaction_end('N','0')
            RETURN
         END IF
         CALL s_transaction_end('Y','0')]]>
  </point>
  <section id="astt602.b_fill" ver="3" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION astt602_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_stcn_d.clear()    #g_stcn_d 單頭及單身 
   CALL g_stcn2_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF astt602_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE stcnseq,stcn001,stcn002,stcn003,stcn004,stcn005,stcn006,stcn007,stcn008, 
          stcn009,stcn010,stcn011,stcn012,stcn013,stcn014,stcn015,stcn016,stcn017,stcn018,stcn019,stcnsite, 
          stcnunit ,t1.stael003 FROM stcn_t",   
                  " INNER JOIN stcm_t ON stcmdocno = stcndocno ",
 
                  #"",
                  
                  "",
                                 " LEFT JOIN stael_t t1 ON t1.staelent='"||g_enterprise||"' AND t1.stael001=stcn001 AND t1.stael002='"||g_dlang||"' ",
 
                  " WHERE stcnent=? AND stcndocno=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY stcn_t.stcnseq"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE astt602_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR astt602_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_stcm_m.stcmdocno
                                               
      FOREACH b_fill_cs INTO g_stcn_d[l_ac].stcnseq,g_stcn_d[l_ac].stcn001,g_stcn_d[l_ac].stcn002,g_stcn_d[l_ac].stcn003, 
          g_stcn_d[l_ac].stcn004,g_stcn_d[l_ac].stcn005,g_stcn_d[l_ac].stcn006,g_stcn_d[l_ac].stcn007, 
          g_stcn_d[l_ac].stcn008,g_stcn_d[l_ac].stcn009,g_stcn_d[l_ac].stcn010,g_stcn_d[l_ac].stcn011, 
          g_stcn_d[l_ac].stcn012,g_stcn_d[l_ac].stcn013,g_stcn_d[l_ac].stcn014,g_stcn_d[l_ac].stcn015, 
          g_stcn_d[l_ac].stcn016,g_stcn_d[l_ac].stcn017,g_stcn_d[l_ac].stcn018,g_stcn_d[l_ac].stcn019, 
          g_stcn_d[l_ac].stcnsite,g_stcn_d[l_ac].stcnunit,g_stcn_d[l_ac].stcn001_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
   #判斷是否填充
   IF astt602_fill_chk(2) THEN
      LET g_sql = "SELECT  UNIQUE stcoseq,stco001,stco002,stcosite,stcounit ,t2.imaal003 ,t3.imaal004 FROM stco_t", 
             
                  " INNER JOIN stcm_t ON stcmdocno = stcodocno ",
 
                  "",
                  
                                 " LEFT JOIN imaal_t t2 ON t2.imaalent='"||g_enterprise||"' AND t2.imaal001=stco001 AND t2.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t3 ON t3.imaalent='"||g_enterprise||"' AND t3.imaal001=stco001 AND t3.imaal002='"||g_dlang||"' ",
 
                  " WHERE stcoent=? AND stcodocno=?"   
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body2.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table2) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY stco_t.stcoseq"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql2"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE astt602_pb2 FROM g_sql
      DECLARE b_fill_cs2 CURSOR FOR astt602_pb2
      
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_stcm_m.stcmdocno
                                               
      FOREACH b_fill_cs2 INTO g_stcn2_d[l_ac].stcoseq,g_stcn2_d[l_ac].stco001,g_stcn2_d[l_ac].stco002, 
          g_stcn2_d[l_ac].stcosite,g_stcn2_d[l_ac].stcounit,g_stcn2_d[l_ac].stco001_desc,g_stcn2_d[l_ac].stco001_desc_desc 

         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_stcn_d.deleteElement(g_stcn_d.getLength())
   CALL g_stcn2_d.deleteElement(g_stcn2_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE astt602_pb
   FREE astt602_pb2
 
 
   
END FUNCTION
]]>
  </section>
  <section id="astt602.b_fill2" ver="2" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION astt602_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL astt602_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="astt602.browser_fill" ver="14" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION astt602_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_stcm_m.* TO NULL
   CALL g_stcn_d.clear()        
   CALL g_stcn2_d.clear() 
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "stcmdocno"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE stcmdocno ",
                      " FROM stcm_t ",
                      " ",
                      " LEFT JOIN stcn_t ON stcnent = stcment AND stcmdocno = stcndocno ",
                      " LEFT JOIN stco_t ON stcoent = stcment AND stcmdocno = stcodocno", 
 
 
 
                      " ", 
                      " ", 
                      " WHERE stcment = '" ||g_enterprise|| "' AND stcnent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("stcm_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE stcmdocno ",
                      " FROM stcm_t ", 
                      "  ",
                      "  ",
                      " WHERE stcment = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("stcm_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照stcmdocno,stcmdocdt,stcmsite,'',stcm001,stcm003,'',stcm004,'',stcm005,stcm006,'',stcm007,'',stcm008,'',stcm009,'',stcm010,'',stcm011,'',stcm012,'',stcm013,'',stcm014,'',stcm015,'',stcm016,'',stcm017,'',stcm018,stcm019,stcmunit Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT stcmstus,stcmdocno,stcmdocdt,stcmsite,'',stcm001,stcm003,'',stcm004, 
       '',stcm005,stcm006,'',stcm007,'',stcm008,'',stcm009,'',stcm010,'',stcm011,'',stcm012,'',stcm013, 
       '',stcm014,'',stcm015,'',stcm016,'',stcm017,'',stcm018,stcm019,stcmunit,t1.ooefl003 ,t2.pmaal004 , 
       t3.pmaal004 ,t4.staal003 ,t5.oocql004 ,t6.oofa011 ,t7.ooefl003 ,t8.ooefl003 ,t9.ooefl003 ,t10.dbbcl003 , 
       t11.oojdl003 ,t12.dbbal003 ,t13.ooefl003 ,t14.ooail003 ",
               " FROM stcm_t ",
               "  ",
               "  LEFT JOIN stcn_t ON stcnent = stcment AND stcmdocno = stcndocno ",
               "  LEFT JOIN stco_t ON stcoent = stcment AND stcmdocno = stcodocno",
 
 
 
               "  ",
               "  ",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=stcmsite AND t1.ooefl002='"||g_lang||"' ",
               " LEFT JOIN pmaal_t t2 ON t2.pmaalent='"||g_enterprise||"' AND t2.pmaal001=stcm003 AND t2.pmaal002='"||g_lang||"' ",
               " LEFT JOIN pmaal_t t3 ON t3.pmaalent='"||g_enterprise||"' AND t3.pmaal001=stcm004 AND t3.pmaal002='"||g_lang||"' ",
               " LEFT JOIN staal_t t4 ON t4.staalent='"||g_enterprise||"' AND t4.staal001=stcm006 AND t4.staal002='"||g_lang||"' ",
               " LEFT JOIN oocql_t t5 ON t5.oocqlent='"||g_enterprise||"' AND t5.oocql001='2060' AND t5.oocql002=stcm007 AND t5.oocql003='"||g_lang||"' ",
               " LEFT JOIN oofa_t t6 ON t6.oofaent='"||g_enterprise||"' AND t6.oofa002='2' AND t6.oofa003=stcm008  ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent='"||g_enterprise||"' AND t7.ooefl001=stcm009 AND t7.ooefl002='"||g_lang||"' ",
               " LEFT JOIN ooefl_t t8 ON t8.ooeflent='"||g_enterprise||"' AND t8.ooefl001=stcm010 AND t8.ooefl002='"||g_lang||"' ",
               " LEFT JOIN ooefl_t t9 ON t9.ooeflent='"||g_enterprise||"' AND t9.ooefl001=stcm011 AND t9.ooefl002='"||g_lang||"' ",
               " LEFT JOIN dbbcl_t t10 ON t10.dbbclent='"||g_enterprise||"' AND t10.dbbcl001=stcm012 AND t10.dbbcl002='"||g_lang||"' ",
               " LEFT JOIN oojdl_t t11 ON t11.oojdlent='"||g_enterprise||"' AND t11.oojdl001=stcm013 AND t11.oojdl002='"||g_lang||"' ",
               " LEFT JOIN dbbal_t t12 ON t12.dbbalent='"||g_enterprise||"' AND t12.dbbal001=stcm014 AND t12.dbbal002='"||g_lang||"' ",
               " LEFT JOIN ooefl_t t13 ON t13.ooeflent='"||g_enterprise||"' AND t13.ooefl001=stcm015 AND t13.ooefl002='"||g_lang||"' ",
               " LEFT JOIN ooail_t t14 ON t14.ooailent='"||g_enterprise||"' AND t14.ooail001=stcm016 AND t14.ooail002='"||g_lang||"' ",
 
               " WHERE stcment = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("stcm_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_stcmdocno,g_browser[g_cnt].b_stcmdocdt, 
       g_browser[g_cnt].b_stcmsite,g_browser[g_cnt].b_stcmsite_desc,g_browser[g_cnt].b_stcm001,g_browser[g_cnt].b_stcm003, 
       g_browser[g_cnt].b_stcm003_desc,g_browser[g_cnt].b_stcm004,g_browser[g_cnt].b_stcm004_desc,g_browser[g_cnt].b_stcm005, 
       g_browser[g_cnt].b_stcm006,g_browser[g_cnt].b_stcm006_desc,g_browser[g_cnt].b_stcm007,g_browser[g_cnt].b_stcm007_desc, 
       g_browser[g_cnt].b_stcm008,g_browser[g_cnt].b_stcm008_desc,g_browser[g_cnt].b_stcm009,g_browser[g_cnt].b_stcm009_desc, 
       g_browser[g_cnt].b_stcm010,g_browser[g_cnt].b_stcm010_desc,g_browser[g_cnt].b_stcm011,g_browser[g_cnt].b_stcm011_desc, 
       g_browser[g_cnt].b_stcm012,g_browser[g_cnt].b_stcm012_desc,g_browser[g_cnt].b_stcm013,g_browser[g_cnt].b_stcm013_desc, 
       g_browser[g_cnt].b_stcm014,g_browser[g_cnt].b_stcm014_desc,g_browser[g_cnt].b_stcm015,g_browser[g_cnt].b_stcm015_desc, 
       g_browser[g_cnt].b_stcm016,g_browser[g_cnt].b_stcm016_desc,g_browser[g_cnt].b_stcm017,g_browser[g_cnt].b_b_oodbl004, 
       g_browser[g_cnt].b_stcm018,g_browser[g_cnt].b_stcm019,g_browser[g_cnt].b_stcmunit,g_browser[g_cnt].b_stcmsite_desc, 
       g_browser[g_cnt].b_stcm003_desc,g_browser[g_cnt].b_stcm004_desc,g_browser[g_cnt].b_stcm006_desc, 
       g_browser[g_cnt].b_stcm007_desc,g_browser[g_cnt].b_stcm008_desc,g_browser[g_cnt].b_stcm009_desc, 
       g_browser[g_cnt].b_stcm010_desc,g_browser[g_cnt].b_stcm011_desc,g_browser[g_cnt].b_stcm012_desc, 
       g_browser[g_cnt].b_stcm013_desc,g_browser[g_cnt].b_stcm014_desc,g_browser[g_cnt].b_stcm015_desc, 
       g_browser[g_cnt].b_stcm016_desc
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/open.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/void.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/valid.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="astt602.browser_search" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION astt602_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY stcmdocno"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL astt602_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="astt602.construct" ver="5" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION astt602_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_stcm_m.* TO NULL
   CALL g_stcn_d.clear()        
   CALL g_stcn2_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON stcmsite,stcmdocdt,stcmdocno,stcmunit,stcm001,stcm003,stcm004,stcm002, 
          stcm005,stcm006,stcm007,stcmstus,stcm008,stcm009,stcm016,stcm017,stcm010,stcm011,stcm012,stcm018, 
          stcm013,stcm014,stcm015,stcm019,stcmownid,stcmowndp,stcmcrtid,stcmcrtdp,stcmcrtdt,stcmmodid, 
          stcmmoddt,stcmcnfid,stcmcnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<stcmcrtdt>>----
         AFTER FIELD stcmcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<stcmmoddt>>----
         AFTER FIELD stcmmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<stcmcnfdt>>----
         AFTER FIELD stcmcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<stcmpstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.stcmsite
         ON ACTION controlp INFIELD stcmsite
            #add-point:ON ACTION controlp INFIELD stcmsite
            {<point name="construct.c.stcmsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcmsite
            #add-point:BEFORE FIELD stcmsite
            {<point name="construct.b.stcmsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcmsite
            
            #add-point:AFTER FIELD stcmsite
            {<point name="construct.a.stcmsite" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcmdocdt
            #add-point:BEFORE FIELD stcmdocdt
            {<point name="construct.b.stcmdocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcmdocdt
            
            #add-point:AFTER FIELD stcmdocdt
            {<point name="construct.a.stcmdocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stcmdocdt
         ON ACTION controlp INFIELD stcmdocdt
            #add-point:ON ACTION controlp INFIELD stcmdocdt
            {<point name="construct.c.stcmdocdt" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcmdocno
            #add-point:BEFORE FIELD stcmdocno
            {<point name="construct.b.stcmdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcmdocno
            
            #add-point:AFTER FIELD stcmdocno
            {<point name="construct.a.stcmdocno" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stcmdocno
         ON ACTION controlp INFIELD stcmdocno
            #add-point:ON ACTION controlp INFIELD stcmdocno
            {<point name="construct.c.stcmdocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcmunit
            #add-point:BEFORE FIELD stcmunit
            {<point name="construct.b.stcmunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcmunit
            
            #add-point:AFTER FIELD stcmunit
            {<point name="construct.a.stcmunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stcmunit
         ON ACTION controlp INFIELD stcmunit
            #add-point:ON ACTION controlp INFIELD stcmunit
            {<point name="construct.c.stcmunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcm001
            #add-point:BEFORE FIELD stcm001
            {<point name="construct.b.stcm001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcm001
            
            #add-point:AFTER FIELD stcm001
            {<point name="construct.a.stcm001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stcm001
         ON ACTION controlp INFIELD stcm001
            #add-point:ON ACTION controlp INFIELD stcm001
            {<point name="construct.c.stcm001" />}
            #END add-point
 
         #Ctrlp:construct.c.stcm003
         ON ACTION controlp INFIELD stcm003
            #add-point:ON ACTION controlp INFIELD stcm003
            {<point name="construct.c.stcm003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcm003
            #add-point:BEFORE FIELD stcm003
            {<point name="construct.b.stcm003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcm003
            
            #add-point:AFTER FIELD stcm003
            {<point name="construct.a.stcm003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stcm004
         ON ACTION controlp INFIELD stcm004
            #add-point:ON ACTION controlp INFIELD stcm004
            {<point name="construct.c.stcm004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcm004
            #add-point:BEFORE FIELD stcm004
            {<point name="construct.b.stcm004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcm004
            
            #add-point:AFTER FIELD stcm004
            {<point name="construct.a.stcm004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcm002
            #add-point:BEFORE FIELD stcm002
            {<point name="construct.b.stcm002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcm002
            
            #add-point:AFTER FIELD stcm002
            {<point name="construct.a.stcm002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stcm002
         ON ACTION controlp INFIELD stcm002
            #add-point:ON ACTION controlp INFIELD stcm002
            {<point name="construct.c.stcm002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcm005
            #add-point:BEFORE FIELD stcm005
            {<point name="construct.b.stcm005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcm005
            
            #add-point:AFTER FIELD stcm005
            {<point name="construct.a.stcm005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stcm005
         ON ACTION controlp INFIELD stcm005
            #add-point:ON ACTION controlp INFIELD stcm005
            {<point name="construct.c.stcm005" />}
            #END add-point
 
         #Ctrlp:construct.c.stcm006
         ON ACTION controlp INFIELD stcm006
            #add-point:ON ACTION controlp INFIELD stcm006
            {<point name="construct.c.stcm006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcm006
            #add-point:BEFORE FIELD stcm006
            {<point name="construct.b.stcm006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcm006
            
            #add-point:AFTER FIELD stcm006
            {<point name="construct.a.stcm006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stcm007
         ON ACTION controlp INFIELD stcm007
            #add-point:ON ACTION controlp INFIELD stcm007
            {<point name="construct.c.stcm007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcm007
            #add-point:BEFORE FIELD stcm007
            {<point name="construct.b.stcm007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcm007
            
            #add-point:AFTER FIELD stcm007
            {<point name="construct.a.stcm007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcmstus
            #add-point:BEFORE FIELD stcmstus
            {<point name="construct.b.stcmstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcmstus
            
            #add-point:AFTER FIELD stcmstus
            {<point name="construct.a.stcmstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stcmstus
         ON ACTION controlp INFIELD stcmstus
            #add-point:ON ACTION controlp INFIELD stcmstus
            {<point name="construct.c.stcmstus" />}
            #END add-point
 
         #Ctrlp:construct.c.stcm008
         ON ACTION controlp INFIELD stcm008
            #add-point:ON ACTION controlp INFIELD stcm008
            {<point name="construct.c.stcm008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcm008
            #add-point:BEFORE FIELD stcm008
            {<point name="construct.b.stcm008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcm008
            
            #add-point:AFTER FIELD stcm008
            {<point name="construct.a.stcm008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stcm009
         ON ACTION controlp INFIELD stcm009
            #add-point:ON ACTION controlp INFIELD stcm009
            {<point name="construct.c.stcm009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcm009
            #add-point:BEFORE FIELD stcm009
            {<point name="construct.b.stcm009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcm009
            
            #add-point:AFTER FIELD stcm009
            {<point name="construct.a.stcm009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stcm016
         ON ACTION controlp INFIELD stcm016
            #add-point:ON ACTION controlp INFIELD stcm016
            {<point name="construct.c.stcm016" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcm016
            #add-point:BEFORE FIELD stcm016
            {<point name="construct.b.stcm016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcm016
            
            #add-point:AFTER FIELD stcm016
            {<point name="construct.a.stcm016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stcm017
         ON ACTION controlp INFIELD stcm017
            #add-point:ON ACTION controlp INFIELD stcm017
            {<point name="construct.c.stcm017" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcm017
            #add-point:BEFORE FIELD stcm017
            {<point name="construct.b.stcm017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcm017
            
            #add-point:AFTER FIELD stcm017
            {<point name="construct.a.stcm017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stcm010
         ON ACTION controlp INFIELD stcm010
            #add-point:ON ACTION controlp INFIELD stcm010
            {<point name="construct.c.stcm010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcm010
            #add-point:BEFORE FIELD stcm010
            {<point name="construct.b.stcm010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcm010
            
            #add-point:AFTER FIELD stcm010
            {<point name="construct.a.stcm010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stcm011
         ON ACTION controlp INFIELD stcm011
            #add-point:ON ACTION controlp INFIELD stcm011
            {<point name="construct.c.stcm011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcm011
            #add-point:BEFORE FIELD stcm011
            {<point name="construct.b.stcm011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcm011
            
            #add-point:AFTER FIELD stcm011
            {<point name="construct.a.stcm011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stcm012
         ON ACTION controlp INFIELD stcm012
            #add-point:ON ACTION controlp INFIELD stcm012
            {<point name="construct.c.stcm012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcm012
            #add-point:BEFORE FIELD stcm012
            {<point name="construct.b.stcm012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcm012
            
            #add-point:AFTER FIELD stcm012
            {<point name="construct.a.stcm012" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcm018
            #add-point:BEFORE FIELD stcm018
            {<point name="construct.b.stcm018" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcm018
            
            #add-point:AFTER FIELD stcm018
            {<point name="construct.a.stcm018" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stcm018
         ON ACTION controlp INFIELD stcm018
            #add-point:ON ACTION controlp INFIELD stcm018
            {<point name="construct.c.stcm018" />}
            #END add-point
 
         #Ctrlp:construct.c.stcm013
         ON ACTION controlp INFIELD stcm013
            #add-point:ON ACTION controlp INFIELD stcm013
            {<point name="construct.c.stcm013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcm013
            #add-point:BEFORE FIELD stcm013
            {<point name="construct.b.stcm013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcm013
            
            #add-point:AFTER FIELD stcm013
            {<point name="construct.a.stcm013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stcm014
         ON ACTION controlp INFIELD stcm014
            #add-point:ON ACTION controlp INFIELD stcm014
            {<point name="construct.c.stcm014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcm014
            #add-point:BEFORE FIELD stcm014
            {<point name="construct.b.stcm014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcm014
            
            #add-point:AFTER FIELD stcm014
            {<point name="construct.a.stcm014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stcm015
         ON ACTION controlp INFIELD stcm015
            #add-point:ON ACTION controlp INFIELD stcm015
            {<point name="construct.c.stcm015" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcm015
            #add-point:BEFORE FIELD stcm015
            {<point name="construct.b.stcm015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcm015
            
            #add-point:AFTER FIELD stcm015
            {<point name="construct.a.stcm015" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcm019
            #add-point:BEFORE FIELD stcm019
            {<point name="construct.b.stcm019" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcm019
            
            #add-point:AFTER FIELD stcm019
            {<point name="construct.a.stcm019" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stcm019
         ON ACTION controlp INFIELD stcm019
            #add-point:ON ACTION controlp INFIELD stcm019
            {<point name="construct.c.stcm019" />}
            #END add-point
 
         #Ctrlp:construct.c.stcmownid
         ON ACTION controlp INFIELD stcmownid
            #add-point:ON ACTION controlp INFIELD stcmownid
            {<point name="construct.c.stcmownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcmownid
            #add-point:BEFORE FIELD stcmownid
            {<point name="construct.b.stcmownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcmownid
            
            #add-point:AFTER FIELD stcmownid
            {<point name="construct.a.stcmownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stcmowndp
         ON ACTION controlp INFIELD stcmowndp
            #add-point:ON ACTION controlp INFIELD stcmowndp
            {<point name="construct.c.stcmowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcmowndp
            #add-point:BEFORE FIELD stcmowndp
            {<point name="construct.b.stcmowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcmowndp
            
            #add-point:AFTER FIELD stcmowndp
            {<point name="construct.a.stcmowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stcmcrtid
         ON ACTION controlp INFIELD stcmcrtid
            #add-point:ON ACTION controlp INFIELD stcmcrtid
            {<point name="construct.c.stcmcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcmcrtid
            #add-point:BEFORE FIELD stcmcrtid
            {<point name="construct.b.stcmcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcmcrtid
            
            #add-point:AFTER FIELD stcmcrtid
            {<point name="construct.a.stcmcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stcmcrtdp
         ON ACTION controlp INFIELD stcmcrtdp
            #add-point:ON ACTION controlp INFIELD stcmcrtdp
            {<point name="construct.c.stcmcrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcmcrtdp
            #add-point:BEFORE FIELD stcmcrtdp
            {<point name="construct.b.stcmcrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcmcrtdp
            
            #add-point:AFTER FIELD stcmcrtdp
            {<point name="construct.a.stcmcrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcmcrtdt
            #add-point:BEFORE FIELD stcmcrtdt
            {<point name="construct.b.stcmcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.stcmmodid
         ON ACTION controlp INFIELD stcmmodid
            #add-point:ON ACTION controlp INFIELD stcmmodid
            {<point name="construct.c.stcmmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcmmodid
            #add-point:BEFORE FIELD stcmmodid
            {<point name="construct.b.stcmmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcmmodid
            
            #add-point:AFTER FIELD stcmmodid
            {<point name="construct.a.stcmmodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcmmoddt
            #add-point:BEFORE FIELD stcmmoddt
            {<point name="construct.b.stcmmoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.stcmcnfid
         ON ACTION controlp INFIELD stcmcnfid
            #add-point:ON ACTION controlp INFIELD stcmcnfid
            {<point name="construct.c.stcmcnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcmcnfid
            #add-point:BEFORE FIELD stcmcnfid
            {<point name="construct.b.stcmcnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcmcnfid
            
            #add-point:AFTER FIELD stcmcnfid
            {<point name="construct.a.stcmcnfid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcmcnfdt
            #add-point:BEFORE FIELD stcmcnfdt
            {<point name="construct.b.stcmcnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON stcnseq,stcn001,stcn002,stcn003,stcn004,stcn005,stcn006,stcn007,stcn008, 
          stcn009,stcn010,stcn011,stcn012,stcn013,stcn014,stcn015,stcn016,stcn017,stcn018,stcn019,stcnsite, 
          stcnunit
           FROM s_detail1[1].stcnseq,s_detail1[1].stcn001,s_detail1[1].stcn002,s_detail1[1].stcn003, 
               s_detail1[1].stcn004,s_detail1[1].stcn005,s_detail1[1].stcn006,s_detail1[1].stcn007,s_detail1[1].stcn008, 
               s_detail1[1].stcn009,s_detail1[1].stcn010,s_detail1[1].stcn011,s_detail1[1].stcn012,s_detail1[1].stcn013, 
               s_detail1[1].stcn014,s_detail1[1].stcn015,s_detail1[1].stcn016,s_detail1[1].stcn017,s_detail1[1].stcn018, 
               s_detail1[1].stcn019,s_detail1[1].stcnsite,s_detail1[1].stcnunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #此段落由子樣板a01產生
         BEFORE FIELD stcnseq
            #add-point:BEFORE FIELD stcnseq
            {<point name="construct.b.page1.stcnseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcnseq
            
            #add-point:AFTER FIELD stcnseq
            {<point name="construct.a.page1.stcnseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stcnseq
         ON ACTION controlp INFIELD stcnseq
            #add-point:ON ACTION controlp INFIELD stcnseq
            {<point name="construct.c.page1.stcnseq" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.stcn001
         ON ACTION controlp INFIELD stcn001
            #add-point:ON ACTION controlp INFIELD stcn001
            {<point name="construct.c.page1.stcn001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn001
            #add-point:BEFORE FIELD stcn001
            {<point name="construct.b.page1.stcn001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn001
            
            #add-point:AFTER FIELD stcn001
            {<point name="construct.a.page1.stcn001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn002
            #add-point:BEFORE FIELD stcn002
            {<point name="construct.b.page1.stcn002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn002
            
            #add-point:AFTER FIELD stcn002
            {<point name="construct.a.page1.stcn002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stcn002
         ON ACTION controlp INFIELD stcn002
            #add-point:ON ACTION controlp INFIELD stcn002
            {<point name="construct.c.page1.stcn002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn003
            #add-point:BEFORE FIELD stcn003
            {<point name="construct.b.page1.stcn003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn003
            
            #add-point:AFTER FIELD stcn003
            {<point name="construct.a.page1.stcn003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stcn003
         ON ACTION controlp INFIELD stcn003
            #add-point:ON ACTION controlp INFIELD stcn003
            {<point name="construct.c.page1.stcn003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn004
            #add-point:BEFORE FIELD stcn004
            {<point name="construct.b.page1.stcn004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn004
            
            #add-point:AFTER FIELD stcn004
            {<point name="construct.a.page1.stcn004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stcn004
         ON ACTION controlp INFIELD stcn004
            #add-point:ON ACTION controlp INFIELD stcn004
            {<point name="construct.c.page1.stcn004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn005
            #add-point:BEFORE FIELD stcn005
            {<point name="construct.b.page1.stcn005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn005
            
            #add-point:AFTER FIELD stcn005
            {<point name="construct.a.page1.stcn005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stcn005
         ON ACTION controlp INFIELD stcn005
            #add-point:ON ACTION controlp INFIELD stcn005
            {<point name="construct.c.page1.stcn005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn006
            #add-point:BEFORE FIELD stcn006
            {<point name="construct.b.page1.stcn006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn006
            
            #add-point:AFTER FIELD stcn006
            {<point name="construct.a.page1.stcn006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stcn006
         ON ACTION controlp INFIELD stcn006
            #add-point:ON ACTION controlp INFIELD stcn006
            {<point name="construct.c.page1.stcn006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn007
            #add-point:BEFORE FIELD stcn007
            {<point name="construct.b.page1.stcn007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn007
            
            #add-point:AFTER FIELD stcn007
            {<point name="construct.a.page1.stcn007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stcn007
         ON ACTION controlp INFIELD stcn007
            #add-point:ON ACTION controlp INFIELD stcn007
            {<point name="construct.c.page1.stcn007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn008
            #add-point:BEFORE FIELD stcn008
            {<point name="construct.b.page1.stcn008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn008
            
            #add-point:AFTER FIELD stcn008
            {<point name="construct.a.page1.stcn008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stcn008
         ON ACTION controlp INFIELD stcn008
            #add-point:ON ACTION controlp INFIELD stcn008
            {<point name="construct.c.page1.stcn008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn009
            #add-point:BEFORE FIELD stcn009
            {<point name="construct.b.page1.stcn009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn009
            
            #add-point:AFTER FIELD stcn009
            {<point name="construct.a.page1.stcn009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stcn009
         ON ACTION controlp INFIELD stcn009
            #add-point:ON ACTION controlp INFIELD stcn009
            {<point name="construct.c.page1.stcn009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn010
            #add-point:BEFORE FIELD stcn010
            {<point name="construct.b.page1.stcn010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn010
            
            #add-point:AFTER FIELD stcn010
            {<point name="construct.a.page1.stcn010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stcn010
         ON ACTION controlp INFIELD stcn010
            #add-point:ON ACTION controlp INFIELD stcn010
            {<point name="construct.c.page1.stcn010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn011
            #add-point:BEFORE FIELD stcn011
            {<point name="construct.b.page1.stcn011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn011
            
            #add-point:AFTER FIELD stcn011
            {<point name="construct.a.page1.stcn011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stcn011
         ON ACTION controlp INFIELD stcn011
            #add-point:ON ACTION controlp INFIELD stcn011
            {<point name="construct.c.page1.stcn011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn012
            #add-point:BEFORE FIELD stcn012
            {<point name="construct.b.page1.stcn012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn012
            
            #add-point:AFTER FIELD stcn012
            {<point name="construct.a.page1.stcn012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stcn012
         ON ACTION controlp INFIELD stcn012
            #add-point:ON ACTION controlp INFIELD stcn012
            {<point name="construct.c.page1.stcn012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn013
            #add-point:BEFORE FIELD stcn013
            {<point name="construct.b.page1.stcn013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn013
            
            #add-point:AFTER FIELD stcn013
            {<point name="construct.a.page1.stcn013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stcn013
         ON ACTION controlp INFIELD stcn013
            #add-point:ON ACTION controlp INFIELD stcn013
            {<point name="construct.c.page1.stcn013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn014
            #add-point:BEFORE FIELD stcn014
            {<point name="construct.b.page1.stcn014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn014
            
            #add-point:AFTER FIELD stcn014
            {<point name="construct.a.page1.stcn014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stcn014
         ON ACTION controlp INFIELD stcn014
            #add-point:ON ACTION controlp INFIELD stcn014
            {<point name="construct.c.page1.stcn014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn015
            #add-point:BEFORE FIELD stcn015
            {<point name="construct.b.page1.stcn015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn015
            
            #add-point:AFTER FIELD stcn015
            {<point name="construct.a.page1.stcn015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stcn015
         ON ACTION controlp INFIELD stcn015
            #add-point:ON ACTION controlp INFIELD stcn015
            {<point name="construct.c.page1.stcn015" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn016
            #add-point:BEFORE FIELD stcn016
            {<point name="construct.b.page1.stcn016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn016
            
            #add-point:AFTER FIELD stcn016
            {<point name="construct.a.page1.stcn016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stcn016
         ON ACTION controlp INFIELD stcn016
            #add-point:ON ACTION controlp INFIELD stcn016
            {<point name="construct.c.page1.stcn016" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn017
            #add-point:BEFORE FIELD stcn017
            {<point name="construct.b.page1.stcn017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn017
            
            #add-point:AFTER FIELD stcn017
            {<point name="construct.a.page1.stcn017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stcn017
         ON ACTION controlp INFIELD stcn017
            #add-point:ON ACTION controlp INFIELD stcn017
            {<point name="construct.c.page1.stcn017" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn018
            #add-point:BEFORE FIELD stcn018
            {<point name="construct.b.page1.stcn018" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn018
            
            #add-point:AFTER FIELD stcn018
            {<point name="construct.a.page1.stcn018" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stcn018
         ON ACTION controlp INFIELD stcn018
            #add-point:ON ACTION controlp INFIELD stcn018
            {<point name="construct.c.page1.stcn018" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn019
            #add-point:BEFORE FIELD stcn019
            {<point name="construct.b.page1.stcn019" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn019
            
            #add-point:AFTER FIELD stcn019
            {<point name="construct.a.page1.stcn019" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stcn019
         ON ACTION controlp INFIELD stcn019
            #add-point:ON ACTION controlp INFIELD stcn019
            {<point name="construct.c.page1.stcn019" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcnsite
            #add-point:BEFORE FIELD stcnsite
            {<point name="construct.b.page1.stcnsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcnsite
            
            #add-point:AFTER FIELD stcnsite
            {<point name="construct.a.page1.stcnsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stcnsite
         ON ACTION controlp INFIELD stcnsite
            #add-point:ON ACTION controlp INFIELD stcnsite
            {<point name="construct.c.page1.stcnsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcnunit
            #add-point:BEFORE FIELD stcnunit
            {<point name="construct.b.page1.stcnunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcnunit
            
            #add-point:AFTER FIELD stcnunit
            {<point name="construct.a.page1.stcnunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stcnunit
         ON ACTION controlp INFIELD stcnunit
            #add-point:ON ACTION controlp INFIELD stcnunit
            {<point name="construct.c.page1.stcnunit" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON stcoseq,stco001,stco002,stcosite,stcounit
           FROM s_detail2[1].stcoseq,s_detail2[1].stco001,s_detail2[1].stco002,s_detail2[1].stcosite, 
               s_detail2[1].stcounit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #此段落由子樣板a01產生
         BEFORE FIELD stcoseq
            #add-point:BEFORE FIELD stcoseq
            {<point name="construct.b.page2.stcoseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcoseq
            
            #add-point:AFTER FIELD stcoseq
            {<point name="construct.a.page2.stcoseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stcoseq
         ON ACTION controlp INFIELD stcoseq
            #add-point:ON ACTION controlp INFIELD stcoseq
            {<point name="construct.c.page2.stcoseq" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.stco001
         ON ACTION controlp INFIELD stco001
            #add-point:ON ACTION controlp INFIELD stco001
            {<point name="construct.c.page2.stco001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stco001
            #add-point:BEFORE FIELD stco001
            {<point name="construct.b.page2.stco001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stco001
            
            #add-point:AFTER FIELD stco001
            {<point name="construct.a.page2.stco001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD stco002
            #add-point:BEFORE FIELD stco002
            {<point name="construct.b.page2.stco002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stco002
            
            #add-point:AFTER FIELD stco002
            {<point name="construct.a.page2.stco002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stco002
         ON ACTION controlp INFIELD stco002
            #add-point:ON ACTION controlp INFIELD stco002
            {<point name="construct.c.page2.stco002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcosite
            #add-point:BEFORE FIELD stcosite
            {<point name="construct.b.page2.stcosite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcosite
            
            #add-point:AFTER FIELD stcosite
            {<point name="construct.a.page2.stcosite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stcosite
         ON ACTION controlp INFIELD stcosite
            #add-point:ON ACTION controlp INFIELD stcosite
            {<point name="construct.c.page2.stcosite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcounit
            #add-point:BEFORE FIELD stcounit
            {<point name="construct.b.page2.stcounit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcounit
            
            #add-point:AFTER FIELD stcounit
            {<point name="construct.a.page2.stcounit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stcounit
         ON ACTION controlp INFIELD stcounit
            #add-point:ON ACTION controlp INFIELD stcounit
            {<point name="construct.c.page2.stcounit" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="astt602.default_search" ver="2" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION astt602_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " stcmdocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="astt602.delete" ver="9" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION astt602_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_stcm_m.stcmdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   
 
   CALL astt602_show()
   
   CALL s_transaction_begin()
 
   OPEN astt602_cl USING g_enterprise,g_stcm_m.stcmdocno
   IF STATUS THEN
      CALL cl_err("OPEN astt602_cl:", STATUS, 1)
      CLOSE astt602_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE astt602_master_referesh USING g_stcm_m.stcmdocno INTO g_stcm_m.stcmsite,g_stcm_m.stcmdocdt, 
       g_stcm_m.stcmdocno,g_stcm_m.stcmunit,g_stcm_m.stcm001,g_stcm_m.stcm003,g_stcm_m.stcm004,g_stcm_m.stcm002, 
       g_stcm_m.stcm005,g_stcm_m.stcm006,g_stcm_m.stcm007,g_stcm_m.stcmstus,g_stcm_m.stcm008,g_stcm_m.stcm009, 
       g_stcm_m.stcm016,g_stcm_m.stcm017,g_stcm_m.stcm010,g_stcm_m.stcm011,g_stcm_m.stcm012,g_stcm_m.stcm018, 
       g_stcm_m.stcm013,g_stcm_m.stcm014,g_stcm_m.stcm015,g_stcm_m.stcm019,g_stcm_m.stcmownid,g_stcm_m.stcmowndp, 
       g_stcm_m.stcmcrtid,g_stcm_m.stcmcrtdp,g_stcm_m.stcmcrtdt,g_stcm_m.stcmmodid,g_stcm_m.stcmmoddt, 
       g_stcm_m.stcmcnfid,g_stcm_m.stcmcnfdt,g_stcm_m.stcmsite_desc,g_stcm_m.stcm003_desc,g_stcm_m.stcm004_desc, 
       g_stcm_m.stcm006_desc,g_stcm_m.stcm007_desc,g_stcm_m.stcm008_desc,g_stcm_m.stcm009_desc,g_stcm_m.stcm016_desc, 
       g_stcm_m.stcm010_desc,g_stcm_m.stcm011_desc,g_stcm_m.stcm012_desc,g_stcm_m.stcm013_desc,g_stcm_m.stcm014_desc, 
       g_stcm_m.stcm015_desc,g_stcm_m.stcmownid_desc,g_stcm_m.stcmowndp_desc,g_stcm_m.stcmcrtid_desc, 
       g_stcm_m.stcmcrtdp_desc,g_stcm_m.stcmmodid_desc,g_stcm_m.stcmcnfid_desc
 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_stcm_m.stcmdocno,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL astt602_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_stcmdocno_t = g_stcm_m.stcmdocno
 
 
      DELETE FROM stcm_t
       WHERE stcment = g_enterprise AND stcmdocno = g_stcm_m.stcmdocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_stcm_m.stcmdocno,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM stcn_t
       WHERE stcnent = g_enterprise AND stcndocno = g_stcm_m.stcmdocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("stcn_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM stco_t
       WHERE stcoent = g_enterprise AND
             stcodocno = g_stcm_m.stcmdocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("stco_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
 
 
 
                                                               
      CLEAR FORM
      CALL g_stcn_d.clear() 
      CALL g_stcn2_d.clear()       
 
     
      #CALL astt602_ui_browser_refresh()  
      CALL astt602_ui_headershow()  
      CALL astt602_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL astt602_browser_fill("")
         CALL astt602_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL astt602_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
 
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE astt602_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_stcm_m.stcmdocno,'D')
    
END FUNCTION
]]>
  </section>
  <section id="astt602.delete_b" ver="1" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION astt602_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM stcn_t
       WHERE stcnent = g_enterprise AND
         stcndocno = ps_keys_bak[1] AND stcnseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM stco_t
       WHERE stcoent = g_enterprise AND
         stcodocno = ps_keys_bak[1] AND stcoseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("stco_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="astt602.description" ver="1" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:3,PR版次:3) Build-000175
#+ 
#+ Filename...: astt602
#+ Description: 分銷客戶合作進場協議維護作業
#+ Creator....: 02003(2014/06/16)
#+ Modifier...: 02003(2014/06/29)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="astt602.detail_reproduce" ver="1" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION astt602_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE stcn_t.*
   DEFINE l_detail2    RECORD LIKE stco_t.*
 
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE astt602_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE astt602_detail AS ",
                "SELECT * FROM stcn_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO astt602_detail SELECT * FROM stcn_t 
                                         WHERE stcnent = g_enterprise AND stcndocno = g_stcmdocno_t
 
   
   #將key修正為調整後   
   UPDATE astt602_detail 
      #更新key欄位
      SET stcndocno = g_stcm_m.stcmdocno
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO stcn_t SELECT * FROM astt602_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astt602_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE astt602_detail AS ",
      "SELECT * FROM stco_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO astt602_detail SELECT * FROM stco_t
                                         WHERE stcoent = g_enterprise AND stcodocno = g_stcmdocno_t
 
 
   #將key修正為調整後   
   UPDATE astt602_detail SET stcodocno = g_stcm_m.stcmdocno
 
  
   #將資料塞回原table   
   INSERT INTO stco_t SELECT * FROM astt602_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astt602_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_stcmdocno_t = g_stcm_m.stcmdocno
 
   
   DROP TABLE astt602_detail
   
END FUNCTION
]]>
  </section>
  <section id="astt602.detail_show" ver="2" status="" src="s">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION astt602_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="astt602.fetch" ver="9" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION astt602_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_stcm_m.stcmdocno = g_browser[g_current_idx].b_stcmdocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE astt602_master_referesh USING g_stcm_m.stcmdocno INTO g_stcm_m.stcmsite,g_stcm_m.stcmdocdt, 
       g_stcm_m.stcmdocno,g_stcm_m.stcmunit,g_stcm_m.stcm001,g_stcm_m.stcm003,g_stcm_m.stcm004,g_stcm_m.stcm002, 
       g_stcm_m.stcm005,g_stcm_m.stcm006,g_stcm_m.stcm007,g_stcm_m.stcmstus,g_stcm_m.stcm008,g_stcm_m.stcm009, 
       g_stcm_m.stcm016,g_stcm_m.stcm017,g_stcm_m.stcm010,g_stcm_m.stcm011,g_stcm_m.stcm012,g_stcm_m.stcm018, 
       g_stcm_m.stcm013,g_stcm_m.stcm014,g_stcm_m.stcm015,g_stcm_m.stcm019,g_stcm_m.stcmownid,g_stcm_m.stcmowndp, 
       g_stcm_m.stcmcrtid,g_stcm_m.stcmcrtdp,g_stcm_m.stcmcrtdt,g_stcm_m.stcmmodid,g_stcm_m.stcmmoddt, 
       g_stcm_m.stcmcnfid,g_stcm_m.stcmcnfdt,g_stcm_m.stcmsite_desc,g_stcm_m.stcm003_desc,g_stcm_m.stcm004_desc, 
       g_stcm_m.stcm006_desc,g_stcm_m.stcm007_desc,g_stcm_m.stcm008_desc,g_stcm_m.stcm009_desc,g_stcm_m.stcm016_desc, 
       g_stcm_m.stcm010_desc,g_stcm_m.stcm011_desc,g_stcm_m.stcm012_desc,g_stcm_m.stcm013_desc,g_stcm_m.stcm014_desc, 
       g_stcm_m.stcm015_desc,g_stcm_m.stcmownid_desc,g_stcm_m.stcmowndp_desc,g_stcm_m.stcmcrtid_desc, 
       g_stcm_m.stcmcrtdp_desc,g_stcm_m.stcmmodid_desc,g_stcm_m.stcmcnfid_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("stcm_t",SQLCA.sqlcode,1)
      INITIALIZE g_stcm_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_stcm_m_t.* = g_stcm_m.*
   LET g_stcm_m_o.* = g_stcm_m.*
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL astt602_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="astt602.fill_chk" ver="2" status="" src="s">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION astt602_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
   IF ps_idx = 2 AND
      ((NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
 
 
   RETURN FALSE
 
END FUNCTION
]]>
  </section>
  <section id="astt602.filter" ver="5" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION astt602_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON stcmdocno,stcmdocdt,stcmsite,stcm001,stcm003,stcm004,stcm005,stcm006, 
          stcm007,stcm008,stcm009,stcm010,stcm011,stcm012,stcm013,stcm014,stcm015,stcm016,stcm017,stcm018, 
          stcm019,stcmunit
                          FROM s_browse[1].b_stcmdocno,s_browse[1].b_stcmdocdt,s_browse[1].b_stcmsite, 
                              s_browse[1].b_stcm001,s_browse[1].b_stcm003,s_browse[1].b_stcm004,s_browse[1].b_stcm005, 
                              s_browse[1].b_stcm006,s_browse[1].b_stcm007,s_browse[1].b_stcm008,s_browse[1].b_stcm009, 
                              s_browse[1].b_stcm010,s_browse[1].b_stcm011,s_browse[1].b_stcm012,s_browse[1].b_stcm013, 
                              s_browse[1].b_stcm014,s_browse[1].b_stcm015,s_browse[1].b_stcm016,s_browse[1].b_stcm017, 
                              s_browse[1].b_stcm018,s_browse[1].b_stcm019,s_browse[1].b_stcmunit
 
         BEFORE CONSTRUCT
               DISPLAY astt602_filter_parser('stcmdocno') TO s_browse[1].b_stcmdocno
            DISPLAY astt602_filter_parser('stcmdocdt') TO s_browse[1].b_stcmdocdt
            DISPLAY astt602_filter_parser('stcmsite') TO s_browse[1].b_stcmsite
            DISPLAY astt602_filter_parser('stcm001') TO s_browse[1].b_stcm001
            DISPLAY astt602_filter_parser('stcm003') TO s_browse[1].b_stcm003
            DISPLAY astt602_filter_parser('stcm004') TO s_browse[1].b_stcm004
            DISPLAY astt602_filter_parser('stcm005') TO s_browse[1].b_stcm005
            DISPLAY astt602_filter_parser('stcm006') TO s_browse[1].b_stcm006
            DISPLAY astt602_filter_parser('stcm007') TO s_browse[1].b_stcm007
            DISPLAY astt602_filter_parser('stcm008') TO s_browse[1].b_stcm008
            DISPLAY astt602_filter_parser('stcm009') TO s_browse[1].b_stcm009
            DISPLAY astt602_filter_parser('stcm010') TO s_browse[1].b_stcm010
            DISPLAY astt602_filter_parser('stcm011') TO s_browse[1].b_stcm011
            DISPLAY astt602_filter_parser('stcm012') TO s_browse[1].b_stcm012
            DISPLAY astt602_filter_parser('stcm013') TO s_browse[1].b_stcm013
            DISPLAY astt602_filter_parser('stcm014') TO s_browse[1].b_stcm014
            DISPLAY astt602_filter_parser('stcm015') TO s_browse[1].b_stcm015
            DISPLAY astt602_filter_parser('stcm016') TO s_browse[1].b_stcm016
            DISPLAY astt602_filter_parser('stcm017') TO s_browse[1].b_stcm017
            DISPLAY astt602_filter_parser('stcm018') TO s_browse[1].b_stcm018
            DISPLAY astt602_filter_parser('stcm019') TO s_browse[1].b_stcm019
            DISPLAY astt602_filter_parser('stcmunit') TO s_browse[1].b_stcmunit
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL astt602_filter_show('stcmdocno')
   CALL astt602_filter_show('stcmdocdt')
   CALL astt602_filter_show('stcmsite')
   CALL astt602_filter_show('stcm001')
   CALL astt602_filter_show('stcm003')
   CALL astt602_filter_show('stcm004')
   CALL astt602_filter_show('stcm005')
   CALL astt602_filter_show('stcm006')
   CALL astt602_filter_show('stcm007')
   CALL astt602_filter_show('stcm008')
   CALL astt602_filter_show('stcm009')
   CALL astt602_filter_show('stcm010')
   CALL astt602_filter_show('stcm011')
   CALL astt602_filter_show('stcm012')
   CALL astt602_filter_show('stcm013')
   CALL astt602_filter_show('stcm014')
   CALL astt602_filter_show('stcm015')
   CALL astt602_filter_show('stcm016')
   CALL astt602_filter_show('stcm017')
   CALL astt602_filter_show('stcm018')
   CALL astt602_filter_show('stcm019')
   CALL astt602_filter_show('stcmunit')
 
END FUNCTION
]]>
  </section>
  <section id="astt602.filter_parser" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION astt602_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="astt602.filter_show" ver="1" status="" src="s">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION astt602_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = astt602_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="astt602.global" ver="12" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_stcm_m        RECORD
       stcmsite LIKE stcm_t.stcmsite, 
   stcmsite_desc LIKE type_t.chr80, 
   stcmdocdt LIKE stcm_t.stcmdocdt, 
   stcmdocno LIKE stcm_t.stcmdocno, 
   stcmunit LIKE stcm_t.stcmunit, 
   stcm001 LIKE stcm_t.stcm001, 
   stcm003 LIKE stcm_t.stcm003, 
   stcm003_desc LIKE type_t.chr80, 
   stcm004 LIKE stcm_t.stcm004, 
   stcm004_desc LIKE type_t.chr80, 
   stcm002 LIKE stcm_t.stcm002, 
   stcm005 LIKE stcm_t.stcm005, 
   stcm006 LIKE stcm_t.stcm006, 
   stcm006_desc LIKE type_t.chr80, 
   stcm007 LIKE stcm_t.stcm007, 
   stcm007_desc LIKE type_t.chr80, 
   stcmstus LIKE stcm_t.stcmstus, 
   stcm008 LIKE stcm_t.stcm008, 
   stcm008_desc LIKE type_t.chr80, 
   stcm009 LIKE stcm_t.stcm009, 
   stcm009_desc LIKE type_t.chr80, 
   stcm016 LIKE stcm_t.stcm016, 
   stcm016_desc LIKE type_t.chr80, 
   stcm017 LIKE stcm_t.stcm017, 
   stcm017_desc LIKE type_t.chr80, 
   next_b LIKE type_t.chr80, 
   stcm010 LIKE stcm_t.stcm010, 
   stcm010_desc LIKE type_t.chr80, 
   stcm011 LIKE stcm_t.stcm011, 
   stcm011_desc LIKE type_t.chr80, 
   stcm012 LIKE stcm_t.stcm012, 
   stcm012_desc LIKE type_t.chr80, 
   stcm018 LIKE stcm_t.stcm018, 
   num LIKE type_t.chr80, 
   stcm013 LIKE stcm_t.stcm013, 
   stcm013_desc LIKE type_t.chr80, 
   stcm014 LIKE stcm_t.stcm014, 
   stcm014_desc LIKE type_t.chr80, 
   stcm015 LIKE stcm_t.stcm015, 
   stcm015_desc LIKE type_t.chr80, 
   stcm019 LIKE stcm_t.stcm019, 
   stcmownid LIKE stcm_t.stcmownid, 
   stcmownid_desc LIKE type_t.chr80, 
   stcmowndp LIKE stcm_t.stcmowndp, 
   stcmowndp_desc LIKE type_t.chr80, 
   stcmcrtid LIKE stcm_t.stcmcrtid, 
   stcmcrtid_desc LIKE type_t.chr80, 
   stcmcrtdp LIKE stcm_t.stcmcrtdp, 
   stcmcrtdp_desc LIKE type_t.chr80, 
   stcmcrtdt DATETIME YEAR TO SECOND, 
   stcmmodid LIKE stcm_t.stcmmodid, 
   stcmmodid_desc LIKE type_t.chr80, 
   stcmmoddt DATETIME YEAR TO SECOND, 
   stcmcnfid LIKE stcm_t.stcmcnfid, 
   stcmcnfid_desc LIKE type_t.chr80, 
   stcmcnfdt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_stcn_d        RECORD
       stcnseq LIKE stcn_t.stcnseq, 
   stcn001 LIKE stcn_t.stcn001, 
   stcn001_desc LIKE type_t.chr500, 
   stcn002 LIKE stcn_t.stcn002, 
   stcn003 LIKE stcn_t.stcn003, 
   stcn004 LIKE stcn_t.stcn004, 
   stcn005 LIKE stcn_t.stcn005, 
   stcn006 LIKE stcn_t.stcn006, 
   stcn007 LIKE stcn_t.stcn007, 
   stcn008 LIKE stcn_t.stcn008, 
   stcn009 LIKE stcn_t.stcn009, 
   stcn010 LIKE stcn_t.stcn010, 
   stcn011 LIKE stcn_t.stcn011, 
   stcn012 LIKE stcn_t.stcn012, 
   stcn013 LIKE stcn_t.stcn013, 
   stcn014 LIKE stcn_t.stcn014, 
   stcn015 LIKE stcn_t.stcn015, 
   stcn016 LIKE stcn_t.stcn016, 
   stcn017 LIKE stcn_t.stcn017, 
   stcn018 LIKE stcn_t.stcn018, 
   stcn019 LIKE stcn_t.stcn019, 
   stcnsite LIKE stcn_t.stcnsite, 
   stcnunit LIKE stcn_t.stcnunit
       END RECORD
PRIVATE TYPE type_g_stcn2_d RECORD
       stcoseq LIKE stco_t.stcoseq, 
   stco001 LIKE stco_t.stco001, 
   stco001_desc LIKE type_t.chr500, 
   stco001_desc_desc LIKE type_t.chr500, 
   stco002 LIKE stco_t.stco002, 
   stcosite LIKE stco_t.stcosite, 
   stcounit LIKE stco_t.stcounit
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_stcm_m          type_g_stcm_m
DEFINE g_stcm_m_t        type_g_stcm_m
DEFINE g_stcm_m_o        type_g_stcm_m
 
   DEFINE g_stcmdocno_t LIKE stcm_t.stcmdocno
 
 
DEFINE g_stcn_d          DYNAMIC ARRAY OF type_g_stcn_d
DEFINE g_stcn_d_t        type_g_stcn_d
DEFINE g_stcn_d_o        type_g_stcn_d
DEFINE g_stcn2_d   DYNAMIC ARRAY OF type_g_stcn2_d
DEFINE g_stcn2_d_t type_g_stcn2_d
DEFINE g_stcn2_d_o type_g_stcn2_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_stcmdocno LIKE stcm_t.stcmdocno,
      b_stcmdocdt LIKE stcm_t.stcmdocdt,
      b_stcmsite LIKE stcm_t.stcmsite,
   b_stcmsite_desc LIKE type_t.chr80,
      b_stcm001 LIKE stcm_t.stcm001,
      b_stcm003 LIKE stcm_t.stcm003,
   b_stcm003_desc LIKE type_t.chr80,
      b_stcm004 LIKE stcm_t.stcm004,
   b_stcm004_desc LIKE type_t.chr80,
      b_stcm005 LIKE stcm_t.stcm005,
      b_stcm006 LIKE stcm_t.stcm006,
   b_stcm006_desc LIKE type_t.chr80,
      b_stcm007 LIKE stcm_t.stcm007,
   b_stcm007_desc LIKE type_t.chr80,
      b_stcm008 LIKE stcm_t.stcm008,
   b_stcm008_desc LIKE type_t.chr80,
      b_stcm009 LIKE stcm_t.stcm009,
   b_stcm009_desc LIKE type_t.chr80,
      b_stcm010 LIKE stcm_t.stcm010,
   b_stcm010_desc LIKE type_t.chr80,
      b_stcm011 LIKE stcm_t.stcm011,
   b_stcm011_desc LIKE type_t.chr80,
      b_stcm012 LIKE stcm_t.stcm012,
   b_stcm012_desc LIKE type_t.chr80,
      b_stcm013 LIKE stcm_t.stcm013,
   b_stcm013_desc LIKE type_t.chr80,
      b_stcm014 LIKE stcm_t.stcm014,
   b_stcm014_desc LIKE type_t.chr80,
      b_stcm015 LIKE stcm_t.stcm015,
   b_stcm015_desc LIKE type_t.chr80,
      b_stcm016 LIKE stcm_t.stcm016,
   b_stcm016_desc LIKE type_t.chr80,
      b_stcm017 LIKE stcm_t.stcm017,
   b_b_oodbl004 LIKE type_t.chr500,
      b_stcm018 LIKE stcm_t.stcm018,
      b_stcm019 LIKE stcm_t.stcm019,
      b_stcmunit LIKE stcm_t.stcmunit
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_stcmdocno LIKE stcm_t.stcmdocno,
      b_stcmdocdt LIKE stcm_t.stcmdocdt,
      b_stcmsite LIKE stcm_t.stcmsite,
   b_stcmsite_desc LIKE type_t.chr80,
      b_stcm001 LIKE stcm_t.stcm001,
      b_stcm003 LIKE stcm_t.stcm003,
   b_stcm003_desc LIKE type_t.chr80,
      b_stcm004 LIKE stcm_t.stcm004,
   b_stcm004_desc LIKE type_t.chr80,
      b_stcm005 LIKE stcm_t.stcm005,
      b_stcm006 LIKE stcm_t.stcm006,
   b_stcm006_desc LIKE type_t.chr80,
      b_stcm007 LIKE stcm_t.stcm007,
   b_stcm007_desc LIKE type_t.chr80,
      b_stcm008 LIKE stcm_t.stcm008,
   b_stcm008_desc LIKE type_t.chr80,
      b_stcm009 LIKE stcm_t.stcm009,
   b_stcm009_desc LIKE type_t.chr80,
      b_stcm010 LIKE stcm_t.stcm010,
   b_stcm010_desc LIKE type_t.chr80,
      b_stcm011 LIKE stcm_t.stcm011,
   b_stcm011_desc LIKE type_t.chr80,
      b_stcm012 LIKE stcm_t.stcm012,
   b_stcm012_desc LIKE type_t.chr80,
      b_stcm013 LIKE stcm_t.stcm013,
   b_stcm013_desc LIKE type_t.chr80,
      b_stcm014 LIKE stcm_t.stcm014,
   b_stcm014_desc LIKE type_t.chr80,
      b_stcm015 LIKE stcm_t.stcm015,
   b_stcm015_desc LIKE type_t.chr80,
      b_stcm016 LIKE stcm_t.stcm016,
   b_stcm016_desc LIKE type_t.chr80,
      b_stcm017 LIKE stcm_t.stcm017,
   b_b_oodbl004 LIKE type_t.chr500,
      b_stcm018 LIKE stcm_t.stcm018,
      b_stcm019 LIKE stcm_t.stcm019,
      b_stcmunit LIKE stcm_t.stcmunit
      END RECORD 
      
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="astt602.idx_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION astt602_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_stcn_d.getLength() THEN
         LET g_detail_idx = g_stcn_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stcn_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stcn_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_stcn2_d.getLength() THEN
         LET g_detail_idx = g_stcn2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stcn2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stcn2_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="astt602.init" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION astt602_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('stcmstus','50','N,X,Y')
 
      CALL cl_set_combo_scc('stcm005','6013') 
   CALL cl_set_combo_scc('stcn004','6006') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL astt602_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="astt602.input" ver="6" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION astt602_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT stcnseq,stcn001,stcn002,stcn003,stcn004,stcn005,stcn006,stcn007,stcn008, 
       stcn009,stcn010,stcn011,stcn012,stcn013,stcn014,stcn015,stcn016,stcn017,stcn018,stcn019,stcnsite, 
       stcnunit FROM stcn_t WHERE stcnent=? AND stcndocno=? AND stcnseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt602_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT stcoseq,stco001,stco002,stcosite,stcounit FROM stco_t WHERE stcoent=?  
       AND stcodocno=? AND stcoseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt602_bcl2 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL astt602_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL astt602_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_stcm_m.stcmdocdt,g_stcm_m.stcmdocno,g_stcm_m.stcmunit,g_stcm_m.stcm001,g_stcm_m.stcm003, 
       g_stcm_m.stcm004,g_stcm_m.stcm002,g_stcm_m.stcmstus,g_stcm_m.stcm008,g_stcm_m.stcm009,g_stcm_m.stcm016, 
       g_stcm_m.stcm017,g_stcm_m.stcm010,g_stcm_m.stcm011,g_stcm_m.stcm012,g_stcm_m.stcm018,g_stcm_m.stcm019 

   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
  </section>
  <section id="astt602.input.body" ver="6" status="" src="s">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_stcn_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stcn_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astt602_b_fill()
            LET g_rec_b = g_stcn_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astt602_cl USING g_enterprise,g_stcm_m.stcmdocno
            IF STATUS THEN
               CALL cl_err("OPEN astt602_cl:", STATUS, 1)
               CLOSE astt602_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_stcn_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stcn_d[l_ac].stcnseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_stcn_d_t.* = g_stcn_d[l_ac].*  #BACKUP
               LET g_stcn_d_o.* = g_stcn_d[l_ac].*  #BACKUP
               CALL astt602_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL astt602_set_no_entry_b(l_cmd)
               IF NOT astt602_lock_b("stcn_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astt602_bcl INTO g_stcn_d[l_ac].stcnseq,g_stcn_d[l_ac].stcn001,g_stcn_d[l_ac].stcn002, 
                      g_stcn_d[l_ac].stcn003,g_stcn_d[l_ac].stcn004,g_stcn_d[l_ac].stcn005,g_stcn_d[l_ac].stcn006, 
                      g_stcn_d[l_ac].stcn007,g_stcn_d[l_ac].stcn008,g_stcn_d[l_ac].stcn009,g_stcn_d[l_ac].stcn010, 
                      g_stcn_d[l_ac].stcn011,g_stcn_d[l_ac].stcn012,g_stcn_d[l_ac].stcn013,g_stcn_d[l_ac].stcn014, 
                      g_stcn_d[l_ac].stcn015,g_stcn_d[l_ac].stcn016,g_stcn_d[l_ac].stcn017,g_stcn_d[l_ac].stcn018, 
                      g_stcn_d[l_ac].stcn019,g_stcn_d[l_ac].stcnsite,g_stcn_d[l_ac].stcnunit
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_stcn_d_t.stcnseq,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL astt602_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stcn_d[l_ac].* TO NULL 
			INITIALIZE g_stcn_d_t.* TO NULL 
            INITIALIZE g_stcn_d_o.* TO NULL 
            
            LET g_stcn_d_t.* = g_stcn_d[l_ac].*     #新輸入資料
            LET g_stcn_d_o.* = g_stcn_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astt602_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL astt602_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stcn_d[li_reproduce_target].* = g_stcn_d[li_reproduce].*
 
               LET g_stcn_d[li_reproduce_target].stcnseq = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM stcn_t 
             WHERE stcnent = g_enterprise AND stcndocno = g_stcm_m.stcmdocno
 
               AND stcnseq = g_stcn_d[l_ac].stcnseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stcm_m.stcmdocno
               LET gs_keys[2] = g_stcn_d[g_detail_idx].stcnseq
               CALL astt602_insert_b('stcn_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_stcn_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("stcn_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astt602_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_stcn_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_stcn_d.deleteElement(l_ac)
               NEXT FIELD stcnseq
            END IF
         
            IF g_stcn_d[l_ac].stcnseq IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM stcn_t
                WHERE stcnent = g_enterprise AND stcndocno = g_stcm_m.stcmdocno AND
 
                      stcnseq = g_stcn_d_t.stcnseq
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("stcn_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE astt602_bcl
               LET l_count = g_stcn_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stcm_m.stcmdocno
               LET gs_keys[2] = g_stcn_d[g_detail_idx].stcnseq
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL astt602_delete_b('stcn_t',gs_keys,"'1'")
 
                  #此段落由子樣板a01產生
         BEFORE FIELD stcnseq
            #add-point:BEFORE FIELD stcnseq
            {<point name="input.b.page1.stcnseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcnseq
            
            #add-point:AFTER FIELD stcnseq
            {<point name="input.a.page1.stcnseq" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stcnseq
            #add-point:ON CHANGE stcnseq
            {<point name="input.g.page1.stcnseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn001
            
            #add-point:AFTER FIELD stcn001
            {<point name="input.a.page1.stcn001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn001
            #add-point:BEFORE FIELD stcn001
            {<point name="input.b.page1.stcn001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE stcn001
            #add-point:ON CHANGE stcn001
            {<point name="input.g.page1.stcn001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn002
            #add-point:BEFORE FIELD stcn002
            {<point name="input.b.page1.stcn002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn002
            
            #add-point:AFTER FIELD stcn002
            {<point name="input.a.page1.stcn002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stcn002
            #add-point:ON CHANGE stcn002
            {<point name="input.g.page1.stcn002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn003
            #add-point:BEFORE FIELD stcn003
            {<point name="input.b.page1.stcn003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn003
            
            #add-point:AFTER FIELD stcn003
            {<point name="input.a.page1.stcn003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stcn003
            #add-point:ON CHANGE stcn003
            {<point name="input.g.page1.stcn003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn004
            #add-point:BEFORE FIELD stcn004
            {<point name="input.b.page1.stcn004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn004
            
            #add-point:AFTER FIELD stcn004
            {<point name="input.a.page1.stcn004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stcn004
            #add-point:ON CHANGE stcn004
            {<point name="input.g.page1.stcn004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn005
            #add-point:BEFORE FIELD stcn005
            {<point name="input.b.page1.stcn005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn005
            
            #add-point:AFTER FIELD stcn005
            {<point name="input.a.page1.stcn005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stcn005
            #add-point:ON CHANGE stcn005
            {<point name="input.g.page1.stcn005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn006
            #add-point:BEFORE FIELD stcn006
            {<point name="input.b.page1.stcn006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn006
            
            #add-point:AFTER FIELD stcn006
            {<point name="input.a.page1.stcn006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stcn006
            #add-point:ON CHANGE stcn006
            {<point name="input.g.page1.stcn006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn007
            #add-point:BEFORE FIELD stcn007
            {<point name="input.b.page1.stcn007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn007
            
            #add-point:AFTER FIELD stcn007
            {<point name="input.a.page1.stcn007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stcn007
            #add-point:ON CHANGE stcn007
            {<point name="input.g.page1.stcn007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn008
            #add-point:BEFORE FIELD stcn008
            {<point name="input.b.page1.stcn008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn008
            
            #add-point:AFTER FIELD stcn008
            {<point name="input.a.page1.stcn008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stcn008
            #add-point:ON CHANGE stcn008
            {<point name="input.g.page1.stcn008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn009
            #add-point:BEFORE FIELD stcn009
            {<point name="input.b.page1.stcn009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn009
            
            #add-point:AFTER FIELD stcn009
            {<point name="input.a.page1.stcn009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stcn009
            #add-point:ON CHANGE stcn009
            {<point name="input.g.page1.stcn009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn010
            #add-point:BEFORE FIELD stcn010
            {<point name="input.b.page1.stcn010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn010
            
            #add-point:AFTER FIELD stcn010
            {<point name="input.a.page1.stcn010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stcn010
            #add-point:ON CHANGE stcn010
            {<point name="input.g.page1.stcn010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn011
            #add-point:BEFORE FIELD stcn011
            {<point name="input.b.page1.stcn011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn011
            
            #add-point:AFTER FIELD stcn011
            {<point name="input.a.page1.stcn011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stcn011
            #add-point:ON CHANGE stcn011
            {<point name="input.g.page1.stcn011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn012
            #add-point:BEFORE FIELD stcn012
            {<point name="input.b.page1.stcn012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn012
            
            #add-point:AFTER FIELD stcn012
            {<point name="input.a.page1.stcn012" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stcn012
            #add-point:ON CHANGE stcn012
            {<point name="input.g.page1.stcn012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn013
            #add-point:BEFORE FIELD stcn013
            {<point name="input.b.page1.stcn013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn013
            
            #add-point:AFTER FIELD stcn013
            {<point name="input.a.page1.stcn013" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stcn013
            #add-point:ON CHANGE stcn013
            {<point name="input.g.page1.stcn013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn014
            #add-point:BEFORE FIELD stcn014
            {<point name="input.b.page1.stcn014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn014
            
            #add-point:AFTER FIELD stcn014
            {<point name="input.a.page1.stcn014" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stcn014
            #add-point:ON CHANGE stcn014
            {<point name="input.g.page1.stcn014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn015
            #add-point:BEFORE FIELD stcn015
            {<point name="input.b.page1.stcn015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn015
            
            #add-point:AFTER FIELD stcn015
            {<point name="input.a.page1.stcn015" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stcn015
            #add-point:ON CHANGE stcn015
            {<point name="input.g.page1.stcn015" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn016
            #add-point:BEFORE FIELD stcn016
            {<point name="input.b.page1.stcn016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn016
            
            #add-point:AFTER FIELD stcn016
            {<point name="input.a.page1.stcn016" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stcn016
            #add-point:ON CHANGE stcn016
            {<point name="input.g.page1.stcn016" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn017
            #add-point:BEFORE FIELD stcn017
            {<point name="input.b.page1.stcn017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn017
            
            #add-point:AFTER FIELD stcn017
            {<point name="input.a.page1.stcn017" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stcn017
            #add-point:ON CHANGE stcn017
            {<point name="input.g.page1.stcn017" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn018
            #add-point:BEFORE FIELD stcn018
            {<point name="input.b.page1.stcn018" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn018
            
            #add-point:AFTER FIELD stcn018
            {<point name="input.a.page1.stcn018" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stcn018
            #add-point:ON CHANGE stcn018
            {<point name="input.g.page1.stcn018" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcn019
            #add-point:BEFORE FIELD stcn019
            {<point name="input.b.page1.stcn019" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcn019
            
            #add-point:AFTER FIELD stcn019
            {<point name="input.a.page1.stcn019" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stcn019
            #add-point:ON CHANGE stcn019
            {<point name="input.g.page1.stcn019" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcnsite
            #add-point:BEFORE FIELD stcnsite
            {<point name="input.b.page1.stcnsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcnsite
            
            #add-point:AFTER FIELD stcnsite
            {<point name="input.a.page1.stcnsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stcnsite
            #add-point:ON CHANGE stcnsite
            {<point name="input.g.page1.stcnsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcnunit
            #add-point:BEFORE FIELD stcnunit
            {<point name="input.b.page1.stcnunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcnunit
            
            #add-point:AFTER FIELD stcnunit
            {<point name="input.a.page1.stcnunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stcnunit
            #add-point:ON CHANGE stcnunit
            {<point name="input.g.page1.stcnunit" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.stcnseq
         ON ACTION controlp INFIELD stcnseq
            #add-point:ON ACTION controlp INFIELD stcnseq
            {<point name="input.c.page1.stcnseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stcn001
         ON ACTION controlp INFIELD stcn001
            #add-point:ON ACTION controlp INFIELD stcn001
            {<point name="input.c.page1.stcn001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stcn002
         ON ACTION controlp INFIELD stcn002
            #add-point:ON ACTION controlp INFIELD stcn002
            {<point name="input.c.page1.stcn002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stcn003
         ON ACTION controlp INFIELD stcn003
            #add-point:ON ACTION controlp INFIELD stcn003
            {<point name="input.c.page1.stcn003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stcn004
         ON ACTION controlp INFIELD stcn004
            #add-point:ON ACTION controlp INFIELD stcn004
            {<point name="input.c.page1.stcn004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stcn005
         ON ACTION controlp INFIELD stcn005
            #add-point:ON ACTION controlp INFIELD stcn005
            {<point name="input.c.page1.stcn005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stcn006
         ON ACTION controlp INFIELD stcn006
            #add-point:ON ACTION controlp INFIELD stcn006
            {<point name="input.c.page1.stcn006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stcn007
         ON ACTION controlp INFIELD stcn007
            #add-point:ON ACTION controlp INFIELD stcn007
            {<point name="input.c.page1.stcn007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stcn008
         ON ACTION controlp INFIELD stcn008
            #add-point:ON ACTION controlp INFIELD stcn008
            {<point name="input.c.page1.stcn008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stcn009
         ON ACTION controlp INFIELD stcn009
            #add-point:ON ACTION controlp INFIELD stcn009
            {<point name="input.c.page1.stcn009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stcn010
         ON ACTION controlp INFIELD stcn010
            #add-point:ON ACTION controlp INFIELD stcn010
            {<point name="input.c.page1.stcn010" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stcn011
         ON ACTION controlp INFIELD stcn011
            #add-point:ON ACTION controlp INFIELD stcn011
            {<point name="input.c.page1.stcn011" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stcn012
         ON ACTION controlp INFIELD stcn012
            #add-point:ON ACTION controlp INFIELD stcn012
            {<point name="input.c.page1.stcn012" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stcn013
         ON ACTION controlp INFIELD stcn013
            #add-point:ON ACTION controlp INFIELD stcn013
            {<point name="input.c.page1.stcn013" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stcn014
         ON ACTION controlp INFIELD stcn014
            #add-point:ON ACTION controlp INFIELD stcn014
            {<point name="input.c.page1.stcn014" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stcn015
         ON ACTION controlp INFIELD stcn015
            #add-point:ON ACTION controlp INFIELD stcn015
            {<point name="input.c.page1.stcn015" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stcn016
         ON ACTION controlp INFIELD stcn016
            #add-point:ON ACTION controlp INFIELD stcn016
            {<point name="input.c.page1.stcn016" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stcn017
         ON ACTION controlp INFIELD stcn017
            #add-point:ON ACTION controlp INFIELD stcn017
            {<point name="input.c.page1.stcn017" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stcn018
         ON ACTION controlp INFIELD stcn018
            #add-point:ON ACTION controlp INFIELD stcn018
            {<point name="input.c.page1.stcn018" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stcn019
         ON ACTION controlp INFIELD stcn019
            #add-point:ON ACTION controlp INFIELD stcn019
            {<point name="input.c.page1.stcn019" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stcnsite
         ON ACTION controlp INFIELD stcnsite
            #add-point:ON ACTION controlp INFIELD stcnsite
            {<point name="input.c.page1.stcnsite" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stcnunit
         ON ACTION controlp INFIELD stcnunit
            #add-point:ON ACTION controlp INFIELD stcnunit
            {<point name="input.c.page1.stcnunit" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_stcn_d[l_ac].* = g_stcn_d_t.*
               CLOSE astt602_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_stcn_d[l_ac].stcnseq,-263,1)
               LET g_stcn_d[l_ac].* = g_stcn_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE stcn_t SET (stcndocno,stcnseq,stcn001,stcn002,stcn003,stcn004,stcn005,stcn006, 
                   stcn007,stcn008,stcn009,stcn010,stcn011,stcn012,stcn013,stcn014,stcn015,stcn016,stcn017, 
                   stcn018,stcn019,stcnsite,stcnunit) = (g_stcm_m.stcmdocno,g_stcn_d[l_ac].stcnseq,g_stcn_d[l_ac].stcn001, 
                   g_stcn_d[l_ac].stcn002,g_stcn_d[l_ac].stcn003,g_stcn_d[l_ac].stcn004,g_stcn_d[l_ac].stcn005, 
                   g_stcn_d[l_ac].stcn006,g_stcn_d[l_ac].stcn007,g_stcn_d[l_ac].stcn008,g_stcn_d[l_ac].stcn009, 
                   g_stcn_d[l_ac].stcn010,g_stcn_d[l_ac].stcn011,g_stcn_d[l_ac].stcn012,g_stcn_d[l_ac].stcn013, 
                   g_stcn_d[l_ac].stcn014,g_stcn_d[l_ac].stcn015,g_stcn_d[l_ac].stcn016,g_stcn_d[l_ac].stcn017, 
                   g_stcn_d[l_ac].stcn018,g_stcn_d[l_ac].stcn019,g_stcn_d[l_ac].stcnsite,g_stcn_d[l_ac].stcnunit) 

                WHERE stcnent = g_enterprise AND stcndocno = g_stcm_m.stcmdocno 
 
                  AND stcnseq = g_stcn_d_t.stcnseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("stcn_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_stcn_d[l_ac].* = g_stcn_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("stcn_t",SQLCA.sqlcode,1)
                     LET g_stcn_d[l_ac].* = g_stcn_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stcm_m.stcmdocno
               LET gs_keys_bak[1] = g_stcmdocno_t
               LET gs_keys[2] = g_stcn_d[g_detail_idx].stcnseq
               LET gs_keys_bak[2] = g_stcn_d_t.stcnseq
               CALL astt602_update_b('stcn_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_stcm_m),util.JSON.stringify(g_stcn_d_t)
               LET g_log2 = util.JSON.stringify(g_stcm_m),util.JSON.stringify(g_stcn_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL astt602_unlock_b("stcn_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_stcn_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_stcn_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_stcn2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stcn2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astt602_b_fill()
            LET g_rec_b = g_stcn2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stcn2_d[l_ac].* TO NULL 
            INITIALIZE g_stcn2_d_t.* TO NULL 
            INITIALIZE g_stcn2_d_o.* TO NULL 
            
            LET g_stcn2_d_t.* = g_stcn2_d[l_ac].*     #新輸入資料
            LET g_stcn2_d_o.* = g_stcn2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astt602_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL astt602_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stcn2_d[li_reproduce_target].* = g_stcn2_d[li_reproduce].*
 
               LET g_stcn2_d[li_reproduce_target].stcoseq = NULL
            END IF
            #公用欄位給值(單身2)
            
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astt602_cl USING g_enterprise,g_stcm_m.stcmdocno
            IF STATUS THEN
               CALL cl_err("OPEN astt602_cl:", STATUS, 1)
               CLOSE astt602_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_stcn2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stcn2_d[l_ac].stcoseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_stcn2_d_t.* = g_stcn2_d[l_ac].*  #BACKUP
               LET g_stcn2_d_o.* = g_stcn2_d[l_ac].*  #BACKUP
               CALL astt602_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL astt602_set_no_entry_b(l_cmd)
               IF NOT astt602_lock_b("stco_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astt602_bcl2 INTO g_stcn2_d[l_ac].stcoseq,g_stcn2_d[l_ac].stco001,g_stcn2_d[l_ac].stco002, 
                      g_stcn2_d[l_ac].stcosite,g_stcn2_d[l_ac].stcounit
                  IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL astt602_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_stcn2_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_stcn2_d.deleteElement(l_ac)
               NEXT FIELD stcoseq
            END IF
         
            IF g_stcn2_d[l_ac].stcoseq IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM stco_t
                WHERE stcoent = g_enterprise AND stcodocno = g_stcm_m.stcmdocno AND
                      stcoseq = g_stcn2_d_t.stcoseq
                  
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("stcn_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身2刪除後
                  {<point name="input.body2.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE astt602_bcl
               LET l_count = g_stcn_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stcm_m.stcmdocno
               LET gs_keys[2] = g_stcn2_d[g_detail_idx].stcoseq
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body2.after_delete"/>}
            #end add-point
                           CALL astt602_delete_b('stco_t',gs_keys,"'2'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM stco_t 
             WHERE stcoent = g_enterprise AND stcodocno = g_stcm_m.stcmdocno
               AND stcoseq = g_stcn2_d[l_ac].stcoseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stcm_m.stcmdocno
               LET gs_keys[2] = g_stcn2_d[g_detail_idx].stcoseq
               CALL astt602_insert_b('stco_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_stcn_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("stco_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astt602_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_stcn2_d[l_ac].* = g_stcn2_d_t.*
               CLOSE astt602_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_stcn2_d[l_ac].* = g_stcn2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               UPDATE stco_t SET (stcodocno,stcoseq,stco001,stco002,stcosite,stcounit) = (g_stcm_m.stcmdocno, 
                   g_stcn2_d[l_ac].stcoseq,g_stcn2_d[l_ac].stco001,g_stcn2_d[l_ac].stco002,g_stcn2_d[l_ac].stcosite, 
                   g_stcn2_d[l_ac].stcounit) #自訂欄位頁簽
                WHERE stcoent = g_enterprise AND stcodocno = g_stcm_m.stcmdocno
                  AND stcoseq = g_stcn2_d_t.stcoseq #項次 
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("stco_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_stcn2_d[l_ac].* = g_stcn2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("stco_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_stcn2_d[l_ac].* = g_stcn2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stcm_m.stcmdocno
               LET gs_keys_bak[1] = g_stcmdocno_t
               LET gs_keys[2] = g_stcn2_d[g_detail_idx].stcoseq
               LET gs_keys_bak[2] = g_stcn2_d_t.stcoseq
               CALL astt602_update_b('stco_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_stcm_m),util.JSON.stringify(g_stcn2_d_t)
               LET g_log2 = util.JSON.stringify(g_stcm_m),util.JSON.stringify(g_stcn2_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #此段落由子樣板a01產生
         BEFORE FIELD stcoseq
            #add-point:BEFORE FIELD stcoseq
            {<point name="input.b.page2.stcoseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcoseq
            
            #add-point:AFTER FIELD stcoseq
            {<point name="input.a.page2.stcoseq" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stcoseq
            #add-point:ON CHANGE stcoseq
            {<point name="input.g.page2.stcoseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stco001
            
            #add-point:AFTER FIELD stco001
            {<point name="input.a.page2.stco001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD stco001
            #add-point:BEFORE FIELD stco001
            {<point name="input.b.page2.stco001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE stco001
            #add-point:ON CHANGE stco001
            {<point name="input.g.page2.stco001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stco002
            #add-point:BEFORE FIELD stco002
            {<point name="input.b.page2.stco002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stco002
            
            #add-point:AFTER FIELD stco002
            {<point name="input.a.page2.stco002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stco002
            #add-point:ON CHANGE stco002
            {<point name="input.g.page2.stco002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcosite
            #add-point:BEFORE FIELD stcosite
            {<point name="input.b.page2.stcosite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcosite
            
            #add-point:AFTER FIELD stcosite
            {<point name="input.a.page2.stcosite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stcosite
            #add-point:ON CHANGE stcosite
            {<point name="input.g.page2.stcosite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcounit
            #add-point:BEFORE FIELD stcounit
            {<point name="input.b.page2.stcounit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcounit
            
            #add-point:AFTER FIELD stcounit
            {<point name="input.a.page2.stcounit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stcounit
            #add-point:ON CHANGE stcounit
            {<point name="input.g.page2.stcounit" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page2.stcoseq
         ON ACTION controlp INFIELD stcoseq
            #add-point:ON ACTION controlp INFIELD stcoseq
            {<point name="input.c.page2.stcoseq" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stco001
         ON ACTION controlp INFIELD stco001
            #add-point:ON ACTION controlp INFIELD stco001
            {<point name="input.c.page2.stco001" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stco002
         ON ACTION controlp INFIELD stco002
            #add-point:ON ACTION controlp INFIELD stco002
            {<point name="input.c.page2.stco002" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stcosite
         ON ACTION controlp INFIELD stcosite
            #add-point:ON ACTION controlp INFIELD stcosite
            {<point name="input.c.page2.stcosite" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stcounit
         ON ACTION controlp INFIELD stcounit
            #add-point:ON ACTION controlp INFIELD stcounit
            {<point name="input.c.page2.stcounit" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_stcn2_d[l_ac].* = g_stcn2_d_t.*
               END IF
               CLOSE astt602_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astt602_unlock_b("stco_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_stcn2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_stcn2_d.getLength()+1
 
      END INPUT
 
      
 
      
 
      
 
      
]]>
  </section>
  <section id="astt602.input.head" ver="6" status="" src="s">
    <![CDATA[      #單頭段
      INPUT BY NAME g_stcm_m.stcmdocdt,g_stcm_m.stcmdocno,g_stcm_m.stcmunit,g_stcm_m.stcm001,g_stcm_m.stcm003, 
          g_stcm_m.stcm004,g_stcm_m.stcm002,g_stcm_m.stcmstus,g_stcm_m.stcm008,g_stcm_m.stcm009,g_stcm_m.stcm016, 
          g_stcm_m.stcm017,g_stcm_m.stcm010,g_stcm_m.stcm011,g_stcm_m.stcm012,g_stcm_m.stcm018,g_stcm_m.stcm019  

         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a01產生
         BEFORE FIELD stcmdocdt
            #add-point:BEFORE FIELD stcmdocdt
            {<point name="input.b.stcmdocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcmdocdt
            
            #add-point:AFTER FIELD stcmdocdt
            {<point name="input.a.stcmdocdt" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stcmdocdt
            #add-point:ON CHANGE stcmdocdt
            {<point name="input.g.stcmdocdt" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcmdocno
            #add-point:BEFORE FIELD stcmdocno
            {<point name="input.b.stcmdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcmdocno
            
            #add-point:AFTER FIELD stcmdocno
            {<point name="input.a.stcmdocno" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stcmdocno
            #add-point:ON CHANGE stcmdocno
            {<point name="input.g.stcmdocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcmunit
            #add-point:BEFORE FIELD stcmunit
            {<point name="input.b.stcmunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcmunit
            
            #add-point:AFTER FIELD stcmunit
            {<point name="input.a.stcmunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stcmunit
            #add-point:ON CHANGE stcmunit
            {<point name="input.g.stcmunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcm001
            #add-point:BEFORE FIELD stcm001
            {<point name="input.b.stcm001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcm001
            
            #add-point:AFTER FIELD stcm001
            {<point name="input.a.stcm001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stcm001
            #add-point:ON CHANGE stcm001
            {<point name="input.g.stcm001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcm003
            
            #add-point:AFTER FIELD stcm003
            {<point name="input.a.stcm003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcm003
            #add-point:BEFORE FIELD stcm003
            {<point name="input.b.stcm003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE stcm003
            #add-point:ON CHANGE stcm003
            {<point name="input.g.stcm003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcm004
            
            #add-point:AFTER FIELD stcm004
            {<point name="input.a.stcm004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcm004
            #add-point:BEFORE FIELD stcm004
            {<point name="input.b.stcm004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE stcm004
            #add-point:ON CHANGE stcm004
            {<point name="input.g.stcm004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcm002
            #add-point:BEFORE FIELD stcm002
            {<point name="input.b.stcm002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcm002
            
            #add-point:AFTER FIELD stcm002
            {<point name="input.a.stcm002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stcm002
            #add-point:ON CHANGE stcm002
            {<point name="input.g.stcm002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcmstus
            #add-point:BEFORE FIELD stcmstus
            {<point name="input.b.stcmstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcmstus
            
            #add-point:AFTER FIELD stcmstus
            {<point name="input.a.stcmstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stcmstus
            #add-point:ON CHANGE stcmstus
            {<point name="input.g.stcmstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcm008
            
            #add-point:AFTER FIELD stcm008
            {<point name="input.a.stcm008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcm008
            #add-point:BEFORE FIELD stcm008
            {<point name="input.b.stcm008" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE stcm008
            #add-point:ON CHANGE stcm008
            {<point name="input.g.stcm008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcm009
            
            #add-point:AFTER FIELD stcm009
            {<point name="input.a.stcm009" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcm009
            #add-point:BEFORE FIELD stcm009
            {<point name="input.b.stcm009" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE stcm009
            #add-point:ON CHANGE stcm009
            {<point name="input.g.stcm009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcm016
            
            #add-point:AFTER FIELD stcm016
            {<point name="input.a.stcm016" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcm016
            #add-point:BEFORE FIELD stcm016
            {<point name="input.b.stcm016" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE stcm016
            #add-point:ON CHANGE stcm016
            {<point name="input.g.stcm016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcm017
            
            #add-point:AFTER FIELD stcm017
            {<point name="input.a.stcm017" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcm017
            #add-point:BEFORE FIELD stcm017
            {<point name="input.b.stcm017" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE stcm017
            #add-point:ON CHANGE stcm017
            {<point name="input.g.stcm017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcm010
            
            #add-point:AFTER FIELD stcm010
            {<point name="input.a.stcm010" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcm010
            #add-point:BEFORE FIELD stcm010
            {<point name="input.b.stcm010" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE stcm010
            #add-point:ON CHANGE stcm010
            {<point name="input.g.stcm010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcm011
            
            #add-point:AFTER FIELD stcm011
            {<point name="input.a.stcm011" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcm011
            #add-point:BEFORE FIELD stcm011
            {<point name="input.b.stcm011" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE stcm011
            #add-point:ON CHANGE stcm011
            {<point name="input.g.stcm011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcm012
            
            #add-point:AFTER FIELD stcm012
            {<point name="input.a.stcm012" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcm012
            #add-point:BEFORE FIELD stcm012
            {<point name="input.b.stcm012" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE stcm012
            #add-point:ON CHANGE stcm012
            {<point name="input.g.stcm012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcm018
            #add-point:BEFORE FIELD stcm018
            {<point name="input.b.stcm018" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcm018
            
            #add-point:AFTER FIELD stcm018
            {<point name="input.a.stcm018" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stcm018
            #add-point:ON CHANGE stcm018
            {<point name="input.g.stcm018" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stcm019
            #add-point:BEFORE FIELD stcm019
            {<point name="input.b.stcm019" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stcm019
            
            #add-point:AFTER FIELD stcm019
            {<point name="input.a.stcm019" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stcm019
            #add-point:ON CHANGE stcm019
            {<point name="input.g.stcm019" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.stcmdocdt
         ON ACTION controlp INFIELD stcmdocdt
            #add-point:ON ACTION controlp INFIELD stcmdocdt
            {<point name="input.c.stcmdocdt" />}
            #END add-point
 
         #Ctrlp:input.c.stcmdocno
         ON ACTION controlp INFIELD stcmdocno
            #add-point:ON ACTION controlp INFIELD stcmdocno
            {<point name="input.c.stcmdocno" />}
            #END add-point
 
         #Ctrlp:input.c.stcmunit
         ON ACTION controlp INFIELD stcmunit
            #add-point:ON ACTION controlp INFIELD stcmunit
            {<point name="input.c.stcmunit" />}
            #END add-point
 
         #Ctrlp:input.c.stcm001
         ON ACTION controlp INFIELD stcm001
            #add-point:ON ACTION controlp INFIELD stcm001
            {<point name="input.c.stcm001" />}
            #END add-point
 
         #Ctrlp:input.c.stcm003
         ON ACTION controlp INFIELD stcm003
            #add-point:ON ACTION controlp INFIELD stcm003
            {<point name="input.c.stcm003" />}
            #END add-point
 
         #Ctrlp:input.c.stcm004
         ON ACTION controlp INFIELD stcm004
            #add-point:ON ACTION controlp INFIELD stcm004
            {<point name="input.c.stcm004" />}
            #END add-point
 
         #Ctrlp:input.c.stcm002
         ON ACTION controlp INFIELD stcm002
            #add-point:ON ACTION controlp INFIELD stcm002
            {<point name="input.c.stcm002" />}
            #END add-point
 
         #Ctrlp:input.c.stcmstus
         ON ACTION controlp INFIELD stcmstus
            #add-point:ON ACTION controlp INFIELD stcmstus
            {<point name="input.c.stcmstus" />}
            #END add-point
 
         #Ctrlp:input.c.stcm008
         ON ACTION controlp INFIELD stcm008
            #add-point:ON ACTION controlp INFIELD stcm008
            {<point name="input.c.stcm008" />}
            #END add-point
 
         #Ctrlp:input.c.stcm009
         ON ACTION controlp INFIELD stcm009
            #add-point:ON ACTION controlp INFIELD stcm009
            {<point name="input.c.stcm009" />}
            #END add-point
 
         #Ctrlp:input.c.stcm016
         ON ACTION controlp INFIELD stcm016
            #add-point:ON ACTION controlp INFIELD stcm016
            {<point name="input.c.stcm016" />}
            #END add-point
 
         #Ctrlp:input.c.stcm017
         ON ACTION controlp INFIELD stcm017
            #add-point:ON ACTION controlp INFIELD stcm017
            {<point name="input.c.stcm017" />}
            #END add-point
 
         #Ctrlp:input.c.stcm010
         ON ACTION controlp INFIELD stcm010
            #add-point:ON ACTION controlp INFIELD stcm010
            {<point name="input.c.stcm010" />}
            #END add-point
 
         #Ctrlp:input.c.stcm011
         ON ACTION controlp INFIELD stcm011
            #add-point:ON ACTION controlp INFIELD stcm011
            {<point name="input.c.stcm011" />}
            #END add-point
 
         #Ctrlp:input.c.stcm012
         ON ACTION controlp INFIELD stcm012
            #add-point:ON ACTION controlp INFIELD stcm012
            {<point name="input.c.stcm012" />}
            #END add-point
 
         #Ctrlp:input.c.stcm018
         ON ACTION controlp INFIELD stcm018
            #add-point:ON ACTION controlp INFIELD stcm018
            {<point name="input.c.stcm018" />}
            #END add-point
 
         #Ctrlp:input.c.stcm019
         ON ACTION controlp INFIELD stcm019
            #add-point:ON ACTION controlp INFIELD stcm019
            {<point name="input.c.stcm019" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_stcm_m.stcmdocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO stcm_t (stcment,stcmsite,stcmdocdt,stcmdocno,stcmunit,stcm001,stcm003,stcm004, 
                   stcm002,stcm005,stcm006,stcm007,stcmstus,stcm008,stcm009,stcm016,stcm017,stcm010, 
                   stcm011,stcm012,stcm018,stcm013,stcm014,stcm015,stcm019,stcmownid,stcmowndp,stcmcrtid, 
                   stcmcrtdp,stcmcrtdt,stcmcnfid,stcmcnfdt)
               VALUES (g_enterprise,g_stcm_m.stcmsite,g_stcm_m.stcmdocdt,g_stcm_m.stcmdocno,g_stcm_m.stcmunit, 
                   g_stcm_m.stcm001,g_stcm_m.stcm003,g_stcm_m.stcm004,g_stcm_m.stcm002,g_stcm_m.stcm005, 
                   g_stcm_m.stcm006,g_stcm_m.stcm007,g_stcm_m.stcmstus,g_stcm_m.stcm008,g_stcm_m.stcm009, 
                   g_stcm_m.stcm016,g_stcm_m.stcm017,g_stcm_m.stcm010,g_stcm_m.stcm011,g_stcm_m.stcm012, 
                   g_stcm_m.stcm018,g_stcm_m.stcm013,g_stcm_m.stcm014,g_stcm_m.stcm015,g_stcm_m.stcm019, 
                   g_stcm_m.stcmownid,g_stcm_m.stcmowndp,g_stcm_m.stcmcrtid,g_stcm_m.stcmcrtdp,g_stcm_m.stcmcrtdt, 
                   g_stcm_m.stcmcnfid,g_stcm_m.stcmcnfdt) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_stcm_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL astt602_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE stcm_t SET (stcmsite,stcmdocdt,stcmdocno,stcmunit,stcm001,stcm003,stcm004,stcm002, 
                   stcm005,stcm006,stcm007,stcmstus,stcm008,stcm009,stcm016,stcm017,stcm010,stcm011, 
                   stcm012,stcm018,stcm013,stcm014,stcm015,stcm019,stcmownid,stcmowndp,stcmcrtid,stcmcrtdp, 
                   stcmcrtdt,stcmcnfid,stcmcnfdt) = (g_stcm_m.stcmsite,g_stcm_m.stcmdocdt,g_stcm_m.stcmdocno, 
                   g_stcm_m.stcmunit,g_stcm_m.stcm001,g_stcm_m.stcm003,g_stcm_m.stcm004,g_stcm_m.stcm002, 
                   g_stcm_m.stcm005,g_stcm_m.stcm006,g_stcm_m.stcm007,g_stcm_m.stcmstus,g_stcm_m.stcm008, 
                   g_stcm_m.stcm009,g_stcm_m.stcm016,g_stcm_m.stcm017,g_stcm_m.stcm010,g_stcm_m.stcm011, 
                   g_stcm_m.stcm012,g_stcm_m.stcm018,g_stcm_m.stcm013,g_stcm_m.stcm014,g_stcm_m.stcm015, 
                   g_stcm_m.stcm019,g_stcm_m.stcmownid,g_stcm_m.stcmowndp,g_stcm_m.stcmcrtid,g_stcm_m.stcmcrtdp, 
                   g_stcm_m.stcmcrtdt,g_stcm_m.stcmcnfid,g_stcm_m.stcmcnfdt)
                WHERE stcment = g_enterprise AND stcmdocno = g_stcmdocno_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("stcm_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               LET g_log1 = util.JSON.stringify(g_stcm_m_t)
               LET g_log2 = util.JSON.stringify(g_stcm_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_stcmdocno_t = g_stcm_m.stcmdocno
 
            #controlp
            
      END INPUT
   
]]>
  </section>
  <section id="astt602.input.other" ver="1" status="" src="s">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD stcmdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD stcnseq
               WHEN "s_detail2"
                  NEXT FIELD stcoseq
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="astt602.insert" ver="3" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION astt602_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_stcn_d.clear()   
   CALL g_stcn2_d.clear()  
 
 
   INITIALIZE g_stcm_m.* LIKE stcm_t.*             #DEFAULT 設定
   
   LET g_stcmdocno_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_stcm_m.stcmownid = g_user
      LET g_stcm_m.stcmowndp = g_dept
      LET g_stcm_m.stcmcrtid = g_user
      LET g_stcm_m.stcmcrtdp = g_dept 
      LET g_stcm_m.stcmcrtdt = cl_get_current()
      LET g_stcm_m.stcmmodid = ""
      LET g_stcm_m.stcmmoddt = ""
      LET g_stcm_m.stcmstus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
      
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL astt602_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_stcm_m.* = g_stcm_m_t.*
         CALL astt602_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_stcn_d.clear()
      CALL g_stcn2_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_stcmdocno_t = g_stcm_m.stcmdocno
 
   
   LET g_wc = g_wc,  
              " OR ( stcment = '" ||g_enterprise|| "' AND",
              " stcmdocno = '", g_stcm_m.stcmdocno CLIPPED, "' "
 
              , ") "
   
   CLOSE astt602_cl
   
END FUNCTION
]]>
  </section>
  <section id="astt602.insert_b" ver="1" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION astt602_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO stcn_t
                  (stcnent,
                   stcndocno,
                   stcnseq
                   ,stcn001,stcn002,stcn003,stcn004,stcn005,stcn006,stcn007,stcn008,stcn009,stcn010,stcn011,stcn012,stcn013,stcn014,stcn015,stcn016,stcn017,stcn018,stcn019,stcnsite,stcnunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stcn_d[g_detail_idx].stcn001,g_stcn_d[g_detail_idx].stcn002,g_stcn_d[g_detail_idx].stcn003, 
                       g_stcn_d[g_detail_idx].stcn004,g_stcn_d[g_detail_idx].stcn005,g_stcn_d[g_detail_idx].stcn006, 
                       g_stcn_d[g_detail_idx].stcn007,g_stcn_d[g_detail_idx].stcn008,g_stcn_d[g_detail_idx].stcn009, 
                       g_stcn_d[g_detail_idx].stcn010,g_stcn_d[g_detail_idx].stcn011,g_stcn_d[g_detail_idx].stcn012, 
                       g_stcn_d[g_detail_idx].stcn013,g_stcn_d[g_detail_idx].stcn014,g_stcn_d[g_detail_idx].stcn015, 
                       g_stcn_d[g_detail_idx].stcn016,g_stcn_d[g_detail_idx].stcn017,g_stcn_d[g_detail_idx].stcn018, 
                       g_stcn_d[g_detail_idx].stcn019,g_stcn_d[g_detail_idx].stcnsite,g_stcn_d[g_detail_idx].stcnunit) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("stcn_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO stco_t
                  (stcoent,
                   stcodocno,
                   stcoseq
                   ,stco001,stco002,stcosite,stcounit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stcn2_d[g_detail_idx].stco001,g_stcn2_d[g_detail_idx].stco002,g_stcn2_d[g_detail_idx].stcosite, 
                       g_stcn2_d[g_detail_idx].stcounit)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("stco_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="astt602.lock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION astt602_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL astt602_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "stcn_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN astt602_bcl USING g_enterprise,
                                       g_stcm_m.stcmdocno,g_stcn_d[g_detail_idx].stcnseq     
      IF SQLCA.sqlcode THEN
         CALL cl_err("astt602_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "stco_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astt602_bcl2 USING g_enterprise,
                                             g_stcm_m.stcmdocno,g_stcn2_d[g_detail_idx].stcoseq
      IF SQLCA.sqlcode THEN
         CALL cl_err("astt602_bcl2",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="astt602.main" ver="11" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ast","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT stcmsite,'',stcmdocdt,stcmdocno,stcmunit,stcm001,stcm003,'',stcm004,'', 
       stcm002,stcm005,stcm006,'',stcm007,'',stcmstus,stcm008,'',stcm009,'',stcm016,'',stcm017,'','', 
       stcm010,'',stcm011,'',stcm012,'',stcm018,'',stcm013,'',stcm014,'',stcm015,'',stcm019,stcmownid, 
       '',stcmowndp,'',stcmcrtid,'',stcmcrtdp,'',stcmcrtdt,stcmmodid,'',stcmmoddt,stcmcnfid,'',stcmcnfdt", 
        
                      " FROM stcm_t",
                      " WHERE stcment= ? AND stcmdocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt602_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE stcmsite,stcmdocdt,stcmdocno,stcmunit,stcm001,stcm003,stcm004,stcm002, 
       stcm005,stcm006,stcm007,stcmstus,stcm008,stcm009,stcm016,stcm017,stcm010,stcm011,stcm012,stcm018, 
       stcm013,stcm014,stcm015,stcm019,stcmownid,stcmowndp,stcmcrtid,stcmcrtdp,stcmcrtdt,stcmmodid,stcmmoddt, 
       stcmcnfid,stcmcnfdt,t1.ooefl003 ,t2.pmaal004 ,t3.pmaal004 ,t4.staal003 ,t5.oocql004 ,t6.oofa011 , 
       t7.ooefl003 ,t8.ooail003 ,t9.ooefl003 ,t10.ooefl003 ,t11.dbbcl003 ,t12.oojdl003 ,t13.dbbal003 , 
       t14.ooefl003 ,t15.oofa011 ,t16.ooefl003 ,t17.oofa011 ,t18.ooefl003 ,t19.oofa011 ,t20.oofa011", 

               " FROM stcm_t",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=stcmsite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t2 ON t2.pmaalent='"||g_enterprise||"' AND t2.pmaal001=stcm003 AND t2.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t3 ON t3.pmaalent='"||g_enterprise||"' AND t3.pmaal001=stcm004 AND t3.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN staal_t t4 ON t4.staalent='"||g_enterprise||"' AND t4.staal001=stcm006 AND t4.staal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t5 ON t5.oocqlent='"||g_enterprise||"' AND t5.oocql001='2060' AND t5.oocql002=stcm007 AND t5.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t6 ON t6.oofaent='"||g_enterprise||"' AND t6.oofa002='2' AND t6.oofa003=stcm008  ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent='"||g_enterprise||"' AND t7.ooefl001=stcm009 AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t8 ON t8.ooailent='"||g_enterprise||"' AND t8.ooail001=stcm016 AND t8.ooail002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t9 ON t9.ooeflent='"||g_enterprise||"' AND t9.ooefl001=stcm010 AND t9.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t10 ON t10.ooeflent='"||g_enterprise||"' AND t10.ooefl001=stcm011 AND t10.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN dbbcl_t t11 ON t11.dbbclent='"||g_enterprise||"' AND t11.dbbcl001=stcm012 AND t11.dbbcl002='"||g_dlang||"' ",
               " LEFT JOIN oojdl_t t12 ON t12.oojdlent='"||g_enterprise||"' AND t12.oojdl001=stcm013 AND t12.oojdl002='"||g_dlang||"' ",
               " LEFT JOIN dbbal_t t13 ON t13.dbbalent='"||g_enterprise||"' AND t13.dbbal001=stcm014 AND t13.dbbal002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t14 ON t14.ooeflent='"||g_enterprise||"' AND t14.ooefl001=stcm015 AND t14.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t15 ON t15.oofaent='"||g_enterprise||"' AND t15.oofa002='2' AND t15.oofa003=stcmownid  ",
               " LEFT JOIN ooefl_t t16 ON t16.ooeflent='"||g_enterprise||"' AND t16.ooefl001=stcmowndp AND t16.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t17 ON t17.oofaent='"||g_enterprise||"' AND t17.oofa002='2' AND t17.oofa003=stcmcrtid  ",
               " LEFT JOIN ooefl_t t18 ON t18.ooeflent='"||g_enterprise||"' AND t18.ooefl001=stcmcrtdp AND t18.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t19 ON t19.oofaent='"||g_enterprise||"' AND t19.oofa002='2' AND t19.oofa003=stcmmodid  ",
               " LEFT JOIN oofa_t t20 ON t20.oofaent='"||g_enterprise||"' AND t20.oofa002='2' AND t20.oofa003=stcmcnfid  ",
 
               " WHERE stcment = '" ||g_enterprise|| "' AND stcmdocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE astt602_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_astt602 WITH FORM cl_ap_formpath("ast",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL astt602_init()   
 
      #進入選單 Menu (="N")
      CALL astt602_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_astt602
      
   END IF 
   
   CLOSE astt602_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="astt602.modify" ver="9" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION astt602_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_stcm_m.stcmdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   ERROR ""
  
   LET g_stcmdocno_t = g_stcm_m.stcmdocno
 
   CALL s_transaction_begin()
   
   OPEN astt602_cl USING g_enterprise,g_stcm_m.stcmdocno
   IF STATUS THEN
      CALL cl_err("OPEN astt602_cl:", STATUS, 1)
      CLOSE astt602_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE astt602_master_referesh USING g_stcm_m.stcmdocno INTO g_stcm_m.stcmsite,g_stcm_m.stcmdocdt, 
       g_stcm_m.stcmdocno,g_stcm_m.stcmunit,g_stcm_m.stcm001,g_stcm_m.stcm003,g_stcm_m.stcm004,g_stcm_m.stcm002, 
       g_stcm_m.stcm005,g_stcm_m.stcm006,g_stcm_m.stcm007,g_stcm_m.stcmstus,g_stcm_m.stcm008,g_stcm_m.stcm009, 
       g_stcm_m.stcm016,g_stcm_m.stcm017,g_stcm_m.stcm010,g_stcm_m.stcm011,g_stcm_m.stcm012,g_stcm_m.stcm018, 
       g_stcm_m.stcm013,g_stcm_m.stcm014,g_stcm_m.stcm015,g_stcm_m.stcm019,g_stcm_m.stcmownid,g_stcm_m.stcmowndp, 
       g_stcm_m.stcmcrtid,g_stcm_m.stcmcrtdp,g_stcm_m.stcmcrtdt,g_stcm_m.stcmmodid,g_stcm_m.stcmmoddt, 
       g_stcm_m.stcmcnfid,g_stcm_m.stcmcnfdt,g_stcm_m.stcmsite_desc,g_stcm_m.stcm003_desc,g_stcm_m.stcm004_desc, 
       g_stcm_m.stcm006_desc,g_stcm_m.stcm007_desc,g_stcm_m.stcm008_desc,g_stcm_m.stcm009_desc,g_stcm_m.stcm016_desc, 
       g_stcm_m.stcm010_desc,g_stcm_m.stcm011_desc,g_stcm_m.stcm012_desc,g_stcm_m.stcm013_desc,g_stcm_m.stcm014_desc, 
       g_stcm_m.stcm015_desc,g_stcm_m.stcmownid_desc,g_stcm_m.stcmowndp_desc,g_stcm_m.stcmcrtid_desc, 
       g_stcm_m.stcmcrtdp_desc,g_stcm_m.stcmmodid_desc,g_stcm_m.stcmcnfid_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_stcm_m.stcmdocno,SQLCA.sqlcode,0)
      CLOSE astt602_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL astt602_show()
   WHILE TRUE
      LET g_stcmdocno_t = g_stcm_m.stcmdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_stcm_m.stcmmodid = g_user 
LET g_stcm_m.stcmmoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL astt602_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_stcm_m.* = g_stcm_m_t.*
         CALL astt602_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE stcm_t SET (stcmmodid,stcmmoddt) = (g_stcm_m.stcmmodid,g_stcm_m.stcmmoddt)
       WHERE stcment = g_enterprise AND stcmdocno = g_stcmdocno_t
 
                  
      #若單頭key欄位有變更
      IF g_stcm_m.stcmdocno != g_stcmdocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE stcn_t SET stcndocno = g_stcm_m.stcmdocno
 
          WHERE stcnent = g_enterprise AND stcndocno = g_stcmdocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("stcn_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("stcn_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         UPDATE stco_t
            SET stcodocno = g_stcm_m.stcmdocno
 
          WHERE stcoent = g_enterprise AND
                stcodocno = g_stcmdocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("stco_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("stco_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_stcm_m.stcmdocno,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE astt602_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_stcm_m.stcmdocno,'U')
 
END FUNCTION   
]]>
  </section>
  <section id="astt602.other_dialog" ver="2" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="astt602.other_function" ver="1" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="astt602.query" ver="6" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION astt602_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_stcn_d.clear()
   CALL g_stcn2_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL astt602_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL astt602_browser_fill("")
      CALL astt602_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL astt602_filter_show('stcmdocno')
   CALL astt602_filter_show('stcmdocdt')
   CALL astt602_filter_show('stcmsite')
   CALL astt602_filter_show('stcm001')
   CALL astt602_filter_show('stcm003')
   CALL astt602_filter_show('stcm004')
   CALL astt602_filter_show('stcm005')
   CALL astt602_filter_show('stcm006')
   CALL astt602_filter_show('stcm007')
   CALL astt602_filter_show('stcm008')
   CALL astt602_filter_show('stcm009')
   CALL astt602_filter_show('stcm010')
   CALL astt602_filter_show('stcm011')
   CALL astt602_filter_show('stcm012')
   CALL astt602_filter_show('stcm013')
   CALL astt602_filter_show('stcm014')
   CALL astt602_filter_show('stcm015')
   CALL astt602_filter_show('stcm016')
   CALL astt602_filter_show('stcm017')
   CALL astt602_filter_show('stcm018')
   CALL astt602_filter_show('stcm019')
   CALL astt602_filter_show('stcmunit')
   CALL astt602_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL astt602_fetch("F") 
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="astt602.reproduce" ver="2" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION astt602_reproduce()
   DEFINE l_newno     LIKE stcm_t.stcmdocno 
   DEFINE l_oldno     LIKE stcm_t.stcmdocno 
 
   DEFINE l_master    RECORD LIKE stcm_t.*
   DEFINE l_detail    RECORD LIKE stcn_t.*
   DEFINE l_detail2    RECORD LIKE stco_t.*
 
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_stcm_m.stcmdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_stcmdocno_t = g_stcm_m.stcmdocno
 
    
   LET g_stcm_m.stcmdocno = ""
 
    
   CALL astt602_set_entry('a')
   CALL astt602_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_stcm_m.stcmownid = g_user
      LET g_stcm_m.stcmowndp = g_dept
      LET g_stcm_m.stcmcrtid = g_user
      LET g_stcm_m.stcmcrtdp = g_dept 
      LET g_stcm_m.stcmcrtdt = cl_get_current()
      LET g_stcm_m.stcmmodid = ""
      LET g_stcm_m.stcmmoddt = ""
      LET g_stcm_m.stcmstus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL astt602_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = g_wc,  
              " OR (",
              " stcmdocno = '", g_stcm_m.stcmdocno CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="astt602.set_entry" ver="1" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION astt602_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("stcmdocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="astt602.set_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION astt602_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="astt602.set_no_entry" ver="1" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION astt602_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("stcmdocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="astt602.set_no_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION astt602_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="astt602.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION astt602_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_stcm_m.stcmdocno
   LET g_pk_array[1].column = 'stcmdocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="astt602.show" ver="5" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION astt602_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL astt602_b_fill() #單身填充
      CALL astt602_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_stcm_m.stcmownid_desc = cl_get_username(g_stcm_m.stcmownid)
      #LET g_stcm_m.stcmowndp_desc = cl_get_deptname(g_stcm_m.stcmowndp)
      #LET g_stcm_m.stcmcrtid_desc = cl_get_username(g_stcm_m.stcmcrtid)
      #LET g_stcm_m.stcmcrtdp_desc = cl_get_deptname(g_stcm_m.stcmcrtdp)
      #LET g_stcm_m.stcmmodid_desc = cl_get_username(g_stcm_m.stcmmodid)
      #LET g_stcm_m.stcmcnfid_desc = cl_get_deptname(g_stcm_m.stcmcnfid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL astt602_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_stcm_m.stcmsite,g_stcm_m.stcmsite_desc,g_stcm_m.stcmdocdt,g_stcm_m.stcmdocno,g_stcm_m.stcmunit, 
       g_stcm_m.stcm001,g_stcm_m.stcm003,g_stcm_m.stcm003_desc,g_stcm_m.stcm004,g_stcm_m.stcm004_desc, 
       g_stcm_m.stcm002,g_stcm_m.stcm005,g_stcm_m.stcm006,g_stcm_m.stcm006_desc,g_stcm_m.stcm007,g_stcm_m.stcm007_desc, 
       g_stcm_m.stcmstus,g_stcm_m.stcm008,g_stcm_m.stcm008_desc,g_stcm_m.stcm009,g_stcm_m.stcm009_desc, 
       g_stcm_m.stcm016,g_stcm_m.stcm016_desc,g_stcm_m.stcm017,g_stcm_m.stcm017_desc,g_stcm_m.next_b, 
       g_stcm_m.stcm010,g_stcm_m.stcm010_desc,g_stcm_m.stcm011,g_stcm_m.stcm011_desc,g_stcm_m.stcm012, 
       g_stcm_m.stcm012_desc,g_stcm_m.stcm018,g_stcm_m.num,g_stcm_m.stcm013,g_stcm_m.stcm013_desc,g_stcm_m.stcm014, 
       g_stcm_m.stcm014_desc,g_stcm_m.stcm015,g_stcm_m.stcm015_desc,g_stcm_m.stcm019,g_stcm_m.stcmownid, 
       g_stcm_m.stcmownid_desc,g_stcm_m.stcmowndp,g_stcm_m.stcmowndp_desc,g_stcm_m.stcmcrtid,g_stcm_m.stcmcrtid_desc, 
       g_stcm_m.stcmcrtdp,g_stcm_m.stcmcrtdp_desc,g_stcm_m.stcmcrtdt,g_stcm_m.stcmmodid,g_stcm_m.stcmmodid_desc, 
       g_stcm_m.stcmmoddt,g_stcm_m.stcmcnfid,g_stcm_m.stcmcnfid_desc,g_stcm_m.stcmcnfdt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_stcm_m.stcmstus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_stcn_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_stcn2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL astt602_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="astt602.signature" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="astt602.state_change" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION astt602_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_stcm_m.stcmdocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_stcm_m.stcmstus
            WHEN "N"
               HIDE OPTION "open"
            WHEN "X"
               HIDE OPTION "void"
            WHEN "Y"
               HIDE OPTION "valid"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION open
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.open"/>}
         #end add-point
         EXIT MENU
      ON ACTION void
         LET lc_state = "X"
         #add-point:action控制
         {<point name="statechange.void"/>}
         #end add-point
         EXIT MENU
      ON ACTION valid
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.valid"/>}
         #end add-point
         EXIT MENU
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "X"
      AND lc_state <> "Y"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE stcm_t SET stcmstus = lc_state 
    WHERE stcment = g_enterprise AND stcmdocno = g_stcm_m.stcmdocno
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         
      END CASE
      LET g_stcm_m.stcmstus = lc_state
      DISPLAY BY NAME g_stcm_m.stcmstus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
  </section>
  <section id="astt602.ui_browser_refresh" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION astt602_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_stcmdocno = g_stcm_m.stcmdocno 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="astt602.ui_detailshow" ver="1" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION astt602_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="astt602.ui_dialog" ver="2" status="" src="s">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION astt602_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL astt602_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL astt602_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_stcmdocno = g_stcmdocno_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL astt602_fetch('') # reload data
               LET l_ac = 1
               CALL astt602_ui_detailshow() #Setting the current row 
      
               CALL astt602_idx_chk()
               #NEXT FIELD stcnseq
         
         END DISPLAY
        
         DISPLAY ARRAY g_stcn_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL astt602_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL astt602_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_stcn2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL astt602_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               CALL astt602_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL astt602_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL astt602_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL astt602_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL astt602_statechange()
            EXIT DIALOG
      
         
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL astt602_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL astt602_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL astt602_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL astt602_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL astt602_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astt602_idx_chk()
            
         ON ACTION previous
            CALL astt602_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astt602_idx_chk()
            
         ON ACTION jump
            CALL astt602_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astt602_idx_chk()
            
         ON ACTION next
            CALL astt602_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astt602_idx_chk()
            
         ON ACTION last
            CALL astt602_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astt602_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD stcnseq
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL astt602_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL astt602_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL astt602_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL astt602_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL astt602_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL astt602_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL astt602_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL astt602_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL astt602_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_stcm_m.stcmdocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="astt602.ui_headershow" ver="8" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION astt602_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_stcm_m.stcmdocno = g_browser[g_current_idx].b_stcmdocno   
 
   EXECUTE astt602_master_referesh USING g_stcm_m.stcmdocno INTO g_stcm_m.stcmsite,g_stcm_m.stcmdocdt, 
       g_stcm_m.stcmdocno,g_stcm_m.stcmunit,g_stcm_m.stcm001,g_stcm_m.stcm003,g_stcm_m.stcm004,g_stcm_m.stcm002, 
       g_stcm_m.stcm005,g_stcm_m.stcm006,g_stcm_m.stcm007,g_stcm_m.stcmstus,g_stcm_m.stcm008,g_stcm_m.stcm009, 
       g_stcm_m.stcm016,g_stcm_m.stcm017,g_stcm_m.stcm010,g_stcm_m.stcm011,g_stcm_m.stcm012,g_stcm_m.stcm018, 
       g_stcm_m.stcm013,g_stcm_m.stcm014,g_stcm_m.stcm015,g_stcm_m.stcm019,g_stcm_m.stcmownid,g_stcm_m.stcmowndp, 
       g_stcm_m.stcmcrtid,g_stcm_m.stcmcrtdp,g_stcm_m.stcmcrtdt,g_stcm_m.stcmmodid,g_stcm_m.stcmmoddt, 
       g_stcm_m.stcmcnfid,g_stcm_m.stcmcnfdt,g_stcm_m.stcmsite_desc,g_stcm_m.stcm003_desc,g_stcm_m.stcm004_desc, 
       g_stcm_m.stcm006_desc,g_stcm_m.stcm007_desc,g_stcm_m.stcm008_desc,g_stcm_m.stcm009_desc,g_stcm_m.stcm016_desc, 
       g_stcm_m.stcm010_desc,g_stcm_m.stcm011_desc,g_stcm_m.stcm012_desc,g_stcm_m.stcm013_desc,g_stcm_m.stcm014_desc, 
       g_stcm_m.stcm015_desc,g_stcm_m.stcmownid_desc,g_stcm_m.stcmowndp_desc,g_stcm_m.stcmcrtid_desc, 
       g_stcm_m.stcmcrtdp_desc,g_stcm_m.stcmmodid_desc,g_stcm_m.stcmcnfid_desc
   CALL astt602_show()
   
END FUNCTION
]]>
  </section>
  <section id="astt602.unlock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION astt602_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astt602_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astt602_bcl2
   END IF
 
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="astt602.update_b" ver="1" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION astt602_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stcn_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE stcn_t 
         SET (stcndocno,
              stcnseq
              ,stcn001,stcn002,stcn003,stcn004,stcn005,stcn006,stcn007,stcn008,stcn009,stcn010,stcn011,stcn012,stcn013,stcn014,stcn015,stcn016,stcn017,stcn018,stcn019,stcnsite,stcnunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stcn_d[g_detail_idx].stcn001,g_stcn_d[g_detail_idx].stcn002,g_stcn_d[g_detail_idx].stcn003, 
                  g_stcn_d[g_detail_idx].stcn004,g_stcn_d[g_detail_idx].stcn005,g_stcn_d[g_detail_idx].stcn006, 
                  g_stcn_d[g_detail_idx].stcn007,g_stcn_d[g_detail_idx].stcn008,g_stcn_d[g_detail_idx].stcn009, 
                  g_stcn_d[g_detail_idx].stcn010,g_stcn_d[g_detail_idx].stcn011,g_stcn_d[g_detail_idx].stcn012, 
                  g_stcn_d[g_detail_idx].stcn013,g_stcn_d[g_detail_idx].stcn014,g_stcn_d[g_detail_idx].stcn015, 
                  g_stcn_d[g_detail_idx].stcn016,g_stcn_d[g_detail_idx].stcn017,g_stcn_d[g_detail_idx].stcn018, 
                  g_stcn_d[g_detail_idx].stcn019,g_stcn_d[g_detail_idx].stcnsite,g_stcn_d[g_detail_idx].stcnunit)  

         WHERE stcnent = g_enterprise AND stcndocno = ps_keys_bak[1] AND stcnseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("stcn_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("stcn_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stco_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point     
      UPDATE stco_t 
         SET (stcodocno,
              stcoseq
              ,stco001,stco002,stcosite,stcounit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stcn2_d[g_detail_idx].stco001,g_stcn2_d[g_detail_idx].stco002,g_stcn2_d[g_detail_idx].stcosite, 
                  g_stcn2_d[g_detail_idx].stcounit) 
         WHERE stcoent = g_enterprise AND stcodocno = ps_keys_bak[1] AND stcoseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("stco_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("stco_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
