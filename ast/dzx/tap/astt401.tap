<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="astt401" std_prog="astt401" erpver="1.0" module="AST" ver="1" env="s" zone="t10prd" booking="Y" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
    <start_arg value="" status=""/>
  </other>
  <point name="function.astt401_steasite_ref" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_steasite_ref()
  INITIALIZE g_ref_fields TO NULL
  LET g_ref_fields[1] = g_stea_m.steasite
  CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
  LET g_stea_m.steasite_desc = '', g_rtn_fields[1] , ''
  DISPLAY BY NAME g_stea_m.steasite_desc
END FUNCTION]]>
  </point>
  <point name="function.astt401_steaunit_ref" order="2" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_steaunit_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stea_m.steaunit
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_stea_m.steaunit_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stea_m.steaunit_desc
END FUNCTION]]>
  </point>
  <point name="function.astt401_stea006_ref" order="3" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stea006_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stea_m.stea006
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2126' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_stea_m.stea006_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stea_m.stea006_desc
END FUNCTION]]>
  </point>
  <point name="function.astt401_stea047_ref" order="4" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stea047_ref()
  INITIALIZE g_ref_fields TO NULL
  LET g_ref_fields[1] = g_stea_m.stea047
  CALL ap_ref_array2(g_ref_fields,"SELECT mhaal003 FROM mhaal_t WHERE mhaalent='"||g_enterprise||"' AND mhaal001=? AND mhaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
  LET g_stea_m.stea047_desc = '', g_rtn_fields[1] , ''
  DISPLAY BY NAME g_stea_m.stea047_desc
END FUNCTION]]>
  </point>
  <point name="function.astt401_stea048_ref" order="5" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stea048_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stea_m.stea047
   LET g_ref_fields[2] = g_stea_m.stea048
   CALL ap_ref_array2(g_ref_fields,"SELECT mhabl004 FROM mhabl_t WHERE mhablent='"||g_enterprise||"' AND mhabl001=? AND mhabl002=? AND mhabl003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_stea_m.stea048_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stea_m.stea048_desc
END FUNCTION]]>
  </point>
  <point name="function.astt401_stea044_ref" order="6" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stea044_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stea_m.stea044
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_stea_m.stea044_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stea_m.stea044_desc
END FUNCTION]]>
  </point>
  <point name="function.astt401_stea010_ref" order="7" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stea010_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stea_m.stea010
   CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_stea_m.stea010_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stea_m.stea010_desc
END FUNCTION]]>
  </point>
  <point name="function.astt401_stea011_ref" order="8" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stea011_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stea_m.stea011
   CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_stea_m.stea011_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stea_m.stea011_desc
END FUNCTION]]>
  </point>
  <point name="function.astt401_stea012_ref" order="9" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stea012_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stea_m.stea012
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2002' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_stea_m.stea012_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stea_m.stea012_desc
END FUNCTION]]>
  </point>
  <point name="function.astt401_stea013_ref" order="10" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stea013_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stea_m.stea013
   CALL ap_ref_array2(g_ref_fields,"SELECT stagl003 FROM stagl_t WHERE staglent='"||g_enterprise||"' AND stagl001=? AND stagl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_stea_m.stea013_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stea_m.stea013_desc
END FUNCTION]]>
  </point>
  <point name="function.astt401_stea014_ref" order="11" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stea014_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stea_m.stea014
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_stea_m.stea014_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stea_m.stea014_desc
END FUNCTION]]>
  </point>
  <point name="function.astt401_stea015_ref" order="12" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stea015_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stea_m.stea015
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_stea_m.stea015_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stea_m.stea015_desc
END FUNCTION]]>
  </point>
  <point name="function.astt401_stea045_ref" order="13" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stea045_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stea_m.stea045
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2127' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_stea_m.stea045_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stea_m.stea045_desc
END FUNCTION]]>
  </point>
  <point name="function.astt401_stea032_ref" order="14" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stea032_ref()
  INITIALIZE g_ref_fields TO NULL
  LET g_ref_fields[1] = g_stea_m.stea032
  CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
  LET g_stea_m.stea032_desc = '', g_rtn_fields[1] , ''
  DISPLAY BY NAME g_stea_m.stea032_desc
END FUNCTION]]>
  </point>
  <point name="function.astt401_stea033_ref" order="15" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stea033_ref()
   #INITIALIZE g_ref_fields TO NULL
   #LET g_ref_fields[1] = g_stea_m.stea033
   #CALL ap_ref_array2(g_ref_fields,"SELECT oodbl004 FROM oodbl_t WHERE oodblent='"||g_enterprise||"' AND oodbl002=? AND oodbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
   #LET g_stea_m.stea033_desc = '', g_rtn_fields[1] , ''
   #DISPLAY BY NAME g_stea_m.stea033_desc
   SELECT oodbl004 INTO g_stea_m.stea033_desc
    FROM oodbl_t,ooef_t
   WHERE oodblent = g_enterprise
    AND oodbl001 = ooef019 
    AND oodbl002 = g_stea_m.stea033
    AND oodbl003 = g_dlang
    AND ooefent = g_enterprise
    AND ooef001 = g_stea_m.steaunit   
   DISPLAY BY NAME g_stea_m.stea033_desc
END FUNCTION]]>
  </point>
  <point name="function.astt401_stea034_ref" order="16" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stea034_ref()
  # INITIALIZE g_ref_fields TO NULL
  # LET g_ref_fields[1] = g_stea_m.stea034
  # CALL ap_ref_array2(g_ref_fields,"SELECT oodbl004 FROM oodbl_t WHERE oodblent='"||g_enterprise||"' AND oodbl002=? AND oodbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
  # LET g_stea_m.stea034_desc = '', g_rtn_fields[1] , ''
  # DISPLAY BY NAME g_stea_m.stea034_desc
   SELECT oodbl004 INTO g_stea_m.stea034_desc
    FROM oodbl_t,ooef_t
   WHERE oodblent = g_enterprise
    AND oodbl001 = ooef019 
    AND oodbl002 = g_stea_m.stea034
    AND oodbl003 = g_dlang
    AND ooefent = g_enterprise
    AND ooef001 = g_stea_m.steaunit   
   DISPLAY BY NAME g_stea_m.stea034_desc
END FUNCTION]]>
  </point>
  <point name="function.astt401_stea035_ref" order="17" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stea035_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stea_m.stea035
   CALL ap_ref_array2(g_ref_fields,"SELECT ooibl004 FROM ooibl_t WHERE ooiblent='"||g_enterprise||"' AND ooibl002=? AND ooibl003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_stea_m.stea035_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stea_m.stea035_desc
END FUNCTION]]>
  </point>
  <point name="function.astt401_stea036_ref" order="18" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stea036_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stea_m.stea036
   CALL ap_ref_array2(g_ref_fields,"SELECT staal003 FROM staal_t WHERE staalent='"||g_enterprise||"' AND staal001=? AND staal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_stea_m.stea036_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stea_m.stea036_desc
END FUNCTION]]>
  </point>
  <point name="function.astt401_stea037_ref" order="19" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stea037_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stea_m.stea037
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2060' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_stea_m.stea037_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stea_m.stea037_desc
END FUNCTION]]>
  </point>
  <point name="function.astt401_stea038_ref" order="20" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stea038_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stea_m.stea038
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_stea_m.stea038_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stea_m.stea038_desc
END FUNCTION]]>
  </point>
  <point name="function.astt401_stea001_chk" order="21" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stea001_chk(p_cmd,p_stea001)
DEFINE p_cmd       LIKE type_t.chr1
DEFINE p_stea001   LIKE stea_t.stea001
DEFINE l_stfastus  LIKE stfa_t.stfastus
DEFINE l_n         LIKE type_t.num5

   #新增
   IF g_stea_m.stea000 = 'I' THEN
      SELECT COUNT(*) INTO l_n FROM stfa_t WHERE stfaent = g_enterprise AND stfa001 = p_stea001
      IF l_n > 0 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'ast-00246'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
   END IF
   #更改
   IF g_stea_m.stea000 = 'U' THEN
      SELECT stfastus INTO l_stfastus FROM stfa_t WHERE stfaent = g_enterprise AND stfa001 = p_stea001
      IF STATUS = 100 OR cl_null(l_stfastus) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'ast-00247'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
      IF l_stfastus <> 'Y' THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'aap-00017'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
   END IF
   IF p_cmd = 'a' THEN
      SELECT COUNT(*) INTO l_n FROM stea_t
      WHERE steaent = g_enterprise AND stea001 = p_stea001 AND steastus = 'N'
   ELSE
     SELECT COUNT(*) INTO l_n FROM stea_t
      WHERE steaent = g_enterprise AND stea001 = p_stea001 AND steastus = 'N'
        AND steadocno <> g_stea_m.steadocno
   END IF
   
   IF l_n > 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'ast-00141'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   END IF
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.astt401_stea010_chk" order="22" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stea010_chk(p_pmaa001)
DEFINE p_pmaa001   LIKE pmaa_t.pmaa001
DEFINE l_pmaastus  LIKE pmaa_t.pmaastus

   SELECT pmaastus INTO l_pmaastus FROM pmaa_t
    WHERE pmaaent = g_enterprise AND pmaa001 = p_pmaa001 AND pmaa002 IN ('1','3')
   IF STATUS = 100 OR cl_null(l_pmaastus) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'apm-00016'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   ELSE
      IF l_pmaastus <> 'Y' THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'apm-00017'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
   END IF
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.astt401_stea047_chk" order="23" ver="1" cite_std="N" new="Y" status="d" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="function.astt401_stea047_stea048_chk" order="23" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stea047_stea048_chk()
DEFINE l_n   LIKE type_t.num5

   #检查楼栋和楼层是否一致
   IF NOT cl_null(g_stea_m.stea047) AND NOT cl_null(g_stea_m.stea048) THEN
      
      SELECT COUNT(*) INTO l_n FROM mhab_t 
       WHERE mhabent = g_enterprise  AND mhab001 = g_stea_m.stea047 AND mhab002 =g_stea_m.stea048      
      IF l_n = 0 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'ast-00249'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()
         RETURN FALSE
      END IF      
   END IF
   #检查是否存在对应的归属门店
   IF NOT cl_null(g_stea_m.steaunit) AND NOT cl_null(g_stea_m.stea047) AND NOT cl_null(g_stea_m.stea048)  THEN
      
      SELECT COUNT(*) INTO l_n FROM mhab_t
       WHERE  mhabent = g_enterprise  AND mhab001 = g_stea_m.stea047 AND mhab002 =g_stea_m.stea048 AND mhabsite = g_stea_m.steaunit
      IF l_n = 0 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'ast-00250'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()
         RETURN FALSE
      END IF        
      
   END IF

   #单身场地与区域有值时，检查是否存在当前楼栋楼层
   IF NOT cl_null(g_stea_m.stea047) AND NOT cl_null(g_stea_m.stea048) THEN
 
      SELECT COUNT(*) INTO l_n FROM steg_t
       WHERE stegent = g_enterprise AND stegdocno = g_stea_m.steadocno 
         AND NOT EXISTS( SELECT 1 FROM mhad_t 
                      WHERE mhadent = g_enterprise AND mhad001 = g_stea_m.stea047
                        AND mhad001 = g_stea_m.stea048 AND mhad003 = steg003 AND mhad004 = steg002)
   
      IF l_n > 0 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'ast-00261'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()
         RETURN FALSE    
      END IF 
   END IF
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.astt401_stea005_chk" order="24" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stea005_chk(p_cmd)
DEFINE p_cmd  LIKE type_t.chr1
DEFINE l_n  LIKE type_t.num5

   #stea000 = 'I'新增时，专柜编号不能存在amhi301，审核时，也需要检查
   IF g_stea_m.stea000 = 'I' THEN
      IF p_cmd = 'a' OR (p_cmd = 'u' AND g_stea_m.stea005 <>g_stea_m_t.stea005) THEN
         SELECT COUNT(*) INTO l_n FROM mhae_t WHERE mhaeent = g_enterprise AND mhae001 = g_stea_m.stea005
         IF l_n > 0 THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'ast-00251'
            LET g_errparam.extend = ''
            LET g_errparam.popup = TRUE
            CALL cl_err()
            RETURN FALSE
         END IF   
         
         IF p_cmd = 'a' THEN
           SELECT COUNT(*) INTO l_n FROM stea_t 
            WHERE steaent = g_enterprise AND stea005 = g_stea_m.stea005 AND stea004 = '1'
         ELSE
           SELECT COUNT(*) INTO l_n FROM stea_t 
            WHERE steaent = g_enterprise AND stea005 = g_stea_m.stea005 AND stea004 = '1' AND steadocno <> g_stea_m.steadocno 
         END IF          
         IF l_n > 0 THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'ast-00252'
            LET g_errparam.extend = ''
            LET g_errparam.popup = TRUE
            CALL cl_err()
            RETURN FALSE       
         END IF                       
      END IF   
   END IF  
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.astt401_stea013_chk" order="25" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stea013_chk(p_stag001)
DEFINE p_stag001  LIKE stag_t.stag001
DEFINE l_stagstus LIKE stag_t.stagstus
DEFINE l_stag002  LIKE stag_t.stag002

  SELECT stagstus INTO l_stagstus FROM stag_t
   WHERE stagent = g_enterprise AND stag001 = p_stag001
  IF STATUS = 100 OR cl_null(l_stagstus) THEN
    INITIALIZE g_errparam TO NULL
    LET g_errparam.code = 'ast-00019'
    LET g_errparam.extend = ''
    LET g_errparam.popup = TRUE
    CALL cl_err()

    RETURN FALSE
  ELSE
    IF l_stagstus = 'N' THEN
       INITIALIZE g_errparam TO NULL
       LET g_errparam.code = 'ast-00020'
       LET g_errparam.extend = ''
       LET g_errparam.popup = TRUE
       CALL cl_err()

       RETURN FALSE
    END IF
    IF l_stagstus = 'X' THEN
       INITIALIZE g_errparam TO NULL
       LET g_errparam.code = 'ast-00021'
       LET g_errparam.extend = ''
       LET g_errparam.popup = TRUE
       CALL cl_err()

       RETURN FALSE
    END IF
  END IF 

  #合约模板的经营方式必须是联营
  SELECT stag002 INTO l_stag002 FROM stag_t WHERE stagent = g_enterprise AND stag001 = p_stag001
  IF l_stag002 <> '4' THEN
     INITIALIZE g_errparam TO NULL
     LET g_errparam.code = 'ast-00253'
     LET g_errparam.extend = ''
     LET g_errparam.popup = TRUE
     CALL cl_err()

     RETURN FALSE   
  END IF

  RETURN TRUE 
END FUNCTION]]>
  </point>
  <point name="function.astt401_stea014_chk" order="26" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stea014_chk()
   INITIALIZE g_chkparam.* TO NULL
   LET g_errshow = '1'
   LET g_chkparam.arg1 = g_stea_m.stea014
   IF NOT cl_chk_exist("v_ooef001_1") THEN
      RETURN FALSE
   END IF
   RETURN TRUE 
END FUNCTION]]>
  </point>
  <point name="function.astt401_stea019_020_chk" order="27" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stea019_020_chk(p_cmd,p_field)
DEFINE p_cmd       LIKE type_t.chr1
DEFINE p_field     STRING
DEFINE l_cnt1       LIKE type_t.num5
DEFINE l_cnt2       LIKE type_t.num5
DEFINE l_cnt3       LIKE type_t.num5
DEFINE l_cnt4       LIKE type_t.num5
DEFINE l_stfj003   LIKE stfj_t.stfj003

   IF NOT cl_null(g_stea_m.stea019) AND NOT cl_null(g_stea_m.stea020) THEN
      IF g_stea_m.stea019 >g_stea_m.stea020 THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.code = 'aoo-00122'
          LET g_errparam.extend = ''
          LET g_errparam.popup = TRUE
          CALL cl_err()

          RETURN FALSE
      END IF
   END IF

     #判断生效日期，不可大于单身的生效日期
   IF p_field = 'stea019' THEN
      IF p_cmd = 'u' THEN
         LET l_cnt1 = 0     
         SELECT COUNT(*) INTO l_cnt1 FROM steb_t
          WHERE stebent = g_enterprise AND stebdocno = g_stea_m.steadocno AND steb014 < g_stea_m.stea019
          
         SELECT COUNT(*) INTO l_cnt2 FROM stec_t
          WHERE stecent = g_enterprise AND stecdocno = g_stea_m.steadocno AND stec019 < g_stea_m.stea019
          
         SELECT COUNT(*) INTO l_cnt3 FROM stee_t
          WHERE steeent = g_enterprise AND steedocno = g_stea_m.steadocno AND stee008 < g_stea_m.stea019

         SELECT COUNT(*) INTO l_cnt4 FROM stei_t
          WHERE steient = g_enterprise AND steidocno = g_stea_m.steadocno AND stei005 < g_stea_m.stea019
          
         IF l_cnt1 > 0 OR l_cnt2 > 0 OR l_cnt3>0 OR l_cnt4 > 0 THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'ast-00032'
            LET g_errparam.extend = ''
            LET g_errparam.popup = TRUE
            CALL cl_err()
            
            RETURN FALSE
         END IF 
          
      ELSE
         IF g_stea_m.stea000 = 'U' THEN
            SELECT COUNT(*) INTO l_cnt1 FROM stfb_t
             WHERE stfbent = g_enterprise AND stfb001 = g_stea_m.stea001 AND stfb014 < g_stea_m.stea019
             
            SELECT COUNT(*) INTO l_cnt1 FROM stfc_t
             WHERE stfcent = g_enterprise AND stfc001 = g_stea_m.stea001 AND stfc019 < g_stea_m.stea019
             
            SELECT COUNT(*) INTO l_cnt1 FROM stfe_t
             WHERE stfeent = g_enterprise AND stfe001 = g_stea_m.stea001 AND stfe008 < g_stea_m.stea019
             
            SELECT COUNT(*) INTO l_cnt1 FROM stfi_t
             WHERE stfient = g_enterprise AND stfi001 = g_stea_m.stea001 AND stfi005 < g_stea_m.stea019
            IF l_cnt1 > 0 OR l_cnt2 > 0 OR l_cnt3>0 OR l_cnt4 > 0 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'ast-00263'
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
               
               RETURN FALSE
            END IF    
         END IF
      END IF
      
   END IF
   
   #判断失效日期，不可小于单身的失效日期
   IF p_field = 'stea020' THEN
      IF p_cmd = 'u' THEN
         LET l_cnt1 = 0     
         SELECT COUNT(*) INTO l_cnt1 FROM steb_t
          WHERE stebent = g_enterprise AND stebdocno = g_stea_m.steadocno AND steb015 > g_stea_m.stea020
          
         SELECT COUNT(*) INTO l_cnt2 FROM stec_t
          WHERE stecent = g_enterprise AND stecdocno = g_stea_m.steadocno AND stec020 > g_stea_m.stea020
          
         SELECT COUNT(*) INTO l_cnt3 FROM stee_t
          WHERE steeent = g_enterprise AND steedocno = g_stea_m.steadocno AND stee009 > g_stea_m.stea020

         SELECT COUNT(*) INTO l_cnt4 FROM stei_t
          WHERE steient = g_enterprise AND steidocno = g_stea_m.steadocno AND stei006 > g_stea_m.stea020
          
         IF l_cnt1 > 0 OR l_cnt2 > 0 OR l_cnt3>0 OR l_cnt4 > 0 THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'ast-00032'
            LET g_errparam.extend = ''
            LET g_errparam.popup = TRUE
            CALL cl_err()
            
            RETURN FALSE
         END IF 
          
      ELSE
         IF g_stea_m.stea000 = 'U' THEN
            SELECT COUNT(*) INTO l_cnt1 FROM stfb_t
             WHERE stfbent = g_enterprise AND stfb001 = g_stea_m.stea001 AND stfb015 > g_stea_m.stea020
             
            SELECT COUNT(*) INTO l_cnt1 FROM stfc_t
             WHERE stfcent = g_enterprise AND stfc001 = g_stea_m.stea001 AND stfc020 > g_stea_m.stea020
             
            SELECT COUNT(*) INTO l_cnt1 FROM stfe_t
             WHERE stfeent = g_enterprise AND stfe001 = g_stea_m.stea001 AND stfe009 > g_stea_m.stea020
             
            SELECT COUNT(*) INTO l_cnt1 FROM stfi_t
             WHERE stfient = g_enterprise AND stfi001 = g_stea_m.stea001 AND stfi006 > g_stea_m.stea020
            IF l_cnt1 > 0 OR l_cnt2 > 0 OR l_cnt3>0 OR l_cnt4 > 0 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'ast-00263'
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
               
               RETURN FALSE
            END IF    
         END IF
      END IF
      
   END IF

   
    #U修改合同时，判断失效日期，不可小于最小已结算帐期的截止日期
   LET l_stfj003 = NULL
  IF g_stea_m.stea000 = 'U' AND NOT cl_null( g_stea_m.stea001) THEN
     SELECT stfj003 INTO l_stfj003 FROM stfj_t 
      WHERE stfjent = g_enterprise AND stfj001 = g_stea_m.stea001 
        AND stfjseq = ( SELECT MAX(stfjseq) FROM stfj_t
                         WHERE stfjent = g_enterprise AND stfj001 = g_stea_m.stea001
                           AND stfj005 = 'Y' )
     IF SQLCA.sqlcode = 100 THEN LET l_stfj003 = NULL END IF
       IF g_stea_m.stea020 < l_stfj003 THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.code = 'ast-00140'
          LET g_errparam.extend = ''
          LET g_errparam.popup = TRUE
          CALL cl_err()
          RETURN FALSE
       END IF
      END IF
   
   #如果生效/失效日期/结算方式有修改，自动算下次计算日

   IF NOT cl_null(g_stea_m.stea019) AND NOT cl_NULL(g_stea_m.stea020) AND NOT cl_null(g_stea_m.stea036) THEN
      IF cl_null(g_stea_m_o.stea019) OR 
         g_stea_m.stea019 <> g_stea_m_o.stea019 OR g_stea_m.stea020 <> g_stea_m_o.stea020 OR
         g_stea_m.stea036 <> g_stea_m_o.stea036 THEN
         IF NOT cl_null(l_stfj003) THEN #表示已经有结算，已结算部分的帐期不可以异动
            LET g_stea_m.next_b = astt401_get_nextdate(g_stea_m.stea036,l_stfj003+1,g_stea_m.stea020)
         ELSE
            LET g_stea_m.next_b = astt401_get_nextdate(g_stea_m.stea036,g_stea_m.stea019,g_stea_m.stea020)
         END IF
      END IF
      DISPLAY g_stea_m.next_b TO next_b
      LET g_stea_m_o.stea019 = g_stea_m.stea019
      LET g_stea_m_o.stea020 = g_stea_m.stea020
      LET g_stea_m_o.stea036 = g_stea_m.stea036
   END IF
   
   
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.astt401_steb002_ref" order="28" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_steb002_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_steb_d[l_ac].steb002
   CALL ap_ref_array2(g_ref_fields,"SELECT stael003 FROM stael_t WHERE staelent='"||g_enterprise||"' AND stael001=? AND stael002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_steb_d[l_ac].steb002_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_steb_d[l_ac].steb002_desc
END FUNCTION]]>
  </point>
  <point name="function.astt401_steb008_ref" order="29" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_steb008_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_steb_d[l_ac].steb008
   CALL ap_ref_array2(g_ref_fields,"SELECT stabl003 FROM stabl_t WHERE stablent='"||g_enterprise||"' AND stabl001=? AND stabl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_steb_d[l_ac].steb008_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_steb_d[l_ac].steb008_desc
END FUNCTION]]>
  </point>
  <point name="function.astt401_steb009_ref" order="30" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_steb009_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_steb_d[l_ac].steb009
   CALL ap_ref_array2(g_ref_fields,"SELECT stabl003 FROM stabl_t WHERE stablent='"||g_enterprise||"' AND stabl001=? AND stabl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_steb_d[l_ac].steb009_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_steb_d[l_ac].steb009_desc
END FUNCTION]]>
  </point>
  <point name="function.astt401_steb002_chk" order="31" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_steb002_chk(p_stae001)
DEFINE p_stae001  LIKE stae_t.stae001
DEFINE l_staestus LIKE stae_t.staestus
DEFINE l_stae010  LIKE stae_t.stae010
DEFINE l_n        LIKE type_t.num5
DEFINE l_ooef019  LIKE ooef_t.ooef019

   SELECT staestus INTO l_staestus FROM stae_t
    WHERE stae001 = p_stae001 AND staeent = g_enterprise
   
   IF STATUS = 100 OR  cl_null(l_staestus) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'ast-00001'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   ELSE
      IF l_staestus = 'N' THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'ast-00002'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
   END IF
   
   #税别要存在于门店组织税区里面的税别
  # SELECT stae010 INTO l_stae010 FROM stae_t WHERE staeent = g_enterprise AND stae001 = p_stae001
  # SELECT ooef019 INTO l_ooef019 FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = g_stea_m.steaunit
  # 
  # IF NOT cl_null(l_stae010) THEN
  #    SELECT COUNT(*) INTO l_n FROM oodb_t WHERE oodbent = g_enterprise AND oodb001 = l_ooef019 AND oodb002 = l_stae010
  #    IF l_n = 0 THEN
  #       INITIALIZE g_errparam TO NULL
  #       LET g_errparam.code = 'ast-00224'
  #       LET g_errparam.extend = ''
  #       LET g_errparam.popup = TRUE
  #       CALL cl_err()
  #       RETURN FALSE
  #    END IF    
  # END IF
  
   
   RETURN TRUE  
END FUNCTION]]>
  </point>
  <point name="function.astt401_default" order="32" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_default(p_page,p_stea003,p_steb002)
DEFINE p_page    LIKE type_t.chr1
DEFINE p_stea003 LIKE stea_t.stea003
DEFINE p_steb002 LIKE steb_t.steb002
DEFINE l_staf003 LIKE staf_t.staf003
DEFINE l_staf006 LIKE staf_t.staf006

    DECLARE sel_staf_d CURSOR FOR 
     SELECT staf003,staf006 FROM staf_t
      WHERE  stafent = g_enterprise AND staf001= p_steb002 AND staf002 = p_stea003
      
   FOREACH sel_staf_d INTO l_staf003,l_staf006

      IF p_page = '1' THEN
         CASE l_staf003
             WHEN 'stao004'
                LET g_steb_d[l_ac].steb003 = l_staf006
             WHEN 'stao005'
                IF NOT cl_null(l_staf006) THEN
                   LET g_steb_d[l_ac].steb004 = l_staf006
                END IF
             WHEN 'stao006'
                LET g_steb_d[l_ac].steb005 = l_staf006
             WHEN 'stao007'
                LET g_steb_d[l_ac].steb006 = l_staf006
             WHEN 'stao008'
                LET g_steb_d[l_ac].steb007 = l_staf006
             WHEN 'stao009'
                LET g_steb_d[l_ac].steb008 = l_staf006
                CALL astt401_steb008_ref()
             WHEN 'stao010'
                LET g_steb_d[l_ac].steb009 = l_staf006
                CALL astt401_steb009_ref()
             WHEN 'stao011'
                LET g_steb_d[l_ac].steb010 = l_staf006
             WHEN 'stao012'
                LET g_steb_d[l_ac].steb011 = l_staf006
                
             WHEN 'stao017'
                IF NOT cl_null(l_staf006) THEN
                   LET g_steb_d[l_ac].steb013 = l_staf006
                END IF
             WHEN 'stao018'
                IF NOT cl_null(l_staf006) THEN
                   LET g_steb_d[l_ac].steb014 = l_staf006
                END IF
         END CASE
        
      ELSE
         CASE l_staf003
             WHEN 'stao004'
                LET g_steb2_d[l_ac].stec010 = l_staf006
             WHEN 'stao005'
                IF NOT cl_null(l_staf006) THEN
                   LET g_steb2_d[l_ac].stec011 = l_staf006
                END IF
             WHEN 'stao006'
                LET g_steb2_d[l_ac].stec012 = l_staf006
             WHEN 'stao007'
                LET g_steb2_d[l_ac].stec013 = l_staf006
             WHEN 'stao008'
                LET g_steb2_d[l_ac].stec014 = l_staf006
             WHEN 'stao009'
                LET g_steb2_d[l_ac].stec015 = l_staf006
                CALL astt401_stec015_ref()
             WHEN 'stao010'
                LET g_steb2_d[l_ac].stec016 = l_staf006
                CALL astt401_stec016_ref()
             WHEN 'stao011'
                LET g_steb2_d[l_ac].stec017 = l_staf006
             WHEN 'stao012'
                LET g_steb2_d[l_ac].stec018 = l_staf006
                
             WHEN 'stao017'
                IF NOT cl_null(l_staf006) THEN
                   LET g_steb2_d[l_ac].stec019 = l_staf006
                END IF
             WHEN 'stao018'
                IF NOT cl_null(l_staf006) THEN
                   LET g_steb2_d[l_ac].stec020 = l_staf006
                END IF
         END CASE
         
      END IF
   END FOREACH 
   IF p_page = '1' THEN
       CALL astt401_cal_nextd('1') RETURNING g_steb_d[l_ac].steb015,g_steb_d[l_ac].steb016,g_steb_d[l_ac].steb017
       DISPLAY BY NAME g_steb_d[l_ac].steb004,g_steb_d[l_ac].steb005,g_steb_d[l_ac].steb006,
                      g_steb_d[l_ac].steb007,g_steb_d[l_ac].steb008,g_steb_d[l_ac].steb008_desc,g_steb_d[l_ac].steb009,g_steb_d[l_ac].steb009_desc,
                      g_steb_d[l_ac].steb010,g_steb_d[l_ac].steb011,
                      g_steb_d[l_ac].steb013,g_steb_d[l_ac].steb014,g_steb_d[l_ac].steb015,
                      g_steb_d[l_ac].steb016,g_steb_d[l_ac].steb017
   ELSE
       CALL astt401_cal_nextd('2') RETURNING g_steb2_d[l_ac].stec021,g_steb2_d[l_ac].stec022,g_steb2_d[l_ac].stec023
       DISPLAY BY NAME g_steb2_d[l_ac].stec010,g_steb2_d[l_ac].stec011,g_steb2_d[l_ac].stec012,g_steb2_d[l_ac].stec013,
                       g_steb2_d[l_ac].stec014,g_steb2_d[l_ac].stec015,g_steb2_d[l_ac].stec016,g_steb2_d[l_ac].stec017,
                       g_steb2_d[l_ac].stec018,g_steb2_d[l_ac].stec019,g_steb2_d[l_ac].stec020,
                       g_steb2_d[l_ac].stec021,g_steb2_d[l_ac].stec022,g_steb2_d[l_ac].stec023    
   END IF                       
END FUNCTION]]>
  </point>
  <point name="function.astt401_cal_nextd" order="33" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_cal_nextd(p_page)
DEFINE p_page      LIKE type_t.chr1
DEFINE l_steb016   LIKE steb_t.steb016

   IF p_page = '1' THEN
      IF  NOT cl_null(g_steb_d[l_ac].steb006) AND NOT cl_null(g_steb_d[l_ac].steb007) AND NOT cl_null(g_steb_d[l_ac].steb013) AND NOT cl_null(g_steb_d[l_ac].steb014) THEN
        #如果是U:修改，已有部分费用已结算，且修改了失效日期
        IF astt401_chk_astm401_jiesuan('1',g_steb_d[l_ac].stebseq) THEN
           IF astt401_chk_astm401_jiesuan_end('1',g_steb_d[l_ac].stebseq) THEN
              LET g_steb_d[l_ac].steb015 = NULL
              LET g_steb_d[l_ac].steb016 = NULL
              LET g_steb_d[l_ac].steb017 = NULL
              RETURN g_steb_d[l_ac].steb015,g_steb_d[l_ac].steb016,g_steb_d[l_ac].steb017
           ELSE
              IF g_steb_d[l_ac].steb014 = g_steb_d[l_ac].steb016 - 1 THEN
                 LET g_steb_d[l_ac].steb015 = NULL
                 LET g_steb_d[l_ac].steb016 = NULL
                 LET g_steb_d[l_ac].steb017 = NULL
                 RETURN g_steb_d[l_ac].steb015,g_steb_d[l_ac].steb016,g_steb_d[l_ac].steb017
              END IF           
           END IF
           IF g_steb_d[l_ac].steb014 <> g_steb_d_t.steb014 OR
              g_steb_d[l_ac].steb006 <> g_steb_d_t.steb006 OR g_steb_d[l_ac].steb007 <> g_steb_d_t.steb007 THEN
              
                 IF cl_null(g_steb_d_t.steb016) THEN
                    LET l_steb016 = g_steb_d_t.steb014+1
                 ELSE
                    LET l_steb016 =  g_steb_d_t.steb016
                 END IF
                 CALL s_astm301_cal_nextd(g_steb_d[l_ac].steb006,g_steb_d[l_ac].steb007,g_steb_d[l_ac].steb013,g_steb_d[l_ac].steb014,l_steb016,'')
                      RETURNING g_steb_d[l_ac].steb015,g_steb_d[l_ac].steb016,g_steb_d[l_ac].steb017
           ELSE
              LET g_steb_d[l_ac].steb015 = g_steb_d_t.steb015
              LET g_steb_d[l_ac].steb016 = g_steb_d_t.steb016
              LET g_steb_d[l_ac].steb017 = g_steb_d_t.steb017
           END IF
         ELSE
         #否则正常计算下次计算日、下次费用开始日stcb019和下次费用截止日stcb020
            CALL s_astm301_cal_nextd(g_steb_d[l_ac].steb006,g_steb_d[l_ac].steb007,g_steb_d[l_ac].steb013,g_steb_d[l_ac].steb014,'','')
               RETURNING g_steb_d[l_ac].steb015,g_steb_d[l_ac].steb016,g_steb_d[l_ac].steb017
         END IF   
      ELSE
          RETURN '','',''
      END IF
  
      RETURN g_steb_d[l_ac].steb015,g_steb_d[l_ac].steb016,g_steb_d[l_ac].steb017
   ELSE
      IF NOT cl_null(g_steb2_d[l_ac].stec013) AND NOT cl_null(g_steb2_d[l_ac].stec014) AND NOT cl_null(g_steb2_d[l_ac].stec019) AND NOT cl_null(g_steb2_d[l_ac].stec020) THEN
        #如果是U:修改，已有部分费用已结算，且修改了失效日期
        IF astt401_chk_astm401_jiesuan('2',g_steb2_d[l_ac].stecseq) THEN
           IF astt401_chk_astm401_jiesuan_end('2',g_steb2_d[l_ac].stecseq) THEN
              LET g_steb2_d[l_ac].stec021 = NULL
              LET g_steb2_d[l_ac].stec022 = NULL
              LET g_steb2_d[l_ac].stec023 = NULL
              RETURN g_steb2_d[l_ac].stec021,g_steb2_d[l_ac].stec022,g_steb2_d[l_ac].stec023
           ELSE
              IF g_steb2_d[l_ac].stec020 = g_steb2_d[l_ac].stec022 - 1 THEN
                 LET g_steb2_d[l_ac].stec021 = NULL
                 LET g_steb2_d[l_ac].stec022 = NULL
                 LET g_steb2_d[l_ac].stec023 = NULL
                 RETURN g_steb2_d[l_ac].stec021,g_steb2_d[l_ac].stec022,g_steb2_d[l_ac].stec023
              END IF           
           END IF
           IF g_steb2_d[l_ac].stec020 <> g_steb2_d_t.stec020 OR  
              g_steb2_d[l_ac].stec013 <> g_steb2_d_t.stec013 OR g_steb2_d[l_ac].stec014 <> g_steb2_d_t.stec014 THEN
              
                 IF cl_null(g_steb2_d_t.stec022) THEN
                    LET l_steb016 = g_steb2_d_t.stec020+1
                 ELSE
                    LET l_steb016 =  g_steb2_d_t.stec022
                 END IF
                 CALL s_astm301_cal_nextd(g_steb2_d[l_ac].stec013,g_steb2_d[l_ac].stec014,g_steb2_d[l_ac].stec019,g_steb2_d[l_ac].stec020,l_steb016,'')
                      RETURNING g_steb2_d[l_ac].stec021,g_steb2_d[l_ac].stec022,g_steb2_d[l_ac].stec023
           ELSE
              LET g_steb2_d[l_ac].stec021 = g_steb2_d_t.stec021
              LET g_steb2_d[l_ac].stec022 = g_steb2_d_t.stec022
              LET g_steb2_d[l_ac].stec023 = g_steb2_d_t.stec023
           END IF
         ELSE
         #否则正常计算下次计算日、下次费用开始日stcb019和下次费用截止日stcb020
            CALL s_astm301_cal_nextd(g_steb2_d[l_ac].stec013,g_steb2_d[l_ac].stec014,g_steb2_d[l_ac].stec019,g_steb2_d[l_ac].stec020,'','')
               RETURNING g_steb2_d[l_ac].stec021,g_steb2_d[l_ac].stec022,g_steb2_d[l_ac].stec023
         END IF   
     ELSE
         RETURN '','',''
     END IF
  
     RETURN g_steb2_d[l_ac].stec021,g_steb2_d[l_ac].stec022,g_steb2_d[l_ac].stec023
      
   END IF
END FUNCTION]]>
  </point>
  <point name="function.astt401_chk_astm401_jiesuan" order="34" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_chk_astm401_jiesuan(p_page,p_stebseq)
DEFINE p_page       LIKE type_t.chr1
DEFINE p_stebseq    LIKE steb_t.stebseq
DEFINE l_stfb  RECORD LIKE stfb_t.*
DEFINE l_stfc  RECORD LIKE stfc_t.*

   IF p_page = '1' THEN
      INITIALIZE l_stfb.* TO NULL
      
      IF g_stea_m.stea000 = 'U' THEN
         
         SELECT * INTO l_stfb.* FROM stfb_t
          WHERE stfbent = g_enterprise AND stfb001 = g_stea_m.stea001 AND stfbseq = p_stebseq
        
         IF NOT cl_null(l_stfb.stfb013) AND NOT cl_null(l_stfb.stfb016) THEN       
            #看astm401有结算与否
            IF l_stfb.stfb013 = l_stfb.stfb016 THEN
               #未结算
               RETURN FALSE         
            ELSE   
               #有结算
               RETURN TRUE
            END IF
         ELSE 
            IF NOT cl_null(l_stfb.stfb013) AND cl_null(l_stfb.stfb016) THEN        
               #有结算
               RETURN TRUE 
            ELSE
                #未结算
               RETURN FALSE  
            END IF         
         END IF
     
      ELSE
         RETURN FALSE   
      END IF
   ELSE
       INITIALIZE l_stfc.* TO NULL
      
      IF g_stea_m.stea000 = 'U' THEN
         
         SELECT * INTO l_stfc.* FROM stfc_t
          WHERE stfcent = g_enterprise AND stfc001 = g_stea_m.stea001 AND stfcseq = p_stebseq
        
         IF NOT cl_null(l_stfc.stfc019) AND NOT cl_null(l_stfc.stfc022) THEN       
            #看astm401有结算与否
            IF l_stfc.stfc019 = l_stfc.stfc022 THEN
               #未结算
               RETURN FALSE         
            ELSE   
               #有结算
               RETURN TRUE
            END IF
         ELSE 
            IF NOT cl_null(l_stfc.stfc019) AND cl_null(l_stfc.stfc022) THEN        
               #有结算
               RETURN TRUE 
            ELSE
                #未结算
               RETURN FALSE  
            END IF         
         END IF
     
      ELSE
         RETURN FALSE   
      END IF
   
   
   END IF
END FUNCTION]]>
  </point>
  <point name="function.astt401_chk_astm401_jiesuan_end" order="35" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_chk_astm401_jiesuan_end(p_page,p_stebseq)
DEFINE p_page       LIKE type_t.chr1
DEFINE p_stebseq    LIKE steb_t.stebseq
DEFINE l_stfb  RECORD LIKE stfb_t.*
DEFINE l_stfc  RECORD LIKE stfc_t.*

   IF p_page = '1' THEN
      INITIALIZE l_stfb.* TO NULL
       
      IF astt401_chk_astm401_jiesuan('1',p_stebseq) THEN    
          SELECT * INTO l_stfb.* FROM stfb_t
          WHERE stfbent = g_enterprise AND stfb001 = g_stea_m.stea001 AND stfbseq = p_stebseq
        
         #看astm301有结算完毕
         IF cl_null(l_stfb.stfb016) AND cl_null(l_stfb.stfb017) THEN
            #结算完毕
            RETURN TRUE         
         ELSE   
            #未结算完
            RETURN FALSE
         END IF
      ELSE
         RETURN FALSE  
      END IF
   ELSE
      INITIALIZE l_stfc.* TO NULL
       
      IF astt401_chk_astm401_jiesuan('2',p_stebseq) THEN    
          SELECT * INTO l_stfc.* FROM stfc_t
          WHERE stfcent = g_enterprise AND stfc001 = g_stea_m.stea001 AND stfcseq = p_stebseq
        
         #看astm301有结算完毕
         IF cl_null(l_stfc.stfc022) AND cl_null(l_stfc.stfc023) THEN
            #结算完毕
            RETURN TRUE         
         ELSE   
            #未结算完
            RETURN FALSE
         END IF
      ELSE
         RETURN FALSE  
      END IF
   
   
   END IF
END FUNCTION]]>
  </point>
  <point name="function.astt401_set_no_required_b" order="36" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_set_no_required_b(p_cmd)
DEFINE p_cmd   LIKE type_t.chr1   
DEFINE l_n     LIKE type_t.num5
DEFINE l_staf003 LIKE staf_t.staf003
DEFINE l_staf004 LIKE staf_t.staf004
DEFINE l_staf005 LIKE staf_t.staf005
DEFINE l_field  LIKE staf_t.staf003

  
   CALL astt401_init_required(p_cmd)

   IF NOT cl_null(g_steb_d[l_ac].steb002) THEN
      #檢查費用編號+經營方式是否存在asti204
      
      SELECT COUNT(*) INTO l_n FROM staf_t
       WHERE stafent = g_enterprise AND staf001= g_steb_d[l_ac].steb002 AND staf002 = '4'
      IF l_n > 0 THEN
         DECLARE sel_staf_nq CURSOR FOR 
          SELECT staf003,staf004,staf005 FROM staf_t
           WHERE  stafent = g_enterprise AND staf001= g_steb_d[l_ac].steb002 AND staf002 = '4'
         FOREACH sel_staf_nq INTO l_staf003,l_staf004,l_staf005
             CASE l_staf003
               WHEN 'stao004'
                  LET l_field = "steb003"
               WHEN 'stao005'
                  LET l_field = "steb004"                  
               WHEN 'stao006'
                  LET l_field = "steb005"
               WHEN 'stao007'
                  LET l_field = "steb006"
               WHEN 'stao008'
                  LET l_field = "steb007"
               WHEN 'stao009'
                  LET l_field = "steb008"
               WHEN 'stao010'
                  LET l_field = "steb009"
               WHEN 'stao011'
                  LET l_field = "steb010"
               WHEN 'stao012'
                  LET l_field = "steb011"                 
               WHEN 'stao017'
                  LET l_field = "steb013"
               WHEN 'stao018'
                  LET l_field = "steb014"
               
               OTHERWISE
                  CONTINUE FOREACH
            END CASE 
            IF l_staf005 = 'N' THEN
               CALL cl_set_comp_required(l_field,FALSE)
            END IF
         END FOREACH 
      ELSE
         CALL astt401_default_no_required_b(p_cmd)
      END IF 
   ELSE
      CALL astt401_default_no_required_b(p_cmd)  
   END IF  
   
   
   ############################   
   
   
   IF NOT cl_null(g_steb2_d[l_ac].stec009) THEN
      #檢查費用編號+經營方式是否存在asti204
      
      SELECT COUNT(*) INTO l_n FROM staf_t
       WHERE stafent = g_enterprise AND staf001= g_steb2_d[l_ac].stec009 AND staf002 = '4'
      IF l_n > 0 THEN
         DECLARE sel_staf_nq1 CURSOR FOR 
          SELECT staf003,staf004,staf005 FROM staf_t
           WHERE  stafent = g_enterprise AND staf001= g_steb2_d[l_ac].stec009 AND staf002 = '4'
         FOREACH sel_staf_nq1 INTO l_staf003,l_staf004,l_staf005
             CASE l_staf003
               WHEN 'stao004'
                  LET l_field = "stec010"
               WHEN 'stao005'
                  LET l_field = "stec011"                  
               WHEN 'stao006'
                  LET l_field = "stec012"
               WHEN 'stao007'
                  LET l_field = "stec013"
               WHEN 'stao008'
                  LET l_field = "stec014"
               WHEN 'stao009'
                  LET l_field = "stec015"
               WHEN 'stao010'
                  LET l_field = "stec016"
               WHEN 'stao011'
                  LET l_field = "stec017"
               WHEN 'stao012'
                  LET l_field = "stec018"                 
               WHEN 'stao017'
                  LET l_field = "stec019"
               WHEN 'stao018'
                  LET l_field = "stec020"
               
               OTHERWISE
                  CONTINUE FOREACH
            END CASE 
            IF l_staf005 = 'N' THEN
               CALL cl_set_comp_required(l_field,FALSE)
            END IF
         END FOREACH 
      ELSE
         CALL astt401_default_no_required_b(p_cmd)
      END IF 
   ELSE
      CALL astt401_default_no_required_b(p_cmd)  
   END IF  
  
END FUNCTION]]>
  </point>
  <point name="function.astt401_set_required_b" order="37" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_set_required_b(p_cmd)
DEFINE p_cmd   LIKE type_t.chr1   
DEFINE l_n     LIKE type_t.num5
DEFINE l_staf003 LIKE staf_t.staf003
DEFINE l_staf004 LIKE staf_t.staf004
DEFINE l_staf005 LIKE staf_t.staf005
DEFINE l_field   LIKE staf_t.staf003 

   IF NOT cl_null(g_steb_d[l_ac].steb002) THEN
      #檢查費用編號+經營方式是否存在asti204
      
      SELECT COUNT(*) INTO l_n FROM staf_t
       WHERE stafent = g_enterprise AND staf001= g_steb_d[l_ac].steb002 AND staf002 = '4'
      IF l_n > 0 THEN
         DECLARE sel_staf_q CURSOR FOR 
          SELECT staf003,staf004,staf005 FROM staf_t
           WHERE  stafent = g_enterprise AND staf001= g_steb_d[l_ac].steb002 AND staf002 = '4'
         FOREACH sel_staf_q INTO l_staf003,l_staf004,l_staf005
            #LET l_staf003 = cl_str_replace(l_staf003,"stao","steb")
            CASE l_staf003
               WHEN 'stao004'
                  LET l_field = "steb003"
               WHEN 'stao005'
                  LET l_field = "steb004"                  
               WHEN 'stao006'
                  LET l_field = "steb005"
               WHEN 'stao007'
                  LET l_field = "steb006"
               WHEN 'stao008'
                  LET l_field = "steb007"
               WHEN 'stao009'
                  LET l_field = "steb008"
               WHEN 'stao010'
                  LET l_field = "steb009"
               WHEN 'stao011'
                  LET l_field = "steb010"
               WHEN 'stao012'
                  LET l_field = "steb011"                 
               WHEN 'stao017'
                  LET l_field = "steb013"
               WHEN 'stao018'
                  LET l_field = "steb014"
               
               OTHERWISE
                  CONTINUE FOREACH
            END CASE 
            IF l_staf005 = 'Y' THEN
               CALL cl_set_comp_required(l_field,TRUE)
            END IF
         END FOREACH
      ELSE
         CALL astt401_default_required_b(p_cmd)     
      END IF    
   ELSE
      CALL astt401_default_required_b(p_cmd)
   END IF 
   
   ####################
   
    IF NOT cl_null(g_steb2_d[l_ac].stec009) THEN
      #檢查費用編號+經營方式是否存在asti204
      
      SELECT COUNT(*) INTO l_n FROM staf_t
       WHERE stafent = g_enterprise AND staf001= g_steb2_d[l_ac].stec009 AND staf002 = '4'
      IF l_n > 0 THEN
         DECLARE sel_staf_q1 CURSOR FOR 
          SELECT staf003,staf004,staf005 FROM staf_t
           WHERE  stafent = g_enterprise AND staf001= g_steb2_d[l_ac].stec009 AND staf002 = '4'
         FOREACH sel_staf_q1 INTO l_staf003,l_staf004,l_staf005
            #LET l_staf003 = cl_str_replace(l_staf003,"stao","steb")
            CASE l_staf003
               WHEN 'stao004'
                  LET l_field = "stec010"
               WHEN 'stao005'
                  LET l_field = "stec011"                  
               WHEN 'stao006'
                  LET l_field = "stec012"
               WHEN 'stao007'
                  LET l_field = "stec013"
               WHEN 'stao008'
                  LET l_field = "stec014"
               WHEN 'stao009'
                  LET l_field = "stec015"
               WHEN 'stao010'
                  LET l_field = "stec016"
               WHEN 'stao011'
                  LET l_field = "stec017"
               WHEN 'stao012'
                  LET l_field = "stec018"                 
               WHEN 'stao017'
                  LET l_field = "stec019"
               WHEN 'stao018'
                  LET l_field = "stec020"
               
               OTHERWISE
                  CONTINUE FOREACH
            END CASE 
            IF l_staf005 = 'Y' THEN
               CALL cl_set_comp_required(l_field,TRUE)
            END IF
         END FOREACH
      ELSE
         CALL astt401_default_required_b(p_cmd)     
      END IF    
   ELSE
      CALL astt401_default_required_b(p_cmd)
   END IF 
END FUNCTION]]>
  </point>
  <point name="function.astt401_default_required_b" order="38" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_default_required_b(p_cmd)
DEFINE p_cmd   LIKE type_t.chr1 

   IF g_steb_d[l_ac].steb005 = '1' THEN    #變動
      CALL cl_set_comp_required('steb008',FALSE)
      IF NOT cl_null(g_steb_d[l_ac].steb008) THEN
         CALL cl_set_comp_required('steb010',TRUE)
      END IF
      CALL cl_set_comp_required('steb009',TRUE)
   ELSE                                    #固定
      CALL cl_set_comp_required('steb010',TRUE)
   END IF   
   
   #####################g_current_page =2
   
   IF g_steb2_d[l_ac].stec012 = '1' THEN    #變動
      CALL cl_set_comp_required('stec015',FALSE)
      IF NOT cl_null(g_steb2_d[l_ac].stec015) THEN
         CALL cl_set_comp_required('stec017',TRUE)
      END IF
      CALL cl_set_comp_required('stec016',TRUE)
   ELSE                                    #固定
      CALL cl_set_comp_required('stec017',TRUE)
   END IF 

END FUNCTION]]>
  </point>
  <point name="function.astt401_default_no_required" order="39" ver="1" cite_std="N" new="Y" status="d" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_default_no_required(p_cmd)
DEFINE p_cmd   LIKE type_t.chr1 

   IF g_steb_d[l_ac].steb005 = '1' THEN    #變動
      CALL cl_set_comp_required('steb008',FALSE)
      IF cl_null(g_steb_d[l_ac].steb008) THEN
         CALL cl_set_comp_required('steb010',FALSE)
      END IF      
   ELSE                                    #固定
      CALL cl_set_comp_required('steb009',FALSE) 
      LET g_steb_d[l_ac].steb011 = ''
      CALL cl_set_comp_required('steb011',FALSE) 
   END IF   

   ##############g_current_page = 2
   IF g_steb2_d[l_ac].stec012 = '1' THEN    #變動
      CALL cl_set_comp_required('stec015',FALSE)
      IF cl_null(g_steb2_d[l_ac].stec015) THEN
         CALL cl_set_comp_required('stec017',FALSE)
      END IF      
   ELSE                                    #固定
      CALL cl_set_comp_required('stec016',FALSE) 
      LET g_steb2_d[l_ac].stec018 = ''
      CALL cl_set_comp_required('stec018',FALSE) 
   END IF 
   
END FUNCTION]]>
  </point>
  <point name="function.astt401_default_no_required_b" order="39" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_default_no_required_b(p_cmd)
DEFINE p_cmd   LIKE type_t.chr1 

   IF g_steb_d[l_ac].steb005 = '1' THEN    #變動
      CALL cl_set_comp_required('steb008',FALSE)
      IF cl_null(g_steb_d[l_ac].steb008) THEN
         CALL cl_set_comp_required('steb010',FALSE)
      END IF      
   ELSE                                    #固定
      CALL cl_set_comp_required('steb009',FALSE) 
      LET g_steb_d[l_ac].steb011 = ''
      CALL cl_set_comp_required('steb011',FALSE) 
   END IF   

   ##############g_current_page = 2
   IF g_steb2_d[l_ac].stec012 = '1' THEN    #變動
      CALL cl_set_comp_required('stec015',FALSE)
      IF cl_null(g_steb2_d[l_ac].stec015) THEN
         CALL cl_set_comp_required('stec017',FALSE)
      END IF      
   ELSE                                    #固定
      CALL cl_set_comp_required('stec016',FALSE) 
      LET g_steb2_d[l_ac].stec018 = ''
      CALL cl_set_comp_required('stec018',FALSE) 
   END IF 
   
END FUNCTION]]>
  </point>
  <point name="function.astt401_stec009_ref" order="40" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stec009_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_steb2_d[l_ac].stec009
   CALL ap_ref_array2(g_ref_fields,"SELECT stael003 FROM stael_t WHERE staelent='"||g_enterprise||"' AND stael001=? AND stael002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_steb2_d[l_ac].stec009_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_steb2_d[l_ac].stec009_desc
END FUNCTION]]>
  </point>
  <point name="function.astt401_stec004_ref" order="41" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stec004_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_steb2_d[l_ac].stec004
   CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_steb2_d[l_ac].stec004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_steb2_d[l_ac].stec004_desc
END FUNCTION]]>
  </point>
  <point name="function.astt401_stec005_ref" order="42" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stec005_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_steb2_d[l_ac].stec005
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2002' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_steb2_d[l_ac].stec005_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_steb2_d[l_ac].stec005_desc
END FUNCTION]]>
  </point>
  <point name="function.astt401_stec006_ref" order="43" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stec006_ref()
  #INITIALIZE g_ref_fields TO NULL
  #LET g_ref_fields[1] = g_steb2_d[l_ac].stec006
  #CALL ap_ref_array2(g_ref_fields,"SELECT oodbl004 FROM oodbl_t WHERE oodblent='"||g_enterprise||"' AND oodbl002=? AND oodbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
  #LET g_steb2_d[l_ac].stec006_desc = '', g_rtn_fields[1] , ''
  #DISPLAY BY NAME g_steb2_d[l_ac].stec006_desc
   
   SELECT oodbl004 INTO g_steb2_d[l_ac].stec006_desc
    FROM oodbl_t,ooef_t
   WHERE oodblent = g_enterprise
    AND oodbl001 = ooef019 
    AND oodbl002 = g_steb2_d[l_ac].stec006
    AND oodbl003 = g_dlang
    AND ooefent = g_enterprise
    AND ooef001 = g_stea_m.steaunit
   DISPLAY BY NAME g_steb2_d[l_ac].stec006_desc
END FUNCTION]]>
  </point>
  <point name="function.astt401_stec007_ref" order="44" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stec007_ref()
   #INITIALIZE g_ref_fields TO NULL
   #LET g_ref_fields[1] = g_steb2_d[l_ac].stec007
   #CALL ap_ref_array2(g_ref_fields,"SELECT oodbl004 FROM oodbl_t WHERE oodblent='"||g_enterprise||"' AND oodbl002=? AND oodbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
   #LET g_steb2_d[l_ac].stec007_desc = '', g_rtn_fields[1] , ''
   #DISPLAY BY NAME g_steb2_d[l_ac].stec007_desc
   
   SELECT oodbl004 INTO g_steb2_d[l_ac].stec007_desc
    FROM oodbl_t,ooef_t
   WHERE oodblent = g_enterprise
    AND oodbl001 = ooef019 
    AND oodbl002 = g_steb2_d[l_ac].stec007
    AND oodbl003 = g_dlang
    AND ooefent = g_enterprise
    AND ooef001 = g_stea_m.steaunit
   DISPLAY BY NAME g_steb2_d[l_ac].stec007_desc
END FUNCTION]]>
  </point>
  <point name="function.astt401_stec015_ref" order="45" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stec015_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_steb2_d[l_ac].stec015
   CALL ap_ref_array2(g_ref_fields,"SELECT stabl003 FROM stabl_t WHERE stablent='"||g_enterprise||"' AND stabl001=? AND stabl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_steb2_d[l_ac].stec015_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_steb2_d[l_ac].stec015_desc
END FUNCTION]]>
  </point>
  <point name="function.astt401_stec016_ref" order="46" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stec016_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_steb2_d[l_ac].stec016
   CALL ap_ref_array2(g_ref_fields,"SELECT stabl003 FROM stabl_t WHERE stablent='"||g_enterprise||"' AND stabl001=? AND stabl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_steb2_d[l_ac].stec016_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_steb2_d[l_ac].stec016_desc
END FUNCTION]]>
  </point>
  <point name="function.astt401_steb008_chk" order="47" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_steb008_chk(p_stab001)
DEFINE p_stab001   LIKE stab_t.stab001
DEFINE l_stabstus  LIKE stab_t.stabstus
DEFINE l_n         LIKE type_t.num5

   LET g_errshow = '1'
   INITIALIZE g_chkparam.* TO NULL
   LET g_chkparam.arg1 = p_stab001
   IF NOT cl_chk_exist("v_stab001") THEN
      RETURN FALSE
   END IF
   
   SELECT COUNT(*) INTO l_n FROM stab_t LEFT OUTER JOIN stat_t ON stabent = statent AND stab001 = stat003
     WHERE  stabent = 99 AND stab001= p_stab001 AND stat001 = '4' AND stat002 = g_stea_m.stea037
   IF l_n = 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'ast-00189'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   END IF
   
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.astt401_steb013_steb014_chk" order="48" ver="1" cite_std="N" new="Y" status="d" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="function.astt401_steb013_014_chk" order="48" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_steb013_014_chk()
   DEFINE l_n  LIKE type_t.num5
   
   LET l_n = 0
   IF g_steb_d[l_ac].steb013 < g_stea_m.stea019 OR g_steb_d[l_ac].steb013 > g_stea_m.stea020 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'ast-00032'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   END IF
   
   IF g_steb_d[l_ac].steb014 < g_stea_m.stea019 OR g_steb_d[l_ac].steb014 > g_stea_m.stea020 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'ast-00032'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   END IF
   
   IF NOT cl_null(g_steb_d[l_ac].steb013) AND NOT cl_null(g_steb_d[l_ac].steb014) THEN
      IF g_steb_d[l_ac].steb013 > g_steb_d[l_ac].steb014 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'aoo-00122'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
   END IF
   
  
   CALL astt401_cal_nextd('1') RETURNING g_steb_d[l_ac].steb015,g_steb_d[l_ac].steb016,g_steb_d[l_ac].steb017
   
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.astt401_stea033_chk" order="49" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stea033_chk(p_stea033)
DEFINE  p_stea033    LIKE stea_t.stea033
DEFINE  l_oodcstus   LIKE oodc_t.oodcstus

   LET g_errno = ''
   SELECT oodbstus INTO l_oodcstus
     FROM oodb_t,ooef_t
    WHERE oodbent = g_enterprise
      AND oodb001 = ooef019
      AND oodb002 = p_stea033
      AND oodb004 = '1'
      AND ooefent = g_enterprise
      AND ooef001 = g_stea_m.steaunit  
    
      
   CASE
      WHEN SQLCA.sqlcode = 100 LET g_errno = 'ast-00009' #稅目不存在
                               
      WHEN l_oodcstus <> 'Y'   LET g_errno = 'ast-00010' #稅目已無效
                               
   END CASE
   IF cl_null(g_errno) THEN
      RETURN TRUE
   ELSE
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = g_errno
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   END IF
END FUNCTION]]>
  </point>
  <point name="function.astt401_init_required" order="50" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_init_required(p_cmd)
DEFINE p_cmd   LIKE type_t.chr1
   CALL cl_set_comp_required("steb004,steb005,steb006,steb007,steb008,steb009,steb010,steb013,steb014",TRUE)
   CALL cl_set_comp_required("steb003,steb011",FALSE)
   
   ###################
   
   CALL cl_set_comp_required("stec011,stec012,stec013,stec014,stec015,stec016,stec017,steb019,steb020",TRUE)
   CALL cl_set_comp_required("stec010,steb018",FALSE)

END FUNCTION]]>
  </point>
  <point name="function.astt401_stec019_020_chk" order="51" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stec019_020_chk()
DEFINE l_n  LIKE type_t.num5
   
   LET l_n = 0
   IF g_steb2_d[l_ac].stec019 < g_stea_m.stea019 OR g_steb2_d[l_ac].stec019 > g_stea_m.stea020 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'ast-00032'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   END IF
   
   IF g_steb2_d[l_ac].stec020 < g_stea_m.stea019 OR g_steb2_d[l_ac].stec020 > g_stea_m.stea020 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'ast-00032'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   END IF
   
   IF NOT cl_null(g_steb2_d[l_ac].stec019) AND NOT cl_null(g_steb2_d[l_ac].stec020) THEN
      IF g_steb2_d[l_ac].stec019 > g_steb2_d[l_ac].stec020 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'aoo-00122'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
   END IF
   
  
   CALL astt401_cal_nextd('2') RETURNING g_steb2_d[l_ac].stec021,g_steb2_d[l_ac].stec022,g_steb2_d[l_ac].stec023
   
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.astt401_stea013_genb" order="52" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stea013_genb()
DEFINE l_sql    STRING
DEFINE l_stah   RECORD LIKE stah_t.*
DEFINE l_next_b LIKE type_t.dat
DEFINE l_steb015 LIKE steb_t.steb015
DEFINE l_steb016 LIKE steb_t.steb016
DEFINE l_steb017 LIKE steb_t.steb017 

   DECLARE  sel_stah CURSOR FOR SELECT stahent,stah001,stah002,stah003,stah004,stah005,stah006,
          stah007,stah008,stah009,stah010,stah011,stah012,stah013,stah014,stah015,stah016
     FROM stah_t 
    WHERE stahent = g_enterprise AND stah001 =g_stea_m.stea013 
   
   FOREACH sel_stah INTO l_stah.*
   
       CALL s_astm301_cal_nextd(l_stah.stah007,l_stah.stah008,g_stea_m.stea019,g_stea_m.stea020,'','') RETURNING l_steb015,l_steb016,l_steb017
       
      INSERT INTO steb_t(stebent,stebsite,stebunit,stebdocno,stebseq,
                       steb001,steb002,steb003,steb004,steb005,
                       steb006,steb007,steb008,steb009,steb010,
                       steb011,steb012,steb013,steb014,steb015,
                       steb016,steb017)
          VALUES (l_stah.stahent,g_stea_m.steasite,g_stea_m.steaunit,g_stea_m.steadocno,l_stah.stah002,
                    g_stea_m.stea001,l_stah.stah003,l_stah.stah004,l_stah.stah005,l_stah.stah006,
                    l_stah.stah007,l_stah.stah008,l_stah.stah009,l_stah.stah010,l_stah.stah011,
                    l_stah.stah012,'0',g_stea_m.stea019,g_stea_m.stea020,l_steb015,
                    l_steb016,l_steb017)
                                  
   END FOREACH 
END FUNCTION]]>
  </point>
  <point name="function.astt401_stea013_other" order="53" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stea013_other()
 
  SELECT stag003,stag004,stag005,stag006,stag007,stag007 
     INTO g_stea_m.stea035,g_stea_m.stea036,g_stea_m.stea037,g_stea_m.stea032,
          g_stea_m.stea033, g_stea_m.stea034
     FROM stag_t
    WHERE stagent = g_enterprise AND stag001 = g_stea_m.stea013
    
   LET g_stea_m_t.stea035 = g_stea_m.stea035
   LET g_stea_m_t.stea036 = g_stea_m.stea036
   LET g_stea_m_t.stea037 = g_stea_m.stea037
   LET g_stea_m_t.stea032 = g_stea_m.stea032
   LET g_stea_m_t.stea033 = g_stea_m.stea033
   LET g_stea_m_t.stea034 = g_stea_m.stea034
   
   DISPLAY BY NAME g_stea_m.stea035,g_stea_m.stea036,g_stea_m.stea037,g_stea_m.stea032,
          g_stea_m.stea033, g_stea_m.stea034
   
   CALL astt401_stea035_ref()
   CALL astt401_stea036_ref()
   CALL astt401_stea037_ref()
   CALL astt401_stea032_ref()
   CALL astt401_stea033_ref()
   CALL astt401_stea034_ref()
END FUNCTION]]>
  </point>
  <point name="function.astt401_stea037_chk" order="54" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stea037_chk()
DEFINE l_n1        LIKE type_t.num5
DEFINE l_n2        LIKE type_t.num5
DEFINE l_n3        LIKE type_t.num5
DEFINE l_n4        LIKE type_t.num5

   INITIALIZE g_chkparam.* TO NULL
   LET g_errshow = '1'
   LET g_chkparam.arg1 = g_stea_m.stea037
   IF NOT cl_chk_exist("v_oocq002_2060") THEN
      RETURN FALSE
   END IF
   
      #单身条件基准 和单头的结算类型不符合就报错 
   SELECT COUNT(*) INTO l_n1 FROM steb_t 
    WHERE stebent = g_enterprise AND stebdocno = g_stea_m.steadocno AND steb008 IS NOT NULL
      AND  NOT EXISTS (SELECT 1 FROM stab_t LEFT OUTER JOIN stat_t ON stabent = statent AND stab001 = stat003
              WHERE stab001 = steb008 AND stat001 = '4' AND stat002 = g_stea_m.stea037)
              
              
   SELECT COUNT(*) INTO l_n2 FROM steb_t 
    WHERE stebent = g_enterprise AND stebdocno = g_stea_m.steadocno AND steb009 IS NOT NULL
      AND  NOT EXISTS (SELECT 1 FROM stab_t LEFT OUTER JOIN stat_t ON stabent = statent AND stab001 = stat003
              WHERE stab001 = steb009 AND stat001 = '4' AND stat002 = g_stea_m.stea037)

   SELECT COUNT(*) INTO l_n3 FROM stec_t 
    WHERE stecent = g_enterprise AND stecdocno = g_stea_m.steadocno AND stec015 IS NOT NULL
      AND  NOT EXISTS (SELECT 1 FROM stab_t LEFT OUTER JOIN stat_t ON stabent = statent AND stab001 = stat003
              WHERE stab001 = stec015 AND stat001 = '4' AND stat002 = g_stea_m.stea037)
   
   SELECT COUNT(*) INTO l_n4 FROM stec_t 
    WHERE stecent = g_enterprise AND stecdocno = g_stea_m.steadocno AND stec016 IS NOT NULL
      AND  NOT EXISTS (SELECT 1 FROM stab_t LEFT OUTER JOIN stat_t ON stabent = statent AND stab001 = stat003
              WHERE stab001 = stec016 AND stat001 = '4' AND stat002 = g_stea_m.stea037)
   
   IF l_n1 > 0 OR l_n2 > 0 OR l_n3 > 0 OR l_n4 > 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'ast-00110'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   END IF
   
   RETURN TRUE
   
END FUNCTION]]>
  </point>
  <point name="function.astt401_interval_chk" order="55" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_interval_chk(p_cmd)
DEFINE l_n       LIKE type_t.num5
DEFINE p_cmd     LIKE type_t.chr1

  IF g_stea_m.stea000 = 'I' AND (p_cmd = 'a' OR  p_cmd = 'r' ) THEN
     SELECT COUNT(*) INTO l_n FROM stfa_t
      WHERE stfaent = g_enterprise AND stfa003 = '4' 
         AND stfa005 = g_stea.stea005 AND stfasite = g_stea.steaunit
         AND (stfa019 BETWEEN g_stea.stea019 AND g_stea.stea020
              OR stfa020 BETWEEN g_stea.stea019 AND g_stea.stea020
              OR g_stea.stea019 BETWEEN stfa019 AND stfa020
              OR g_stea.stea020 BETWEEN stfa019 AND stfa020)
         AND stfastus = 'Y'
    
  ELSE
     SELECT COUNT(*) INTO l_n FROM stfa_t
      WHERE stfaent = g_enterprise AND stfa003 = '4'
         AND stfa005 = g_stea.stea005 AND stfasite = g_stea.steaunit
         AND (stfa019 BETWEEN g_stea.stea019 AND g_stea.stea020
              OR stfa020 BETWEEN g_stea.stea019 AND g_stea.stea020
              OR g_stea.stea019 BETWEEN stfa019 AND stfa020
              OR g_stea.stea020 BETWEEN stfa019 AND stfa020)
         AND stfastus = 'Y'
         AND stfa001 <>  g_stea_m.stea001

  END IF
   IF l_n > 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'ast-00255'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   END IF
   RETURN TRUE  
END FUNCTION]]>
  </point>
  <point name="function.astt401_stea001_other" order="56" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stea001_other()

   SELECT NVL(stfa002+1,2),stfa009,
          stfa005,stfal003,stfal004,stfa006,stfa007,stfa008,stfa047,stfa048,
          stfa044,stfa010,stfa011,stfa012,stfa013,stfa014,
          stfa015,stfa016,stfa045,stfa046,    
          
          stfa029,stfa030,stfa032,stfa033,stfa034,stfa035,
          stfa036,stfa037,stfa038,stfa039,stfa040,stfa028,
          
          stfa017,stfa018,stfa019,stfa020,stfa021,stfa049, 
          stfa022,stfa023,stfa024,stfa025,stfa026,stfa027,
          stfa031,stfa042
     INTO g_stea_m.stea002,g_stea_m.stea009,
          g_stea_m.stea005,g_stea_m.steal002,g_stea_m.steal003,g_stea_m.stea006,g_stea_m.stea007,g_stea_m.stea008,g_stea_m.stea047,g_stea_m.stea048,
          g_stea_m.stea044,g_stea_m.stea010,g_stea_m.stea011,g_stea_m.stea012,g_stea_m.stea013,g_stea_m.stea014,
          g_stea_m.stea015,g_stea_m.stea016,g_stea_m.stea045,g_stea_m.stea046,             
          g_stea_m.stea029,g_stea_m.stea030,g_stea_m.stea032,g_stea_m.stea033,g_stea_m.stea034,g_stea_m.stea035,
          g_stea_m.stea036,g_stea_m.stea037,g_stea_m.stea038,g_stea_m.stea039,g_stea_m.stea040,g_stea_m.stea028,        
          g_stea_m.stea017,g_stea_m.stea018,g_stea_m.stea019,g_stea_m.stea020,g_stea_m.stea021,g_stea_m.stea049, 
          g_stea_m.stea022,g_stea_m.stea023,g_stea_m.stea024,g_stea_m.stea025,g_stea_m.stea026,g_stea_m.stea027,
          g_stea_m.stea031,g_stea_m.stea042      
     FROM stfa_t
           LEFT OUTER JOIN stfal_t ON stfaent = stfalent AND stfa001 = stfal001 AND stfal002 = g_dlang                              
   WHERE stfaent = g_enterprise AND stfa001 = g_stea_m.stea001      
   LET g_stea_m.stea002 = g_stea_m.stea002 USING "<<<<<<<<<#"   

   SELECT stfj004 INTO g_stea_m.next_b FROM ( SELECT * FROM stfj_t
     WHERE stfjent = g_enterprise AND  stfj001 = g_stea_m.stea001 AND stfj005= 'N' ORDER BY stfjseq) WHERE rownum = 1
   DISPLAY g_stea_m.next_b TO next_b   

   SELECT stfal003,stfal004 INTO g_stea_m.steal002,g_stea_m.steal003 FROM stfal_t
    WHERE stfalent = g_enterprise AND stfal001 = g_stea_m.stea001 AND stfal002 = g_dlang
    

   DISPLAY BY NAME g_stea_m.stea002,g_stea_m.stea009,
          g_stea_m.stea005,g_stea_m.steal002,g_stea_m.steal003,g_stea_m.stea006,g_stea_m.stea007,g_stea_m.stea008,g_stea_m.stea047,g_stea_m.stea048,
          g_stea_m.stea044,g_stea_m.stea010,g_stea_m.stea011,g_stea_m.stea012,g_stea_m.stea013,g_stea_m.stea014,
          g_stea_m.stea015,g_stea_m.stea016,g_stea_m.stea045,g_stea_m.stea046,             
          g_stea_m.stea029,g_stea_m.stea030,g_stea_m.stea032,g_stea_m.stea033,g_stea_m.stea034,g_stea_m.stea035,
          g_stea_m.stea036,g_stea_m.stea037,g_stea_m.stea038,g_stea_m.stea039,g_stea_m.stea040,g_stea_m.stea028,        
          g_stea_m.stea017,g_stea_m.stea018,g_stea_m.stea019,g_stea_m.stea020,g_stea_m.stea021,g_stea_m.stea049, 
          g_stea_m.stea022,g_stea_m.stea023,g_stea_m.stea024,g_stea_m.stea025,g_stea_m.stea026,g_stea_m.stea027,
          g_stea_m.stea031,g_stea_m.stea042

   CALL astt401_stea006_ref()
   CALL astt401_stea047_ref()
   CALL astt401_stea048_ref()
   CALL astt401_stea044_ref()
   CALL astt401_stea010_ref()
   CALL astt401_stea011_ref()
   CALL astt401_stea012_ref()
   CALL astt401_stea013_ref()
   CALL astt401_stea014_ref()
   CALL astt401_stea015_ref()
   CALL astt401_stea045_ref()
   CALL astt401_stea032_ref() 
   CALL astt401_stea033_ref()
   CALL astt401_stea034_ref()
   CALL astt401_stea035_ref()
   CALL astt401_stea036_ref()
   CALL astt401_stea037_ref()
   CALL astt401_stea038_ref()
END FUNCTION]]>
  </point>
  <point name="function.astt401_stea001_genb" order="57" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stea001_genb()
    IF g_steb_d.getLength() > 0 OR g_steb2_d.getLength() > 0 OR g_steb3_d.getLength() > 0 OR g_steb4_d.getLength() > 0 
       OR g_steb5_d.getLength() > 0 OR g_steb6_d.getLength() > 0 OR g_steb7_d.getLength() > 0 OR g_steb8_d.getLength() > 0 OR g_steb9_d.getLength() > 0THEN
      IF NOT cl_ask_confirm('axm-00175') THEN
         RETURN FALSE
      END IF
      
      DELETE FROM steb_t WHERE stebent = g_enterprise AND stebdocno = g_stea_m.steadocno
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'del steb'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
      
      DELETE FROM stec_t WHERE stecent = g_enterprise AND stecdocno = g_stea_m.steadocno
      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'del stec'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
      
      DELETE FROM sted_t WHERE stedent = g_enterprise AND steddocno = g_stea_m.steadocno
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'del sted'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
      
       DELETE FROM stee_t WHERE steeent = g_enterprise AND steedocno = g_stea_m.steadocno
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'del stee'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
      
       DELETE FROM stef_t WHERE stefent = g_enterprise AND stefdocno = g_stea_m.steadocno
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'del stef'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
      
      DELETE FROM steg_t WHERE stegent = g_enterprise AND stegdocno = g_stea_m.steadocno
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'del steg'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
      
      DELETE FROM steh_t WHERE stehent = g_enterprise AND stehdocno = g_stea_m.steadocno
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'del steh'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
      
      DELETE FROM stei_t WHERE steient = g_enterprise AND steidocno = g_stea_m.steadocno
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'del stei'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
      
      DELETE FROM stej_t WHERE stejent = g_enterprise AND stejdocno = g_stea_m.steadocno
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'del stej'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
   END IF
   
   INSERT INTO steb_t(stebent,stebdocno,stebunit,stebsite,stebseq,steb001,steb002,steb003,steb004,steb005,steb006,
                       steb007,steb008,steb009,steb010,steb011,steb012,steb013,steb014,steb015,steb016,steb017)
   SELECT stfbent,g_stea_m.steadocno,stfbsite,stfbunit,stfbseq,stfb001,stfb002,stfb003,stfb004,stfb005,stfb006,
                       stfb007,stfb008,stfb009,stfb010,stfb011,stfb012,stfb013,stfb014,stfb015,stfb016,stfb017
     FROM stfb_t 
    WHERE stfbent = g_enterprise AND stfb001 =g_stea_m.stea001 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'ins steb'
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   END IF
   
    #單身二 
   INSERT INTO stec_t(stecent,stecdocno,stecunit,stecsite,stecseq,stec001,stec002,stec003,stec004,stec005,stec006,stec007,
                   stec008,stec009,stec010,stec011,stec012,stec013,stec014,stec015,stec016,stec017,stec018,stec019,stec020,stec021,stec022,stec023,stec024,stec025)
         SELECT  stfcent,g_stea_m.steadocno,stfcsite,stfcunit,stfcseq,stfc001,stfc002,stfc003,stfc004,stfc005,
                        stfc006,stfc007,stfc008,stfc009,stfc010,stfc011,stfc012,stfc013,stfc014,stfc015,
                        stfc016,stfc017,stfc018,stfc019,stfc020,stfc021,stfc022,stfc023,stfc024,stfc025 FROM stfc_t         
         WHERE stfcent =g_enterprise AND stfc001 = g_stea_m.stea001 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'ins stec'
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   END IF
  
                  
     #單身三  
    INSERT INTO sted_t(stedent,steddocno,stedunit,stedsite,stedseq,stedseq1,sted001,sted002,sted003,sted004,sted005,sted006,sted007,sted008)
       SELECT stfdent,g_stea_m.steadocno,stfdsite,stfdunit,stfdseq,stfdseq1,stfd001,stfd002,stfd003,stfd004,stfd005,stfd006,stfd007,stfd008 FROM stfd_t
     WHERE stfdent = g_enterprise AND stfd001 = g_stea_m.stea001 
    IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'ins sted'
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
    END IF
  
    #单身四
     INSERT INTO stee_t(steeent,steedocno,steeunit,steesite,steeseq,stee001,stee002,stee003,stee004,stee005,stee006,stee007,stee008,stee009,stee010,stee011)
       SELECT stfeent,g_stea_m.steadocno,stfesite,stfeunit,stfeseq,stfe001,stfe002,stfe003,stfe004,stfe005,stfe006,stfe007,stfe008,stfe009,stfe010,stfe011 FROM stfe_t
        WHERE stfeent = g_enterprise AND stfe001 = g_stea_m.stea001
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'ins stee'
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   END IF
    
    #单身五
    INSERT INTO stef_t(stefent,stefdocno,stefunit,stefsite,stefseq,stef001,stef002,stef003,stef004,stef005,stef006,stef007,stef008,stef009)
            SELECT stffent,g_stea_m.steadocno,stffsite,stffunit,stffseq,stff001,stff002,stff003,stff004,stff005,stff006,stff007,stff008,stff009 FROM stff_t
             WHERE stffent = g_enterprise AND stff001 = g_stea_m.stea001   
    IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'ins stef'
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   END IF        
    
     #单身六
     INSERT INTO steg_t(stegent,stegdocno,stegunit,stegsite,stegseq,steg001,steg002,steg003,steg004,steg005)
            SELECT stfgent,g_stea_m.steadocno,stfgsite,stfgunit,stfgseq,stfg001,stfg002,stfg003,stfg004,stfg005 FROM stfg_t
             WHERE stfgent = g_enterprise AND stfg001 = g_stea_m.stea001
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'ins steg'
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   END IF 
     
    #单身七
    INSERT INTO steh_t(stehent,stehdocno,stehunit,stehsite,stehseq,steh001,steh002,steh003) 
       SELECT stfhent,g_stea_m.steadocno,stfhsite,stfhunit,stfhseq,stfh001,stfh002,stfh003 FROM stfh_t
       WHERE stfhent =g_enterprise AND stfh001= g_stea_m.stea001 
    IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'ins steg'
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   END IF
   
    #单身八
     INSERT INTO stei_t(steient,steidocno,steiunit,steisite,steiseq,stei001,stei002,stei003,stei004,stei005,stei006,stei007,stei008,stei009,stei010) 
            SELECT stfient,g_stea_m.steadocno,stfisite,stfiunit,stfiseq,stfi001,stfi002,stfi003,stfi004,stfi005,stfi006,stfi007,stfi008,stfi009,stfi010 FROM stfi_t
             WHERE stfient = g_enterprise AND stfi001 = g_stea_m.stea001
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'ins stei'
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   END IF
    
     #单身九
    INSERT INTO stej_t(stejent,stejdocno,stejunit,stejsite,stejseq,stej001,stej002,stej003,stej004,stej005,stej006)
           SELECT  stfjent,g_stea_m.steadocno,stfjsite,stfjunit,stfjseq,stfj001,stfj002,stfj003,stfj004,stfj005,stfj006 FROM stfj_t
            WHERE stfjent = g_enterprise AND stfj001 = g_stea_m.stea001      
    IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'ins stej'
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
    END IF 
  
    RETURN TRUE
   
END FUNCTION]]>
  </point>
  <point name="function.astt401_stee003_ref" order="58" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stee003_ref()
  INITIALIZE g_ref_fields TO NULL
  LET g_ref_fields[1] = g_steb3_d[l_ac].stee003
  CALL ap_ref_array2(g_ref_fields,"SELECT stael003 FROM stael_t WHERE staelent='"||g_enterprise||"' AND stael001=? AND stael002='"||g_dlang||"'","") RETURNING g_rtn_fields
  LET g_steb3_d[l_ac].stee003_desc = '', g_rtn_fields[1] , ''
  DISPLAY BY NAME g_steb3_d[l_ac].stee003_desc
END FUNCTION]]>
  </point>
  <point name="function.astt401_sted004_ref" order="59" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_sted004_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_steb8_d[l_ac].sted004
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2024' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_steb8_d[l_ac].sted004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_steb8_d[l_ac].sted004_desc
END FUNCTION]]>
  </point>
  <point name="function.astt401_get_nextdate" order="60" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_get_nextdate(p_stea036,p_date1,p_date2)
DEFINE p_stea036   LIKE stea_t.stea036
DEFINE p_date1     LIKE stca_t.stca017
DEFINE p_date2     LIKE stca_t.stca018
DEFINE r_nextdate  LIKE stca_t.stca017
DEFINE l_staa002   LIKE staa_t.staa002
DEFINE l_staa003   LIKE staa_t.staa003
DEFINE l_staa004   LIKE staa_t.staa004
DEFINE l_date      LIKE type_t.dat

   IF cl_null(p_stea036) OR cl_null(p_date1) OR cl_null(p_date2) THEN
      RETURN ''
   END IF
   
   SELECT staa002,staa003,staa004 INTO l_staa002,l_staa003,l_staa004
     FROM staa_t
    WHERE staa001 = p_stea036
   IF cl_null(l_staa002) THEN LET l_staa002 = 0 END IF
   IF cl_null(l_staa003) THEN LET l_staa003 = 0 END IF
   IF l_staa002 = 0 AND l_staa003 = 0 THEN RETURN '' END IF
   
   LET l_date = p_date1
   IF l_staa002 > 0 THEN
      IF l_staa004 = '1' THEN
         LET r_nextdate = s_date_get_date(p_date1,l_staa002,0)
      ELSE
         LET r_nextdate = s_date_get_date(p_date1,l_staa002-1,0)
      END IF
      LET l_date = r_nextdate  
   END IF
   IF l_staa004 = '1' THEN
   
      LET r_nextdate = s_date_get_date(l_date,0,l_staa003-1)
   ELSE
      IF l_staa003 > 0 THEN
         LET r_nextdate = s_date_get_date(l_date,0,l_staa003-1)
      END IF
   END IF
   IF l_staa004 = '2' THEN
      LET r_nextdate = s_date_get_last_date(r_nextdate)
   END IF
   IF r_nextdate > p_date2 THEN LET r_nextdate = p_date2 END IF
   RETURN r_nextdate
END FUNCTION]]>
  </point>
  <point name="function.astt401_upd_stej" order="61" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_upd_stej(p_cmd)
DEFINE p_cmd       LIKE type_t.chr1
DEFINE r_success   LIKE type_t.num5
DEFINE l_cnt       LIKE type_t.num5
DEFINE l_stfa036   LIKE stfa_t.stfa036
DEFINE l_stfa019   LIKE stfa_t.stfa019
DEFINE l_stfa020   LIKE stfa_t.stfa020
DEFINE l_stfj004   LIKE stfj_t.stfj004

   LET r_success = TRUE
   #如果结算方式、生失效日期、下次计算日有异动才提示是否删除为结算帐期，重新产生帐期
   IF p_cmd = 'a' AND g_stea_m.stea000 = 'U' THEN
      SELECT stfa036,stfa019,stfa020 INTO l_stfa036,l_stfa019,l_stfa020
       FROM stfa_t
      WHERE stfaent = g_enterprise
        AND stfa001 = g_stea_m.stea001
      SELECT MIN(stfj004) INTO l_stfj004 FROM stfj_t
       WHERE stfjent = g_enterprise
         AND stfj001 = g_stea_m.stea001
         AND stfj005 = 'N'
      IF g_stea_m.stea036 <> l_stfa036 OR g_stea_m.stea019 <> l_stfa019 OR 
         g_stea_m.stea020 <> l_stfa020 OR g_stea_m.next_b <> l_stfj004 THEN
         IF NOT cl_ask_confirm('ast-00146') THEN
            LET r_success = FALSE
         END IF
      ELSE
         #没有变，不用更新单身帐期
         RETURN TRUE
      END IF
   END IF
   
   IF p_cmd = 'u'  THEN
      IF g_stea_m.stea036 <> g_stea_m_t.stea036 OR g_stea_m.stea019 <> g_stea_m_t.stea019  OR 
         g_stea_m.stea020 <> g_stea_m_t.stea020 OR g_stea_m.next_b <> g_stea_m_t.next_b THEN
         LET l_cnt = 0
         SELECT COUNT(*) INTO l_cnt FROM stej_t
          WHERE stejent = g_enterprise AND stejdocno = g_stea_m.steadocno
            AND stej005 = 'Y'
         IF l_cnt > 0 THEN
            IF NOT cl_ask_confirm('ast-00097') THEN
               LET r_success = FALSE
            END IF
         ELSE
            IF NOT cl_ask_confirm('ast-00146') THEN
               LET r_success = FALSE
            END IF
         END IF
      ELSE
         #没有变，不用更新单身帐期
         RETURN TRUE
      END IF
   END IF
   
   IF r_success THEN
      IF NOT s_astt401_cal_period(g_stea_m.steadocno,g_stea_m.stea001,g_stea_m.stea019,g_stea_m.stea020,g_stea_m.stea036,g_stea_m.next_b,g_stea_m.steasite,g_stea_m.steaunit) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'ast-00049'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()
         LET r_success = FALSE
      END IF
   END IF
   
   IF r_success = FALSE THEN
      IF p_cmd = 'a' AND g_stea_m.stea000 = 'U' THEN
         LET g_stea_m.stea036 = l_stfa036
         LET g_stea_m.stea019 = l_stfa019
         LET g_stea_m.stea020 = l_stfa020
         LET g_stea_m.next_b = l_stfj004
      ELSE
         LET g_stea_m.stea036 = g_stea_m_t.stea036
         LET g_stea_m.stea019 = g_stea_m_t.stea019
         LET g_stea_m.stea020 = g_stea_m_t.stea020
         LET g_stea_m.next_b = g_stea_m_t.next_b
      END IF
   ELSE
      CALL astt401_b_fill()
   END IF
   DISPLAY BY NAME g_stea_m.stea036,g_stea_m.stea019,g_stea_m.stea020,g_stea_m.next_b
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.astt401_steg003_ref" order="62" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_steg003_ref()

   SELECT mhacl005 INTO  g_steb4_d[l_ac].steg003_desc FROM mhacl_t
    WHERE mhaclent = g_enterprise AND mhacl001 = g_stea_m.stea047
      AND mhacl002 =  g_stea_m.stea048 AND mhacl003 = g_steb4_d[l_ac].steg003 
      AND mhacl004 = g_dlang
 
   DISPLAY BY NAME g_steb4_d[l_ac].steg003_desc  
END FUNCTION]]>
  </point>
  <point name="function.astt401_steg002_ref" order="63" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_steg002_ref()
  SELECT mhadl006 INTO  g_steb4_d[l_ac].steg002_desc FROM mhadl_t
   WHERE mhadlent = g_enterprise AND mhadl001 = g_stea_m.stea047
     AND mhadl002 = g_stea_m.stea048 AND mhadl003 = g_steb4_d[l_ac].steg003 
     AND mhadl004 = g_steb4_d[l_ac].steg002 AND mhadl005 = g_dlang
   
   DISPLAY BY NAME g_steb4_d[l_ac].steg002_desc
END FUNCTION]]>
  </point>
  <point name="function.astt401_steg003_chk" order="64" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_steg003_chk()
DEFINE l_n   LIKE type_t.num5

   IF NOT cl_null(g_steb4_d[l_ac].steg002) AND NOT cl_null(g_steb4_d[l_ac].steg003) THEN
   
      SELECT COUNT(*) INTO l_n FROM mhad_t
       WHERE mhadent = g_enterprise AND mhad001 = g_stea_m.stea047 AND mhad002 =g_stea_m.stea048
       AND mhad003 =  g_steb4_d[l_ac].steg003 AND mhad004 = g_steb4_d[l_ac].steg002
      IF l_n=0 THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.code = 'amh-00071'
          LET g_errparam.extend = ''
          LET g_errparam.popup = TRUE
          CALL cl_err()         
          RETURN FALSE     
      END IF       
   END IF
   
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.astt401_steg002_other" order="65" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_steg002_other()

   IF NOT cl_null(g_steb4_d[l_ac].steg002) AND NOT cl_null(g_steb4_d[l_ac].steg003) THEN
     SELECT mhad005,mhad007 INTO g_steb4_d[l_ac].steg004,g_steb4_d[l_ac].steg005 FROM mhad_t
      WHERE mhadent = g_enterprise AND mhad001 = g_stea_m.stea047 AND mhad002 =g_stea_m.stea048
      AND mhad003 =  g_steb4_d[l_ac].steg003 AND mhad004 = g_steb4_d[l_ac].steg002
   END IF
   DISPLAY BY NAME g_steb4_d[l_ac].steg004,g_steb4_d[l_ac].steg005 
END FUNCTION]]>
  </point>
  <point name="function.astt401_stei003_ref" order="66" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stei003_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_steb6_d[l_ac].stei003
   CALL ap_ref_array2(g_ref_fields,"SELECT stael003 FROM stael_t WHERE staelent='"||g_enterprise||"' AND stael001=? AND stael002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_steb6_d[l_ac].stei003_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_steb6_d[l_ac].stei003_desc
END FUNCTION]]>
  </point>
  <point name="function.astt401_init_entry" order="67" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_init_entry(p_cmd)
DEFINE p_cmd   LIKE type_t.chr1

   CALL cl_set_comp_entry("steb003,steb004,steb005,steb006,steb007,steb008,steb009,steb010,steb011,steb013,steb014",TRUE)
   
   CALL cl_set_comp_entry("stec010,stec011,stec012,stec013,stec014,stec015,stec016,stec017,stec018,stec019,stec020",TRUE)
   
END FUNCTION]]>
  </point>
  <point name="function.astt401_default_entry_b" order="68" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_default_entry_b(p_cmd)
DEFINE p_cmd   LIKE type_t.chr1
DEFINE l_stae006  LIKE stae_t.stae006
DEFINE l_stae006_1  LIKE stae_t.stae006

    IF g_steb_d[l_ac].steb005 = '1' THEN    #變動      
       CALL cl_set_comp_entry('steb008,steb009',TRUE)
    ELSE                                    #固定
       CALL cl_set_comp_entry('steb010',TRUE)
    END IF 
    #抓取价款类型
    SELECT stae006 INTO  l_stae006 FROM stae_t WHERE staeent = g_enterprise AND stae001 = g_steb_d[l_ac].steb002
    IF l_stae006 = '3' THEN
       CALL cl_set_comp_entry('steb004',TRUE)
    ELSE
       CALL cl_set_comp_entry('steb004',FALSE)
    END IF 
    
    #################
      
    IF g_steb2_d[l_ac].stec012 = '1' THEN    #變動      
       CALL cl_set_comp_entry('stec015,stec016',TRUE)
    ELSE                                    #固定
       CALL cl_set_comp_entry('stec017',TRUE)
    END IF 
    #抓取价款类型
    SELECT stae006 INTO  l_stae006_1 FROM stae_t WHERE staeent = g_enterprise AND stae001 = g_steb2_d[l_ac].stec009
    IF l_stae006_1 = '3' THEN
       CALL cl_set_comp_entry('stec011',TRUE)
    ELSE
       CALL cl_set_comp_entry('stec011',FALSE)
    END IF 
END FUNCTION]]>
  </point>
  <point name="function.astt401_default_no_entry_b" order="69" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_default_no_entry_b(p_cmd)
DEFINE p_cmd   LIKE type_t.chr1

    IF g_steb_d[l_ac].steb005 = '1' THEN    #變動
       
    ELSE                                    #固定
        LET g_steb_d[l_ac].steb008 = ''
        LET g_steb_d[l_ac].steb008_desc = ''
        LET g_steb_d[l_ac].steb009 = ''
        LET g_steb_d[l_ac].steb009_desc = ''
        CALL cl_set_comp_entry('steb008,steb009,steb011',FALSE)
    END IF
    
    ######################
    IF g_steb2_d[l_ac].stec012 = '1' THEN    #變動
       
    ELSE                                    #固定
        LET g_steb2_d[l_ac].stec015 = ''
        LET g_steb2_d[l_ac].stec015_desc = ''
        LET g_steb2_d[l_ac].stec016 = ''
        LET g_steb2_d[l_ac].stec016_desc = ''
        CALL cl_set_comp_entry('stec015,stec016,stec018',FALSE)
    END IF
    
    
END FUNCTION]]>
  </point>
  <point name="function.astt401_stec002_chk" order="70" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stec002_chk(p_cmd)
DEFINE p_cmd  LIKE type_t.chr1
DEFINE l_n    LIKE type_t.num5

   IF g_stea_m.stea000 = 'I' THEN
      #新增时，库区不可存在库区维护作业
      SELECT COUNT(*) INTO l_n  FROM inaa_t
       WHERE inaaent = g_enterprise AND inaa001 = g_steb2_d[l_ac].stec002 AND inaasite = g_stea_m.steaunit
      IF l_n > 0 THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.code = 'art-00144'
          LET g_errparam.extend = ''
          LET g_errparam.popup = TRUE
          CALL cl_err()         
          RETURN FALSE  
      END IF      
   ELSE  
      IF g_steb2_d[l_ac].stec002 <> g_steb2_d_o.stec002 OR cl_null(g_steb2_d_o.stec002) THEN
         SELECT COUNT(*) INTO l_n  FROM inaa_t
          WHERE inaaent = g_enterprise AND inaa001 = g_steb2_d[l_ac].stec002 AND inaasite = g_stea_m.steaunit
          IF l_n > 0 THEN
             INITIALIZE g_errparam TO NULL
             LET g_errparam.code = 'art-00144'
             LET g_errparam.extend = ''
             LET g_errparam.popup = TRUE
             CALL cl_err()         
             RETURN FALSE  
         END IF   
      END IF   
   END IF
   
   #单身不可存在重复的库区
   IF g_steb2_d[l_ac].stec002 <> g_steb2_d_o.stec002 OR cl_null(g_steb2_d_o.stec002) THEN
      SELECT COUNT(*) INTO l_n FROM stec_t
       WHERE stecent = g_enterprise AND stecdocno = g_stea_m.steadocno AND stec002 = g_steb2_d[l_ac].stec002
      IF l_n > 0 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'ast-00267'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()         
         RETURN FALSE     
      END IF
   END IF
    
   RETURN TRUE

END FUNCTION]]>
  </point>
  <point name="function.astt401_stei003_other" order="71" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stei003_other()
DEFINE l_n   LIKE type_t.num5

   IF g_steb6_d[l_ac].stei003 <> g_steb6_d_o.stei003 OR cl_null(g_steb6_d_o.stei003) THEN
      SELECT COUNT(*) INTO l_n FROM steb_t
       WHERE stebent = g_enterprise AND stebdocno = g_stea_m.steadocno 
         AND steb002 = g_steb6_d[l_ac].stei003 
      IF l_n = 1 THEN
         SELECT steb013,steb014 INTO g_steb6_d[l_ac].stei005,g_steb6_d[l_ac].stei006 FROM steb_t
          WHERE stebent = g_enterprise AND stebdocno = g_stea_m.steadocno 
            AND steb002 = g_steb6_d[l_ac].stei003        
      END IF
   END IF

   DISPLAY BY NAME g_steb6_d[l_ac].stei005,g_steb6_d[l_ac].stei006
END FUNCTION]]>
  </point>
  <point name="function.astt401_stei005_006_chk" order="72" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stei005_006_chk()
  DEFINE l_n  LIKE type_t.num5
   
   LET l_n = 0
   IF g_steb6_d[l_ac].stei005 < g_stea_m.stea019 OR g_steb6_d[l_ac].stei005 > g_stea_m.stea020 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'ast-00032'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   END IF
   
   IF g_steb6_d[l_ac].stei006 < g_stea_m.stea019 OR g_steb6_d[l_ac].stei006 > g_stea_m.stea020 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'ast-00032'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   END IF
   
   IF NOT cl_null(g_steb6_d[l_ac].stei005) AND NOT cl_null(g_steb6_d[l_ac].stei006) THEN
      IF g_steb6_d[l_ac].stei005 > g_steb6_d[l_ac].stei006 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'aoo-00122'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
      
      #同一费用生效失效区间不可重叠
      IF NOT cl_null(g_steb6_d[l_ac].stei003) THEN
         IF (g_steb6_d[l_ac].stei003 <> g_steb6_d_o.stei003 OR cl_null(g_steb6_d_o.stei003))
            OR (g_steb6_d[l_ac].stei005 <> g_steb6_d_o.stei005 OR cl_null(g_steb6_d_o.stei005))
            OR (g_steb6_d[l_ac].stei006 <> g_steb6_d_o.stei006 OR cl_null(g_steb6_d_o.stei006)) THEN
         SELECT COUNT(*) INTO l_n FROM stei_t
          WHERE steient = g_enterprise AND steidocno = g_stea_m.steadocno
            AND stei003 = g_steb6_d[l_ac].stei003
            AND NOT (stei006 < g_steb6_d[l_ac].stei005 OR stei005 > g_steb6_d[l_ac].stei006)
          IF l_n > 0 THEN
             INITIALIZE g_errparam TO NULL
             LET g_errparam.code = 'ast-00271'
             LET g_errparam.extend = ''
             LET g_errparam.popup = TRUE
             CALL cl_err()
             RETURN FALSE 
          END IF
      END IF
      
      
      END IF
      
      
      
      
   END IF
   

   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.astt401_stei010_ref" order="73" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stei010_ref()
    INITIALIZE g_ref_fields TO NULL
    LET g_ref_fields[1] = g_steb6_d[l_ac].stei010
    CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2132' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
    LET g_steb6_d[l_ac].stei010_desc = '', g_rtn_fields[1] , ''
    DISPLAY BY NAME g_steb6_d[l_ac].stei010_desc

END FUNCTION]]>
  </point>
  <point name="function.astt401_stef006_007_chk" order="74" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stef006_007_chk()
DEFINE l_n    LIKE type_t.num5

   IF NOT cl_null(g_steb9_d[l_ac].stef006) AND NOT cl_null(g_steb9_d[l_ac].stef007) THEN
      IF g_steb9_d[l_ac].stef006 > g_steb9_d[l_ac].stef007 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'ast-00017'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()
         RETURN FALSE
      END IF
      
      #同库区编号。金额区间不可重叠    
      IF NOT cl_null(g_steb9_d[l_ac].stef005) THEN
         IF (g_steb9_d[l_ac].stef005 <> g_steb9_d_o.stef005 OR cl_null(g_steb9_d_o.stef005)) 
          OR (g_steb9_d[l_ac].stef006 <> g_steb9_d_o.stef006 OR cl_null(g_steb9_d_o.stef006)) 
          OR (g_steb9_d[l_ac].stef007 <> g_steb9_d_o.stef007 OR cl_null(g_steb9_d_o.stef007)) THEN        
         SELECT COUNT(*) INTO l_n FROM stef_t 
          WHERE stefent = g_enterprise AND stefdocno = g_stea_m.steadocno
            AND stefseq = g_steb3_d[g_detail_idx].steeseq  AND stef002 =  g_steb3_d[g_detail_idx].stee002
            AND stef005 = g_steb9_d[l_ac].stef005 
            AND NOT (stef007 < g_steb9_d[l_ac].stef006 OR stef006 > g_steb9_d[l_ac].stef007)
        
          IF l_n > 0 THEN
             INITIALIZE g_errparam TO NULL
             LET g_errparam.code = 'ast-00269'
             LET g_errparam.extend = ''
             LET g_errparam.popup = TRUE
             CALL cl_err()
             RETURN FALSE 
          END IF
        END IF
      END IF
           
   END IF
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.astt401_stef005_chk" order="75" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stef005_chk()
DEFINE l_n LIKE type_t.num5
 
   SELECT COUNT(*) INTO l_n FROM stec_t 
    WHERE stecent = g_enterprise AND stecdocno = g_stea_m.steadocno AND stec002 =g_steb9_d[l_ac].stef005 AND stec024 = '1' 
     
   IF l_n = 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'ast-00268'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN FALSE   
   END IF   
       
   RETURN TRUE  
END FUNCTION]]>
  </point>
  <point name="function.astt401_stef005_ref" order="76" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stef005_ref()
   
   SELECT stec003 INTO g_steb9_d[l_ac].stef005_desc FROM stec_t
    WHERE stecent = g_enterprise AND stecdocno = g_stea_m.steadocno AND stec002 =g_steb9_d[l_ac].stef005

   DISPLAY BY NAME g_steb9_d[l_ac].stef005_desc 
END FUNCTION]]>
  </point>
  <point name="function.astt401_chk_b" order="77" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_chk_b()
DEFINE l_stejseq LIKE stej_t.stejseq
DEFINE l_stfjseq LIKE stfj_t.stfjseq
DEFINE l_stfb  RECORD LIKE stfb_t.*
DEFINE l_steb  RECORD LIKE steb_t.*
DEFINE l_stec  RECORD LIKE stec_t.*
DEFINE l_stfc  RECORD LIKE stfc_t.*

   IF g_stea_m.stea000 = 'U' THEN
   
      DECLARE sel_steb CURSOR  FOR  SELECT * FROM steb_t
                                 WHERE stebent = g_enterprise AND stebdocno = g_stea_m.steadocno 
      FOREACH sel_steb INTO l_steb.*
        SELECT * INTO l_stfb.* FROM stfb_t
         WHERE stfbent = g_enterprise AND stfb001 = g_stea_m.stea001 AND stfbseq =l_steb.stebseq
            
        #单身有一笔资料的下次费用开始日与astm401不一致，提示
        IF astt401_chk_astm401_jiesuan('1',l_steb.stebseq) AND (l_steb.steb016 <> l_stfb.stfb016 OR (NOT cl_null(l_steb.steb016) AND cl_null(l_stfb.stfb016))) THEN
           INITIALIZE g_errparam TO NULL
           LET g_errparam.code = 'ast-00256'
           LET g_errparam.extend = ''
           LET g_errparam.popup = TRUE
           CALL cl_err()
           RETURN FALSE            
        END IF
     END FOREACH
    
     DECLARE sel_stec CURSOR  FOR  SELECT * FROM stec_t
                                 WHERE stecent = g_enterprise AND stecdocno = g_stea_m.steadocno 
      FOREACH sel_stec INTO l_stec.*
        SELECT * INTO l_stfc.* FROM stfc_t
         WHERE stfcent = g_enterprise AND stfc001 = g_stea_m.stea001 AND stfcseq =l_stec.stecseq
            
        #单身有一笔资料的下次费用开始日与astm401不一致，提示
        IF astt401_chk_astm401_jiesuan('2',l_stec.stecseq) AND (l_stec.stec022 <> l_stfc.stfc022 OR (NOT cl_null(l_stec.stec022) AND cl_null(l_stfc.stfc022))) THEN
           INITIALIZE g_errparam TO NULL
           LET g_errparam.code = 'ast-00256'
           LET g_errparam.extend = ''
           LET g_errparam.popup = TRUE
           CALL cl_err()
           RETURN FALSE            
        END IF
     END FOREACH
     
    
    
     SELECT NVL(MAX(stejseq),0) INTO l_stejseq FROM stej_t
       WHERE stejent = g_enterprise AND stejdocno = g_stea_m.steadocno AND stej005 = 'Y'
      
      SELECT NVL(MAX(stfjseq),0) INTO l_stfjseq FROM stfj_t
       WHERE stfjent = g_enterprise AND stfj001 = g_stea_m.stea001 AND stfj005 = 'Y'
      
      IF l_stejseq <> l_stfjseq THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'ast-00254'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()
         RETURN FALSE  
      END IF
   END IF  

  RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.astt401_stec025_chk" order="78" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astt401_stec025_chk()
DEFINE l_n  LIKE type_t.num5

   SELECT COUNT(*) INTO l_n FROM stec_t 
    WHERE stecent = g_enterprise AND stecdocno = g_stea_m.steadocno
      AND stec002 = g_steb2_d[l_ac].stec025 AND stec024 = '1'
   IF l_n = 0 THEN   #对应常规库区 不存在当前单身
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'ast-00293'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN FALSE       
   END IF   
   RETURN TRUE
   
END FUNCTION]]>
  </point>
  <point name="b_fill2.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         CALL astt401_stec006_ref()
         CALL astt401_stec007_ref()]]>
  </point>
  <point name="b_fill2.fill8" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET  g_steb8_d[l_ac].sted003_desc = g_steb2_d[g_detail_idx].stec003]]>
  </point>
  <point name="b_fill2.fill9" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL astt401_stef005_ref()]]>
  </point>
  <point name="b_fill4.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         CALL astt401_steg003_ref()
         CALL astt401_steg002_ref()]]>
  </point>
  <point name="construct.c.page1.steb002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stae001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO steb002  #顯示到畫面上
            NEXT FIELD steb002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.steb008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stab001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO steb008  #顯示到畫面上
            NEXT FIELD steb008                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.steb009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stab001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO steb009  #顯示到畫面上
            NEXT FIELD steb009                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.stec002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stec002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stec002  #顯示到畫面上
            NEXT FIELD stec002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.stec004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_rtax001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stec004  #顯示到畫面上
            NEXT FIELD stec004                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.stec005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002_2002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stec005  #顯示到畫面上
            NEXT FIELD stec005                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.stec006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_oodb002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stec006  #顯示到畫面上
            NEXT FIELD stec006                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.stec007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_oodb002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stec007  #顯示到畫面上
            NEXT FIELD stec007                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.stec009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stae001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stec009  #顯示到畫面上
            NEXT FIELD stec009                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.stec015" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stab001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stec015  #顯示到畫面上
            NEXT FIELD stec015                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.stec016" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stab001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stec016  #顯示到畫面上
            NEXT FIELD stec016                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.stec025" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = "stec024 = '1'"
            CALL q_stec002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stec025  #顯示到畫面上
            NEXT FIELD stec025                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page3.stee003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stae001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stee003  #顯示到畫面上
            NEXT FIELD stee003                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page4.steg002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_mhad001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO steg002  #顯示到畫面上
            NEXT FIELD steg002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page4.steg003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_mhac003()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO steg003  #顯示到畫面上
            NEXT FIELD steg003                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page6.stei003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stae001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stei003  #顯示到畫面上
            NEXT FIELD stei003                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page6.stei010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '2132'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stei010  #顯示到畫面上
            NEXT FIELD stei010                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page8.sted004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '2024'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO sted004  #顯示到畫面上
            NEXT FIELD sted004                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page9.stef005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = "stec024 = '1'"
            CALL q_stec002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stef005  #顯示到畫面上
            NEXT FIELD stef005                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stea001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stfa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stea001  #顯示到畫面上
            NEXT FIELD stea001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stea005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_mhae001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stea005  #顯示到畫面上
            NEXT FIELD stea005                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stea006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002_2126()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stea006  #顯示到畫面上
            NEXT FIELD stea006                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stea010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stea010  #顯示到畫面上
            NEXT FIELD stea010                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stea011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_rtax001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stea011  #顯示到畫面上
            NEXT FIELD stea011                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stea012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002_2002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stea012  #顯示到畫面上
            NEXT FIELD stea012                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stea013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stea013  #顯示到畫面上
            NEXT FIELD stea013                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stea014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stea014  #顯示到畫面上
            NEXT FIELD stea014                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stea015" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stea015  #顯示到畫面上
            NEXT FIELD stea015                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stea032" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_aooi001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stea032  #顯示到畫面上
            NEXT FIELD stea032                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stea033" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_oodb002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stea033  #顯示到畫面上
            NEXT FIELD stea033                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stea034" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_oodb002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stea034  #顯示到畫面上
            NEXT FIELD stea034                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stea035" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooib002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stea035  #顯示到畫面上
            NEXT FIELD stea035                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stea036" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_staa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stea036  #顯示到畫面上
            NEXT FIELD stea036                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stea037" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '2060'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stea037  #顯示到畫面上
            NEXT FIELD stea037                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stea038" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001_23()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stea038  #顯示到畫面上
            NEXT FIELD stea038                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stea044" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stea044  #顯示到畫面上
            NEXT FIELD stea044                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stea045" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002_2127()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stea045  #顯示到畫面上
            NEXT FIELD stea045                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stea047" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_mhaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stea047  #顯示到畫面上
            NEXT FIELD stea047                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stea048" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_mhab002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stea048  #顯示到畫面上
            NEXT FIELD stea048                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.steacnfid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO steacnfid  #顯示到畫面上
            NEXT FIELD steacnfid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.steacrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO steacrtdp  #顯示到畫面上
            NEXT FIELD steacrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.steacrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO steacrtid  #顯示到畫面上
            NEXT FIELD steacrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.steadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_steadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO steadocno  #顯示到畫面上
            NEXT FIELD steadocno                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.steamodid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO steamodid  #顯示到畫面上
            NEXT FIELD steamodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.steaowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO steaowndp  #顯示到畫面上
            NEXT FIELD steaowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.steaownid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO steaownid  #顯示到畫面上
            NEXT FIELD steaownid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.steasite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'steasite',g_site,'c')
            CALL q_ooef001_24()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO steasite  #顯示到畫面上
            NEXT FIELD steasite                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.steaunit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001_24()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO steaunit  #顯示到畫面上
            NEXT FIELD steaunit                     #返回原欄位
    

]]>
  </point>
  <point name="delete.head.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[       IF NOT s_aooi200_del_docno(g_stea_m.steadocno,g_stea_m.steadocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE g_ooef004      LIKE ooef_t.ooef004
DEFINE g_ooef005      LIKE ooef_t.ooef005
DEFINE g_assign_no    LIKE type_t.chr1
DEFINE g_site_flag     LIKE type_t.num5
DEFINE g_flag         LIKE type_t.num5]]>
  </point>
  <point name="init.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success LIKE type_t.num5]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_combo_scc_part('stea003','6013','4')
   CALL cl_set_combo_scc('b_stea000','32') 
   CALL cl_set_combo_scc_part('b_stea003','6013','4')
   CALL cl_set_combo_scc('b_stea004','6785')
   CALL cl_set_combo_scc('b_stea046','6201') 
   CALL cl_set_combo_scc('b_stea029','6202') 
   CALL cl_set_combo_scc('b_stea030','6786') 
   CALL cl_set_combo_scc('b_stea031','36')
   
   LET g_ooef004 = ''
   LET g_ooef005 = ''
   SELECT ooef004,ooef005 INTO g_ooef004,g_ooef005 FROM ooef_t
    WHERE ooefent = g_enterprise
      AND ooef001 = g_site
   IF cl_null(g_ooef004) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'art-00007'
      LET g_errparam.extend = g_site
      LET g_errparam.popup = TRUE
      CALL cl_err()

   END IF 
   IF cl_null(g_ooef005) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'art-00008'
      LET g_errparam.extend = g_site
      LET g_errparam.popup = TRUE
      CALL cl_err()

   END IF 
   CALL s_aooi500_create_temp() RETURNING l_success  
]]>
  </point>
  <point name="input.a.next_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_stea_m.next_b) THEN
              IF g_stea_m.next_b < g_stea_m.stea019 OR g_stea_m.next_b > g_stea_m.stea020 THEN
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.code = 'ast-00047'
                 LET g_errparam.extend = ''
                 LET g_errparam.popup = TRUE
                 CALL cl_err()

                 LET g_stea_m.next_b = g_stea_m_t.next_b  
                 NEXT FIELD next_b
              END IF
              
              SELECT MAX(stejseq) INTO l_stejseq FROM stej_t 
               WHERE stejent = g_enterprise AND stejdocno = g_stea_m.steadocno  AND stej005 = 'Y'
              
              IF NOT cl_null(l_stejseq) OR l_stejseq<> 0 THEN
                 SELECT stej003 INTO l_stej003 FROM stej_t 
                  WHERE stejent = g_enterprise AND stejdocno = g_stea_m.steadocno
                   AND stejseq = l_stejseq
                   
                 IF g_stea_m.next_b <= l_stej003 THEN
                   INITIALIZE g_errparam TO NULL
                   LET g_errparam.code = 'ast-00205'
                   LET g_errparam.extend = ''
                   LET g_errparam.popup = TRUE
                   CALL cl_err()
                  
                   LET g_stea_m.next_b = g_stea_m_t.next_b  
                   NEXT FIELD next_b
                 END IF
                   
              END IF
            
           END IF     ]]>
  </point>
  <point name="input.a.page1.steb002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[           LET g_steb_d[l_ac].steb002_desc = ''
           DISPLAY BY NAME g_steb_d[l_ac].steb002_desc           
           IF NOT cl_null(g_steb_d[l_ac].steb002) THEN
              IF NOT astt401_steb002_chk(g_steb_d[l_ac].steb002) THEN
                 LET g_steb_d[l_ac].steb002 = g_steb_d_t.steb002
                 CALL astt401_steb002_ref() 
                 SELECT stae006 INTO  g_steb_d[l_ac].steb004 FROM stae_t WHERE staeent = g_enterprise AND stae001 = g_steb_d[l_ac].steb002
                 DISPLAY BY NAME g_steb_d[l_ac].steb004 
               
                 NEXT FIELD steb002
              END IF
               
              IF (g_steb_d[l_ac].steb002 <> g_steb_d_o.steb002 AND NOT cl_null(g_steb_d_o.steb002)) OR (l_cmd = 'a' AND cl_null(g_steb_d_o.steb002)) THEN
                  #帶出費用編號預設
                 SELECT stae006 INTO  g_steb_d[l_ac].steb004 FROM stae_t WHERE staeent = g_enterprise AND stae001 = g_steb_d[l_ac].steb002
                   DISPLAY BY NAME g_steb_d[l_ac].steb002_desc,g_steb_d[l_ac].steb004
                 IF g_steb_d[l_ac].steb004 = '3' THEN
                    LET g_steb_d[l_ac].steb004 = ''
                 END IF                    
                #費用合約設定asti204
                 CALL astt401_default('1','4',g_steb_d[l_ac].steb002)
              END IF    
              CALL astt401_steb002_ref()
           ELSE
              LET g_steb_d[l_ac].steb002_desc = ''
              LET g_steb_d[l_ac].steb004 = ''
           END IF
           
           LET g_steb_d_o.steb002 = g_steb_d[l_ac].steb002
              CALL astt401_set_entry_b(l_cmd)
              CALL astt401_set_no_required_b(l_cmd)
              CALL astt401_set_required_b(l_cmd)
              CALL astt401_set_no_entry_b(l_cmd)]]>
  </point>
  <point name="input.a.page1.steb008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_steb_d[l_ac].steb008_desc = ''
            IF NOT cl_null(g_steb_d[l_ac].steb008) THEN
               IF NOT astt401_steb008_chk(g_steb_d[l_ac].steb008) THEN
                  LET g_steb_d[l_ac].steb008 = g_steb_d_t.steb008
                  CALL astt401_steb008_ref()
                  NEXT FIELD steb008
               END IF
            END IF
            CALL astt401_steb008_ref()
            
            CALL astt401_set_entry_b(l_cmd)
            CALL astt401_set_no_required_b(l_cmd)
            CALL astt401_set_required_b(l_cmd)
            CALL astt401_set_no_entry_b(l_cmd) 

]]>
  </point>
  <point name="input.a.page1.steb009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_steb_d[l_ac].steb009_desc = ''
            IF NOT cl_null(g_steb_d[l_ac].steb009) THEN
               IF NOT astt401_steb008_chk(g_steb_d[l_ac].steb009) THEN
                  LET g_steb_d[l_ac].steb009 = g_steb_d_t.steb009
                  CALL astt401_steb009_ref()
                  NEXT FIELD steb009
               END IF
            END IF
            CALL astt401_steb009_ref()
            
            CALL astt401_set_entry_b(l_cmd)
            CALL astt401_set_no_required_b(l_cmd)
            CALL astt401_set_required_b(l_cmd)
            CALL astt401_set_no_entry_b(l_cmd) 

]]>
  </point>
  <point name="input.a.page1.steb010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[           IF NOT cl_null(g_steb_d[l_ac].steb010) THEN
               IF g_steb_d[l_ac].steb010 <=0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = '-32406'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_steb_d[l_ac].steb010 = g_steb_d_t.steb010
                  NEXT FIELD steb010
               END IF
            END IF]]>
  </point>
  <point name="input.a.page1.steb011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[           IF NOT cl_null( g_steb_d[l_ac].steb011) THEN
               IF g_steb_d[l_ac].steb011 <=0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = '-32406'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_steb_d[l_ac].steb011 = g_steb_d_t.steb011
                  NEXT FIELD steb011
               END IF
            END IF ]]>
  </point>
  <point name="input.a.page1.steb013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[           IF NOT cl_null(g_steb_d[l_ac].steb013) THEN
               IF NOT astt401_steb013_014_chk() THEN
                  LET g_steb_d[l_ac].steb013 =g_steb_d_t.steb013
                  NEXT FIELD steb013
               END IF
            END IF]]>
  </point>
  <point name="input.a.page1.steb014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_steb_d[l_ac].steb014) THEN
               IF NOT astt401_steb013_014_chk() THEN
                  LET g_steb_d[l_ac].steb014 =g_steb_d_t.steb014
                  NEXT FIELD steb014
               END IF
            END IF]]>
  </point>
  <point name="input.a.page1.stebseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stea_m.steadocno IS NOT NULL AND g_steb_d[g_detail_idx].stebseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stea_m.steadocno != g_steadocno_t OR g_steb_d[g_detail_idx].stebseq != g_steb_d_t.stebseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM steb_t WHERE "||"stebent = '" ||g_enterprise|| "' AND "||"stebdocno = '"||g_stea_m.steadocno ||"' AND "|| "stebseq = '"||g_steb_d[g_detail_idx].stebseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.stec002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_steb2_d[l_ac].stec002) THEN
               IF NOT astt401_stec002_chk(p_cmd) THEN
                  LET g_steb2_d[l_ac].stec002 = g_steb2_d_t.stec002
                  NEXT FIELD stec002
               END IF              
            END IF]]>
  </point>
  <point name="input.a.page2.stec004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_steb2_d[l_ac].stec004_desc = ''
            DISPLAY BY NAME g_steb2_d[l_ac].stec004_desc
            IF NOT cl_null(g_steb2_d[l_ac].stec004) THEN
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = '1'
               LET g_chkparam.arg1 =g_steb2_d[l_ac].stec004
               IF NOT cl_chk_exist("v_rtax001_1") THEN
                  LET g_steb2_d[l_ac].stec004 = g_steb2_d_t.stec004
                  CALL astt401_stec004_ref()
                  NEXT FIELD stec004
               END IF 
            END IF
            CALL astt401_stec004_ref()  

]]>
  </point>
  <point name="input.a.page2.stec005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_steb2_d[l_ac].stec005_desc = ''
            DISPLAY BY NAME g_steb2_d[l_ac].stec005_desc
            IF NOT cl_null(g_steb2_d[l_ac].stec005) THEN
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = '1'
               LET g_chkparam.arg1 = g_steb2_d[l_ac].stec005
               IF NOT cl_chk_exist("v_oocq002_2002") THEN
                  LET g_steb2_d[l_ac].stec005 = g_steb2_d_t.stec005
                  CALL astt401_stec005_ref()
                  NEXT FIELD stec005
               END IF
            END IF
            CALL astt401_stec005_ref()

]]>
  </point>
  <point name="input.a.page2.stec006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_steb2_d[l_ac].stec006_desc = ''
            DISPLAY BY NAME g_steb2_d[l_ac].stec006_desc
            IF NOT cl_null(g_steb2_d[l_ac].stec006) THEN
               IF g_steb2_d[l_ac].stec006 != g_steb2_d_o.stec006 OR cl_null(g_steb2_d_o.stec006) THEN
                  IF NOT astt401_stea033_chk(g_steb2_d[l_ac].stec006) THEN                     
                     LET g_steb2_d[l_ac].stec006 = g_steb2_d_o.stec006  
                     CALL astt401_stec006_ref()
                     NEXT FIELD stec006
                  END IF 
                  CALL astt401_stec006_ref()
               END IF    
            ELSE
               LET g_steb2_d[l_ac].stec006_desc = ''
               DISPLAY BY NAME g_steb2_d[l_ac].stec006_desc
            END IF
            LET g_steb2_d_o.stec006 = g_steb2_d[l_ac].stec006 


]]>
  </point>
  <point name="input.a.page2.stec007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_steb2_d[l_ac].stec007_desc = ''
            DISPLAY BY NAME g_steb2_d[l_ac].stec007_desc
            IF NOT cl_null(g_steb2_d[l_ac].stec007) THEN
               IF g_steb2_d[l_ac].stec007 != g_steb2_d_o.stec007 OR cl_null(g_steb2_d_o.stec007) THEN
                  IF NOT astt401_stea033_chk(g_steb2_d[l_ac].stec007) THEN                     
                     LET g_steb2_d[l_ac].stec007 = g_steb2_d_o.stec007  
                     CALL astt401_stec007_ref()
                     NEXT FIELD stec007
                  END IF 
                  CALL astt401_stec007_ref()
               END IF    
            ELSE
               LET g_steb2_d[l_ac].stec007_desc = ''
               DISPLAY BY NAME g_steb2_d[l_ac].stec007_desc
            END IF
            LET g_steb2_d_o.stec007 = g_steb2_d[l_ac].stec007

]]>
  </point>
  <point name="input.a.page2.stec009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[           LET g_steb2_d[l_ac].stec009_desc = ''
           DISPLAY BY NAME g_steb2_d[l_ac].stec009_desc           
           IF NOT cl_null(g_steb2_d[l_ac].stec009) THEN
              IF NOT astt401_steb002_chk(g_steb2_d[l_ac].stec009) THEN
                 LET g_steb2_d[l_ac].stec009 = g_steb2_d_t.stec009
                 CALL astt401_stec009_ref() 
                 SELECT stae006 INTO  g_steb2_d[l_ac].stec011 FROM stae_t WHERE staeent = g_enterprise AND stae001 = g_steb2_d[l_ac].stec009
                 DISPLAY BY NAME g_steb2_d[l_ac].stec011 
               
                 NEXT FIELD stec009
              END IF
               
              IF (g_steb2_d[l_ac].stec009 <> g_steb2_d_o.stec009 AND NOT cl_null(g_steb2_d_o.stec009)) OR (l_cmd = 'a' AND cl_null(g_steb2_d_o.stec009)) THEN
                  #帶出費用編號預設
                 SELECT stae006 INTO  g_steb2_d[l_ac].stec011 FROM stae_t WHERE staeent = g_enterprise AND stae001 = g_steb2_d[l_ac].stec009
                   DISPLAY BY NAME g_steb2_d[l_ac].stec009_desc,g_steb2_d[l_ac].stec011
                 IF g_steb2_d[l_ac].stec011 = '3' THEN
                    LET g_steb2_d[l_ac].stec011 = ''
                 END IF                    
                #費用合約設定asti204
                 CALL astt401_default('2','4',g_steb2_d[l_ac].stec009)
              END IF
              CALL astt401_stec009_ref()               
           ELSE
              LET g_steb2_d[l_ac].stec009_desc = ''
              LET g_steb2_d[l_ac].stec011 = ''
           END IF
           
           LET g_steb2_d_o.stec009 = g_steb2_d[l_ac].stec009
              CALL astt401_set_entry_b(l_cmd)
              CALL astt401_set_no_required_b(l_cmd)
              CALL astt401_set_required_b(l_cmd)
              CALL astt401_set_no_entry_b(l_cmd)

]]>
  </point>
  <point name="input.a.page2.stec015" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_steb2_d[l_ac].stec015_desc = ''
            IF NOT cl_null(g_steb2_d[l_ac].stec015) THEN
               IF NOT astt401_steb008_chk(g_steb2_d[l_ac].stec015) THEN
                  LET g_steb2_d[l_ac].stec015 = g_steb2_d_t.stec015
                  CALL astt401_stec015_ref()
                  NEXT FIELD stec015
               END IF
            END IF
            CALL astt401_stec015_ref()
            
            CALL astt401_set_entry_b(l_cmd)
            CALL astt401_set_no_required_b(l_cmd)
            CALL astt401_set_required_b(l_cmd)
            CALL astt401_set_no_entry_b(l_cmd) 

]]>
  </point>
  <point name="input.a.page2.stec016" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_steb2_d[l_ac].stec016_desc = ''
            IF NOT cl_null(g_steb2_d[l_ac].stec016) THEN
               IF NOT astt401_steb008_chk(g_steb2_d[l_ac].stec016) THEN
                  LET g_steb2_d[l_ac].stec016 = g_steb2_d_t.stec016
                  CALL astt401_stec016_ref()
                  NEXT FIELD stec016
               END IF
            END IF
            CALL astt401_stec016_ref()
            
            CALL astt401_set_entry_b(l_cmd)
            CALL astt401_set_no_required_b(l_cmd)
            CALL astt401_set_required_b(l_cmd)
            CALL astt401_set_no_entry_b(l_cmd) 

]]>
  </point>
  <point name="input.a.page2.stec017" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[             IF NOT cl_null(g_steb2_d[l_ac].stec017) THEN
               IF g_steb2_d[l_ac].stec017 <=0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = '-32406'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_steb2_d[l_ac].stec017 = g_steb2_d_t.stec017
                  NEXT FIELD stec017
               END IF
            END IF]]>
  </point>
  <point name="input.a.page2.stec018" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null( g_steb2_d[l_ac].stec018) THEN
               IF g_steb2_d[l_ac].stec018 <=0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = '-32406'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_steb2_d[l_ac].stec018 = g_steb2_d_t.stec018
                  NEXT FIELD stec018
               END IF
            END IF ]]>
  </point>
  <point name="input.a.page2.stec019" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_steb2_d[l_ac].stec019) THEN
               IF NOT astt401_stec019_020_chk() THEN
                  LET g_steb2_d[l_ac].stec019 =g_steb2_d_t.stec019
                  NEXT FIELD stec019
               END IF
            END IF]]>
  </point>
  <point name="input.a.page2.stec020" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_steb2_d[l_ac].stec020) THEN
               IF NOT astt401_stec019_020_chk() THEN
                  LET g_steb2_d[l_ac].stec020 =g_steb2_d_t.stec020
                  NEXT FIELD stec020
               END IF
            END IF]]>
  </point>
  <point name="input.a.page2.stec025" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_steb2_d[l_ac].stec025) THEN
               IF g_steb2_d[l_ac].stec024 = '2' THEN #促销
                  #输入的库区必须当前单身已存在的常规库区
                  IF NOT astt401_stec025_chk() THEN
                     LET g_steb2_d[l_ac].stec025 = g_steb2_d_t.stec025
                     NEXT FIELD stec025
                  END IF             
               END IF           
            END IF]]>
  </point>
  <point name="input.a.page2.stecseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stea_m.steadocno IS NOT NULL AND g_steb2_d[g_detail_idx].stecseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stea_m.steadocno != g_steadocno_t OR g_steb2_d[g_detail_idx].stecseq != g_steb2_d_t.stecseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stec_t WHERE "||"stecent = '" ||g_enterprise|| "' AND "||"stecdocno = '"||g_stea_m.steadocno ||"' AND "|| "stecseq = '"||g_steb2_d[g_detail_idx].stecseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page3.stee002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stea_m.steadocno IS NOT NULL AND g_steb3_d[g_detail_idx].steeseq IS NOT NULL AND g_steb3_d[g_detail_idx].stee002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stea_m.steadocno != g_steadocno_t OR g_steb3_d[g_detail_idx].steeseq != g_steb3_d_t.steeseq OR g_steb3_d[g_detail_idx].stee002 != g_steb3_d_t.stee002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stee_t WHERE "||"steeent = '" ||g_enterprise|| "' AND "||"steedocno = '"||g_stea_m.steadocno ||"' AND "|| "steeseq = '"||g_steb3_d[g_detail_idx].steeseq ||"' AND "|| "stee002 = '"||g_steb3_d[g_detail_idx].stee002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page3.stee003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[           LET g_steb3_d[l_ac].stee003_desc = ''
           DISPLAY BY NAME g_steb3_d[l_ac].stee003_desc           
           IF NOT cl_null(g_steb3_d[l_ac].stee003) THEN
              IF NOT astt401_steb002_chk(g_steb3_d[l_ac].stee003) THEN
                 LET g_steb3_d[l_ac].stee003 = g_steb3_d_t.stee003
                 CALL astt401_stee003_ref()             
                 NEXT FIELD stee003
              END IF
           END IF
           CALL astt401_stee003_ref() ]]>
  </point>
  <point name="input.a.page3.steeseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stea_m.steadocno IS NOT NULL AND g_steb3_d[g_detail_idx].steeseq IS NOT NULL AND g_steb3_d[g_detail_idx].stee002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stea_m.steadocno != g_steadocno_t OR g_steb3_d[g_detail_idx].steeseq != g_steb3_d_t.steeseq OR g_steb3_d[g_detail_idx].stee002 != g_steb3_d_t.stee002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stee_t WHERE "||"steeent = '" ||g_enterprise|| "' AND "||"steedocno = '"||g_stea_m.steadocno ||"' AND "|| "steeseq = '"||g_steb3_d[g_detail_idx].steeseq ||"' AND "|| "stee002 = '"||g_steb3_d[g_detail_idx].stee002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page4.steg002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_steb4_d[l_ac].steg002_desc = ''
            DISPLAY BY NAME g_steb4_d[l_ac].steg002_desc
            IF NOT cl_null(g_steb4_d[l_ac].steg002) THEN
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = '1'
               LET g_chkparam.arg2 = g_stea_m.stea047
               LET g_chkparam.arg3 = g_stea_m.stea048
               LET g_chkparam.arg4 = g_steb4_d[l_ac].steg003
               LET g_chkparam.arg1 = g_steb4_d[l_ac].steg002
               IF NOT cl_chk_exist("v_mhad004") THEN
                  LET g_steb4_d[l_ac].steg002 = g_steb4_d_t.steg002
                  CALL astt401_steg002_ref()
                  NEXT FIELD steg002
               END IF
               CALL astt401_steg002_other()
            END IF
            CALL astt401_steg002_ref()
]]>
  </point>
  <point name="input.a.page4.steg003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[             LET g_steb4_d[l_ac].steg003_desc = ''
            DISPLAY BY NAME g_steb4_d[l_ac].steg003_desc
            IF NOT cl_null(g_steb4_d[l_ac].steg003) THEN
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = '1'
               LET g_chkparam.arg2 = g_stea_m.stea047
               LET g_chkparam.arg3 = g_stea_m.stea048
               LET g_chkparam.arg1 = g_steb4_d[l_ac].steg003
               IF NOT cl_chk_exist("v_mhac003") THEN
                  LET g_steb4_d[l_ac].steg003 = g_steb4_d_t.steg003
                  CALL astt401_steg003_ref()
                  NEXT FIELD steg003
               END IF             
               IF NOT cl_null(g_steb4_d[l_ac].steg002) THEN
                  IF NOT astt401_steg003_chk() THEN
                     LET g_steb4_d[l_ac].steg003 = g_steb4_d_t.steg003
                     CALL astt401_steg003_ref()
                     NEXT FIELD steg003
                  END IF   
                  CALL astt401_steg002_other()                  
               END IF
            END IF
            CALL astt401_steg003_ref()
]]>
  </point>
  <point name="input.a.page4.stegseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stea_m.steadocno IS NOT NULL AND g_steb4_d[g_detail_idx].stegseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stea_m.steadocno != g_steadocno_t OR g_steb4_d[g_detail_idx].stegseq != g_steb4_d_t.stegseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM steg_t WHERE "||"stegent = '" ||g_enterprise|| "' AND "||"stegdocno = '"||g_stea_m.steadocno ||"' AND "|| "stegseq = '"||g_steb4_d[g_detail_idx].stegseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page5.stehseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stea_m.steadocno IS NOT NULL AND g_steb5_d[g_detail_idx].stehseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stea_m.steadocno != g_steadocno_t OR g_steb5_d[g_detail_idx].stehseq != g_steb5_d_t.stehseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM steh_t WHERE "||"stehent = '" ||g_enterprise|| "' AND "||"stehdocno = '"||g_stea_m.steadocno ||"' AND "|| "stehseq = '"||g_steb5_d[g_detail_idx].stehseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page6.stei003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[           LET g_steb6_d[l_ac].stei003_desc = ''
           DISPLAY BY NAME g_steb6_d[l_ac].stei003_desc           
           IF NOT cl_null(g_steb6_d[l_ac].stei003) THEN
              IF NOT astt401_steb002_chk(g_steb6_d[l_ac].stei003) THEN
                 LET g_steb6_d[l_ac].stei003 = g_steb6_d_t.stei003
                 CALL astt401_stei003_ref()             
                 NEXT FIELD stei003
              END IF
              #优惠费用必须存在费用明细
              SELECT COUNT(*) INTO l_n FROM steb_t 
               WHERE stebent = g_enterprise AND stebdocno = g_stea_m.steadocno
                 AND steb002 = g_steb6_d[l_ac].stei003
              IF l_n = 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'ast-00264'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err() 
                 LET g_steb6_d[l_ac].stei003 = g_steb6_d_t.stei003
                 CALL astt401_stei003_ref()             
                 NEXT FIELD stei003
              ELSE
                 CALL astt401_stei003_other()
              END IF
              
              IF NOT astt401_stei005_006_chk() THEN
                  LET g_steb6_d[l_ac].stei003 = g_steb6_d_t.stei003
                  CALL astt401_stei003_ref()             
                  NEXT FIELD stei003
              END IF
              
              
           END IF
           CALL astt401_stei003_ref() 

]]>
  </point>
  <point name="input.a.page6.stei004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_steb6_d[l_ac].stei004) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page6.stei005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_steb6_d[l_ac].stei005) THEN
               IF NOT astt401_stei005_006_chk() THEN
                  LET g_steb6_d[l_ac].stei005 =g_steb6_d_t.stei005
                  NEXT FIELD stei005
               END IF
            END IF]]>
  </point>
  <point name="input.a.page6.stei006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_steb6_d[l_ac].stei006) THEN
               IF NOT astt401_stei005_006_chk() THEN
                  LET g_steb6_d[l_ac].stei006 =g_steb6_d_t.stei006
                  NEXT FIELD stei006
               END IF
            END IF]]>
  </point>
  <point name="input.a.page6.stei010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_steb6_d[l_ac].stei010_desc = ''
            DISPLAY BY NAME g_steb6_d[l_ac].stei010_desc
            IF NOT cl_null(g_steb6_d[l_ac].stei010) THEN
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = '1'
               LET g_chkparam.arg1 = g_steb6_d[l_ac].stei010
               IF NOT cl_chk_exist("v_oocq002_2132") THEN
                  LET g_steb6_d[l_ac].stei010 = g_steb6_d_t.stei010
                  CALL astt401_stei010_ref()
                  NEXT FIELD stei010
               END IF
            END IF
            CALL astt401_stei010_ref()
]]>
  </point>
  <point name="input.a.page6.steiseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stea_m.steadocno IS NOT NULL AND g_steb6_d[g_detail_idx].steiseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stea_m.steadocno != g_steadocno_t OR g_steb6_d[g_detail_idx].steiseq != g_steb6_d_t.steiseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stei_t WHERE "||"steient = '" ||g_enterprise|| "' AND "||"steidocno = '"||g_stea_m.steadocno ||"' AND "|| "steiseq = '"||g_steb6_d[g_detail_idx].steiseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page7.stejseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stea_m.steadocno IS NOT NULL AND g_steb7_d[g_detail_idx].stejseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stea_m.steadocno != g_steadocno_t OR g_steb7_d[g_detail_idx].stejseq != g_steb7_d_t.stejseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stej_t WHERE "||"stejent = '" ||g_enterprise|| "' AND "||"stejdocno = '"||g_stea_m.steadocno ||"' AND "|| "stejseq = '"||g_steb7_d[g_detail_idx].stejseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page8.sted003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
]]>
  </point>
  <point name="input.a.page8.sted004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_steb8_d[l_ac].sted004_desc = ''
            DISPLAY BY NAME g_steb8_d[l_ac].sted004_desc
            IF NOT cl_null(g_steb8_d[l_ac].sted004) THEN
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = '1'
               LET g_chkparam.arg1 = g_steb8_d[l_ac].sted004
               IF NOT cl_chk_exist("v_oocq002_2024") THEN
                  LET g_steb8_d[l_ac].sted004 = g_steb8_d_t.sted004
                  CALL astt401_sted004_ref()
                  NEXT FIELD sted004
               END IF
            END IF
            CALL astt401_sted004_ref() 

]]>
  </point>
  <point name="input.a.page8.stedseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stea_m.steadocno IS NOT NULL AND g_steb2_d[g_detail_idx].stecseq IS NOT NULL AND g_steb8_d[g_detail_idx2].stedseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stea_m.steadocno != g_steadocno_t OR g_steb2_d[g_detail_idx].stecseq != g_steb2_d[g_detail_idx].stecseq OR g_steb8_d[g_detail_idx2].stedseq != g_steb8_d_t.stedseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sted_t WHERE "||"stedent = '" ||g_enterprise|| "' AND "||"steddocno = '"||g_stea_m.steadocno ||"' AND "|| "sted003 = '"||g_steb2_d[g_detail_idx].stecseq ||"' AND "|| "stedseq = '"||g_steb8_d[g_detail_idx2].stedseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page8.stedseq1" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stea_m.steadocno IS NOT NULL AND g_steb2_d[g_detail_idx].stecseq IS NOT NULL AND g_steb8_d[g_detail_idx2].stedseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stea_m.steadocno != g_steadocno_t OR g_steb2_d[g_detail_idx].stecseq != g_steb2_d[g_detail_idx].stecseq OR g_steb8_d[g_detail_idx2].stedseq1 != g_steb8_d_t.stedseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM sted_t WHERE "||"stedent = '" ||g_enterprise|| "' AND "||"steddocno = '"||g_stea_m.steadocno ||"' AND "|| "stedseq = '"||g_steb2_d[g_detail_idx].stecseq ||"' AND "|| "stedseq1 = '"||g_steb8_d[g_detail_idx2].stedseq1 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page9.stef003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stea_m.steadocno IS NOT NULL AND g_steb3_d[g_detail_idx].steeseq IS NOT NULL AND g_steb3_d[g_detail_idx].stee002 IS NOT NULL AND g_steb9_d[g_detail_idx2].stef003 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stea_m.steadocno != g_steadocno_t OR g_steb3_d[g_detail_idx].steeseq != g_steb3_d[g_detail_idx].steeseq OR g_steb3_d[g_detail_idx].stee002 != g_steb3_d[g_detail_idx].stee002 OR g_steb9_d[g_detail_idx2].stef003 != g_steb9_d_t.stef003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stef_t WHERE "||"stefent = '" ||g_enterprise|| "' AND "||"stefdocno = '"||g_stea_m.steadocno ||"' AND "|| "stefseq = '"||g_steb3_d[g_detail_idx].steeseq ||"' AND "|| "stef002 = '"||g_steb3_d[g_detail_idx].stee002 ||"' AND "|| "stef003 = '"||g_steb9_d[g_detail_idx2].stef003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page9.stef005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_steb9_d[l_ac].stef005_desc = ''
            DISPLAY BY NAME g_steb9_d[l_ac].stef005_desc
            IF NOT cl_null(g_steb9_d[l_ac].stef005) THEN
               IF NOT astt401_stef005_chk() THEN
                  LET g_steb9_d[l_ac].stef005 = g_steb9_d_t.stef005
                  CALL astt401_stef005_ref()
                  NEXT FIELD stef005
               END IF 
            END IF
            IF NOT astt401_stef006_007_chk() THEN
               LET g_steb9_d[l_ac].stef005 = g_steb9_d_t.stef005
               CALL astt401_stef005_ref()
               NEXT FIELD stef005
            END IF
            CALL astt401_stef005_ref()]]>
  </point>
  <point name="input.a.page9.stef006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_steb9_d[l_ac].stef006) THEN 
               IF NOT astt401_stef006_007_chk() THEN
                  LET g_steb9_d[l_ac].stef006 = g_steb9_d_t.stef006
                  NEXT FIELD stef006
               END IF
            END IF 

]]>
  </point>
  <point name="input.a.page9.stef007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_steb9_d[l_ac].stef007) THEN
               IF NOT astt401_stef006_007_chk() THEN
                  LET g_steb9_d[l_ac].stef007 = g_steb9_d_t.stef007
                  NEXT FIELD stef007
               END IF            
            END IF 

]]>
  </point>
  <point name="input.a.page9.stef008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_steb9_d[l_ac].stef008) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.stea001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_stea_m.stea001) THEN
               IF NOT astt401_stea001_chk(p_cmd,g_stea_m.stea001) THEN
                  LET g_stea_m.stea001 = g_stea_m_t.stea001
                  NEXT FIELD stea001
               END IF
               IF  g_stea_m.stea000 = 'U' AND NOT cl_null(g_stea_m_o.stea001) THEN
                   #只有申請組織才能修改對應的專櫃合同
                   SELECT stfaunit INTO l_stfaunit FROM stfa_t WHERE stfaent = g_enterprise AND stfa001 =g_stea_m.stea001
                   IF g_stea_m.steasite <> l_stfaunit THEN
                      INITIALIZE g_errparam TO NULL
                      LET g_errparam.code = 'ast-00262'
                      LET g_errparam.extend = g_stea_m.steadocno
                      LET g_errparam.popup = TRUE
                      CALL cl_err()
                      LET g_stea_m.stea001 = g_stea_m_t.stea001
                      NEXT FIELD stea001
                   END IF
               
               END IF
               #U修改时，如果合同有异动自动带出单身
               IF g_stea_m.stea000 = 'U' AND (cl_null(g_stea_m_o.stea001) OR g_stea_m_o.stea001 <>  g_stea_m.stea001) THEN           
                  CALL astt401_stea001_other()          
                  LET g_stea_m_o.stea001 = g_stea_m.stea001
               END IF
               CALL cl_set_comp_entry("stea000",FALSE)
               IF g_stea_m.stea000 = 'U' THEN 
                  CALL cl_set_comp_entry("stea013",FALSE)
               ELSE
                  CALL cl_set_comp_entry("stea013",TRUE)               
               END IF               
            ELSE
               CALL cl_set_comp_entry("stea000",TRUE)            
            END IF]]>
  </point>
  <point name="input.a.stea005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_stea_m.stea005) THEN
               IF NOT astt401_stea005_chk(p_cmd) THEN
                  LET g_stea_m.stea005 = g_stea_m_t.stea005
                  NEXT FIELD stea005
               END IF
            END IF]]>
  </point>
  <point name="input.a.stea006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_stea_m.stea006_desc = ''
            DISPLAY BY NAME g_stea_m.stea006_desc
            IF NOT cl_null(g_stea_m.stea006) THEN
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = '1'
               LET g_chkparam.arg1 = g_stea_m.stea006
               IF NOT cl_chk_exist("v_oocq002_2126") THEN
                  LET g_stea_m.stea006 = g_stea_m_t.stea006
                  CALL astt401_stea006_ref()
                  NEXT FIELD stea006
               END IF
            END IF
            CALL astt401_stea006_ref()
]]>
  </point>
  <point name="input.a.stea010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[             LET g_stea_m.stea010_desc = ''
            DISPLAY BY NAME g_stea_m.stea010_desc
            IF NOT cl_null(g_stea_m.stea010) THEN 
               IF NOT astt401_stea010_chk(g_stea_m.stea010) THEN
                  LET g_stea_m.stea010 = g_stea_m_t.stea010
                  CALL astt401_stea010_ref()
                  NEXT FIELD stea010
               END IF

            END IF
            CALL astt401_stea010_ref()  

]]>
  </point>
  <point name="input.a.stea011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_stea_m.stea011_desc = ''
            DISPLAY BY NAME g_stea_m.stea011_desc
            IF NOT cl_null(g_stea_m.stea011) THEN
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = '1'
               LET g_chkparam.arg1 =g_stea_m.stea011
               IF NOT cl_chk_exist("v_rtax001_1") THEN
                  LET g_stea_m.stea011 = g_stea_m_t.stea011
                  CALL astt401_stea011_ref()
                  NEXT FIELD stea011
               END IF 
            END IF
            CALL astt401_stea011_ref()            
             

]]>
  </point>
  <point name="input.a.stea012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_stea_m.stea012_desc = ''
            DISPLAY BY NAME g_stea_m.stea012_desc
            IF NOT cl_null(g_stea_m.stea012) THEN
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = '1'
               LET g_chkparam.arg1 = g_stea_m.stea012
               IF NOT cl_chk_exist("v_oocq002_2002") THEN
                  LET g_stea_m.stea012 = g_stea_m_t.stea012
                  CALL astt401_stea012_ref()
                  NEXT FIELD stea012
               END IF
            END IF
            CALL astt401_stea012_ref()

]]>
  </point>
  <point name="input.a.stea013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_stea_m.stea013_desc = ''
            DISPLAY BY NAME g_stea_m.stea013_desc
            IF NOT cl_null(g_stea_m.stea013) THEN
               IF NOT astt401_stea013_chk(g_stea_m.stea013) THEN
                  LET g_stea_m.stea013 = g_stea_m_t.stea013
                  CALL astt401_stea013_ref()
                  NEXT FIELD stea013    
               END IF             
            END IF
            CALL astt401_stea013_ref()
            IF g_stea_m.stea013 <>g_stea_m_o.stea013 OR  g_stea_m_o.stea013  is null THEN
               CALL astt401_stea013_other()
            END IF
            LET g_stea_m_o.stea013 =  g_stea_m.stea013]]>
  </point>
  <point name="input.a.stea014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_stea_m.stea014_desc= ''
            DISPLAY BY NAME g_stea_m.stea014_desc
            IF NOT cl_null(g_stea_m.stea014) THEN
               IF g_stea_m.stea014 <> g_stea_m_o.stea014 OR cl_null(g_stea_m_o.stea014) THEN
                  IF s_aooi500_setpoint(g_prog,'stea014') THEN
                     CALL s_aooi500_chk(g_prog,'stea014',g_stea_m.stea014,g_stea_m.steasite) RETURNING l_success,l_errno
                     IF NOT l_success THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.extend = g_stea_m.stea014
                        LET g_errparam.code   = l_errno
                        LET g_errparam.popup  = TRUE
                        CALL cl_err()
                        
                        LET g_stea_m.stea014 = g_stea_m_o.stea014  
                        CALL astt401_stea014_ref()
                        NEXT FIELD CURRENT
                     END IF
                  
                  ELSE
                     IF NOT astt401_stea014_chk() THEN                
                        LET g_stea_m.stea014 = g_stea_m_o.stea014  
                        CALL astt401_stea014_ref()
                        NEXT FIELD CURRENT
                     END IF
                  END IF
                  
               END IF         
            #ELSE       
            #   LET g_stea_m.stea033 = ''
            #   LET g_stea_m.stea033_desc = ''
            #   LET g_stea_m.stea034 = ''
            #   LET g_stea_m.stea034_desc= ''
            #   DISPLAY BY NAME g_stea_m.stea033, g_stea_m.stea033_desc,g_stea_m.stea034,g_stea_m.stea034_desc
            END IF
            CALL astt401_stea014_ref()
           # LET g_stea_m_o.stea033 = g_stea_m.stea033
           # LET g_stea_m_o.stea034 = g_stea_m.stea034
            LET g_stea_m_o.stea014 = g_stea_m.stea014

]]>
  </point>
  <point name="input.a.stea015" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_stea_m.stea015_desc= ''
            DISPLAY BY NAME g_stea_m.stea015_desc
            IF NOT cl_null(g_stea_m.stea015) THEN 
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = '1'
               LET g_chkparam.arg1 = g_stea_m.stea015
               IF NOT cl_chk_exist("v_ooag001") THEN
                  LET g_stea_m.stea015 =g_stea_m_t.stea015
                  CALL astt401_stea015_ref()
                  NEXT FIELD stea015
               END IF             
            END IF
            CALL astt401_stea015_ref() 

]]>
  </point>
  <point name="input.a.stea019" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_stea_m.stea019) THEN
               IF NOT astt401_stea019_020_chk(p_cmd,"stea019") THEN
                  LET g_stea_m.stea019 = g_stea_m_t.stea019
                  NEXT FIELD stea019
               END IF
            END IF]]>
  </point>
  <point name="input.a.stea020" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_stea_m.stea020) THEN
               IF NOT astt401_stea019_020_chk(p_cmd,"stea020") THEN
                  LET g_stea_m.stea020 = g_stea_m_t.stea020
                  NEXT FIELD stea020
               END IF
            END IF]]>
  </point>
  <point name="input.a.stea032" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_stea_m.stea032_desc = ''
            DISPLAY BY NAME g_stea_m.stea032_desc
            IF NOT cl_null(g_stea_m.stea032) THEN
                LET g_errshow = '1'
                INITIALIZE g_chkparam.* TO NULL
                LET g_chkparam.arg1 = g_stea_m.steaunit
                LET g_chkparam.arg2 = g_stea_m.stea032
                IF NOT cl_chk_exist("v_ooaj002") THEN
                   LET g_stea_m.stea032 = g_stea_m_t.stea032
                   CALL astt401_stea032_ref()
                   NEXT FIELD stea032
                END IF
            END IF
            CALL astt401_stea032_ref()
]]>
  </point>
  <point name="input.a.stea033" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_stea_m.stea033_desc = ''
            DISPLAY BY NAME g_stea_m.stea033_desc
            IF NOT cl_null(g_stea_m.stea033) THEN
               IF g_stea_m.stea033 != g_stea_m_o.stea033 OR cl_null(g_stea_m_o.stea033) THEN
                  IF NOT astt401_stea033_chk(g_stea_m.stea033) THEN                     
                     LET g_stea_m.stea033 = g_stea_m_o.stea033  
                     CALL astt401_stea033_ref()
                     NEXT FIELD stea033
                  END IF 
                  CALL astt401_stea033_ref()
               END IF    
            ELSE
               LET g_stea_m.stea033_desc = ''
               DISPLAY BY NAME g_stea_m.stea033_desc
            END IF
            LET g_stea_m_o.stea033 = g_stea_m.stea033 
            CALL astt401_stea033_ref()
]]>
  </point>
  <point name="input.a.stea034" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_stea_m.stea034_desc = ''
            DISPLAY BY NAME g_stea_m.stea034_desc
            IF NOT cl_null(g_stea_m.stea034) THEN
               IF g_stea_m.stea034 != g_stea_m_o.stea034 OR cl_null(g_stea_m_o.stea034) THEN
                  IF NOT astt401_stea033_chk(g_stea_m.stea034) THEN                     
                     LET g_stea_m.stea034 = g_stea_m_o.stea034  
                     CALL astt401_stea034_ref()
                     NEXT FIELD stea034
                  END IF 
                  CALL astt401_stea034_ref()
               END IF    
            ELSE
               LET g_stea_m.stea034_desc = ''
               DISPLAY BY NAME g_stea_m.stea034_desc
            END IF
            LET g_stea_m_o.stea034 = g_stea_m.stea034 
            CALL astt401_stea034_ref()
]]>
  </point>
  <point name="input.a.stea035" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_stea_m.stea035_desc = ''
            DISPLAY BY NAME g_stea_m.stea035_desc
            IF NOT cl_null(g_stea_m.stea035) THEN
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = '1'
               LET g_chkparam.arg1 = g_stea_m.stea035
               IF NOT cl_chk_exist("v_ooib002") THEN
                  LET g_stea_m.stea035 = g_stea_m_t.stea035 
                  CALL astt401_stea035_ref()
                  NEXT FIELD stea035
               END IF 
               CALL astt401_stea035_ref()             
            ELSE
               LET g_stea_m.stea035_desc = ''
               DISPLAY BY NAME g_stea_m.stea035_desc
            END IF       

]]>
  </point>
  <point name="input.a.stea036" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_stea_m.stea036_desc = ''
            DISPLAY BY NAME g_stea_m.stea036_desc
            IF NOT cl_null(g_stea_m.stea036) THEN
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = '1'
               LET g_chkparam.arg1 = g_stea_m.stea036
               IF NOT cl_chk_exist("v_staa001") THEN
                  LET g_stea_m.stea036 = g_stea_m_t.stea036 
                  CALL astt401_stea036_ref()
                  NEXT FIELD stea036
               END IF 
               CALL astt401_stea036_ref()  
                #计算下次计算日
               IF NOT astt401_stea019_020_chk(p_cmd,'stea036') THEN
                  LET g_stea_m.stea036 = g_stea_m_t.stea036 
                  CALL astt401_stea036_ref()
                  NEXT FIELD stea036
               END IF               
            ELSE
               LET g_stea_m.stea036_desc = ''
               DISPLAY BY NAME g_stea_m.stea036_desc
            END IF       

]]>
  </point>
  <point name="input.a.stea037" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[             LET g_stea_m.stea037_desc = ''
            DISPLAY BY NAME g_stea_m.stea037_desc
            IF NOT cl_null(g_stea_m.stea037) THEN            
               IF NOT astt401_stea037_chk() THEN
                  LET g_stea_m.stea037 = g_stea_m_t.stea037
                  CALL astt401_stea037_ref()
                  NEXT FIELD stea037
               END IF            
            END IF
            CALL astt401_stea037_ref()

]]>
  </point>
  <point name="input.a.stea038" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_stea_m.stea038_desc = ''
            DISPLAY BY NAME  g_stea_m.stea038_desc 
            IF NOT cl_null(g_stea_m.stea038) THEN

               IF s_aooi500_setpoint(g_prog,'stea038') THEN
                  CALL s_aooi500_chk(g_prog,'stea038',g_stea_m.stea038,g_stea_m.steasite) RETURNING l_success,l_errno
                  IF NOT l_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend = g_stea_m.stea038
                     LET g_errparam.code   = l_errno
                     LET g_errparam.popup  = TRUE
                     CALL cl_err()
                     
                     LET g_stea_m.stea038= g_stea_m_t.stea038
                     CALL astt401_stea038_ref()
                     NEXT FIELD CURRENT
                  END IF
               ELSE
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_errshow = '1'
                  LET g_chkparam.arg1 = g_stea_m.stea038               
                  IF NOT cl_chk_exist("v_ooef001_31") THEN
                     LET g_stea_m.stea038 = g_stea_m_t.stea038
                     CALL astt401_stea038_ref()
                     NEXT FIELD stea038
                  END IF
               END IF
            END IF
            CALL astt401_stea038_ref() 

]]>
  </point>
  <point name="input.a.stea044" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_stea_m.stea044_desc= ''
            DISPLAY BY NAME g_stea_m.stea044_desc
            IF NOT cl_null(g_stea_m.stea044) THEN 
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = '1'
               LET g_chkparam.arg1 =g_stea_m.stea044
               LET g_chkparam.arg2 = g_stea_m.steadocdt
               IF NOT cl_chk_exist("v_ooeg001") THEN
                  LET g_stea_m.stea044 = g_stea_m_t.stea044
                  CALL astt401_stea044_ref()
                  NEXT FIELD stea044
               END IF         
            END IF
            CALL astt401_stea044_ref()

]]>
  </point>
  <point name="input.a.stea045" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_stea_m.stea045_desc = ''
            DISPLAY BY NAME g_stea_m.stea045_desc
            IF NOT cl_null(g_stea_m.stea045) THEN
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = '1'
               LET g_chkparam.arg1 = g_stea_m.stea045
               IF NOT cl_chk_exist("v_oocq002_2127") THEN
                  LET g_stea_m.stea045 = g_stea_m_t.stea045
                  CALL astt401_stea045_ref()
                  NEXT FIELD stea045
               END IF
            END IF
            CALL astt401_stea045_ref()

]]>
  </point>
  <point name="input.a.stea047" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_stea_m.stea047_desc = ''
            DISPLAY BY NAME g_stea_m.stea047_desc
            IF NOT cl_null(g_stea_m.stea047) THEN
               INITIALIZE g_chkparam.* TO NULL
               LET g_errshow = '1'
               LET g_chkparam.arg1 = g_stea_m.stea047
               LET g_chkparam.arg2 = g_stea_m.steaunit
               IF NOT cl_chk_exist("v_mhaa001") THEN
                  LET g_stea_m.stea047 = g_stea_m_o.stea047
                  CALL astt401_stea047_ref()
                  NEXT FIELD stea047
               END IF               
               IF NOT cl_null(g_stea_m.stea048) THEN
                  IF NOT astt401_stea047_stea048_chk() THEN
                     LET g_stea_m.stea047 = g_stea_m_o.stea047
                     CALL astt401_stea047_ref()
                     NEXT FIELD stea047
                  END IF
               END IF
               LET g_stea_m_o.stea047 = g_stea_m.stea047
            ELSE            
               LET g_stea_m.stea048 = ''
               LET g_stea_m.stea048_desc = ''
               DISPLAY BY NAME g_stea_m.stea048,g_stea_m.stea048_desc
            END IF
            
            CALL astt401_stea047_ref()

]]>
  </point>
  <point name="input.a.stea048" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_stea_m.stea048) THEN
               IF NOT cl_null(g_stea_m.stea047) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_errshow = '1'
                  LET g_chkparam.arg1 = g_stea_m.stea048
                  LET g_chkparam.arg2 = g_stea_m.stea047
                  IF NOT cl_chk_exist("v_mhab002") THEN
                     LET g_stea_m.stea048 = g_stea_m_t.stea048
                     CALL astt401_stea048_ref()
                     NEXT FIELD stea048
                  END IF           
               END IF  
               IF NOT astt401_stea047_stea048_chk() THEN
                  LET g_stea_m.stea048 = g_stea_m_t.stea048
                  CALL astt401_stea048_ref()
                  NEXT FIELD stea048
               END IF 
               CALL astt401_stea048_ref()               
            END IF

]]>
  </point>
  <point name="input.a.steadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF NOT cl_null(g_stea_m.steadocno) AND p_cmd = 'a' THEN           
               IF NOT s_aooi200_chk_slip(g_stea_m.steasite,'',g_stea_m.steadocno,g_prog) THEN #s
                  LET g_stea_m.steadocno = g_stea_m_t.steadocno
                  NEXT FIELD CURRENT
               END IF
            END IF
            IF  NOT cl_null(g_stea_m.steadocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_stea_m.steadocno != g_steadocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stea_t WHERE "||"steaent = '" ||g_enterprise|| "' AND "||"steadocno = '"||g_stea_m.steadocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            ELSE
               NEXT FIELD CURRENT
            END IF
           # CALL astt401_set_entry(p_cmd)
           # CALL astt401_set_no_entry(p_cmd)


]]>
  </point>
  <point name="input.a.steasite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[             IF NOT cl_null(g_stea_m.steasite) THEN
               CALL s_aooi500_chk(g_prog,'steasite',g_stea_m.steasite,g_site) RETURNING l_success,l_errno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = g_stea_m.steasite
                  LET g_errparam.code   = l_errno
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()

                  LET g_stea_m.steasite = g_stea_m_t.steasite
                  CALL astt401_steasite_ref()
                  NEXT FIELD CURRENT
               END IF
            #sakura---add---str
            ELSE
               INITIALIZE g_errparam TO NULL
               LET g_errparam.extend = ''
               LET g_errparam.code   = 'axc-00120'
               LET g_errparam.popup  = TRUE
               CALL cl_err()
               LET g_stea_m.steasite = g_stea_m_t.steasite
               CALL astt401_steasite_ref()
               NEXT FIELD CURRENT
            #sakura---add---end
            END IF
            
            #ken-------------------------------e
            LET g_site_flag = TRUE           #sakura add
            CALL astt401_steasite_ref()
            CALL astt401_set_entry(p_cmd)    #sakura add
            CALL astt401_set_no_entry(p_cmd) #sakura add  

]]>
  </point>
  <point name="input.a.steaunit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_stea_m.steaunit) THEN
               CALL s_aooi500_chk(g_prog,'steaunit',g_stea_m.steaunit,g_site) RETURNING l_success,l_errno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = g_stea_m.steaunit
                  LET g_errparam.code   = l_errno
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()

                  LET g_stea_m.steaunit = g_stea_m_t.steaunit
                  CALL astt401_steaunit_ref()
                  NEXT FIELD CURRENT
               END IF
            
            END IF
            IF NOT cl_null(g_stea_m_o.steaunit) AND (g_stea_m_o.steaunit <> g_stea_m.steaunit) THEN
               #清空楼栋 楼层  税别
               LET g_stea_m.stea047 = '' 
               LET g_stea_m.stea047_desc = ''
               LET g_stea_m.stea048 = ''
               LET g_stea_m.stea048_desc =''
               LET g_stea_m.stea032 = ''
               DISPLAY BY NAME g_stea_m.stea047,g_stea_m.stea047_desc,
                               g_stea_m.stea048,g_stea_m.stea048_desc,g_stea_m.stea032
            END IF
            LET g_stea_m_o.steaunit = g_stea_m.steaunit
]]>
  </point>
  <point name="input.b.page4.steg002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF cl_null(g_steb4_d[l_ac].steg003) THEN
               NEXT FIELD steg003
            END IF]]>
  </point>
  <point name="input.b.stea001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            # IF cl_null(g_stea_m.steadocdt) THEN
            #    NEXT FIELD steadocdt
            # END IF
            # IF cl_null(g_stea_m.steadocno) THEN
            #    NEXT FIELD steadocno
            # END IF
            # IF g_flag = FALSE THEN
            #    CALL s_aooi200_gen_docno(g_site,g_stea_m.steadocno,g_stea_m.steadocdt,g_prog) RETURNING l_flag,g_stea_m.steadocno  
            #    IF NOT l_flag THEN
            #       INITIALIZE g_errparam TO NULL
            #       LET g_errparam.code = 'apm-00003'
            #       LET g_errparam.extend = g_stea_m.steadocno
            #       LET g_errparam.popup = TRUE
            #       CALL cl_err()
            #   
            #       LET g_stea_m.steadocno = g_stea_m_t.steadocno
            #       DISPLAY g_stea_m.steadocno TO steadocno
            #       NEXT FIELD steadocno
            #    END IF
            # END IF
            # LET g_flag = TRUE
            # CALL astt401_set_entry(p_cmd)
            # CALL astt401_set_no_entry(p_cmd)
             
           # CALL cl_get_para(g_enterprise,g_site,'E-CIR-0010') RETURNING l_sys_1
           # IF l_sys_1 = 'Y' THEN
           #    IF p_cmd = 'a' AND g_stea_m.stea000 = 'I' AND cl_null(g_stea_m.stea001) THEN    
           #       CALL s_aooi390('29') RETURNING l_flag,g_stea_m.stea001
           #       IF NOT astt401_stea001_chk(p_cmd,g_stea_m.stea001) THEN
           #          LET g_stea_m.stea001 = ''
           #       END IF                  
           #    END IF     
           # END IF    ]]>
  </point>
  <point name="input.b.stea047" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF cl_null(g_stea_m.steaunit) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'ast-00248'
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
               NEXT FIELD steaunit
            END IF]]>
  </point>
  <point name="input.b.stea048" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF cl_null(g_stea_m.steaunit) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'ast-00248'
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
               NEXT FIELD steaunit
            END IF
            IF cl_null(g_stea_m.stea047) THEN
               NEXT FIELD stea047
            END IF]]>
  </point>
  <point name="input.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_flag = FALSE]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[             CALL astt401_set_entry_b(l_cmd)
             CALL astt401_set_no_required_b(l_cmd)
             CALL astt401_set_required_b(l_cmd)
             CALL astt401_set_no_entry_b(l_cmd) ]]>
  </point>
  <point name="input.body.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[             CALL astt401_set_entry_b(l_cmd)
             CALL astt401_set_no_required_b(l_cmd)
             CALL astt401_set_required_b(l_cmd)
             CALL astt401_set_no_entry_b(l_cmd)]]>
  </point>
  <point name="input.body.insert.before_bak" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[             SELECT MAX(stebseq)+1 INTO  g_steb_d[l_ac].stebseq FROM steb_t
             WHERE stebent = g_enterprise AND stebdocno = g_stea_m.steadocno
            IF cl_null( g_steb_d[l_ac].stebseq ) THEN             
               LET g_steb_d[l_ac].stebseq = 1
            END IF
            LET g_steb_d[l_ac].steb001 = g_stea_m.stea001
            LET g_steb_d[l_ac].steb013 = g_stea_m.stea019
            LET g_steb_d[l_ac].steb014 = g_stea_m.stea020
            LET g_steb_d[l_ac].stebsite = g_stea_m.steasite
            LET g_steb_d[l_ac].stebunit = g_stea_m.steaunit]]>
  </point>
  <point name="input.body2.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               SELECT COUNT(*) INTO l_n FROM stef_t
                WHERE stefent = g_enterprise AND stefdocno = g_stea_m.steadocno
                  AND stef005 = g_steb2_d_t.stec002
               IF l_n > 0 THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = "ast-00270"
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               ]]>
  </point>
  <point name="input.body2.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[             CALL astt401_set_entry_b(l_cmd)
             CALL astt401_set_no_required_b(l_cmd)
             CALL astt401_set_required_b(l_cmd)
             CALL astt401_set_no_entry_b(l_cmd)]]>
  </point>
  <point name="input.body2.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF g_steb2_d[l_ac].stec024 = '2' THEN
               CALL cl_set_comp_entry("stec025",TRUE)
               CALL cl_set_comp_required("stec025",TRUE)
            ELSE
               CALL cl_set_comp_entry("stec025",FALSE)
               CALL cl_set_comp_required("stec025",FALSE)
            END IF
             CALL astt401_set_entry_b(l_cmd)
             CALL astt401_set_no_required_b(l_cmd)
             CALL astt401_set_required_b(l_cmd)
             CALL astt401_set_no_entry_b(l_cmd)]]>
  </point>
  <point name="input.body2.insert.before_bak" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[             SELECT MAX(stecseq)+1 INTO  g_steb2_d[l_ac].stecseq FROM stec_t
             WHERE stecent = g_enterprise AND stecdocno = g_stea_m.steadocno
            IF cl_null( g_steb2_d[l_ac].stecseq ) THEN             
               LET g_steb2_d[l_ac].stecseq = 1
            END IF  
            LET g_steb2_d[l_ac].stec001 = g_stea_m.stea001
            LET g_steb2_d[l_ac].stec004 = g_stea_m.stea011
            CALL astt401_stec004_ref()
            LET g_steb2_d[l_ac].stec005 = g_stea_m.stea012
            CALL astt401_stec005_ref()
            LET g_steb2_d[l_ac].stec006 = g_stea_m.stea033
            CALL astt401_stec006_ref()
            LET g_steb2_d[l_ac].stec007 = g_stea_m.stea034
            CALL astt401_stec007_ref()
            LET g_steb2_d[l_ac].stec019 = g_stea_m.stea019
            LET g_steb2_d[l_ac].stec020 = g_stea_m.stea020
            LET g_steb2_d[l_ac].stecsite = g_stea_m.steasite
            LET g_steb2_d[l_ac].stecunit = g_stea_m.steaunit
            LET g_steb2_d[l_ac].stec024 = '1'
            IF g_steb2_d[l_ac].stec024 = '2' THEN
               CALL cl_set_comp_entry("stec025",TRUE)
               CALL cl_set_comp_required("stec025",TRUE)
            ELSE
               CALL cl_set_comp_entry("stec025",FALSE)
               CALL cl_set_comp_required("stec025",FALSE)
            END IF]]>
  </point>
  <point name="input.body3.insert.before_bak" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[             SELECT MAX(steeseq)+1 INTO  g_steb3_d[l_ac].steeseq FROM stee_t
             WHERE steeent = g_enterprise AND steedocno = g_stea_m.steadocno
            IF cl_null( g_steb3_d[l_ac].steeseq ) THEN             
               LET g_steb3_d[l_ac].steeseq = 1
            END IF
            LET g_steb3_d[l_ac].stee001 = g_stea_m.stea001
            LET g_steb3_d[l_ac].stee008 = g_stea_m.stea019
            LET g_steb3_d[l_ac].stee009 = g_stea_m.stea020
            LET g_steb3_d[l_ac].steesite = g_stea_m.steasite
            LET g_steb3_d[l_ac].steeunit = g_stea_m.steaunit]]>
  </point>
  <point name="input.body4.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            SELECT NVL(SUM(steg004),0),NVL(SUM(steg005),0) INTO g_stea_m.stea007,g_stea_m.stea008 FROM steg_t
             WHERE stegent = g_enterprise AND stegdocno = g_stea_m.steadocno
             
            UPDATE stea_t SET stea007 = g_stea_m.stea007,
                              stea008 = g_stea_m.stea008  
             WHERE steaent = g_enterprise AND steadocno = g_stea_m.steadocno
            DISPLAY BY NAME g_stea_m.stea007,g_stea_m.stea008  
                           ]]>
  </point>
  <point name="input.body4.insert.before_bak" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            SELECT MAX(stegseq)+1 INTO  g_steb4_d[l_ac].stegseq FROM steg_t
             WHERE stegent = g_enterprise AND stegdocno = g_stea_m.steadocno
            IF cl_null( g_steb4_d[l_ac].stegseq ) THEN             
               LET g_steb4_d[l_ac].stegseq = 1
            END IF
            LET g_steb4_d[l_ac].steg001 = g_stea_m.stea001 
            LET g_steb4_d[l_ac].stegacti = 'Y'
            LET g_steb4_d[l_ac].stegsite = g_stea_m.steasite
            LET g_steb4_d[l_ac].stegunit = g_stea_m.steaunit]]>
  </point>
  <point name="input.body5.insert.before_bak" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            SELECT MAX(stehseq)+1 INTO  g_steb5_d[l_ac].stehseq FROM steh_t
             WHERE stehent = g_enterprise AND stehdocno = g_stea_m.steadocno
            IF cl_null( g_steb5_d[l_ac].stehseq ) THEN             
               LET g_steb5_d[l_ac].stehseq = 1
            END IF
            LET g_steb5_d[l_ac].stehacti = 'Y'
            LET g_steb5_d[l_ac].steh001 = g_stea_m.stea001
            LET g_steb5_d[l_ac].stehsite = g_stea_m.steasite
            LET g_steb5_d[l_ac].stehunit = g_stea_m.steaunit
            ]]>
  </point>
  <point name="input.body6.before_input2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[           ]]>
  </point>
  <point name="input.body6.insert.before_bak" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[             SELECT MAX(steiseq)+1 INTO  g_steb6_d[l_ac].steiseq FROM stei_t
             WHERE steient = g_enterprise AND steidocno = g_stea_m.steadocno
            IF cl_null( g_steb6_d[l_ac].steiseq ) THEN             
               LET g_steb6_d[l_ac].steiseq = 1
            END IF
            LET g_steb6_d[l_ac].stei001 = g_stea_m.stea001
            LET g_steb6_d[l_ac].stei002 = '1'
            LET g_steb6_d[l_ac].steiacti = 'Y'
            LET g_steb6_d[l_ac].steisite = g_stea_m.steasite
            LET g_steb6_d[l_ac].steiunit = g_stea_m.steaunit]]>
  </point>
  <point name="input.body8.insert.before_bak" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            SELECT MAX(stedseq1)+1 INTO  g_steb8_d[l_ac].stedseq1 FROM sted_t
             WHERE stedent = g_enterprise AND steddocno = g_stea_m.steadocno
            IF cl_null( g_steb8_d[l_ac].stedseq1 ) THEN             
               LET g_steb8_d[l_ac].stedseq1 = 1
            END IF
            LET g_steb8_d[l_ac].sted003 = g_steb2_d[g_detail_idx].stec002
            LET g_steb8_d[l_ac].sted003_desc = g_steb2_d[g_detail_idx].stec003
            LET g_steb8_d[l_ac].sted001 = g_stea_m.stea001
            LET g_steb8_d[l_ac].stedsite = g_stea_m.steasite
            LET g_steb8_d[l_ac].stedunit = g_stea_m.steaunit]]>
  </point>
  <point name="input.body9.insert.before_bak" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[             SELECT NVL(MAX(stef003)+1,1) INTO g_steb9_d[l_ac].stef003 FROM stef_t
              WHERE stefent = g_enterprise AND stefdocno = g_stea_m.steadocno
                AND stefseq=g_steb3_d[g_detail_idx].steeseq AND stef002 = g_steb3_d[g_detail_idx].stee002
             LET g_steb9_d[l_ac].stef001 = g_stea_m.stea001
             LET g_steb9_d[l_ac].stefsite = g_stea_m.steasite
             LET g_steb9_d[l_ac].stefunit = g_stea_m.steaunit
             LET g_steb9_d[l_ac].stef007 = '']]>
  </point>
  <point name="input.c.page1.steb002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_steb_d[l_ac].steb002             #給予default值
            LET g_qryparam.default2 = "" #g_steb_d[l_ac].stae001 #費用編號
            LET g_qryparam.default3 = "" #g_steb_d[l_ac].stael003 #說明
            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_stae001()                                #呼叫開窗

            LET g_steb_d[l_ac].steb002 = g_qryparam.return1              
            #LET g_steb_d[l_ac].stae001 = g_qryparam.return2 
            #LET g_steb_d[l_ac].stael003 = g_qryparam.return3 
            DISPLAY g_steb_d[l_ac].steb002 TO steb002              #
            CALL astt401_steb002_ref()
            #DISPLAY g_steb_d[l_ac].stae001 TO stae001 #費用編號
            #DISPLAY g_steb_d[l_ac].stael003 TO stael003 #說明
            NEXT FIELD steb002                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.steb008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_steb_d[l_ac].steb008             #給予default值
            LET g_qryparam.default2 = "" #g_steb_d[l_ac].stabl003 #說明
            LET g_qryparam.default3 = "" #g_steb_d[l_ac].stabl004 #助記碼
            #給予arg
            LET g_qryparam.arg1 = "4" #s
            LET g_qryparam.arg2 = g_stea_m.stea037 #s

            CALL q_stab001_3()                                #呼叫開窗

            LET g_steb_d[l_ac].steb008 = g_qryparam.return1              
            #LET g_steb_d[l_ac].stabl003 = g_qryparam.return2 
            #LET g_steb_d[l_ac].stabl004 = g_qryparam.return3 
            DISPLAY g_steb_d[l_ac].steb008 TO steb008              #
            CALL astt401_steb008_ref()
            #DISPLAY g_steb_d[l_ac].stabl003 TO stabl003 #說明
            #DISPLAY g_steb_d[l_ac].stabl004 TO stabl004 #助記碼
            NEXT FIELD steb008                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.steb009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_steb_d[l_ac].steb009             #給予default值
            LET g_qryparam.default2 = "" #g_steb_d[l_ac].stabl003 #說明
            LET g_qryparam.default3 = "" #g_steb_d[l_ac].stabl004 #助記碼
            #給予arg
            LET g_qryparam.arg1 = "4" #s
            LET g_qryparam.arg2 = g_stea_m.stea037 #s

            CALL q_stab001_3()                                #呼叫開窗

            LET g_steb_d[l_ac].steb009 = g_qryparam.return1              
            #LET g_steb_d[l_ac].stabl003 = g_qryparam.return2 
            #LET g_steb_d[l_ac].stabl004 = g_qryparam.return3 
            DISPLAY g_steb_d[l_ac].steb009 TO steb009              #
            CALL astt401_steb009_ref()
            #DISPLAY g_steb_d[l_ac].stabl003 TO stabl003 #說明
            #DISPLAY g_steb_d[l_ac].stabl004 TO stabl004 #助記碼
            NEXT FIELD steb009                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.stec004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_steb2_d[l_ac].stec004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_rtax001()                                #呼叫開窗

            LET g_steb2_d[l_ac].stec004 = g_qryparam.return1              

            DISPLAY g_steb2_d[l_ac].stec004 TO stec004              #
            CALL astt401_stec004_ref()
            NEXT FIELD stec004                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.stec005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_steb2_d[l_ac].stec005             #給予default值
            LET g_qryparam.default2 = "" #g_steb2_d[l_ac].oocql004 #說明
            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_oocq002_2002()                                #呼叫開窗

            LET g_steb2_d[l_ac].stec005 = g_qryparam.return1              
            #LET g_steb2_d[l_ac].oocql004 = g_qryparam.return2 
            DISPLAY g_steb2_d[l_ac].stec005 TO stec005              #
            CALL astt401_stec005_ref()
            #DISPLAY g_steb2_d[l_ac].oocql004 TO oocql004 #說明
            NEXT FIELD stec005                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.stec006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_steb2_d[l_ac].stec006             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_oodb002_1()                                #呼叫開窗

            LET g_steb2_d[l_ac].stec006 = g_qryparam.return1              

            DISPLAY g_steb2_d[l_ac].stec006 TO stec006              #
            CALL astt401_stec006_ref()
            NEXT FIELD stec006                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.stec007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_steb2_d[l_ac].stec007             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_oodb002_1()                                #呼叫開窗

            LET g_steb2_d[l_ac].stec007 = g_qryparam.return1              

            DISPLAY g_steb2_d[l_ac].stec007 TO stec007              #
            CALL astt401_stec007_ref()
            NEXT FIELD stec007                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.stec009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_steb2_d[l_ac].stec009             #給予default值
            LET g_qryparam.default2 = "" #g_steb2_d[l_ac].stae001 #費用編號
            LET g_qryparam.default3 = "" #g_steb2_d[l_ac].stael003 #說明
            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_stae001()                                #呼叫開窗

            LET g_steb2_d[l_ac].stec009 = g_qryparam.return1              
            #LET g_steb2_d[l_ac].stae001 = g_qryparam.return2 
            #LET g_steb2_d[l_ac].stael003 = g_qryparam.return3 
            DISPLAY g_steb2_d[l_ac].stec009 TO stec009              #
            CALL astt401_stec009_ref()
            #DISPLAY g_steb2_d[l_ac].stae001 TO stae001 #費用編號
            #DISPLAY g_steb2_d[l_ac].stael003 TO stael003 #說明
            NEXT FIELD stec009                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.stec015" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_steb2_d[l_ac].stec015             #給予default值
            LET g_qryparam.default2 = "" #g_steb2_d[l_ac].stabl003 #說明
            LET g_qryparam.default3 = "" #g_steb2_d[l_ac].stabl004 #助記碼
            #給予arg
            LET g_qryparam.arg1 = '4' #s
            LET g_qryparam.arg2 = g_stea_m.stea037 #s

            CALL q_stab001_3()                                #呼叫開窗

            LET g_steb2_d[l_ac].stec015 = g_qryparam.return1              
            #LET g_steb2_d[l_ac].stabl003 = g_qryparam.return2 
            #LET g_steb2_d[l_ac].stabl004 = g_qryparam.return3 
            DISPLAY g_steb2_d[l_ac].stec015 TO stec015              #
            CALL astt401_stec015_ref()
            #DISPLAY g_steb2_d[l_ac].stabl003 TO stabl003 #說明
            #DISPLAY g_steb2_d[l_ac].stabl004 TO stabl004 #助記碼
            NEXT FIELD stec015                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.stec016" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_steb2_d[l_ac].stec016             #給予default值
            LET g_qryparam.default2 = "" #g_steb2_d[l_ac].stabl003 #說明
            LET g_qryparam.default3 = "" #g_steb2_d[l_ac].stabl004 #助記碼
            #給予arg
            LET g_qryparam.arg1 = "4" #s
            LET g_qryparam.arg2 = g_stea_m.stea037 #s

            CALL q_stab001_3()                                #呼叫開窗

            LET g_steb2_d[l_ac].stec016 = g_qryparam.return1              
            #LET g_steb2_d[l_ac].stabl003 = g_qryparam.return2 
            #LET g_steb2_d[l_ac].stabl004 = g_qryparam.return3 
            DISPLAY g_steb2_d[l_ac].stec016 TO stec016              #
            CALL astt401_stec016_ref()
            #DISPLAY g_steb2_d[l_ac].stabl003 TO stabl003 #說明
            #DISPLAY g_steb2_d[l_ac].stabl004 TO stabl004 #助記碼
            NEXT FIELD stec016                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.stec025" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_steb2_d[l_ac].stec025             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_stea_m.steadocno #s

            LET g_qryparam.where = "stec024 = '1'"
            CALL q_stec002()                                #呼叫開窗

            LET g_steb2_d[l_ac].stec025 = g_qryparam.return1              

            DISPLAY g_steb2_d[l_ac].stec025 TO stec025              #

            NEXT FIELD stec025                          #返回原欄位

]]>
  </point>
  <point name="input.c.page3.stee003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_steb3_d[l_ac].stee003             #給予default值
            LET g_qryparam.default2 = "" #g_steb3_d[l_ac].stae001 #費用編號
            LET g_qryparam.default3 = "" #g_steb3_d[l_ac].stael003 #說明
            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_stae001()                                #呼叫開窗

            LET g_steb3_d[l_ac].stee003 = g_qryparam.return1              
            #LET g_steb3_d[l_ac].stae001 = g_qryparam.return2 
            #LET g_steb3_d[l_ac].stael003 = g_qryparam.return3 
            DISPLAY g_steb3_d[l_ac].stee003 TO stee003              #
            CALL astt401_stee003_ref()
            #DISPLAY g_steb3_d[l_ac].stae001 TO stae001 #費用編號
            #DISPLAY g_steb3_d[l_ac].stael003 TO stael003 #說明
            NEXT FIELD stee003                          #返回原欄位

]]>
  </point>
  <point name="input.c.page4.steg002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_steb4_d[l_ac].steg002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

            LET g_qryparam.where = " mhad001 = '",g_stea_m.stea047,"' AND mhad002 ='",g_stea_m.stea048,"'",
                                   " AND mhad003 = '",g_steb4_d[l_ac].steg003,"'"
            CALL q_mhad001()                                #呼叫開窗

            LET g_steb4_d[l_ac].steg002 = g_qryparam.return1              

            DISPLAY g_steb4_d[l_ac].steg002 TO steg002              #

            NEXT FIELD steg002                          #返回原欄位

]]>
  </point>
  <point name="input.c.page4.steg003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_steb4_d[l_ac].steg003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s
     
            LET g_qryparam.where = " mhac001 ='",g_stea_m.stea047,"' AND mhac002 = '",g_stea_m.stea048,"'"
            CALL q_mhac003()                                #呼叫開窗

            LET g_steb4_d[l_ac].steg003 = g_qryparam.return1              

            DISPLAY g_steb4_d[l_ac].steg003 TO steg003              #

            NEXT FIELD steg003                          #返回原欄位

]]>
  </point>
  <point name="input.c.page6.stei003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_steb6_d[l_ac].stei003             #給予default值
            LET g_qryparam.default2 = "" #g_steb6_d[l_ac].stae001 #費用編號
            LET g_qryparam.default3 = "" #g_steb6_d[l_ac].stael003 #說明
            #給予arg
            LET g_qryparam.arg1 = "" #s
            LET g_qryparam.where = " stae001 IN (SELECT steb002 FROM steb_t WHERE stebent = '",g_enterprise,"'",
                                   "                AND stebdocno = '",g_stea_m.steadocno,"')" 

            CALL q_stae001()                                #呼叫開窗

            LET g_steb6_d[l_ac].stei003 = g_qryparam.return1              
            #LET g_steb6_d[l_ac].stae001 = g_qryparam.return2 
            #LET g_steb6_d[l_ac].stael003 = g_qryparam.return3 
            DISPLAY g_steb6_d[l_ac].stei003 TO stei003              #
            CALL astt401_stei003_ref()
            #DISPLAY g_steb6_d[l_ac].stae001 TO stae001 #費用編號
            #DISPLAY g_steb6_d[l_ac].stael003 TO stael003 #說明
            NEXT FIELD stei003                          #返回原欄位

]]>
  </point>
  <point name="input.c.page6.stei010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_steb6_d[l_ac].stei010             #給予default值
            LET g_qryparam.default2 = "" #g_steb6_d[l_ac].oocql004 #說明
            #給予arg
            LET g_qryparam.arg1 = "2132" #s


            CALL q_oocq002()                                #呼叫開窗

            LET g_steb6_d[l_ac].stei010 = g_qryparam.return1              
            #LET g_steb6_d[l_ac].oocql004 = g_qryparam.return2 
            DISPLAY g_steb6_d[l_ac].stei010 TO stei010              #
            CALL astt401_stei010_ref()
            #DISPLAY g_steb6_d[l_ac].oocql004 TO oocql004 #說明
            NEXT FIELD stei010                          #返回原欄位

]]>
  </point>
  <point name="input.c.page8.sted004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_steb8_d[l_ac].sted004             #給予default值
            LET g_qryparam.default2 = "" #g_steb8_d[l_ac].oocql004 #說明
            #給予arg
            LET g_qryparam.arg1 = "2024" #s


            CALL q_oocq002()                                #呼叫開窗

            LET g_steb8_d[l_ac].sted004 = g_qryparam.return1              
            #LET g_steb8_d[l_ac].oocql004 = g_qryparam.return2 
            DISPLAY g_steb8_d[l_ac].sted004 TO sted004              #
            CALL astt401_sted004_ref()
            #DISPLAY g_steb8_d[l_ac].oocql004 TO oocql004 #說明
            NEXT FIELD sted004                          #返回原欄位

]]>
  </point>
  <point name="input.c.page9.stef005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_steb9_d[l_ac].stef005             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_stea_m.steadocno #s
            LET g_qryparam.where = "stec024 = '1'"

            CALL q_stec002()                                #呼叫開窗

            LET g_steb9_d[l_ac].stef005 = g_qryparam.return1              

            DISPLAY g_steb9_d[l_ac].stef005 TO stef005              #
            CALL astt401_stef005_ref()
            NEXT FIELD stef005                          #返回原欄位

]]>
  </point>
  <point name="input.c.stea001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
          IF g_stea_m.stea000 = 'U' THEN
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stea_m.stea001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

           
            CALL q_stfa001()                                #呼叫開窗
            

            LET g_stea_m.stea001 = g_qryparam.return1              

            DISPLAY g_stea_m.stea001 TO stea001              #

            NEXT FIELD stea001                          #返回原欄位
          END IF  
]]>
  </point>
  <point name="input.c.stea006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stea_m.stea006             #給予default值
            LET g_qryparam.default2 = "" #g_stea_m.oocql004 #說明
            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_oocq002_2126()                                #呼叫開窗

            LET g_stea_m.stea006 = g_qryparam.return1              
            #LET g_stea_m.oocql004 = g_qryparam.return2 
            DISPLAY g_stea_m.stea006 TO stea006              #
            CALL astt401_stea006_ref()
            #DISPLAY g_stea_m.oocql004 TO oocql004 #說明
            NEXT FIELD stea006                          #返回原欄位

]]>
  </point>
  <point name="input.c.stea010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stea_m.stea010             #給予default值

            #給予arg
        
            LET g_qryparam.arg1 = "('1','3')"  

            CALL q_pmaa001_1()                                #呼叫開窗

            LET g_stea_m.stea010 = g_qryparam.return1              

            DISPLAY g_stea_m.stea010 TO stea010              #
            CALL astt401_stea010_ref()
            NEXT FIELD stea010                          #返回原欄位

]]>
  </point>
  <point name="input.c.stea011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stea_m.stea011             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_rtax001()                                #呼叫開窗

            LET g_stea_m.stea011 = g_qryparam.return1              

            DISPLAY g_stea_m.stea011 TO stea011              #
            CALL astt401_stea011_ref()

            NEXT FIELD stea011                          #返回原欄位

]]>
  </point>
  <point name="input.c.stea012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stea_m.stea012             #給予default值
            LET g_qryparam.default2 = "" #g_stea_m.oocql004 #說明
            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_oocq002_2002()                                #呼叫開窗

            LET g_stea_m.stea012 = g_qryparam.return1              
            #LET g_stea_m.oocql004 = g_qryparam.return2 
            DISPLAY g_stea_m.stea012 TO stea012              #
            CALL astt401_stea012_ref()
            #DISPLAY g_stea_m.oocql004 TO oocql004 #說明
            NEXT FIELD stea012                          #返回原欄位

]]>
  </point>
  <point name="input.c.stea013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stea_m.stea013             #給予default值
            LET g_qryparam.default2 = "" #g_stea_m.stagl003 #說明
            #給予arg
            LET g_qryparam.arg1 = "" #s

            LET g_qryparam.where= "stag002 = '4'"
            CALL q_stag001()                                #呼叫開窗

            LET g_stea_m.stea013 = g_qryparam.return1              
            #LET g_stea_m.stagl003 = g_qryparam.return2 
            DISPLAY g_stea_m.stea013 TO stea013              #
            CALL astt401_stea013_ref()
            #DISPLAY g_stea_m.stagl003 TO stagl003 #說明
            NEXT FIELD stea013                          #返回原欄位

]]>
  </point>
  <point name="input.c.stea014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stea_m.stea014             #給予default值
            LET g_qryparam.default2 = "" #g_stea_m.ooefl003 #說明(簡稱)
            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_ooef001_2()                                #呼叫開窗

            LET g_stea_m.stea014 = g_qryparam.return1              
            #LET g_stea_m.ooefl003 = g_qryparam.return2 
            DISPLAY g_stea_m.stea014 TO stea014              #
            CALL astt401_stea014_ref()
            #DISPLAY g_stea_m.ooefl003 TO ooefl003 #說明(簡稱)
            NEXT FIELD stea014                          #返回原欄位

]]>
  </point>
  <point name="input.c.stea015" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stea_m.stea015             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_ooag001()                                #呼叫開窗

            LET g_stea_m.stea015 = g_qryparam.return1              

            DISPLAY g_stea_m.stea015 TO stea015              #
            CALL astt401_stea015_ref()
            NEXT FIELD stea015                          #返回原欄位

]]>
  </point>
  <point name="input.c.stea032" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stea_m.stea032             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_stea_m.steaunit


            CALL q_ooaj002_1()                                #呼叫開窗

            LET g_stea_m.stea032 = g_qryparam.return1              

            DISPLAY g_stea_m.stea032 TO stea032              #
            CALL astt401_stea032_ref()
            
            NEXT FIELD stea032                          #返回原欄位

]]>
  </point>
  <point name="input.c.stea033" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stea_m.stea033             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_stea_m.steaunit #s


            CALL q_oodb002_1()                                #呼叫開窗

            LET g_stea_m.stea033 = g_qryparam.return1              

            DISPLAY g_stea_m.stea033 TO stea033              #
            CALL astt401_stea033_ref()
            NEXT FIELD stea033                          #返回原欄位

]]>
  </point>
  <point name="input.c.stea034" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stea_m.stea034             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_stea_m.steaunit #s


            CALL q_oodb002_1()                                #呼叫開窗

            LET g_stea_m.stea034 = g_qryparam.return1              

            DISPLAY g_stea_m.stea034 TO stea034              #
            CALL astt401_stea034_ref()
            NEXT FIELD stea034                          #返回原欄位

]]>
  </point>
  <point name="input.c.stea035" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stea_m.stea035             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_ooib002_1()                                #呼叫開窗

            LET g_stea_m.stea035 = g_qryparam.return1              

            DISPLAY g_stea_m.stea035 TO stea035              #
            CALL astt401_stea035_ref()
            NEXT FIELD stea035                          #返回原欄位

]]>
  </point>
  <point name="input.c.stea036" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stea_m.stea036             #給予default值
            LET g_qryparam.default2 = "" #g_stea_m.staal003 #說明
            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_staa001()                                #呼叫開窗

            LET g_stea_m.stea036 = g_qryparam.return1              
            #LET g_stea_m.staal003 = g_qryparam.return2 
            DISPLAY g_stea_m.stea036 TO stea036              #
            CALL astt401_stea036_ref()
            #DISPLAY g_stea_m.staal003 TO staal003 #說明
            NEXT FIELD stea036                          #返回原欄位

]]>
  </point>
  <point name="input.c.stea037" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stea_m.stea037             #給予default值
            LET g_qryparam.default2 = "" #g_stea_m.oocql004 #說明
            #給予arg
            LET g_qryparam.arg1 = "2060" #s


            CALL q_oocq002()                                #呼叫開窗

            LET g_stea_m.stea037 = g_qryparam.return1              
            #LET g_stea_m.oocql004 = g_qryparam.return2 
            DISPLAY g_stea_m.stea037 TO stea037               #
            CALL astt401_stea037_ref()
            #DISPLAY g_stea_m.oocql004 TO oocql004 #說明
            NEXT FIELD stea037                          #返回原欄位

]]>
  </point>
  <point name="input.c.stea038" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stea_m.stea038             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_ooef001_23()                                #呼叫開窗

            LET g_stea_m.stea038 = g_qryparam.return1              

            DISPLAY g_stea_m.stea038 TO stea038              #
            CALL astt401_stea038_ref()
            NEXT FIELD stea038                          #返回原欄位

]]>
  </point>
  <point name="input.c.stea044" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stea_m.stea044             #給予default值
            LET g_qryparam.default2 = "" #g_stea_m.ooeg001 #部門編號
            #給予arg
            LET g_qryparam.arg1 = g_stea_m.steadocdt #s


            CALL q_ooeg001()                                #呼叫開窗

            LET g_stea_m.stea044 = g_qryparam.return1              
            #LET g_stea_m.ooeg001 = g_qryparam.return2 
            DISPLAY g_stea_m.stea044 TO stea044              #
            CALL astt401_stea044_ref()
            #DISPLAY g_stea_m.ooeg001 TO ooeg001 #部門編號
            NEXT FIELD stea044                          #返回原欄位

]]>
  </point>
  <point name="input.c.stea045" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stea_m.stea045             #給予default值
            LET g_qryparam.default2 = "" #g_stea_m.oocql004 #說明
            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_oocq002_2127()                                #呼叫開窗

            LET g_stea_m.stea045 = g_qryparam.return1              
            #LET g_stea_m.oocql004 = g_qryparam.return2 
            DISPLAY g_stea_m.stea045 TO stea045              #
            CALL astt401_stea045_ref()
            #DISPLAY g_stea_m.oocql004 TO oocql004 #說明
            NEXT FIELD stea045                          #返回原欄位

]]>
  </point>
  <point name="input.c.stea047" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stea_m.stea047             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s
            LET g_qryparam.where = "mhaasite = '",g_stea_m.steaunit,"'"

            CALL q_mhaa001()                                #呼叫開窗

            LET g_stea_m.stea047 = g_qryparam.return1              

            DISPLAY g_stea_m.stea047 TO stea047              #
            CALL astt401_stea047_ref()
            NEXT FIELD stea047                          #返回原欄位

]]>
  </point>
  <point name="input.c.stea048" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stea_m.stea048             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

            LET g_qryparam.where = " mhab001 = '",g_stea_m.stea047,"'" 
            CALL q_mhab002()                                #呼叫開窗

            LET g_stea_m.stea048 = g_qryparam.return1              

            DISPLAY g_stea_m.stea048 TO stea048              #
            CALL astt401_stea048_ref()
            NEXT FIELD stea048                          #返回原欄位

]]>
  </point>
  <point name="input.c.steadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stea_m.steadocno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef004 #s
            LET g_qryparam.arg2 = 'astt401' #s

            CALL q_ooba002_1()                                #呼叫開窗

            LET g_stea_m.steadocno = g_qryparam.return1              

            DISPLAY g_stea_m.steadocno TO steadocno              #

            NEXT FIELD steadocno                          #返回原欄位

]]>
  </point>
  <point name="input.c.steasite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stea_m.steasite             #給予default值

            #給予arg
            CALL s_aooi500_q_where(g_prog,'steasite',g_stea_m.steasite,'i') RETURNING l_where
            LET g_qryparam.where = l_where


            CALL q_ooef001_24()                                #呼叫開窗

            LET g_stea_m.steasite = g_qryparam.return1              

            DISPLAY g_stea_m.steasite TO steasite              #
            CALL astt401_steasite_ref()
            NEXT FIELD steasite                          #返回原欄位

]]>
  </point>
  <point name="input.c.steaunit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_stea_m.steaunit             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_ooef001_24()                                #呼叫開窗

            LET g_stea_m.steaunit = g_qryparam.return1              

            DISPLAY g_stea_m.steaunit TO steaunit              #
            CALL astt401_steaunit_ref()
            NEXT FIELD steaunit                          #返回原欄位

]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE  l_success             LIKE type_t.num5
   DEFINE  l_errno               LIKE type_t.chr10
   DEFINE  l_where               STRING
   DEFINE  l_flag                LIKE type_t.num5
   DEFINE  l_sys_1               LIKE type_t.chr1
   DEFINE  l_stejseq             LIKE stej_t.stejseq
   DEFINE  l_stej003             LIKE stej_t.stej003
   DEFINE  l_stfaunit            LIKE stfa_t.stfaunit]]>
  </point>
  <point name="input.g.page1.steb005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[             CALL astt401_set_entry_b(l_cmd)
             CALL astt401_set_no_required_b(l_cmd)
             CALL astt401_set_required_b(l_cmd)
             CALL astt401_set_no_entry_b(l_cmd)]]>
  </point>
  <point name="input.g.page1.steb006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_steb_d[l_ac].steb006) AND NOT cl_null(g_steb_d[l_ac].steb007)  AND NOT cl_null(g_steb_d[l_ac].steb013) AND NOT cl_null(g_steb_d[l_ac].steb014) THEN    
               CALL astt401_cal_nextd('1') RETURNING g_steb_d[l_ac].steb015,g_steb_d[l_ac].steb016,g_steb_d[l_ac].steb017
            END IF]]>
  </point>
  <point name="input.g.page1.steb007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_steb_d[l_ac].steb006) AND NOT cl_null(g_steb_d[l_ac].steb007)  AND NOT cl_null(g_steb_d[l_ac].steb013) AND NOT cl_null(g_steb_d[l_ac].steb014) THEN    
               CALL astt401_cal_nextd('1') RETURNING g_steb_d[l_ac].steb015,g_steb_d[l_ac].steb016,g_steb_d[l_ac].steb017
            END IF]]>
  </point>
  <point name="input.g.page2.stec012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[             CALL astt401_set_entry_b(l_cmd)
             CALL astt401_set_no_required_b(l_cmd)
             CALL astt401_set_required_b(l_cmd)
             CALL astt401_set_no_entry_b(l_cmd)]]>
  </point>
  <point name="input.g.page2.stec013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_steb2_d[l_ac].stec013) AND NOT cl_null(g_steb2_d[l_ac].stec014)  AND NOT cl_null(g_steb2_d[l_ac].stec019) AND NOT cl_null(g_steb2_d[l_ac].stec020) THEN    
               CALL astt401_cal_nextd('2') RETURNING g_steb2_d[l_ac].stec021,g_steb2_d[l_ac].stec022,g_steb2_d[l_ac].stec023
            END IF]]>
  </point>
  <point name="input.g.page2.stec014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_steb2_d[l_ac].stec013) AND NOT cl_null(g_steb2_d[l_ac].stec014)  AND NOT cl_null(g_steb2_d[l_ac].stec019) AND NOT cl_null(g_steb2_d[l_ac].stec020) THEN    
               CALL astt401_cal_nextd('2') RETURNING g_steb2_d[l_ac].stec021,g_steb2_d[l_ac].stec022,g_steb2_d[l_ac].stec023
            END IF]]>
  </point>
  <point name="input.g.page2.stec024" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_steb2_d[l_ac].stec024) THEN
               IF g_steb2_d[l_ac].stec024 = '2' THEN   #促销
                  CALL cl_set_comp_entry("stec025",TRUE)
                  CALL cl_set_comp_required("stec025",TRUE)
               ELSE                                    #常规
                  CALL cl_set_comp_entry("stec025",FALSE)
                  CALL cl_set_comp_required("stec025",FALSE)
               END IF
            END IF]]>
  </point>
  <point name="input.head.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL s_aooi200_gen_docno(g_stea_m.steasite,g_stea_m.steadocno,g_stea_m.steadocdt,g_prog)
               RETURNING l_flag,g_stea_m.steadocno
               IF NOT l_flag THEN
                  CALL s_transaction_end('N','0')
                  NEXT FIELD steadocno
               END IF 
                IF NOT astt401_interval_chk(p_cmd) THEN  
                   CALL s_transaction_end('N','0')                
                   NEXT FIELD CURRENT
                END IF ]]>
  </point>
  <point name="input.head.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF NOT astt401_interval_chk(p_cmd) THEN  
                   CALL s_transaction_end('N','0')               
                   NEXT FIELD CURRENT
                END IF ]]>
  </point>
  <point name="input.head.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                IF NOT cl_null(g_stea_m.stea013) AND g_stea_m.stea000 = 'I' THEN
                   CALL astt401_stea013_genb()
                   CALL astt401_b_fill()
                END IF
                
                IF NOT astt401_upd_stej(p_cmd) THEN
                    CALL s_transaction_end('N','0')
                    NEXT FIELD CURRENT
                END IF
                
                IF NOT cl_null(g_stea_m.stea001) AND g_stea_m.stea000 = 'U' THEN
                   IF NOT astt401_stea001_genb() THEN
                      CALL s_transaction_end('N','0')
                      NEXT FIELD CURRENT
                   END IF
                END IF]]>
  </point>
  <point name="input.head.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[              IF g_stea_m_t.stea013 <> g_stea_m.stea013 AND p_cmd = 'u' THEN  
                IF NOT cl_null(g_stea_m.stea013) AND g_stea_m.stea000 = 'I'  THEN            
                   DELETE FROM steb_t WHERE stebent = g_enterprise AND stebdocno = g_stea_m.steadocno
                   CALL astt401_stea013_genb()
                   CALL astt401_b_fill()
                 END IF
               END IF
               
                IF NOT astt401_upd_stej(p_cmd) THEN
                    CALL s_transaction_end('N','0')
                    NEXT FIELD CURRENT
                END IF      ]]>
  </point>
  <point name="input.master_input.update_item" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_stea_m.steadocno) THEN
                  CALL n_steal(g_stea_m.steadocno)
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_stea_m.steadocno
                  CALL ap_ref_array2(g_ref_fields," SELECT steal002,steal003 FROM steal_t WHERE stealdocno = ? AND steal001 = '"||g_lang||"'","") RETURNING g_rtn_fields
                  LET g_stea_m.steal002 = g_rtn_fields[1]
                  LET g_stea_m.steal003 = g_rtn_fields[2]
                  DISPLAY BY NAME g_stea_m.steal002
                  DISPLAY BY NAME g_stea_m.steal003
               END IF]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      LET g_stea_m.steadocdt = g_today
      LET g_stea_m.stea000 = 'I'
      LET g_stea_m.stea002 = '1'
      LET g_stea_m.stea003 = '4'
      LET g_stea_m.stea004 = '1'
      LET g_stea_m.stea046 = '2'
      LET g_stea_m.stea029 = '0'
      LET g_stea_m.stea030 = '1'
      LET g_stea_m.stea028 = 'N'
      LET g_stea_m.stea027 = 'N'
      LET g_stea_m.stea016 = cl_get_current()
      
      CALL s_aooi500_default(g_prog,'steasite',g_stea_m.steasite)
         RETURNING l_insert,g_stea_m.steasite
      IF l_insert = FALSE THEN
         RETURN
      END IF
      LET g_site_flag = FALSE
      CALL astt401_steasite_ref()
      
      CALL s_aooi500_default(g_prog,'steaunit',g_stea_m.steaunit)
         RETURNING l_insert,g_stea_m.steaunit
      IF l_insert = FALSE THEN
         RETURN
      END IF
      CALL astt401_steaunit_ref()
      
      LET r_success = ''
      LET r_doctype = ''
      CALL s_arti200_get_def_doc_type(g_stea_m.steasite,g_prog,'1')
           RETURNING r_success,r_doctype
      LET g_stea_m.steadocno = r_doctype
       SELECT ooef017 INTO g_stea_m.stea014 FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = g_stea_m.steasite
      CALL astt401_stea014_ref()
      LET g_stea_m.stea015 = g_user
      CALL astt401_stea015_ref()
      LET g_stea_m_t.* = g_stea_m.*
      LET g_stea_m_o.* = g_stea_m.*]]>
  </point>
  <point name="insert.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_insert      LIKE type_t.num5
   DEFINE r_success     LIKE type_t.num5
   DEFINE r_doctype     LIKE rtai_t.rtai004]]>
  </point>
  <point name="main.before_close" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL s_aooi500_drop_temp() RETURNING l_success]]>
  </point>
  <point name="main.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success LIKE type_t.num5]]>
  </point>
  <point name="modify.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      IF NOT astt401_chk_b() THEN
         CALL s_transaction_end('N','0')
         EXIT WHILE    
      END IF ]]>
  </point>
  <point name="send.before_send" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_astt401_conf_chk(g_stea_m.steadocno) RETURNING l_success,g_errno
   IF NOT l_success THEN
      CLOSE astt401_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF]]>
  </point>
  <point name="send.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[    DEFINE l_success  LIKE type_t.num5]]>
  </point>
  <point name="set_act_no_visible.set_act_no_visible" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #應用 a63 樣板自動產生(Version:1)
   IF g_stea_m.steastus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF

]]>
  </point>
  <point name="set_act_visible.set_act_visible" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_stea_m.steastus MATCHES "[NDR]" THEN
      CALL cl_set_act_visible("modify,delete,modify_detail",TRUE)
   ELSE
      CALL cl_set_act_visible("modify,delete,modify_detail",FALSE)
   END IF  
   CALL cl_set_act_visible("reproduce",FALSE)]]>
  </point>
  <point name="set_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL cl_set_comp_entry("stea000",TRUE)
      CALL cl_set_comp_entry("stea001",TRUE)
      CALL cl_set_comp_entry("stea013",TRUE)      
      CALL cl_set_comp_entry("steasite",TRUE)  ]]>
  </point>
  <point name="set_entry_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_staf003 LIKE staf_t.staf003
   DEFINE l_staf004 LIKE staf_t.staf004
   DEFINE l_staf005 LIKE staf_t.staf005
   DEFINE l_field   LIKE staf_t.staf003
   DEFINE l_n       LIKE type_t.num5]]>
  </point>
  <point name="set_entry_b.set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL astt401_init_entry(p_cmd)
   IF NOT cl_null(g_steb_d[l_ac].steb002) THEN
      #檢查費用編號+經營方式是否存在asti204
      
      SELECT COUNT(*) INTO l_n FROM staf_t
       WHERE stafent = g_enterprise AND staf001= g_steb_d[l_ac].steb002 AND staf002 = '4'
      IF l_n > 0 THEN
         DECLARE sel_staf CURSOR FOR 
          SELECT staf003,staf004,staf005 FROM staf_t
           WHERE  stafent = g_enterprise AND staf001= g_steb_d[l_ac].steb002 AND staf002 = '4'
         FOREACH sel_staf INTO l_staf003,l_staf004,l_staf005
            CASE l_staf003
               WHEN 'stao004'
                  LET l_field = "steb003"
               WHEN 'stao005'
                  LET l_field = "steb004"                  
               WHEN 'stao006'
                  LET l_field = "steb005"
               WHEN 'stao007'
                  LET l_field = "steb006"
               WHEN 'stao008'
                  LET l_field = "steb007"
               WHEN 'stao009'
                  LET l_field = "steb008"
               WHEN 'stao010'
                  LET l_field = "steb009"
               WHEN 'stao011'
                  LET l_field = "steb010"
               WHEN 'stao012'
                  LET l_field = "steb011"                 
               WHEN 'stao017'
                  LET l_field = "steb013"
               WHEN 'stao018'
                  LET l_field = "steb014"
               
               OTHERWISE
                  CONTINUE FOREACH
            END CASE
            IF l_staf004 = 'Y' THEN
               CALL cl_set_comp_entry(l_field,TRUE)
            END IF
         END FOREACH 
      ELSE
         CALL astt401_default_entry_b(p_cmd)
      END IF    
   ELSE
      CALL astt401_default_entry_b(p_cmd) 
   END IF   
   
   
    IF NOT cl_null(g_steb2_d[l_ac].stec009) THEN
      #檢查費用編號+經營方式是否存在asti204
      
      SELECT COUNT(*) INTO l_n FROM staf_t
       WHERE stafent = g_enterprise AND staf001= g_steb2_d[l_ac].stec009 AND staf002 = '4'
      IF l_n > 0 THEN
         DECLARE sel_staf1 CURSOR FOR 
          SELECT staf003,staf004,staf005 FROM staf_t
           WHERE  stafent = g_enterprise AND staf001= g_steb2_d[l_ac].stec009 AND staf002 = '4'
         FOREACH sel_staf1 INTO l_staf003,l_staf004,l_staf005
            CASE l_staf003
               WHEN 'stao004'
                  LET l_field = "stec010"
               WHEN 'stao005'
                  LET l_field = "stec011"                  
               WHEN 'stao006'
                  LET l_field = "stec012"
               WHEN 'stao007'
                  LET l_field = "stec013"
               WHEN 'stao008'
                  LET l_field = "stec014"
               WHEN 'stao009'
                  LET l_field = "stec015"
               WHEN 'stao010'
                  LET l_field = "stec016"
               WHEN 'stao011'
                  LET l_field = "stec017"
               WHEN 'stao012'
                  LET l_field = "stec018"                 
               WHEN 'stao017'
                  LET l_field = "stec019"
               WHEN 'stao018'
                  LET l_field = "stec020"
               
               OTHERWISE
                  CONTINUE FOREACH
            END CASE 
            IF l_staf004 = 'Y' THEN
               CALL cl_set_comp_entry(l_field,TRUE)
            END IF
         END FOREACH
      ELSE
         CALL astt401_default_entry_b(p_cmd)     
      END IF    
   ELSE
      CALL astt401_default_entry_b(p_cmd)
   END IF 
   
   CALL cl_set_comp_entry("stec002",TRUE)  ]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #IF g_flag THEN
   #   CALL cl_set_comp_entry("steadocno,steadocdt",FALSE)
   #END IF
   IF p_cmd = 'u' THEN  
      CALL cl_set_comp_entry("stea000",FALSE)
      CALL cl_set_comp_entry("steasite",FALSE)   
      CALL cl_set_comp_entry("stea001",FALSE)    
   END IF
   IF g_stea_m.stea000 = 'U' OR p_cmd = 'u' THEN
      CALL cl_set_comp_entry("stea013",FALSE) 
   END IF
   
   IF g_stea_m.stea000 = 'U' AND NOT cl_null(g_stea_m.stea001) THEN
      SELECT COUNT(*) INTO l_n FROM stfj_t
      WHERE stfjent = g_enterprise AND stfj001 = g_stea_m.stea001 AND stfj005 = 'Y'
     IF l_n > 0 THEN
        CALL cl_set_comp_entry("stea019",FALSE)
     ELSE
        CALL cl_set_comp_entry("stea019",TRUE)
     END IF
   END IF
   
   IF g_stea_m.stea000 = 'U' THEN
      CALL cl_set_comp_entry("stea005",FALSE)
   END IF
   
   IF NOT s_aooi500_comp_entry(g_prog,'steasite') OR g_site_flag THEN
      CALL cl_set_comp_entry("steasite",FALSE)
   END IF]]>
  </point>
  <point name="set_no_entry.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_n  LIKE type_t.num5 ]]>
  </point>
  <point name="set_no_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="set_no_entry_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_staf003 LIKE staf_t.staf003
   DEFINE l_staf004 LIKE staf_t.staf004
   DEFINE l_staf005 LIKE staf_t.staf005
   DEFINE l_field   LIKE staf_t.staf003
   DEFINE l_n       LIKE type_t.num5
   DEFINE l_inaa130  LIKE inaa_t.inaa130]]>
  </point>
  <point name="set_no_entry_b.set_no_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #已结算费用不可维护
   IF g_stea_m.stea000 = 'U' THEN
     IF astt401_chk_astm401_jiesuan('1',g_steb_d[l_ac].stebseq) THEN
        #结算完的费用不可维护费用截止日以及其它
        IF astt401_chk_astm401_jiesuan_end('1',g_steb_d[l_ac].stebseq) THEN
           CALL cl_set_comp_entry("steb014",FALSE) 
           CALL cl_set_comp_entry("steb002,steb003,steb004,steb005,steb006,steb007,steb008,steb009,steb010,steb011,steb013",FALSE) 
        ELSE
           CALL cl_set_comp_entry("steb002,steb013",FALSE) 
           CALL cl_set_comp_entry("steb003,steb004,steb005,steb006,steb007,steb008,steb009,steb010,steb011,steb014",TRUE)            
        END IF
     ELSE
        CALL cl_set_comp_entry("steb002,steb013",TRUE) 
     END IF
     
      IF astt401_chk_astm401_jiesuan('2',g_steb2_d[l_ac].stecseq) THEN
        #结算完的费用不可维护费用截止日以及其它
        IF astt401_chk_astm401_jiesuan_end('2',g_steb2_d[l_ac].stecseq) THEN
           CALL cl_set_comp_entry("stec020",FALSE) 
           CALL cl_set_comp_entry("stec009,stec010,stec011,stec012,stec013,stec014,stec015,stec016,stec017,stec018,stec019",FALSE) 
        ELSE
           CALL cl_set_comp_entry("stec009,stec019",FALSE) 
           CALL cl_set_comp_entry("stec010,stec011,stec012,stec013,stec014,stec015,stec016,stec017,stec018,stec020",TRUE)            
        END IF
     ELSE
        CALL cl_set_comp_entry("stec009,stec019",TRUE) 
     END IF
   END IF


   IF NOT cl_null(g_steb_d[l_ac].steb002) THEN
      #檢查費用編號+經營方式是否存在asti204
      
      SELECT COUNT(*) INTO l_n FROM staf_t
       WHERE stafent = g_enterprise AND staf001= g_steb_d[l_ac].steb002 AND staf002 = '4'
      IF l_n > 0 THEN
         DECLARE sel_staf_ne CURSOR FOR 
          SELECT staf003,staf004,staf005 FROM staf_t
           WHERE  stafent = g_enterprise AND staf001= g_steb_d[l_ac].steb002 AND staf002 = '4'
         FOREACH sel_staf_ne INTO l_staf003,l_staf004,l_staf005
            CASE l_staf003
               WHEN 'stao004'
                  LET l_field = "steb003"
               WHEN 'stao005'
                  LET l_field = "steb004"                  
               WHEN 'stao006'
                  LET l_field = "steb005"
               WHEN 'stao007'
                  LET l_field = "steb006"
               WHEN 'stao008'
                  LET l_field = "steb007"
               WHEN 'stao009'
                  LET l_field = "steb008"
               WHEN 'stao010'
                  LET l_field = "steb009"
               WHEN 'stao011'
                  LET l_field = "steb010"
               WHEN 'stao012'
                  LET l_field = "steb011"                 
               WHEN 'stao017'
                  LET l_field = "steb013"
               WHEN 'stao018'
                  LET l_field = "steb014"
               
               OTHERWISE
                  CONTINUE FOREACH
             END CASE
            IF l_staf004 = 'N' THEN
               CALL cl_set_comp_entry(l_field,FALSE)
            END IF
         END FOREACH 
      ELSE
         CALL astt401_default_no_entry_b(p_cmd)
      END IF
   ELSE
      CALL astt401_default_no_entry_b(p_cmd)
   END IF
   
   ##################
   
   IF NOT cl_null(g_steb2_d[l_ac].stec009) THEN
      #檢查費用編號+經營方式是否存在asti204
      
      SELECT COUNT(*) INTO l_n FROM staf_t
       WHERE stafent = g_enterprise AND staf001= g_steb2_d[l_ac].stec009 AND staf002 = '4'
      IF l_n > 0 THEN
         DECLARE sel_staf_ne1 CURSOR FOR 
          SELECT staf003,staf004,staf005 FROM staf_t
           WHERE  stafent = g_enterprise AND staf001= g_steb2_d[l_ac].stec009 AND staf002 = '4'
         FOREACH sel_staf_ne1 INTO l_staf003,l_staf004,l_staf005
            CASE l_staf003
               WHEN 'stao004'
                  LET l_field = "stec010"
               WHEN 'stao005'
                  LET l_field = "stec011"                  
               WHEN 'stao006'
                  LET l_field = "stec012"
               WHEN 'stao007'
                  LET l_field = "stec013"
               WHEN 'stao008'
                  LET l_field = "stec014"
               WHEN 'stao009'
                  LET l_field = "stec015"
               WHEN 'stao010'
                  LET l_field = "stec016"
               WHEN 'stao011'
                  LET l_field = "stec017"
               WHEN 'stao012'
                  LET l_field = "stec018"                 
               WHEN 'stao017'
                  LET l_field = "stec019"
               WHEN 'stao018'
                  LET l_field = "stec020"
               
               OTHERWISE
                  CONTINUE FOREACH
            END CASE 
            IF l_staf004 = 'N' THEN
               CALL cl_set_comp_entry(l_field,FALSE)
            END IF
         END FOREACH
      ELSE
         CALL astt401_default_no_entry_b(p_cmd)     
      END IF    
   ELSE
      CALL astt401_default_no_entry_b(p_cmd)
   END IF 
   
   #############################
   
   IF NOT cl_null(g_steb2_d[l_ac].stec002) AND g_stea_m.stea000 = 'U' THEN
      SELECT COUNT(*) INTO l_n FROM inaa_t
       WHERE inaaent = g_enterprise AND inaasite = g_stea_m.steaunit AND inaa001 = g_steb2_d[l_ac].stec002
      IF l_n > 0 THEN
        #SELECT inaa130 INTO l_inaa130 FROM inaa_t 
        # WHERE inaaent = g_enterprise AND inaasite = g_stea_m.steaunit AND inaa001 = g_steb2_d[l_ac].stec002
        #IF l_inaa130 <= g_today  THEN
        #   CALL cl_set_comp_entry("stec002",FALSE)
        #ELSE
        #   CALL cl_set_comp_entry("stec002",TRUE)
        #END IF
         CALL cl_set_comp_entry("stec002",FALSE)
      ELSE
         CALL cl_set_comp_entry("stec002",TRUE)  
      END IF    
   END IF]]>
  </point>
  <point name="show.body2.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL astt401_stec006_ref()
      CALL astt401_stec007_ref()]]>
  </point>
  <point name="show.body4.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL astt401_steg003_ref()
      CALL astt401_steg002_ref() ]]>
  </point>
  <point name="show.body8.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="show.body9.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[       CALL astt401_stef005_ref()]]>
  </point>
  <point name="show.head.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stea_m.steadocno
   CALL ap_ref_array2(g_ref_fields," SELECT steal002,steal003 FROM steal_t WHERE stealdocno = ? AND steal001 = '"||g_lang||"'","") RETURNING g_rtn_fields
   LET g_stea_m.steal002 = g_rtn_fields[1]
   LET g_stea_m.steal003 = g_rtn_fields[2]
   DISPLAY BY NAME g_stea_m.steal002
   DISPLAY BY NAME g_stea_m.steal003

   CALL astt401_stea033_ref()
   CALL astt401_stea034_ref()

   SELECT stej004 INTO g_stea_m.next_b FROM ( SELECT * FROM stej_t
   WHERE stejent = g_enterprise AND  stejdocno = g_stea_m.steadocno AND stej005= 'N' ORDER BY stejseq) WHERE rownum = 1
 
   DISPLAY g_stea_m.next_b TO next_b]]>
  </point>
  <point name="statechange.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[          LET l_success = TRUE
   CASE lc_state 
      WHEN 'Y'       
         CALL s_astt401_conf_chk(g_stea_m.steadocno) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('aim-00108') THEN
               CALL s_transaction_begin()
               CALL s_astt401_conf_upd(g_stea_m.steadocno) RETURNING l_success
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_stea_m.steadocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                   CALL s_transaction_end('Y','1')
               
               END IF
            ELSE
               RETURN            
            END IF
         ELSE
            INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_stea_m.steadocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

            RETURN            
         END IF         
      WHEN 'X'
         CALL s_astt401_void_chk(g_stea_m.steadocno) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('lib-016') THEN
               CALL s_transaction_begin()
               CALL s_astt401_void_upd(g_stea_m.steadocno) RETURNING l_success
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_stea_m.steadocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN
            END IF
         ELSE
            INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_stea_m.steadocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

            RETURN    
         END IF
   END CASE]]>
  </point>
  <point name="statechange.before_menu" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL cl_set_act_visible("signing,withdraw",FALSE)
      CASE g_stea_m.steastus
         WHEN "N"
            CALL cl_set_act_visible("unconfirmed,hold",FALSE)
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            IF cl_bpm_chk() THEN
               CALL cl_set_act_visible("signing",TRUE)
               CALL cl_set_act_visible("confirmed",FALSE)
            END IF
            
         WHEN "R"    #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE)
            
         WHEN "D"    #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE)
            
         WHEN "Y"
            HIDE OPTION "open"
            HIDE OPTION "invalid"
            RETURN
            
         WHEN "X"
            HIDE OPTION "open"
            HIDE OPTION "confirmed"
            RETURN 
         WHEN "W"    #只能顯示抽單;其餘應用功能皆隱藏
            CALL cl_set_act_visible("withdraw",TRUE)
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)
            
         WHEN "A"    #只能顯示確認; 其餘應用功能皆隱藏
            CALL cl_set_act_visible("confirmed",TRUE)
            CALL cl_set_act_visible("unconfirmed,invalid,hold",FALSE)
            
      END CASE]]>
  </point>
  <point name="statechange.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[    DEFINE l_success LIKE type_t.chr5]]>
  </point>
  <section id="astt401.action_chk" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION astt401_action_chk()
   #add-point:action_chk段define
   {<point name="action_chk.define" edit="s"/>}
   #end add-point
   #add-point:action_chk段define(客製用)
   {<point name="action_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:action_chk段action_chk
   {<point name="action_chk.action_chk"/>}
   #end add-point
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="astt401.b_fill" ver="10" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION astt401_b_fill()
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define
   {<point name="b_fill.define" edit="s"/>}
   #end add-point     
   #add-point:b_fill段define(客製用)
   {<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point     
 
   CALL g_steb_d.clear()    #g_steb_d 單頭及單身 
   CALL g_steb2_d.clear()
   CALL g_steb3_d.clear()
   CALL g_steb4_d.clear()
   CALL g_steb5_d.clear()
   CALL g_steb6_d.clear()
   CALL g_steb7_d.clear()
   CALL g_steb8_d.clear()
   CALL g_steb9_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF astt401_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE stebseq,steb001,steb002,steb003,steb004,steb005,steb006,steb007, 
             steb008,steb009,steb010,steb011,steb012,steb013,steb014,steb015,steb016,steb017,stebsite, 
             stebunit ,t1.stael003 ,t2.stabl003 ,t3.stabl003 FROM steb_t",   
                     " INNER JOIN stea_t ON steadocno = stebdocno ",
 
                     #"",
                     
                     "",
                                    " LEFT JOIN stael_t t1 ON t1.staelent='"||g_enterprise||"' AND t1.stael001=steb002 AND t1.stael002='"||g_dlang||"' ",
               " LEFT JOIN stabl_t t2 ON t2.stablent='"||g_enterprise||"' AND t2.stabl001=steb008 AND t2.stabl002='"||g_dlang||"' ",
               " LEFT JOIN stabl_t t3 ON t3.stablent='"||g_enterprise||"' AND t3.stabl001=steb009 AND t3.stabl002='"||g_dlang||"' ",
 
                     " WHERE stebent=? AND stebdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY steb_t.stebseq"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astt401_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR astt401_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_stea_m.steadocno
                                               
      FOREACH b_fill_cs INTO g_steb_d[l_ac].stebseq,g_steb_d[l_ac].steb001,g_steb_d[l_ac].steb002,g_steb_d[l_ac].steb003, 
          g_steb_d[l_ac].steb004,g_steb_d[l_ac].steb005,g_steb_d[l_ac].steb006,g_steb_d[l_ac].steb007, 
          g_steb_d[l_ac].steb008,g_steb_d[l_ac].steb009,g_steb_d[l_ac].steb010,g_steb_d[l_ac].steb011, 
          g_steb_d[l_ac].steb012,g_steb_d[l_ac].steb013,g_steb_d[l_ac].steb014,g_steb_d[l_ac].steb015, 
          g_steb_d[l_ac].steb016,g_steb_d[l_ac].steb017,g_steb_d[l_ac].stebsite,g_steb_d[l_ac].stebunit, 
          g_steb_d[l_ac].steb002_desc,g_steb_d[l_ac].steb008_desc,g_steb_d[l_ac].steb009_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
   #判斷是否填充
   IF astt401_fill_chk(2) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE stecseq,stec001,stec002,stec003,stec024,stec025,stec004,stec005, 
             stec006,stec007,stec008,stec009,stec010,stec011,stec012,stec013,stec014,stec015,stec016, 
             stec017,stec018,stec019,stec020,stec021,stec022,stec023,stecsite,stecunit ,t4.rtaxl003 , 
             t5.oocql004 ,t6.stael003 ,t7.stabl003 ,t8.stabl003 FROM stec_t",   
                     " INNER JOIN stea_t ON steadocno = stecdocno ",
 
                     "",
                     " LEFT JOIN sted_t ON stecent = stedent AND stecdocno = steddocno AND stecseq = stedseq ",
                                    " LEFT JOIN rtaxl_t t4 ON t4.rtaxlent='"||g_enterprise||"' AND t4.rtaxl001=stec004 AND t4.rtaxl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t5 ON t5.oocqlent='"||g_enterprise||"' AND t5.oocql001='2002' AND t5.oocql002=stec005 AND t5.oocql003='"||g_dlang||"' ",
               " LEFT JOIN stael_t t6 ON t6.staelent='"||g_enterprise||"' AND t6.stael001=stec009 AND t6.stael002='"||g_dlang||"' ",
               " LEFT JOIN stabl_t t7 ON t7.stablent='"||g_enterprise||"' AND t7.stabl001=stec015 AND t7.stabl002='"||g_dlang||"' ",
               " LEFT JOIN stabl_t t8 ON t8.stablent='"||g_enterprise||"' AND t8.stabl001=stec016 AND t8.stabl002='"||g_dlang||"' ",
 
                     " WHERE stecent=? AND stecdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body2.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
            IF NOT cl_null(g_wc2_table8) THEN 
      LET g_sql = g_sql CLIPPED," AND ", g_wc2_table8 CLIPPED
   END IF 
 
         
         LET g_sql = g_sql, " ORDER BY stec_t.stecseq"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql2"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astt401_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR astt401_pb2
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_stea_m.steadocno
                                               
      FOREACH b_fill_cs2 INTO g_steb2_d[l_ac].stecseq,g_steb2_d[l_ac].stec001,g_steb2_d[l_ac].stec002, 
          g_steb2_d[l_ac].stec003,g_steb2_d[l_ac].stec024,g_steb2_d[l_ac].stec025,g_steb2_d[l_ac].stec004, 
          g_steb2_d[l_ac].stec005,g_steb2_d[l_ac].stec006,g_steb2_d[l_ac].stec007,g_steb2_d[l_ac].stec008, 
          g_steb2_d[l_ac].stec009,g_steb2_d[l_ac].stec010,g_steb2_d[l_ac].stec011,g_steb2_d[l_ac].stec012, 
          g_steb2_d[l_ac].stec013,g_steb2_d[l_ac].stec014,g_steb2_d[l_ac].stec015,g_steb2_d[l_ac].stec016, 
          g_steb2_d[l_ac].stec017,g_steb2_d[l_ac].stec018,g_steb2_d[l_ac].stec019,g_steb2_d[l_ac].stec020, 
          g_steb2_d[l_ac].stec021,g_steb2_d[l_ac].stec022,g_steb2_d[l_ac].stec023,g_steb2_d[l_ac].stecsite, 
          g_steb2_d[l_ac].stecunit,g_steb2_d[l_ac].stec004_desc,g_steb2_d[l_ac].stec005_desc,g_steb2_d[l_ac].stec009_desc, 
          g_steb2_d[l_ac].stec015_desc,g_steb2_d[l_ac].stec016_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF astt401_fill_chk(3) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE steeseq,stee002,stee001,stee003,stee004,stee005,stee006,stee007, 
             stee008,stee009,stee010,stee011,steesite,steeunit ,t9.stael003 FROM stee_t",   
                     " INNER JOIN stea_t ON steadocno = steedocno ",
 
                     "",
                     " LEFT JOIN stef_t ON steeent = stefent AND steedocno = stefdocno AND steeseq = stefseq AND stee002 = stef002 ",
                                    " LEFT JOIN stael_t t9 ON t9.staelent='"||g_enterprise||"' AND t9.stael001=stee003 AND t9.stael002='"||g_dlang||"' ",
 
                     " WHERE steeent=? AND steedocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body3.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table3) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
         END IF
         
         #子單身的WC
            IF NOT cl_null(g_wc2_table9) THEN 
      LET g_sql = g_sql CLIPPED," AND ", g_wc2_table9 CLIPPED
   END IF 
 
         
         LET g_sql = g_sql, " ORDER BY stee_t.steeseq,stee_t.stee002"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql3"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astt401_pb3 FROM g_sql
         DECLARE b_fill_cs3 CURSOR FOR astt401_pb3
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs3 USING g_enterprise,g_stea_m.steadocno
                                               
      FOREACH b_fill_cs3 INTO g_steb3_d[l_ac].steeseq,g_steb3_d[l_ac].stee002,g_steb3_d[l_ac].stee001, 
          g_steb3_d[l_ac].stee003,g_steb3_d[l_ac].stee004,g_steb3_d[l_ac].stee005,g_steb3_d[l_ac].stee006, 
          g_steb3_d[l_ac].stee007,g_steb3_d[l_ac].stee008,g_steb3_d[l_ac].stee009,g_steb3_d[l_ac].stee010, 
          g_steb3_d[l_ac].stee011,g_steb3_d[l_ac].steesite,g_steb3_d[l_ac].steeunit,g_steb3_d[l_ac].stee003_desc 

         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill3.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF astt401_fill_chk(4) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE stegseq,steg001,steg003,steg002,steg004,steg005,stegacti,stegsite, 
             stegunit  FROM steg_t",   
                     " INNER JOIN stea_t ON steadocno = stegdocno ",
 
                     "",
                     
                     
                     " WHERE stegent=? AND stegdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body4.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table4) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table4 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY steg_t.stegseq"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql4"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astt401_pb4 FROM g_sql
         DECLARE b_fill_cs4 CURSOR FOR astt401_pb4
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs4 USING g_enterprise,g_stea_m.steadocno
                                               
      FOREACH b_fill_cs4 INTO g_steb4_d[l_ac].stegseq,g_steb4_d[l_ac].steg001,g_steb4_d[l_ac].steg003, 
          g_steb4_d[l_ac].steg002,g_steb4_d[l_ac].steg004,g_steb4_d[l_ac].steg005,g_steb4_d[l_ac].stegacti, 
          g_steb4_d[l_ac].stegsite,g_steb4_d[l_ac].stegunit
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill4.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF astt401_fill_chk(5) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE stehseq,steh001,steh002,steh003,stehacti,stehsite,stehunit  FROM steh_t", 
                
                     " INNER JOIN stea_t ON steadocno = stehdocno ",
 
                     "",
                     
                     
                     " WHERE stehent=? AND stehdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body5.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table5) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table5 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY steh_t.stehseq"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql5"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astt401_pb5 FROM g_sql
         DECLARE b_fill_cs5 CURSOR FOR astt401_pb5
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs5 USING g_enterprise,g_stea_m.steadocno
                                               
      FOREACH b_fill_cs5 INTO g_steb5_d[l_ac].stehseq,g_steb5_d[l_ac].steh001,g_steb5_d[l_ac].steh002, 
          g_steb5_d[l_ac].steh003,g_steb5_d[l_ac].stehacti,g_steb5_d[l_ac].stehsite,g_steb5_d[l_ac].stehunit 

         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill5.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF astt401_fill_chk(6) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE steiseq,stei001,stei002,stei003,stei005,stei006,stei004,stei010, 
             stei007,stei008,stei009,steiacti,steisite,steiunit ,t10.stael003 ,t11.oocql004 FROM stei_t", 
                
                     " INNER JOIN stea_t ON steadocno = steidocno ",
 
                     "",
                     
                                    " LEFT JOIN stael_t t10 ON t10.staelent='"||g_enterprise||"' AND t10.stael001=stei003 AND t10.stael002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t11 ON t11.oocqlent='"||g_enterprise||"' AND t11.oocql001='2132' AND t11.oocql002=stei010 AND t11.oocql003='"||g_dlang||"' ",
 
                     " WHERE steient=? AND steidocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body6.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table6) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table6 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stei_t.steiseq"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql6"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astt401_pb6 FROM g_sql
         DECLARE b_fill_cs6 CURSOR FOR astt401_pb6
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs6 USING g_enterprise,g_stea_m.steadocno
                                               
      FOREACH b_fill_cs6 INTO g_steb6_d[l_ac].steiseq,g_steb6_d[l_ac].stei001,g_steb6_d[l_ac].stei002, 
          g_steb6_d[l_ac].stei003,g_steb6_d[l_ac].stei005,g_steb6_d[l_ac].stei006,g_steb6_d[l_ac].stei004, 
          g_steb6_d[l_ac].stei010,g_steb6_d[l_ac].stei007,g_steb6_d[l_ac].stei008,g_steb6_d[l_ac].stei009, 
          g_steb6_d[l_ac].steiacti,g_steb6_d[l_ac].steisite,g_steb6_d[l_ac].steiunit,g_steb6_d[l_ac].stei003_desc, 
          g_steb6_d[l_ac].stei010_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill6.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF astt401_fill_chk(7) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE stejseq,stej001,stej002,stej003,stej004,stej005,stej006,stejsite, 
             stejunit  FROM stej_t",   
                     " INNER JOIN stea_t ON steadocno = stejdocno ",
 
                     "",
                     
                     
                     " WHERE stejent=? AND stejdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body7.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table7) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table7 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stej_t.stejseq"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql7"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astt401_pb7 FROM g_sql
         DECLARE b_fill_cs7 CURSOR FOR astt401_pb7
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs7 USING g_enterprise,g_stea_m.steadocno
                                               
      FOREACH b_fill_cs7 INTO g_steb7_d[l_ac].stejseq,g_steb7_d[l_ac].stej001,g_steb7_d[l_ac].stej002, 
          g_steb7_d[l_ac].stej003,g_steb7_d[l_ac].stej004,g_steb7_d[l_ac].stej005,g_steb7_d[l_ac].stej006, 
          g_steb7_d[l_ac].stejsite,g_steb7_d[l_ac].stejunit
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill7.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_steb_d.deleteElement(g_steb_d.getLength())
   CALL g_steb2_d.deleteElement(g_steb2_d.getLength())
   CALL g_steb3_d.deleteElement(g_steb3_d.getLength())
   CALL g_steb4_d.deleteElement(g_steb4_d.getLength())
   CALL g_steb5_d.deleteElement(g_steb5_d.getLength())
   CALL g_steb6_d.deleteElement(g_steb6_d.getLength())
   CALL g_steb7_d.deleteElement(g_steb7_d.getLength())
   CALL g_steb8_d.deleteElement(g_steb8_d.getLength())
   CALL g_steb9_d.deleteElement(g_steb9_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE astt401_pb
   FREE astt401_pb2
 
   FREE astt401_pb3
 
   FREE astt401_pb4
 
   FREE astt401_pb5
 
   FREE astt401_pb6
 
   FREE astt401_pb7
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_steb_d.getLength()
      LET g_steb_d_mask_o[l_ac].* =  g_steb_d[l_ac].*
      CALL astt401_steb_t_mask()
      LET g_steb_d_mask_n[l_ac].* =  g_steb_d[l_ac].*
   END FOR
   
   LET g_steb2_d_mask_o.* =  g_steb2_d.*
   FOR l_ac = 1 TO g_steb2_d.getLength()
      LET g_steb2_d_mask_o[l_ac].* =  g_steb2_d[l_ac].*
      CALL astt401_stec_t_mask()
      LET g_steb2_d_mask_n[l_ac].* =  g_steb2_d[l_ac].*
   END FOR
   LET g_steb3_d_mask_o.* =  g_steb3_d.*
   FOR l_ac = 1 TO g_steb3_d.getLength()
      LET g_steb3_d_mask_o[l_ac].* =  g_steb3_d[l_ac].*
      CALL astt401_stee_t_mask()
      LET g_steb3_d_mask_n[l_ac].* =  g_steb3_d[l_ac].*
   END FOR
   LET g_steb4_d_mask_o.* =  g_steb4_d.*
   FOR l_ac = 1 TO g_steb4_d.getLength()
      LET g_steb4_d_mask_o[l_ac].* =  g_steb4_d[l_ac].*
      CALL astt401_steg_t_mask()
      LET g_steb4_d_mask_n[l_ac].* =  g_steb4_d[l_ac].*
   END FOR
   LET g_steb5_d_mask_o.* =  g_steb5_d.*
   FOR l_ac = 1 TO g_steb5_d.getLength()
      LET g_steb5_d_mask_o[l_ac].* =  g_steb5_d[l_ac].*
      CALL astt401_steh_t_mask()
      LET g_steb5_d_mask_n[l_ac].* =  g_steb5_d[l_ac].*
   END FOR
   LET g_steb6_d_mask_o.* =  g_steb6_d.*
   FOR l_ac = 1 TO g_steb6_d.getLength()
      LET g_steb6_d_mask_o[l_ac].* =  g_steb6_d[l_ac].*
      CALL astt401_stei_t_mask()
      LET g_steb6_d_mask_n[l_ac].* =  g_steb6_d[l_ac].*
   END FOR
   LET g_steb7_d_mask_o.* =  g_steb7_d.*
   FOR l_ac = 1 TO g_steb7_d.getLength()
      LET g_steb7_d_mask_o[l_ac].* =  g_steb7_d[l_ac].*
      CALL astt401_stej_t_mask()
      LET g_steb7_d_mask_n[l_ac].* =  g_steb7_d[l_ac].*
   END FOR
   LET g_steb8_d_mask_o.* =  g_steb8_d.*
   FOR l_ac = 1 TO g_steb8_d.getLength()
      LET g_steb8_d_mask_o[l_ac].* =  g_steb8_d[l_ac].*
      CALL astt401_sted_t_mask()
      LET g_steb8_d_mask_n[l_ac].* =  g_steb8_d[l_ac].*
   END FOR
   LET g_steb9_d_mask_o.* =  g_steb9_d.*
   FOR l_ac = 1 TO g_steb9_d.getLength()
      LET g_steb9_d_mask_o[l_ac].* =  g_steb9_d[l_ac].*
      CALL astt401_stef_t_mask()
      LET g_steb9_d_mask_n[l_ac].* =  g_steb9_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
]]>
  </section>
  <section id="astt401.b_fill2" ver="13" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION astt401_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define" edit="s"/>}
   #end add-point
   #add-point:b_fill2段define(客製用)
   {<point name="b_fill2.define_customerization" edit="c"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   IF astt401_fill_chk(8) THEN
      IF (pi_idx = 8 OR pi_idx = 0 ) AND g_steb2_d.getLength() > 0 THEN
               CALL g_steb8_d.clear()
 
         LET g_sql = "SELECT  UNIQUE stedseq1,sted001,sted002,sted003,sted004,sted005,sted006,sted007, 
             sted008,stedsite,stedunit ,t12.oocql004 FROM sted_t",    
                     "",
                                    " LEFT JOIN oocql_t t12 ON t12.oocqlent='"||g_enterprise||"' AND t12.oocql001='2024' AND t12.oocql002=sted004 AND t12.oocql003='"||g_dlang||"' ",
 
                     " WHERE stedent=? AND steddocno=? AND stedseq=?"
         
         IF NOT cl_null(g_wc2_table8) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table8 CLIPPED
         END IF
         
         LET g_sql = g_sql, " ORDER BY  sted_t.stedseq1" 
                            
         #add-point:單身填充前
         {<point name="b_fill2.before_fill8" />}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astt401_pb8 FROM g_sql
         DECLARE b_fill_curs8 CURSOR FOR astt401_pb8
         
         OPEN b_fill_curs8 USING g_enterprise,g_stea_m.steadocno,g_steb2_d[g_detail_idx].stecseq
         LET l_ac = 1
         FOREACH b_fill_curs8 INTO g_steb8_d[l_ac].stedseq1,g_steb8_d[l_ac].sted001,g_steb8_d[l_ac].sted002, 
             g_steb8_d[l_ac].sted003,g_steb8_d[l_ac].sted004,g_steb8_d[l_ac].sted005,g_steb8_d[l_ac].sted006, 
             g_steb8_d[l_ac].sted007,g_steb8_d[l_ac].sted008,g_steb8_d[l_ac].stedsite,g_steb8_d[l_ac].stedunit, 
             g_steb8_d[l_ac].sted004_desc 
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "FOREACH:" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               EXIT FOREACH
            END IF
            
            #add-point:b_fill段資料填充
            {<point name="b_fill2.fill8"/>}
            #end add-point
           
            IF l_ac > g_max_rec THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               EXIT FOREACH
            END IF
            
            LET l_ac = l_ac + 1
            
         END FOREACH
               CALL g_steb8_d.deleteElement(g_steb8_d.getLength())
 
      END IF
   END IF
 
   IF astt401_fill_chk(9) THEN
      IF (pi_idx = 9 OR pi_idx = 0 ) AND g_steb3_d.getLength() > 0 THEN
               CALL g_steb9_d.clear()
 
         LET g_sql = "SELECT  UNIQUE stef001,stef003,stef004,stef005,stef006,stef007,stef008,stef009, 
             stefsite,stefunit  FROM stef_t",    
                     "",
                     
                     " WHERE stefent=? AND stefdocno=? AND stefseq=? AND stef002=?"
         
         IF NOT cl_null(g_wc2_table9) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table9 CLIPPED
         END IF
         
         LET g_sql = g_sql, " ORDER BY  stef_t.stef003" 
                            
         #add-point:單身填充前
         {<point name="b_fill2.before_fill9" />}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astt401_pb9 FROM g_sql
         DECLARE b_fill_curs9 CURSOR FOR astt401_pb9
         
         OPEN b_fill_curs9 USING g_enterprise,g_stea_m.steadocno,g_steb3_d[g_detail_idx].steeseq,g_steb3_d[g_detail_idx].stee002 

         LET l_ac = 1
         FOREACH b_fill_curs9 INTO g_steb9_d[l_ac].stef001,g_steb9_d[l_ac].stef003,g_steb9_d[l_ac].stef004, 
             g_steb9_d[l_ac].stef005,g_steb9_d[l_ac].stef006,g_steb9_d[l_ac].stef007,g_steb9_d[l_ac].stef008, 
             g_steb9_d[l_ac].stef009,g_steb9_d[l_ac].stefsite,g_steb9_d[l_ac].stefunit 
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "FOREACH:" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               EXIT FOREACH
            END IF
            
            #add-point:b_fill段資料填充
            {<point name="b_fill2.fill9"/>}
            #end add-point
           
            IF l_ac > g_max_rec THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               EXIT FOREACH
            END IF
            
            LET l_ac = l_ac + 1
            
         END FOREACH
               CALL g_steb9_d.deleteElement(g_steb9_d.getLength())
 
      END IF
   END IF
 
 
      
   LET g_steb8_d_mask_o.* =  g_steb8_d.*
   FOR l_ac = 1 TO g_steb8_d.getLength()
      LET g_steb8_d_mask_o[l_ac].* =  g_steb8_d[l_ac].*
      CALL astt401_sted_t_mask()
      LET g_steb8_d_mask_n[l_ac].* =  g_steb8_d[l_ac].*
   END FOR
   LET g_steb9_d_mask_o.* =  g_steb9_d.*
   FOR l_ac = 1 TO g_steb9_d.getLength()
      LET g_steb9_d_mask_o[l_ac].* =  g_steb9_d[l_ac].*
      CALL astt401_stef_t_mask()
      LET g_steb9_d_mask_n[l_ac].* =  g_steb9_d[l_ac].*
   END FOR
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL astt401_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="astt401.browser_fill" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION astt401_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define" edit="s"/>}
   #end add-point   
   #add-point:browser_fill段define(客製用)
   {<point name="browser_fill.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE steadocno ",
                      " FROM stea_t ",
                      " ",
                      " LEFT JOIN steb_t ON stebent = steaent AND steadocno = stebdocno ", "  ",
                      #add-point:browser_fill段sql(steb_t1)
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
                      " LEFT JOIN stec_t ON stecent = steaent AND steadocno = stecdocno", "  ",
                      #add-point:browser_fill段sql(stec_t1)
                      {<point name="browser_fill.cnt.join.stec_t1"/>}
                      #end add-point
 
                      " LEFT JOIN stee_t ON steeent = steaent AND steadocno = steedocno", "  ",
                      #add-point:browser_fill段sql(stee_t1)
                      {<point name="browser_fill.cnt.join.stee_t1"/>}
                      #end add-point
 
                      " LEFT JOIN steg_t ON stegent = steaent AND steadocno = stegdocno", "  ",
                      #add-point:browser_fill段sql(steg_t1)
                      {<point name="browser_fill.cnt.join.steg_t1"/>}
                      #end add-point
 
                      " LEFT JOIN steh_t ON stehent = steaent AND steadocno = stehdocno", "  ",
                      #add-point:browser_fill段sql(steh_t1)
                      {<point name="browser_fill.cnt.join.steh_t1"/>}
                      #end add-point
 
                      " LEFT JOIN stei_t ON steient = steaent AND steadocno = steidocno", "  ",
                      #add-point:browser_fill段sql(stei_t1)
                      {<point name="browser_fill.cnt.join.stei_t1"/>}
                      #end add-point
 
                      " LEFT JOIN stej_t ON stejent = steaent AND steadocno = stejdocno", "  ",
                      #add-point:browser_fill段sql(stej_t1)
                      {<point name="browser_fill.cnt.join.stej_t1"/>}
                      #end add-point
 
 
                      " LEFT JOIN sted_t ON stedent = steaent AND stecdocno = steddocno AND stecseq = stedseq", "  ",
                      #add-point:browser_fill段sql(sted_t1)
                      {<point name="browser_fill.cnt.join.sted_t1"/>}
                      #end add-point
 
                      " LEFT JOIN stef_t ON stefent = steaent AND steedocno = stefdocno AND steeseq = stefseq AND stee002 = stef002", "  ",
                      #add-point:browser_fill段sql(stef_t1)
                      {<point name="browser_fill.cnt.join.stef_t1"/>}
                      #end add-point
 
 
                      " LEFT JOIN steal_t ON stealent = '"||g_enterprise||"' AND steadocno = stealdocno AND steal001 = '",g_dlang,"' ", 
                      " ", 
                      " WHERE steaent = '" ||g_enterprise|| "' AND stebent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("stea_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE steadocno ",
                      " FROM stea_t ", 
                      "  ",
                      "  LEFT JOIN steal_t ON stealent = '"||g_enterprise||"' AND steadocno = stealdocno AND steal001 = '",g_dlang,"' ",
                      " WHERE steaent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("stea_t")
   END IF
   
   #add-point:browser_fill,cnt wc
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_stea_m.* TO NULL
      CALL g_steb_d.clear()        
      CALL g_steb2_d.clear() 
      CALL g_steb3_d.clear() 
      CALL g_steb4_d.clear() 
      CALL g_steb5_d.clear() 
      CALL g_steb6_d.clear() 
      CALL g_steb7_d.clear() 
      CALL g_steb8_d.clear() 
      CALL g_steb9_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.steadocno,t0.steadocdt,t0.stea000,t0.stea001,t0.stea002,t0.stea003,t0.stea004,t0.stea005,t0.stea006,t0.stea007,t0.stea008,t0.stea009,t0.stea010,t0.stea011,t0.stea012,t0.stea013,t0.stea014,t0.stea015,t0.stea016,t0.stea017,t0.stea018,t0.stea019,t0.stea020,t0.stea021,t0.stea022,t0.stea023,t0.stea024,t0.stea025,t0.stea026,t0.stea027,t0.stea028,t0.stea029,t0.stea030,t0.stea031,t0.stea032,t0.stea033,t0.stea034,t0.stea035,t0.stea036,t0.stea037,t0.stea038,t0.stea039,t0.stea040,t0.stea041,t0.stea042,t0.stea043,t0.stea044,t0.stea045,t0.stea046,t0.stea047,t0.stea048,t0.stea049,t0.steaunit,t0.steasite Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   LET g_sql = " SELECT DISTINCT t0.steastus,t0.steadocno,t0.steadocdt,t0.stea000,t0.stea001,t0.stea002, 
       t0.stea003,t0.stea004,t0.stea005,t0.stea006,t0.stea007,t0.stea008,t0.stea009,t0.stea010,t0.stea011, 
       t0.stea012,t0.stea013,t0.stea014,t0.stea015,t0.stea016,t0.stea017,t0.stea018,t0.stea019,t0.stea020, 
       t0.stea021,t0.stea022,t0.stea023,t0.stea024,t0.stea025,t0.stea026,t0.stea027,t0.stea028,t0.stea029, 
       t0.stea030,t0.stea031,t0.stea032,t0.stea033,t0.stea034,t0.stea035,t0.stea036,t0.stea037,t0.stea038, 
       t0.stea039,t0.stea040,t0.stea041,t0.stea042,t0.stea043,t0.stea044,t0.stea045,t0.stea046,t0.stea047, 
       t0.stea048,t0.stea049,t0.steaunit,t0.steasite ",
               " FROM stea_t t0",
               "  ",
               "  LEFT JOIN steb_t ON stebent = steaent AND steadocno = stebdocno ", "  ", 
               #add-point:browser_fill段sql(steb_t1)
               {<point name="browser_fill.join.steb_t1"/>}
               #end add-point
               "  LEFT JOIN stec_t ON stecent = steaent AND steadocno = stecdocno", "  ", 
               #add-point:browser_fill段sql(stec_t1)
               {<point name="browser_fill.join.stec_t1"/>}
               #end add-point
 
               "  LEFT JOIN stee_t ON steeent = steaent AND steadocno = steedocno", "  ", 
               #add-point:browser_fill段sql(stee_t1)
               {<point name="browser_fill.join.stee_t1"/>}
               #end add-point
 
               "  LEFT JOIN steg_t ON stegent = steaent AND steadocno = stegdocno", "  ", 
               #add-point:browser_fill段sql(steg_t1)
               {<point name="browser_fill.join.steg_t1"/>}
               #end add-point
 
               "  LEFT JOIN steh_t ON stehent = steaent AND steadocno = stehdocno", "  ", 
               #add-point:browser_fill段sql(steh_t1)
               {<point name="browser_fill.join.steh_t1"/>}
               #end add-point
 
               "  LEFT JOIN stei_t ON steient = steaent AND steadocno = steidocno", "  ", 
               #add-point:browser_fill段sql(stei_t1)
               {<point name="browser_fill.join.stei_t1"/>}
               #end add-point
 
               "  LEFT JOIN stej_t ON stejent = steaent AND steadocno = stejdocno", "  ", 
               #add-point:browser_fill段sql(stej_t1)
               {<point name="browser_fill.join.stej_t1"/>}
               #end add-point
 
 
               "  LEFT JOIN sted_t ON stedent = steaent AND stecdocno = steddocno AND stecseq = stedseq", "  ", 
               #add-point:browser_fill段sql(sted_t1)
               {<point name="browser_fill.join.sted_t1"/>}
               #end add-point
 
               "  LEFT JOIN stef_t ON stefent = steaent AND steedocno = stefdocno AND steeseq = stefseq AND stee002 = stef002", "  ", 
               #add-point:browser_fill段sql(stef_t1)
               {<point name="browser_fill.join.stef_t1"/>}
               #end add-point
 
 
               "  ",
               
               " LEFT JOIN steal_t ON stealent = '"||g_enterprise||"' AND steadocno = stealdocno AND steal001 = '",g_dlang,"' ",
               " WHERE t0.steaent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("stea_t")
   #add-point:browser_fill,sql wc
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY steadocno ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"stea_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill段open cursor
   {<point name="browser_fill.open"/>}
   #end add-point
   
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_steadocno,g_browser[g_cnt].b_steadocdt, 
       g_browser[g_cnt].b_stea000,g_browser[g_cnt].b_stea001,g_browser[g_cnt].b_stea002,g_browser[g_cnt].b_stea003, 
       g_browser[g_cnt].b_stea004,g_browser[g_cnt].b_stea005,g_browser[g_cnt].b_stea006,g_browser[g_cnt].b_stea007, 
       g_browser[g_cnt].b_stea008,g_browser[g_cnt].b_stea009,g_browser[g_cnt].b_stea010,g_browser[g_cnt].b_stea011, 
       g_browser[g_cnt].b_stea012,g_browser[g_cnt].b_stea013,g_browser[g_cnt].b_stea014,g_browser[g_cnt].b_stea015, 
       g_browser[g_cnt].b_stea016,g_browser[g_cnt].b_stea017,g_browser[g_cnt].b_stea018,g_browser[g_cnt].b_stea019, 
       g_browser[g_cnt].b_stea020,g_browser[g_cnt].b_stea021,g_browser[g_cnt].b_stea022,g_browser[g_cnt].b_stea023, 
       g_browser[g_cnt].b_stea024,g_browser[g_cnt].b_stea025,g_browser[g_cnt].b_stea026,g_browser[g_cnt].b_stea027, 
       g_browser[g_cnt].b_stea028,g_browser[g_cnt].b_stea029,g_browser[g_cnt].b_stea030,g_browser[g_cnt].b_stea031, 
       g_browser[g_cnt].b_stea032,g_browser[g_cnt].b_stea033,g_browser[g_cnt].b_stea034,g_browser[g_cnt].b_stea035, 
       g_browser[g_cnt].b_stea036,g_browser[g_cnt].b_stea037,g_browser[g_cnt].b_stea038,g_browser[g_cnt].b_stea039, 
       g_browser[g_cnt].b_stea040,g_browser[g_cnt].b_stea041,g_browser[g_cnt].b_stea042,g_browser[g_cnt].b_stea043, 
       g_browser[g_cnt].b_stea044,g_browser[g_cnt].b_stea045,g_browser[g_cnt].b_stea046,g_browser[g_cnt].b_stea047, 
       g_browser[g_cnt].b_stea048,g_browser[g_cnt].b_stea049,g_browser[g_cnt].b_steaunit,g_browser[g_cnt].b_steasite 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
      #遮罩相關處理
      CALL astt401_browser_mask()
  
            #應用 a24 樣板自動產生(Version:2)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_browse THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_steadocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION
]]>
  </section>
  <section id="astt401.construct" ver="23" status="" src="s" readonly="">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION astt401_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define
   {<point name="cs.define" edit="s"/>}
   #end add-point    
   #add-point:cs段define(客製用)
   {<point name="cs.define_customerization" edit="c"/>}
   #end add-point    
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_stea_m.* TO NULL
   CALL g_steb_d.clear()        
   CALL g_steb2_d.clear() 
   CALL g_steb3_d.clear() 
   CALL g_steb4_d.clear() 
   CALL g_steb5_d.clear() 
   CALL g_steb6_d.clear() 
   CALL g_steb7_d.clear() 
   CALL g_steb8_d.clear() 
   CALL g_steb9_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
   INITIALIZE g_wc2_table4 TO NULL
 
   INITIALIZE g_wc2_table5 TO NULL
 
   INITIALIZE g_wc2_table6 TO NULL
 
   INITIALIZE g_wc2_table7 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON steasite,steadocdt,steadocno,stea000,steaunit,stea001,stea002,stea003, 
          stea004,stea009,steastus,stea005,steal002,steal003,stea006,stea007,stea008,stea047,stea048, 
          stea044,stea010,stea011,stea012,stea013,stea014,stea015,stea016,stea045,stea046,stea029,stea030, 
          stea032,stea033,stea033_desc,stea034,stea034_desc,stea035,stea036,stea037,stea038,stea039, 
          stea040,stea028,stea017,stea021,stea024,stea018,stea049,stea025,stea019,stea022,stea026,stea020, 
          stea023,stea027,stea031,stea042,steaownid,steaowndp,steacrtid,steacrtdp,steacrtdt,steamodid, 
          steamoddt,steacnfid,steacnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<steacrtdt>>----
         AFTER FIELD steacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<steamoddt>>----
         AFTER FIELD steamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<steacnfdt>>----
         AFTER FIELD steacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<steapstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.steasite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steasite
            #add-point:ON ACTION controlp INFIELD steasite
            {<point name="construct.c.steasite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steasite
            #add-point:BEFORE FIELD steasite
            {<point name="construct.b.steasite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steasite
            
            #add-point:AFTER FIELD steasite
            {<point name="construct.a.steasite" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steadocdt
            #add-point:BEFORE FIELD steadocdt
            {<point name="construct.b.steadocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steadocdt
            
            #add-point:AFTER FIELD steadocdt
            {<point name="construct.a.steadocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.steadocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steadocdt
            #add-point:ON ACTION controlp INFIELD steadocdt
            {<point name="construct.c.steadocdt" />}
            #END add-point
 
         #Ctrlp:construct.c.steadocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steadocno
            #add-point:ON ACTION controlp INFIELD steadocno
            {<point name="construct.c.steadocno" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steadocno
            #add-point:BEFORE FIELD steadocno
            {<point name="construct.b.steadocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steadocno
            
            #add-point:AFTER FIELD steadocno
            {<point name="construct.a.steadocno" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea000
            #add-point:BEFORE FIELD stea000
            {<point name="construct.b.stea000" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea000
            
            #add-point:AFTER FIELD stea000
            {<point name="construct.a.stea000" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea000
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea000
            #add-point:ON ACTION controlp INFIELD stea000
            {<point name="construct.c.stea000" />}
            #END add-point
 
         #Ctrlp:construct.c.steaunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steaunit
            #add-point:ON ACTION controlp INFIELD steaunit
            {<point name="construct.c.steaunit" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steaunit
            #add-point:BEFORE FIELD steaunit
            {<point name="construct.b.steaunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steaunit
            
            #add-point:AFTER FIELD steaunit
            {<point name="construct.a.steaunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea001
            #add-point:ON ACTION controlp INFIELD stea001
            {<point name="construct.c.stea001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea001
            #add-point:BEFORE FIELD stea001
            {<point name="construct.b.stea001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea001
            
            #add-point:AFTER FIELD stea001
            {<point name="construct.a.stea001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea002
            #add-point:BEFORE FIELD stea002
            {<point name="construct.b.stea002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea002
            
            #add-point:AFTER FIELD stea002
            {<point name="construct.a.stea002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea002
            #add-point:ON ACTION controlp INFIELD stea002
            {<point name="construct.c.stea002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea003
            #add-point:BEFORE FIELD stea003
            {<point name="construct.b.stea003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea003
            
            #add-point:AFTER FIELD stea003
            {<point name="construct.a.stea003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea003
            #add-point:ON ACTION controlp INFIELD stea003
            {<point name="construct.c.stea003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea004
            #add-point:BEFORE FIELD stea004
            {<point name="construct.b.stea004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea004
            
            #add-point:AFTER FIELD stea004
            {<point name="construct.a.stea004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea004
            #add-point:ON ACTION controlp INFIELD stea004
            {<point name="construct.c.stea004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea009
            #add-point:BEFORE FIELD stea009
            {<point name="construct.b.stea009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea009
            
            #add-point:AFTER FIELD stea009
            {<point name="construct.a.stea009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea009
            #add-point:ON ACTION controlp INFIELD stea009
            {<point name="construct.c.stea009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steastus
            #add-point:BEFORE FIELD steastus
            {<point name="construct.b.steastus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steastus
            
            #add-point:AFTER FIELD steastus
            {<point name="construct.a.steastus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.steastus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steastus
            #add-point:ON ACTION controlp INFIELD steastus
            {<point name="construct.c.steastus" />}
            #END add-point
 
         #Ctrlp:construct.c.stea005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea005
            #add-point:ON ACTION controlp INFIELD stea005
            {<point name="construct.c.stea005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea005
            #add-point:BEFORE FIELD stea005
            {<point name="construct.b.stea005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea005
            
            #add-point:AFTER FIELD stea005
            {<point name="construct.a.stea005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steal002
            #add-point:BEFORE FIELD steal002
            {<point name="construct.b.steal002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steal002
            
            #add-point:AFTER FIELD steal002
            {<point name="construct.a.steal002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.steal002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steal002
            #add-point:ON ACTION controlp INFIELD steal002
            {<point name="construct.c.steal002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steal003
            #add-point:BEFORE FIELD steal003
            {<point name="construct.b.steal003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steal003
            
            #add-point:AFTER FIELD steal003
            {<point name="construct.a.steal003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.steal003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steal003
            #add-point:ON ACTION controlp INFIELD steal003
            {<point name="construct.c.steal003" />}
            #END add-point
 
         #Ctrlp:construct.c.stea006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea006
            #add-point:ON ACTION controlp INFIELD stea006
            {<point name="construct.c.stea006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea006
            #add-point:BEFORE FIELD stea006
            {<point name="construct.b.stea006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea006
            
            #add-point:AFTER FIELD stea006
            {<point name="construct.a.stea006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea007
            #add-point:BEFORE FIELD stea007
            {<point name="construct.b.stea007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea007
            
            #add-point:AFTER FIELD stea007
            {<point name="construct.a.stea007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea007
            #add-point:ON ACTION controlp INFIELD stea007
            {<point name="construct.c.stea007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea008
            #add-point:BEFORE FIELD stea008
            {<point name="construct.b.stea008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea008
            
            #add-point:AFTER FIELD stea008
            {<point name="construct.a.stea008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea008
            #add-point:ON ACTION controlp INFIELD stea008
            {<point name="construct.c.stea008" />}
            #END add-point
 
         #Ctrlp:construct.c.stea047
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea047
            #add-point:ON ACTION controlp INFIELD stea047
            {<point name="construct.c.stea047" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea047
            #add-point:BEFORE FIELD stea047
            {<point name="construct.b.stea047" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea047
            
            #add-point:AFTER FIELD stea047
            {<point name="construct.a.stea047" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea048
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea048
            #add-point:ON ACTION controlp INFIELD stea048
            {<point name="construct.c.stea048" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea048
            #add-point:BEFORE FIELD stea048
            {<point name="construct.b.stea048" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea048
            
            #add-point:AFTER FIELD stea048
            {<point name="construct.a.stea048" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea044
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea044
            #add-point:ON ACTION controlp INFIELD stea044
            {<point name="construct.c.stea044" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea044
            #add-point:BEFORE FIELD stea044
            {<point name="construct.b.stea044" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea044
            
            #add-point:AFTER FIELD stea044
            {<point name="construct.a.stea044" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea010
            #add-point:ON ACTION controlp INFIELD stea010
            {<point name="construct.c.stea010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea010
            #add-point:BEFORE FIELD stea010
            {<point name="construct.b.stea010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea010
            
            #add-point:AFTER FIELD stea010
            {<point name="construct.a.stea010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea011
            #add-point:ON ACTION controlp INFIELD stea011
            {<point name="construct.c.stea011" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea011
            #add-point:BEFORE FIELD stea011
            {<point name="construct.b.stea011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea011
            
            #add-point:AFTER FIELD stea011
            {<point name="construct.a.stea011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea012
            #add-point:ON ACTION controlp INFIELD stea012
            {<point name="construct.c.stea012" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea012
            #add-point:BEFORE FIELD stea012
            {<point name="construct.b.stea012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea012
            
            #add-point:AFTER FIELD stea012
            {<point name="construct.a.stea012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea013
            #add-point:ON ACTION controlp INFIELD stea013
            {<point name="construct.c.stea013" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea013
            #add-point:BEFORE FIELD stea013
            {<point name="construct.b.stea013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea013
            
            #add-point:AFTER FIELD stea013
            {<point name="construct.a.stea013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea014
            #add-point:ON ACTION controlp INFIELD stea014
            {<point name="construct.c.stea014" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea014
            #add-point:BEFORE FIELD stea014
            {<point name="construct.b.stea014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea014
            
            #add-point:AFTER FIELD stea014
            {<point name="construct.a.stea014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea015
            #add-point:ON ACTION controlp INFIELD stea015
            {<point name="construct.c.stea015" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea015
            #add-point:BEFORE FIELD stea015
            {<point name="construct.b.stea015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea015
            
            #add-point:AFTER FIELD stea015
            {<point name="construct.a.stea015" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea016
            #add-point:BEFORE FIELD stea016
            {<point name="construct.b.stea016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea016
            
            #add-point:AFTER FIELD stea016
            {<point name="construct.a.stea016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea016
            #add-point:ON ACTION controlp INFIELD stea016
            {<point name="construct.c.stea016" />}
            #END add-point
 
         #Ctrlp:construct.c.stea045
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea045
            #add-point:ON ACTION controlp INFIELD stea045
            {<point name="construct.c.stea045" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea045
            #add-point:BEFORE FIELD stea045
            {<point name="construct.b.stea045" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea045
            
            #add-point:AFTER FIELD stea045
            {<point name="construct.a.stea045" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea046
            #add-point:BEFORE FIELD stea046
            {<point name="construct.b.stea046" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea046
            
            #add-point:AFTER FIELD stea046
            {<point name="construct.a.stea046" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea046
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea046
            #add-point:ON ACTION controlp INFIELD stea046
            {<point name="construct.c.stea046" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea029
            #add-point:BEFORE FIELD stea029
            {<point name="construct.b.stea029" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea029
            
            #add-point:AFTER FIELD stea029
            {<point name="construct.a.stea029" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea029
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea029
            #add-point:ON ACTION controlp INFIELD stea029
            {<point name="construct.c.stea029" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea030
            #add-point:BEFORE FIELD stea030
            {<point name="construct.b.stea030" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea030
            
            #add-point:AFTER FIELD stea030
            {<point name="construct.a.stea030" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea030
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea030
            #add-point:ON ACTION controlp INFIELD stea030
            {<point name="construct.c.stea030" />}
            #END add-point
 
         #Ctrlp:construct.c.stea032
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea032
            #add-point:ON ACTION controlp INFIELD stea032
            {<point name="construct.c.stea032" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea032
            #add-point:BEFORE FIELD stea032
            {<point name="construct.b.stea032" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea032
            
            #add-point:AFTER FIELD stea032
            {<point name="construct.a.stea032" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea033
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea033
            #add-point:ON ACTION controlp INFIELD stea033
            {<point name="construct.c.stea033" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea033
            #add-point:BEFORE FIELD stea033
            {<point name="construct.b.stea033" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea033
            
            #add-point:AFTER FIELD stea033
            {<point name="construct.a.stea033" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea033_desc
            #add-point:BEFORE FIELD stea033_desc
            {<point name="construct.b.stea033_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea033_desc
            
            #add-point:AFTER FIELD stea033_desc
            {<point name="construct.a.stea033_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea033_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea033_desc
            #add-point:ON ACTION controlp INFIELD stea033_desc
            {<point name="construct.c.stea033_desc" />}
            #END add-point
 
         #Ctrlp:construct.c.stea034
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea034
            #add-point:ON ACTION controlp INFIELD stea034
            {<point name="construct.c.stea034" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea034
            #add-point:BEFORE FIELD stea034
            {<point name="construct.b.stea034" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea034
            
            #add-point:AFTER FIELD stea034
            {<point name="construct.a.stea034" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea034_desc
            #add-point:BEFORE FIELD stea034_desc
            {<point name="construct.b.stea034_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea034_desc
            
            #add-point:AFTER FIELD stea034_desc
            {<point name="construct.a.stea034_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea034_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea034_desc
            #add-point:ON ACTION controlp INFIELD stea034_desc
            {<point name="construct.c.stea034_desc" />}
            #END add-point
 
         #Ctrlp:construct.c.stea035
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea035
            #add-point:ON ACTION controlp INFIELD stea035
            {<point name="construct.c.stea035" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea035
            #add-point:BEFORE FIELD stea035
            {<point name="construct.b.stea035" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea035
            
            #add-point:AFTER FIELD stea035
            {<point name="construct.a.stea035" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea036
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea036
            #add-point:ON ACTION controlp INFIELD stea036
            {<point name="construct.c.stea036" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea036
            #add-point:BEFORE FIELD stea036
            {<point name="construct.b.stea036" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea036
            
            #add-point:AFTER FIELD stea036
            {<point name="construct.a.stea036" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea037
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea037
            #add-point:ON ACTION controlp INFIELD stea037
            {<point name="construct.c.stea037" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea037
            #add-point:BEFORE FIELD stea037
            {<point name="construct.b.stea037" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea037
            
            #add-point:AFTER FIELD stea037
            {<point name="construct.a.stea037" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea038
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea038
            #add-point:ON ACTION controlp INFIELD stea038
            {<point name="construct.c.stea038" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea038
            #add-point:BEFORE FIELD stea038
            {<point name="construct.b.stea038" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea038
            
            #add-point:AFTER FIELD stea038
            {<point name="construct.a.stea038" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea039
            #add-point:BEFORE FIELD stea039
            {<point name="construct.b.stea039" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea039
            
            #add-point:AFTER FIELD stea039
            {<point name="construct.a.stea039" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea039
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea039
            #add-point:ON ACTION controlp INFIELD stea039
            {<point name="construct.c.stea039" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea040
            #add-point:BEFORE FIELD stea040
            {<point name="construct.b.stea040" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea040
            
            #add-point:AFTER FIELD stea040
            {<point name="construct.a.stea040" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea040
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea040
            #add-point:ON ACTION controlp INFIELD stea040
            {<point name="construct.c.stea040" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea028
            #add-point:BEFORE FIELD stea028
            {<point name="construct.b.stea028" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea028
            
            #add-point:AFTER FIELD stea028
            {<point name="construct.a.stea028" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea028
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea028
            #add-point:ON ACTION controlp INFIELD stea028
            {<point name="construct.c.stea028" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea017
            #add-point:BEFORE FIELD stea017
            {<point name="construct.b.stea017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea017
            
            #add-point:AFTER FIELD stea017
            {<point name="construct.a.stea017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea017
            #add-point:ON ACTION controlp INFIELD stea017
            {<point name="construct.c.stea017" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea021
            #add-point:BEFORE FIELD stea021
            {<point name="construct.b.stea021" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea021
            
            #add-point:AFTER FIELD stea021
            {<point name="construct.a.stea021" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea021
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea021
            #add-point:ON ACTION controlp INFIELD stea021
            {<point name="construct.c.stea021" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea024
            #add-point:BEFORE FIELD stea024
            {<point name="construct.b.stea024" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea024
            
            #add-point:AFTER FIELD stea024
            {<point name="construct.a.stea024" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea024
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea024
            #add-point:ON ACTION controlp INFIELD stea024
            {<point name="construct.c.stea024" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea018
            #add-point:BEFORE FIELD stea018
            {<point name="construct.b.stea018" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea018
            
            #add-point:AFTER FIELD stea018
            {<point name="construct.a.stea018" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea018
            #add-point:ON ACTION controlp INFIELD stea018
            {<point name="construct.c.stea018" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea049
            #add-point:BEFORE FIELD stea049
            {<point name="construct.b.stea049" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea049
            
            #add-point:AFTER FIELD stea049
            {<point name="construct.a.stea049" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea049
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea049
            #add-point:ON ACTION controlp INFIELD stea049
            {<point name="construct.c.stea049" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea025
            #add-point:BEFORE FIELD stea025
            {<point name="construct.b.stea025" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea025
            
            #add-point:AFTER FIELD stea025
            {<point name="construct.a.stea025" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea025
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea025
            #add-point:ON ACTION controlp INFIELD stea025
            {<point name="construct.c.stea025" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea019
            #add-point:BEFORE FIELD stea019
            {<point name="construct.b.stea019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea019
            
            #add-point:AFTER FIELD stea019
            {<point name="construct.a.stea019" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea019
            #add-point:ON ACTION controlp INFIELD stea019
            {<point name="construct.c.stea019" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea022
            #add-point:BEFORE FIELD stea022
            {<point name="construct.b.stea022" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea022
            
            #add-point:AFTER FIELD stea022
            {<point name="construct.a.stea022" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea022
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea022
            #add-point:ON ACTION controlp INFIELD stea022
            {<point name="construct.c.stea022" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea026
            #add-point:BEFORE FIELD stea026
            {<point name="construct.b.stea026" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea026
            
            #add-point:AFTER FIELD stea026
            {<point name="construct.a.stea026" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea026
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea026
            #add-point:ON ACTION controlp INFIELD stea026
            {<point name="construct.c.stea026" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea020
            #add-point:BEFORE FIELD stea020
            {<point name="construct.b.stea020" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea020
            
            #add-point:AFTER FIELD stea020
            {<point name="construct.a.stea020" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea020
            #add-point:ON ACTION controlp INFIELD stea020
            {<point name="construct.c.stea020" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea023
            #add-point:BEFORE FIELD stea023
            {<point name="construct.b.stea023" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea023
            
            #add-point:AFTER FIELD stea023
            {<point name="construct.a.stea023" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea023
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea023
            #add-point:ON ACTION controlp INFIELD stea023
            {<point name="construct.c.stea023" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea027
            #add-point:BEFORE FIELD stea027
            {<point name="construct.b.stea027" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea027
            
            #add-point:AFTER FIELD stea027
            {<point name="construct.a.stea027" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea027
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea027
            #add-point:ON ACTION controlp INFIELD stea027
            {<point name="construct.c.stea027" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea031
            #add-point:BEFORE FIELD stea031
            {<point name="construct.b.stea031" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea031
            
            #add-point:AFTER FIELD stea031
            {<point name="construct.a.stea031" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea031
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea031
            #add-point:ON ACTION controlp INFIELD stea031
            {<point name="construct.c.stea031" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea042
            #add-point:BEFORE FIELD stea042
            {<point name="construct.b.stea042" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea042
            
            #add-point:AFTER FIELD stea042
            {<point name="construct.a.stea042" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stea042
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea042
            #add-point:ON ACTION controlp INFIELD stea042
            {<point name="construct.c.stea042" />}
            #END add-point
 
         #Ctrlp:construct.c.steaownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steaownid
            #add-point:ON ACTION controlp INFIELD steaownid
            {<point name="construct.c.steaownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steaownid
            #add-point:BEFORE FIELD steaownid
            {<point name="construct.b.steaownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steaownid
            
            #add-point:AFTER FIELD steaownid
            {<point name="construct.a.steaownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.steaowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steaowndp
            #add-point:ON ACTION controlp INFIELD steaowndp
            {<point name="construct.c.steaowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steaowndp
            #add-point:BEFORE FIELD steaowndp
            {<point name="construct.b.steaowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steaowndp
            
            #add-point:AFTER FIELD steaowndp
            {<point name="construct.a.steaowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.steacrtid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steacrtid
            #add-point:ON ACTION controlp INFIELD steacrtid
            {<point name="construct.c.steacrtid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steacrtid
            #add-point:BEFORE FIELD steacrtid
            {<point name="construct.b.steacrtid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steacrtid
            
            #add-point:AFTER FIELD steacrtid
            {<point name="construct.a.steacrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.steacrtdp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steacrtdp
            #add-point:ON ACTION controlp INFIELD steacrtdp
            {<point name="construct.c.steacrtdp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steacrtdp
            #add-point:BEFORE FIELD steacrtdp
            {<point name="construct.b.steacrtdp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steacrtdp
            
            #add-point:AFTER FIELD steacrtdp
            {<point name="construct.a.steacrtdp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steacrtdt
            #add-point:BEFORE FIELD steacrtdt
            {<point name="construct.b.steacrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.steamodid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steamodid
            #add-point:ON ACTION controlp INFIELD steamodid
            {<point name="construct.c.steamodid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steamodid
            #add-point:BEFORE FIELD steamodid
            {<point name="construct.b.steamodid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steamodid
            
            #add-point:AFTER FIELD steamodid
            {<point name="construct.a.steamodid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steamoddt
            #add-point:BEFORE FIELD steamoddt
            {<point name="construct.b.steamoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.steacnfid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steacnfid
            #add-point:ON ACTION controlp INFIELD steacnfid
            {<point name="construct.c.steacnfid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steacnfid
            #add-point:BEFORE FIELD steacnfid
            {<point name="construct.b.steacnfid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steacnfid
            
            #add-point:AFTER FIELD steacnfid
            {<point name="construct.a.steacnfid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steacnfdt
            #add-point:BEFORE FIELD steacnfdt
            {<point name="construct.b.steacnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON stebseq,steb001,steb002,steb003,steb004,steb005,steb006,steb007,steb008, 
          steb009,steb010,steb011,steb012,steb013,steb014,steb015,steb016,steb017,stebsite,stebunit
           FROM s_detail1[1].stebseq,s_detail1[1].steb001,s_detail1[1].steb002,s_detail1[1].steb003, 
               s_detail1[1].steb004,s_detail1[1].steb005,s_detail1[1].steb006,s_detail1[1].steb007,s_detail1[1].steb008, 
               s_detail1[1].steb009,s_detail1[1].steb010,s_detail1[1].steb011,s_detail1[1].steb012,s_detail1[1].steb013, 
               s_detail1[1].steb014,s_detail1[1].steb015,s_detail1[1].steb016,s_detail1[1].steb017,s_detail1[1].stebsite, 
               s_detail1[1].stebunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stebseq
            #add-point:BEFORE FIELD stebseq
            {<point name="construct.b.page1.stebseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stebseq
            
            #add-point:AFTER FIELD stebseq
            {<point name="construct.a.page1.stebseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stebseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stebseq
            #add-point:ON ACTION controlp INFIELD stebseq
            {<point name="construct.c.page1.stebseq" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steb001
            #add-point:BEFORE FIELD steb001
            {<point name="construct.b.page1.steb001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steb001
            
            #add-point:AFTER FIELD steb001
            {<point name="construct.a.page1.steb001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.steb001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steb001
            #add-point:ON ACTION controlp INFIELD steb001
            {<point name="construct.c.page1.steb001" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.steb002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steb002
            #add-point:ON ACTION controlp INFIELD steb002
            {<point name="construct.c.page1.steb002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steb002
            #add-point:BEFORE FIELD steb002
            {<point name="construct.b.page1.steb002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steb002
            
            #add-point:AFTER FIELD steb002
            {<point name="construct.a.page1.steb002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steb003
            #add-point:BEFORE FIELD steb003
            {<point name="construct.b.page1.steb003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steb003
            
            #add-point:AFTER FIELD steb003
            {<point name="construct.a.page1.steb003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.steb003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steb003
            #add-point:ON ACTION controlp INFIELD steb003
            {<point name="construct.c.page1.steb003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steb004
            #add-point:BEFORE FIELD steb004
            {<point name="construct.b.page1.steb004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steb004
            
            #add-point:AFTER FIELD steb004
            {<point name="construct.a.page1.steb004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.steb004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steb004
            #add-point:ON ACTION controlp INFIELD steb004
            {<point name="construct.c.page1.steb004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steb005
            #add-point:BEFORE FIELD steb005
            {<point name="construct.b.page1.steb005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steb005
            
            #add-point:AFTER FIELD steb005
            {<point name="construct.a.page1.steb005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.steb005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steb005
            #add-point:ON ACTION controlp INFIELD steb005
            {<point name="construct.c.page1.steb005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steb006
            #add-point:BEFORE FIELD steb006
            {<point name="construct.b.page1.steb006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steb006
            
            #add-point:AFTER FIELD steb006
            {<point name="construct.a.page1.steb006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.steb006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steb006
            #add-point:ON ACTION controlp INFIELD steb006
            {<point name="construct.c.page1.steb006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steb007
            #add-point:BEFORE FIELD steb007
            {<point name="construct.b.page1.steb007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steb007
            
            #add-point:AFTER FIELD steb007
            {<point name="construct.a.page1.steb007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.steb007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steb007
            #add-point:ON ACTION controlp INFIELD steb007
            {<point name="construct.c.page1.steb007" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.steb008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steb008
            #add-point:ON ACTION controlp INFIELD steb008
            {<point name="construct.c.page1.steb008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steb008
            #add-point:BEFORE FIELD steb008
            {<point name="construct.b.page1.steb008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steb008
            
            #add-point:AFTER FIELD steb008
            {<point name="construct.a.page1.steb008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.steb009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steb009
            #add-point:ON ACTION controlp INFIELD steb009
            {<point name="construct.c.page1.steb009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steb009
            #add-point:BEFORE FIELD steb009
            {<point name="construct.b.page1.steb009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steb009
            
            #add-point:AFTER FIELD steb009
            {<point name="construct.a.page1.steb009" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steb010
            #add-point:BEFORE FIELD steb010
            {<point name="construct.b.page1.steb010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steb010
            
            #add-point:AFTER FIELD steb010
            {<point name="construct.a.page1.steb010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.steb010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steb010
            #add-point:ON ACTION controlp INFIELD steb010
            {<point name="construct.c.page1.steb010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steb011
            #add-point:BEFORE FIELD steb011
            {<point name="construct.b.page1.steb011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steb011
            
            #add-point:AFTER FIELD steb011
            {<point name="construct.a.page1.steb011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.steb011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steb011
            #add-point:ON ACTION controlp INFIELD steb011
            {<point name="construct.c.page1.steb011" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steb012
            #add-point:BEFORE FIELD steb012
            {<point name="construct.b.page1.steb012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steb012
            
            #add-point:AFTER FIELD steb012
            {<point name="construct.a.page1.steb012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.steb012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steb012
            #add-point:ON ACTION controlp INFIELD steb012
            {<point name="construct.c.page1.steb012" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steb013
            #add-point:BEFORE FIELD steb013
            {<point name="construct.b.page1.steb013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steb013
            
            #add-point:AFTER FIELD steb013
            {<point name="construct.a.page1.steb013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.steb013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steb013
            #add-point:ON ACTION controlp INFIELD steb013
            {<point name="construct.c.page1.steb013" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steb014
            #add-point:BEFORE FIELD steb014
            {<point name="construct.b.page1.steb014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steb014
            
            #add-point:AFTER FIELD steb014
            {<point name="construct.a.page1.steb014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.steb014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steb014
            #add-point:ON ACTION controlp INFIELD steb014
            {<point name="construct.c.page1.steb014" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steb015
            #add-point:BEFORE FIELD steb015
            {<point name="construct.b.page1.steb015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steb015
            
            #add-point:AFTER FIELD steb015
            {<point name="construct.a.page1.steb015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.steb015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steb015
            #add-point:ON ACTION controlp INFIELD steb015
            {<point name="construct.c.page1.steb015" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steb016
            #add-point:BEFORE FIELD steb016
            {<point name="construct.b.page1.steb016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steb016
            
            #add-point:AFTER FIELD steb016
            {<point name="construct.a.page1.steb016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.steb016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steb016
            #add-point:ON ACTION controlp INFIELD steb016
            {<point name="construct.c.page1.steb016" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steb017
            #add-point:BEFORE FIELD steb017
            {<point name="construct.b.page1.steb017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steb017
            
            #add-point:AFTER FIELD steb017
            {<point name="construct.a.page1.steb017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.steb017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steb017
            #add-point:ON ACTION controlp INFIELD steb017
            {<point name="construct.c.page1.steb017" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stebsite
            #add-point:BEFORE FIELD stebsite
            {<point name="construct.b.page1.stebsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stebsite
            
            #add-point:AFTER FIELD stebsite
            {<point name="construct.a.page1.stebsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stebsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stebsite
            #add-point:ON ACTION controlp INFIELD stebsite
            {<point name="construct.c.page1.stebsite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stebunit
            #add-point:BEFORE FIELD stebunit
            {<point name="construct.b.page1.stebunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stebunit
            
            #add-point:AFTER FIELD stebunit
            {<point name="construct.a.page1.stebunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stebunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stebunit
            #add-point:ON ACTION controlp INFIELD stebunit
            {<point name="construct.c.page1.stebunit" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON stecseq,stec001,stec002,stec003,stec024,stec025,stec004,stec005,stec006, 
          stec006_desc,stec007,stec007_desc,stec008,stec009,stec010,stec011,stec012,stec013,stec014, 
          stec015,stec016,stec017,stec018,stec019,stec020,stec021,stec022,stec023,stecsite,stecunit
           FROM s_detail2[1].stecseq,s_detail2[1].stec001,s_detail2[1].stec002,s_detail2[1].stec003, 
               s_detail2[1].stec024,s_detail2[1].stec025,s_detail2[1].stec004,s_detail2[1].stec005,s_detail2[1].stec006, 
               s_detail2[1].stec006_desc,s_detail2[1].stec007,s_detail2[1].stec007_desc,s_detail2[1].stec008, 
               s_detail2[1].stec009,s_detail2[1].stec010,s_detail2[1].stec011,s_detail2[1].stec012,s_detail2[1].stec013, 
               s_detail2[1].stec014,s_detail2[1].stec015,s_detail2[1].stec016,s_detail2[1].stec017,s_detail2[1].stec018, 
               s_detail2[1].stec019,s_detail2[1].stec020,s_detail2[1].stec021,s_detail2[1].stec022,s_detail2[1].stec023, 
               s_detail2[1].stecsite,s_detail2[1].stecunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stecseq
            #add-point:BEFORE FIELD stecseq
            {<point name="construct.b.page2.stecseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stecseq
            
            #add-point:AFTER FIELD stecseq
            {<point name="construct.a.page2.stecseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stecseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stecseq
            #add-point:ON ACTION controlp INFIELD stecseq
            {<point name="construct.c.page2.stecseq" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec001
            #add-point:BEFORE FIELD stec001
            {<point name="construct.b.page2.stec001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec001
            
            #add-point:AFTER FIELD stec001
            {<point name="construct.a.page2.stec001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stec001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec001
            #add-point:ON ACTION controlp INFIELD stec001
            {<point name="construct.c.page2.stec001" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.stec002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec002
            #add-point:ON ACTION controlp INFIELD stec002
            {<point name="construct.c.page2.stec002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec002
            #add-point:BEFORE FIELD stec002
            {<point name="construct.b.page2.stec002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec002
            
            #add-point:AFTER FIELD stec002
            {<point name="construct.a.page2.stec002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec003
            #add-point:BEFORE FIELD stec003
            {<point name="construct.b.page2.stec003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec003
            
            #add-point:AFTER FIELD stec003
            {<point name="construct.a.page2.stec003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stec003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec003
            #add-point:ON ACTION controlp INFIELD stec003
            {<point name="construct.c.page2.stec003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec024
            #add-point:BEFORE FIELD stec024
            {<point name="construct.b.page2.stec024" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec024
            
            #add-point:AFTER FIELD stec024
            {<point name="construct.a.page2.stec024" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stec024
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec024
            #add-point:ON ACTION controlp INFIELD stec024
            {<point name="construct.c.page2.stec024" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.stec025
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec025
            #add-point:ON ACTION controlp INFIELD stec025
            {<point name="construct.c.page2.stec025" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec025
            #add-point:BEFORE FIELD stec025
            {<point name="construct.b.page2.stec025" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec025
            
            #add-point:AFTER FIELD stec025
            {<point name="construct.a.page2.stec025" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stec004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec004
            #add-point:ON ACTION controlp INFIELD stec004
            {<point name="construct.c.page2.stec004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec004
            #add-point:BEFORE FIELD stec004
            {<point name="construct.b.page2.stec004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec004
            
            #add-point:AFTER FIELD stec004
            {<point name="construct.a.page2.stec004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stec005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec005
            #add-point:ON ACTION controlp INFIELD stec005
            {<point name="construct.c.page2.stec005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec005
            #add-point:BEFORE FIELD stec005
            {<point name="construct.b.page2.stec005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec005
            
            #add-point:AFTER FIELD stec005
            {<point name="construct.a.page2.stec005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stec006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec006
            #add-point:ON ACTION controlp INFIELD stec006
            {<point name="construct.c.page2.stec006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec006
            #add-point:BEFORE FIELD stec006
            {<point name="construct.b.page2.stec006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec006
            
            #add-point:AFTER FIELD stec006
            {<point name="construct.a.page2.stec006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec006_desc
            #add-point:BEFORE FIELD stec006_desc
            {<point name="construct.b.page2.stec006_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec006_desc
            
            #add-point:AFTER FIELD stec006_desc
            {<point name="construct.a.page2.stec006_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stec006_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec006_desc
            #add-point:ON ACTION controlp INFIELD stec006_desc
            {<point name="construct.c.page2.stec006_desc" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.stec007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec007
            #add-point:ON ACTION controlp INFIELD stec007
            {<point name="construct.c.page2.stec007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec007
            #add-point:BEFORE FIELD stec007
            {<point name="construct.b.page2.stec007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec007
            
            #add-point:AFTER FIELD stec007
            {<point name="construct.a.page2.stec007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec007_desc
            #add-point:BEFORE FIELD stec007_desc
            {<point name="construct.b.page2.stec007_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec007_desc
            
            #add-point:AFTER FIELD stec007_desc
            {<point name="construct.a.page2.stec007_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stec007_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec007_desc
            #add-point:ON ACTION controlp INFIELD stec007_desc
            {<point name="construct.c.page2.stec007_desc" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec008
            #add-point:BEFORE FIELD stec008
            {<point name="construct.b.page2.stec008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec008
            
            #add-point:AFTER FIELD stec008
            {<point name="construct.a.page2.stec008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stec008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec008
            #add-point:ON ACTION controlp INFIELD stec008
            {<point name="construct.c.page2.stec008" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.stec009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec009
            #add-point:ON ACTION controlp INFIELD stec009
            {<point name="construct.c.page2.stec009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec009
            #add-point:BEFORE FIELD stec009
            {<point name="construct.b.page2.stec009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec009
            
            #add-point:AFTER FIELD stec009
            {<point name="construct.a.page2.stec009" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec010
            #add-point:BEFORE FIELD stec010
            {<point name="construct.b.page2.stec010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec010
            
            #add-point:AFTER FIELD stec010
            {<point name="construct.a.page2.stec010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stec010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec010
            #add-point:ON ACTION controlp INFIELD stec010
            {<point name="construct.c.page2.stec010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec011
            #add-point:BEFORE FIELD stec011
            {<point name="construct.b.page2.stec011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec011
            
            #add-point:AFTER FIELD stec011
            {<point name="construct.a.page2.stec011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stec011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec011
            #add-point:ON ACTION controlp INFIELD stec011
            {<point name="construct.c.page2.stec011" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec012
            #add-point:BEFORE FIELD stec012
            {<point name="construct.b.page2.stec012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec012
            
            #add-point:AFTER FIELD stec012
            {<point name="construct.a.page2.stec012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stec012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec012
            #add-point:ON ACTION controlp INFIELD stec012
            {<point name="construct.c.page2.stec012" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec013
            #add-point:BEFORE FIELD stec013
            {<point name="construct.b.page2.stec013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec013
            
            #add-point:AFTER FIELD stec013
            {<point name="construct.a.page2.stec013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stec013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec013
            #add-point:ON ACTION controlp INFIELD stec013
            {<point name="construct.c.page2.stec013" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec014
            #add-point:BEFORE FIELD stec014
            {<point name="construct.b.page2.stec014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec014
            
            #add-point:AFTER FIELD stec014
            {<point name="construct.a.page2.stec014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stec014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec014
            #add-point:ON ACTION controlp INFIELD stec014
            {<point name="construct.c.page2.stec014" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.stec015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec015
            #add-point:ON ACTION controlp INFIELD stec015
            {<point name="construct.c.page2.stec015" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec015
            #add-point:BEFORE FIELD stec015
            {<point name="construct.b.page2.stec015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec015
            
            #add-point:AFTER FIELD stec015
            {<point name="construct.a.page2.stec015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stec016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec016
            #add-point:ON ACTION controlp INFIELD stec016
            {<point name="construct.c.page2.stec016" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec016
            #add-point:BEFORE FIELD stec016
            {<point name="construct.b.page2.stec016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec016
            
            #add-point:AFTER FIELD stec016
            {<point name="construct.a.page2.stec016" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec017
            #add-point:BEFORE FIELD stec017
            {<point name="construct.b.page2.stec017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec017
            
            #add-point:AFTER FIELD stec017
            {<point name="construct.a.page2.stec017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stec017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec017
            #add-point:ON ACTION controlp INFIELD stec017
            {<point name="construct.c.page2.stec017" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec018
            #add-point:BEFORE FIELD stec018
            {<point name="construct.b.page2.stec018" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec018
            
            #add-point:AFTER FIELD stec018
            {<point name="construct.a.page2.stec018" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stec018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec018
            #add-point:ON ACTION controlp INFIELD stec018
            {<point name="construct.c.page2.stec018" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec019
            #add-point:BEFORE FIELD stec019
            {<point name="construct.b.page2.stec019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec019
            
            #add-point:AFTER FIELD stec019
            {<point name="construct.a.page2.stec019" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stec019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec019
            #add-point:ON ACTION controlp INFIELD stec019
            {<point name="construct.c.page2.stec019" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec020
            #add-point:BEFORE FIELD stec020
            {<point name="construct.b.page2.stec020" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec020
            
            #add-point:AFTER FIELD stec020
            {<point name="construct.a.page2.stec020" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stec020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec020
            #add-point:ON ACTION controlp INFIELD stec020
            {<point name="construct.c.page2.stec020" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec021
            #add-point:BEFORE FIELD stec021
            {<point name="construct.b.page2.stec021" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec021
            
            #add-point:AFTER FIELD stec021
            {<point name="construct.a.page2.stec021" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stec021
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec021
            #add-point:ON ACTION controlp INFIELD stec021
            {<point name="construct.c.page2.stec021" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec022
            #add-point:BEFORE FIELD stec022
            {<point name="construct.b.page2.stec022" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec022
            
            #add-point:AFTER FIELD stec022
            {<point name="construct.a.page2.stec022" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stec022
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec022
            #add-point:ON ACTION controlp INFIELD stec022
            {<point name="construct.c.page2.stec022" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec023
            #add-point:BEFORE FIELD stec023
            {<point name="construct.b.page2.stec023" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec023
            
            #add-point:AFTER FIELD stec023
            {<point name="construct.a.page2.stec023" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stec023
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec023
            #add-point:ON ACTION controlp INFIELD stec023
            {<point name="construct.c.page2.stec023" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stecsite
            #add-point:BEFORE FIELD stecsite
            {<point name="construct.b.page2.stecsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stecsite
            
            #add-point:AFTER FIELD stecsite
            {<point name="construct.a.page2.stecsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stecsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stecsite
            #add-point:ON ACTION controlp INFIELD stecsite
            {<point name="construct.c.page2.stecsite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stecunit
            #add-point:BEFORE FIELD stecunit
            {<point name="construct.b.page2.stecunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stecunit
            
            #add-point:AFTER FIELD stecunit
            {<point name="construct.a.page2.stecunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stecunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stecunit
            #add-point:ON ACTION controlp INFIELD stecunit
            {<point name="construct.c.page2.stecunit" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON steeseq,stee002,stee001,stee003,stee004,stee005,stee006,stee007,stee008, 
          stee009,stee010,stee011,steesite,steeunit
           FROM s_detail3[1].steeseq,s_detail3[1].stee002,s_detail3[1].stee001,s_detail3[1].stee003, 
               s_detail3[1].stee004,s_detail3[1].stee005,s_detail3[1].stee006,s_detail3[1].stee007,s_detail3[1].stee008, 
               s_detail3[1].stee009,s_detail3[1].stee010,s_detail3[1].stee011,s_detail3[1].steesite, 
               s_detail3[1].steeunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body3.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steeseq
            #add-point:BEFORE FIELD steeseq
            {<point name="construct.b.page3.steeseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steeseq
            
            #add-point:AFTER FIELD steeseq
            {<point name="construct.a.page3.steeseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.steeseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steeseq
            #add-point:ON ACTION controlp INFIELD steeseq
            {<point name="construct.c.page3.steeseq" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stee002
            #add-point:BEFORE FIELD stee002
            {<point name="construct.b.page3.stee002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stee002
            
            #add-point:AFTER FIELD stee002
            {<point name="construct.a.page3.stee002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.stee002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stee002
            #add-point:ON ACTION controlp INFIELD stee002
            {<point name="construct.c.page3.stee002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stee001
            #add-point:BEFORE FIELD stee001
            {<point name="construct.b.page3.stee001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stee001
            
            #add-point:AFTER FIELD stee001
            {<point name="construct.a.page3.stee001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.stee001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stee001
            #add-point:ON ACTION controlp INFIELD stee001
            {<point name="construct.c.page3.stee001" />}
            #END add-point
 
         #Ctrlp:construct.c.page3.stee003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stee003
            #add-point:ON ACTION controlp INFIELD stee003
            {<point name="construct.c.page3.stee003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stee003
            #add-point:BEFORE FIELD stee003
            {<point name="construct.b.page3.stee003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stee003
            
            #add-point:AFTER FIELD stee003
            {<point name="construct.a.page3.stee003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stee004
            #add-point:BEFORE FIELD stee004
            {<point name="construct.b.page3.stee004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stee004
            
            #add-point:AFTER FIELD stee004
            {<point name="construct.a.page3.stee004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.stee004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stee004
            #add-point:ON ACTION controlp INFIELD stee004
            {<point name="construct.c.page3.stee004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stee005
            #add-point:BEFORE FIELD stee005
            {<point name="construct.b.page3.stee005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stee005
            
            #add-point:AFTER FIELD stee005
            {<point name="construct.a.page3.stee005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.stee005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stee005
            #add-point:ON ACTION controlp INFIELD stee005
            {<point name="construct.c.page3.stee005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stee006
            #add-point:BEFORE FIELD stee006
            {<point name="construct.b.page3.stee006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stee006
            
            #add-point:AFTER FIELD stee006
            {<point name="construct.a.page3.stee006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.stee006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stee006
            #add-point:ON ACTION controlp INFIELD stee006
            {<point name="construct.c.page3.stee006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stee007
            #add-point:BEFORE FIELD stee007
            {<point name="construct.b.page3.stee007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stee007
            
            #add-point:AFTER FIELD stee007
            {<point name="construct.a.page3.stee007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.stee007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stee007
            #add-point:ON ACTION controlp INFIELD stee007
            {<point name="construct.c.page3.stee007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stee008
            #add-point:BEFORE FIELD stee008
            {<point name="construct.b.page3.stee008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stee008
            
            #add-point:AFTER FIELD stee008
            {<point name="construct.a.page3.stee008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.stee008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stee008
            #add-point:ON ACTION controlp INFIELD stee008
            {<point name="construct.c.page3.stee008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stee009
            #add-point:BEFORE FIELD stee009
            {<point name="construct.b.page3.stee009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stee009
            
            #add-point:AFTER FIELD stee009
            {<point name="construct.a.page3.stee009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.stee009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stee009
            #add-point:ON ACTION controlp INFIELD stee009
            {<point name="construct.c.page3.stee009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stee010
            #add-point:BEFORE FIELD stee010
            {<point name="construct.b.page3.stee010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stee010
            
            #add-point:AFTER FIELD stee010
            {<point name="construct.a.page3.stee010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.stee010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stee010
            #add-point:ON ACTION controlp INFIELD stee010
            {<point name="construct.c.page3.stee010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stee011
            #add-point:BEFORE FIELD stee011
            {<point name="construct.b.page3.stee011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stee011
            
            #add-point:AFTER FIELD stee011
            {<point name="construct.a.page3.stee011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.stee011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stee011
            #add-point:ON ACTION controlp INFIELD stee011
            {<point name="construct.c.page3.stee011" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steesite
            #add-point:BEFORE FIELD steesite
            {<point name="construct.b.page3.steesite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steesite
            
            #add-point:AFTER FIELD steesite
            {<point name="construct.a.page3.steesite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.steesite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steesite
            #add-point:ON ACTION controlp INFIELD steesite
            {<point name="construct.c.page3.steesite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steeunit
            #add-point:BEFORE FIELD steeunit
            {<point name="construct.b.page3.steeunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steeunit
            
            #add-point:AFTER FIELD steeunit
            {<point name="construct.a.page3.steeunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.steeunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steeunit
            #add-point:ON ACTION controlp INFIELD steeunit
            {<point name="construct.c.page3.steeunit" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table4 ON stegseq,steg001,steg003,steg003_desc,steg002,steg002_desc,steg004,steg005, 
          stegacti,stegsite,stegunit
           FROM s_detail4[1].stegseq,s_detail4[1].steg001,s_detail4[1].steg003,s_detail4[1].steg003_desc, 
               s_detail4[1].steg002,s_detail4[1].steg002_desc,s_detail4[1].steg004,s_detail4[1].steg005, 
               s_detail4[1].stegacti,s_detail4[1].stegsite,s_detail4[1].stegunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body4.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 4)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stegseq
            #add-point:BEFORE FIELD stegseq
            {<point name="construct.b.page4.stegseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stegseq
            
            #add-point:AFTER FIELD stegseq
            {<point name="construct.a.page4.stegseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.stegseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stegseq
            #add-point:ON ACTION controlp INFIELD stegseq
            {<point name="construct.c.page4.stegseq" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steg001
            #add-point:BEFORE FIELD steg001
            {<point name="construct.b.page4.steg001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steg001
            
            #add-point:AFTER FIELD steg001
            {<point name="construct.a.page4.steg001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.steg001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steg001
            #add-point:ON ACTION controlp INFIELD steg001
            {<point name="construct.c.page4.steg001" />}
            #END add-point
 
         #Ctrlp:construct.c.page4.steg003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steg003
            #add-point:ON ACTION controlp INFIELD steg003
            {<point name="construct.c.page4.steg003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steg003
            #add-point:BEFORE FIELD steg003
            {<point name="construct.b.page4.steg003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steg003
            
            #add-point:AFTER FIELD steg003
            {<point name="construct.a.page4.steg003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steg003_desc
            #add-point:BEFORE FIELD steg003_desc
            {<point name="construct.b.page4.steg003_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steg003_desc
            
            #add-point:AFTER FIELD steg003_desc
            {<point name="construct.a.page4.steg003_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.steg003_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steg003_desc
            #add-point:ON ACTION controlp INFIELD steg003_desc
            {<point name="construct.c.page4.steg003_desc" />}
            #END add-point
 
         #Ctrlp:construct.c.page4.steg002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steg002
            #add-point:ON ACTION controlp INFIELD steg002
            {<point name="construct.c.page4.steg002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steg002
            #add-point:BEFORE FIELD steg002
            {<point name="construct.b.page4.steg002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steg002
            
            #add-point:AFTER FIELD steg002
            {<point name="construct.a.page4.steg002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steg002_desc
            #add-point:BEFORE FIELD steg002_desc
            {<point name="construct.b.page4.steg002_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steg002_desc
            
            #add-point:AFTER FIELD steg002_desc
            {<point name="construct.a.page4.steg002_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.steg002_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steg002_desc
            #add-point:ON ACTION controlp INFIELD steg002_desc
            {<point name="construct.c.page4.steg002_desc" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steg004
            #add-point:BEFORE FIELD steg004
            {<point name="construct.b.page4.steg004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steg004
            
            #add-point:AFTER FIELD steg004
            {<point name="construct.a.page4.steg004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.steg004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steg004
            #add-point:ON ACTION controlp INFIELD steg004
            {<point name="construct.c.page4.steg004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steg005
            #add-point:BEFORE FIELD steg005
            {<point name="construct.b.page4.steg005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steg005
            
            #add-point:AFTER FIELD steg005
            {<point name="construct.a.page4.steg005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.steg005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steg005
            #add-point:ON ACTION controlp INFIELD steg005
            {<point name="construct.c.page4.steg005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stegacti
            #add-point:BEFORE FIELD stegacti
            {<point name="construct.b.page4.stegacti" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stegacti
            
            #add-point:AFTER FIELD stegacti
            {<point name="construct.a.page4.stegacti" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.stegacti
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stegacti
            #add-point:ON ACTION controlp INFIELD stegacti
            {<point name="construct.c.page4.stegacti" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stegsite
            #add-point:BEFORE FIELD stegsite
            {<point name="construct.b.page4.stegsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stegsite
            
            #add-point:AFTER FIELD stegsite
            {<point name="construct.a.page4.stegsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.stegsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stegsite
            #add-point:ON ACTION controlp INFIELD stegsite
            {<point name="construct.c.page4.stegsite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stegunit
            #add-point:BEFORE FIELD stegunit
            {<point name="construct.b.page4.stegunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stegunit
            
            #add-point:AFTER FIELD stegunit
            {<point name="construct.a.page4.stegunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.stegunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stegunit
            #add-point:ON ACTION controlp INFIELD stegunit
            {<point name="construct.c.page4.stegunit" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table5 ON stehseq,steh001,steh002,steh003,stehacti,stehsite,stehunit
           FROM s_detail5[1].stehseq,s_detail5[1].steh001,s_detail5[1].steh002,s_detail5[1].steh003, 
               s_detail5[1].stehacti,s_detail5[1].stehsite,s_detail5[1].stehunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body5.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 5)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stehseq
            #add-point:BEFORE FIELD stehseq
            {<point name="construct.b.page5.stehseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stehseq
            
            #add-point:AFTER FIELD stehseq
            {<point name="construct.a.page5.stehseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page5.stehseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stehseq
            #add-point:ON ACTION controlp INFIELD stehseq
            {<point name="construct.c.page5.stehseq" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steh001
            #add-point:BEFORE FIELD steh001
            {<point name="construct.b.page5.steh001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steh001
            
            #add-point:AFTER FIELD steh001
            {<point name="construct.a.page5.steh001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page5.steh001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steh001
            #add-point:ON ACTION controlp INFIELD steh001
            {<point name="construct.c.page5.steh001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steh002
            #add-point:BEFORE FIELD steh002
            {<point name="construct.b.page5.steh002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steh002
            
            #add-point:AFTER FIELD steh002
            {<point name="construct.a.page5.steh002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page5.steh002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steh002
            #add-point:ON ACTION controlp INFIELD steh002
            {<point name="construct.c.page5.steh002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steh003
            #add-point:BEFORE FIELD steh003
            {<point name="construct.b.page5.steh003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steh003
            
            #add-point:AFTER FIELD steh003
            {<point name="construct.a.page5.steh003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page5.steh003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steh003
            #add-point:ON ACTION controlp INFIELD steh003
            {<point name="construct.c.page5.steh003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stehacti
            #add-point:BEFORE FIELD stehacti
            {<point name="construct.b.page5.stehacti" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stehacti
            
            #add-point:AFTER FIELD stehacti
            {<point name="construct.a.page5.stehacti" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page5.stehacti
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stehacti
            #add-point:ON ACTION controlp INFIELD stehacti
            {<point name="construct.c.page5.stehacti" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stehsite
            #add-point:BEFORE FIELD stehsite
            {<point name="construct.b.page5.stehsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stehsite
            
            #add-point:AFTER FIELD stehsite
            {<point name="construct.a.page5.stehsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page5.stehsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stehsite
            #add-point:ON ACTION controlp INFIELD stehsite
            {<point name="construct.c.page5.stehsite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stehunit
            #add-point:BEFORE FIELD stehunit
            {<point name="construct.b.page5.stehunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stehunit
            
            #add-point:AFTER FIELD stehunit
            {<point name="construct.a.page5.stehunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page5.stehunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stehunit
            #add-point:ON ACTION controlp INFIELD stehunit
            {<point name="construct.c.page5.stehunit" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table6 ON steiseq,stei001,stei002,stei003,stei005,stei006,stei004,stei010,stei007, 
          stei008,stei009,steiacti,steisite,steiunit
           FROM s_detail6[1].steiseq,s_detail6[1].stei001,s_detail6[1].stei002,s_detail6[1].stei003, 
               s_detail6[1].stei005,s_detail6[1].stei006,s_detail6[1].stei004,s_detail6[1].stei010,s_detail6[1].stei007, 
               s_detail6[1].stei008,s_detail6[1].stei009,s_detail6[1].steiacti,s_detail6[1].steisite, 
               s_detail6[1].steiunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body6.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 6)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steiseq
            #add-point:BEFORE FIELD steiseq
            {<point name="construct.b.page6.steiseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steiseq
            
            #add-point:AFTER FIELD steiseq
            {<point name="construct.a.page6.steiseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.steiseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steiseq
            #add-point:ON ACTION controlp INFIELD steiseq
            {<point name="construct.c.page6.steiseq" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stei001
            #add-point:BEFORE FIELD stei001
            {<point name="construct.b.page6.stei001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stei001
            
            #add-point:AFTER FIELD stei001
            {<point name="construct.a.page6.stei001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.stei001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stei001
            #add-point:ON ACTION controlp INFIELD stei001
            {<point name="construct.c.page6.stei001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stei002
            #add-point:BEFORE FIELD stei002
            {<point name="construct.b.page6.stei002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stei002
            
            #add-point:AFTER FIELD stei002
            {<point name="construct.a.page6.stei002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.stei002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stei002
            #add-point:ON ACTION controlp INFIELD stei002
            {<point name="construct.c.page6.stei002" />}
            #END add-point
 
         #Ctrlp:construct.c.page6.stei003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stei003
            #add-point:ON ACTION controlp INFIELD stei003
            {<point name="construct.c.page6.stei003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stei003
            #add-point:BEFORE FIELD stei003
            {<point name="construct.b.page6.stei003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stei003
            
            #add-point:AFTER FIELD stei003
            {<point name="construct.a.page6.stei003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stei005
            #add-point:BEFORE FIELD stei005
            {<point name="construct.b.page6.stei005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stei005
            
            #add-point:AFTER FIELD stei005
            {<point name="construct.a.page6.stei005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.stei005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stei005
            #add-point:ON ACTION controlp INFIELD stei005
            {<point name="construct.c.page6.stei005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stei006
            #add-point:BEFORE FIELD stei006
            {<point name="construct.b.page6.stei006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stei006
            
            #add-point:AFTER FIELD stei006
            {<point name="construct.a.page6.stei006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.stei006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stei006
            #add-point:ON ACTION controlp INFIELD stei006
            {<point name="construct.c.page6.stei006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stei004
            #add-point:BEFORE FIELD stei004
            {<point name="construct.b.page6.stei004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stei004
            
            #add-point:AFTER FIELD stei004
            {<point name="construct.a.page6.stei004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.stei004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stei004
            #add-point:ON ACTION controlp INFIELD stei004
            {<point name="construct.c.page6.stei004" />}
            #END add-point
 
         #Ctrlp:construct.c.page6.stei010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stei010
            #add-point:ON ACTION controlp INFIELD stei010
            {<point name="construct.c.page6.stei010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stei010
            #add-point:BEFORE FIELD stei010
            {<point name="construct.b.page6.stei010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stei010
            
            #add-point:AFTER FIELD stei010
            {<point name="construct.a.page6.stei010" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stei007
            #add-point:BEFORE FIELD stei007
            {<point name="construct.b.page6.stei007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stei007
            
            #add-point:AFTER FIELD stei007
            {<point name="construct.a.page6.stei007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.stei007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stei007
            #add-point:ON ACTION controlp INFIELD stei007
            {<point name="construct.c.page6.stei007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stei008
            #add-point:BEFORE FIELD stei008
            {<point name="construct.b.page6.stei008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stei008
            
            #add-point:AFTER FIELD stei008
            {<point name="construct.a.page6.stei008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.stei008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stei008
            #add-point:ON ACTION controlp INFIELD stei008
            {<point name="construct.c.page6.stei008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stei009
            #add-point:BEFORE FIELD stei009
            {<point name="construct.b.page6.stei009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stei009
            
            #add-point:AFTER FIELD stei009
            {<point name="construct.a.page6.stei009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.stei009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stei009
            #add-point:ON ACTION controlp INFIELD stei009
            {<point name="construct.c.page6.stei009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steiacti
            #add-point:BEFORE FIELD steiacti
            {<point name="construct.b.page6.steiacti" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steiacti
            
            #add-point:AFTER FIELD steiacti
            {<point name="construct.a.page6.steiacti" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.steiacti
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steiacti
            #add-point:ON ACTION controlp INFIELD steiacti
            {<point name="construct.c.page6.steiacti" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steisite
            #add-point:BEFORE FIELD steisite
            {<point name="construct.b.page6.steisite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steisite
            
            #add-point:AFTER FIELD steisite
            {<point name="construct.a.page6.steisite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.steisite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steisite
            #add-point:ON ACTION controlp INFIELD steisite
            {<point name="construct.c.page6.steisite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steiunit
            #add-point:BEFORE FIELD steiunit
            {<point name="construct.b.page6.steiunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steiunit
            
            #add-point:AFTER FIELD steiunit
            {<point name="construct.a.page6.steiunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.steiunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steiunit
            #add-point:ON ACTION controlp INFIELD steiunit
            {<point name="construct.c.page6.steiunit" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table7 ON stejseq,stej001,stej002,stej003,stej004,stej005,stej006,stejsite,stejunit 

           FROM s_detail7[1].stejseq,s_detail7[1].stej001,s_detail7[1].stej002,s_detail7[1].stej003, 
               s_detail7[1].stej004,s_detail7[1].stej005,s_detail7[1].stej006,s_detail7[1].stejsite, 
               s_detail7[1].stejunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body7.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 7)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stejseq
            #add-point:BEFORE FIELD stejseq
            {<point name="construct.b.page7.stejseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stejseq
            
            #add-point:AFTER FIELD stejseq
            {<point name="construct.a.page7.stejseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.stejseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stejseq
            #add-point:ON ACTION controlp INFIELD stejseq
            {<point name="construct.c.page7.stejseq" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stej001
            #add-point:BEFORE FIELD stej001
            {<point name="construct.b.page7.stej001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stej001
            
            #add-point:AFTER FIELD stej001
            {<point name="construct.a.page7.stej001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.stej001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stej001
            #add-point:ON ACTION controlp INFIELD stej001
            {<point name="construct.c.page7.stej001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stej002
            #add-point:BEFORE FIELD stej002
            {<point name="construct.b.page7.stej002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stej002
            
            #add-point:AFTER FIELD stej002
            {<point name="construct.a.page7.stej002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.stej002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stej002
            #add-point:ON ACTION controlp INFIELD stej002
            {<point name="construct.c.page7.stej002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stej003
            #add-point:BEFORE FIELD stej003
            {<point name="construct.b.page7.stej003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stej003
            
            #add-point:AFTER FIELD stej003
            {<point name="construct.a.page7.stej003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.stej003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stej003
            #add-point:ON ACTION controlp INFIELD stej003
            {<point name="construct.c.page7.stej003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stej004
            #add-point:BEFORE FIELD stej004
            {<point name="construct.b.page7.stej004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stej004
            
            #add-point:AFTER FIELD stej004
            {<point name="construct.a.page7.stej004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.stej004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stej004
            #add-point:ON ACTION controlp INFIELD stej004
            {<point name="construct.c.page7.stej004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stej005
            #add-point:BEFORE FIELD stej005
            {<point name="construct.b.page7.stej005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stej005
            
            #add-point:AFTER FIELD stej005
            {<point name="construct.a.page7.stej005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.stej005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stej005
            #add-point:ON ACTION controlp INFIELD stej005
            {<point name="construct.c.page7.stej005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stej006
            #add-point:BEFORE FIELD stej006
            {<point name="construct.b.page7.stej006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stej006
            
            #add-point:AFTER FIELD stej006
            {<point name="construct.a.page7.stej006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.stej006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stej006
            #add-point:ON ACTION controlp INFIELD stej006
            {<point name="construct.c.page7.stej006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stejsite
            #add-point:BEFORE FIELD stejsite
            {<point name="construct.b.page7.stejsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stejsite
            
            #add-point:AFTER FIELD stejsite
            {<point name="construct.a.page7.stejsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.stejsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stejsite
            #add-point:ON ACTION controlp INFIELD stejsite
            {<point name="construct.c.page7.stejsite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stejunit
            #add-point:BEFORE FIELD stejunit
            {<point name="construct.b.page7.stejunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stejunit
            
            #add-point:AFTER FIELD stejunit
            {<point name="construct.a.page7.stejunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.stejunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stejunit
            #add-point:ON ACTION controlp INFIELD stejunit
            {<point name="construct.c.page7.stejunit" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
      
      CONSTRUCT g_wc2_table8 ON stedseq1,sted001,sted002,sted003,sted003_desc,sted004,sted005,sted006, 
          sted007,sted008,stedsite,stedunit
           FROM s_detail8[1].stedseq1,s_detail8[1].sted001,s_detail8[1].sted002,s_detail8[1].sted003, 
               s_detail8[1].sted003_desc,s_detail8[1].sted004,s_detail8[1].sted005,s_detail8[1].sted006, 
               s_detail8[1].sted007,s_detail8[1].sted008,s_detail8[1].stedsite,s_detail8[1].stedunit 

                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body8.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 8)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stedseq1
            #add-point:BEFORE FIELD stedseq1
            {<point name="construct.b.page8.stedseq1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stedseq1
            
            #add-point:AFTER FIELD stedseq1
            {<point name="construct.a.page8.stedseq1" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page8.stedseq1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stedseq1
            #add-point:ON ACTION controlp INFIELD stedseq1
            {<point name="construct.c.page8.stedseq1" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sted001
            #add-point:BEFORE FIELD sted001
            {<point name="construct.b.page8.sted001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sted001
            
            #add-point:AFTER FIELD sted001
            {<point name="construct.a.page8.sted001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page8.sted001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sted001
            #add-point:ON ACTION controlp INFIELD sted001
            {<point name="construct.c.page8.sted001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sted002
            #add-point:BEFORE FIELD sted002
            {<point name="construct.b.page8.sted002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sted002
            
            #add-point:AFTER FIELD sted002
            {<point name="construct.a.page8.sted002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page8.sted002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sted002
            #add-point:ON ACTION controlp INFIELD sted002
            {<point name="construct.c.page8.sted002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sted003
            #add-point:BEFORE FIELD sted003
            {<point name="construct.b.page8.sted003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sted003
            
            #add-point:AFTER FIELD sted003
            {<point name="construct.a.page8.sted003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page8.sted003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sted003
            #add-point:ON ACTION controlp INFIELD sted003
            {<point name="construct.c.page8.sted003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sted003_desc
            #add-point:BEFORE FIELD sted003_desc
            {<point name="construct.b.page8.sted003_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sted003_desc
            
            #add-point:AFTER FIELD sted003_desc
            {<point name="construct.a.page8.sted003_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page8.sted003_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sted003_desc
            #add-point:ON ACTION controlp INFIELD sted003_desc
            {<point name="construct.c.page8.sted003_desc" />}
            #END add-point
 
         #Ctrlp:construct.c.page8.sted004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sted004
            #add-point:ON ACTION controlp INFIELD sted004
            {<point name="construct.c.page8.sted004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sted004
            #add-point:BEFORE FIELD sted004
            {<point name="construct.b.page8.sted004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sted004
            
            #add-point:AFTER FIELD sted004
            {<point name="construct.a.page8.sted004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sted005
            #add-point:BEFORE FIELD sted005
            {<point name="construct.b.page8.sted005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sted005
            
            #add-point:AFTER FIELD sted005
            {<point name="construct.a.page8.sted005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page8.sted005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sted005
            #add-point:ON ACTION controlp INFIELD sted005
            {<point name="construct.c.page8.sted005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sted006
            #add-point:BEFORE FIELD sted006
            {<point name="construct.b.page8.sted006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sted006
            
            #add-point:AFTER FIELD sted006
            {<point name="construct.a.page8.sted006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page8.sted006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sted006
            #add-point:ON ACTION controlp INFIELD sted006
            {<point name="construct.c.page8.sted006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sted007
            #add-point:BEFORE FIELD sted007
            {<point name="construct.b.page8.sted007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sted007
            
            #add-point:AFTER FIELD sted007
            {<point name="construct.a.page8.sted007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page8.sted007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sted007
            #add-point:ON ACTION controlp INFIELD sted007
            {<point name="construct.c.page8.sted007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sted008
            #add-point:BEFORE FIELD sted008
            {<point name="construct.b.page8.sted008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sted008
            
            #add-point:AFTER FIELD sted008
            {<point name="construct.a.page8.sted008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page8.sted008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sted008
            #add-point:ON ACTION controlp INFIELD sted008
            {<point name="construct.c.page8.sted008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stedsite
            #add-point:BEFORE FIELD stedsite
            {<point name="construct.b.page8.stedsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stedsite
            
            #add-point:AFTER FIELD stedsite
            {<point name="construct.a.page8.stedsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page8.stedsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stedsite
            #add-point:ON ACTION controlp INFIELD stedsite
            {<point name="construct.c.page8.stedsite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stedunit
            #add-point:BEFORE FIELD stedunit
            {<point name="construct.b.page8.stedunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stedunit
            
            #add-point:AFTER FIELD stedunit
            {<point name="construct.a.page8.stedunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page8.stedunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stedunit
            #add-point:ON ACTION controlp INFIELD stedunit
            {<point name="construct.c.page8.stedunit" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table9 ON stef001,stef003,stef004,stef005,stef005_desc,stef006,stef007,stef008, 
          stef009,stefsite,stefunit
           FROM s_detail9[1].stef001,s_detail9[1].stef003,s_detail9[1].stef004,s_detail9[1].stef005, 
               s_detail9[1].stef005_desc,s_detail9[1].stef006,s_detail9[1].stef007,s_detail9[1].stef008, 
               s_detail9[1].stef009,s_detail9[1].stefsite,s_detail9[1].stefunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body9.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 9)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stef001
            #add-point:BEFORE FIELD stef001
            {<point name="construct.b.page9.stef001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stef001
            
            #add-point:AFTER FIELD stef001
            {<point name="construct.a.page9.stef001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page9.stef001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stef001
            #add-point:ON ACTION controlp INFIELD stef001
            {<point name="construct.c.page9.stef001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stef003
            #add-point:BEFORE FIELD stef003
            {<point name="construct.b.page9.stef003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stef003
            
            #add-point:AFTER FIELD stef003
            {<point name="construct.a.page9.stef003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page9.stef003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stef003
            #add-point:ON ACTION controlp INFIELD stef003
            {<point name="construct.c.page9.stef003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stef004
            #add-point:BEFORE FIELD stef004
            {<point name="construct.b.page9.stef004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stef004
            
            #add-point:AFTER FIELD stef004
            {<point name="construct.a.page9.stef004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page9.stef004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stef004
            #add-point:ON ACTION controlp INFIELD stef004
            {<point name="construct.c.page9.stef004" />}
            #END add-point
 
         #Ctrlp:construct.c.page9.stef005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stef005
            #add-point:ON ACTION controlp INFIELD stef005
            {<point name="construct.c.page9.stef005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stef005
            #add-point:BEFORE FIELD stef005
            {<point name="construct.b.page9.stef005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stef005
            
            #add-point:AFTER FIELD stef005
            {<point name="construct.a.page9.stef005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stef005_desc
            #add-point:BEFORE FIELD stef005_desc
            {<point name="construct.b.page9.stef005_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stef005_desc
            
            #add-point:AFTER FIELD stef005_desc
            {<point name="construct.a.page9.stef005_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page9.stef005_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stef005_desc
            #add-point:ON ACTION controlp INFIELD stef005_desc
            {<point name="construct.c.page9.stef005_desc" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stef006
            #add-point:BEFORE FIELD stef006
            {<point name="construct.b.page9.stef006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stef006
            
            #add-point:AFTER FIELD stef006
            {<point name="construct.a.page9.stef006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page9.stef006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stef006
            #add-point:ON ACTION controlp INFIELD stef006
            {<point name="construct.c.page9.stef006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stef007
            #add-point:BEFORE FIELD stef007
            {<point name="construct.b.page9.stef007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stef007
            
            #add-point:AFTER FIELD stef007
            {<point name="construct.a.page9.stef007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page9.stef007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stef007
            #add-point:ON ACTION controlp INFIELD stef007
            {<point name="construct.c.page9.stef007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stef008
            #add-point:BEFORE FIELD stef008
            {<point name="construct.b.page9.stef008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stef008
            
            #add-point:AFTER FIELD stef008
            {<point name="construct.a.page9.stef008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page9.stef008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stef008
            #add-point:ON ACTION controlp INFIELD stef008
            {<point name="construct.c.page9.stef008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stef009
            #add-point:BEFORE FIELD stef009
            {<point name="construct.b.page9.stef009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stef009
            
            #add-point:AFTER FIELD stef009
            {<point name="construct.a.page9.stef009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page9.stef009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stef009
            #add-point:ON ACTION controlp INFIELD stef009
            {<point name="construct.c.page9.stef009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stefsite
            #add-point:BEFORE FIELD stefsite
            {<point name="construct.b.page9.stefsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stefsite
            
            #add-point:AFTER FIELD stefsite
            {<point name="construct.a.page9.stefsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page9.stefsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stefsite
            #add-point:ON ACTION controlp INFIELD stefsite
            {<point name="construct.c.page9.stefsite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stefunit
            #add-point:BEFORE FIELD stefunit
            {<point name="construct.b.page9.stefunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stefunit
            
            #add-point:AFTER FIELD stefunit
            {<point name="construct.a.page9.stefunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page9.stefunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stefunit
            #add-point:ON ACTION controlp INFIELD stefunit
            {<point name="construct.c.page9.stefunit" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
            INITIALIZE g_wc2_table2 TO NULL
 
            INITIALIZE g_wc2_table3 TO NULL
 
            INITIALIZE g_wc2_table4 TO NULL
 
            INITIALIZE g_wc2_table5 TO NULL
 
            INITIALIZE g_wc2_table6 TO NULL
 
            INITIALIZE g_wc2_table7 TO NULL
 
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "stea_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "steb_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "stec_t" 
                     LET g_wc2_table2 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "stee_t" 
                     LET g_wc2_table3 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "steg_t" 
                     LET g_wc2_table4 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "steh_t" 
                     LET g_wc2_table5 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "stei_t" 
                     LET g_wc2_table6 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "stej_t" 
                     LET g_wc2_table7 = la_wc[li_idx].wc
 
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
   IF g_wc2_table4 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
   END IF
 
   IF g_wc2_table5 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
   END IF
 
   IF g_wc2_table6 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
   END IF
 
   IF g_wc2_table7 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
   END IF
 
 
 
   IF g_wc2_table8 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table8
   END IF
 
   IF g_wc2_table9 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table9
   END IF
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="astt401.default_search" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION astt401_default_search()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point  
   #add-point:default_search段define(客製用)
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " steadocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
         INITIALIZE g_wc2_table2 TO NULL
 
         INITIALIZE g_wc2_table3 TO NULL
 
         INITIALIZE g_wc2_table4 TO NULL
 
         INITIALIZE g_wc2_table5 TO NULL
 
         INITIALIZE g_wc2_table6 TO NULL
 
         INITIALIZE g_wc2_table7 TO NULL
 
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "stea_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "steb_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "stec_t" 
                  LET g_wc2_table2 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "stee_t" 
                  LET g_wc2_table3 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "steg_t" 
                  LET g_wc2_table4 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "steh_t" 
                  LET g_wc2_table5 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "stei_t" 
                  LET g_wc2_table6 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "stej_t" 
                  LET g_wc2_table7 = la_wc[li_idx].wc
 
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
            OR NOT cl_null(g_wc2_table2)
 
            OR NOT cl_null(g_wc2_table3)
 
            OR NOT cl_null(g_wc2_table4)
 
            OR NOT cl_null(g_wc2_table5)
 
            OR NOT cl_null(g_wc2_table6)
 
            OR NOT cl_null(g_wc2_table7)
 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
            IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
            END IF
 
            IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
            END IF
 
            IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
            END IF
 
            IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
            END IF
 
            IF g_wc2_table6 <> " 1=1" AND NOT cl_null(g_wc2_table6) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
            END IF
 
            IF g_wc2_table7 <> " 1=1" AND NOT cl_null(g_wc2_table7) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
            END IF
 
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
]]>
  </section>
  <section id="astt401.delete" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION astt401_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define" edit="s"/>}
   #end add-point     
   #add-point:delete段define(客製用)
   {<point name="delete.define_customerization" edit="c"/>}
   #end add-point     
   
   IF g_stea_m.steadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   LET g_master_multi_table_t.stealdocno = g_stea_m.steadocno
LET g_master_multi_table_t.steal002 = g_stea_m.steal002
LET g_master_multi_table_t.steal003 = g_stea_m.steal003
 
   
   CALL s_transaction_begin()
 
   OPEN astt401_cl USING g_enterprise,g_stea_m.steadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN astt401_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE astt401_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE astt401_master_referesh USING g_stea_m.steadocno INTO g_stea_m.steasite,g_stea_m.steadocdt, 
       g_stea_m.steadocno,g_stea_m.stea000,g_stea_m.steaunit,g_stea_m.stea001,g_stea_m.stea002,g_stea_m.stea003, 
       g_stea_m.stea004,g_stea_m.stea009,g_stea_m.steastus,g_stea_m.stea005,g_stea_m.stea006,g_stea_m.stea007, 
       g_stea_m.stea008,g_stea_m.stea047,g_stea_m.stea048,g_stea_m.stea044,g_stea_m.stea010,g_stea_m.stea011, 
       g_stea_m.stea012,g_stea_m.stea013,g_stea_m.stea014,g_stea_m.stea015,g_stea_m.stea016,g_stea_m.stea045, 
       g_stea_m.stea046,g_stea_m.stea029,g_stea_m.stea030,g_stea_m.stea032,g_stea_m.stea033,g_stea_m.stea034, 
       g_stea_m.stea035,g_stea_m.stea036,g_stea_m.stea037,g_stea_m.stea038,g_stea_m.stea039,g_stea_m.stea040, 
       g_stea_m.stea028,g_stea_m.stea017,g_stea_m.stea021,g_stea_m.stea024,g_stea_m.stea018,g_stea_m.stea049, 
       g_stea_m.stea025,g_stea_m.stea019,g_stea_m.stea022,g_stea_m.stea026,g_stea_m.stea020,g_stea_m.stea023, 
       g_stea_m.stea027,g_stea_m.stea031,g_stea_m.stea042,g_stea_m.steaownid,g_stea_m.steaowndp,g_stea_m.steacrtid, 
       g_stea_m.steacrtdp,g_stea_m.steacrtdt,g_stea_m.steamodid,g_stea_m.steamoddt,g_stea_m.steacnfid, 
       g_stea_m.steacnfdt,g_stea_m.steasite_desc,g_stea_m.steaunit_desc,g_stea_m.stea006_desc,g_stea_m.stea047_desc, 
       g_stea_m.stea048_desc,g_stea_m.stea044_desc,g_stea_m.stea010_desc,g_stea_m.stea011_desc,g_stea_m.stea012_desc, 
       g_stea_m.stea013_desc,g_stea_m.stea014_desc,g_stea_m.stea015_desc,g_stea_m.stea045_desc,g_stea_m.stea032_desc, 
       g_stea_m.stea035_desc,g_stea_m.stea036_desc,g_stea_m.stea037_desc,g_stea_m.stea038_desc,g_stea_m.steaownid_desc, 
       g_stea_m.steaowndp_desc,g_stea_m.steacrtid_desc,g_stea_m.steacrtdp_desc,g_stea_m.steamodid_desc, 
       g_stea_m.steacnfid_desc
   
   #檢查是否允許此動作
   IF NOT astt401_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_stea_m_mask_o.* =  g_stea_m.*
   CALL astt401_stea_t_mask()
   LET g_stea_m_mask_n.* =  g_stea_m.*
   
   CALL astt401_show()
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL astt401_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
  
  
      #資料備份
      LET g_steadocno_t = g_stea_m.steadocno
 
 
      DELETE FROM stea_t
       WHERE steaent = g_enterprise AND steadocno = g_stea_m.steadocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_stea_m.steadocno 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM steb_t
       WHERE stebent = g_enterprise AND stebdocno = g_stea_m.steadocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "steb_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM stec_t
       WHERE stecent = g_enterprise AND
             stecdocno = g_stea_m.steadocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stec_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete3" mark="Y"/>}
      #end add-point
      DELETE FROM stee_t
       WHERE steeent = g_enterprise AND
             steedocno = g_stea_m.steadocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stee_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete3"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete4" mark="Y"/>}
      #end add-point
      DELETE FROM steg_t
       WHERE stegent = g_enterprise AND
             stegdocno = g_stea_m.steadocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete4"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "steg_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete4"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete5" mark="Y"/>}
      #end add-point
      DELETE FROM steh_t
       WHERE stehent = g_enterprise AND
             stehdocno = g_stea_m.steadocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete5"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "steh_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete5"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete6" mark="Y"/>}
      #end add-point
      DELETE FROM stei_t
       WHERE steient = g_enterprise AND
             steidocno = g_stea_m.steadocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete6"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stei_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete6"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete7" mark="Y"/>}
      #end add-point
      DELETE FROM stej_t
       WHERE stejent = g_enterprise AND
             stejdocno = g_stea_m.steadocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete7"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stej_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete7"/>}
      #end add-point
 
 
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete8" mark="Y"/>}
      #end add-point
      DELETE FROM sted_t
       WHERE stedent = g_enterprise AND
             steddocno = g_stea_m.steadocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete8"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "sted_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete8"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete9" mark="Y"/>}
      #end add-point
      DELETE FROM stef_t
       WHERE stefent = g_enterprise AND
             stefdocno = g_stea_m.steadocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete9"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stef_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete9"/>}
      #end add-point
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE astt401_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_steb_d.clear() 
      CALL g_steb2_d.clear()       
      CALL g_steb3_d.clear()       
      CALL g_steb4_d.clear()       
      CALL g_steb5_d.clear()       
      CALL g_steb6_d.clear()       
      CALL g_steb7_d.clear()       
      CALL g_steb8_d.clear()       
      CALL g_steb9_d.clear()       
 
     
      CALL astt401_ui_browser_refresh()  
      #CALL astt401_ui_headershow()  
      #CALL astt401_ui_detailshow()
      
      IF g_browser_cnt > 0 THEN 
         #CALL astt401_browser_fill("")
         CALL astt401_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
 
      #add-point:多語言刪除
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_enterprise
   LET l_field_keys[01] = 'stealent'
   LET l_var_keys_bak[02] = g_master_multi_table_t.stealdocno
   LET l_field_keys[02] = 'stealdocno'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'steal_t')
 
      
      #單身多語言刪除
      
      
 
      
 
      
 
      
 
      
 
      
 
 
      
 
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   CLOSE astt401_cl
 
   #功能已完成,通報訊息中心
   CALL astt401_msgcentre_notify('')
    
END FUNCTION
]]>
  </section>
  <section id="astt401.delete_b" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION astt401_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define(客製用)
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point     
 
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM steb_t
       WHERE stebent = g_enterprise AND
         stebdocno = ps_keys_bak[1] AND stebseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_steb_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM stec_t
       WHERE stecent = g_enterprise AND
             stecdocno = ps_keys_bak[1] AND stecseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stec_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_steb2_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete3" mark="Y"/>}
      #end add-point    
      DELETE FROM stee_t
       WHERE steeent = g_enterprise AND
             steedocno = ps_keys_bak[1] AND steeseq = ps_keys_bak[2] AND stee002 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete3"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stee_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_steb3_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete3"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete4" mark="Y"/>}
      #end add-point    
      DELETE FROM steg_t
       WHERE stegent = g_enterprise AND
             stegdocno = ps_keys_bak[1] AND stegseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete4"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "steg_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_steb4_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete4"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete5" mark="Y"/>}
      #end add-point    
      DELETE FROM steh_t
       WHERE stehent = g_enterprise AND
             stehdocno = ps_keys_bak[1] AND stehseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete5"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "steh_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'5'" THEN 
         CALL g_steb5_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete5"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'6',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete6" mark="Y"/>}
      #end add-point    
      DELETE FROM stei_t
       WHERE steient = g_enterprise AND
             steidocno = ps_keys_bak[1] AND steiseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete6"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stei_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'6'" THEN 
         CALL g_steb6_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete6"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'7',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete7" mark="Y"/>}
      #end add-point    
      DELETE FROM stej_t
       WHERE stejent = g_enterprise AND
             stejdocno = ps_keys_bak[1] AND stejseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete7"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stej_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'7'" THEN 
         CALL g_steb7_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete7"/>}
      #end add-point    
   END IF
 
 
   
   LET ls_group = "'8',"
   #判斷是否是同一群組的table2
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete8" mark="Y"/>}
      #end add-point    
      DELETE FROM sted_t
       WHERE stedent = g_enterprise AND
             steddocno = ps_keys_bak[1] AND stedseq = ps_keys_bak[2] AND stedseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete8"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "sted_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
    
      LET li_idx = g_detail_idx2
      IF ps_page <> "'8'" THEN 
         CALL g_steb8_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete8"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'9',"
   #判斷是否是同一群組的table2
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete9" mark="Y"/>}
      #end add-point    
      DELETE FROM stef_t
       WHERE stefent = g_enterprise AND
             stefdocno = ps_keys_bak[1] AND stefseq = ps_keys_bak[2] AND stef002 = ps_keys_bak[3] AND stef003 = ps_keys_bak[4]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete9"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stef_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
    
      LET li_idx = g_detail_idx2
      IF ps_page <> "'9'" THEN 
         CALL g_steb9_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete9"/>}
      #end add-point    
   END IF
 
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="astt401.description" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000159
#+ 
#+ Filename...: astt401
#+ Description: 專櫃合同異動申請作業
#+ Creator....: 01533(2015-04-26 16:06:49)
#+ Modifier...: 01533(2015-05-12 11:04:29) -SD/PR-
]]>
  </section>
  <section id="astt401.detail_reproduce" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION astt401_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE steb_t.*
   DEFINE l_detail2    RECORD LIKE stec_t.*
 
   DEFINE l_detail3    RECORD LIKE stee_t.*
 
   DEFINE l_detail4    RECORD LIKE steg_t.*
 
   DEFINE l_detail5    RECORD LIKE steh_t.*
 
   DEFINE l_detail6    RECORD LIKE stei_t.*
 
   DEFINE l_detail7    RECORD LIKE stej_t.*
 
 
   DEFINE l_detail8    RECORD LIKE sted_t.*
 
   DEFINE l_detail9    RECORD LIKE stef_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define" edit="s"/>}
   #end add-point    
   #add-point:delete段define(客製用)
   {<point name="detail_reproduce.define_customerization" edit="c"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE astt401_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE astt401_detail AS ",
                "SELECT * FROM steb_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO astt401_detail SELECT * FROM steb_t 
                                         WHERE stebent = g_enterprise AND stebdocno = g_steadocno_t
 
   
   #將key修正為調整後   
   UPDATE astt401_detail 
      #更新key欄位
      SET stebdocno = g_stea_m.steadocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO steb_t SELECT * FROM astt401_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astt401_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE astt401_detail AS ",
      "SELECT * FROM stec_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO astt401_detail SELECT * FROM stec_t
                                         WHERE stecent = g_enterprise AND stecdocno = g_steadocno_t
 
 
   #將key修正為調整後   
   UPDATE astt401_detail SET stecdocno = g_stea_m.steadocno
 
  
   #將資料塞回原table   
   INSERT INTO stec_t SELECT * FROM astt401_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astt401_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table3.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE astt401_detail AS ",
      "SELECT * FROM stee_t "
   PREPARE repro_tbl3 FROM ls_sql
   EXECUTE repro_tbl3
   FREE repro_tbl3
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO astt401_detail SELECT * FROM stee_t
                                         WHERE steeent = g_enterprise AND steedocno = g_steadocno_t
 
 
   #將key修正為調整後   
   UPDATE astt401_detail SET steedocno = g_stea_m.steadocno
 
  
   #將資料塞回原table   
   INSERT INTO stee_t SELECT * FROM astt401_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table3.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astt401_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table3.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table4.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE astt401_detail AS ",
      "SELECT * FROM steg_t "
   PREPARE repro_tbl4 FROM ls_sql
   EXECUTE repro_tbl4
   FREE repro_tbl4
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO astt401_detail SELECT * FROM steg_t
                                         WHERE stegent = g_enterprise AND stegdocno = g_steadocno_t
 
 
   #將key修正為調整後   
   UPDATE astt401_detail SET stegdocno = g_stea_m.steadocno
 
  
   #將資料塞回原table   
   INSERT INTO steg_t SELECT * FROM astt401_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table4.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astt401_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table4.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table5.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE astt401_detail AS ",
      "SELECT * FROM steh_t "
   PREPARE repro_tbl5 FROM ls_sql
   EXECUTE repro_tbl5
   FREE repro_tbl5
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO astt401_detail SELECT * FROM steh_t
                                         WHERE stehent = g_enterprise AND stehdocno = g_steadocno_t
 
 
   #將key修正為調整後   
   UPDATE astt401_detail SET stehdocno = g_stea_m.steadocno
 
  
   #將資料塞回原table   
   INSERT INTO steh_t SELECT * FROM astt401_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table5.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astt401_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table5.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table6.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE astt401_detail AS ",
      "SELECT * FROM stei_t "
   PREPARE repro_tbl6 FROM ls_sql
   EXECUTE repro_tbl6
   FREE repro_tbl6
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO astt401_detail SELECT * FROM stei_t
                                         WHERE steient = g_enterprise AND steidocno = g_steadocno_t
 
 
   #將key修正為調整後   
   UPDATE astt401_detail SET steidocno = g_stea_m.steadocno
 
  
   #將資料塞回原table   
   INSERT INTO stei_t SELECT * FROM astt401_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table6.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astt401_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table6.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table7.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE astt401_detail AS ",
      "SELECT * FROM stej_t "
   PREPARE repro_tbl7 FROM ls_sql
   EXECUTE repro_tbl7
   FREE repro_tbl7
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO astt401_detail SELECT * FROM stej_t
                                         WHERE stejent = g_enterprise AND stejdocno = g_steadocno_t
 
 
   #將key修正為調整後   
   UPDATE astt401_detail SET stejdocno = g_stea_m.steadocno
 
  
   #將資料塞回原table   
   INSERT INTO stej_t SELECT * FROM astt401_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table7.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astt401_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table7.a_insert"/>}
   #end add-point
 
 
   
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table8.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE astt401_detail AS ",
      "SELECT * FROM sted_t "
   PREPARE repro_tbl8 FROM ls_sql
   EXECUTE repro_tbl8
   FREE repro_tbl8
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO astt401_detail SELECT * FROM sted_t
                                         WHERE stedent = g_enterprise AND steddocno = g_steadocno_t
 
 
   #將key修正為調整後   
   UPDATE astt401_detail SET steddocno = g_stea_m.steadocno
 
  
   #將資料塞回原table   
   INSERT INTO sted_t SELECT * FROM astt401_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table8.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astt401_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table8.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table9.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE astt401_detail AS ",
      "SELECT * FROM stef_t "
   PREPARE repro_tbl9 FROM ls_sql
   EXECUTE repro_tbl9
   FREE repro_tbl9
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO astt401_detail SELECT * FROM stef_t
                                         WHERE stefent = g_enterprise AND stefdocno = g_steadocno_t
 
 
   #將key修正為調整後   
   UPDATE astt401_detail SET stefdocno = g_stea_m.steadocno
 
  
   #將資料塞回原table   
   INSERT INTO stef_t SELECT * FROM astt401_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table9.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astt401_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table9.a_insert"/>}
   #end add-point
 
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_steadocno_t = g_stea_m.steadocno
 
   
END FUNCTION
]]>
  </section>
  <section id="astt401.detail_show" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION astt401_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define" edit="s"/>}
   #end add-point  
   #add-point:detail_show段define(客製用)
   {<point name="detail_show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="astt401.fetch" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION astt401_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define" edit="s"/>}
   #end add-point    
   #add-point:fetch段define(客製用)
   {<point name="fetch.define_customerization" edit="c"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_stea_m.steadocno = g_browser[g_current_idx].b_steadocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE astt401_master_referesh USING g_stea_m.steadocno INTO g_stea_m.steasite,g_stea_m.steadocdt, 
       g_stea_m.steadocno,g_stea_m.stea000,g_stea_m.steaunit,g_stea_m.stea001,g_stea_m.stea002,g_stea_m.stea003, 
       g_stea_m.stea004,g_stea_m.stea009,g_stea_m.steastus,g_stea_m.stea005,g_stea_m.stea006,g_stea_m.stea007, 
       g_stea_m.stea008,g_stea_m.stea047,g_stea_m.stea048,g_stea_m.stea044,g_stea_m.stea010,g_stea_m.stea011, 
       g_stea_m.stea012,g_stea_m.stea013,g_stea_m.stea014,g_stea_m.stea015,g_stea_m.stea016,g_stea_m.stea045, 
       g_stea_m.stea046,g_stea_m.stea029,g_stea_m.stea030,g_stea_m.stea032,g_stea_m.stea033,g_stea_m.stea034, 
       g_stea_m.stea035,g_stea_m.stea036,g_stea_m.stea037,g_stea_m.stea038,g_stea_m.stea039,g_stea_m.stea040, 
       g_stea_m.stea028,g_stea_m.stea017,g_stea_m.stea021,g_stea_m.stea024,g_stea_m.stea018,g_stea_m.stea049, 
       g_stea_m.stea025,g_stea_m.stea019,g_stea_m.stea022,g_stea_m.stea026,g_stea_m.stea020,g_stea_m.stea023, 
       g_stea_m.stea027,g_stea_m.stea031,g_stea_m.stea042,g_stea_m.steaownid,g_stea_m.steaowndp,g_stea_m.steacrtid, 
       g_stea_m.steacrtdp,g_stea_m.steacrtdt,g_stea_m.steamodid,g_stea_m.steamoddt,g_stea_m.steacnfid, 
       g_stea_m.steacnfdt,g_stea_m.steasite_desc,g_stea_m.steaunit_desc,g_stea_m.stea006_desc,g_stea_m.stea047_desc, 
       g_stea_m.stea048_desc,g_stea_m.stea044_desc,g_stea_m.stea010_desc,g_stea_m.stea011_desc,g_stea_m.stea012_desc, 
       g_stea_m.stea013_desc,g_stea_m.stea014_desc,g_stea_m.stea015_desc,g_stea_m.stea045_desc,g_stea_m.stea032_desc, 
       g_stea_m.stea035_desc,g_stea_m.stea036_desc,g_stea_m.stea037_desc,g_stea_m.stea038_desc,g_stea_m.steaownid_desc, 
       g_stea_m.steaowndp_desc,g_stea_m.steacrtid_desc,g_stea_m.steacrtdp_desc,g_stea_m.steamodid_desc, 
       g_stea_m.steacnfid_desc
   
   #遮罩相關處理
   LET g_stea_m_mask_o.* =  g_stea_m.*
   CALL astt401_stea_t_mask()
   LET g_stea_m_mask_n.* =  g_stea_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL astt401_set_act_visible()   
   CALL astt401_set_act_no_visible()
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_stea_m_t.* = g_stea_m.*
   LET g_stea_m_o.* = g_stea_m.*
   
   LET g_data_owner = g_stea_m.steaownid      
   LET g_data_dept  = g_stea_m.steaowndp
   
   #重新顯示   
   CALL astt401_show()
 
   #應用 a56 樣板自動產生(Version:2)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
END FUNCTION
]]>
  </section>
  <section id="astt401.fill_chk" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION astt401_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define" edit="s"/>}
   #end add-point
   #add-point:fill_chk段define(客製用)
   {<point name="fill_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1')  AND 
      (cl_null(g_wc2_table4) OR g_wc2_table4.trim() = '1=1')  AND 
      (cl_null(g_wc2_table5) OR g_wc2_table5.trim() = '1=1')  AND 
      (cl_null(g_wc2_table6) OR g_wc2_table6.trim() = '1=1')  AND 
      (cl_null(g_wc2_table7) OR g_wc2_table7.trim() = '1=1')  AND 
      (cl_null(g_wc2_table8) OR g_wc2_table8.trim() = '1=1')  AND 
      (cl_null(g_wc2_table9) OR g_wc2_table9.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="astt401.filter" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a50 樣板自動產生(Version:5)
#+ filter過濾功能
PRIVATE FUNCTION astt401_filter()
   #add-point:filter段define
   {<point name="filter.define" edit="s"/>}
   #end add-point   
   #add-point:filter段define
   {<point name="filter.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON steadocno,steadocdt,stea000,stea001,stea002,stea003,stea004,stea005,stea006, 
          stea007,stea008,stea009,stea010,stea011,stea012,stea013,stea014,stea015,stea016,stea017,stea018, 
          stea019,stea020,stea021,stea022,stea023,stea024,stea025,stea026,stea027,stea028,stea029,stea030, 
          stea031,stea032,stea033,stea034,stea035,stea036,stea037,stea038,stea039,stea040,stea041,stea042, 
          stea043,stea044,stea045,stea046,stea047,stea048,stea049,steaunit,steasite
                          FROM s_browse[1].b_steadocno,s_browse[1].b_steadocdt,s_browse[1].b_stea000, 
                              s_browse[1].b_stea001,s_browse[1].b_stea002,s_browse[1].b_stea003,s_browse[1].b_stea004, 
                              s_browse[1].b_stea005,s_browse[1].b_stea006,s_browse[1].b_stea007,s_browse[1].b_stea008, 
                              s_browse[1].b_stea009,s_browse[1].b_stea010,s_browse[1].b_stea011,s_browse[1].b_stea012, 
                              s_browse[1].b_stea013,s_browse[1].b_stea014,s_browse[1].b_stea015,s_browse[1].b_stea016, 
                              s_browse[1].b_stea017,s_browse[1].b_stea018,s_browse[1].b_stea019,s_browse[1].b_stea020, 
                              s_browse[1].b_stea021,s_browse[1].b_stea022,s_browse[1].b_stea023,s_browse[1].b_stea024, 
                              s_browse[1].b_stea025,s_browse[1].b_stea026,s_browse[1].b_stea027,s_browse[1].b_stea028, 
                              s_browse[1].b_stea029,s_browse[1].b_stea030,s_browse[1].b_stea031,s_browse[1].b_stea032, 
                              s_browse[1].b_stea033,s_browse[1].b_stea034,s_browse[1].b_stea035,s_browse[1].b_stea036, 
                              s_browse[1].b_stea037,s_browse[1].b_stea038,s_browse[1].b_stea039,s_browse[1].b_stea040, 
                              s_browse[1].b_stea041,s_browse[1].b_stea042,s_browse[1].b_stea043,s_browse[1].b_stea044, 
                              s_browse[1].b_stea045,s_browse[1].b_stea046,s_browse[1].b_stea047,s_browse[1].b_stea048, 
                              s_browse[1].b_stea049,s_browse[1].b_steaunit,s_browse[1].b_steasite
 
         BEFORE CONSTRUCT
               DISPLAY astt401_filter_parser('steadocno') TO s_browse[1].b_steadocno
            DISPLAY astt401_filter_parser('steadocdt') TO s_browse[1].b_steadocdt
            DISPLAY astt401_filter_parser('stea000') TO s_browse[1].b_stea000
            DISPLAY astt401_filter_parser('stea001') TO s_browse[1].b_stea001
            DISPLAY astt401_filter_parser('stea002') TO s_browse[1].b_stea002
            DISPLAY astt401_filter_parser('stea003') TO s_browse[1].b_stea003
            DISPLAY astt401_filter_parser('stea004') TO s_browse[1].b_stea004
            DISPLAY astt401_filter_parser('stea005') TO s_browse[1].b_stea005
            DISPLAY astt401_filter_parser('stea006') TO s_browse[1].b_stea006
            DISPLAY astt401_filter_parser('stea007') TO s_browse[1].b_stea007
            DISPLAY astt401_filter_parser('stea008') TO s_browse[1].b_stea008
            DISPLAY astt401_filter_parser('stea009') TO s_browse[1].b_stea009
            DISPLAY astt401_filter_parser('stea010') TO s_browse[1].b_stea010
            DISPLAY astt401_filter_parser('stea011') TO s_browse[1].b_stea011
            DISPLAY astt401_filter_parser('stea012') TO s_browse[1].b_stea012
            DISPLAY astt401_filter_parser('stea013') TO s_browse[1].b_stea013
            DISPLAY astt401_filter_parser('stea014') TO s_browse[1].b_stea014
            DISPLAY astt401_filter_parser('stea015') TO s_browse[1].b_stea015
            DISPLAY astt401_filter_parser('stea016') TO s_browse[1].b_stea016
            DISPLAY astt401_filter_parser('stea017') TO s_browse[1].b_stea017
            DISPLAY astt401_filter_parser('stea018') TO s_browse[1].b_stea018
            DISPLAY astt401_filter_parser('stea019') TO s_browse[1].b_stea019
            DISPLAY astt401_filter_parser('stea020') TO s_browse[1].b_stea020
            DISPLAY astt401_filter_parser('stea021') TO s_browse[1].b_stea021
            DISPLAY astt401_filter_parser('stea022') TO s_browse[1].b_stea022
            DISPLAY astt401_filter_parser('stea023') TO s_browse[1].b_stea023
            DISPLAY astt401_filter_parser('stea024') TO s_browse[1].b_stea024
            DISPLAY astt401_filter_parser('stea025') TO s_browse[1].b_stea025
            DISPLAY astt401_filter_parser('stea026') TO s_browse[1].b_stea026
            DISPLAY astt401_filter_parser('stea027') TO s_browse[1].b_stea027
            DISPLAY astt401_filter_parser('stea028') TO s_browse[1].b_stea028
            DISPLAY astt401_filter_parser('stea029') TO s_browse[1].b_stea029
            DISPLAY astt401_filter_parser('stea030') TO s_browse[1].b_stea030
            DISPLAY astt401_filter_parser('stea031') TO s_browse[1].b_stea031
            DISPLAY astt401_filter_parser('stea032') TO s_browse[1].b_stea032
            DISPLAY astt401_filter_parser('stea033') TO s_browse[1].b_stea033
            DISPLAY astt401_filter_parser('stea034') TO s_browse[1].b_stea034
            DISPLAY astt401_filter_parser('stea035') TO s_browse[1].b_stea035
            DISPLAY astt401_filter_parser('stea036') TO s_browse[1].b_stea036
            DISPLAY astt401_filter_parser('stea037') TO s_browse[1].b_stea037
            DISPLAY astt401_filter_parser('stea038') TO s_browse[1].b_stea038
            DISPLAY astt401_filter_parser('stea039') TO s_browse[1].b_stea039
            DISPLAY astt401_filter_parser('stea040') TO s_browse[1].b_stea040
            DISPLAY astt401_filter_parser('stea041') TO s_browse[1].b_stea041
            DISPLAY astt401_filter_parser('stea042') TO s_browse[1].b_stea042
            DISPLAY astt401_filter_parser('stea043') TO s_browse[1].b_stea043
            DISPLAY astt401_filter_parser('stea044') TO s_browse[1].b_stea044
            DISPLAY astt401_filter_parser('stea045') TO s_browse[1].b_stea045
            DISPLAY astt401_filter_parser('stea046') TO s_browse[1].b_stea046
            DISPLAY astt401_filter_parser('stea047') TO s_browse[1].b_stea047
            DISPLAY astt401_filter_parser('stea048') TO s_browse[1].b_stea048
            DISPLAY astt401_filter_parser('stea049') TO s_browse[1].b_stea049
            DISPLAY astt401_filter_parser('steaunit') TO s_browse[1].b_steaunit
            DISPLAY astt401_filter_parser('steasite') TO s_browse[1].b_steasite
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL astt401_filter_show('steadocno')
   CALL astt401_filter_show('steadocdt')
   CALL astt401_filter_show('stea000')
   CALL astt401_filter_show('stea001')
   CALL astt401_filter_show('stea002')
   CALL astt401_filter_show('stea003')
   CALL astt401_filter_show('stea004')
   CALL astt401_filter_show('stea005')
   CALL astt401_filter_show('stea006')
   CALL astt401_filter_show('stea007')
   CALL astt401_filter_show('stea008')
   CALL astt401_filter_show('stea009')
   CALL astt401_filter_show('stea010')
   CALL astt401_filter_show('stea011')
   CALL astt401_filter_show('stea012')
   CALL astt401_filter_show('stea013')
   CALL astt401_filter_show('stea014')
   CALL astt401_filter_show('stea015')
   CALL astt401_filter_show('stea016')
   CALL astt401_filter_show('stea017')
   CALL astt401_filter_show('stea018')
   CALL astt401_filter_show('stea019')
   CALL astt401_filter_show('stea020')
   CALL astt401_filter_show('stea021')
   CALL astt401_filter_show('stea022')
   CALL astt401_filter_show('stea023')
   CALL astt401_filter_show('stea024')
   CALL astt401_filter_show('stea025')
   CALL astt401_filter_show('stea026')
   CALL astt401_filter_show('stea027')
   CALL astt401_filter_show('stea028')
   CALL astt401_filter_show('stea029')
   CALL astt401_filter_show('stea030')
   CALL astt401_filter_show('stea031')
   CALL astt401_filter_show('stea032')
   CALL astt401_filter_show('stea033')
   CALL astt401_filter_show('stea034')
   CALL astt401_filter_show('stea035')
   CALL astt401_filter_show('stea036')
   CALL astt401_filter_show('stea037')
   CALL astt401_filter_show('stea038')
   CALL astt401_filter_show('stea039')
   CALL astt401_filter_show('stea040')
   CALL astt401_filter_show('stea041')
   CALL astt401_filter_show('stea042')
   CALL astt401_filter_show('stea043')
   CALL astt401_filter_show('stea044')
   CALL astt401_filter_show('stea045')
   CALL astt401_filter_show('stea046')
   CALL astt401_filter_show('stea047')
   CALL astt401_filter_show('stea048')
   CALL astt401_filter_show('stea049')
   CALL astt401_filter_show('steaunit')
   CALL astt401_filter_show('steasite')
 
END FUNCTION
]]>
  </section>
  <section id="astt401.filter_parser" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION astt401_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define" edit="s"/>}
   #end add-point    
   #add-point:filter段define
   {<point name="filter_parser.define_customerization" edit="s"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="astt401.filter_show" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION astt401_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = astt401_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="astt401.global" ver="34" status="" src="s" readonly="">
    <![CDATA[#應用 t01 樣板自動產生(Version:36)
{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_stea_m        RECORD
       steasite LIKE stea_t.steasite, 
   steasite_desc LIKE type_t.chr80, 
   steadocdt LIKE stea_t.steadocdt, 
   steadocno LIKE stea_t.steadocno, 
   stea000 LIKE stea_t.stea000, 
   steaunit LIKE stea_t.steaunit, 
   steaunit_desc LIKE type_t.chr80, 
   stea001 LIKE stea_t.stea001, 
   stea002 LIKE stea_t.stea002, 
   stea003 LIKE stea_t.stea003, 
   stea004 LIKE stea_t.stea004, 
   stea009 LIKE stea_t.stea009, 
   steastus LIKE stea_t.steastus, 
   stea005 LIKE stea_t.stea005, 
   steal002 LIKE type_t.chr500, 
   steal003 LIKE type_t.chr500, 
   stea006 LIKE stea_t.stea006, 
   stea006_desc LIKE type_t.chr80, 
   stea007 LIKE stea_t.stea007, 
   stea008 LIKE stea_t.stea008, 
   stea047 LIKE stea_t.stea047, 
   stea047_desc LIKE type_t.chr80, 
   stea048 LIKE stea_t.stea048, 
   stea048_desc LIKE type_t.chr80, 
   stea044 LIKE stea_t.stea044, 
   stea044_desc LIKE type_t.chr80, 
   stea010 LIKE stea_t.stea010, 
   stea010_desc LIKE type_t.chr80, 
   stea011 LIKE stea_t.stea011, 
   stea011_desc LIKE type_t.chr80, 
   stea012 LIKE stea_t.stea012, 
   stea012_desc LIKE type_t.chr80, 
   stea013 LIKE stea_t.stea013, 
   stea013_desc LIKE type_t.chr80, 
   stea014 LIKE stea_t.stea014, 
   stea014_desc LIKE type_t.chr80, 
   stea015 LIKE stea_t.stea015, 
   stea015_desc LIKE type_t.chr80, 
   stea016 LIKE stea_t.stea016, 
   stea045 LIKE stea_t.stea045, 
   stea045_desc LIKE type_t.chr80, 
   stea046 LIKE stea_t.stea046, 
   stea029 LIKE stea_t.stea029, 
   stea030 LIKE stea_t.stea030, 
   stea032 LIKE stea_t.stea032, 
   stea032_desc LIKE type_t.chr80, 
   stea033 LIKE stea_t.stea033, 
   stea033_desc LIKE type_t.chr80, 
   stea034 LIKE stea_t.stea034, 
   stea034_desc LIKE type_t.chr80, 
   stea035 LIKE stea_t.stea035, 
   stea035_desc LIKE type_t.chr80, 
   stea036 LIKE stea_t.stea036, 
   stea036_desc LIKE type_t.chr80, 
   stea037 LIKE stea_t.stea037, 
   stea037_desc LIKE type_t.chr80, 
   stea038 LIKE stea_t.stea038, 
   stea038_desc LIKE type_t.chr80, 
   stea039 LIKE stea_t.stea039, 
   stea040 LIKE stea_t.stea040, 
   stea028 LIKE stea_t.stea028, 
   next_b LIKE type_t.dat, 
   stea017 LIKE stea_t.stea017, 
   stea021 LIKE stea_t.stea021, 
   stea024 LIKE stea_t.stea024, 
   stea018 LIKE stea_t.stea018, 
   stea049 LIKE stea_t.stea049, 
   stea025 LIKE stea_t.stea025, 
   stea019 LIKE stea_t.stea019, 
   stea022 LIKE stea_t.stea022, 
   stea026 LIKE stea_t.stea026, 
   stea020 LIKE stea_t.stea020, 
   stea023 LIKE stea_t.stea023, 
   stea027 LIKE stea_t.stea027, 
   stea031 LIKE stea_t.stea031, 
   stea042 LIKE stea_t.stea042, 
   steaownid LIKE stea_t.steaownid, 
   steaownid_desc LIKE type_t.chr80, 
   steaowndp LIKE stea_t.steaowndp, 
   steaowndp_desc LIKE type_t.chr80, 
   steacrtid LIKE stea_t.steacrtid, 
   steacrtid_desc LIKE type_t.chr80, 
   steacrtdp LIKE stea_t.steacrtdp, 
   steacrtdp_desc LIKE type_t.chr80, 
   steacrtdt LIKE stea_t.steacrtdt, 
   steamodid LIKE stea_t.steamodid, 
   steamodid_desc LIKE type_t.chr80, 
   steamoddt LIKE stea_t.steamoddt, 
   steacnfid LIKE stea_t.steacnfid, 
   steacnfid_desc LIKE type_t.chr80, 
   steacnfdt LIKE stea_t.steacnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_steb_d        RECORD
       stebseq LIKE steb_t.stebseq, 
   steb001 LIKE steb_t.steb001, 
   steb002 LIKE steb_t.steb002, 
   steb002_desc LIKE type_t.chr500, 
   steb003 LIKE steb_t.steb003, 
   steb004 LIKE steb_t.steb004, 
   steb005 LIKE steb_t.steb005, 
   steb006 LIKE steb_t.steb006, 
   steb007 LIKE steb_t.steb007, 
   steb008 LIKE steb_t.steb008, 
   steb008_desc LIKE type_t.chr500, 
   steb009 LIKE steb_t.steb009, 
   steb009_desc LIKE type_t.chr500, 
   steb010 LIKE steb_t.steb010, 
   steb011 LIKE steb_t.steb011, 
   steb012 LIKE steb_t.steb012, 
   steb013 LIKE steb_t.steb013, 
   steb014 LIKE steb_t.steb014, 
   steb015 LIKE steb_t.steb015, 
   steb016 LIKE steb_t.steb016, 
   steb017 LIKE steb_t.steb017, 
   stebsite LIKE steb_t.stebsite, 
   stebunit LIKE steb_t.stebunit
       END RECORD
PRIVATE TYPE type_g_steb2_d RECORD
       stecseq LIKE stec_t.stecseq, 
   stec001 LIKE stec_t.stec001, 
   stec002 LIKE stec_t.stec002, 
   stec003 LIKE stec_t.stec003, 
   stec024 LIKE stec_t.stec024, 
   stec025 LIKE stec_t.stec025, 
   stec004 LIKE stec_t.stec004, 
   stec004_desc LIKE type_t.chr500, 
   stec005 LIKE stec_t.stec005, 
   stec005_desc LIKE type_t.chr500, 
   stec006 LIKE stec_t.stec006, 
   stec006_desc LIKE type_t.chr500, 
   stec007 LIKE stec_t.stec007, 
   stec007_desc LIKE type_t.chr500, 
   stec008 LIKE stec_t.stec008, 
   stec009 LIKE stec_t.stec009, 
   stec009_desc LIKE type_t.chr500, 
   stec010 LIKE stec_t.stec010, 
   stec011 LIKE stec_t.stec011, 
   stec012 LIKE stec_t.stec012, 
   stec013 LIKE stec_t.stec013, 
   stec014 LIKE stec_t.stec014, 
   stec015 LIKE stec_t.stec015, 
   stec015_desc LIKE type_t.chr500, 
   stec016 LIKE stec_t.stec016, 
   stec016_desc LIKE type_t.chr500, 
   stec017 LIKE stec_t.stec017, 
   stec018 LIKE stec_t.stec018, 
   stec019 LIKE stec_t.stec019, 
   stec020 LIKE stec_t.stec020, 
   stec021 LIKE stec_t.stec021, 
   stec022 LIKE stec_t.stec022, 
   stec023 LIKE stec_t.stec023, 
   stecsite LIKE stec_t.stecsite, 
   stecunit LIKE stec_t.stecunit
       END RECORD
PRIVATE TYPE type_g_steb3_d RECORD
       steeseq LIKE stee_t.steeseq, 
   stee002 LIKE stee_t.stee002, 
   stee001 LIKE stee_t.stee001, 
   stee003 LIKE stee_t.stee003, 
   stee003_desc LIKE type_t.chr500, 
   stee004 LIKE stee_t.stee004, 
   stee005 LIKE stee_t.stee005, 
   stee006 LIKE stee_t.stee006, 
   stee007 LIKE stee_t.stee007, 
   stee008 LIKE stee_t.stee008, 
   stee009 LIKE stee_t.stee009, 
   stee010 LIKE stee_t.stee010, 
   stee011 LIKE stee_t.stee011, 
   steesite LIKE stee_t.steesite, 
   steeunit LIKE stee_t.steeunit
       END RECORD
PRIVATE TYPE type_g_steb4_d RECORD
       stegseq LIKE steg_t.stegseq, 
   steg001 LIKE steg_t.steg001, 
   steg003 LIKE steg_t.steg003, 
   steg003_desc LIKE type_t.chr500, 
   steg002 LIKE steg_t.steg002, 
   steg002_desc LIKE type_t.chr500, 
   steg004 LIKE steg_t.steg004, 
   steg005 LIKE steg_t.steg005, 
   stegacti LIKE steg_t.stegacti, 
   stegsite LIKE steg_t.stegsite, 
   stegunit LIKE steg_t.stegunit
       END RECORD
PRIVATE TYPE type_g_steb5_d RECORD
       stehseq LIKE steh_t.stehseq, 
   steh001 LIKE steh_t.steh001, 
   steh002 LIKE steh_t.steh002, 
   steh003 LIKE steh_t.steh003, 
   stehacti LIKE steh_t.stehacti, 
   stehsite LIKE steh_t.stehsite, 
   stehunit LIKE steh_t.stehunit
       END RECORD
PRIVATE TYPE type_g_steb6_d RECORD
       steiseq LIKE stei_t.steiseq, 
   stei001 LIKE stei_t.stei001, 
   stei002 LIKE stei_t.stei002, 
   stei003 LIKE stei_t.stei003, 
   stei003_desc LIKE type_t.chr500, 
   stei005 LIKE stei_t.stei005, 
   stei006 LIKE stei_t.stei006, 
   stei004 LIKE stei_t.stei004, 
   stei010 LIKE stei_t.stei010, 
   stei010_desc LIKE type_t.chr500, 
   stei007 LIKE stei_t.stei007, 
   stei008 LIKE stei_t.stei008, 
   stei009 LIKE stei_t.stei009, 
   steiacti LIKE stei_t.steiacti, 
   steisite LIKE stei_t.steisite, 
   steiunit LIKE stei_t.steiunit
       END RECORD
PRIVATE TYPE type_g_steb7_d RECORD
       stejseq LIKE stej_t.stejseq, 
   stej001 LIKE stej_t.stej001, 
   stej002 LIKE stej_t.stej002, 
   stej003 LIKE stej_t.stej003, 
   stej004 LIKE stej_t.stej004, 
   stej005 LIKE stej_t.stej005, 
   stej006 LIKE stej_t.stej006, 
   stejsite LIKE stej_t.stejsite, 
   stejunit LIKE stej_t.stejunit
       END RECORD
PRIVATE TYPE type_g_steb8_d RECORD
       stedseq1 LIKE sted_t.stedseq1, 
   sted001 LIKE sted_t.sted001, 
   sted002 LIKE sted_t.sted002, 
   sted003 LIKE sted_t.sted003, 
   sted003_desc LIKE type_t.chr500, 
   sted004 LIKE sted_t.sted004, 
   sted004_desc LIKE type_t.chr500, 
   sted005 LIKE sted_t.sted005, 
   sted006 LIKE sted_t.sted006, 
   sted007 LIKE sted_t.sted007, 
   sted008 LIKE sted_t.sted008, 
   stedsite LIKE sted_t.stedsite, 
   stedunit LIKE sted_t.stedunit
       END RECORD
PRIVATE TYPE type_g_steb9_d RECORD
       stef001 LIKE stef_t.stef001, 
   stef003 LIKE stef_t.stef003, 
   stef004 LIKE stef_t.stef004, 
   stef005 LIKE stef_t.stef005, 
   stef005_desc LIKE type_t.chr500, 
   stef006 LIKE stef_t.stef006, 
   stef007 LIKE stef_t.stef007, 
   stef008 LIKE stef_t.stef008, 
   stef009 LIKE stef_t.stef009, 
   stefsite LIKE stef_t.stefsite, 
   stefunit LIKE stef_t.stefunit
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_steadocno LIKE stea_t.steadocno,
      b_steadocdt LIKE stea_t.steadocdt,
      b_stea000 LIKE stea_t.stea000,
      b_stea001 LIKE stea_t.stea001,
      b_stea002 LIKE stea_t.stea002,
      b_stea003 LIKE stea_t.stea003,
      b_stea004 LIKE stea_t.stea004,
      b_stea005 LIKE stea_t.stea005,
      b_stea006 LIKE stea_t.stea006,
      b_stea007 LIKE stea_t.stea007,
      b_stea008 LIKE stea_t.stea008,
      b_stea009 LIKE stea_t.stea009,
      b_stea010 LIKE stea_t.stea010,
      b_stea011 LIKE stea_t.stea011,
      b_stea012 LIKE stea_t.stea012,
      b_stea013 LIKE stea_t.stea013,
      b_stea014 LIKE stea_t.stea014,
      b_stea015 LIKE stea_t.stea015,
      b_stea016 LIKE stea_t.stea016,
      b_stea017 LIKE stea_t.stea017,
      b_stea018 LIKE stea_t.stea018,
      b_stea019 LIKE stea_t.stea019,
      b_stea020 LIKE stea_t.stea020,
      b_stea021 LIKE stea_t.stea021,
      b_stea022 LIKE stea_t.stea022,
      b_stea023 LIKE stea_t.stea023,
      b_stea024 LIKE stea_t.stea024,
      b_stea025 LIKE stea_t.stea025,
      b_stea026 LIKE stea_t.stea026,
      b_stea027 LIKE stea_t.stea027,
      b_stea028 LIKE stea_t.stea028,
      b_stea029 LIKE stea_t.stea029,
      b_stea030 LIKE stea_t.stea030,
      b_stea031 LIKE stea_t.stea031,
      b_stea032 LIKE stea_t.stea032,
      b_stea033 LIKE stea_t.stea033,
      b_stea034 LIKE stea_t.stea034,
      b_stea035 LIKE stea_t.stea035,
      b_stea036 LIKE stea_t.stea036,
      b_stea037 LIKE stea_t.stea037,
      b_stea038 LIKE stea_t.stea038,
      b_stea039 LIKE stea_t.stea039,
      b_stea040 LIKE stea_t.stea040,
      b_stea041 LIKE stea_t.stea041,
      b_stea042 LIKE stea_t.stea042,
      b_stea043 LIKE stea_t.stea043,
      b_stea044 LIKE stea_t.stea044,
      b_stea045 LIKE stea_t.stea045,
      b_stea046 LIKE stea_t.stea046,
      b_stea047 LIKE stea_t.stea047,
      b_stea048 LIKE stea_t.stea048,
      b_stea049 LIKE stea_t.stea049,
      b_steaunit LIKE stea_t.steaunit,
      b_steasite LIKE stea_t.steasite
       END RECORD
       
#模組變數(Module Variables)
DEFINE g_stea_m          type_g_stea_m
DEFINE g_stea_m_t        type_g_stea_m
DEFINE g_stea_m_o        type_g_stea_m
DEFINE g_stea_m_mask_o   type_g_stea_m #轉換遮罩前資料
DEFINE g_stea_m_mask_n   type_g_stea_m #轉換遮罩後資料
 
   DEFINE g_steadocno_t LIKE stea_t.steadocno
 
 
DEFINE g_steb_d          DYNAMIC ARRAY OF type_g_steb_d
DEFINE g_steb_d_t        type_g_steb_d
DEFINE g_steb_d_o        type_g_steb_d
DEFINE g_steb_d_mask_o   DYNAMIC ARRAY OF type_g_steb_d #轉換遮罩前資料
DEFINE g_steb_d_mask_n   DYNAMIC ARRAY OF type_g_steb_d #轉換遮罩後資料
DEFINE g_steb2_d          DYNAMIC ARRAY OF type_g_steb2_d
DEFINE g_steb2_d_t        type_g_steb2_d
DEFINE g_steb2_d_o        type_g_steb2_d
DEFINE g_steb2_d_mask_o   DYNAMIC ARRAY OF type_g_steb2_d #轉換遮罩前資料
DEFINE g_steb2_d_mask_n   DYNAMIC ARRAY OF type_g_steb2_d #轉換遮罩後資料
DEFINE g_steb3_d          DYNAMIC ARRAY OF type_g_steb3_d
DEFINE g_steb3_d_t        type_g_steb3_d
DEFINE g_steb3_d_o        type_g_steb3_d
DEFINE g_steb3_d_mask_o   DYNAMIC ARRAY OF type_g_steb3_d #轉換遮罩前資料
DEFINE g_steb3_d_mask_n   DYNAMIC ARRAY OF type_g_steb3_d #轉換遮罩後資料
DEFINE g_steb4_d          DYNAMIC ARRAY OF type_g_steb4_d
DEFINE g_steb4_d_t        type_g_steb4_d
DEFINE g_steb4_d_o        type_g_steb4_d
DEFINE g_steb4_d_mask_o   DYNAMIC ARRAY OF type_g_steb4_d #轉換遮罩前資料
DEFINE g_steb4_d_mask_n   DYNAMIC ARRAY OF type_g_steb4_d #轉換遮罩後資料
DEFINE g_steb5_d          DYNAMIC ARRAY OF type_g_steb5_d
DEFINE g_steb5_d_t        type_g_steb5_d
DEFINE g_steb5_d_o        type_g_steb5_d
DEFINE g_steb5_d_mask_o   DYNAMIC ARRAY OF type_g_steb5_d #轉換遮罩前資料
DEFINE g_steb5_d_mask_n   DYNAMIC ARRAY OF type_g_steb5_d #轉換遮罩後資料
DEFINE g_steb6_d          DYNAMIC ARRAY OF type_g_steb6_d
DEFINE g_steb6_d_t        type_g_steb6_d
DEFINE g_steb6_d_o        type_g_steb6_d
DEFINE g_steb6_d_mask_o   DYNAMIC ARRAY OF type_g_steb6_d #轉換遮罩前資料
DEFINE g_steb6_d_mask_n   DYNAMIC ARRAY OF type_g_steb6_d #轉換遮罩後資料
DEFINE g_steb7_d          DYNAMIC ARRAY OF type_g_steb7_d
DEFINE g_steb7_d_t        type_g_steb7_d
DEFINE g_steb7_d_o        type_g_steb7_d
DEFINE g_steb7_d_mask_o   DYNAMIC ARRAY OF type_g_steb7_d #轉換遮罩前資料
DEFINE g_steb7_d_mask_n   DYNAMIC ARRAY OF type_g_steb7_d #轉換遮罩後資料
DEFINE g_steb8_d          DYNAMIC ARRAY OF type_g_steb8_d
DEFINE g_steb8_d_t        type_g_steb8_d
DEFINE g_steb8_d_o        type_g_steb8_d
DEFINE g_steb8_d_mask_o   DYNAMIC ARRAY OF type_g_steb8_d #轉換遮罩前資料
DEFINE g_steb8_d_mask_n   DYNAMIC ARRAY OF type_g_steb8_d #轉換遮罩後資料
DEFINE g_steb9_d          DYNAMIC ARRAY OF type_g_steb9_d
DEFINE g_steb9_d_t        type_g_steb9_d
DEFINE g_steb9_d_o        type_g_steb9_d
DEFINE g_steb9_d_mask_o   DYNAMIC ARRAY OF type_g_steb9_d #轉換遮罩前資料
DEFINE g_steb9_d_mask_n   DYNAMIC ARRAY OF type_g_steb9_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
DEFINE g_master_multi_table_t    RECORD
      stealdocno LIKE steal_t.stealdocno,
      steal002 LIKE steal_t.steal002,
      steal003 LIKE steal_t.steal003
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
DEFINE g_wc2_table4   STRING
 
DEFINE g_wc2_table5   STRING
 
DEFINE g_wc2_table6   STRING
 
DEFINE g_wc2_table7   STRING
 
 
DEFINE g_wc2_table8   STRING
 
DEFINE g_wc2_table9   STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10              #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="astt401.idx_chk" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION astt401_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define" edit="s"/>}
   #end add-point  
   #add-point:idx_chk段define(客製用)
   {<point name="idx_chk.define_customerization" edit="c"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_steb_d.getLength() THEN
         LET g_detail_idx = g_steb_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_steb_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_steb_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_steb2_d.getLength() THEN
         LET g_detail_idx = g_steb2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_steb2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_steb2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_steb3_d.getLength() THEN
         LET g_detail_idx = g_steb3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_steb3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_steb3_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 4 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail4")
      IF g_detail_idx > g_steb4_d.getLength() THEN
         LET g_detail_idx = g_steb4_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_steb4_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_steb4_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 5 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail5")
      IF g_detail_idx > g_steb5_d.getLength() THEN
         LET g_detail_idx = g_steb5_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_steb5_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_steb5_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 6 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail6")
      IF g_detail_idx > g_steb6_d.getLength() THEN
         LET g_detail_idx = g_steb6_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_steb6_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_steb6_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 7 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail7")
      IF g_detail_idx > g_steb7_d.getLength() THEN
         LET g_detail_idx = g_steb7_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_steb7_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_steb7_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 8 THEN
      LET g_detail_idx2 = g_curr_diag.getCurrentRow("s_detail8")
      IF g_detail_idx2 > g_steb8_d.getLength() THEN
         LET g_detail_idx2 = g_steb8_d.getLength()
      END IF
      IF g_detail_idx2 = 0 AND g_steb8_d.getLength() <> 0 THEN
         LET g_detail_idx2 = 1
      END IF
      DISPLAY g_detail_idx2 TO FORMONLY.idx
      DISPLAY g_steb8_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 9 THEN
      LET g_detail_idx2 = g_curr_diag.getCurrentRow("s_detail9")
      IF g_detail_idx2 > g_steb9_d.getLength() THEN
         LET g_detail_idx2 = g_steb9_d.getLength()
      END IF
      IF g_detail_idx2 = 0 AND g_steb9_d.getLength() <> 0 THEN
         LET g_detail_idx2 = 1
      END IF
      DISPLAY g_detail_idx2 TO FORMONLY.idx
      DISPLAY g_steb9_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="astt401.init" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION astt401_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point    
   #add-point:init段define(客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point    
 
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('steastus','13','N,Y,A,D,R,W,X')
 
      CALL cl_set_combo_scc('stea000','32') 
   CALL cl_set_combo_scc('stea003','6013') 
   CALL cl_set_combo_scc('stea004','6785') 
   CALL cl_set_combo_scc('stea046','6201') 
   CALL cl_set_combo_scc('stea029','6202') 
   CALL cl_set_combo_scc('stea030','6786') 
   CALL cl_set_combo_scc('stea031','36') 
   CALL cl_set_combo_scc('steb004','6006') 
   CALL cl_set_combo_scc('steb005','6007') 
   CALL cl_set_combo_scc('steb006','6008') 
   CALL cl_set_combo_scc('steb007','6009') 
   CALL cl_set_combo_scc('stec024','6781') 
   CALL cl_set_combo_scc('stec011','6006') 
   CALL cl_set_combo_scc('stec012','6007') 
   CALL cl_set_combo_scc('stec013','6008') 
   CALL cl_set_combo_scc('stec014','6009') 
   CALL cl_set_combo_scc('stee004','6793') 
   CALL cl_set_combo_scc('stee005','6011') 
   CALL cl_set_combo_scc('stee006','6794') 
   CALL cl_set_combo_scc('stei002','6783') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL astt401_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="astt401.input" ver="20" status="" src="s" readonly="">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION astt401_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define
   {<point name="input.define" edit="s"/>}
   #end add-point  
   #add-point:input段define(客製用)
   {<point name="input.define_customerization" edit="c"/>}
   #end add-point  
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_stea_m.steasite,g_stea_m.steasite_desc,g_stea_m.steadocdt,g_stea_m.steadocno,g_stea_m.stea000, 
       g_stea_m.steaunit,g_stea_m.steaunit_desc,g_stea_m.stea001,g_stea_m.stea002,g_stea_m.stea003,g_stea_m.stea004, 
       g_stea_m.stea009,g_stea_m.steastus,g_stea_m.stea005,g_stea_m.steal002,g_stea_m.steal003,g_stea_m.stea006, 
       g_stea_m.stea006_desc,g_stea_m.stea007,g_stea_m.stea008,g_stea_m.stea047,g_stea_m.stea047_desc, 
       g_stea_m.stea048,g_stea_m.stea048_desc,g_stea_m.stea044,g_stea_m.stea044_desc,g_stea_m.stea010, 
       g_stea_m.stea010_desc,g_stea_m.stea011,g_stea_m.stea011_desc,g_stea_m.stea012,g_stea_m.stea012_desc, 
       g_stea_m.stea013,g_stea_m.stea013_desc,g_stea_m.stea014,g_stea_m.stea014_desc,g_stea_m.stea015, 
       g_stea_m.stea015_desc,g_stea_m.stea016,g_stea_m.stea045,g_stea_m.stea045_desc,g_stea_m.stea046, 
       g_stea_m.stea029,g_stea_m.stea030,g_stea_m.stea032,g_stea_m.stea032_desc,g_stea_m.stea033,g_stea_m.stea033_desc, 
       g_stea_m.stea034,g_stea_m.stea034_desc,g_stea_m.stea035,g_stea_m.stea035_desc,g_stea_m.stea036, 
       g_stea_m.stea036_desc,g_stea_m.stea037,g_stea_m.stea037_desc,g_stea_m.stea038,g_stea_m.stea038_desc, 
       g_stea_m.stea039,g_stea_m.stea040,g_stea_m.stea028,g_stea_m.next_b,g_stea_m.stea017,g_stea_m.stea021, 
       g_stea_m.stea024,g_stea_m.stea018,g_stea_m.stea049,g_stea_m.stea025,g_stea_m.stea019,g_stea_m.stea022, 
       g_stea_m.stea026,g_stea_m.stea020,g_stea_m.stea023,g_stea_m.stea027,g_stea_m.stea031,g_stea_m.stea042, 
       g_stea_m.steaownid,g_stea_m.steaownid_desc,g_stea_m.steaowndp,g_stea_m.steaowndp_desc,g_stea_m.steacrtid, 
       g_stea_m.steacrtid_desc,g_stea_m.steacrtdp,g_stea_m.steacrtdp_desc,g_stea_m.steacrtdt,g_stea_m.steamodid, 
       g_stea_m.steamodid_desc,g_stea_m.steamoddt,g_stea_m.steacnfid,g_stea_m.steacnfid_desc,g_stea_m.steacnfdt 

   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT stebseq,steb001,steb002,steb003,steb004,steb005,steb006,steb007,steb008, 
       steb009,steb010,steb011,steb012,steb013,steb014,steb015,steb016,steb017,stebsite,stebunit FROM  
       steb_t WHERE stebent=? AND stebdocno=? AND stebseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt401_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT stecseq,stec001,stec002,stec003,stec024,stec025,stec004,stec005,stec006, 
       stec007,stec008,stec009,stec010,stec011,stec012,stec013,stec014,stec015,stec016,stec017,stec018, 
       stec019,stec020,stec021,stec022,stec023,stecsite,stecunit FROM stec_t WHERE stecent=? AND stecdocno=?  
       AND stecseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt401_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql3" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT steeseq,stee002,stee001,stee003,stee004,stee005,stee006,stee007,stee008, 
       stee009,stee010,stee011,steesite,steeunit FROM stee_t WHERE steeent=? AND steedocno=? AND steeseq=?  
       AND stee002=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql3"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt401_bcl3 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql4" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT stegseq,steg001,steg003,steg002,steg004,steg005,stegacti,stegsite,stegunit  
       FROM steg_t WHERE stegent=? AND stegdocno=? AND stegseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql4"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt401_bcl4 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql5" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT stehseq,steh001,steh002,steh003,stehacti,stehsite,stehunit FROM steh_t  
       WHERE stehent=? AND stehdocno=? AND stehseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql5"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt401_bcl5 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql6" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT steiseq,stei001,stei002,stei003,stei005,stei006,stei004,stei010,stei007, 
       stei008,stei009,steiacti,steisite,steiunit FROM stei_t WHERE steient=? AND steidocno=? AND steiseq=?  
       FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql6"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt401_bcl6 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql7" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT stejseq,stej001,stej002,stej003,stej004,stej005,stej006,stejsite,stejunit  
       FROM stej_t WHERE stejent=? AND stejdocno=? AND stejseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql7"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt401_bcl7 CURSOR FROM g_forupd_sql
 
 
   
   #add-point:input段define_sql
   {<point name="input.define_sql8" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT stedseq1,sted001,sted002,sted003,sted004,sted005,sted006,sted007,sted008, 
       stedsite,stedunit FROM sted_t WHERE stedent=? AND steddocno=? AND stedseq=? AND stedseq1=? FOR  
       UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql8"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt401_bcl8 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql9" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT stef001,stef003,stef004,stef005,stef006,stef007,stef008,stef009,stefsite, 
       stefunit FROM stef_t WHERE stefent=? AND stefdocno=? AND stefseq=? AND stef002=? AND stef003=?  
       FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql9"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt401_bcl9 CURSOR FROM g_forupd_sql
 
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL astt401_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL astt401_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_stea_m.steasite,g_stea_m.steadocdt,g_stea_m.steadocno,g_stea_m.stea000,g_stea_m.steaunit, 
       g_stea_m.stea001,g_stea_m.stea002,g_stea_m.stea003,g_stea_m.stea004,g_stea_m.stea009,g_stea_m.steastus, 
       g_stea_m.stea005,g_stea_m.steal002,g_stea_m.steal003,g_stea_m.stea006,g_stea_m.stea007,g_stea_m.stea008, 
       g_stea_m.stea047,g_stea_m.stea048,g_stea_m.stea044,g_stea_m.stea010,g_stea_m.stea011,g_stea_m.stea012, 
       g_stea_m.stea013,g_stea_m.stea014,g_stea_m.stea015,g_stea_m.stea016,g_stea_m.stea045,g_stea_m.stea046, 
       g_stea_m.stea029,g_stea_m.stea030,g_stea_m.stea032,g_stea_m.stea033,g_stea_m.stea034,g_stea_m.stea035, 
       g_stea_m.stea036,g_stea_m.stea037,g_stea_m.stea038,g_stea_m.stea039,g_stea_m.stea040,g_stea_m.stea028, 
       g_stea_m.next_b,g_stea_m.stea017,g_stea_m.stea021,g_stea_m.stea024,g_stea_m.stea018,g_stea_m.stea049, 
       g_stea_m.stea025,g_stea_m.stea019,g_stea_m.stea022,g_stea_m.stea026,g_stea_m.stea020,g_stea_m.stea023, 
       g_stea_m.stea027,g_stea_m.stea031,g_stea_m.stea042
   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="astt401.input.body" ver="19" status="" src="s" readonly="">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_steb_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_steb_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astt401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_steb_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astt401_cl USING g_enterprise,g_stea_m.steadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astt401_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE astt401_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_steb_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_steb_d[l_ac].stebseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_steb_d_t.* = g_steb_d[l_ac].*  #BACKUP
               LET g_steb_d_o.* = g_steb_d[l_ac].*  #BACKUP
               CALL astt401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL astt401_set_no_entry_b(l_cmd)
               IF NOT astt401_lock_b("steb_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astt401_bcl INTO g_steb_d[l_ac].stebseq,g_steb_d[l_ac].steb001,g_steb_d[l_ac].steb002, 
                      g_steb_d[l_ac].steb003,g_steb_d[l_ac].steb004,g_steb_d[l_ac].steb005,g_steb_d[l_ac].steb006, 
                      g_steb_d[l_ac].steb007,g_steb_d[l_ac].steb008,g_steb_d[l_ac].steb009,g_steb_d[l_ac].steb010, 
                      g_steb_d[l_ac].steb011,g_steb_d[l_ac].steb012,g_steb_d[l_ac].steb013,g_steb_d[l_ac].steb014, 
                      g_steb_d[l_ac].steb015,g_steb_d[l_ac].steb016,g_steb_d[l_ac].steb017,g_steb_d[l_ac].stebsite, 
                      g_steb_d[l_ac].stebunit
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_steb_d_t.stebseq 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_steb_d_mask_o[l_ac].* =  g_steb_d[l_ac].*
                  CALL astt401_steb_t_mask()
                  LET g_steb_d_mask_n[l_ac].* =  g_steb_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astt401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_steb_d[l_ac].* TO NULL 
            INITIALIZE g_steb_d_t.* TO NULL 
            INITIALIZE g_steb_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_steb_d[l_ac].steb010 = "0"
 
            #add-point:modify段before備份
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_steb_d_t.* = g_steb_d[l_ac].*     #新輸入資料
            LET g_steb_d_o.* = g_steb_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astt401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL astt401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_steb_d[li_reproduce_target].* = g_steb_d[li_reproduce].*
 
               LET g_steb_d[li_reproduce_target].stebseq = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM steb_t 
             WHERE stebent = g_enterprise AND stebdocno = g_stea_m.steadocno
 
               AND stebseq = g_steb_d[l_ac].stebseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys[2] = g_steb_d[g_detail_idx].stebseq
               CALL astt401_insert_b('steb_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_steb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "steb_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astt401_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d)
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stea_m.steadocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_steb_d_t.stebseq
 
            
               #刪除同層單身
               IF NOT astt401_delete_b('steb_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astt401_key_delete_b(gs_keys,'steb_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE astt401_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_steb_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_steb_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stebseq
            #add-point:BEFORE FIELD stebseq
            {<point name="input.b.page1.stebseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stebseq
            
            #add-point:AFTER FIELD stebseq
            {<point name="input.a.page1.stebseq" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stebseq
            #add-point:ON CHANGE stebseq
            {<point name="input.g.page1.stebseq" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steb001
            #add-point:BEFORE FIELD steb001
            {<point name="input.b.page1.steb001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steb001
            
            #add-point:AFTER FIELD steb001
            {<point name="input.a.page1.steb001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steb001
            #add-point:ON CHANGE steb001
            {<point name="input.g.page1.steb001" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steb002
            
            #add-point:AFTER FIELD steb002
            {<point name="input.a.page1.steb002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steb002
            #add-point:BEFORE FIELD steb002
            {<point name="input.b.page1.steb002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steb002
            #add-point:ON CHANGE steb002
            {<point name="input.g.page1.steb002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steb003
            #add-point:BEFORE FIELD steb003
            {<point name="input.b.page1.steb003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steb003
            
            #add-point:AFTER FIELD steb003
            {<point name="input.a.page1.steb003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steb003
            #add-point:ON CHANGE steb003
            {<point name="input.g.page1.steb003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steb004
            #add-point:BEFORE FIELD steb004
            {<point name="input.b.page1.steb004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steb004
            
            #add-point:AFTER FIELD steb004
            {<point name="input.a.page1.steb004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steb004
            #add-point:ON CHANGE steb004
            {<point name="input.g.page1.steb004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steb005
            #add-point:BEFORE FIELD steb005
            {<point name="input.b.page1.steb005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steb005
            
            #add-point:AFTER FIELD steb005
            {<point name="input.a.page1.steb005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steb005
            #add-point:ON CHANGE steb005
            {<point name="input.g.page1.steb005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steb006
            #add-point:BEFORE FIELD steb006
            {<point name="input.b.page1.steb006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steb006
            
            #add-point:AFTER FIELD steb006
            {<point name="input.a.page1.steb006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steb006
            #add-point:ON CHANGE steb006
            {<point name="input.g.page1.steb006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steb007
            #add-point:BEFORE FIELD steb007
            {<point name="input.b.page1.steb007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steb007
            
            #add-point:AFTER FIELD steb007
            {<point name="input.a.page1.steb007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steb007
            #add-point:ON CHANGE steb007
            {<point name="input.g.page1.steb007" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steb008
            
            #add-point:AFTER FIELD steb008
            {<point name="input.a.page1.steb008" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steb008
            #add-point:BEFORE FIELD steb008
            {<point name="input.b.page1.steb008" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steb008
            #add-point:ON CHANGE steb008
            {<point name="input.g.page1.steb008" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steb009
            
            #add-point:AFTER FIELD steb009
            {<point name="input.a.page1.steb009" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steb009
            #add-point:BEFORE FIELD steb009
            {<point name="input.b.page1.steb009" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steb009
            #add-point:ON CHANGE steb009
            {<point name="input.g.page1.steb009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steb010
            #add-point:BEFORE FIELD steb010
            {<point name="input.b.page1.steb010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steb010
            
            #add-point:AFTER FIELD steb010
            {<point name="input.a.page1.steb010" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steb010
            #add-point:ON CHANGE steb010
            {<point name="input.g.page1.steb010" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steb011
            #add-point:BEFORE FIELD steb011
            {<point name="input.b.page1.steb011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steb011
            
            #add-point:AFTER FIELD steb011
            {<point name="input.a.page1.steb011" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steb011
            #add-point:ON CHANGE steb011
            {<point name="input.g.page1.steb011" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steb012
            #add-point:BEFORE FIELD steb012
            {<point name="input.b.page1.steb012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steb012
            
            #add-point:AFTER FIELD steb012
            {<point name="input.a.page1.steb012" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steb012
            #add-point:ON CHANGE steb012
            {<point name="input.g.page1.steb012" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steb013
            #add-point:BEFORE FIELD steb013
            {<point name="input.b.page1.steb013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steb013
            
            #add-point:AFTER FIELD steb013
            {<point name="input.a.page1.steb013" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steb013
            #add-point:ON CHANGE steb013
            {<point name="input.g.page1.steb013" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steb014
            #add-point:BEFORE FIELD steb014
            {<point name="input.b.page1.steb014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steb014
            
            #add-point:AFTER FIELD steb014
            {<point name="input.a.page1.steb014" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steb014
            #add-point:ON CHANGE steb014
            {<point name="input.g.page1.steb014" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steb015
            #add-point:BEFORE FIELD steb015
            {<point name="input.b.page1.steb015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steb015
            
            #add-point:AFTER FIELD steb015
            {<point name="input.a.page1.steb015" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steb015
            #add-point:ON CHANGE steb015
            {<point name="input.g.page1.steb015" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steb016
            #add-point:BEFORE FIELD steb016
            {<point name="input.b.page1.steb016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steb016
            
            #add-point:AFTER FIELD steb016
            {<point name="input.a.page1.steb016" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steb016
            #add-point:ON CHANGE steb016
            {<point name="input.g.page1.steb016" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steb017
            #add-point:BEFORE FIELD steb017
            {<point name="input.b.page1.steb017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steb017
            
            #add-point:AFTER FIELD steb017
            {<point name="input.a.page1.steb017" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steb017
            #add-point:ON CHANGE steb017
            {<point name="input.g.page1.steb017" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stebsite
            #add-point:BEFORE FIELD stebsite
            {<point name="input.b.page1.stebsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stebsite
            
            #add-point:AFTER FIELD stebsite
            {<point name="input.a.page1.stebsite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stebsite
            #add-point:ON CHANGE stebsite
            {<point name="input.g.page1.stebsite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stebunit
            #add-point:BEFORE FIELD stebunit
            {<point name="input.b.page1.stebunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stebunit
            
            #add-point:AFTER FIELD stebunit
            {<point name="input.a.page1.stebunit" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stebunit
            #add-point:ON CHANGE stebunit
            {<point name="input.g.page1.stebunit" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.stebseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stebseq
            #add-point:ON ACTION controlp INFIELD stebseq
            {<point name="input.c.page1.stebseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.steb001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steb001
            #add-point:ON ACTION controlp INFIELD steb001
            {<point name="input.c.page1.steb001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.steb002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steb002
            #add-point:ON ACTION controlp INFIELD steb002
            {<point name="input.c.page1.steb002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.steb003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steb003
            #add-point:ON ACTION controlp INFIELD steb003
            {<point name="input.c.page1.steb003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.steb004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steb004
            #add-point:ON ACTION controlp INFIELD steb004
            {<point name="input.c.page1.steb004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.steb005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steb005
            #add-point:ON ACTION controlp INFIELD steb005
            {<point name="input.c.page1.steb005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.steb006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steb006
            #add-point:ON ACTION controlp INFIELD steb006
            {<point name="input.c.page1.steb006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.steb007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steb007
            #add-point:ON ACTION controlp INFIELD steb007
            {<point name="input.c.page1.steb007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.steb008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steb008
            #add-point:ON ACTION controlp INFIELD steb008
            {<point name="input.c.page1.steb008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.steb009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steb009
            #add-point:ON ACTION controlp INFIELD steb009
            {<point name="input.c.page1.steb009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.steb010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steb010
            #add-point:ON ACTION controlp INFIELD steb010
            {<point name="input.c.page1.steb010" />}
            #END add-point
 
         #Ctrlp:input.c.page1.steb011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steb011
            #add-point:ON ACTION controlp INFIELD steb011
            {<point name="input.c.page1.steb011" />}
            #END add-point
 
         #Ctrlp:input.c.page1.steb012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steb012
            #add-point:ON ACTION controlp INFIELD steb012
            {<point name="input.c.page1.steb012" />}
            #END add-point
 
         #Ctrlp:input.c.page1.steb013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steb013
            #add-point:ON ACTION controlp INFIELD steb013
            {<point name="input.c.page1.steb013" />}
            #END add-point
 
         #Ctrlp:input.c.page1.steb014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steb014
            #add-point:ON ACTION controlp INFIELD steb014
            {<point name="input.c.page1.steb014" />}
            #END add-point
 
         #Ctrlp:input.c.page1.steb015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steb015
            #add-point:ON ACTION controlp INFIELD steb015
            {<point name="input.c.page1.steb015" />}
            #END add-point
 
         #Ctrlp:input.c.page1.steb016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steb016
            #add-point:ON ACTION controlp INFIELD steb016
            {<point name="input.c.page1.steb016" />}
            #END add-point
 
         #Ctrlp:input.c.page1.steb017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steb017
            #add-point:ON ACTION controlp INFIELD steb017
            {<point name="input.c.page1.steb017" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stebsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stebsite
            #add-point:ON ACTION controlp INFIELD stebsite
            {<point name="input.c.page1.stebsite" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stebunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stebunit
            #add-point:ON ACTION controlp INFIELD stebunit
            {<point name="input.c.page1.stebunit" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_steb_d[l_ac].* = g_steb_d_t.*
               CLOSE astt401_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_steb_d[l_ac].stebseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_steb_d[l_ac].* = g_steb_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL astt401_steb_t_mask_restore('restore_mask_o')
      
               UPDATE steb_t SET (stebdocno,stebseq,steb001,steb002,steb003,steb004,steb005,steb006, 
                   steb007,steb008,steb009,steb010,steb011,steb012,steb013,steb014,steb015,steb016,steb017, 
                   stebsite,stebunit) = (g_stea_m.steadocno,g_steb_d[l_ac].stebseq,g_steb_d[l_ac].steb001, 
                   g_steb_d[l_ac].steb002,g_steb_d[l_ac].steb003,g_steb_d[l_ac].steb004,g_steb_d[l_ac].steb005, 
                   g_steb_d[l_ac].steb006,g_steb_d[l_ac].steb007,g_steb_d[l_ac].steb008,g_steb_d[l_ac].steb009, 
                   g_steb_d[l_ac].steb010,g_steb_d[l_ac].steb011,g_steb_d[l_ac].steb012,g_steb_d[l_ac].steb013, 
                   g_steb_d[l_ac].steb014,g_steb_d[l_ac].steb015,g_steb_d[l_ac].steb016,g_steb_d[l_ac].steb017, 
                   g_steb_d[l_ac].stebsite,g_steb_d[l_ac].stebunit)
                WHERE stebent = g_enterprise AND stebdocno = g_stea_m.steadocno 
 
                  AND stebseq = g_steb_d_t.stebseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "steb_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_steb_d[l_ac].* = g_steb_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "steb_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_steb_d[l_ac].* = g_steb_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys_bak[1] = g_steadocno_t
               LET gs_keys[2] = g_steb_d[g_detail_idx].stebseq
               LET gs_keys_bak[2] = g_steb_d_t.stebseq
               CALL astt401_update_b('steb_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL astt401_steb_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_steb_d[g_detail_idx].stebseq = g_steb_d_t.stebseq 
 
                  ) THEN
                  LET gs_keys[01] = g_stea_m.steadocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_steb_d_t.stebseq
 
                  CALL astt401_key_update_b(gs_keys,'steb_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb_d_t)
               LET g_log2 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL astt401_unlock_b("steb_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_steb_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_steb_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_steb2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body2.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_steb2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astt401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_steb2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_steb2_d[l_ac].* TO NULL 
            INITIALIZE g_steb2_d_t.* TO NULL 
            INITIALIZE g_steb2_d_o.* TO NULL 
            #公用欄位給值(單身2)
            
            #自定義預設值(單身2)
                  LET g_steb2_d[l_ac].stec017 = "0"
 
            #add-point:modify段before備份
            {<point name="input.body2.insert.before_bak"/>}
            #end add-point
            LET g_steb2_d_t.* = g_steb2_d[l_ac].*     #新輸入資料
            LET g_steb2_d_o.* = g_steb2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astt401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL astt401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_steb2_d[li_reproduce_target].* = g_steb2_d[li_reproduce].*
 
               LET g_steb2_d[li_reproduce_target].stecseq = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 2
            CALL astt401_b_fill2('8')
  
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astt401_cl USING g_enterprise,g_stea_m.steadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astt401_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE astt401_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_steb2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_steb2_d[l_ac].stecseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_steb2_d_t.* = g_steb2_d[l_ac].*  #BACKUP
               LET g_steb2_d_o.* = g_steb2_d[l_ac].*  #BACKUP
               CALL astt401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL astt401_set_no_entry_b(l_cmd)
               IF NOT astt401_lock_b("stec_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astt401_bcl2 INTO g_steb2_d[l_ac].stecseq,g_steb2_d[l_ac].stec001,g_steb2_d[l_ac].stec002, 
                      g_steb2_d[l_ac].stec003,g_steb2_d[l_ac].stec024,g_steb2_d[l_ac].stec025,g_steb2_d[l_ac].stec004, 
                      g_steb2_d[l_ac].stec005,g_steb2_d[l_ac].stec006,g_steb2_d[l_ac].stec007,g_steb2_d[l_ac].stec008, 
                      g_steb2_d[l_ac].stec009,g_steb2_d[l_ac].stec010,g_steb2_d[l_ac].stec011,g_steb2_d[l_ac].stec012, 
                      g_steb2_d[l_ac].stec013,g_steb2_d[l_ac].stec014,g_steb2_d[l_ac].stec015,g_steb2_d[l_ac].stec016, 
                      g_steb2_d[l_ac].stec017,g_steb2_d[l_ac].stec018,g_steb2_d[l_ac].stec019,g_steb2_d[l_ac].stec020, 
                      g_steb2_d[l_ac].stec021,g_steb2_d[l_ac].stec022,g_steb2_d[l_ac].stec023,g_steb2_d[l_ac].stecsite, 
                      g_steb2_d[l_ac].stecunit
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_steb2_d_mask_o[l_ac].* =  g_steb2_d[l_ac].*
                  CALL astt401_stec_t_mask()
                  LET g_steb2_d_mask_n[l_ac].* =  g_steb2_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astt401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body2.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stea_m.steadocno
               LET gs_keys[gs_keys.getLength()+1] = g_steb2_d_t.stecseq
            
               #刪除同層單身
               IF NOT astt401_delete_b('stec_t',gs_keys,"'2'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astt401_key_delete_b(gs_keys,'stec_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astt401_bcl
               LET g_rec_b = g_rec_b-1
               
               #add-point:單身2刪除後
               {<point name="input.body2.a_delete"/>}
               #end add-point
               LET l_count = g_steb_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body2.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_steb2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM stec_t 
             WHERE stecent = g_enterprise AND stecdocno = g_stea_m.steadocno
               AND stecseq = g_steb2_d[l_ac].stecseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys[2] = g_steb2_d[g_detail_idx].stecseq
               CALL astt401_insert_b('stec_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_steb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stec_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astt401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_steb2_d[l_ac].* = g_steb2_d_t.*
               CLOSE astt401_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_steb2_d[l_ac].* = g_steb2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               #將遮罩欄位還原
               CALL astt401_stec_t_mask_restore('restore_mask_o')
                              
               UPDATE stec_t SET (stecdocno,stecseq,stec001,stec002,stec003,stec024,stec025,stec004, 
                   stec005,stec006,stec007,stec008,stec009,stec010,stec011,stec012,stec013,stec014,stec015, 
                   stec016,stec017,stec018,stec019,stec020,stec021,stec022,stec023,stecsite,stecunit) = (g_stea_m.steadocno, 
                   g_steb2_d[l_ac].stecseq,g_steb2_d[l_ac].stec001,g_steb2_d[l_ac].stec002,g_steb2_d[l_ac].stec003, 
                   g_steb2_d[l_ac].stec024,g_steb2_d[l_ac].stec025,g_steb2_d[l_ac].stec004,g_steb2_d[l_ac].stec005, 
                   g_steb2_d[l_ac].stec006,g_steb2_d[l_ac].stec007,g_steb2_d[l_ac].stec008,g_steb2_d[l_ac].stec009, 
                   g_steb2_d[l_ac].stec010,g_steb2_d[l_ac].stec011,g_steb2_d[l_ac].stec012,g_steb2_d[l_ac].stec013, 
                   g_steb2_d[l_ac].stec014,g_steb2_d[l_ac].stec015,g_steb2_d[l_ac].stec016,g_steb2_d[l_ac].stec017, 
                   g_steb2_d[l_ac].stec018,g_steb2_d[l_ac].stec019,g_steb2_d[l_ac].stec020,g_steb2_d[l_ac].stec021, 
                   g_steb2_d[l_ac].stec022,g_steb2_d[l_ac].stec023,g_steb2_d[l_ac].stecsite,g_steb2_d[l_ac].stecunit)  
                   #自訂欄位頁簽
                WHERE stecent = g_enterprise AND stecdocno = g_stea_m.steadocno
                  AND stecseq = g_steb2_d_t.stecseq #項次 
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stec_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_steb2_d[l_ac].* = g_steb2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stec_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_steb2_d[l_ac].* = g_steb2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys_bak[1] = g_steadocno_t
               LET gs_keys[2] = g_steb2_d[g_detail_idx].stecseq
               LET gs_keys_bak[2] = g_steb2_d_t.stecseq
               CALL astt401_update_b('stec_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astt401_stec_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_steb2_d[g_detail_idx].stecseq = g_steb2_d_t.stecseq 
                  ) THEN
                  LET gs_keys[01] = g_stea_m.steadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_steb2_d_t.stecseq
                  CALL astt401_key_update_b(gs_keys,'stec_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb2_d_t)
               LET g_log2 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stecseq
            #add-point:BEFORE FIELD stecseq
            {<point name="input.b.page2.stecseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stecseq
            
            #add-point:AFTER FIELD stecseq
            {<point name="input.a.page2.stecseq" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stecseq
            #add-point:ON CHANGE stecseq
            {<point name="input.g.page2.stecseq" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec001
            #add-point:BEFORE FIELD stec001
            {<point name="input.b.page2.stec001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec001
            
            #add-point:AFTER FIELD stec001
            {<point name="input.a.page2.stec001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stec001
            #add-point:ON CHANGE stec001
            {<point name="input.g.page2.stec001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec002
            #add-point:BEFORE FIELD stec002
            {<point name="input.b.page2.stec002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec002
            
            #add-point:AFTER FIELD stec002
            {<point name="input.a.page2.stec002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stec002
            #add-point:ON CHANGE stec002
            {<point name="input.g.page2.stec002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec003
            #add-point:BEFORE FIELD stec003
            {<point name="input.b.page2.stec003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec003
            
            #add-point:AFTER FIELD stec003
            {<point name="input.a.page2.stec003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stec003
            #add-point:ON CHANGE stec003
            {<point name="input.g.page2.stec003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec024
            #add-point:BEFORE FIELD stec024
            {<point name="input.b.page2.stec024" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec024
            
            #add-point:AFTER FIELD stec024
            {<point name="input.a.page2.stec024" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stec024
            #add-point:ON CHANGE stec024
            {<point name="input.g.page2.stec024" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec025
            #add-point:BEFORE FIELD stec025
            {<point name="input.b.page2.stec025" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec025
            
            #add-point:AFTER FIELD stec025
            {<point name="input.a.page2.stec025" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stec025
            #add-point:ON CHANGE stec025
            {<point name="input.g.page2.stec025" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec004
            
            #add-point:AFTER FIELD stec004
            {<point name="input.a.page2.stec004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec004
            #add-point:BEFORE FIELD stec004
            {<point name="input.b.page2.stec004" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stec004
            #add-point:ON CHANGE stec004
            {<point name="input.g.page2.stec004" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec005
            
            #add-point:AFTER FIELD stec005
            {<point name="input.a.page2.stec005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec005
            #add-point:BEFORE FIELD stec005
            {<point name="input.b.page2.stec005" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stec005
            #add-point:ON CHANGE stec005
            {<point name="input.g.page2.stec005" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec006
            
            #add-point:AFTER FIELD stec006
            {<point name="input.a.page2.stec006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec006
            #add-point:BEFORE FIELD stec006
            {<point name="input.b.page2.stec006" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stec006
            #add-point:ON CHANGE stec006
            {<point name="input.g.page2.stec006" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec007
            
            #add-point:AFTER FIELD stec007
            {<point name="input.a.page2.stec007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec007
            #add-point:BEFORE FIELD stec007
            {<point name="input.b.page2.stec007" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stec007
            #add-point:ON CHANGE stec007
            {<point name="input.g.page2.stec007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec008
            #add-point:BEFORE FIELD stec008
            {<point name="input.b.page2.stec008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec008
            
            #add-point:AFTER FIELD stec008
            {<point name="input.a.page2.stec008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stec008
            #add-point:ON CHANGE stec008
            {<point name="input.g.page2.stec008" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec009
            
            #add-point:AFTER FIELD stec009
            {<point name="input.a.page2.stec009" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec009
            #add-point:BEFORE FIELD stec009
            {<point name="input.b.page2.stec009" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stec009
            #add-point:ON CHANGE stec009
            {<point name="input.g.page2.stec009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec010
            #add-point:BEFORE FIELD stec010
            {<point name="input.b.page2.stec010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec010
            
            #add-point:AFTER FIELD stec010
            {<point name="input.a.page2.stec010" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stec010
            #add-point:ON CHANGE stec010
            {<point name="input.g.page2.stec010" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec011
            #add-point:BEFORE FIELD stec011
            {<point name="input.b.page2.stec011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec011
            
            #add-point:AFTER FIELD stec011
            {<point name="input.a.page2.stec011" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stec011
            #add-point:ON CHANGE stec011
            {<point name="input.g.page2.stec011" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec012
            #add-point:BEFORE FIELD stec012
            {<point name="input.b.page2.stec012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec012
            
            #add-point:AFTER FIELD stec012
            {<point name="input.a.page2.stec012" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stec012
            #add-point:ON CHANGE stec012
            {<point name="input.g.page2.stec012" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec013
            #add-point:BEFORE FIELD stec013
            {<point name="input.b.page2.stec013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec013
            
            #add-point:AFTER FIELD stec013
            {<point name="input.a.page2.stec013" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stec013
            #add-point:ON CHANGE stec013
            {<point name="input.g.page2.stec013" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec014
            #add-point:BEFORE FIELD stec014
            {<point name="input.b.page2.stec014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec014
            
            #add-point:AFTER FIELD stec014
            {<point name="input.a.page2.stec014" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stec014
            #add-point:ON CHANGE stec014
            {<point name="input.g.page2.stec014" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec015
            
            #add-point:AFTER FIELD stec015
            {<point name="input.a.page2.stec015" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec015
            #add-point:BEFORE FIELD stec015
            {<point name="input.b.page2.stec015" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stec015
            #add-point:ON CHANGE stec015
            {<point name="input.g.page2.stec015" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec016
            
            #add-point:AFTER FIELD stec016
            {<point name="input.a.page2.stec016" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec016
            #add-point:BEFORE FIELD stec016
            {<point name="input.b.page2.stec016" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stec016
            #add-point:ON CHANGE stec016
            {<point name="input.g.page2.stec016" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec017
            #add-point:BEFORE FIELD stec017
            {<point name="input.b.page2.stec017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec017
            
            #add-point:AFTER FIELD stec017
            {<point name="input.a.page2.stec017" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stec017
            #add-point:ON CHANGE stec017
            {<point name="input.g.page2.stec017" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec018
            #add-point:BEFORE FIELD stec018
            {<point name="input.b.page2.stec018" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec018
            
            #add-point:AFTER FIELD stec018
            {<point name="input.a.page2.stec018" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stec018
            #add-point:ON CHANGE stec018
            {<point name="input.g.page2.stec018" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec019
            #add-point:BEFORE FIELD stec019
            {<point name="input.b.page2.stec019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec019
            
            #add-point:AFTER FIELD stec019
            {<point name="input.a.page2.stec019" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stec019
            #add-point:ON CHANGE stec019
            {<point name="input.g.page2.stec019" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec020
            #add-point:BEFORE FIELD stec020
            {<point name="input.b.page2.stec020" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec020
            
            #add-point:AFTER FIELD stec020
            {<point name="input.a.page2.stec020" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stec020
            #add-point:ON CHANGE stec020
            {<point name="input.g.page2.stec020" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec021
            #add-point:BEFORE FIELD stec021
            {<point name="input.b.page2.stec021" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec021
            
            #add-point:AFTER FIELD stec021
            {<point name="input.a.page2.stec021" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stec021
            #add-point:ON CHANGE stec021
            {<point name="input.g.page2.stec021" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec022
            #add-point:BEFORE FIELD stec022
            {<point name="input.b.page2.stec022" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec022
            
            #add-point:AFTER FIELD stec022
            {<point name="input.a.page2.stec022" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stec022
            #add-point:ON CHANGE stec022
            {<point name="input.g.page2.stec022" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stec023
            #add-point:BEFORE FIELD stec023
            {<point name="input.b.page2.stec023" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stec023
            
            #add-point:AFTER FIELD stec023
            {<point name="input.a.page2.stec023" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stec023
            #add-point:ON CHANGE stec023
            {<point name="input.g.page2.stec023" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stecsite
            #add-point:BEFORE FIELD stecsite
            {<point name="input.b.page2.stecsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stecsite
            
            #add-point:AFTER FIELD stecsite
            {<point name="input.a.page2.stecsite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stecsite
            #add-point:ON CHANGE stecsite
            {<point name="input.g.page2.stecsite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stecunit
            #add-point:BEFORE FIELD stecunit
            {<point name="input.b.page2.stecunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stecunit
            
            #add-point:AFTER FIELD stecunit
            {<point name="input.a.page2.stecunit" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stecunit
            #add-point:ON CHANGE stecunit
            {<point name="input.g.page2.stecunit" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page2.stecseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stecseq
            #add-point:ON ACTION controlp INFIELD stecseq
            {<point name="input.c.page2.stecseq" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stec001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec001
            #add-point:ON ACTION controlp INFIELD stec001
            {<point name="input.c.page2.stec001" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stec002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec002
            #add-point:ON ACTION controlp INFIELD stec002
            {<point name="input.c.page2.stec002" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stec003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec003
            #add-point:ON ACTION controlp INFIELD stec003
            {<point name="input.c.page2.stec003" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stec024
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec024
            #add-point:ON ACTION controlp INFIELD stec024
            {<point name="input.c.page2.stec024" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stec025
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec025
            #add-point:ON ACTION controlp INFIELD stec025
            {<point name="input.c.page2.stec025" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stec004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec004
            #add-point:ON ACTION controlp INFIELD stec004
            {<point name="input.c.page2.stec004" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stec005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec005
            #add-point:ON ACTION controlp INFIELD stec005
            {<point name="input.c.page2.stec005" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stec006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec006
            #add-point:ON ACTION controlp INFIELD stec006
            {<point name="input.c.page2.stec006" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stec007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec007
            #add-point:ON ACTION controlp INFIELD stec007
            {<point name="input.c.page2.stec007" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stec008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec008
            #add-point:ON ACTION controlp INFIELD stec008
            {<point name="input.c.page2.stec008" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stec009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec009
            #add-point:ON ACTION controlp INFIELD stec009
            {<point name="input.c.page2.stec009" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stec010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec010
            #add-point:ON ACTION controlp INFIELD stec010
            {<point name="input.c.page2.stec010" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stec011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec011
            #add-point:ON ACTION controlp INFIELD stec011
            {<point name="input.c.page2.stec011" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stec012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec012
            #add-point:ON ACTION controlp INFIELD stec012
            {<point name="input.c.page2.stec012" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stec013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec013
            #add-point:ON ACTION controlp INFIELD stec013
            {<point name="input.c.page2.stec013" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stec014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec014
            #add-point:ON ACTION controlp INFIELD stec014
            {<point name="input.c.page2.stec014" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stec015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec015
            #add-point:ON ACTION controlp INFIELD stec015
            {<point name="input.c.page2.stec015" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stec016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec016
            #add-point:ON ACTION controlp INFIELD stec016
            {<point name="input.c.page2.stec016" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stec017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec017
            #add-point:ON ACTION controlp INFIELD stec017
            {<point name="input.c.page2.stec017" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stec018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec018
            #add-point:ON ACTION controlp INFIELD stec018
            {<point name="input.c.page2.stec018" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stec019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec019
            #add-point:ON ACTION controlp INFIELD stec019
            {<point name="input.c.page2.stec019" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stec020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec020
            #add-point:ON ACTION controlp INFIELD stec020
            {<point name="input.c.page2.stec020" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stec021
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec021
            #add-point:ON ACTION controlp INFIELD stec021
            {<point name="input.c.page2.stec021" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stec022
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec022
            #add-point:ON ACTION controlp INFIELD stec022
            {<point name="input.c.page2.stec022" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stec023
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stec023
            #add-point:ON ACTION controlp INFIELD stec023
            {<point name="input.c.page2.stec023" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stecsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stecsite
            #add-point:ON ACTION controlp INFIELD stecsite
            {<point name="input.c.page2.stecsite" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stecunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stecunit
            #add-point:ON ACTION controlp INFIELD stecunit
            {<point name="input.c.page2.stecunit" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_steb2_d[l_ac].* = g_steb2_d_t.*
               END IF
               CLOSE astt401_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astt401_unlock_b("stec_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_steb2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_steb2_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_steb3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_3)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body3.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_steb3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astt401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_steb3_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body3.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_steb3_d[l_ac].* TO NULL 
            INITIALIZE g_steb3_d_t.* TO NULL 
            INITIALIZE g_steb3_d_o.* TO NULL 
            #公用欄位給值(單身3)
            
            #自定義預設值(單身3)
                  LET g_steb3_d[l_ac].stee007 = "0"
 
            #add-point:modify段before備份
            {<point name="input.body3.insert.before_bak"/>}
            #end add-point
            LET g_steb3_d_t.* = g_steb3_d[l_ac].*     #新輸入資料
            LET g_steb3_d_o.* = g_steb3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astt401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body3.insert.after_set_entry_b"/>}
            #end add-point
            CALL astt401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_steb3_d[li_reproduce_target].* = g_steb3_d[li_reproduce].*
 
               LET g_steb3_d[li_reproduce_target].steeseq = NULL
               LET g_steb3_d[li_reproduce_target].stee002 = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body3.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body3.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 3
            CALL astt401_b_fill2('9')
  
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astt401_cl USING g_enterprise,g_stea_m.steadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astt401_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE astt401_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_steb3_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_steb3_d[l_ac].steeseq IS NOT NULL
               AND g_steb3_d[l_ac].stee002 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_steb3_d_t.* = g_steb3_d[l_ac].*  #BACKUP
               LET g_steb3_d_o.* = g_steb3_d[l_ac].*  #BACKUP
               CALL astt401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body3.after_set_entry_b"/>}
               #end add-point  
               CALL astt401_set_no_entry_b(l_cmd)
               IF NOT astt401_lock_b("stee_t","'3'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astt401_bcl3 INTO g_steb3_d[l_ac].steeseq,g_steb3_d[l_ac].stee002,g_steb3_d[l_ac].stee001, 
                      g_steb3_d[l_ac].stee003,g_steb3_d[l_ac].stee004,g_steb3_d[l_ac].stee005,g_steb3_d[l_ac].stee006, 
                      g_steb3_d[l_ac].stee007,g_steb3_d[l_ac].stee008,g_steb3_d[l_ac].stee009,g_steb3_d[l_ac].stee010, 
                      g_steb3_d[l_ac].stee011,g_steb3_d[l_ac].steesite,g_steb3_d[l_ac].steeunit
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_steb3_d_mask_o[l_ac].* =  g_steb3_d[l_ac].*
                  CALL astt401_stee_t_mask()
                  LET g_steb3_d_mask_n[l_ac].* =  g_steb3_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astt401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body3.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body3.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前
               {<point name="input.body3.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stea_m.steadocno
               LET gs_keys[gs_keys.getLength()+1] = g_steb3_d_t.steeseq
               LET gs_keys[gs_keys.getLength()+1] = g_steb3_d_t.stee002
            
               #刪除同層單身
               IF NOT astt401_delete_b('stee_t',gs_keys,"'3'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astt401_key_delete_b(gs_keys,'stee_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身3刪除中
               {<point name="input.body3.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astt401_bcl
               LET g_rec_b = g_rec_b-1
               
               #add-point:單身3刪除後
               {<point name="input.body3.a_delete"/>}
               #end add-point
               LET l_count = g_steb_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body3.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_steb3_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身3新增前
            {<point name="input.body3.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM stee_t 
             WHERE steeent = g_enterprise AND steedocno = g_stea_m.steadocno
               AND steeseq = g_steb3_d[l_ac].steeseq
               AND stee002 = g_steb3_d[l_ac].stee002
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前
               {<point name="input.body3.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys[2] = g_steb3_d[g_detail_idx].steeseq
               LET gs_keys[3] = g_steb3_d[g_detail_idx].stee002
               CALL astt401_insert_b('stee_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3
               {<point name="input.body3.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_steb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stee_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astt401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body3.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_steb3_d[l_ac].* = g_steb3_d_t.*
               CLOSE astt401_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_steb3_d[l_ac].* = g_steb3_d_t.*
            ELSE
               #add-point:單身page3修改前
               {<point name="input.body3.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身3)
               
               
               #將遮罩欄位還原
               CALL astt401_stee_t_mask_restore('restore_mask_o')
                              
               UPDATE stee_t SET (steedocno,steeseq,stee002,stee001,stee003,stee004,stee005,stee006, 
                   stee007,stee008,stee009,stee010,stee011,steesite,steeunit) = (g_stea_m.steadocno, 
                   g_steb3_d[l_ac].steeseq,g_steb3_d[l_ac].stee002,g_steb3_d[l_ac].stee001,g_steb3_d[l_ac].stee003, 
                   g_steb3_d[l_ac].stee004,g_steb3_d[l_ac].stee005,g_steb3_d[l_ac].stee006,g_steb3_d[l_ac].stee007, 
                   g_steb3_d[l_ac].stee008,g_steb3_d[l_ac].stee009,g_steb3_d[l_ac].stee010,g_steb3_d[l_ac].stee011, 
                   g_steb3_d[l_ac].steesite,g_steb3_d[l_ac].steeunit) #自訂欄位頁簽
                WHERE steeent = g_enterprise AND steedocno = g_stea_m.steadocno
                  AND steeseq = g_steb3_d_t.steeseq #項次 
                  AND stee002 = g_steb3_d_t.stee002
                  
               #add-point:單身page3修改中
               {<point name="input.body3.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stee_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_steb3_d[l_ac].* = g_steb3_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stee_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_steb3_d[l_ac].* = g_steb3_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys_bak[1] = g_steadocno_t
               LET gs_keys[2] = g_steb3_d[g_detail_idx].steeseq
               LET gs_keys_bak[2] = g_steb3_d_t.steeseq
               LET gs_keys[3] = g_steb3_d[g_detail_idx].stee002
               LET gs_keys_bak[3] = g_steb3_d_t.stee002
               CALL astt401_update_b('stee_t',gs_keys,gs_keys_bak,"'3'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astt401_stee_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_steb3_d[g_detail_idx].steeseq = g_steb3_d_t.steeseq 
                  AND g_steb3_d[g_detail_idx].stee002 = g_steb3_d_t.stee002 
                  ) THEN
                  LET gs_keys[01] = g_stea_m.steadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_steb3_d_t.steeseq
                  LET gs_keys[gs_keys.getLength()+1] = g_steb3_d_t.stee002
                  CALL astt401_key_update_b(gs_keys,'stee_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb3_d_t)
               LET g_log2 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb3_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page3修改後
               {<point name="input.body3.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steeseq
            #add-point:BEFORE FIELD steeseq
            {<point name="input.b.page3.steeseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steeseq
            
            #add-point:AFTER FIELD steeseq
            {<point name="input.a.page3.steeseq" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steeseq
            #add-point:ON CHANGE steeseq
            {<point name="input.g.page3.steeseq" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stee002
            #add-point:BEFORE FIELD stee002
            {<point name="input.b.page3.stee002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stee002
            
            #add-point:AFTER FIELD stee002
            {<point name="input.a.page3.stee002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stee002
            #add-point:ON CHANGE stee002
            {<point name="input.g.page3.stee002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stee001
            #add-point:BEFORE FIELD stee001
            {<point name="input.b.page3.stee001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stee001
            
            #add-point:AFTER FIELD stee001
            {<point name="input.a.page3.stee001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stee001
            #add-point:ON CHANGE stee001
            {<point name="input.g.page3.stee001" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stee003
            
            #add-point:AFTER FIELD stee003
            {<point name="input.a.page3.stee003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stee003
            #add-point:BEFORE FIELD stee003
            {<point name="input.b.page3.stee003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stee003
            #add-point:ON CHANGE stee003
            {<point name="input.g.page3.stee003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stee004
            #add-point:BEFORE FIELD stee004
            {<point name="input.b.page3.stee004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stee004
            
            #add-point:AFTER FIELD stee004
            {<point name="input.a.page3.stee004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stee004
            #add-point:ON CHANGE stee004
            {<point name="input.g.page3.stee004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stee005
            #add-point:BEFORE FIELD stee005
            {<point name="input.b.page3.stee005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stee005
            
            #add-point:AFTER FIELD stee005
            {<point name="input.a.page3.stee005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stee005
            #add-point:ON CHANGE stee005
            {<point name="input.g.page3.stee005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stee006
            #add-point:BEFORE FIELD stee006
            {<point name="input.b.page3.stee006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stee006
            
            #add-point:AFTER FIELD stee006
            {<point name="input.a.page3.stee006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stee006
            #add-point:ON CHANGE stee006
            {<point name="input.g.page3.stee006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stee007
            #add-point:BEFORE FIELD stee007
            {<point name="input.b.page3.stee007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stee007
            
            #add-point:AFTER FIELD stee007
            {<point name="input.a.page3.stee007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stee007
            #add-point:ON CHANGE stee007
            {<point name="input.g.page3.stee007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stee008
            #add-point:BEFORE FIELD stee008
            {<point name="input.b.page3.stee008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stee008
            
            #add-point:AFTER FIELD stee008
            {<point name="input.a.page3.stee008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stee008
            #add-point:ON CHANGE stee008
            {<point name="input.g.page3.stee008" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stee009
            #add-point:BEFORE FIELD stee009
            {<point name="input.b.page3.stee009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stee009
            
            #add-point:AFTER FIELD stee009
            {<point name="input.a.page3.stee009" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stee009
            #add-point:ON CHANGE stee009
            {<point name="input.g.page3.stee009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stee010
            #add-point:BEFORE FIELD stee010
            {<point name="input.b.page3.stee010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stee010
            
            #add-point:AFTER FIELD stee010
            {<point name="input.a.page3.stee010" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stee010
            #add-point:ON CHANGE stee010
            {<point name="input.g.page3.stee010" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stee011
            #add-point:BEFORE FIELD stee011
            {<point name="input.b.page3.stee011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stee011
            
            #add-point:AFTER FIELD stee011
            {<point name="input.a.page3.stee011" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stee011
            #add-point:ON CHANGE stee011
            {<point name="input.g.page3.stee011" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steesite
            #add-point:BEFORE FIELD steesite
            {<point name="input.b.page3.steesite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steesite
            
            #add-point:AFTER FIELD steesite
            {<point name="input.a.page3.steesite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steesite
            #add-point:ON CHANGE steesite
            {<point name="input.g.page3.steesite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steeunit
            #add-point:BEFORE FIELD steeunit
            {<point name="input.b.page3.steeunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steeunit
            
            #add-point:AFTER FIELD steeunit
            {<point name="input.a.page3.steeunit" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steeunit
            #add-point:ON CHANGE steeunit
            {<point name="input.g.page3.steeunit" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page3.steeseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steeseq
            #add-point:ON ACTION controlp INFIELD steeseq
            {<point name="input.c.page3.steeseq" />}
            #END add-point
 
         #Ctrlp:input.c.page3.stee002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stee002
            #add-point:ON ACTION controlp INFIELD stee002
            {<point name="input.c.page3.stee002" />}
            #END add-point
 
         #Ctrlp:input.c.page3.stee001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stee001
            #add-point:ON ACTION controlp INFIELD stee001
            {<point name="input.c.page3.stee001" />}
            #END add-point
 
         #Ctrlp:input.c.page3.stee003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stee003
            #add-point:ON ACTION controlp INFIELD stee003
            {<point name="input.c.page3.stee003" />}
            #END add-point
 
         #Ctrlp:input.c.page3.stee004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stee004
            #add-point:ON ACTION controlp INFIELD stee004
            {<point name="input.c.page3.stee004" />}
            #END add-point
 
         #Ctrlp:input.c.page3.stee005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stee005
            #add-point:ON ACTION controlp INFIELD stee005
            {<point name="input.c.page3.stee005" />}
            #END add-point
 
         #Ctrlp:input.c.page3.stee006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stee006
            #add-point:ON ACTION controlp INFIELD stee006
            {<point name="input.c.page3.stee006" />}
            #END add-point
 
         #Ctrlp:input.c.page3.stee007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stee007
            #add-point:ON ACTION controlp INFIELD stee007
            {<point name="input.c.page3.stee007" />}
            #END add-point
 
         #Ctrlp:input.c.page3.stee008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stee008
            #add-point:ON ACTION controlp INFIELD stee008
            {<point name="input.c.page3.stee008" />}
            #END add-point
 
         #Ctrlp:input.c.page3.stee009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stee009
            #add-point:ON ACTION controlp INFIELD stee009
            {<point name="input.c.page3.stee009" />}
            #END add-point
 
         #Ctrlp:input.c.page3.stee010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stee010
            #add-point:ON ACTION controlp INFIELD stee010
            {<point name="input.c.page3.stee010" />}
            #END add-point
 
         #Ctrlp:input.c.page3.stee011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stee011
            #add-point:ON ACTION controlp INFIELD stee011
            {<point name="input.c.page3.stee011" />}
            #END add-point
 
         #Ctrlp:input.c.page3.steesite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steesite
            #add-point:ON ACTION controlp INFIELD steesite
            {<point name="input.c.page3.steesite" />}
            #END add-point
 
         #Ctrlp:input.c.page3.steeunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steeunit
            #add-point:ON ACTION controlp INFIELD steeunit
            {<point name="input.c.page3.steeunit" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page3 after_row
            {<point name="input.body3.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_steb3_d[l_ac].* = g_steb3_d_t.*
               END IF
               CLOSE astt401_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astt401_unlock_b("stee_t","'3'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page3 after_row2
            {<point name="input.body3.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body3.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_steb3_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_steb3_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_steb4_d FROM s_detail4.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_4)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body4.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_steb4_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astt401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_steb4_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body4.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_steb4_d[l_ac].* TO NULL 
            INITIALIZE g_steb4_d_t.* TO NULL 
            INITIALIZE g_steb4_d_o.* TO NULL 
            #公用欄位給值(單身4)
            
            #自定義預設值(單身4)
                  LET g_steb4_d[l_ac].steg004 = "0"
      LET g_steb4_d[l_ac].steg005 = "0"
 
            #add-point:modify段before備份
            {<point name="input.body4.insert.before_bak"/>}
            #end add-point
            LET g_steb4_d_t.* = g_steb4_d[l_ac].*     #新輸入資料
            LET g_steb4_d_o.* = g_steb4_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astt401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body4.insert.after_set_entry_b"/>}
            #end add-point
            CALL astt401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_steb4_d[li_reproduce_target].* = g_steb4_d[li_reproduce].*
 
               LET g_steb4_d[li_reproduce_target].stegseq = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body4.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body4.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 4
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astt401_cl USING g_enterprise,g_stea_m.steadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astt401_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE astt401_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_steb4_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_steb4_d[l_ac].stegseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_steb4_d_t.* = g_steb4_d[l_ac].*  #BACKUP
               LET g_steb4_d_o.* = g_steb4_d[l_ac].*  #BACKUP
               CALL astt401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body4.after_set_entry_b"/>}
               #end add-point  
               CALL astt401_set_no_entry_b(l_cmd)
               IF NOT astt401_lock_b("steg_t","'4'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astt401_bcl4 INTO g_steb4_d[l_ac].stegseq,g_steb4_d[l_ac].steg001,g_steb4_d[l_ac].steg003, 
                      g_steb4_d[l_ac].steg002,g_steb4_d[l_ac].steg004,g_steb4_d[l_ac].steg005,g_steb4_d[l_ac].stegacti, 
                      g_steb4_d[l_ac].stegsite,g_steb4_d[l_ac].stegunit
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_steb4_d_mask_o[l_ac].* =  g_steb4_d[l_ac].*
                  CALL astt401_steg_t_mask()
                  LET g_steb4_d_mask_n[l_ac].* =  g_steb4_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astt401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body4.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body4.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身4刪除前
               {<point name="input.body4.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stea_m.steadocno
               LET gs_keys[gs_keys.getLength()+1] = g_steb4_d_t.stegseq
            
               #刪除同層單身
               IF NOT astt401_delete_b('steg_t',gs_keys,"'4'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astt401_key_delete_b(gs_keys,'steg_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身4刪除中
               {<point name="input.body4.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astt401_bcl
               LET g_rec_b = g_rec_b-1
               
               #add-point:單身4刪除後
               {<point name="input.body4.a_delete"/>}
               #end add-point
               LET l_count = g_steb_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body4.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_steb4_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身4新增前
            {<point name="input.body4.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM steg_t 
             WHERE stegent = g_enterprise AND stegdocno = g_stea_m.steadocno
               AND stegseq = g_steb4_d[l_ac].stegseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身4新增前
               {<point name="input.body4.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys[2] = g_steb4_d[g_detail_idx].stegseq
               CALL astt401_insert_b('steg_t',gs_keys,"'4'")
                           
               #add-point:單身新增後4
               {<point name="input.body4.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_steb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "steg_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astt401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body4.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_steb4_d[l_ac].* = g_steb4_d_t.*
               CLOSE astt401_bcl4
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_steb4_d[l_ac].* = g_steb4_d_t.*
            ELSE
               #add-point:單身page4修改前
               {<point name="input.body4.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身4)
               
               
               #將遮罩欄位還原
               CALL astt401_steg_t_mask_restore('restore_mask_o')
                              
               UPDATE steg_t SET (stegdocno,stegseq,steg001,steg003,steg002,steg004,steg005,stegacti, 
                   stegsite,stegunit) = (g_stea_m.steadocno,g_steb4_d[l_ac].stegseq,g_steb4_d[l_ac].steg001, 
                   g_steb4_d[l_ac].steg003,g_steb4_d[l_ac].steg002,g_steb4_d[l_ac].steg004,g_steb4_d[l_ac].steg005, 
                   g_steb4_d[l_ac].stegacti,g_steb4_d[l_ac].stegsite,g_steb4_d[l_ac].stegunit) #自訂欄位頁簽 

                WHERE stegent = g_enterprise AND stegdocno = g_stea_m.steadocno
                  AND stegseq = g_steb4_d_t.stegseq #項次 
                  
               #add-point:單身page4修改中
               {<point name="input.body4.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "steg_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_steb4_d[l_ac].* = g_steb4_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "steg_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_steb4_d[l_ac].* = g_steb4_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys_bak[1] = g_steadocno_t
               LET gs_keys[2] = g_steb4_d[g_detail_idx].stegseq
               LET gs_keys_bak[2] = g_steb4_d_t.stegseq
               CALL astt401_update_b('steg_t',gs_keys,gs_keys_bak,"'4'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astt401_steg_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_steb4_d[g_detail_idx].stegseq = g_steb4_d_t.stegseq 
                  ) THEN
                  LET gs_keys[01] = g_stea_m.steadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_steb4_d_t.stegseq
                  CALL astt401_key_update_b(gs_keys,'steg_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb4_d_t)
               LET g_log2 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb4_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page4修改後
               {<point name="input.body4.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stegseq
            #add-point:BEFORE FIELD stegseq
            {<point name="input.b.page4.stegseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stegseq
            
            #add-point:AFTER FIELD stegseq
            {<point name="input.a.page4.stegseq" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stegseq
            #add-point:ON CHANGE stegseq
            {<point name="input.g.page4.stegseq" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steg001
            #add-point:BEFORE FIELD steg001
            {<point name="input.b.page4.steg001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steg001
            
            #add-point:AFTER FIELD steg001
            {<point name="input.a.page4.steg001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steg001
            #add-point:ON CHANGE steg001
            {<point name="input.g.page4.steg001" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steg003
            
            #add-point:AFTER FIELD steg003
            {<point name="input.a.page4.steg003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steg003
            #add-point:BEFORE FIELD steg003
            {<point name="input.b.page4.steg003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steg003
            #add-point:ON CHANGE steg003
            {<point name="input.g.page4.steg003" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steg002
            
            #add-point:AFTER FIELD steg002
            {<point name="input.a.page4.steg002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steg002
            #add-point:BEFORE FIELD steg002
            {<point name="input.b.page4.steg002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steg002
            #add-point:ON CHANGE steg002
            {<point name="input.g.page4.steg002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steg004
            #add-point:BEFORE FIELD steg004
            {<point name="input.b.page4.steg004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steg004
            
            #add-point:AFTER FIELD steg004
            {<point name="input.a.page4.steg004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steg004
            #add-point:ON CHANGE steg004
            {<point name="input.g.page4.steg004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steg005
            #add-point:BEFORE FIELD steg005
            {<point name="input.b.page4.steg005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steg005
            
            #add-point:AFTER FIELD steg005
            {<point name="input.a.page4.steg005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steg005
            #add-point:ON CHANGE steg005
            {<point name="input.g.page4.steg005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stegacti
            #add-point:BEFORE FIELD stegacti
            {<point name="input.b.page4.stegacti" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stegacti
            
            #add-point:AFTER FIELD stegacti
            {<point name="input.a.page4.stegacti" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stegacti
            #add-point:ON CHANGE stegacti
            {<point name="input.g.page4.stegacti" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stegsite
            #add-point:BEFORE FIELD stegsite
            {<point name="input.b.page4.stegsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stegsite
            
            #add-point:AFTER FIELD stegsite
            {<point name="input.a.page4.stegsite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stegsite
            #add-point:ON CHANGE stegsite
            {<point name="input.g.page4.stegsite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stegunit
            #add-point:BEFORE FIELD stegunit
            {<point name="input.b.page4.stegunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stegunit
            
            #add-point:AFTER FIELD stegunit
            {<point name="input.a.page4.stegunit" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stegunit
            #add-point:ON CHANGE stegunit
            {<point name="input.g.page4.stegunit" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page4.stegseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stegseq
            #add-point:ON ACTION controlp INFIELD stegseq
            {<point name="input.c.page4.stegseq" />}
            #END add-point
 
         #Ctrlp:input.c.page4.steg001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steg001
            #add-point:ON ACTION controlp INFIELD steg001
            {<point name="input.c.page4.steg001" />}
            #END add-point
 
         #Ctrlp:input.c.page4.steg003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steg003
            #add-point:ON ACTION controlp INFIELD steg003
            {<point name="input.c.page4.steg003" />}
            #END add-point
 
         #Ctrlp:input.c.page4.steg002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steg002
            #add-point:ON ACTION controlp INFIELD steg002
            {<point name="input.c.page4.steg002" />}
            #END add-point
 
         #Ctrlp:input.c.page4.steg004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steg004
            #add-point:ON ACTION controlp INFIELD steg004
            {<point name="input.c.page4.steg004" />}
            #END add-point
 
         #Ctrlp:input.c.page4.steg005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steg005
            #add-point:ON ACTION controlp INFIELD steg005
            {<point name="input.c.page4.steg005" />}
            #END add-point
 
         #Ctrlp:input.c.page4.stegacti
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stegacti
            #add-point:ON ACTION controlp INFIELD stegacti
            {<point name="input.c.page4.stegacti" />}
            #END add-point
 
         #Ctrlp:input.c.page4.stegsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stegsite
            #add-point:ON ACTION controlp INFIELD stegsite
            {<point name="input.c.page4.stegsite" />}
            #END add-point
 
         #Ctrlp:input.c.page4.stegunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stegunit
            #add-point:ON ACTION controlp INFIELD stegunit
            {<point name="input.c.page4.stegunit" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page4 after_row
            {<point name="input.body4.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_steb4_d[l_ac].* = g_steb4_d_t.*
               END IF
               CLOSE astt401_bcl4
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astt401_unlock_b("steg_t","'4'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page4 after_row2
            {<point name="input.body4.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body4.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_steb4_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_steb4_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_steb5_d FROM s_detail5.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_5)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body5.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_steb5_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astt401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_steb5_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body5.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_steb5_d[l_ac].* TO NULL 
            INITIALIZE g_steb5_d_t.* TO NULL 
            INITIALIZE g_steb5_d_o.* TO NULL 
            #公用欄位給值(單身5)
            
            #自定義預設值(單身5)
            
            #add-point:modify段before備份
            {<point name="input.body5.insert.before_bak"/>}
            #end add-point
            LET g_steb5_d_t.* = g_steb5_d[l_ac].*     #新輸入資料
            LET g_steb5_d_o.* = g_steb5_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astt401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body5.insert.after_set_entry_b"/>}
            #end add-point
            CALL astt401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_steb5_d[li_reproduce_target].* = g_steb5_d[li_reproduce].*
 
               LET g_steb5_d[li_reproduce_target].stehseq = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body5.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body5.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 5
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astt401_cl USING g_enterprise,g_stea_m.steadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astt401_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE astt401_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_steb5_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_steb5_d[l_ac].stehseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_steb5_d_t.* = g_steb5_d[l_ac].*  #BACKUP
               LET g_steb5_d_o.* = g_steb5_d[l_ac].*  #BACKUP
               CALL astt401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body5.after_set_entry_b"/>}
               #end add-point  
               CALL astt401_set_no_entry_b(l_cmd)
               IF NOT astt401_lock_b("steh_t","'5'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astt401_bcl5 INTO g_steb5_d[l_ac].stehseq,g_steb5_d[l_ac].steh001,g_steb5_d[l_ac].steh002, 
                      g_steb5_d[l_ac].steh003,g_steb5_d[l_ac].stehacti,g_steb5_d[l_ac].stehsite,g_steb5_d[l_ac].stehunit 

                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_steb5_d_mask_o[l_ac].* =  g_steb5_d[l_ac].*
                  CALL astt401_steh_t_mask()
                  LET g_steb5_d_mask_n[l_ac].* =  g_steb5_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astt401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body5.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body5.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身5刪除前
               {<point name="input.body5.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stea_m.steadocno
               LET gs_keys[gs_keys.getLength()+1] = g_steb5_d_t.stehseq
            
               #刪除同層單身
               IF NOT astt401_delete_b('steh_t',gs_keys,"'5'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astt401_key_delete_b(gs_keys,'steh_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身5刪除中
               {<point name="input.body5.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astt401_bcl
               LET g_rec_b = g_rec_b-1
               
               #add-point:單身5刪除後
               {<point name="input.body5.a_delete"/>}
               #end add-point
               LET l_count = g_steb_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body5.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_steb5_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身5新增前
            {<point name="input.body5.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM steh_t 
             WHERE stehent = g_enterprise AND stehdocno = g_stea_m.steadocno
               AND stehseq = g_steb5_d[l_ac].stehseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身5新增前
               {<point name="input.body5.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys[2] = g_steb5_d[g_detail_idx].stehseq
               CALL astt401_insert_b('steh_t',gs_keys,"'5'")
                           
               #add-point:單身新增後5
               {<point name="input.body5.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_steb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "steh_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astt401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body5.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_steb5_d[l_ac].* = g_steb5_d_t.*
               CLOSE astt401_bcl5
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_steb5_d[l_ac].* = g_steb5_d_t.*
            ELSE
               #add-point:單身page5修改前
               {<point name="input.body5.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身5)
               
               
               #將遮罩欄位還原
               CALL astt401_steh_t_mask_restore('restore_mask_o')
                              
               UPDATE steh_t SET (stehdocno,stehseq,steh001,steh002,steh003,stehacti,stehsite,stehunit) = (g_stea_m.steadocno, 
                   g_steb5_d[l_ac].stehseq,g_steb5_d[l_ac].steh001,g_steb5_d[l_ac].steh002,g_steb5_d[l_ac].steh003, 
                   g_steb5_d[l_ac].stehacti,g_steb5_d[l_ac].stehsite,g_steb5_d[l_ac].stehunit) #自訂欄位頁簽 

                WHERE stehent = g_enterprise AND stehdocno = g_stea_m.steadocno
                  AND stehseq = g_steb5_d_t.stehseq #項次 
                  
               #add-point:單身page5修改中
               {<point name="input.body5.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "steh_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_steb5_d[l_ac].* = g_steb5_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "steh_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_steb5_d[l_ac].* = g_steb5_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys_bak[1] = g_steadocno_t
               LET gs_keys[2] = g_steb5_d[g_detail_idx].stehseq
               LET gs_keys_bak[2] = g_steb5_d_t.stehseq
               CALL astt401_update_b('steh_t',gs_keys,gs_keys_bak,"'5'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astt401_steh_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_steb5_d[g_detail_idx].stehseq = g_steb5_d_t.stehseq 
                  ) THEN
                  LET gs_keys[01] = g_stea_m.steadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_steb5_d_t.stehseq
                  CALL astt401_key_update_b(gs_keys,'steh_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb5_d_t)
               LET g_log2 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb5_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page5修改後
               {<point name="input.body5.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stehseq
            #add-point:BEFORE FIELD stehseq
            {<point name="input.b.page5.stehseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stehseq
            
            #add-point:AFTER FIELD stehseq
            {<point name="input.a.page5.stehseq" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stehseq
            #add-point:ON CHANGE stehseq
            {<point name="input.g.page5.stehseq" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steh001
            #add-point:BEFORE FIELD steh001
            {<point name="input.b.page5.steh001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steh001
            
            #add-point:AFTER FIELD steh001
            {<point name="input.a.page5.steh001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steh001
            #add-point:ON CHANGE steh001
            {<point name="input.g.page5.steh001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steh002
            #add-point:BEFORE FIELD steh002
            {<point name="input.b.page5.steh002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steh002
            
            #add-point:AFTER FIELD steh002
            {<point name="input.a.page5.steh002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steh002
            #add-point:ON CHANGE steh002
            {<point name="input.g.page5.steh002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steh003
            #add-point:BEFORE FIELD steh003
            {<point name="input.b.page5.steh003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steh003
            
            #add-point:AFTER FIELD steh003
            {<point name="input.a.page5.steh003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steh003
            #add-point:ON CHANGE steh003
            {<point name="input.g.page5.steh003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stehacti
            #add-point:BEFORE FIELD stehacti
            {<point name="input.b.page5.stehacti" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stehacti
            
            #add-point:AFTER FIELD stehacti
            {<point name="input.a.page5.stehacti" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stehacti
            #add-point:ON CHANGE stehacti
            {<point name="input.g.page5.stehacti" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stehsite
            #add-point:BEFORE FIELD stehsite
            {<point name="input.b.page5.stehsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stehsite
            
            #add-point:AFTER FIELD stehsite
            {<point name="input.a.page5.stehsite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stehsite
            #add-point:ON CHANGE stehsite
            {<point name="input.g.page5.stehsite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stehunit
            #add-point:BEFORE FIELD stehunit
            {<point name="input.b.page5.stehunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stehunit
            
            #add-point:AFTER FIELD stehunit
            {<point name="input.a.page5.stehunit" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stehunit
            #add-point:ON CHANGE stehunit
            {<point name="input.g.page5.stehunit" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page5.stehseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stehseq
            #add-point:ON ACTION controlp INFIELD stehseq
            {<point name="input.c.page5.stehseq" />}
            #END add-point
 
         #Ctrlp:input.c.page5.steh001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steh001
            #add-point:ON ACTION controlp INFIELD steh001
            {<point name="input.c.page5.steh001" />}
            #END add-point
 
         #Ctrlp:input.c.page5.steh002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steh002
            #add-point:ON ACTION controlp INFIELD steh002
            {<point name="input.c.page5.steh002" />}
            #END add-point
 
         #Ctrlp:input.c.page5.steh003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steh003
            #add-point:ON ACTION controlp INFIELD steh003
            {<point name="input.c.page5.steh003" />}
            #END add-point
 
         #Ctrlp:input.c.page5.stehacti
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stehacti
            #add-point:ON ACTION controlp INFIELD stehacti
            {<point name="input.c.page5.stehacti" />}
            #END add-point
 
         #Ctrlp:input.c.page5.stehsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stehsite
            #add-point:ON ACTION controlp INFIELD stehsite
            {<point name="input.c.page5.stehsite" />}
            #END add-point
 
         #Ctrlp:input.c.page5.stehunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stehunit
            #add-point:ON ACTION controlp INFIELD stehunit
            {<point name="input.c.page5.stehunit" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page5 after_row
            {<point name="input.body5.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_steb5_d[l_ac].* = g_steb5_d_t.*
               END IF
               CLOSE astt401_bcl5
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astt401_unlock_b("steh_t","'5'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page5 after_row2
            {<point name="input.body5.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body5.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_steb5_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_steb5_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_steb6_d FROM s_detail6.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_6)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body6.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_steb6_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astt401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_steb6_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body6.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_steb6_d[l_ac].* TO NULL 
            INITIALIZE g_steb6_d_t.* TO NULL 
            INITIALIZE g_steb6_d_o.* TO NULL 
            #公用欄位給值(單身6)
            
            #自定義預設值(單身6)
                  LET g_steb6_d[l_ac].stei004 = "0"
 
            #add-point:modify段before備份
            {<point name="input.body6.insert.before_bak"/>}
            #end add-point
            LET g_steb6_d_t.* = g_steb6_d[l_ac].*     #新輸入資料
            LET g_steb6_d_o.* = g_steb6_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astt401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body6.insert.after_set_entry_b"/>}
            #end add-point
            CALL astt401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_steb6_d[li_reproduce_target].* = g_steb6_d[li_reproduce].*
 
               LET g_steb6_d[li_reproduce_target].steiseq = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body6.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body6.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 6
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astt401_cl USING g_enterprise,g_stea_m.steadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astt401_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE astt401_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_steb6_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_steb6_d[l_ac].steiseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_steb6_d_t.* = g_steb6_d[l_ac].*  #BACKUP
               LET g_steb6_d_o.* = g_steb6_d[l_ac].*  #BACKUP
               CALL astt401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body6.after_set_entry_b"/>}
               #end add-point  
               CALL astt401_set_no_entry_b(l_cmd)
               IF NOT astt401_lock_b("stei_t","'6'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astt401_bcl6 INTO g_steb6_d[l_ac].steiseq,g_steb6_d[l_ac].stei001,g_steb6_d[l_ac].stei002, 
                      g_steb6_d[l_ac].stei003,g_steb6_d[l_ac].stei005,g_steb6_d[l_ac].stei006,g_steb6_d[l_ac].stei004, 
                      g_steb6_d[l_ac].stei010,g_steb6_d[l_ac].stei007,g_steb6_d[l_ac].stei008,g_steb6_d[l_ac].stei009, 
                      g_steb6_d[l_ac].steiacti,g_steb6_d[l_ac].steisite,g_steb6_d[l_ac].steiunit
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_steb6_d_mask_o[l_ac].* =  g_steb6_d[l_ac].*
                  CALL astt401_stei_t_mask()
                  LET g_steb6_d_mask_n[l_ac].* =  g_steb6_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astt401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body6.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body6.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身6刪除前
               {<point name="input.body6.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stea_m.steadocno
               LET gs_keys[gs_keys.getLength()+1] = g_steb6_d_t.steiseq
            
               #刪除同層單身
               IF NOT astt401_delete_b('stei_t',gs_keys,"'6'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astt401_key_delete_b(gs_keys,'stei_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身6刪除中
               {<point name="input.body6.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astt401_bcl
               LET g_rec_b = g_rec_b-1
               
               #add-point:單身6刪除後
               {<point name="input.body6.a_delete"/>}
               #end add-point
               LET l_count = g_steb_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body6.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_steb6_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身6新增前
            {<point name="input.body6.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM stei_t 
             WHERE steient = g_enterprise AND steidocno = g_stea_m.steadocno
               AND steiseq = g_steb6_d[l_ac].steiseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身6新增前
               {<point name="input.body6.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys[2] = g_steb6_d[g_detail_idx].steiseq
               CALL astt401_insert_b('stei_t',gs_keys,"'6'")
                           
               #add-point:單身新增後6
               {<point name="input.body6.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_steb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stei_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astt401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body6.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_steb6_d[l_ac].* = g_steb6_d_t.*
               CLOSE astt401_bcl6
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_steb6_d[l_ac].* = g_steb6_d_t.*
            ELSE
               #add-point:單身page6修改前
               {<point name="input.body6.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身6)
               
               
               #將遮罩欄位還原
               CALL astt401_stei_t_mask_restore('restore_mask_o')
                              
               UPDATE stei_t SET (steidocno,steiseq,stei001,stei002,stei003,stei005,stei006,stei004, 
                   stei010,stei007,stei008,stei009,steiacti,steisite,steiunit) = (g_stea_m.steadocno, 
                   g_steb6_d[l_ac].steiseq,g_steb6_d[l_ac].stei001,g_steb6_d[l_ac].stei002,g_steb6_d[l_ac].stei003, 
                   g_steb6_d[l_ac].stei005,g_steb6_d[l_ac].stei006,g_steb6_d[l_ac].stei004,g_steb6_d[l_ac].stei010, 
                   g_steb6_d[l_ac].stei007,g_steb6_d[l_ac].stei008,g_steb6_d[l_ac].stei009,g_steb6_d[l_ac].steiacti, 
                   g_steb6_d[l_ac].steisite,g_steb6_d[l_ac].steiunit) #自訂欄位頁簽
                WHERE steient = g_enterprise AND steidocno = g_stea_m.steadocno
                  AND steiseq = g_steb6_d_t.steiseq #項次 
                  
               #add-point:單身page6修改中
               {<point name="input.body6.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stei_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_steb6_d[l_ac].* = g_steb6_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stei_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_steb6_d[l_ac].* = g_steb6_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys_bak[1] = g_steadocno_t
               LET gs_keys[2] = g_steb6_d[g_detail_idx].steiseq
               LET gs_keys_bak[2] = g_steb6_d_t.steiseq
               CALL astt401_update_b('stei_t',gs_keys,gs_keys_bak,"'6'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astt401_stei_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_steb6_d[g_detail_idx].steiseq = g_steb6_d_t.steiseq 
                  ) THEN
                  LET gs_keys[01] = g_stea_m.steadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_steb6_d_t.steiseq
                  CALL astt401_key_update_b(gs_keys,'stei_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb6_d_t)
               LET g_log2 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb6_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page6修改後
               {<point name="input.body6.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steiseq
            #add-point:BEFORE FIELD steiseq
            {<point name="input.b.page6.steiseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steiseq
            
            #add-point:AFTER FIELD steiseq
            {<point name="input.a.page6.steiseq" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steiseq
            #add-point:ON CHANGE steiseq
            {<point name="input.g.page6.steiseq" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stei001
            #add-point:BEFORE FIELD stei001
            {<point name="input.b.page6.stei001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stei001
            
            #add-point:AFTER FIELD stei001
            {<point name="input.a.page6.stei001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stei001
            #add-point:ON CHANGE stei001
            {<point name="input.g.page6.stei001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stei002
            #add-point:BEFORE FIELD stei002
            {<point name="input.b.page6.stei002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stei002
            
            #add-point:AFTER FIELD stei002
            {<point name="input.a.page6.stei002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stei002
            #add-point:ON CHANGE stei002
            {<point name="input.g.page6.stei002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stei003
            
            #add-point:AFTER FIELD stei003
            {<point name="input.a.page6.stei003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stei003
            #add-point:BEFORE FIELD stei003
            {<point name="input.b.page6.stei003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stei003
            #add-point:ON CHANGE stei003
            {<point name="input.g.page6.stei003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stei005
            #add-point:BEFORE FIELD stei005
            {<point name="input.b.page6.stei005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stei005
            
            #add-point:AFTER FIELD stei005
            {<point name="input.a.page6.stei005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stei005
            #add-point:ON CHANGE stei005
            {<point name="input.g.page6.stei005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stei006
            #add-point:BEFORE FIELD stei006
            {<point name="input.b.page6.stei006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stei006
            
            #add-point:AFTER FIELD stei006
            {<point name="input.a.page6.stei006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stei006
            #add-point:ON CHANGE stei006
            {<point name="input.g.page6.stei006" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stei004
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_steb6_d[l_ac].stei004,"0","1","","","azz-00079",1) THEN
               NEXT FIELD stei004
            END IF 
 
 
            #add-point:AFTER FIELD stei004
            {<point name="input.a.page6.stei004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stei004
            #add-point:BEFORE FIELD stei004
            {<point name="input.b.page6.stei004" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stei004
            #add-point:ON CHANGE stei004
            {<point name="input.g.page6.stei004" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stei010
            
            #add-point:AFTER FIELD stei010
            {<point name="input.a.page6.stei010" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stei010
            #add-point:BEFORE FIELD stei010
            {<point name="input.b.page6.stei010" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stei010
            #add-point:ON CHANGE stei010
            {<point name="input.g.page6.stei010" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stei007
            #add-point:BEFORE FIELD stei007
            {<point name="input.b.page6.stei007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stei007
            
            #add-point:AFTER FIELD stei007
            {<point name="input.a.page6.stei007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stei007
            #add-point:ON CHANGE stei007
            {<point name="input.g.page6.stei007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stei008
            #add-point:BEFORE FIELD stei008
            {<point name="input.b.page6.stei008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stei008
            
            #add-point:AFTER FIELD stei008
            {<point name="input.a.page6.stei008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stei008
            #add-point:ON CHANGE stei008
            {<point name="input.g.page6.stei008" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stei009
            #add-point:BEFORE FIELD stei009
            {<point name="input.b.page6.stei009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stei009
            
            #add-point:AFTER FIELD stei009
            {<point name="input.a.page6.stei009" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stei009
            #add-point:ON CHANGE stei009
            {<point name="input.g.page6.stei009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steiacti
            #add-point:BEFORE FIELD steiacti
            {<point name="input.b.page6.steiacti" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steiacti
            
            #add-point:AFTER FIELD steiacti
            {<point name="input.a.page6.steiacti" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steiacti
            #add-point:ON CHANGE steiacti
            {<point name="input.g.page6.steiacti" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steisite
            #add-point:BEFORE FIELD steisite
            {<point name="input.b.page6.steisite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steisite
            
            #add-point:AFTER FIELD steisite
            {<point name="input.a.page6.steisite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steisite
            #add-point:ON CHANGE steisite
            {<point name="input.g.page6.steisite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steiunit
            #add-point:BEFORE FIELD steiunit
            {<point name="input.b.page6.steiunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steiunit
            
            #add-point:AFTER FIELD steiunit
            {<point name="input.a.page6.steiunit" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steiunit
            #add-point:ON CHANGE steiunit
            {<point name="input.g.page6.steiunit" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page6.steiseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steiseq
            #add-point:ON ACTION controlp INFIELD steiseq
            {<point name="input.c.page6.steiseq" />}
            #END add-point
 
         #Ctrlp:input.c.page6.stei001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stei001
            #add-point:ON ACTION controlp INFIELD stei001
            {<point name="input.c.page6.stei001" />}
            #END add-point
 
         #Ctrlp:input.c.page6.stei002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stei002
            #add-point:ON ACTION controlp INFIELD stei002
            {<point name="input.c.page6.stei002" />}
            #END add-point
 
         #Ctrlp:input.c.page6.stei003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stei003
            #add-point:ON ACTION controlp INFIELD stei003
            {<point name="input.c.page6.stei003" />}
            #END add-point
 
         #Ctrlp:input.c.page6.stei005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stei005
            #add-point:ON ACTION controlp INFIELD stei005
            {<point name="input.c.page6.stei005" />}
            #END add-point
 
         #Ctrlp:input.c.page6.stei006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stei006
            #add-point:ON ACTION controlp INFIELD stei006
            {<point name="input.c.page6.stei006" />}
            #END add-point
 
         #Ctrlp:input.c.page6.stei004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stei004
            #add-point:ON ACTION controlp INFIELD stei004
            {<point name="input.c.page6.stei004" />}
            #END add-point
 
         #Ctrlp:input.c.page6.stei010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stei010
            #add-point:ON ACTION controlp INFIELD stei010
            {<point name="input.c.page6.stei010" />}
            #END add-point
 
         #Ctrlp:input.c.page6.stei007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stei007
            #add-point:ON ACTION controlp INFIELD stei007
            {<point name="input.c.page6.stei007" />}
            #END add-point
 
         #Ctrlp:input.c.page6.stei008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stei008
            #add-point:ON ACTION controlp INFIELD stei008
            {<point name="input.c.page6.stei008" />}
            #END add-point
 
         #Ctrlp:input.c.page6.stei009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stei009
            #add-point:ON ACTION controlp INFIELD stei009
            {<point name="input.c.page6.stei009" />}
            #END add-point
 
         #Ctrlp:input.c.page6.steiacti
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steiacti
            #add-point:ON ACTION controlp INFIELD steiacti
            {<point name="input.c.page6.steiacti" />}
            #END add-point
 
         #Ctrlp:input.c.page6.steisite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steisite
            #add-point:ON ACTION controlp INFIELD steisite
            {<point name="input.c.page6.steisite" />}
            #END add-point
 
         #Ctrlp:input.c.page6.steiunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steiunit
            #add-point:ON ACTION controlp INFIELD steiunit
            {<point name="input.c.page6.steiunit" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page6 after_row
            {<point name="input.body6.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_steb6_d[l_ac].* = g_steb6_d_t.*
               END IF
               CLOSE astt401_bcl6
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astt401_unlock_b("stei_t","'6'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page6 after_row2
            {<point name="input.body6.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body6.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_steb6_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_steb6_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_steb7_d FROM s_detail7.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_7)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body7.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_steb7_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astt401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_steb7_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body7.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_steb7_d[l_ac].* TO NULL 
            INITIALIZE g_steb7_d_t.* TO NULL 
            INITIALIZE g_steb7_d_o.* TO NULL 
            #公用欄位給值(單身7)
            
            #自定義預設值(單身7)
            
            #add-point:modify段before備份
            {<point name="input.body7.insert.before_bak"/>}
            #end add-point
            LET g_steb7_d_t.* = g_steb7_d[l_ac].*     #新輸入資料
            LET g_steb7_d_o.* = g_steb7_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astt401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body7.insert.after_set_entry_b"/>}
            #end add-point
            CALL astt401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_steb7_d[li_reproduce_target].* = g_steb7_d[li_reproduce].*
 
               LET g_steb7_d[li_reproduce_target].stejseq = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body7.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body7.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 7
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astt401_cl USING g_enterprise,g_stea_m.steadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astt401_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE astt401_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_steb7_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_steb7_d[l_ac].stejseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_steb7_d_t.* = g_steb7_d[l_ac].*  #BACKUP
               LET g_steb7_d_o.* = g_steb7_d[l_ac].*  #BACKUP
               CALL astt401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body7.after_set_entry_b"/>}
               #end add-point  
               CALL astt401_set_no_entry_b(l_cmd)
               IF NOT astt401_lock_b("stej_t","'7'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astt401_bcl7 INTO g_steb7_d[l_ac].stejseq,g_steb7_d[l_ac].stej001,g_steb7_d[l_ac].stej002, 
                      g_steb7_d[l_ac].stej003,g_steb7_d[l_ac].stej004,g_steb7_d[l_ac].stej005,g_steb7_d[l_ac].stej006, 
                      g_steb7_d[l_ac].stejsite,g_steb7_d[l_ac].stejunit
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_steb7_d_mask_o[l_ac].* =  g_steb7_d[l_ac].*
                  CALL astt401_stej_t_mask()
                  LET g_steb7_d_mask_n[l_ac].* =  g_steb7_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astt401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body7.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body7.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身7刪除前
               {<point name="input.body7.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stea_m.steadocno
               LET gs_keys[gs_keys.getLength()+1] = g_steb7_d_t.stejseq
            
               #刪除同層單身
               IF NOT astt401_delete_b('stej_t',gs_keys,"'7'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astt401_key_delete_b(gs_keys,'stej_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身7刪除中
               {<point name="input.body7.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astt401_bcl
               LET g_rec_b = g_rec_b-1
               
               #add-point:單身7刪除後
               {<point name="input.body7.a_delete"/>}
               #end add-point
               LET l_count = g_steb_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body7.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_steb7_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身7新增前
            {<point name="input.body7.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM stej_t 
             WHERE stejent = g_enterprise AND stejdocno = g_stea_m.steadocno
               AND stejseq = g_steb7_d[l_ac].stejseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身7新增前
               {<point name="input.body7.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys[2] = g_steb7_d[g_detail_idx].stejseq
               CALL astt401_insert_b('stej_t',gs_keys,"'7'")
                           
               #add-point:單身新增後7
               {<point name="input.body7.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_steb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stej_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astt401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body7.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_steb7_d[l_ac].* = g_steb7_d_t.*
               CLOSE astt401_bcl7
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_steb7_d[l_ac].* = g_steb7_d_t.*
            ELSE
               #add-point:單身page7修改前
               {<point name="input.body7.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身7)
               
               
               #將遮罩欄位還原
               CALL astt401_stej_t_mask_restore('restore_mask_o')
                              
               UPDATE stej_t SET (stejdocno,stejseq,stej001,stej002,stej003,stej004,stej005,stej006, 
                   stejsite,stejunit) = (g_stea_m.steadocno,g_steb7_d[l_ac].stejseq,g_steb7_d[l_ac].stej001, 
                   g_steb7_d[l_ac].stej002,g_steb7_d[l_ac].stej003,g_steb7_d[l_ac].stej004,g_steb7_d[l_ac].stej005, 
                   g_steb7_d[l_ac].stej006,g_steb7_d[l_ac].stejsite,g_steb7_d[l_ac].stejunit) #自訂欄位頁簽 

                WHERE stejent = g_enterprise AND stejdocno = g_stea_m.steadocno
                  AND stejseq = g_steb7_d_t.stejseq #項次 
                  
               #add-point:單身page7修改中
               {<point name="input.body7.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stej_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_steb7_d[l_ac].* = g_steb7_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stej_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_steb7_d[l_ac].* = g_steb7_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys_bak[1] = g_steadocno_t
               LET gs_keys[2] = g_steb7_d[g_detail_idx].stejseq
               LET gs_keys_bak[2] = g_steb7_d_t.stejseq
               CALL astt401_update_b('stej_t',gs_keys,gs_keys_bak,"'7'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astt401_stej_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_steb7_d[g_detail_idx].stejseq = g_steb7_d_t.stejseq 
                  ) THEN
                  LET gs_keys[01] = g_stea_m.steadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_steb7_d_t.stejseq
                  CALL astt401_key_update_b(gs_keys,'stej_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb7_d_t)
               LET g_log2 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb7_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page7修改後
               {<point name="input.body7.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stejseq
            #add-point:BEFORE FIELD stejseq
            {<point name="input.b.page7.stejseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stejseq
            
            #add-point:AFTER FIELD stejseq
            {<point name="input.a.page7.stejseq" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stejseq
            #add-point:ON CHANGE stejseq
            {<point name="input.g.page7.stejseq" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stej001
            #add-point:BEFORE FIELD stej001
            {<point name="input.b.page7.stej001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stej001
            
            #add-point:AFTER FIELD stej001
            {<point name="input.a.page7.stej001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stej001
            #add-point:ON CHANGE stej001
            {<point name="input.g.page7.stej001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stej002
            #add-point:BEFORE FIELD stej002
            {<point name="input.b.page7.stej002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stej002
            
            #add-point:AFTER FIELD stej002
            {<point name="input.a.page7.stej002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stej002
            #add-point:ON CHANGE stej002
            {<point name="input.g.page7.stej002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stej003
            #add-point:BEFORE FIELD stej003
            {<point name="input.b.page7.stej003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stej003
            
            #add-point:AFTER FIELD stej003
            {<point name="input.a.page7.stej003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stej003
            #add-point:ON CHANGE stej003
            {<point name="input.g.page7.stej003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stej004
            #add-point:BEFORE FIELD stej004
            {<point name="input.b.page7.stej004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stej004
            
            #add-point:AFTER FIELD stej004
            {<point name="input.a.page7.stej004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stej004
            #add-point:ON CHANGE stej004
            {<point name="input.g.page7.stej004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stej005
            #add-point:BEFORE FIELD stej005
            {<point name="input.b.page7.stej005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stej005
            
            #add-point:AFTER FIELD stej005
            {<point name="input.a.page7.stej005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stej005
            #add-point:ON CHANGE stej005
            {<point name="input.g.page7.stej005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stej006
            #add-point:BEFORE FIELD stej006
            {<point name="input.b.page7.stej006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stej006
            
            #add-point:AFTER FIELD stej006
            {<point name="input.a.page7.stej006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stej006
            #add-point:ON CHANGE stej006
            {<point name="input.g.page7.stej006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stejsite
            #add-point:BEFORE FIELD stejsite
            {<point name="input.b.page7.stejsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stejsite
            
            #add-point:AFTER FIELD stejsite
            {<point name="input.a.page7.stejsite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stejsite
            #add-point:ON CHANGE stejsite
            {<point name="input.g.page7.stejsite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stejunit
            #add-point:BEFORE FIELD stejunit
            {<point name="input.b.page7.stejunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stejunit
            
            #add-point:AFTER FIELD stejunit
            {<point name="input.a.page7.stejunit" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stejunit
            #add-point:ON CHANGE stejunit
            {<point name="input.g.page7.stejunit" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page7.stejseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stejseq
            #add-point:ON ACTION controlp INFIELD stejseq
            {<point name="input.c.page7.stejseq" />}
            #END add-point
 
         #Ctrlp:input.c.page7.stej001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stej001
            #add-point:ON ACTION controlp INFIELD stej001
            {<point name="input.c.page7.stej001" />}
            #END add-point
 
         #Ctrlp:input.c.page7.stej002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stej002
            #add-point:ON ACTION controlp INFIELD stej002
            {<point name="input.c.page7.stej002" />}
            #END add-point
 
         #Ctrlp:input.c.page7.stej003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stej003
            #add-point:ON ACTION controlp INFIELD stej003
            {<point name="input.c.page7.stej003" />}
            #END add-point
 
         #Ctrlp:input.c.page7.stej004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stej004
            #add-point:ON ACTION controlp INFIELD stej004
            {<point name="input.c.page7.stej004" />}
            #END add-point
 
         #Ctrlp:input.c.page7.stej005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stej005
            #add-point:ON ACTION controlp INFIELD stej005
            {<point name="input.c.page7.stej005" />}
            #END add-point
 
         #Ctrlp:input.c.page7.stej006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stej006
            #add-point:ON ACTION controlp INFIELD stej006
            {<point name="input.c.page7.stej006" />}
            #END add-point
 
         #Ctrlp:input.c.page7.stejsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stejsite
            #add-point:ON ACTION controlp INFIELD stejsite
            {<point name="input.c.page7.stejsite" />}
            #END add-point
 
         #Ctrlp:input.c.page7.stejunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stejunit
            #add-point:ON ACTION controlp INFIELD stejunit
            {<point name="input.c.page7.stejunit" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page7 after_row
            {<point name="input.body7.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_steb7_d[l_ac].* = g_steb7_d_t.*
               END IF
               CLOSE astt401_bcl7
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astt401_unlock_b("stej_t","'7'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page7 after_row2
            {<point name="input.body7.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body7.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_steb7_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_steb7_d.getLength()+1
 
      END INPUT
 
      
      INPUT ARRAY g_steb8_d FROM s_detail8.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_8)
         
         
         BEFORE INPUT
            #檢查上層單身是否有資料
            IF cl_null(g_steb2_d[g_detail_idx].stecseq) THEN
               NEXT FIELD stecseq
            END IF
            #add-point:資料輸入前
            {<point name="input.body8.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_steb8_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            #如果一直都在單身2則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx2)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_steb8_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body8.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_steb8_d[l_ac].* TO NULL 
            INITIALIZE g_steb8_d_t.* TO NULL 
            INITIALIZE g_steb8_d_o.* TO NULL 
            #公用欄位給值(單身8)
            
            #自定義預設值(單身8)
                  LET g_steb8_d[l_ac].stedseq1 = "0"
 
            #add-point:modify段before備份
            {<point name="input.body8.insert.before_bak"/>}
            #end add-point
            LET g_steb8_d_t.* = g_steb8_d[l_ac].*     #新輸入資料
            LET g_steb8_d_o.* = g_steb8_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astt401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body8.insert.after_set_entry_b"/>}
            #end add-point
            CALL astt401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_steb8_d[li_reproduce_target].* = g_steb8_d[li_reproduce].*
 
               LET g_steb8_d[li_reproduce_target].stedseq1 = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body8.before_insert"/>}
            #end add-point  
            
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body8.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx2 = l_ac
            LET g_current_page = 8
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astt401_cl USING g_enterprise,g_stea_m.steadocno
            OPEN astt401_bcl2 USING g_enterprise,g_stea_m.steadocno,g_steb2_d[g_detail_idx].stecseq
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astt401_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE astt401_cl
               CLOSE astt401_bcl2
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_steb8_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_steb8_d[l_ac].stedseq1 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_steb8_d_t.* = g_steb8_d[l_ac].*  #BACKUP
               LET g_steb8_d_o.* = g_steb8_d[l_ac].*  #BACKUP
               CALL astt401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body8.after_set_entry_b"/>}
               #end add-point  
               CALL astt401_set_no_entry_b(l_cmd)
               IF NOT astt401_lock_b("sted_t","'8'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astt401_bcl8 INTO g_steb8_d[l_ac].stedseq1,g_steb8_d[l_ac].sted001,g_steb8_d[l_ac].sted002, 
                      g_steb8_d[l_ac].sted003,g_steb8_d[l_ac].sted004,g_steb8_d[l_ac].sted005,g_steb8_d[l_ac].sted006, 
                      g_steb8_d[l_ac].sted007,g_steb8_d[l_ac].sted008,g_steb8_d[l_ac].stedsite,g_steb8_d[l_ac].stedunit 

                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_steb8_d_mask_o[l_ac].* =  g_steb8_d[l_ac].*
                  CALL astt401_sted_t_mask()
                  LET g_steb8_d_mask_n[l_ac].* =  g_steb8_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astt401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body8.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body8.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身8刪除前
               {<point name="input.body8.b_delete" mark="Y"/>}
               #end add-point    
               #取得該筆資料key值
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys[2] = g_steb2_d[g_detail_idx].stecseq
               LET gs_keys[3] = g_steb8_d_t.stedseq1
 
               #刪除同層單身
               IF NOT astt401_delete_b('sted_t',gs_keys,"'8'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身8刪除中
               {<point name="input.body8.m_delete"/>}
               #end add-point   
               
               CALL s_transaction_end('Y','0')
               CLOSE astt401_bcl
                  
               LET g_rec_b = g_rec_b-1
               #add-point:單身8刪除後
               {<point name="input.body8.a_delete"/>}
               #end add-point
               LET l_count = g_steb_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body8.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_steb8_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
         
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身8新增前
            {<point name="input.body8.b_a_insert"/>}
            #end add-point
    
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM sted_t 
             WHERE stedent = g_enterprise AND steddocno = g_stea_m.steadocno AND stedseq = g_steb2_d[g_detail_idx].stecseq  
                 AND stedseq1 = g_steb8_d[g_detail_idx2].stedseq1
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身8新增前
               {<point name="input.body8.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys[2] = g_steb2_d[g_detail_idx].stecseq
               LET gs_keys[3] = g_steb8_d[g_detail_idx2].stedseq1
               CALL astt401_insert_b('sted_t',gs_keys,"'8'")
                           
               #add-point:單身新增後8
               {<point name="input.body8.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_steb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "sted_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astt401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body8.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_steb8_d[l_ac].* = g_steb8_d_t.*
               CLOSE astt401_bcl8
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_steb8_d[l_ac].* = g_steb8_d_t.*
            ELSE
               #add-point:單身page8修改前
               {<point name="input.body8.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身8)
               
               
               #將遮罩欄位還原
               CALL astt401_sted_t_mask_restore('restore_mask_o')
               
               UPDATE sted_t SET (steddocno,stedseq,stedseq1,sted001,sted002,sted003,sted004,sted005, 
                   sted006,sted007,sted008,stedsite,stedunit) = (g_stea_m.steadocno,g_steb2_d[g_detail_idx].stecseq, 
                   g_steb8_d[l_ac].stedseq1,g_steb8_d[l_ac].sted001,g_steb8_d[l_ac].sted002,g_steb8_d[l_ac].sted003, 
                   g_steb8_d[l_ac].sted004,g_steb8_d[l_ac].sted005,g_steb8_d[l_ac].sted006,g_steb8_d[l_ac].sted007, 
                   g_steb8_d[l_ac].sted008,g_steb8_d[l_ac].stedsite,g_steb8_d[l_ac].stedunit) #自訂欄位頁簽 

                WHERE stedent = g_enterprise AND steddocno = g_steadocno_t AND stedseq = g_steb2_d[g_detail_idx].stecseq  
                    AND stedseq1 = g_steb8_d_t.stedseq1
                  
               #add-point:單身page8修改中
               {<point name="input.body8.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "sted_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_steb8_d[l_ac].* = g_steb8_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "sted_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_steb8_d[l_ac].* = g_steb8_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys_bak[1] = g_steadocno_t
               LET gs_keys[2] = g_steb2_d[g_detail_idx].stecseq
               LET gs_keys_bak[2] = g_steb2_d[g_detail_idx].stecseq
               LET gs_keys[3] = g_steb8_d[g_detail_idx2].stedseq1
               LET gs_keys_bak[3] = g_steb8_d_t.stedseq1
               CALL astt401_update_b('sted_t',gs_keys,gs_keys_bak,"'8'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astt401_sted_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb8_d_t)
               LET g_log2 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb8_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page8修改後
               {<point name="input.body8.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stedseq1
            #add-point:BEFORE FIELD stedseq1
            {<point name="input.b.page8.stedseq1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stedseq1
            
            #add-point:AFTER FIELD stedseq1
            {<point name="input.a.page8.stedseq1" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stedseq1
            #add-point:ON CHANGE stedseq1
            {<point name="input.g.page8.stedseq1" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sted001
            #add-point:BEFORE FIELD sted001
            {<point name="input.b.page8.sted001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sted001
            
            #add-point:AFTER FIELD sted001
            {<point name="input.a.page8.sted001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sted001
            #add-point:ON CHANGE sted001
            {<point name="input.g.page8.sted001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sted002
            #add-point:BEFORE FIELD sted002
            {<point name="input.b.page8.sted002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sted002
            
            #add-point:AFTER FIELD sted002
            {<point name="input.a.page8.sted002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sted002
            #add-point:ON CHANGE sted002
            {<point name="input.g.page8.sted002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sted003
            
            #add-point:AFTER FIELD sted003
            {<point name="input.a.page8.sted003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sted003
            #add-point:BEFORE FIELD sted003
            {<point name="input.b.page8.sted003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sted003
            #add-point:ON CHANGE sted003
            {<point name="input.g.page8.sted003" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sted004
            
            #add-point:AFTER FIELD sted004
            {<point name="input.a.page8.sted004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sted004
            #add-point:BEFORE FIELD sted004
            {<point name="input.b.page8.sted004" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sted004
            #add-point:ON CHANGE sted004
            {<point name="input.g.page8.sted004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sted005
            #add-point:BEFORE FIELD sted005
            {<point name="input.b.page8.sted005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sted005
            
            #add-point:AFTER FIELD sted005
            {<point name="input.a.page8.sted005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sted005
            #add-point:ON CHANGE sted005
            {<point name="input.g.page8.sted005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sted006
            #add-point:BEFORE FIELD sted006
            {<point name="input.b.page8.sted006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sted006
            
            #add-point:AFTER FIELD sted006
            {<point name="input.a.page8.sted006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sted006
            #add-point:ON CHANGE sted006
            {<point name="input.g.page8.sted006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sted007
            #add-point:BEFORE FIELD sted007
            {<point name="input.b.page8.sted007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sted007
            
            #add-point:AFTER FIELD sted007
            {<point name="input.a.page8.sted007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sted007
            #add-point:ON CHANGE sted007
            {<point name="input.g.page8.sted007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD sted008
            #add-point:BEFORE FIELD sted008
            {<point name="input.b.page8.sted008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD sted008
            
            #add-point:AFTER FIELD sted008
            {<point name="input.a.page8.sted008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE sted008
            #add-point:ON CHANGE sted008
            {<point name="input.g.page8.sted008" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stedsite
            #add-point:BEFORE FIELD stedsite
            {<point name="input.b.page8.stedsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stedsite
            
            #add-point:AFTER FIELD stedsite
            {<point name="input.a.page8.stedsite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stedsite
            #add-point:ON CHANGE stedsite
            {<point name="input.g.page8.stedsite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stedunit
            #add-point:BEFORE FIELD stedunit
            {<point name="input.b.page8.stedunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stedunit
            
            #add-point:AFTER FIELD stedunit
            {<point name="input.a.page8.stedunit" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stedunit
            #add-point:ON CHANGE stedunit
            {<point name="input.g.page8.stedunit" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page8.stedseq1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stedseq1
            #add-point:ON ACTION controlp INFIELD stedseq1
            {<point name="input.c.page8.stedseq1" />}
            #END add-point
 
         #Ctrlp:input.c.page8.sted001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sted001
            #add-point:ON ACTION controlp INFIELD sted001
            {<point name="input.c.page8.sted001" />}
            #END add-point
 
         #Ctrlp:input.c.page8.sted002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sted002
            #add-point:ON ACTION controlp INFIELD sted002
            {<point name="input.c.page8.sted002" />}
            #END add-point
 
         #Ctrlp:input.c.page8.sted003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sted003
            #add-point:ON ACTION controlp INFIELD sted003
            {<point name="input.c.page8.sted003" />}
            #END add-point
 
         #Ctrlp:input.c.page8.sted004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sted004
            #add-point:ON ACTION controlp INFIELD sted004
            {<point name="input.c.page8.sted004" />}
            #END add-point
 
         #Ctrlp:input.c.page8.sted005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sted005
            #add-point:ON ACTION controlp INFIELD sted005
            {<point name="input.c.page8.sted005" />}
            #END add-point
 
         #Ctrlp:input.c.page8.sted006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sted006
            #add-point:ON ACTION controlp INFIELD sted006
            {<point name="input.c.page8.sted006" />}
            #END add-point
 
         #Ctrlp:input.c.page8.sted007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sted007
            #add-point:ON ACTION controlp INFIELD sted007
            {<point name="input.c.page8.sted007" />}
            #END add-point
 
         #Ctrlp:input.c.page8.sted008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD sted008
            #add-point:ON ACTION controlp INFIELD sted008
            {<point name="input.c.page8.sted008" />}
            #END add-point
 
         #Ctrlp:input.c.page8.stedsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stedsite
            #add-point:ON ACTION controlp INFIELD stedsite
            {<point name="input.c.page8.stedsite" />}
            #END add-point
 
         #Ctrlp:input.c.page8.stedunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stedunit
            #add-point:ON ACTION controlp INFIELD stedunit
            {<point name="input.c.page8.stedunit" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page8_after_row
            {<point name="input.body8.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_steb8_d[l_ac].* = g_steb8_d_t.*
               END IF
               CLOSE astt401_bcl8
               CLOSE astt401_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astt401_unlock_b("sted_t","'8'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page8_after_row2
            {<point name="input.body8.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body8.after_input"/>}
            #end add-point  
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_steb8_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_steb8_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_steb9_d FROM s_detail9.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_9)
         
         
         BEFORE INPUT
            #檢查上層單身是否有資料
            IF cl_null(g_steb3_d[g_detail_idx].steeseq) THEN
               NEXT FIELD steeseq
            END IF
            #add-point:資料輸入前
            {<point name="input.body9.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_steb9_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            #如果一直都在單身2則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx2)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_steb9_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body9.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_steb9_d[l_ac].* TO NULL 
            INITIALIZE g_steb9_d_t.* TO NULL 
            INITIALIZE g_steb9_d_o.* TO NULL 
            #公用欄位給值(單身9)
            
            #自定義預設值(單身9)
                  LET g_steb9_d[l_ac].stef006 = "0"
      LET g_steb9_d[l_ac].stef007 = "0"
 
            #add-point:modify段before備份
            {<point name="input.body9.insert.before_bak"/>}
            #end add-point
            LET g_steb9_d_t.* = g_steb9_d[l_ac].*     #新輸入資料
            LET g_steb9_d_o.* = g_steb9_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astt401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body9.insert.after_set_entry_b"/>}
            #end add-point
            CALL astt401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_steb9_d[li_reproduce_target].* = g_steb9_d[li_reproduce].*
 
               LET g_steb9_d[li_reproduce_target].stef003 = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body9.before_insert"/>}
            #end add-point  
            
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body9.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx2 = l_ac
            LET g_current_page = 9
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astt401_cl USING g_enterprise,g_stea_m.steadocno
            OPEN astt401_bcl3 USING g_enterprise,g_stea_m.steadocno,g_steb3_d[g_detail_idx].steeseq, 
                g_steb3_d[g_detail_idx].stee002
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astt401_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE astt401_cl
               CLOSE astt401_bcl3
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_steb9_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_steb9_d[l_ac].stef003 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_steb9_d_t.* = g_steb9_d[l_ac].*  #BACKUP
               LET g_steb9_d_o.* = g_steb9_d[l_ac].*  #BACKUP
               CALL astt401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body9.after_set_entry_b"/>}
               #end add-point  
               CALL astt401_set_no_entry_b(l_cmd)
               IF NOT astt401_lock_b("stef_t","'9'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astt401_bcl9 INTO g_steb9_d[l_ac].stef001,g_steb9_d[l_ac].stef003,g_steb9_d[l_ac].stef004, 
                      g_steb9_d[l_ac].stef005,g_steb9_d[l_ac].stef006,g_steb9_d[l_ac].stef007,g_steb9_d[l_ac].stef008, 
                      g_steb9_d[l_ac].stef009,g_steb9_d[l_ac].stefsite,g_steb9_d[l_ac].stefunit
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_steb9_d_mask_o[l_ac].* =  g_steb9_d[l_ac].*
                  CALL astt401_stef_t_mask()
                  LET g_steb9_d_mask_n[l_ac].* =  g_steb9_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astt401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body9.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body9.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身9刪除前
               {<point name="input.body9.b_delete" mark="Y"/>}
               #end add-point    
               #取得該筆資料key值
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys[2] = g_steb3_d[g_detail_idx].steeseq
               LET gs_keys[3] = g_steb3_d[g_detail_idx].stee002
               LET gs_keys[4] = g_steb9_d_t.stef003
 
               #刪除同層單身
               IF NOT astt401_delete_b('stef_t',gs_keys,"'9'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astt401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身9刪除中
               {<point name="input.body9.m_delete"/>}
               #end add-point   
               
               CALL s_transaction_end('Y','0')
               CLOSE astt401_bcl
                  
               LET g_rec_b = g_rec_b-1
               #add-point:單身9刪除後
               {<point name="input.body9.a_delete"/>}
               #end add-point
               LET l_count = g_steb_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body9.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_steb9_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
         
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身9新增前
            {<point name="input.body9.b_a_insert"/>}
            #end add-point
    
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM stef_t 
             WHERE stefent = g_enterprise AND stefdocno = g_stea_m.steadocno AND stefseq = g_steb3_d[g_detail_idx].steeseq  
                 AND stef002 = g_steb3_d[g_detail_idx].stee002 AND stef003 = g_steb9_d[g_detail_idx2].stef003 

                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身9新增前
               {<point name="input.body9.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys[2] = g_steb3_d[g_detail_idx].steeseq
               LET gs_keys[3] = g_steb3_d[g_detail_idx].stee002
               LET gs_keys[4] = g_steb9_d[g_detail_idx2].stef003
               CALL astt401_insert_b('stef_t',gs_keys,"'9'")
                           
               #add-point:單身新增後9
               {<point name="input.body9.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_steb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stef_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astt401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body9.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_steb9_d[l_ac].* = g_steb9_d_t.*
               CLOSE astt401_bcl9
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_steb9_d[l_ac].* = g_steb9_d_t.*
            ELSE
               #add-point:單身page9修改前
               {<point name="input.body9.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身9)
               
               
               #將遮罩欄位還原
               CALL astt401_stef_t_mask_restore('restore_mask_o')
               
               UPDATE stef_t SET (stefdocno,stefseq,stef002,stef001,stef003,stef004,stef005,stef006, 
                   stef007,stef008,stef009,stefsite,stefunit) = (g_stea_m.steadocno,g_steb3_d[g_detail_idx].steeseq, 
                   g_steb3_d[g_detail_idx].stee002,g_steb9_d[l_ac].stef001,g_steb9_d[l_ac].stef003,g_steb9_d[l_ac].stef004, 
                   g_steb9_d[l_ac].stef005,g_steb9_d[l_ac].stef006,g_steb9_d[l_ac].stef007,g_steb9_d[l_ac].stef008, 
                   g_steb9_d[l_ac].stef009,g_steb9_d[l_ac].stefsite,g_steb9_d[l_ac].stefunit) #自訂欄位頁簽 

                WHERE stefent = g_enterprise AND stefdocno = g_steadocno_t AND stefseq = g_steb3_d[g_detail_idx].steeseq  
                    AND stef002 = g_steb3_d[g_detail_idx].stee002 AND stef003 = g_steb9_d_t.stef003
                  
               #add-point:單身page9修改中
               {<point name="input.body9.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stef_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_steb9_d[l_ac].* = g_steb9_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stef_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_steb9_d[l_ac].* = g_steb9_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stea_m.steadocno
               LET gs_keys_bak[1] = g_steadocno_t
               LET gs_keys[2] = g_steb3_d[g_detail_idx].steeseq
               LET gs_keys_bak[2] = g_steb3_d[g_detail_idx].steeseq
               LET gs_keys[3] = g_steb3_d[g_detail_idx].stee002
               LET gs_keys_bak[3] = g_steb3_d[g_detail_idx].stee002
               LET gs_keys[4] = g_steb9_d[g_detail_idx2].stef003
               LET gs_keys_bak[4] = g_steb9_d_t.stef003
               CALL astt401_update_b('stef_t',gs_keys,gs_keys_bak,"'9'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astt401_stef_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb9_d_t)
               LET g_log2 = util.JSON.stringify(g_stea_m),util.JSON.stringify(g_steb9_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page9修改後
               {<point name="input.body9.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stef001
            #add-point:BEFORE FIELD stef001
            {<point name="input.b.page9.stef001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stef001
            
            #add-point:AFTER FIELD stef001
            {<point name="input.a.page9.stef001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stef001
            #add-point:ON CHANGE stef001
            {<point name="input.g.page9.stef001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stef003
            #add-point:BEFORE FIELD stef003
            {<point name="input.b.page9.stef003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stef003
            
            #add-point:AFTER FIELD stef003
            {<point name="input.a.page9.stef003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stef003
            #add-point:ON CHANGE stef003
            {<point name="input.g.page9.stef003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stef004
            #add-point:BEFORE FIELD stef004
            {<point name="input.b.page9.stef004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stef004
            
            #add-point:AFTER FIELD stef004
            {<point name="input.a.page9.stef004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stef004
            #add-point:ON CHANGE stef004
            {<point name="input.g.page9.stef004" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stef005
            
            #add-point:AFTER FIELD stef005
            {<point name="input.a.page9.stef005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stef005
            #add-point:BEFORE FIELD stef005
            {<point name="input.b.page9.stef005" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stef005
            #add-point:ON CHANGE stef005
            {<point name="input.g.page9.stef005" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stef006
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_steb9_d[l_ac].stef006,"0","1","","","azz-00079",1) THEN
               NEXT FIELD stef006
            END IF 
 
 
            #add-point:AFTER FIELD stef006
            {<point name="input.a.page9.stef006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stef006
            #add-point:BEFORE FIELD stef006
            {<point name="input.b.page9.stef006" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stef006
            #add-point:ON CHANGE stef006
            {<point name="input.g.page9.stef006" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stef007
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_steb9_d[l_ac].stef007,"0","1","","","azz-00079",1) THEN
               NEXT FIELD stef007
            END IF 
 
 
            #add-point:AFTER FIELD stef007
            {<point name="input.a.page9.stef007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stef007
            #add-point:BEFORE FIELD stef007
            {<point name="input.b.page9.stef007" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stef007
            #add-point:ON CHANGE stef007
            {<point name="input.g.page9.stef007" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stef008
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_steb9_d[l_ac].stef008,"0","1","","","azz-00079",1) THEN
               NEXT FIELD stef008
            END IF 
 
 
            #add-point:AFTER FIELD stef008
            {<point name="input.a.page9.stef008" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stef008
            #add-point:BEFORE FIELD stef008
            {<point name="input.b.page9.stef008" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stef008
            #add-point:ON CHANGE stef008
            {<point name="input.g.page9.stef008" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stef009
            #add-point:BEFORE FIELD stef009
            {<point name="input.b.page9.stef009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stef009
            
            #add-point:AFTER FIELD stef009
            {<point name="input.a.page9.stef009" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stef009
            #add-point:ON CHANGE stef009
            {<point name="input.g.page9.stef009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stefsite
            #add-point:BEFORE FIELD stefsite
            {<point name="input.b.page9.stefsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stefsite
            
            #add-point:AFTER FIELD stefsite
            {<point name="input.a.page9.stefsite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stefsite
            #add-point:ON CHANGE stefsite
            {<point name="input.g.page9.stefsite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stefunit
            #add-point:BEFORE FIELD stefunit
            {<point name="input.b.page9.stefunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stefunit
            
            #add-point:AFTER FIELD stefunit
            {<point name="input.a.page9.stefunit" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stefunit
            #add-point:ON CHANGE stefunit
            {<point name="input.g.page9.stefunit" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page9.stef001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stef001
            #add-point:ON ACTION controlp INFIELD stef001
            {<point name="input.c.page9.stef001" />}
            #END add-point
 
         #Ctrlp:input.c.page9.stef003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stef003
            #add-point:ON ACTION controlp INFIELD stef003
            {<point name="input.c.page9.stef003" />}
            #END add-point
 
         #Ctrlp:input.c.page9.stef004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stef004
            #add-point:ON ACTION controlp INFIELD stef004
            {<point name="input.c.page9.stef004" />}
            #END add-point
 
         #Ctrlp:input.c.page9.stef005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stef005
            #add-point:ON ACTION controlp INFIELD stef005
            {<point name="input.c.page9.stef005" />}
            #END add-point
 
         #Ctrlp:input.c.page9.stef006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stef006
            #add-point:ON ACTION controlp INFIELD stef006
            {<point name="input.c.page9.stef006" />}
            #END add-point
 
         #Ctrlp:input.c.page9.stef007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stef007
            #add-point:ON ACTION controlp INFIELD stef007
            {<point name="input.c.page9.stef007" />}
            #END add-point
 
         #Ctrlp:input.c.page9.stef008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stef008
            #add-point:ON ACTION controlp INFIELD stef008
            {<point name="input.c.page9.stef008" />}
            #END add-point
 
         #Ctrlp:input.c.page9.stef009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stef009
            #add-point:ON ACTION controlp INFIELD stef009
            {<point name="input.c.page9.stef009" />}
            #END add-point
 
         #Ctrlp:input.c.page9.stefsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stefsite
            #add-point:ON ACTION controlp INFIELD stefsite
            {<point name="input.c.page9.stefsite" />}
            #END add-point
 
         #Ctrlp:input.c.page9.stefunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stefunit
            #add-point:ON ACTION controlp INFIELD stefunit
            {<point name="input.c.page9.stefunit" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page9_after_row
            {<point name="input.body9.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_steb9_d[l_ac].* = g_steb9_d_t.*
               END IF
               CLOSE astt401_bcl9
               CLOSE astt401_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astt401_unlock_b("stef_t","'9'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page9_after_row2
            {<point name="input.body9.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body9.after_input"/>}
            #end add-point  
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_steb9_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_steb9_d.getLength()+1
 
      END INPUT
 
 
 
]]>
  </section>
  <section id="astt401.input.head" ver="10" status="" src="s" readonly="">
    <![CDATA[      #單頭段
      INPUT BY NAME g_stea_m.steasite,g_stea_m.steadocdt,g_stea_m.steadocno,g_stea_m.stea000,g_stea_m.steaunit, 
          g_stea_m.stea001,g_stea_m.stea002,g_stea_m.stea003,g_stea_m.stea004,g_stea_m.stea009,g_stea_m.steastus, 
          g_stea_m.stea005,g_stea_m.steal002,g_stea_m.steal003,g_stea_m.stea006,g_stea_m.stea007,g_stea_m.stea008, 
          g_stea_m.stea047,g_stea_m.stea048,g_stea_m.stea044,g_stea_m.stea010,g_stea_m.stea011,g_stea_m.stea012, 
          g_stea_m.stea013,g_stea_m.stea014,g_stea_m.stea015,g_stea_m.stea016,g_stea_m.stea045,g_stea_m.stea046, 
          g_stea_m.stea029,g_stea_m.stea030,g_stea_m.stea032,g_stea_m.stea033,g_stea_m.stea034,g_stea_m.stea035, 
          g_stea_m.stea036,g_stea_m.stea037,g_stea_m.stea038,g_stea_m.stea039,g_stea_m.stea040,g_stea_m.stea028, 
          g_stea_m.next_b,g_stea_m.stea017,g_stea_m.stea021,g_stea_m.stea024,g_stea_m.stea018,g_stea_m.stea049, 
          g_stea_m.stea025,g_stea_m.stea019,g_stea_m.stea022,g_stea_m.stea026,g_stea_m.stea020,g_stea_m.stea023, 
          g_stea_m.stea027,g_stea_m.stea031,g_stea_m.stea042 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.master_input.update_item" />}
               #END add-point
            END IF
 
 
 
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN astt401_cl USING g_enterprise,g_stea_m.steadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astt401_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE astt401_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            LET g_master_multi_table_t.stealdocno = g_stea_m.steadocno
LET g_master_multi_table_t.steal002 = g_stea_m.steal002
LET g_master_multi_table_t.steal003 = g_stea_m.steal003
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.stealdocno = ''
LET g_master_multi_table_t.steal002 = ''
LET g_master_multi_table_t.steal003 = ''
 
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL astt401_set_entry(p_cmd)
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL astt401_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steasite
            
            #add-point:AFTER FIELD steasite
            {<point name="input.a.steasite" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steasite
            #add-point:BEFORE FIELD steasite
            {<point name="input.b.steasite" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steasite
            #add-point:ON CHANGE steasite
            {<point name="input.g.steasite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steadocdt
            #add-point:BEFORE FIELD steadocdt
            {<point name="input.b.steadocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steadocdt
            
            #add-point:AFTER FIELD steadocdt
            {<point name="input.a.steadocdt" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steadocdt
            #add-point:ON CHANGE steadocdt
            {<point name="input.g.steadocdt" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steadocno
            #add-point:BEFORE FIELD steadocno
            {<point name="input.b.steadocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steadocno
            
            #add-point:AFTER FIELD steadocno
            {<point name="input.a.steadocno" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steadocno
            #add-point:ON CHANGE steadocno
            {<point name="input.g.steadocno" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea000
            #add-point:BEFORE FIELD stea000
            {<point name="input.b.stea000" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea000
            
            #add-point:AFTER FIELD stea000
            {<point name="input.a.stea000" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea000
            #add-point:ON CHANGE stea000
            {<point name="input.g.stea000" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steaunit
            
            #add-point:AFTER FIELD steaunit
            {<point name="input.a.steaunit" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steaunit
            #add-point:BEFORE FIELD steaunit
            {<point name="input.b.steaunit" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steaunit
            #add-point:ON CHANGE steaunit
            {<point name="input.g.steaunit" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea001
            #add-point:BEFORE FIELD stea001
            {<point name="input.b.stea001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea001
            
            #add-point:AFTER FIELD stea001
            {<point name="input.a.stea001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea001
            #add-point:ON CHANGE stea001
            {<point name="input.g.stea001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea002
            #add-point:BEFORE FIELD stea002
            {<point name="input.b.stea002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea002
            
            #add-point:AFTER FIELD stea002
            {<point name="input.a.stea002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea002
            #add-point:ON CHANGE stea002
            {<point name="input.g.stea002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea003
            #add-point:BEFORE FIELD stea003
            {<point name="input.b.stea003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea003
            
            #add-point:AFTER FIELD stea003
            {<point name="input.a.stea003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea003
            #add-point:ON CHANGE stea003
            {<point name="input.g.stea003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea004
            #add-point:BEFORE FIELD stea004
            {<point name="input.b.stea004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea004
            
            #add-point:AFTER FIELD stea004
            {<point name="input.a.stea004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea004
            #add-point:ON CHANGE stea004
            {<point name="input.g.stea004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea009
            #add-point:BEFORE FIELD stea009
            {<point name="input.b.stea009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea009
            
            #add-point:AFTER FIELD stea009
            {<point name="input.a.stea009" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea009
            #add-point:ON CHANGE stea009
            {<point name="input.g.stea009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steastus
            #add-point:BEFORE FIELD steastus
            {<point name="input.b.steastus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steastus
            
            #add-point:AFTER FIELD steastus
            {<point name="input.a.steastus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steastus
            #add-point:ON CHANGE steastus
            {<point name="input.g.steastus" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea005
            #add-point:BEFORE FIELD stea005
            {<point name="input.b.stea005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea005
            
            #add-point:AFTER FIELD stea005
            {<point name="input.a.stea005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea005
            #add-point:ON CHANGE stea005
            {<point name="input.g.stea005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steal002
            #add-point:BEFORE FIELD steal002
            {<point name="input.b.steal002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steal002
            
            #add-point:AFTER FIELD steal002
            {<point name="input.a.steal002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steal002
            #add-point:ON CHANGE steal002
            {<point name="input.g.steal002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD steal003
            #add-point:BEFORE FIELD steal003
            {<point name="input.b.steal003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD steal003
            
            #add-point:AFTER FIELD steal003
            {<point name="input.a.steal003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE steal003
            #add-point:ON CHANGE steal003
            {<point name="input.g.steal003" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea006
            
            #add-point:AFTER FIELD stea006
            {<point name="input.a.stea006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea006
            #add-point:BEFORE FIELD stea006
            {<point name="input.b.stea006" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea006
            #add-point:ON CHANGE stea006
            {<point name="input.g.stea006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea007
            #add-point:BEFORE FIELD stea007
            {<point name="input.b.stea007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea007
            
            #add-point:AFTER FIELD stea007
            {<point name="input.a.stea007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea007
            #add-point:ON CHANGE stea007
            {<point name="input.g.stea007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea008
            #add-point:BEFORE FIELD stea008
            {<point name="input.b.stea008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea008
            
            #add-point:AFTER FIELD stea008
            {<point name="input.a.stea008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea008
            #add-point:ON CHANGE stea008
            {<point name="input.g.stea008" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea047
            
            #add-point:AFTER FIELD stea047
            {<point name="input.a.stea047" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea047
            #add-point:BEFORE FIELD stea047
            {<point name="input.b.stea047" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea047
            #add-point:ON CHANGE stea047
            {<point name="input.g.stea047" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea048
            
            #add-point:AFTER FIELD stea048
            {<point name="input.a.stea048" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea048
            #add-point:BEFORE FIELD stea048
            {<point name="input.b.stea048" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea048
            #add-point:ON CHANGE stea048
            {<point name="input.g.stea048" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea044
            
            #add-point:AFTER FIELD stea044
            {<point name="input.a.stea044" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea044
            #add-point:BEFORE FIELD stea044
            {<point name="input.b.stea044" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea044
            #add-point:ON CHANGE stea044
            {<point name="input.g.stea044" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea010
            
            #add-point:AFTER FIELD stea010
            {<point name="input.a.stea010" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea010
            #add-point:BEFORE FIELD stea010
            {<point name="input.b.stea010" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea010
            #add-point:ON CHANGE stea010
            {<point name="input.g.stea010" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea011
            
            #add-point:AFTER FIELD stea011
            {<point name="input.a.stea011" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea011
            #add-point:BEFORE FIELD stea011
            {<point name="input.b.stea011" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea011
            #add-point:ON CHANGE stea011
            {<point name="input.g.stea011" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea012
            
            #add-point:AFTER FIELD stea012
            {<point name="input.a.stea012" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea012
            #add-point:BEFORE FIELD stea012
            {<point name="input.b.stea012" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea012
            #add-point:ON CHANGE stea012
            {<point name="input.g.stea012" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea013
            
            #add-point:AFTER FIELD stea013
            {<point name="input.a.stea013" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea013
            #add-point:BEFORE FIELD stea013
            {<point name="input.b.stea013" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea013
            #add-point:ON CHANGE stea013
            {<point name="input.g.stea013" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea014
            
            #add-point:AFTER FIELD stea014
            {<point name="input.a.stea014" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea014
            #add-point:BEFORE FIELD stea014
            {<point name="input.b.stea014" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea014
            #add-point:ON CHANGE stea014
            {<point name="input.g.stea014" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea015
            
            #add-point:AFTER FIELD stea015
            {<point name="input.a.stea015" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea015
            #add-point:BEFORE FIELD stea015
            {<point name="input.b.stea015" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea015
            #add-point:ON CHANGE stea015
            {<point name="input.g.stea015" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea016
            #add-point:BEFORE FIELD stea016
            {<point name="input.b.stea016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea016
            
            #add-point:AFTER FIELD stea016
            {<point name="input.a.stea016" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea016
            #add-point:ON CHANGE stea016
            {<point name="input.g.stea016" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea045
            
            #add-point:AFTER FIELD stea045
            {<point name="input.a.stea045" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea045
            #add-point:BEFORE FIELD stea045
            {<point name="input.b.stea045" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea045
            #add-point:ON CHANGE stea045
            {<point name="input.g.stea045" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea046
            #add-point:BEFORE FIELD stea046
            {<point name="input.b.stea046" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea046
            
            #add-point:AFTER FIELD stea046
            {<point name="input.a.stea046" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea046
            #add-point:ON CHANGE stea046
            {<point name="input.g.stea046" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea029
            #add-point:BEFORE FIELD stea029
            {<point name="input.b.stea029" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea029
            
            #add-point:AFTER FIELD stea029
            {<point name="input.a.stea029" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea029
            #add-point:ON CHANGE stea029
            {<point name="input.g.stea029" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea030
            #add-point:BEFORE FIELD stea030
            {<point name="input.b.stea030" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea030
            
            #add-point:AFTER FIELD stea030
            {<point name="input.a.stea030" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea030
            #add-point:ON CHANGE stea030
            {<point name="input.g.stea030" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea032
            
            #add-point:AFTER FIELD stea032
            {<point name="input.a.stea032" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea032
            #add-point:BEFORE FIELD stea032
            {<point name="input.b.stea032" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea032
            #add-point:ON CHANGE stea032
            {<point name="input.g.stea032" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea033
            
            #add-point:AFTER FIELD stea033
            {<point name="input.a.stea033" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea033
            #add-point:BEFORE FIELD stea033
            {<point name="input.b.stea033" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea033
            #add-point:ON CHANGE stea033
            {<point name="input.g.stea033" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea034
            
            #add-point:AFTER FIELD stea034
            {<point name="input.a.stea034" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea034
            #add-point:BEFORE FIELD stea034
            {<point name="input.b.stea034" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea034
            #add-point:ON CHANGE stea034
            {<point name="input.g.stea034" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea035
            
            #add-point:AFTER FIELD stea035
            {<point name="input.a.stea035" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea035
            #add-point:BEFORE FIELD stea035
            {<point name="input.b.stea035" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea035
            #add-point:ON CHANGE stea035
            {<point name="input.g.stea035" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea036
            
            #add-point:AFTER FIELD stea036
            {<point name="input.a.stea036" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea036
            #add-point:BEFORE FIELD stea036
            {<point name="input.b.stea036" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea036
            #add-point:ON CHANGE stea036
            {<point name="input.g.stea036" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea037
            
            #add-point:AFTER FIELD stea037
            {<point name="input.a.stea037" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea037
            #add-point:BEFORE FIELD stea037
            {<point name="input.b.stea037" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea037
            #add-point:ON CHANGE stea037
            {<point name="input.g.stea037" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea038
            
            #add-point:AFTER FIELD stea038
            {<point name="input.a.stea038" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea038
            #add-point:BEFORE FIELD stea038
            {<point name="input.b.stea038" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea038
            #add-point:ON CHANGE stea038
            {<point name="input.g.stea038" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea039
            #add-point:BEFORE FIELD stea039
            {<point name="input.b.stea039" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea039
            
            #add-point:AFTER FIELD stea039
            {<point name="input.a.stea039" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea039
            #add-point:ON CHANGE stea039
            {<point name="input.g.stea039" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea040
            #add-point:BEFORE FIELD stea040
            {<point name="input.b.stea040" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea040
            
            #add-point:AFTER FIELD stea040
            {<point name="input.a.stea040" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea040
            #add-point:ON CHANGE stea040
            {<point name="input.g.stea040" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea028
            #add-point:BEFORE FIELD stea028
            {<point name="input.b.stea028" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea028
            
            #add-point:AFTER FIELD stea028
            {<point name="input.a.stea028" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea028
            #add-point:ON CHANGE stea028
            {<point name="input.g.stea028" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD next_b
            #add-point:BEFORE FIELD next_b
            {<point name="input.b.next_b" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD next_b
            
            #add-point:AFTER FIELD next_b
            {<point name="input.a.next_b" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE next_b
            #add-point:ON CHANGE next_b
            {<point name="input.g.next_b" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea017
            #add-point:BEFORE FIELD stea017
            {<point name="input.b.stea017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea017
            
            #add-point:AFTER FIELD stea017
            {<point name="input.a.stea017" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea017
            #add-point:ON CHANGE stea017
            {<point name="input.g.stea017" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea021
            #add-point:BEFORE FIELD stea021
            {<point name="input.b.stea021" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea021
            
            #add-point:AFTER FIELD stea021
            {<point name="input.a.stea021" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea021
            #add-point:ON CHANGE stea021
            {<point name="input.g.stea021" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea024
            #add-point:BEFORE FIELD stea024
            {<point name="input.b.stea024" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea024
            
            #add-point:AFTER FIELD stea024
            {<point name="input.a.stea024" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea024
            #add-point:ON CHANGE stea024
            {<point name="input.g.stea024" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea018
            #add-point:BEFORE FIELD stea018
            {<point name="input.b.stea018" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea018
            
            #add-point:AFTER FIELD stea018
            {<point name="input.a.stea018" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea018
            #add-point:ON CHANGE stea018
            {<point name="input.g.stea018" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea049
            #add-point:BEFORE FIELD stea049
            {<point name="input.b.stea049" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea049
            
            #add-point:AFTER FIELD stea049
            {<point name="input.a.stea049" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea049
            #add-point:ON CHANGE stea049
            {<point name="input.g.stea049" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea025
            #add-point:BEFORE FIELD stea025
            {<point name="input.b.stea025" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea025
            
            #add-point:AFTER FIELD stea025
            {<point name="input.a.stea025" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea025
            #add-point:ON CHANGE stea025
            {<point name="input.g.stea025" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea019
            #add-point:BEFORE FIELD stea019
            {<point name="input.b.stea019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea019
            
            #add-point:AFTER FIELD stea019
            {<point name="input.a.stea019" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea019
            #add-point:ON CHANGE stea019
            {<point name="input.g.stea019" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea022
            #add-point:BEFORE FIELD stea022
            {<point name="input.b.stea022" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea022
            
            #add-point:AFTER FIELD stea022
            {<point name="input.a.stea022" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea022
            #add-point:ON CHANGE stea022
            {<point name="input.g.stea022" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea026
            #add-point:BEFORE FIELD stea026
            {<point name="input.b.stea026" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea026
            
            #add-point:AFTER FIELD stea026
            {<point name="input.a.stea026" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea026
            #add-point:ON CHANGE stea026
            {<point name="input.g.stea026" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea020
            #add-point:BEFORE FIELD stea020
            {<point name="input.b.stea020" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea020
            
            #add-point:AFTER FIELD stea020
            {<point name="input.a.stea020" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea020
            #add-point:ON CHANGE stea020
            {<point name="input.g.stea020" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea023
            #add-point:BEFORE FIELD stea023
            {<point name="input.b.stea023" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea023
            
            #add-point:AFTER FIELD stea023
            {<point name="input.a.stea023" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea023
            #add-point:ON CHANGE stea023
            {<point name="input.g.stea023" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea027
            #add-point:BEFORE FIELD stea027
            {<point name="input.b.stea027" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea027
            
            #add-point:AFTER FIELD stea027
            {<point name="input.a.stea027" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea027
            #add-point:ON CHANGE stea027
            {<point name="input.g.stea027" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea031
            #add-point:BEFORE FIELD stea031
            {<point name="input.b.stea031" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea031
            
            #add-point:AFTER FIELD stea031
            {<point name="input.a.stea031" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea031
            #add-point:ON CHANGE stea031
            {<point name="input.g.stea031" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stea042
            #add-point:BEFORE FIELD stea042
            {<point name="input.b.stea042" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stea042
            
            #add-point:AFTER FIELD stea042
            {<point name="input.a.stea042" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stea042
            #add-point:ON CHANGE stea042
            {<point name="input.g.stea042" />}
            #END add-point 
 
 #欄位檢查
                  #Ctrlp:input.c.steasite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steasite
            #add-point:ON ACTION controlp INFIELD steasite
            {<point name="input.c.steasite" />}
            #END add-point
 
         #Ctrlp:input.c.steadocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steadocdt
            #add-point:ON ACTION controlp INFIELD steadocdt
            {<point name="input.c.steadocdt" />}
            #END add-point
 
         #Ctrlp:input.c.steadocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steadocno
            #add-point:ON ACTION controlp INFIELD steadocno
            {<point name="input.c.steadocno" />}
            #END add-point
 
         #Ctrlp:input.c.stea000
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea000
            #add-point:ON ACTION controlp INFIELD stea000
            {<point name="input.c.stea000" />}
            #END add-point
 
         #Ctrlp:input.c.steaunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steaunit
            #add-point:ON ACTION controlp INFIELD steaunit
            {<point name="input.c.steaunit" />}
            #END add-point
 
         #Ctrlp:input.c.stea001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea001
            #add-point:ON ACTION controlp INFIELD stea001
            {<point name="input.c.stea001" />}
            #END add-point
 
         #Ctrlp:input.c.stea002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea002
            #add-point:ON ACTION controlp INFIELD stea002
            {<point name="input.c.stea002" />}
            #END add-point
 
         #Ctrlp:input.c.stea003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea003
            #add-point:ON ACTION controlp INFIELD stea003
            {<point name="input.c.stea003" />}
            #END add-point
 
         #Ctrlp:input.c.stea004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea004
            #add-point:ON ACTION controlp INFIELD stea004
            {<point name="input.c.stea004" />}
            #END add-point
 
         #Ctrlp:input.c.stea009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea009
            #add-point:ON ACTION controlp INFIELD stea009
            {<point name="input.c.stea009" />}
            #END add-point
 
         #Ctrlp:input.c.steastus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steastus
            #add-point:ON ACTION controlp INFIELD steastus
            {<point name="input.c.steastus" />}
            #END add-point
 
         #Ctrlp:input.c.stea005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea005
            #add-point:ON ACTION controlp INFIELD stea005
            {<point name="input.c.stea005" />}
            #END add-point
 
         #Ctrlp:input.c.steal002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steal002
            #add-point:ON ACTION controlp INFIELD steal002
            {<point name="input.c.steal002" />}
            #END add-point
 
         #Ctrlp:input.c.steal003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD steal003
            #add-point:ON ACTION controlp INFIELD steal003
            {<point name="input.c.steal003" />}
            #END add-point
 
         #Ctrlp:input.c.stea006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea006
            #add-point:ON ACTION controlp INFIELD stea006
            {<point name="input.c.stea006" />}
            #END add-point
 
         #Ctrlp:input.c.stea007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea007
            #add-point:ON ACTION controlp INFIELD stea007
            {<point name="input.c.stea007" />}
            #END add-point
 
         #Ctrlp:input.c.stea008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea008
            #add-point:ON ACTION controlp INFIELD stea008
            {<point name="input.c.stea008" />}
            #END add-point
 
         #Ctrlp:input.c.stea047
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea047
            #add-point:ON ACTION controlp INFIELD stea047
            {<point name="input.c.stea047" />}
            #END add-point
 
         #Ctrlp:input.c.stea048
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea048
            #add-point:ON ACTION controlp INFIELD stea048
            {<point name="input.c.stea048" />}
            #END add-point
 
         #Ctrlp:input.c.stea044
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea044
            #add-point:ON ACTION controlp INFIELD stea044
            {<point name="input.c.stea044" />}
            #END add-point
 
         #Ctrlp:input.c.stea010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea010
            #add-point:ON ACTION controlp INFIELD stea010
            {<point name="input.c.stea010" />}
            #END add-point
 
         #Ctrlp:input.c.stea011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea011
            #add-point:ON ACTION controlp INFIELD stea011
            {<point name="input.c.stea011" />}
            #END add-point
 
         #Ctrlp:input.c.stea012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea012
            #add-point:ON ACTION controlp INFIELD stea012
            {<point name="input.c.stea012" />}
            #END add-point
 
         #Ctrlp:input.c.stea013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea013
            #add-point:ON ACTION controlp INFIELD stea013
            {<point name="input.c.stea013" />}
            #END add-point
 
         #Ctrlp:input.c.stea014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea014
            #add-point:ON ACTION controlp INFIELD stea014
            {<point name="input.c.stea014" />}
            #END add-point
 
         #Ctrlp:input.c.stea015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea015
            #add-point:ON ACTION controlp INFIELD stea015
            {<point name="input.c.stea015" />}
            #END add-point
 
         #Ctrlp:input.c.stea016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea016
            #add-point:ON ACTION controlp INFIELD stea016
            {<point name="input.c.stea016" />}
            #END add-point
 
         #Ctrlp:input.c.stea045
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea045
            #add-point:ON ACTION controlp INFIELD stea045
            {<point name="input.c.stea045" />}
            #END add-point
 
         #Ctrlp:input.c.stea046
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea046
            #add-point:ON ACTION controlp INFIELD stea046
            {<point name="input.c.stea046" />}
            #END add-point
 
         #Ctrlp:input.c.stea029
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea029
            #add-point:ON ACTION controlp INFIELD stea029
            {<point name="input.c.stea029" />}
            #END add-point
 
         #Ctrlp:input.c.stea030
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea030
            #add-point:ON ACTION controlp INFIELD stea030
            {<point name="input.c.stea030" />}
            #END add-point
 
         #Ctrlp:input.c.stea032
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea032
            #add-point:ON ACTION controlp INFIELD stea032
            {<point name="input.c.stea032" />}
            #END add-point
 
         #Ctrlp:input.c.stea033
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea033
            #add-point:ON ACTION controlp INFIELD stea033
            {<point name="input.c.stea033" />}
            #END add-point
 
         #Ctrlp:input.c.stea034
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea034
            #add-point:ON ACTION controlp INFIELD stea034
            {<point name="input.c.stea034" />}
            #END add-point
 
         #Ctrlp:input.c.stea035
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea035
            #add-point:ON ACTION controlp INFIELD stea035
            {<point name="input.c.stea035" />}
            #END add-point
 
         #Ctrlp:input.c.stea036
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea036
            #add-point:ON ACTION controlp INFIELD stea036
            {<point name="input.c.stea036" />}
            #END add-point
 
         #Ctrlp:input.c.stea037
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea037
            #add-point:ON ACTION controlp INFIELD stea037
            {<point name="input.c.stea037" />}
            #END add-point
 
         #Ctrlp:input.c.stea038
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea038
            #add-point:ON ACTION controlp INFIELD stea038
            {<point name="input.c.stea038" />}
            #END add-point
 
         #Ctrlp:input.c.stea039
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea039
            #add-point:ON ACTION controlp INFIELD stea039
            {<point name="input.c.stea039" />}
            #END add-point
 
         #Ctrlp:input.c.stea040
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea040
            #add-point:ON ACTION controlp INFIELD stea040
            {<point name="input.c.stea040" />}
            #END add-point
 
         #Ctrlp:input.c.stea028
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea028
            #add-point:ON ACTION controlp INFIELD stea028
            {<point name="input.c.stea028" />}
            #END add-point
 
         #Ctrlp:input.c.next_b
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD next_b
            #add-point:ON ACTION controlp INFIELD next_b
            {<point name="input.c.next_b" />}
            #END add-point
 
         #Ctrlp:input.c.stea017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea017
            #add-point:ON ACTION controlp INFIELD stea017
            {<point name="input.c.stea017" />}
            #END add-point
 
         #Ctrlp:input.c.stea021
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea021
            #add-point:ON ACTION controlp INFIELD stea021
            {<point name="input.c.stea021" />}
            #END add-point
 
         #Ctrlp:input.c.stea024
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea024
            #add-point:ON ACTION controlp INFIELD stea024
            {<point name="input.c.stea024" />}
            #END add-point
 
         #Ctrlp:input.c.stea018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea018
            #add-point:ON ACTION controlp INFIELD stea018
            {<point name="input.c.stea018" />}
            #END add-point
 
         #Ctrlp:input.c.stea049
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea049
            #add-point:ON ACTION controlp INFIELD stea049
            {<point name="input.c.stea049" />}
            #END add-point
 
         #Ctrlp:input.c.stea025
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea025
            #add-point:ON ACTION controlp INFIELD stea025
            {<point name="input.c.stea025" />}
            #END add-point
 
         #Ctrlp:input.c.stea019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea019
            #add-point:ON ACTION controlp INFIELD stea019
            {<point name="input.c.stea019" />}
            #END add-point
 
         #Ctrlp:input.c.stea022
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea022
            #add-point:ON ACTION controlp INFIELD stea022
            {<point name="input.c.stea022" />}
            #END add-point
 
         #Ctrlp:input.c.stea026
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea026
            #add-point:ON ACTION controlp INFIELD stea026
            {<point name="input.c.stea026" />}
            #END add-point
 
         #Ctrlp:input.c.stea020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea020
            #add-point:ON ACTION controlp INFIELD stea020
            {<point name="input.c.stea020" />}
            #END add-point
 
         #Ctrlp:input.c.stea023
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea023
            #add-point:ON ACTION controlp INFIELD stea023
            {<point name="input.c.stea023" />}
            #END add-point
 
         #Ctrlp:input.c.stea027
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea027
            #add-point:ON ACTION controlp INFIELD stea027
            {<point name="input.c.stea027" />}
            #END add-point
 
         #Ctrlp:input.c.stea031
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea031
            #add-point:ON ACTION controlp INFIELD stea031
            {<point name="input.c.stea031" />}
            #END add-point
 
         #Ctrlp:input.c.stea042
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stea042
            #add-point:ON ACTION controlp INFIELD stea042
            {<point name="input.c.stea042" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_stea_m.steadocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO stea_t (steaent,steasite,steadocdt,steadocno,stea000,steaunit,stea001,stea002, 
                   stea003,stea004,stea009,steastus,stea005,stea006,stea007,stea008,stea047,stea048, 
                   stea044,stea010,stea011,stea012,stea013,stea014,stea015,stea016,stea045,stea046,stea029, 
                   stea030,stea032,stea033,stea034,stea035,stea036,stea037,stea038,stea039,stea040,stea028, 
                   stea017,stea021,stea024,stea018,stea049,stea025,stea019,stea022,stea026,stea020,stea023, 
                   stea027,stea031,stea042,steaownid,steaowndp,steacrtid,steacrtdp,steacrtdt,steamodid, 
                   steamoddt,steacnfid,steacnfdt)
               VALUES (g_enterprise,g_stea_m.steasite,g_stea_m.steadocdt,g_stea_m.steadocno,g_stea_m.stea000, 
                   g_stea_m.steaunit,g_stea_m.stea001,g_stea_m.stea002,g_stea_m.stea003,g_stea_m.stea004, 
                   g_stea_m.stea009,g_stea_m.steastus,g_stea_m.stea005,g_stea_m.stea006,g_stea_m.stea007, 
                   g_stea_m.stea008,g_stea_m.stea047,g_stea_m.stea048,g_stea_m.stea044,g_stea_m.stea010, 
                   g_stea_m.stea011,g_stea_m.stea012,g_stea_m.stea013,g_stea_m.stea014,g_stea_m.stea015, 
                   g_stea_m.stea016,g_stea_m.stea045,g_stea_m.stea046,g_stea_m.stea029,g_stea_m.stea030, 
                   g_stea_m.stea032,g_stea_m.stea033,g_stea_m.stea034,g_stea_m.stea035,g_stea_m.stea036, 
                   g_stea_m.stea037,g_stea_m.stea038,g_stea_m.stea039,g_stea_m.stea040,g_stea_m.stea028, 
                   g_stea_m.stea017,g_stea_m.stea021,g_stea_m.stea024,g_stea_m.stea018,g_stea_m.stea049, 
                   g_stea_m.stea025,g_stea_m.stea019,g_stea_m.stea022,g_stea_m.stea026,g_stea_m.stea020, 
                   g_stea_m.stea023,g_stea_m.stea027,g_stea_m.stea031,g_stea_m.stea042,g_stea_m.steaownid, 
                   g_stea_m.steaowndp,g_stea_m.steacrtid,g_stea_m.steacrtdp,g_stea_m.steacrtdt,g_stea_m.steamodid, 
                   g_stea_m.steamoddt,g_stea_m.steacnfid,g_stea_m.steacnfdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_stea_m" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_stea_m.steadocno = g_master_multi_table_t.stealdocno AND
         g_stea_m.steal002 = g_master_multi_table_t.steal002 AND 
         g_stea_m.steal003 = g_master_multi_table_t.steal003  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'stealent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_stea_m.steadocno
            LET l_field_keys[02] = 'stealdocno'
            LET l_var_keys_bak[02] = g_master_multi_table_t.stealdocno
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'steal001'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_stea_m.steal002
            LET l_fields[01] = 'steal002'
            LET l_vars[02] = g_stea_m.steal003
            LET l_fields[02] = 'steal003'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'steal_t')
         END IF 
 
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL astt401_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL astt401_b_fill()
               END IF
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL astt401_stea_t_mask_restore('restore_mask_o')
               
               UPDATE stea_t SET (steasite,steadocdt,steadocno,stea000,steaunit,stea001,stea002,stea003, 
                   stea004,stea009,steastus,stea005,stea006,stea007,stea008,stea047,stea048,stea044, 
                   stea010,stea011,stea012,stea013,stea014,stea015,stea016,stea045,stea046,stea029,stea030, 
                   stea032,stea033,stea034,stea035,stea036,stea037,stea038,stea039,stea040,stea028,stea017, 
                   stea021,stea024,stea018,stea049,stea025,stea019,stea022,stea026,stea020,stea023,stea027, 
                   stea031,stea042,steaownid,steaowndp,steacrtid,steacrtdp,steacrtdt,steamodid,steamoddt, 
                   steacnfid,steacnfdt) = (g_stea_m.steasite,g_stea_m.steadocdt,g_stea_m.steadocno,g_stea_m.stea000, 
                   g_stea_m.steaunit,g_stea_m.stea001,g_stea_m.stea002,g_stea_m.stea003,g_stea_m.stea004, 
                   g_stea_m.stea009,g_stea_m.steastus,g_stea_m.stea005,g_stea_m.stea006,g_stea_m.stea007, 
                   g_stea_m.stea008,g_stea_m.stea047,g_stea_m.stea048,g_stea_m.stea044,g_stea_m.stea010, 
                   g_stea_m.stea011,g_stea_m.stea012,g_stea_m.stea013,g_stea_m.stea014,g_stea_m.stea015, 
                   g_stea_m.stea016,g_stea_m.stea045,g_stea_m.stea046,g_stea_m.stea029,g_stea_m.stea030, 
                   g_stea_m.stea032,g_stea_m.stea033,g_stea_m.stea034,g_stea_m.stea035,g_stea_m.stea036, 
                   g_stea_m.stea037,g_stea_m.stea038,g_stea_m.stea039,g_stea_m.stea040,g_stea_m.stea028, 
                   g_stea_m.stea017,g_stea_m.stea021,g_stea_m.stea024,g_stea_m.stea018,g_stea_m.stea049, 
                   g_stea_m.stea025,g_stea_m.stea019,g_stea_m.stea022,g_stea_m.stea026,g_stea_m.stea020, 
                   g_stea_m.stea023,g_stea_m.stea027,g_stea_m.stea031,g_stea_m.stea042,g_stea_m.steaownid, 
                   g_stea_m.steaowndp,g_stea_m.steacrtid,g_stea_m.steacrtdp,g_stea_m.steacrtdt,g_stea_m.steamodid, 
                   g_stea_m.steamoddt,g_stea_m.steacnfid,g_stea_m.steacnfdt)
                WHERE steaent = g_enterprise AND steadocno = g_steadocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "stea_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_stea_m.steadocno = g_master_multi_table_t.stealdocno AND
         g_stea_m.steal002 = g_master_multi_table_t.steal002 AND 
         g_stea_m.steal003 = g_master_multi_table_t.steal003  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'stealent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_stea_m.steadocno
            LET l_field_keys[02] = 'stealdocno'
            LET l_var_keys_bak[02] = g_master_multi_table_t.stealdocno
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'steal001'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_stea_m.steal002
            LET l_fields[01] = 'steal002'
            LET l_vars[02] = g_stea_m.steal003
            LET l_fields[02] = 'steal003'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'steal_t')
         END IF 
 
               
               #將遮罩欄位進行遮蔽
               CALL astt401_stea_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_stea_m_t)
               LET g_log2 = util.JSON.stringify(g_stea_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_steadocno_t = g_stea_m.steadocno
 
            
      END INPUT
   
]]>
  </section>
  <section id="astt401.input.other" ver="5" status="" src="s" readonly="">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
         CALL DIALOG.setCurrentRow("s_detail2",g_detail_idx)
         CALL DIALOG.setCurrentRow("s_detail3",g_detail_idx)
         CALL DIALOG.setCurrentRow("s_detail4",g_detail_idx)
         CALL DIALOG.setCurrentRow("s_detail5",g_detail_idx)
         CALL DIALOG.setCurrentRow("s_detail6",g_detail_idx)
         CALL DIALOG.setCurrentRow("s_detail7",g_detail_idx)
         CALL DIALOG.setCurrentRow("s_detail8",g_detail_idx2)
         CALL DIALOG.setCurrentRow("s_detail9",g_detail_idx2)
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD steadocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD stebseq
               WHEN "s_detail2"
                  NEXT FIELD stecseq
               WHEN "s_detail3"
                  NEXT FIELD steeseq
               WHEN "s_detail4"
                  NEXT FIELD stegseq
               WHEN "s_detail5"
                  NEXT FIELD stehseq
               WHEN "s_detail6"
                  NEXT FIELD steiseq
               WHEN "s_detail7"
                  NEXT FIELD stejseq
               WHEN "s_detail8"
                  NEXT FIELD stedseq1
               WHEN "s_detail9"
                  NEXT FIELD stef001
 
               #add-point:input段modify_detail 
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog
         {<point name="input.after_dialog"/>}
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel
         {<point name="input.cancel"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close
         {<point name="input.close"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit
         {<point name="input.exit"/>}
         #end add-point
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="astt401.insert" ver="14" status="" src="s" readonly="">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION astt401_insert()
   #add-point:insert段define
   {<point name="insert.define" edit="s"/>}
   #end add-point    
   #add-point:insert段define(客製用)
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_steb_d.clear()   
   CALL g_steb2_d.clear()  
   CALL g_steb3_d.clear()  
   CALL g_steb4_d.clear()  
   CALL g_steb5_d.clear()  
   CALL g_steb6_d.clear()  
   CALL g_steb7_d.clear()  
   CALL g_steb8_d.clear()  
   CALL g_steb9_d.clear()  
 
 
   INITIALIZE g_stea_m.* LIKE stea_t.*             #DEFAULT 設定
   
   LET g_steadocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_stea_m.steaownid = g_user
      LET g_stea_m.steaowndp = g_dept
      LET g_stea_m.steacrtid = g_user
      LET g_stea_m.steacrtdp = g_dept 
      LET g_stea_m.steacrtdt = cl_get_current()
      LET g_stea_m.steamodid = g_user
      LET g_stea_m.steamoddt = cl_get_current()
      LET g_stea_m.steastus = 'N'
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
      
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_stea_m_t.* = g_stea_m.*
      LET g_stea_m_o.* = g_stea_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_stea_m.steastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
    
      CALL astt401_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_stea_m.* TO NULL
         INITIALIZE g_steb_d TO NULL
         INITIALIZE g_steb2_d TO NULL
         INITIALIZE g_steb3_d TO NULL
         INITIALIZE g_steb4_d TO NULL
         INITIALIZE g_steb5_d TO NULL
         INITIALIZE g_steb6_d TO NULL
         INITIALIZE g_steb7_d TO NULL
         INITIALIZE g_steb8_d TO NULL
         INITIALIZE g_steb9_d TO NULL
 
         #add-point:取消新增後
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL astt401_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_steb_d.clear()
      #CALL g_steb2_d.clear()
      #CALL g_steb3_d.clear()
      #CALL g_steb4_d.clear()
      #CALL g_steb5_d.clear()
      #CALL g_steb6_d.clear()
      #CALL g_steb7_d.clear()
      #CALL g_steb8_d.clear()
      #CALL g_steb9_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL astt401_set_act_visible()   
   CALL astt401_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_steadocno_t = g_stea_m.steadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " steaent = '" ||g_enterprise|| "' AND",
                      " steadocno = '", g_stea_m.steadocno, "' "
 
                      
   #add-point:組合新增資料的條件後
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL astt401_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE astt401_cl
   
   CALL astt401_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE astt401_master_referesh USING g_stea_m.steadocno INTO g_stea_m.steasite,g_stea_m.steadocdt, 
       g_stea_m.steadocno,g_stea_m.stea000,g_stea_m.steaunit,g_stea_m.stea001,g_stea_m.stea002,g_stea_m.stea003, 
       g_stea_m.stea004,g_stea_m.stea009,g_stea_m.steastus,g_stea_m.stea005,g_stea_m.stea006,g_stea_m.stea007, 
       g_stea_m.stea008,g_stea_m.stea047,g_stea_m.stea048,g_stea_m.stea044,g_stea_m.stea010,g_stea_m.stea011, 
       g_stea_m.stea012,g_stea_m.stea013,g_stea_m.stea014,g_stea_m.stea015,g_stea_m.stea016,g_stea_m.stea045, 
       g_stea_m.stea046,g_stea_m.stea029,g_stea_m.stea030,g_stea_m.stea032,g_stea_m.stea033,g_stea_m.stea034, 
       g_stea_m.stea035,g_stea_m.stea036,g_stea_m.stea037,g_stea_m.stea038,g_stea_m.stea039,g_stea_m.stea040, 
       g_stea_m.stea028,g_stea_m.stea017,g_stea_m.stea021,g_stea_m.stea024,g_stea_m.stea018,g_stea_m.stea049, 
       g_stea_m.stea025,g_stea_m.stea019,g_stea_m.stea022,g_stea_m.stea026,g_stea_m.stea020,g_stea_m.stea023, 
       g_stea_m.stea027,g_stea_m.stea031,g_stea_m.stea042,g_stea_m.steaownid,g_stea_m.steaowndp,g_stea_m.steacrtid, 
       g_stea_m.steacrtdp,g_stea_m.steacrtdt,g_stea_m.steamodid,g_stea_m.steamoddt,g_stea_m.steacnfid, 
       g_stea_m.steacnfdt,g_stea_m.steasite_desc,g_stea_m.steaunit_desc,g_stea_m.stea006_desc,g_stea_m.stea047_desc, 
       g_stea_m.stea048_desc,g_stea_m.stea044_desc,g_stea_m.stea010_desc,g_stea_m.stea011_desc,g_stea_m.stea012_desc, 
       g_stea_m.stea013_desc,g_stea_m.stea014_desc,g_stea_m.stea015_desc,g_stea_m.stea045_desc,g_stea_m.stea032_desc, 
       g_stea_m.stea035_desc,g_stea_m.stea036_desc,g_stea_m.stea037_desc,g_stea_m.stea038_desc,g_stea_m.steaownid_desc, 
       g_stea_m.steaowndp_desc,g_stea_m.steacrtid_desc,g_stea_m.steacrtdp_desc,g_stea_m.steamodid_desc, 
       g_stea_m.steacnfid_desc
   
   #遮罩相關處理
   LET g_stea_m_mask_o.* =  g_stea_m.*
   CALL astt401_stea_t_mask()
   LET g_stea_m_mask_n.* =  g_stea_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_stea_m.steasite,g_stea_m.steasite_desc,g_stea_m.steadocdt,g_stea_m.steadocno,g_stea_m.stea000, 
       g_stea_m.steaunit,g_stea_m.steaunit_desc,g_stea_m.stea001,g_stea_m.stea002,g_stea_m.stea003,g_stea_m.stea004, 
       g_stea_m.stea009,g_stea_m.steastus,g_stea_m.stea005,g_stea_m.steal002,g_stea_m.steal003,g_stea_m.stea006, 
       g_stea_m.stea006_desc,g_stea_m.stea007,g_stea_m.stea008,g_stea_m.stea047,g_stea_m.stea047_desc, 
       g_stea_m.stea048,g_stea_m.stea048_desc,g_stea_m.stea044,g_stea_m.stea044_desc,g_stea_m.stea010, 
       g_stea_m.stea010_desc,g_stea_m.stea011,g_stea_m.stea011_desc,g_stea_m.stea012,g_stea_m.stea012_desc, 
       g_stea_m.stea013,g_stea_m.stea013_desc,g_stea_m.stea014,g_stea_m.stea014_desc,g_stea_m.stea015, 
       g_stea_m.stea015_desc,g_stea_m.stea016,g_stea_m.stea045,g_stea_m.stea045_desc,g_stea_m.stea046, 
       g_stea_m.stea029,g_stea_m.stea030,g_stea_m.stea032,g_stea_m.stea032_desc,g_stea_m.stea033,g_stea_m.stea033_desc, 
       g_stea_m.stea034,g_stea_m.stea034_desc,g_stea_m.stea035,g_stea_m.stea035_desc,g_stea_m.stea036, 
       g_stea_m.stea036_desc,g_stea_m.stea037,g_stea_m.stea037_desc,g_stea_m.stea038,g_stea_m.stea038_desc, 
       g_stea_m.stea039,g_stea_m.stea040,g_stea_m.stea028,g_stea_m.next_b,g_stea_m.stea017,g_stea_m.stea021, 
       g_stea_m.stea024,g_stea_m.stea018,g_stea_m.stea049,g_stea_m.stea025,g_stea_m.stea019,g_stea_m.stea022, 
       g_stea_m.stea026,g_stea_m.stea020,g_stea_m.stea023,g_stea_m.stea027,g_stea_m.stea031,g_stea_m.stea042, 
       g_stea_m.steaownid,g_stea_m.steaownid_desc,g_stea_m.steaowndp,g_stea_m.steaowndp_desc,g_stea_m.steacrtid, 
       g_stea_m.steacrtid_desc,g_stea_m.steacrtdp,g_stea_m.steacrtdp_desc,g_stea_m.steacrtdt,g_stea_m.steamodid, 
       g_stea_m.steamodid_desc,g_stea_m.steamoddt,g_stea_m.steacnfid,g_stea_m.steacnfid_desc,g_stea_m.steacnfdt 

   
   #add-point:新增結束後
   {<point name="insert.after"/>}
   #end add-point 
   
   #功能已完成,通報訊息中心
   CALL astt401_msgcentre_notify('')
   
END FUNCTION
]]>
  </section>
  <section id="astt401.insert_b" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION astt401_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define
   {<point name="insert_b.define" edit="s"/>}
   #end add-point     
   #add-point:insert_b段define(客製用)
   {<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point     
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO steb_t
                  (stebent,
                   stebdocno,
                   stebseq
                   ,steb001,steb002,steb003,steb004,steb005,steb006,steb007,steb008,steb009,steb010,steb011,steb012,steb013,steb014,steb015,steb016,steb017,stebsite,stebunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_steb_d[g_detail_idx].steb001,g_steb_d[g_detail_idx].steb002,g_steb_d[g_detail_idx].steb003, 
                       g_steb_d[g_detail_idx].steb004,g_steb_d[g_detail_idx].steb005,g_steb_d[g_detail_idx].steb006, 
                       g_steb_d[g_detail_idx].steb007,g_steb_d[g_detail_idx].steb008,g_steb_d[g_detail_idx].steb009, 
                       g_steb_d[g_detail_idx].steb010,g_steb_d[g_detail_idx].steb011,g_steb_d[g_detail_idx].steb012, 
                       g_steb_d[g_detail_idx].steb013,g_steb_d[g_detail_idx].steb014,g_steb_d[g_detail_idx].steb015, 
                       g_steb_d[g_detail_idx].steb016,g_steb_d[g_detail_idx].steb017,g_steb_d[g_detail_idx].stebsite, 
                       g_steb_d[g_detail_idx].stebunit)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "steb_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_steb_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO stec_t
                  (stecent,
                   stecdocno,
                   stecseq
                   ,stec001,stec002,stec003,stec024,stec025,stec004,stec005,stec006,stec007,stec008,stec009,stec010,stec011,stec012,stec013,stec014,stec015,stec016,stec017,stec018,stec019,stec020,stec021,stec022,stec023,stecsite,stecunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_steb2_d[g_detail_idx].stec001,g_steb2_d[g_detail_idx].stec002,g_steb2_d[g_detail_idx].stec003, 
                       g_steb2_d[g_detail_idx].stec024,g_steb2_d[g_detail_idx].stec025,g_steb2_d[g_detail_idx].stec004, 
                       g_steb2_d[g_detail_idx].stec005,g_steb2_d[g_detail_idx].stec006,g_steb2_d[g_detail_idx].stec007, 
                       g_steb2_d[g_detail_idx].stec008,g_steb2_d[g_detail_idx].stec009,g_steb2_d[g_detail_idx].stec010, 
                       g_steb2_d[g_detail_idx].stec011,g_steb2_d[g_detail_idx].stec012,g_steb2_d[g_detail_idx].stec013, 
                       g_steb2_d[g_detail_idx].stec014,g_steb2_d[g_detail_idx].stec015,g_steb2_d[g_detail_idx].stec016, 
                       g_steb2_d[g_detail_idx].stec017,g_steb2_d[g_detail_idx].stec018,g_steb2_d[g_detail_idx].stec019, 
                       g_steb2_d[g_detail_idx].stec020,g_steb2_d[g_detail_idx].stec021,g_steb2_d[g_detail_idx].stec022, 
                       g_steb2_d[g_detail_idx].stec023,g_steb2_d[g_detail_idx].stecsite,g_steb2_d[g_detail_idx].stecunit) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stec_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_steb2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert3" mark="Y"/>}
      #end add-point 
      INSERT INTO stee_t
                  (steeent,
                   steedocno,
                   steeseq,stee002
                   ,stee001,stee003,stee004,stee005,stee006,stee007,stee008,stee009,stee010,stee011,steesite,steeunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_steb3_d[g_detail_idx].stee001,g_steb3_d[g_detail_idx].stee003,g_steb3_d[g_detail_idx].stee004, 
                       g_steb3_d[g_detail_idx].stee005,g_steb3_d[g_detail_idx].stee006,g_steb3_d[g_detail_idx].stee007, 
                       g_steb3_d[g_detail_idx].stee008,g_steb3_d[g_detail_idx].stee009,g_steb3_d[g_detail_idx].stee010, 
                       g_steb3_d[g_detail_idx].stee011,g_steb3_d[g_detail_idx].steesite,g_steb3_d[g_detail_idx].steeunit) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stee_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_steb3_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert3"/>}
      #end add-point
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert4" mark="Y"/>}
      #end add-point 
      INSERT INTO steg_t
                  (stegent,
                   stegdocno,
                   stegseq
                   ,steg001,steg003,steg002,steg004,steg005,stegacti,stegsite,stegunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_steb4_d[g_detail_idx].steg001,g_steb4_d[g_detail_idx].steg003,g_steb4_d[g_detail_idx].steg002, 
                       g_steb4_d[g_detail_idx].steg004,g_steb4_d[g_detail_idx].steg005,g_steb4_d[g_detail_idx].stegacti, 
                       g_steb4_d[g_detail_idx].stegsite,g_steb4_d[g_detail_idx].stegunit)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert4"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "steg_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_steb4_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert4"/>}
      #end add-point
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert5" mark="Y"/>}
      #end add-point 
      INSERT INTO steh_t
                  (stehent,
                   stehdocno,
                   stehseq
                   ,steh001,steh002,steh003,stehacti,stehsite,stehunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_steb5_d[g_detail_idx].steh001,g_steb5_d[g_detail_idx].steh002,g_steb5_d[g_detail_idx].steh003, 
                       g_steb5_d[g_detail_idx].stehacti,g_steb5_d[g_detail_idx].stehsite,g_steb5_d[g_detail_idx].stehunit) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert5"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "steh_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'5'" THEN 
         CALL g_steb5_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert5"/>}
      #end add-point
   END IF
 
   LET ls_group = "'6',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert6" mark="Y"/>}
      #end add-point 
      INSERT INTO stei_t
                  (steient,
                   steidocno,
                   steiseq
                   ,stei001,stei002,stei003,stei005,stei006,stei004,stei010,stei007,stei008,stei009,steiacti,steisite,steiunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_steb6_d[g_detail_idx].stei001,g_steb6_d[g_detail_idx].stei002,g_steb6_d[g_detail_idx].stei003, 
                       g_steb6_d[g_detail_idx].stei005,g_steb6_d[g_detail_idx].stei006,g_steb6_d[g_detail_idx].stei004, 
                       g_steb6_d[g_detail_idx].stei010,g_steb6_d[g_detail_idx].stei007,g_steb6_d[g_detail_idx].stei008, 
                       g_steb6_d[g_detail_idx].stei009,g_steb6_d[g_detail_idx].steiacti,g_steb6_d[g_detail_idx].steisite, 
                       g_steb6_d[g_detail_idx].steiunit)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert6"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stei_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'6'" THEN 
         CALL g_steb6_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert6"/>}
      #end add-point
   END IF
 
   LET ls_group = "'7',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert7" mark="Y"/>}
      #end add-point 
      INSERT INTO stej_t
                  (stejent,
                   stejdocno,
                   stejseq
                   ,stej001,stej002,stej003,stej004,stej005,stej006,stejsite,stejunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_steb7_d[g_detail_idx].stej001,g_steb7_d[g_detail_idx].stej002,g_steb7_d[g_detail_idx].stej003, 
                       g_steb7_d[g_detail_idx].stej004,g_steb7_d[g_detail_idx].stej005,g_steb7_d[g_detail_idx].stej006, 
                       g_steb7_d[g_detail_idx].stejsite,g_steb7_d[g_detail_idx].stejunit)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert7"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stej_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'7'" THEN 
         CALL g_steb7_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert7"/>}
      #end add-point
   END IF
 
 
   
   LET ls_group = "'8',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert8" mark="Y"/>}
      #end add-point 
      INSERT INTO sted_t
                  (stedent,
                   steddocno,stedseq,
                   stedseq1
                   ,sted001,sted002,sted003,sted004,sted005,sted006,sted007,sted008,stedsite,stedunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_steb8_d[g_detail_idx2].sted001,g_steb8_d[g_detail_idx2].sted002,g_steb8_d[g_detail_idx2].sted003, 
                       g_steb8_d[g_detail_idx2].sted004,g_steb8_d[g_detail_idx2].sted005,g_steb8_d[g_detail_idx2].sted006, 
                       g_steb8_d[g_detail_idx2].sted007,g_steb8_d[g_detail_idx2].sted008,g_steb8_d[g_detail_idx2].stedsite, 
                       g_steb8_d[g_detail_idx2].stedunit)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert8"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "sted_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx2
      IF ps_page <> "'8'" THEN 
         CALL g_steb8_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert8"/>}
      #end add-point
   END IF
 
   LET ls_group = "'9',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert9" mark="Y"/>}
      #end add-point 
      INSERT INTO stef_t
                  (stefent,
                   stefdocno,stefseq,stef002,
                   stef003
                   ,stef001,stef004,stef005,stef006,stef007,stef008,stef009,stefsite,stefunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
                   ,g_steb9_d[g_detail_idx2].stef001,g_steb9_d[g_detail_idx2].stef004,g_steb9_d[g_detail_idx2].stef005, 
                       g_steb9_d[g_detail_idx2].stef006,g_steb9_d[g_detail_idx2].stef007,g_steb9_d[g_detail_idx2].stef008, 
                       g_steb9_d[g_detail_idx2].stef009,g_steb9_d[g_detail_idx2].stefsite,g_steb9_d[g_detail_idx2].stefunit) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert9"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stef_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx2
      IF ps_page <> "'9'" THEN 
         CALL g_steb9_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert9"/>}
      #end add-point
   END IF
 
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="astt401.key_delete_b" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION astt401_key_delete_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define
   {<point name="key_delete_b.define" edit="s"/>}
   #end add-point
   #add-point:delete_b段define(客製用)
   {<point name="key_delete_b.define_customerization" edit="c"/>}
   #end add-point
   
   #如果是上層單身則進行delete
   IF ps_table = 'stec_t' THEN
      #add-point:delete_b段修改前
      {<point name="key_delete_b.before_delete8" mark="Y"/>}
      #end add-point
      
      DELETE FROM sted_t 
            WHERE stedent = g_enterprise AND
                  steddocno = ps_keys_bak[1] AND stedseq = ps_keys_bak[2]
 
      #add-point:delete_b段修改中
      {<point name="key_delete_b.m_delete8"/>}
      #end add-point
              
      CASE
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "sted_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
            RETURN FALSE
         OTHERWISE
      END CASE
      
      #add-point:delete_b段修改後
      {<point name="key_delete_b.after_delete8"/>}
      #end add-point
   END IF
 
   #如果是上層單身則進行delete
   IF ps_table = 'stee_t' THEN
      #add-point:delete_b段修改前
      {<point name="key_delete_b.before_delete9" mark="Y"/>}
      #end add-point
      
      DELETE FROM stef_t 
            WHERE stefent = g_enterprise AND
                  stefdocno = ps_keys_bak[1] AND stefseq = ps_keys_bak[2] AND stef002 = ps_keys_bak[3]
 
      #add-point:delete_b段修改中
      {<point name="key_delete_b.m_delete9"/>}
      #end add-point
              
      CASE
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stef_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
            RETURN FALSE
         OTHERWISE
      END CASE
      
      #add-point:delete_b段修改後
      {<point name="key_delete_b.after_delete9"/>}
      #end add-point
   END IF
 
 
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="astt401.key_update_b" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION astt401_key_update_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:update_b段define
   {<point name="key_update_b.define" edit="s"/>}
   #end add-point
   #add-point:update_b段define(客製用)
   {<point name="key_update_b.define_customerization" edit="c"/>}
   #end add-point
   
   #如果是上層單身則進行update
   IF ps_table = 'stec_t' THEN
      #add-point:update_b段修改前
      {<point name="key_update_b.before_update8" mark="Y"/>}
      #end add-point
      
      UPDATE sted_t 
         SET (steddocno,stedseq) 
              = 
             (g_stea_m.steadocno,g_steb2_d[g_detail_idx].stecseq) 
         WHERE stedent = g_enterprise AND
               steddocno = ps_keys_bak[1] AND stedseq = ps_keys_bak[2]
 
      #add-point:update_b段修改中
      {<point name="key_update_b.m_update8"/>}
      #end add-point
              
      CASE
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "sted_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            #若有多語言table資料一同更新
            
      END CASE
      
      #add-point:update_b段修改後
      {<point name="key_update_b.after_update8"/>}
      #end add-point
   END IF
 
   #如果是上層單身則進行update
   IF ps_table = 'stee_t' THEN
      #add-point:update_b段修改前
      {<point name="key_update_b.before_update9" mark="Y"/>}
      #end add-point
      
      UPDATE stef_t 
         SET (stefdocno,stefseq,stef002) 
              = 
             (g_stea_m.steadocno,g_steb3_d[g_detail_idx].steeseq,g_steb3_d[g_detail_idx].stee002) 
         WHERE stefent = g_enterprise AND
               stefdocno = ps_keys_bak[1] AND stefseq = ps_keys_bak[2] AND stef002 = ps_keys_bak[3]
 
      #add-point:update_b段修改中
      {<point name="key_update_b.m_update9"/>}
      #end add-point
              
      CASE
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stef_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            #若有多語言table資料一同更新
            
      END CASE
      
      #add-point:update_b段修改後
      {<point name="key_update_b.after_update9"/>}
      #end add-point
   END IF
 
 
   
END FUNCTION
]]>
  </section>
  <section id="astt401.lock_b" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION astt401_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define(客製用)
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point   
    
   #先刷新資料
   #CALL astt401_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "steb_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN astt401_bcl USING g_enterprise,
                                       g_stea_m.steadocno,g_steb_d[g_detail_idx].stebseq     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astt401_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "stec_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astt401_bcl2 USING g_enterprise,
                                             g_stea_m.steadocno,g_steb2_d[g_detail_idx].stecseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astt401_bcl2" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "stee_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astt401_bcl3 USING g_enterprise,
                                             g_stea_m.steadocno,g_steb3_d[g_detail_idx].steeseq,g_steb3_d[g_detail_idx].stee002 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astt401_bcl3" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'4',"
   #僅鎖定自身table
   LET ls_group = "steg_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astt401_bcl4 USING g_enterprise,
                                             g_stea_m.steadocno,g_steb4_d[g_detail_idx].stegseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astt401_bcl4" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'5',"
   #僅鎖定自身table
   LET ls_group = "steh_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astt401_bcl5 USING g_enterprise,
                                             g_stea_m.steadocno,g_steb5_d[g_detail_idx].stehseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astt401_bcl5" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'6',"
   #僅鎖定自身table
   LET ls_group = "stei_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astt401_bcl6 USING g_enterprise,
                                             g_stea_m.steadocno,g_steb6_d[g_detail_idx].steiseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astt401_bcl6" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'7',"
   #僅鎖定自身table
   LET ls_group = "stej_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astt401_bcl7 USING g_enterprise,
                                             g_stea_m.steadocno,g_steb7_d[g_detail_idx].stejseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astt401_bcl7" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
   #鎖定整組table
   #LET ls_group = "'8',"
   #僅鎖定自身table
   LET ls_group = "sted_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astt401_bcl8 USING g_enterprise,
                                             g_stea_m.steadocno,g_steb2_d[g_detail_idx].stecseq,
                                             g_steb8_d[g_detail_idx2].stedseq1
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astt401_bcl8" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'9',"
   #僅鎖定自身table
   LET ls_group = "stef_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astt401_bcl9 USING g_enterprise,
                                             g_stea_m.steadocno,g_steb3_d[g_detail_idx].steeseq,g_steb3_d[g_detail_idx].stee002, 

                                             g_steb9_d[g_detail_idx2].stef003
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astt401_bcl9" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="astt401.main" ver="5" status="" src="s" readonly="">
    <![CDATA[#應用 a26 樣板自動產生(Version:4)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ast","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT steasite,'',steadocdt,steadocno,stea000,steaunit,'',stea001,stea002,stea003, 
       stea004,stea009,steastus,stea005,'','',stea006,'',stea007,stea008,stea047,'',stea048,'',stea044, 
       '',stea010,'',stea011,'',stea012,'',stea013,'',stea014,'',stea015,'',stea016,stea045,'',stea046, 
       stea029,stea030,stea032,'',stea033,'',stea034,'',stea035,'',stea036,'',stea037,'',stea038,'', 
       stea039,stea040,stea028,'',stea017,stea021,stea024,stea018,stea049,stea025,stea019,stea022,stea026, 
       stea020,stea023,stea027,stea031,stea042,steaownid,'',steaowndp,'',steacrtid,'',steacrtdp,'',steacrtdt, 
       steamodid,'',steamoddt,steacnfid,'',steacnfdt", 
                      " FROM stea_t",
                      " WHERE steaent= ? AND steadocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astt401_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.steasite,t0.steadocdt,t0.steadocno,t0.stea000,t0.steaunit,t0.stea001, 
       t0.stea002,t0.stea003,t0.stea004,t0.stea009,t0.steastus,t0.stea005,t0.stea006,t0.stea007,t0.stea008, 
       t0.stea047,t0.stea048,t0.stea044,t0.stea010,t0.stea011,t0.stea012,t0.stea013,t0.stea014,t0.stea015, 
       t0.stea016,t0.stea045,t0.stea046,t0.stea029,t0.stea030,t0.stea032,t0.stea033,t0.stea034,t0.stea035, 
       t0.stea036,t0.stea037,t0.stea038,t0.stea039,t0.stea040,t0.stea028,t0.stea017,t0.stea021,t0.stea024, 
       t0.stea018,t0.stea049,t0.stea025,t0.stea019,t0.stea022,t0.stea026,t0.stea020,t0.stea023,t0.stea027, 
       t0.stea031,t0.stea042,t0.steaownid,t0.steaowndp,t0.steacrtid,t0.steacrtdp,t0.steacrtdt,t0.steamodid, 
       t0.steamoddt,t0.steacnfid,t0.steacnfdt,t1.ooefl003 ,t2.ooefl003 ,t3.oocql004 ,t4.mhaal003 ,t5.mhabl004 , 
       t6.ooefl003 ,t7.pmaal004 ,t8.rtaxl003 ,t9.oocql004 ,t10.stagl003 ,t11.ooefl003 ,t12.ooag011 , 
       t13.oocql004 ,t14.ooail003 ,t15.ooibl004 ,t16.staal003 ,t17.oocql004 ,t18.ooefl003 ,t19.ooag011 , 
       t20.ooefl003 ,t21.ooag011 ,t22.ooefl003 ,t23.ooag011 ,t24.ooag011",
               " FROM stea_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=t0.steasite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=t0.steaunit AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t3 ON t3.oocqlent='"||g_enterprise||"' AND t3.oocql001='2126' AND t3.oocql002=t0.stea006 AND t3.oocql003='"||g_dlang||"' ",
               " LEFT JOIN mhaal_t t4 ON t4.mhaalent='"||g_enterprise||"' AND t4.mhaal001=t0.stea047 AND t4.mhaal002='"||g_dlang||"' ",
               " LEFT JOIN mhabl_t t5 ON t5.mhablent='"||g_enterprise||"' AND t5.mhabl001=t0.stea047 AND t5.mhabl002=t0.stea048 AND t5.mhabl003='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent='"||g_enterprise||"' AND t6.ooefl001=t0.stea044 AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t7 ON t7.pmaalent='"||g_enterprise||"' AND t7.pmaal001=t0.stea010 AND t7.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN rtaxl_t t8 ON t8.rtaxlent='"||g_enterprise||"' AND t8.rtaxl001=t0.stea011 AND t8.rtaxl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t9 ON t9.oocqlent='"||g_enterprise||"' AND t9.oocql001='2002' AND t9.oocql002=t0.stea012 AND t9.oocql003='"||g_dlang||"' ",
               " LEFT JOIN stagl_t t10 ON t10.staglent='"||g_enterprise||"' AND t10.stagl001=t0.stea013 AND t10.stagl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t11 ON t11.ooeflent='"||g_enterprise||"' AND t11.ooefl001=t0.stea014 AND t11.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t12 ON t12.ooagent='"||g_enterprise||"' AND t12.ooag001=t0.stea015  ",
               " LEFT JOIN oocql_t t13 ON t13.oocqlent='"||g_enterprise||"' AND t13.oocql001='2127' AND t13.oocql002=t0.stea045 AND t13.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t14 ON t14.ooailent='"||g_enterprise||"' AND t14.ooail001=t0.stea032 AND t14.ooail002='"||g_dlang||"' ",
               " LEFT JOIN ooibl_t t15 ON t15.ooiblent='"||g_enterprise||"' AND t15.ooibl002=t0.stea035 AND t15.ooibl003='"||g_dlang||"' ",
               " LEFT JOIN staal_t t16 ON t16.staalent='"||g_enterprise||"' AND t16.staal001=t0.stea036 AND t16.staal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t17 ON t17.oocqlent='"||g_enterprise||"' AND t17.oocql001='2060' AND t17.oocql002=t0.stea037 AND t17.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t18 ON t18.ooeflent='"||g_enterprise||"' AND t18.ooefl001=t0.stea038 AND t18.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t19 ON t19.ooagent='"||g_enterprise||"' AND t19.ooag001=t0.steaownid  ",
               " LEFT JOIN ooefl_t t20 ON t20.ooeflent='"||g_enterprise||"' AND t20.ooefl001=t0.steaowndp AND t20.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t21 ON t21.ooagent='"||g_enterprise||"' AND t21.ooag001=t0.steacrtid  ",
               " LEFT JOIN ooefl_t t22 ON t22.ooeflent='"||g_enterprise||"' AND t22.ooefl001=t0.steacrtdp AND t22.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t23 ON t23.ooagent='"||g_enterprise||"' AND t23.ooag001=t0.steamodid  ",
               " LEFT JOIN ooag_t t24 ON t24.ooagent='"||g_enterprise||"' AND t24.ooag001=t0.steacnfid  ",
 
               " WHERE t0.steaent = '" ||g_enterprise|| "' AND t0.steadocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE astt401_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_astt401 WITH FORM cl_ap_formpath("ast",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL astt401_init()   
 
      #進入選單 Menu (="N")
      CALL astt401_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_astt401
      
   END IF 
   
   CLOSE astt401_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
]]>
  </section>
  <section id="astt401.mask_functions" ver="1" status="" src="s" readonly="">
    <![CDATA[&include "erp/ast/astt401_mask.4gl"
]]>
  </section>
  <section id="astt401.modify" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION astt401_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
   DEFINE l_wc2_table3   STRING
 
   DEFINE l_wc2_table4   STRING
 
   DEFINE l_wc2_table5   STRING
 
   DEFINE l_wc2_table6   STRING
 
   DEFINE l_wc2_table7   STRING
 
 
   DEFINE l_wc2_table8   STRING
 
   DEFINE l_wc2_table9   STRING
 
 
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point    
   #add-point:modify段define(客製用)
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point    
   
   #保存單頭舊值
   LET g_stea_m_t.* = g_stea_m.*
   LET g_stea_m_o.* = g_stea_m.*
   
   IF g_stea_m.steadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_steadocno_t = g_stea_m.steadocno
 
   CALL s_transaction_begin()
   
   OPEN astt401_cl USING g_enterprise,g_stea_m.steadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN astt401_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE astt401_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE astt401_master_referesh USING g_stea_m.steadocno INTO g_stea_m.steasite,g_stea_m.steadocdt, 
       g_stea_m.steadocno,g_stea_m.stea000,g_stea_m.steaunit,g_stea_m.stea001,g_stea_m.stea002,g_stea_m.stea003, 
       g_stea_m.stea004,g_stea_m.stea009,g_stea_m.steastus,g_stea_m.stea005,g_stea_m.stea006,g_stea_m.stea007, 
       g_stea_m.stea008,g_stea_m.stea047,g_stea_m.stea048,g_stea_m.stea044,g_stea_m.stea010,g_stea_m.stea011, 
       g_stea_m.stea012,g_stea_m.stea013,g_stea_m.stea014,g_stea_m.stea015,g_stea_m.stea016,g_stea_m.stea045, 
       g_stea_m.stea046,g_stea_m.stea029,g_stea_m.stea030,g_stea_m.stea032,g_stea_m.stea033,g_stea_m.stea034, 
       g_stea_m.stea035,g_stea_m.stea036,g_stea_m.stea037,g_stea_m.stea038,g_stea_m.stea039,g_stea_m.stea040, 
       g_stea_m.stea028,g_stea_m.stea017,g_stea_m.stea021,g_stea_m.stea024,g_stea_m.stea018,g_stea_m.stea049, 
       g_stea_m.stea025,g_stea_m.stea019,g_stea_m.stea022,g_stea_m.stea026,g_stea_m.stea020,g_stea_m.stea023, 
       g_stea_m.stea027,g_stea_m.stea031,g_stea_m.stea042,g_stea_m.steaownid,g_stea_m.steaowndp,g_stea_m.steacrtid, 
       g_stea_m.steacrtdp,g_stea_m.steacrtdt,g_stea_m.steamodid,g_stea_m.steamoddt,g_stea_m.steacnfid, 
       g_stea_m.steacnfdt,g_stea_m.steasite_desc,g_stea_m.steaunit_desc,g_stea_m.stea006_desc,g_stea_m.stea047_desc, 
       g_stea_m.stea048_desc,g_stea_m.stea044_desc,g_stea_m.stea010_desc,g_stea_m.stea011_desc,g_stea_m.stea012_desc, 
       g_stea_m.stea013_desc,g_stea_m.stea014_desc,g_stea_m.stea015_desc,g_stea_m.stea045_desc,g_stea_m.stea032_desc, 
       g_stea_m.stea035_desc,g_stea_m.stea036_desc,g_stea_m.stea037_desc,g_stea_m.stea038_desc,g_stea_m.steaownid_desc, 
       g_stea_m.steaowndp_desc,g_stea_m.steacrtid_desc,g_stea_m.steacrtdp_desc,g_stea_m.steamodid_desc, 
       g_stea_m.steacnfid_desc
   
   #檢查是否允許此動作
   IF NOT astt401_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_stea_m_mask_o.* =  g_stea_m.*
   CALL astt401_stea_t_mask()
   LET g_stea_m_mask_n.* =  g_stea_m.*
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
   #LET l_wc2_table3 = g_wc2_table3
   #LET l_wc2_table3 = " 1=1"
 
   #LET l_wc2_table4 = g_wc2_table4
   #LET l_wc2_table4 = " 1=1"
 
   #LET l_wc2_table5 = g_wc2_table5
   #LET l_wc2_table5 = " 1=1"
 
   #LET l_wc2_table6 = g_wc2_table6
   #LET l_wc2_table6 = " 1=1"
 
   #LET l_wc2_table7 = g_wc2_table7
   #LET l_wc2_table7 = " 1=1"
 
 
   #LET l_wc2_table8 = g_wc2_table8
   #LET l_wc2_table8 = " 1=1"
 
   #LET l_wc2_table9 = g_wc2_table9
   #LET l_wc2_table9 = " 1=1"
 
 
   
   CALL astt401_show()
   #add-point:modify段show之後
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
   #LET  g_wc2_table3 = l_wc2_table3 
 
   #LET  g_wc2_table4 = l_wc2_table4 
 
   #LET  g_wc2_table5 = l_wc2_table5 
 
   #LET  g_wc2_table6 = l_wc2_table6 
 
   #LET  g_wc2_table7 = l_wc2_table7 
 
 
   #LET  g_wc2_table8 = l_wc2_table8 
 
   #LET  g_wc2_table9 = l_wc2_table9 
 
 
    
   WHILE TRUE
      LET g_steadocno_t = g_stea_m.steadocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_stea_m.steamodid = g_user 
LET g_stea_m.steamoddt = cl_get_current()
LET g_stea_m.steamodid_desc = cl_get_username(g_stea_m.steamodid)
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      CALL astt401_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE stea_t SET (steamodid,steamoddt) = (g_stea_m.steamodid,g_stea_m.steamoddt)
          WHERE steaent = g_enterprise AND steadocno = g_steadocno_t
 
      END IF
    
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_stea_m.* = g_stea_m_t.*
         CALL astt401_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_stea_m.steadocno != g_steadocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE steb_t SET stebdocno = g_stea_m.steadocno
 
          WHERE stebent = g_enterprise AND stebdocno = g_steadocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "steb_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "steb_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         
         UPDATE stec_t
            SET stecdocno = g_stea_m.steadocno
 
          WHERE stecent = g_enterprise AND
                stecdocno = g_steadocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stec_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stec_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update3" mark="Y"/>}
         #end add-point
         
         UPDATE stee_t
            SET steedocno = g_stea_m.steadocno
 
          WHERE steeent = g_enterprise AND
                steedocno = g_steadocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update3"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stee_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stee_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update3"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update4" mark="Y"/>}
         #end add-point
         
         UPDATE steg_t
            SET stegdocno = g_stea_m.steadocno
 
          WHERE stegent = g_enterprise AND
                stegdocno = g_steadocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update4"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "steg_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "steg_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update4"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update5" mark="Y"/>}
         #end add-point
         
         UPDATE steh_t
            SET stehdocno = g_stea_m.steadocno
 
          WHERE stehent = g_enterprise AND
                stehdocno = g_steadocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update5"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "steh_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "steh_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update5"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update6" mark="Y"/>}
         #end add-point
         
         UPDATE stei_t
            SET steidocno = g_stea_m.steadocno
 
          WHERE steient = g_enterprise AND
                steidocno = g_steadocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update6"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stei_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stei_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update6"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update7" mark="Y"/>}
         #end add-point
         
         UPDATE stej_t
            SET stejdocno = g_stea_m.steadocno
 
          WHERE stejent = g_enterprise AND
                stejdocno = g_steadocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update7"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stej_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stej_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update7"/>}
         #end add-point
 
 
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update8" mark="Y"/>}
         #end add-point
         UPDATE sted_t
            SET steddocno = g_stea_m.steadocno
 
          WHERE stedent = g_enterprise AND
                steddocno = g_steadocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update8"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "sted_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "sted_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update8"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update9" mark="Y"/>}
         #end add-point
         UPDATE stef_t
            SET stefdocno = g_stea_m.steadocno
 
          WHERE stefent = g_enterprise AND
                stefdocno = g_steadocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update9"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stef_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stef_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update9"/>}
         #end add-point
 
 
         
         #UPDATE 多語言table key值
         
         
         
         
         
         
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL astt401_set_act_visible()   
   CALL astt401_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " steaent = '" ||g_enterprise|| "' AND",
                      " steadocno = '", g_stea_m.steadocno, "' "
 
   #填到對應位置
   CALL astt401_browser_fill("")
 
   CLOSE astt401_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL astt401_msgcentre_notify('')
 
END FUNCTION   
]]>
  </section>
  <section id="astt401.msgcentre_notify" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a66 樣板自動產生(Version:2)
PRIVATE FUNCTION astt401_msgcentre_notify(lc_state)
   DEFINE lc_state LIKE type_t.chr5
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define" edit="s"/>}
   #end add-point
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define_customerization" edit="c"/>}
   #end add-point   
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   IF g_action_choice = "statechange" THEN
      LET g_msgparam.state = g_action_choice,":",lc_state
   ELSE
      LET g_msgparam.state = g_action_choice
   END IF
 
   #PK資料填寫
   CALL astt401_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_stea_m)
 
   #add-point:msgcentre其他通知
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
]]>
  </section>
  <section id="astt401.other_dialog" ver="1" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="astt401.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="astt401.query" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION astt401_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point   
   #add-point:query段define(客製用)
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_steb_d.clear()
   CALL g_steb2_d.clear()
   CALL g_steb3_d.clear()
   CALL g_steb4_d.clear()
   CALL g_steb5_d.clear()
   CALL g_steb6_d.clear()
   CALL g_steb7_d.clear()
   CALL g_steb8_d.clear()
   CALL g_steb9_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL astt401_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL astt401_browser_fill("")
      CALL astt401_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL astt401_filter_show('steadocno')
   CALL astt401_filter_show('steadocdt')
   CALL astt401_filter_show('stea000')
   CALL astt401_filter_show('stea001')
   CALL astt401_filter_show('stea002')
   CALL astt401_filter_show('stea003')
   CALL astt401_filter_show('stea004')
   CALL astt401_filter_show('stea005')
   CALL astt401_filter_show('stea006')
   CALL astt401_filter_show('stea007')
   CALL astt401_filter_show('stea008')
   CALL astt401_filter_show('stea009')
   CALL astt401_filter_show('stea010')
   CALL astt401_filter_show('stea011')
   CALL astt401_filter_show('stea012')
   CALL astt401_filter_show('stea013')
   CALL astt401_filter_show('stea014')
   CALL astt401_filter_show('stea015')
   CALL astt401_filter_show('stea016')
   CALL astt401_filter_show('stea017')
   CALL astt401_filter_show('stea018')
   CALL astt401_filter_show('stea019')
   CALL astt401_filter_show('stea020')
   CALL astt401_filter_show('stea021')
   CALL astt401_filter_show('stea022')
   CALL astt401_filter_show('stea023')
   CALL astt401_filter_show('stea024')
   CALL astt401_filter_show('stea025')
   CALL astt401_filter_show('stea026')
   CALL astt401_filter_show('stea027')
   CALL astt401_filter_show('stea028')
   CALL astt401_filter_show('stea029')
   CALL astt401_filter_show('stea030')
   CALL astt401_filter_show('stea031')
   CALL astt401_filter_show('stea032')
   CALL astt401_filter_show('stea033')
   CALL astt401_filter_show('stea034')
   CALL astt401_filter_show('stea035')
   CALL astt401_filter_show('stea036')
   CALL astt401_filter_show('stea037')
   CALL astt401_filter_show('stea038')
   CALL astt401_filter_show('stea039')
   CALL astt401_filter_show('stea040')
   CALL astt401_filter_show('stea041')
   CALL astt401_filter_show('stea042')
   CALL astt401_filter_show('stea043')
   CALL astt401_filter_show('stea044')
   CALL astt401_filter_show('stea045')
   CALL astt401_filter_show('stea046')
   CALL astt401_filter_show('stea047')
   CALL astt401_filter_show('stea048')
   CALL astt401_filter_show('stea049')
   CALL astt401_filter_show('steaunit')
   CALL astt401_filter_show('steasite')
   CALL astt401_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL astt401_fetch("F") 
      #顯示單身筆數
      CALL astt401_idx_chk()
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="astt401.reproduce" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION astt401_reproduce()
   DEFINE l_newno     LIKE stea_t.steadocno 
   DEFINE l_oldno     LIKE stea_t.steadocno 
 
   DEFINE l_master    RECORD LIKE stea_t.*
   DEFINE l_detail    RECORD LIKE steb_t.*
   DEFINE l_detail2    RECORD LIKE stec_t.*
 
   DEFINE l_detail3    RECORD LIKE stee_t.*
 
   DEFINE l_detail4    RECORD LIKE steg_t.*
 
   DEFINE l_detail5    RECORD LIKE steh_t.*
 
   DEFINE l_detail6    RECORD LIKE stei_t.*
 
   DEFINE l_detail7    RECORD LIKE stej_t.*
 
 
   DEFINE l_detail8    RECORD LIKE sted_t.*
 
   DEFINE l_detail9    RECORD LIKE stef_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define
   {<point name="reproduce.define" edit="s"/>}
   #end add-point   
   #add-point:reproduce段define(客製用)
   {<point name="reproduce.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_stea_m.steadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_steadocno_t = g_stea_m.steadocno
 
    
   LET g_stea_m.steadocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_stea_m.steaownid = g_user
      LET g_stea_m.steaowndp = g_dept
      LET g_stea_m.steacrtid = g_user
      LET g_stea_m.steacrtdp = g_dept 
      LET g_stea_m.steacrtdt = cl_get_current()
      LET g_stea_m.steamodid = g_user
      LET g_stea_m.steamoddt = cl_get_current()
      LET g_stea_m.steastus = 'N'
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_stea_m.steastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #清空key欄位的desc
   
   
   CALL astt401_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_stea_m.* TO NULL
      INITIALIZE g_steb_d TO NULL
      INITIALIZE g_steb2_d TO NULL
      INITIALIZE g_steb3_d TO NULL
      INITIALIZE g_steb4_d TO NULL
      INITIALIZE g_steb5_d TO NULL
      INITIALIZE g_steb6_d TO NULL
      INITIALIZE g_steb7_d TO NULL
      INITIALIZE g_steb8_d TO NULL
      INITIALIZE g_steb9_d TO NULL
 
      #add-point:複製取消後
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL astt401_show()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL astt401_set_act_visible()   
   CALL astt401_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_steadocno_t = g_stea_m.steadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " steaent = '" ||g_enterprise|| "' AND",
                      " steadocno = '", g_stea_m.steadocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL astt401_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL astt401_idx_chk()
   
   #功能已完成,通報訊息中心
   CALL astt401_msgcentre_notify('')
 
END FUNCTION
]]>
  </section>
  <section id="astt401.set_act_no_visible" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限關閉
PRIVATE FUNCTION astt401_set_act_no_visible()
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible段define(客製用)
   {<point name="set_act_no_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible段
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="astt401.set_act_no_visible_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限關閉
PRIVATE FUNCTION astt401_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define(客製用)
   {<point name="set_act_no_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="astt401.set_act_visible" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限開啟
PRIVATE FUNCTION astt401_set_act_visible()
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible段define(客製用)
   {<point name="set_act_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible段
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="astt401.set_act_visible_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限開啟
PRIVATE FUNCTION astt401_set_act_visible_b()
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible_b段define(客製用)
   {<point name="set_act_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible_b段
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="astt401.set_entry" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION astt401_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define" edit="s"/>}
   #end add-point       
   #add-point:set_entry段define(客製用)
   {<point name="set_entry.define_customerization" edit="c"/>}
   #end add-point       
   
   CALL cl_set_comp_entry("steadocno,steadocdt",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("steadocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="astt401.set_entry_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION astt401_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define" edit="s"/>}
   #end add-point     
   #add-point:set_entry_b段define(客製用)
   {<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point     
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="astt401.set_no_entry" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION astt401_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define" edit="s"/>}
   #end add-point     
   #add-point:set_no_entry段define(客製用)
   {<point name="set_no_entry.define_customerization" edit="c"/>}
   #end add-point     
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("steadocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("steadocno,steadocdt",FALSE)
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="astt401.set_no_entry_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION astt401_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point    
   #add-point:set_no_entry_b段define(客製用)
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point    
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="astt401.set_pk_array" ver="1" status="" src="s" readonly="">
    <![CDATA[   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION astt401_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_stea_m.steadocno
   LET g_pk_array[1].column = 'steadocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="astt401.show" ver="12" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION astt401_show()
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define
   {<point name="show.define" edit="s"/>}
   #end add-point  
   #add-point:show段define(客製用)
   {<point name="show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL astt401_b_fill() #單身填充
      CALL astt401_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:3)
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:2)
   CALL astt401_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_stea_m_mask_o.* =  g_stea_m.*
   CALL astt401_stea_t_mask()
   LET g_stea_m_mask_n.* =  g_stea_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_stea_m.steasite,g_stea_m.steasite_desc,g_stea_m.steadocdt,g_stea_m.steadocno,g_stea_m.stea000, 
       g_stea_m.steaunit,g_stea_m.steaunit_desc,g_stea_m.stea001,g_stea_m.stea002,g_stea_m.stea003,g_stea_m.stea004, 
       g_stea_m.stea009,g_stea_m.steastus,g_stea_m.stea005,g_stea_m.steal002,g_stea_m.steal003,g_stea_m.stea006, 
       g_stea_m.stea006_desc,g_stea_m.stea007,g_stea_m.stea008,g_stea_m.stea047,g_stea_m.stea047_desc, 
       g_stea_m.stea048,g_stea_m.stea048_desc,g_stea_m.stea044,g_stea_m.stea044_desc,g_stea_m.stea010, 
       g_stea_m.stea010_desc,g_stea_m.stea011,g_stea_m.stea011_desc,g_stea_m.stea012,g_stea_m.stea012_desc, 
       g_stea_m.stea013,g_stea_m.stea013_desc,g_stea_m.stea014,g_stea_m.stea014_desc,g_stea_m.stea015, 
       g_stea_m.stea015_desc,g_stea_m.stea016,g_stea_m.stea045,g_stea_m.stea045_desc,g_stea_m.stea046, 
       g_stea_m.stea029,g_stea_m.stea030,g_stea_m.stea032,g_stea_m.stea032_desc,g_stea_m.stea033,g_stea_m.stea033_desc, 
       g_stea_m.stea034,g_stea_m.stea034_desc,g_stea_m.stea035,g_stea_m.stea035_desc,g_stea_m.stea036, 
       g_stea_m.stea036_desc,g_stea_m.stea037,g_stea_m.stea037_desc,g_stea_m.stea038,g_stea_m.stea038_desc, 
       g_stea_m.stea039,g_stea_m.stea040,g_stea_m.stea028,g_stea_m.next_b,g_stea_m.stea017,g_stea_m.stea021, 
       g_stea_m.stea024,g_stea_m.stea018,g_stea_m.stea049,g_stea_m.stea025,g_stea_m.stea019,g_stea_m.stea022, 
       g_stea_m.stea026,g_stea_m.stea020,g_stea_m.stea023,g_stea_m.stea027,g_stea_m.stea031,g_stea_m.stea042, 
       g_stea_m.steaownid,g_stea_m.steaownid_desc,g_stea_m.steaowndp,g_stea_m.steaowndp_desc,g_stea_m.steacrtid, 
       g_stea_m.steacrtid_desc,g_stea_m.steacrtdp,g_stea_m.steacrtdp_desc,g_stea_m.steacrtdt,g_stea_m.steamodid, 
       g_stea_m.steamodid_desc,g_stea_m.steamoddt,g_stea_m.steacnfid,g_stea_m.steacnfid_desc,g_stea_m.steacnfdt 

   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_stea_m.steastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_steb_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_steb2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_steb3_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body3.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_steb4_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body4.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_steb5_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body5.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_steb6_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body6.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_steb7_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body7.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_steb8_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body8.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_steb9_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body9.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL astt401_detail_show()
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="astt401.signature" ver="3" status="" src="s" readonly="">
    <![CDATA[   #應用 a39 樣板自動產生(Version:7)
#+ BPM提交
PRIVATE FUNCTION astt401_send()
   #add-point:send段define
   {<point name="send.define" edit="s"/>}
   #end add-point 
   #add-point:send段define(客製用)
   {<point name="send.define_customerization" edit="c"/>}
   #end add-point 
 
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
   LET g_wc2_table2 = " 1=1"
   LET g_wc2_table3 = " 1=1"
   LET g_wc2_table4 = " 1=1"
   LET g_wc2_table5 = " 1=1"
   LET g_wc2_table6 = " 1=1"
   LET g_wc2_table7 = " 1=1"
 
 
   CALL astt401_show()
   CALL astt401_set_pk_array()
   
   #add-point: 初始化的ADP
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_stea_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_steb_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_steb2_d))
   CALL cl_bpm_set_detail_data("s_detail3", util.JSONArray.fromFGL(g_steb3_d))
   CALL cl_bpm_set_detail_data("s_detail4", util.JSONArray.fromFGL(g_steb4_d))
   CALL cl_bpm_set_detail_data("s_detail5", util.JSONArray.fromFGL(g_steb5_d))
   CALL cl_bpm_set_detail_data("s_detail6", util.JSONArray.fromFGL(g_steb6_d))
   CALL cl_bpm_set_detail_data("s_detail7", util.JSONArray.fromFGL(g_steb7_d))
   CALL cl_bpm_set_detail_data("s_detail8", util.JSONArray.fromFGL(g_steb8_d))
   CALL cl_bpm_set_detail_data("s_detail9", util.JSONArray.fromFGL(g_steb9_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP
   {<point name="send.before_cli" />}
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP
   {<point name="send.after_send" />}
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL astt401_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL astt401_ui_headershow()
   CALL astt401_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
#應用 a40 樣板自動產生(Version:4)
#+ BPM抽單
PRIVATE FUNCTION astt401_draw_out()
   #add-point:draw段define
   {<point name="draw.define" edit="s"/>}
   #end add-point
   #add-point:draw段define
   {<point name="draw.define_customerization" edit="c"/>}
   #end add-point
 
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_row].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL astt401_ui_headershow()  
   CALL astt401_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
]]>
  </section>
  <section id="astt401.state_change" ver="14" status="" src="s" readonly="">
    <![CDATA[   #應用 a09 樣板自動產生(Version:11)
#+ 確認碼變更 
PRIVATE FUNCTION astt401_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define" edit="s"/>}
   #end add-point  
   #add-point:statechange段define(客製用)
   {<point name="statechange.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_stea_m.steadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN astt401_cl USING g_enterprise,g_stea_m.steadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN astt401_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE astt401_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE astt401_master_referesh USING g_stea_m.steadocno INTO g_stea_m.steasite,g_stea_m.steadocdt, 
       g_stea_m.steadocno,g_stea_m.stea000,g_stea_m.steaunit,g_stea_m.stea001,g_stea_m.stea002,g_stea_m.stea003, 
       g_stea_m.stea004,g_stea_m.stea009,g_stea_m.steastus,g_stea_m.stea005,g_stea_m.stea006,g_stea_m.stea007, 
       g_stea_m.stea008,g_stea_m.stea047,g_stea_m.stea048,g_stea_m.stea044,g_stea_m.stea010,g_stea_m.stea011, 
       g_stea_m.stea012,g_stea_m.stea013,g_stea_m.stea014,g_stea_m.stea015,g_stea_m.stea016,g_stea_m.stea045, 
       g_stea_m.stea046,g_stea_m.stea029,g_stea_m.stea030,g_stea_m.stea032,g_stea_m.stea033,g_stea_m.stea034, 
       g_stea_m.stea035,g_stea_m.stea036,g_stea_m.stea037,g_stea_m.stea038,g_stea_m.stea039,g_stea_m.stea040, 
       g_stea_m.stea028,g_stea_m.stea017,g_stea_m.stea021,g_stea_m.stea024,g_stea_m.stea018,g_stea_m.stea049, 
       g_stea_m.stea025,g_stea_m.stea019,g_stea_m.stea022,g_stea_m.stea026,g_stea_m.stea020,g_stea_m.stea023, 
       g_stea_m.stea027,g_stea_m.stea031,g_stea_m.stea042,g_stea_m.steaownid,g_stea_m.steaowndp,g_stea_m.steacrtid, 
       g_stea_m.steacrtdp,g_stea_m.steacrtdt,g_stea_m.steamodid,g_stea_m.steamoddt,g_stea_m.steacnfid, 
       g_stea_m.steacnfdt,g_stea_m.steasite_desc,g_stea_m.steaunit_desc,g_stea_m.stea006_desc,g_stea_m.stea047_desc, 
       g_stea_m.stea048_desc,g_stea_m.stea044_desc,g_stea_m.stea010_desc,g_stea_m.stea011_desc,g_stea_m.stea012_desc, 
       g_stea_m.stea013_desc,g_stea_m.stea014_desc,g_stea_m.stea015_desc,g_stea_m.stea045_desc,g_stea_m.stea032_desc, 
       g_stea_m.stea035_desc,g_stea_m.stea036_desc,g_stea_m.stea037_desc,g_stea_m.stea038_desc,g_stea_m.steaownid_desc, 
       g_stea_m.steaowndp_desc,g_stea_m.steacrtid_desc,g_stea_m.steacrtdp_desc,g_stea_m.steamodid_desc, 
       g_stea_m.steacnfid_desc
 
   #檢查是否允許此動作
   IF NOT astt401_action_chk() THEN
      CLOSE astt401_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_stea_m.steasite,g_stea_m.steasite_desc,g_stea_m.steadocdt,g_stea_m.steadocno,g_stea_m.stea000, 
       g_stea_m.steaunit,g_stea_m.steaunit_desc,g_stea_m.stea001,g_stea_m.stea002,g_stea_m.stea003,g_stea_m.stea004, 
       g_stea_m.stea009,g_stea_m.steastus,g_stea_m.stea005,g_stea_m.steal002,g_stea_m.steal003,g_stea_m.stea006, 
       g_stea_m.stea006_desc,g_stea_m.stea007,g_stea_m.stea008,g_stea_m.stea047,g_stea_m.stea047_desc, 
       g_stea_m.stea048,g_stea_m.stea048_desc,g_stea_m.stea044,g_stea_m.stea044_desc,g_stea_m.stea010, 
       g_stea_m.stea010_desc,g_stea_m.stea011,g_stea_m.stea011_desc,g_stea_m.stea012,g_stea_m.stea012_desc, 
       g_stea_m.stea013,g_stea_m.stea013_desc,g_stea_m.stea014,g_stea_m.stea014_desc,g_stea_m.stea015, 
       g_stea_m.stea015_desc,g_stea_m.stea016,g_stea_m.stea045,g_stea_m.stea045_desc,g_stea_m.stea046, 
       g_stea_m.stea029,g_stea_m.stea030,g_stea_m.stea032,g_stea_m.stea032_desc,g_stea_m.stea033,g_stea_m.stea033_desc, 
       g_stea_m.stea034,g_stea_m.stea034_desc,g_stea_m.stea035,g_stea_m.stea035_desc,g_stea_m.stea036, 
       g_stea_m.stea036_desc,g_stea_m.stea037,g_stea_m.stea037_desc,g_stea_m.stea038,g_stea_m.stea038_desc, 
       g_stea_m.stea039,g_stea_m.stea040,g_stea_m.stea028,g_stea_m.next_b,g_stea_m.stea017,g_stea_m.stea021, 
       g_stea_m.stea024,g_stea_m.stea018,g_stea_m.stea049,g_stea_m.stea025,g_stea_m.stea019,g_stea_m.stea022, 
       g_stea_m.stea026,g_stea_m.stea020,g_stea_m.stea023,g_stea_m.stea027,g_stea_m.stea031,g_stea_m.stea042, 
       g_stea_m.steaownid,g_stea_m.steaownid_desc,g_stea_m.steaowndp,g_stea_m.steaowndp_desc,g_stea_m.steacrtid, 
       g_stea_m.steacrtid_desc,g_stea_m.steacrtdp,g_stea_m.steacrtdp_desc,g_stea_m.steacrtdt,g_stea_m.steamodid, 
       g_stea_m.steamodid_desc,g_stea_m.steamoddt,g_stea_m.steacnfid,g_stea_m.steacnfid_desc,g_stea_m.steacnfdt 

 
   CASE g_stea_m.steastus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_stea_m.steastus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      #應用 a36 樣板自動產生(Version:4)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT astt401_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE astt401_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT astt401_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE astt401_cl
            RETURN
         END IF
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制
            {<point name="statechange.unconfirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制
            {<point name="statechange.confirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制
            {<point name="statechange.approved"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制
      #      {<point name="statechange.withdraw"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制
            {<point name="statechange.rejection"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制
      #      {<point name="statechange.signing"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制
            {<point name="statechange.invalid"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "X"
      ) OR 
      g_stea_m.steastus = lc_state OR cl_null(lc_state) THEN
      CLOSE astt401_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_stea_m.steamodid = g_user
   LET g_stea_m.steamoddt = cl_get_current()
   LET g_stea_m.steastus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE stea_t 
      SET (steastus,steamodid,steamoddt) 
        = (g_stea_m.steastus,g_stea_m.steamodid,g_stea_m.steamoddt)     
    WHERE steaent = g_enterprise AND steadocno = g_stea_m.steadocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE astt401_master_referesh USING g_stea_m.steadocno INTO g_stea_m.steasite,g_stea_m.steadocdt, 
          g_stea_m.steadocno,g_stea_m.stea000,g_stea_m.steaunit,g_stea_m.stea001,g_stea_m.stea002,g_stea_m.stea003, 
          g_stea_m.stea004,g_stea_m.stea009,g_stea_m.steastus,g_stea_m.stea005,g_stea_m.stea006,g_stea_m.stea007, 
          g_stea_m.stea008,g_stea_m.stea047,g_stea_m.stea048,g_stea_m.stea044,g_stea_m.stea010,g_stea_m.stea011, 
          g_stea_m.stea012,g_stea_m.stea013,g_stea_m.stea014,g_stea_m.stea015,g_stea_m.stea016,g_stea_m.stea045, 
          g_stea_m.stea046,g_stea_m.stea029,g_stea_m.stea030,g_stea_m.stea032,g_stea_m.stea033,g_stea_m.stea034, 
          g_stea_m.stea035,g_stea_m.stea036,g_stea_m.stea037,g_stea_m.stea038,g_stea_m.stea039,g_stea_m.stea040, 
          g_stea_m.stea028,g_stea_m.stea017,g_stea_m.stea021,g_stea_m.stea024,g_stea_m.stea018,g_stea_m.stea049, 
          g_stea_m.stea025,g_stea_m.stea019,g_stea_m.stea022,g_stea_m.stea026,g_stea_m.stea020,g_stea_m.stea023, 
          g_stea_m.stea027,g_stea_m.stea031,g_stea_m.stea042,g_stea_m.steaownid,g_stea_m.steaowndp,g_stea_m.steacrtid, 
          g_stea_m.steacrtdp,g_stea_m.steacrtdt,g_stea_m.steamodid,g_stea_m.steamoddt,g_stea_m.steacnfid, 
          g_stea_m.steacnfdt,g_stea_m.steasite_desc,g_stea_m.steaunit_desc,g_stea_m.stea006_desc,g_stea_m.stea047_desc, 
          g_stea_m.stea048_desc,g_stea_m.stea044_desc,g_stea_m.stea010_desc,g_stea_m.stea011_desc,g_stea_m.stea012_desc, 
          g_stea_m.stea013_desc,g_stea_m.stea014_desc,g_stea_m.stea015_desc,g_stea_m.stea045_desc,g_stea_m.stea032_desc, 
          g_stea_m.stea035_desc,g_stea_m.stea036_desc,g_stea_m.stea037_desc,g_stea_m.stea038_desc,g_stea_m.steaownid_desc, 
          g_stea_m.steaowndp_desc,g_stea_m.steacrtid_desc,g_stea_m.steacrtdp_desc,g_stea_m.steamodid_desc, 
          g_stea_m.steacnfid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_stea_m.steasite,g_stea_m.steasite_desc,g_stea_m.steadocdt,g_stea_m.steadocno, 
          g_stea_m.stea000,g_stea_m.steaunit,g_stea_m.steaunit_desc,g_stea_m.stea001,g_stea_m.stea002, 
          g_stea_m.stea003,g_stea_m.stea004,g_stea_m.stea009,g_stea_m.steastus,g_stea_m.stea005,g_stea_m.steal002, 
          g_stea_m.steal003,g_stea_m.stea006,g_stea_m.stea006_desc,g_stea_m.stea007,g_stea_m.stea008, 
          g_stea_m.stea047,g_stea_m.stea047_desc,g_stea_m.stea048,g_stea_m.stea048_desc,g_stea_m.stea044, 
          g_stea_m.stea044_desc,g_stea_m.stea010,g_stea_m.stea010_desc,g_stea_m.stea011,g_stea_m.stea011_desc, 
          g_stea_m.stea012,g_stea_m.stea012_desc,g_stea_m.stea013,g_stea_m.stea013_desc,g_stea_m.stea014, 
          g_stea_m.stea014_desc,g_stea_m.stea015,g_stea_m.stea015_desc,g_stea_m.stea016,g_stea_m.stea045, 
          g_stea_m.stea045_desc,g_stea_m.stea046,g_stea_m.stea029,g_stea_m.stea030,g_stea_m.stea032, 
          g_stea_m.stea032_desc,g_stea_m.stea033,g_stea_m.stea033_desc,g_stea_m.stea034,g_stea_m.stea034_desc, 
          g_stea_m.stea035,g_stea_m.stea035_desc,g_stea_m.stea036,g_stea_m.stea036_desc,g_stea_m.stea037, 
          g_stea_m.stea037_desc,g_stea_m.stea038,g_stea_m.stea038_desc,g_stea_m.stea039,g_stea_m.stea040, 
          g_stea_m.stea028,g_stea_m.next_b,g_stea_m.stea017,g_stea_m.stea021,g_stea_m.stea024,g_stea_m.stea018, 
          g_stea_m.stea049,g_stea_m.stea025,g_stea_m.stea019,g_stea_m.stea022,g_stea_m.stea026,g_stea_m.stea020, 
          g_stea_m.stea023,g_stea_m.stea027,g_stea_m.stea031,g_stea_m.stea042,g_stea_m.steaownid,g_stea_m.steaownid_desc, 
          g_stea_m.steaowndp,g_stea_m.steaowndp_desc,g_stea_m.steacrtid,g_stea_m.steacrtid_desc,g_stea_m.steacrtdp, 
          g_stea_m.steacrtdp_desc,g_stea_m.steacrtdt,g_stea_m.steamodid,g_stea_m.steamodid_desc,g_stea_m.steamoddt, 
          g_stea_m.steacnfid,g_stea_m.steacnfid_desc,g_stea_m.steacnfdt
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE astt401_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL astt401_msgcentre_notify(lc_state)
   
END FUNCTION
 
 
]]>
  </section>
  <section id="astt401.status_show" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION astt401_status_show()
   #add-point:status_show段define
   {<point name="status_show.define" edit="s"/>}
   #end add-point
   #add-point:status_show段define(客製用)
   {<point name="status_show.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:status_show段status_show
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="astt401.ui_browser_refresh" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION astt401_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define" edit="s"/>}
   #end add-point    
   #add-point:ui_browser_refresh段define(客製用)
   {<point name="ui_browser_refresh.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_steadocno = g_stea_m.steadocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="astt401.ui_detailshow" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION astt401_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_detailshow段define(客製用)
   {<point name="ui_detailshow.define_customerization" edit="c"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail5",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail6",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail7",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail8",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail9",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="astt401.ui_dialog" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION astt401_ui_dialog()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define(客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:2)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL astt401_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_stea_m.* TO NULL
         CALL g_steb_d.clear()
         CALL g_steb2_d.clear()
         CALL g_steb3_d.clear()
         CALL g_steb4_d.clear()
         CALL g_steb5_d.clear()
         CALL g_steb6_d.clear()
         CALL g_steb7_d.clear()
         CALL g_steb8_d.clear()
         CALL g_steb9_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL astt401_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL astt401_fetch('') # reload data
               LET l_ac = 1
               CALL astt401_ui_detailshow() #Setting the current row 
         
               CALL astt401_idx_chk()
               #NEXT FIELD stebseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_steb_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astt401_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL astt401_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_steb2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astt401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               CALL astt401_b_fill2('8')
 
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL astt401_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_steb3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astt401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               CALL astt401_b_fill2('9')
 
               #add-point:page3, before row動作
               {<point name="ui_dialog.body3.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               #顯示單身筆數
               CALL astt401_idx_chk()
               #add-point:page3自定義行為
               {<point name="ui_dialog.body3.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為
            {<point name="ui_dialog.body3.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_steb4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astt401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_detail_idx = l_ac
               
               #add-point:page4, before row動作
               {<point name="ui_dialog.body4.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_current_page = 4
               #顯示單身筆數
               CALL astt401_idx_chk()
               #add-point:page4自定義行為
               {<point name="ui_dialog.body4.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_4)
            
         
            #add-point:page4自定義行為
            {<point name="ui_dialog.body4.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_steb5_d TO s_detail5.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astt401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               LET g_detail_idx = l_ac
               
               #add-point:page5, before row動作
               {<point name="ui_dialog.body5.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               LET g_current_page = 5
               #顯示單身筆數
               CALL astt401_idx_chk()
               #add-point:page5自定義行為
               {<point name="ui_dialog.body5.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_5)
            
         
            #add-point:page5自定義行為
            {<point name="ui_dialog.body5.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_steb6_d TO s_detail6.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astt401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail6")
               LET g_detail_idx = l_ac
               
               #add-point:page6, before row動作
               {<point name="ui_dialog.body6.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail6")
               LET g_current_page = 6
               #顯示單身筆數
               CALL astt401_idx_chk()
               #add-point:page6自定義行為
               {<point name="ui_dialog.body6.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_6)
            
         
            #add-point:page6自定義行為
            {<point name="ui_dialog.body6.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_steb7_d TO s_detail7.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astt401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail7")
               LET g_detail_idx = l_ac
               
               #add-point:page7, before row動作
               {<point name="ui_dialog.body7.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail7")
               LET g_current_page = 7
               #顯示單身筆數
               CALL astt401_idx_chk()
               #add-point:page7自定義行為
               {<point name="ui_dialog.body7.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_7)
            
         
            #add-point:page7自定義行為
            {<point name="ui_dialog.body7.action"/>}
            #end add-point
         
         END DISPLAY
 
         
         #第二階單身段落
         DISPLAY ARRAY g_steb8_d TO s_detail8.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astt401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail8")
               LET g_detail_idx2 = l_ac
               
               #add-point:page8, before row動作
               {<point name="ui_dialog.body8.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在下階單身則控制筆數位置
               IF g_loc = 'd' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx2)
               END IF
               LET g_loc = 'd'
               LET l_ac = DIALOG.getCurrentRow("s_detail8")
               LET g_current_page = 8
               #顯示單身筆數
               CALL astt401_idx_chk()
               #add-point:page8自定義行為
               {<point name="ui_dialog.body8.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_8)
            
         
            #add-point:page8自定義行為
            {<point name="ui_dialog.body8.action"/>}
            #end add-point
         
         END DISPLAY
         #第二階單身段落
         DISPLAY ARRAY g_steb9_d TO s_detail9.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astt401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail9")
               LET g_detail_idx2 = l_ac
               
               #add-point:page9, before row動作
               {<point name="ui_dialog.body9.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在下階單身則控制筆數位置
               IF g_loc = 'd' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx2)
               END IF
               LET g_loc = 'd'
               LET l_ac = DIALOG.getCurrentRow("s_detail9")
               LET g_current_page = 9
               #顯示單身筆數
               CALL astt401_idx_chk()
               #add-point:page9自定義行為
               {<point name="ui_dialog.body9.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_9)
            
         
            #add-point:page9自定義行為
            {<point name="ui_dialog.body9.action"/>}
            #end add-point
         
         END DISPLAY
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL astt401_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL astt401_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL astt401_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL astt401_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL astt401_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL astt401_set_act_visible()   
            CALL astt401_set_act_no_visible()
            IF NOT (g_stea_m.steadocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " steaent = '" ||g_enterprise|| "' AND",
                                  " steadocno = '", g_stea_m.steadocno, "' "
 
               #填到對應位置
               CALL astt401_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:2)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
               INITIALIZE g_wc2_table4 TO NULL
 
               INITIALIZE g_wc2_table5 TO NULL
 
               INITIALIZE g_wc2_table6 TO NULL
 
               INITIALIZE g_wc2_table7 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "stea_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "steb_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "stec_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stee_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "steg_t" 
                        LET g_wc2_table4 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "steh_t" 
                        LET g_wc2_table5 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stei_t" 
                        LET g_wc2_table6 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stej_t" 
                        LET g_wc2_table7 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
                  OR NOT cl_null(g_wc2_table4)
 
                  OR NOT cl_null(g_wc2_table5)
 
                  OR NOT cl_null(g_wc2_table6)
 
                  OR NOT cl_null(g_wc2_table7)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
                  IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
                  END IF
 
                  IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
                  END IF
 
                  IF g_wc2_table6 <> " 1=1" AND NOT cl_null(g_wc2_table6) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
                  END IF
 
                  IF g_wc2_table7 <> " 1=1" AND NOT cl_null(g_wc2_table7) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL astt401_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
               INITIALIZE g_wc2_table4 TO NULL
 
               INITIALIZE g_wc2_table5 TO NULL
 
               INITIALIZE g_wc2_table6 TO NULL
 
               INITIALIZE g_wc2_table7 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "stea_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "steb_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "stec_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stee_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "steg_t" 
                        LET g_wc2_table4 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "steh_t" 
                        LET g_wc2_table5 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stei_t" 
                        LET g_wc2_table6 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stej_t" 
                        LET g_wc2_table7 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
                  OR NOT cl_null(g_wc2_table4)
 
                  OR NOT cl_null(g_wc2_table5)
 
                  OR NOT cl_null(g_wc2_table6)
 
                  OR NOT cl_null(g_wc2_table7)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
                  IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
                  END IF
 
                  IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
                  END IF
 
                  IF g_wc2_table6 <> " 1=1" AND NOT cl_null(g_wc2_table6) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
                  END IF
 
                  IF g_wc2_table7 <> " 1=1" AND NOT cl_null(g_wc2_table7) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL astt401_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL astt401_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:2)
            #過濾瀏覽頁資料
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL astt401_filter()
               EXIT DIALOG
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL astt401_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astt401_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL astt401_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astt401_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL astt401_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astt401_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL astt401_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astt401_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL astt401_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astt401_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_steb_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_steb2_d)
                  LET g_export_id[2]   = "s_detail2"
                  LET g_export_node[3] = base.typeInfo.create(g_steb3_d)
                  LET g_export_id[3]   = "s_detail3"
                  LET g_export_node[4] = base.typeInfo.create(g_steb4_d)
                  LET g_export_id[4]   = "s_detail4"
                  LET g_export_node[5] = base.typeInfo.create(g_steb5_d)
                  LET g_export_id[5]   = "s_detail5"
                  LET g_export_node[6] = base.typeInfo.create(g_steb6_d)
                  LET g_export_id[6]   = "s_detail6"
                  LET g_export_node[7] = base.typeInfo.create(g_steb7_d)
                  LET g_export_id[7]   = "s_detail7"
                  LET g_export_node[8] = base.typeInfo.create(g_steb8_d)
                  LET g_export_id[8]   = "s_detail8"
                  LET g_export_node[9] = base.typeInfo.create(g_steb9_d)
                  LET g_export_id[9]   = "s_detail9"
 
                  #add-point:ON ACTION exporttoexcel
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD stebseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL astt401_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL astt401_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL astt401_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL astt401_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               &include "erp/ast/astt401_rep.4gl"
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL astt401_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL astt401_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
               CALL g_curr_diag.setCurrentRow("s_detail3",1)
               CALL g_curr_diag.setCurrentRow("s_detail4",1)
               CALL g_curr_diag.setCurrentRow("s_detail5",1)
               CALL g_curr_diag.setCurrentRow("s_detail6",1)
               CALL g_curr_diag.setCurrentRow("s_detail7",1)
               CALL g_curr_diag.setCurrentRow("s_detail8",1)
               CALL g_curr_diag.setCurrentRow("s_detail9",1)
 
 
 
            END IF
 
 
 
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL astt401_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL astt401_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL astt401_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_stea_m.steadocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="astt401.ui_headershow" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION astt401_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_headershow段define(客製用)
   {<point name="ui_headershow.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_stea_m.steadocno = g_browser[g_current_idx].b_steadocno   
 
   EXECUTE astt401_master_referesh USING g_stea_m.steadocno INTO g_stea_m.steasite,g_stea_m.steadocdt, 
       g_stea_m.steadocno,g_stea_m.stea000,g_stea_m.steaunit,g_stea_m.stea001,g_stea_m.stea002,g_stea_m.stea003, 
       g_stea_m.stea004,g_stea_m.stea009,g_stea_m.steastus,g_stea_m.stea005,g_stea_m.stea006,g_stea_m.stea007, 
       g_stea_m.stea008,g_stea_m.stea047,g_stea_m.stea048,g_stea_m.stea044,g_stea_m.stea010,g_stea_m.stea011, 
       g_stea_m.stea012,g_stea_m.stea013,g_stea_m.stea014,g_stea_m.stea015,g_stea_m.stea016,g_stea_m.stea045, 
       g_stea_m.stea046,g_stea_m.stea029,g_stea_m.stea030,g_stea_m.stea032,g_stea_m.stea033,g_stea_m.stea034, 
       g_stea_m.stea035,g_stea_m.stea036,g_stea_m.stea037,g_stea_m.stea038,g_stea_m.stea039,g_stea_m.stea040, 
       g_stea_m.stea028,g_stea_m.stea017,g_stea_m.stea021,g_stea_m.stea024,g_stea_m.stea018,g_stea_m.stea049, 
       g_stea_m.stea025,g_stea_m.stea019,g_stea_m.stea022,g_stea_m.stea026,g_stea_m.stea020,g_stea_m.stea023, 
       g_stea_m.stea027,g_stea_m.stea031,g_stea_m.stea042,g_stea_m.steaownid,g_stea_m.steaowndp,g_stea_m.steacrtid, 
       g_stea_m.steacrtdp,g_stea_m.steacrtdt,g_stea_m.steamodid,g_stea_m.steamoddt,g_stea_m.steacnfid, 
       g_stea_m.steacnfdt,g_stea_m.steasite_desc,g_stea_m.steaunit_desc,g_stea_m.stea006_desc,g_stea_m.stea047_desc, 
       g_stea_m.stea048_desc,g_stea_m.stea044_desc,g_stea_m.stea010_desc,g_stea_m.stea011_desc,g_stea_m.stea012_desc, 
       g_stea_m.stea013_desc,g_stea_m.stea014_desc,g_stea_m.stea015_desc,g_stea_m.stea045_desc,g_stea_m.stea032_desc, 
       g_stea_m.stea035_desc,g_stea_m.stea036_desc,g_stea_m.stea037_desc,g_stea_m.stea038_desc,g_stea_m.steaownid_desc, 
       g_stea_m.steaowndp_desc,g_stea_m.steacrtid_desc,g_stea_m.steacrtdp_desc,g_stea_m.steamodid_desc, 
       g_stea_m.steacnfid_desc
   CALL astt401_stea_t_mask()
   CALL astt401_show()
      
END FUNCTION
]]>
  </section>
  <section id="astt401.unlock_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION astt401_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define(客製用)
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point  
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astt401_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astt401_bcl2
   END IF
 
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astt401_bcl3
   END IF
 
   LET ls_group = "'4',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astt401_bcl4
   END IF
 
   LET ls_group = "'5',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astt401_bcl5
   END IF
 
   LET ls_group = "'6',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astt401_bcl6
   END IF
 
   LET ls_group = "'7',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astt401_bcl7
   END IF
 
 
   
   LET ls_group = "'8',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astt401_bcl8
   END IF
 
   LET ls_group = "'9',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astt401_bcl9
   END IF
 
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="astt401.update_b" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION astt401_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define" edit="s"/>}
   #end add-point   
   #add-point:update_b段define(客製用)
   {<point name="update_b.define_customerization" edit="c"/>}
   #end add-point   
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "steb_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL astt401_steb_t_mask_restore('restore_mask_o')
               
      UPDATE steb_t 
         SET (stebdocno,
              stebseq
              ,steb001,steb002,steb003,steb004,steb005,steb006,steb007,steb008,steb009,steb010,steb011,steb012,steb013,steb014,steb015,steb016,steb017,stebsite,stebunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_steb_d[g_detail_idx].steb001,g_steb_d[g_detail_idx].steb002,g_steb_d[g_detail_idx].steb003, 
                  g_steb_d[g_detail_idx].steb004,g_steb_d[g_detail_idx].steb005,g_steb_d[g_detail_idx].steb006, 
                  g_steb_d[g_detail_idx].steb007,g_steb_d[g_detail_idx].steb008,g_steb_d[g_detail_idx].steb009, 
                  g_steb_d[g_detail_idx].steb010,g_steb_d[g_detail_idx].steb011,g_steb_d[g_detail_idx].steb012, 
                  g_steb_d[g_detail_idx].steb013,g_steb_d[g_detail_idx].steb014,g_steb_d[g_detail_idx].steb015, 
                  g_steb_d[g_detail_idx].steb016,g_steb_d[g_detail_idx].steb017,g_steb_d[g_detail_idx].stebsite, 
                  g_steb_d[g_detail_idx].stebunit) 
         WHERE stebent = g_enterprise AND stebdocno = ps_keys_bak[1] AND stebseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "steb_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "steb_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astt401_steb_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stec_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL astt401_stec_t_mask_restore('restore_mask_o')
               
      UPDATE stec_t 
         SET (stecdocno,
              stecseq
              ,stec001,stec002,stec003,stec024,stec025,stec004,stec005,stec006,stec007,stec008,stec009,stec010,stec011,stec012,stec013,stec014,stec015,stec016,stec017,stec018,stec019,stec020,stec021,stec022,stec023,stecsite,stecunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_steb2_d[g_detail_idx].stec001,g_steb2_d[g_detail_idx].stec002,g_steb2_d[g_detail_idx].stec003, 
                  g_steb2_d[g_detail_idx].stec024,g_steb2_d[g_detail_idx].stec025,g_steb2_d[g_detail_idx].stec004, 
                  g_steb2_d[g_detail_idx].stec005,g_steb2_d[g_detail_idx].stec006,g_steb2_d[g_detail_idx].stec007, 
                  g_steb2_d[g_detail_idx].stec008,g_steb2_d[g_detail_idx].stec009,g_steb2_d[g_detail_idx].stec010, 
                  g_steb2_d[g_detail_idx].stec011,g_steb2_d[g_detail_idx].stec012,g_steb2_d[g_detail_idx].stec013, 
                  g_steb2_d[g_detail_idx].stec014,g_steb2_d[g_detail_idx].stec015,g_steb2_d[g_detail_idx].stec016, 
                  g_steb2_d[g_detail_idx].stec017,g_steb2_d[g_detail_idx].stec018,g_steb2_d[g_detail_idx].stec019, 
                  g_steb2_d[g_detail_idx].stec020,g_steb2_d[g_detail_idx].stec021,g_steb2_d[g_detail_idx].stec022, 
                  g_steb2_d[g_detail_idx].stec023,g_steb2_d[g_detail_idx].stecsite,g_steb2_d[g_detail_idx].stecunit)  

         WHERE stecent = g_enterprise AND stecdocno = ps_keys_bak[1] AND stecseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stec_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stec_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astt401_stec_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stee_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update3" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL astt401_stee_t_mask_restore('restore_mask_o')
               
      UPDATE stee_t 
         SET (steedocno,
              steeseq,stee002
              ,stee001,stee003,stee004,stee005,stee006,stee007,stee008,stee009,stee010,stee011,steesite,steeunit) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_steb3_d[g_detail_idx].stee001,g_steb3_d[g_detail_idx].stee003,g_steb3_d[g_detail_idx].stee004, 
                  g_steb3_d[g_detail_idx].stee005,g_steb3_d[g_detail_idx].stee006,g_steb3_d[g_detail_idx].stee007, 
                  g_steb3_d[g_detail_idx].stee008,g_steb3_d[g_detail_idx].stee009,g_steb3_d[g_detail_idx].stee010, 
                  g_steb3_d[g_detail_idx].stee011,g_steb3_d[g_detail_idx].steesite,g_steb3_d[g_detail_idx].steeunit)  

         WHERE steeent = g_enterprise AND steedocno = ps_keys_bak[1] AND steeseq = ps_keys_bak[2] AND stee002 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update3"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stee_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stee_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astt401_stee_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update3"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "steg_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update4" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL astt401_steg_t_mask_restore('restore_mask_o')
               
      UPDATE steg_t 
         SET (stegdocno,
              stegseq
              ,steg001,steg003,steg002,steg004,steg005,stegacti,stegsite,stegunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_steb4_d[g_detail_idx].steg001,g_steb4_d[g_detail_idx].steg003,g_steb4_d[g_detail_idx].steg002, 
                  g_steb4_d[g_detail_idx].steg004,g_steb4_d[g_detail_idx].steg005,g_steb4_d[g_detail_idx].stegacti, 
                  g_steb4_d[g_detail_idx].stegsite,g_steb4_d[g_detail_idx].stegunit) 
         WHERE stegent = g_enterprise AND stegdocno = ps_keys_bak[1] AND stegseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update4"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "steg_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "steg_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astt401_steg_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update4"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "steh_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update5" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL astt401_steh_t_mask_restore('restore_mask_o')
               
      UPDATE steh_t 
         SET (stehdocno,
              stehseq
              ,steh001,steh002,steh003,stehacti,stehsite,stehunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_steb5_d[g_detail_idx].steh001,g_steb5_d[g_detail_idx].steh002,g_steb5_d[g_detail_idx].steh003, 
                  g_steb5_d[g_detail_idx].stehacti,g_steb5_d[g_detail_idx].stehsite,g_steb5_d[g_detail_idx].stehunit)  

         WHERE stehent = g_enterprise AND stehdocno = ps_keys_bak[1] AND stehseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update5"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "steh_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "steh_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astt401_steh_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update5"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'6',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stei_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update6" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL astt401_stei_t_mask_restore('restore_mask_o')
               
      UPDATE stei_t 
         SET (steidocno,
              steiseq
              ,stei001,stei002,stei003,stei005,stei006,stei004,stei010,stei007,stei008,stei009,steiacti,steisite,steiunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_steb6_d[g_detail_idx].stei001,g_steb6_d[g_detail_idx].stei002,g_steb6_d[g_detail_idx].stei003, 
                  g_steb6_d[g_detail_idx].stei005,g_steb6_d[g_detail_idx].stei006,g_steb6_d[g_detail_idx].stei004, 
                  g_steb6_d[g_detail_idx].stei010,g_steb6_d[g_detail_idx].stei007,g_steb6_d[g_detail_idx].stei008, 
                  g_steb6_d[g_detail_idx].stei009,g_steb6_d[g_detail_idx].steiacti,g_steb6_d[g_detail_idx].steisite, 
                  g_steb6_d[g_detail_idx].steiunit) 
         WHERE steient = g_enterprise AND steidocno = ps_keys_bak[1] AND steiseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update6"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stei_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stei_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astt401_stei_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update6"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'7',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stej_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update7" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL astt401_stej_t_mask_restore('restore_mask_o')
               
      UPDATE stej_t 
         SET (stejdocno,
              stejseq
              ,stej001,stej002,stej003,stej004,stej005,stej006,stejsite,stejunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_steb7_d[g_detail_idx].stej001,g_steb7_d[g_detail_idx].stej002,g_steb7_d[g_detail_idx].stej003, 
                  g_steb7_d[g_detail_idx].stej004,g_steb7_d[g_detail_idx].stej005,g_steb7_d[g_detail_idx].stej006, 
                  g_steb7_d[g_detail_idx].stejsite,g_steb7_d[g_detail_idx].stejunit) 
         WHERE stejent = g_enterprise AND stejdocno = ps_keys_bak[1] AND stejseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update7"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stej_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stej_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astt401_stej_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update7"/>}
      #end add-point  
   END IF
 
 
   
   LET ls_group = "'8',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "sted_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update8" mark="Y"/>}
      #end add-point
      
      #將遮罩欄位還原
      CALL astt401_sted_t_mask_restore('restore_mask_o')
               
      UPDATE sted_t 
         SET (steddocno,stedseq,
              stedseq1
              ,sted001,sted002,sted003,sted004,sted005,sted006,sted007,sted008,stedsite,stedunit) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_steb8_d[g_detail_idx2].sted001,g_steb8_d[g_detail_idx2].sted002,g_steb8_d[g_detail_idx2].sted003, 
                  g_steb8_d[g_detail_idx2].sted004,g_steb8_d[g_detail_idx2].sted005,g_steb8_d[g_detail_idx2].sted006, 
                  g_steb8_d[g_detail_idx2].sted007,g_steb8_d[g_detail_idx2].sted008,g_steb8_d[g_detail_idx2].stedsite, 
                  g_steb8_d[g_detail_idx2].stedunit) 
         WHERE stedent = g_enterprise AND steddocno = ps_keys_bak[1] AND stedseq = ps_keys_bak[2] AND stedseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update8"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "sted_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "sted_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astt401_sted_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update8"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'9',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stef_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update9" mark="Y"/>}
      #end add-point
      
      #將遮罩欄位還原
      CALL astt401_stef_t_mask_restore('restore_mask_o')
               
      UPDATE stef_t 
         SET (stefdocno,stefseq,stef002,
              stef003
              ,stef001,stef004,stef005,stef006,stef007,stef008,stef009,stefsite,stefunit) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
              ,g_steb9_d[g_detail_idx2].stef001,g_steb9_d[g_detail_idx2].stef004,g_steb9_d[g_detail_idx2].stef005, 
                  g_steb9_d[g_detail_idx2].stef006,g_steb9_d[g_detail_idx2].stef007,g_steb9_d[g_detail_idx2].stef008, 
                  g_steb9_d[g_detail_idx2].stef009,g_steb9_d[g_detail_idx2].stefsite,g_steb9_d[g_detail_idx2].stefunit)  

         WHERE stefent = g_enterprise AND stefdocno = ps_keys_bak[1] AND stefseq = ps_keys_bak[2] AND stef002 = ps_keys_bak[3] AND stef003 = ps_keys_bak[4]
      #add-point:update_b段修改中
      {<point name="update_b.m_update9"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stef_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stef_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astt401_stef_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update9"/>}
      #end add-point  
   END IF
 
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
