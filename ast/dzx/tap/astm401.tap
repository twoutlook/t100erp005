<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="astm401" std_prog="astm401" erpver="1.0" module="AST" ver="1" env="s" zone="t10prd" booking="Y" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
    <start_arg value="" status=""/>
  </other>
  <point name="function.astm401_stfa033_ref" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astm401_stfa033_ref()
   SELECT oodbl004 INTO g_stfa_m.stfa033_desc
    FROM oodbl_t,ooef_t
   WHERE oodblent = g_enterprise
    AND oodbl001 = ooef019 
    AND oodbl002 = g_stfa_m.stfa033
    AND oodbl003 = g_dlang
    AND ooefent = g_enterprise
    AND ooef001 = g_stfa_m.stfasite  
   DISPLAY BY NAME g_stfa_m.stfa033_desc
END FUNCTION]]>
  </point>
  <point name="function.astm401_stfa034_ref" order="2" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astm401_stfa034_ref()
   SELECT oodbl004 INTO g_stfa_m.stfa034_desc
    FROM oodbl_t,ooef_t
   WHERE oodblent = g_enterprise
    AND oodbl001 = ooef019 
    AND oodbl002 = g_stfa_m.stfa034
    AND oodbl003 = g_dlang
    AND ooefent = g_enterprise
    AND ooef001 = g_stfa_m.stfasite  
   DISPLAY BY NAME g_stfa_m.stfa034_desc
END FUNCTION]]>
  </point>
  <point name="function.astm401_stfc006_ref" order="3" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astm401_stfc006_ref()
  SELECT oodbl004 INTO g_stfb2_d[l_ac].stfc006_desc
    FROM oodbl_t,ooef_t
   WHERE oodblent = g_enterprise
    AND oodbl001 = ooef019 
    AND oodbl002 = g_stfb2_d[l_ac].stfc006
    AND oodbl003 = g_dlang
    AND ooefent = g_enterprise
    AND ooef001 = g_stfa_m.stfasite  
   DISPLAY BY NAME g_stfb2_d[l_ac].stfc006_desc
END FUNCTION]]>
  </point>
  <point name="function.astm401_stfc007_ref" order="4" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astm401_stfc007_ref()
  SELECT oodbl004 INTO g_stfb2_d[l_ac].stfc007_desc
    FROM oodbl_t,ooef_t
   WHERE oodblent = g_enterprise
    AND oodbl001 = ooef019 
    AND oodbl002 = g_stfb2_d[l_ac].stfc007
    AND oodbl003 = g_dlang
    AND ooefent = g_enterprise
    AND ooef001 = g_stfa_m.stfasite  
   DISPLAY BY NAME g_stfb2_d[l_ac].stfc007_desc
END FUNCTION]]>
  </point>
  <point name="function.astm401_stfg003_ref" order="5" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astm401_stfg003_ref()
   SELECT mhacl005 INTO  g_stfb4_d[l_ac].stfg003_desc FROM mhacl_t
    WHERE mhaclent = g_enterprise AND mhacl001 = g_stfa_m.stfa047
      AND mhacl002 =  g_stfa_m.stfa048 AND mhacl003 = g_stfb4_d[l_ac].stfg003 
      AND mhacl004 = g_dlang
 
   DISPLAY BY NAME g_stfb4_d[l_ac].stfg003_desc  
END FUNCTION]]>
  </point>
  <point name="function.astm401_stfg002_ref" order="6" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astm401_stfg002_ref()
   SELECT mhadl006 INTO  g_stfb4_d[l_ac].stfg002_desc FROM mhadl_t
   WHERE mhadlent = g_enterprise AND mhadl001 = g_stfa_m.stfa047
     AND mhadl002 = g_stfa_m.stfa048 AND mhadl003 = g_stfb4_d[l_ac].stfg003 
     AND mhadl004 = g_stfb4_d[l_ac].stfg002 AND mhadl005 = g_dlang
   
   DISPLAY BY NAME g_stfb4_d[l_ac].stfg002_desc
END FUNCTION]]>
  </point>
  <point name="b_fill2.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         CALL astm401_stfc006_ref()
         CALL astm401_stfc007_ref()]]>
  </point>
  <point name="b_fill4.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         CALL astm401_stfg003_ref()
         CALL astm401_stfg002_ref()]]>
  </point>
  <point name="construct.c.page1.stfb002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stae001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfb002  #顯示到畫面上
            NEXT FIELD stfb002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.stfb008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stab001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfb008  #顯示到畫面上
            NEXT FIELD stfb008                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.stfb009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stab001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfb009  #顯示到畫面上
            NEXT FIELD stfb009                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.stfc002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_inay001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfc002  #顯示到畫面上
            NEXT FIELD stfc002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.stfc004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_rtax001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfc004  #顯示到畫面上
            NEXT FIELD stfc004                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.stfc005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002_2002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfc005  #顯示到畫面上
            NEXT FIELD stfc005                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.stfc006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_oodb002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfc006  #顯示到畫面上
            NEXT FIELD stfc006                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.stfc007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_oodb002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfc007  #顯示到畫面上
            NEXT FIELD stfc007                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.stfc009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stae001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfc009  #顯示到畫面上
            NEXT FIELD stfc009                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.stfc015" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stab001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfc015  #顯示到畫面上
            NEXT FIELD stfc015                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.stfc016" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stab001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfc016  #顯示到畫面上
            NEXT FIELD stfc016                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page3.stfe003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stae001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfe003  #顯示到畫面上
            NEXT FIELD stfe003                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page4.stfg002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_mhad001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfg002  #顯示到畫面上
            NEXT FIELD stfg002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page4.stfg003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_mhac003()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfg003  #顯示到畫面上
            NEXT FIELD stfg003                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page6.stfi003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stae001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfi003  #顯示到畫面上
            NEXT FIELD stfi003                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page6.stfi010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "2132"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfi010  #顯示到畫面上
            NEXT FIELD stfi010                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page8.stfd003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_inay001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfd003  #顯示到畫面上
            NEXT FIELD stfd003                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page8.stfd004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "2024"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfd004  #顯示到畫面上
            NEXT FIELD stfd004                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page9.stff005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_inay001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stff005  #顯示到畫面上
            NEXT FIELD stff005                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stfa001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stfa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa001  #顯示到畫面上
            NEXT FIELD stfa001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stfa005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_mhae001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa005  #顯示到畫面上
            NEXT FIELD stfa005                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stfa006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002_2126()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa006  #顯示到畫面上
            NEXT FIELD stfa006                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stfa010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa010  #顯示到畫面上
            NEXT FIELD stfa010                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stfa011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_rtax001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa011  #顯示到畫面上
            NEXT FIELD stfa011                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stfa012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002_2002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa012  #顯示到畫面上
            NEXT FIELD stfa012                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stfa013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa013  #顯示到畫面上
            NEXT FIELD stfa013                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stfa014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa014  #顯示到畫面上
            NEXT FIELD stfa014                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stfa015" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa015  #顯示到畫面上
            NEXT FIELD stfa015                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stfa032" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_aooi001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa032  #顯示到畫面上
            NEXT FIELD stfa032                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stfa033" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_oodb002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa033  #顯示到畫面上
            NEXT FIELD stfa033                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stfa034" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_oodb002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa034  #顯示到畫面上
            NEXT FIELD stfa034                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stfa035" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooib002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa035  #顯示到畫面上
            NEXT FIELD stfa035                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stfa036" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_staa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa036  #顯示到畫面上
            NEXT FIELD stfa036                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stfa037" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "2060"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa037  #顯示到畫面上
            NEXT FIELD stfa037                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stfa038" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001_23()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa038  #顯示到畫面上
            NEXT FIELD stfa038                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stfa044" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa044  #顯示到畫面上
            NEXT FIELD stfa044                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stfa045" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002_2127()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa045  #顯示到畫面上
            NEXT FIELD stfa045                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stfa047" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_mhaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa047  #顯示到畫面上
            NEXT FIELD stfa047                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stfa048" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_mhab002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa048  #顯示到畫面上
            NEXT FIELD stfa048                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stfacnfid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfacnfid  #顯示到畫面上
            NEXT FIELD stfacnfid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stfacrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfacrtdp  #顯示到畫面上
            NEXT FIELD stfacrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stfacrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfacrtid  #顯示到畫面上
            NEXT FIELD stfacrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stfamodid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfamodid  #顯示到畫面上
            NEXT FIELD stfamodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stfaowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfaowndp  #顯示到畫面上
            NEXT FIELD stfaowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stfaownid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfaownid  #顯示到畫面上
            NEXT FIELD stfaownid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stfasite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001_24()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfasite  #顯示到畫面上
            NEXT FIELD stfasite                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.stfaunit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001_24()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfaunit  #顯示到畫面上
            NEXT FIELD stfaunit                     #返回原欄位
    

]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[    CALL cl_set_combo_scc_part('stfa003','6013','4')
   CALL cl_set_combo_scc_part('b_stfa003','6013','4')
   CALL cl_set_combo_scc('b_stfa004','6785')
   CALL cl_set_combo_scc('b_stfa046','6201') 
   CALL cl_set_combo_scc('b_stfa029','6202') 
   CALL cl_set_combo_scc('b_stfa030','6786') 
   CALL cl_set_combo_scc('b_stfa031','36')]]>
  </point>
  <point name="input.a.page1.stfb002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfb_d[l_ac].stfb002
            CALL ap_ref_array2(g_ref_fields,"SELECT stael003 FROM stael_t WHERE staelent='"||g_enterprise||"' AND stael001=? AND stael002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfb_d[l_ac].stfb002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfb_d[l_ac].stfb002_desc

]]>
  </point>
  <point name="input.a.page1.stfb008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfb_d[l_ac].stfb008
            CALL ap_ref_array2(g_ref_fields,"SELECT stabl003 FROM stabl_t WHERE stablent='"||g_enterprise||"' AND stabl001=? AND stabl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfb_d[l_ac].stfb008_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfb_d[l_ac].stfb008_desc

]]>
  </point>
  <point name="input.a.page1.stfb009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfb_d[l_ac].stfb009
            CALL ap_ref_array2(g_ref_fields,"SELECT stabl003 FROM stabl_t WHERE stablent='"||g_enterprise||"' AND stabl001=? AND stabl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfb_d[l_ac].stfb009_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfb_d[l_ac].stfb009_desc

]]>
  </point>
  <point name="input.a.page1.stfbseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stfa_m.stfa001 IS NOT NULL AND g_stfb_d[g_detail_idx].stfbseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stfa_m.stfa001 != g_stfa001_t OR g_stfb_d[g_detail_idx].stfbseq != g_stfb_d_t.stfbseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stfb_t WHERE "||"stfbent = '" ||g_enterprise|| "' AND "||"stfb001 = '"||g_stfa_m.stfa001 ||"' AND "|| "stfbseq = '"||g_stfb_d[g_detail_idx].stfbseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.stfc004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfb2_d[l_ac].stfc004
            CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfb2_d[l_ac].stfc004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfb2_d[l_ac].stfc004_desc

]]>
  </point>
  <point name="input.a.page2.stfc005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfb2_d[l_ac].stfc005
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2002' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfb2_d[l_ac].stfc005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfb2_d[l_ac].stfc005_desc

]]>
  </point>
  <point name="input.a.page2.stfc006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
]]>
  </point>
  <point name="input.a.page2.stfc007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
]]>
  </point>
  <point name="input.a.page2.stfc009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfb2_d[l_ac].stfc009
            CALL ap_ref_array2(g_ref_fields,"SELECT stael003 FROM stael_t WHERE staelent='"||g_enterprise||"' AND stael001=? AND stael002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfb2_d[l_ac].stfc009_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfb2_d[l_ac].stfc009_desc

]]>
  </point>
  <point name="input.a.page2.stfc015" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfb2_d[l_ac].stfc015
            CALL ap_ref_array2(g_ref_fields,"SELECT stabl003 FROM stabl_t WHERE stablent='"||g_enterprise||"' AND stabl001=? AND stabl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfb2_d[l_ac].stfc015_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfb2_d[l_ac].stfc015_desc

]]>
  </point>
  <point name="input.a.page2.stfc016" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfb2_d[l_ac].stfc016
            CALL ap_ref_array2(g_ref_fields,"SELECT stabl003 FROM stabl_t WHERE stablent='"||g_enterprise||"' AND stabl001=? AND stabl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfb2_d[l_ac].stfc016_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfb2_d[l_ac].stfc016_desc

]]>
  </point>
  <point name="input.a.page2.stfcseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stfa_m.stfa001 IS NOT NULL AND g_stfb2_d[g_detail_idx].stfcseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stfa_m.stfa001 != g_stfa001_t OR g_stfb2_d[g_detail_idx].stfcseq != g_stfb2_d_t.stfcseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stfc_t WHERE "||"stfcent = '" ||g_enterprise|| "' AND "||"stfc001 = '"||g_stfa_m.stfa001 ||"' AND "|| "stfcseq = '"||g_stfb2_d[g_detail_idx].stfcseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page3.stfe002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stfa_m.stfa001 IS NOT NULL AND g_stfb3_d[g_detail_idx].stfeseq IS NOT NULL AND g_stfb3_d[g_detail_idx].stfe002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stfa_m.stfa001 != g_stfa001_t OR g_stfb3_d[g_detail_idx].stfeseq != g_stfb3_d_t.stfeseq OR g_stfb3_d[g_detail_idx].stfe002 != g_stfb3_d_t.stfe002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stfe_t WHERE "||"stfeent = '" ||g_enterprise|| "' AND "||"stfe001 = '"||g_stfa_m.stfa001 ||"' AND "|| "stfeseq = '"||g_stfb3_d[g_detail_idx].stfeseq ||"' AND "|| "stfe002 = '"||g_stfb3_d[g_detail_idx].stfe002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page3.stfe003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfb3_d[l_ac].stfe003
            CALL ap_ref_array2(g_ref_fields,"SELECT stael003 FROM stael_t WHERE staelent='"||g_enterprise||"' AND stael001=? AND stael002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfb3_d[l_ac].stfe003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfb3_d[l_ac].stfe003_desc

]]>
  </point>
  <point name="input.a.page3.stfeseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stfa_m.stfa001 IS NOT NULL AND g_stfb3_d[g_detail_idx].stfeseq IS NOT NULL AND g_stfb3_d[g_detail_idx].stfe002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stfa_m.stfa001 != g_stfa001_t OR g_stfb3_d[g_detail_idx].stfeseq != g_stfb3_d_t.stfeseq OR g_stfb3_d[g_detail_idx].stfe002 != g_stfb3_d_t.stfe002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stfe_t WHERE "||"stfeent = '" ||g_enterprise|| "' AND "||"stfe001 = '"||g_stfa_m.stfa001 ||"' AND "|| "stfeseq = '"||g_stfb3_d[g_detail_idx].stfeseq ||"' AND "|| "stfe002 = '"||g_stfb3_d[g_detail_idx].stfe002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page4.stfg002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
]]>
  </point>
  <point name="input.a.page4.stfg003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
]]>
  </point>
  <point name="input.a.page4.stfgseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stfa_m.stfa001 IS NOT NULL AND g_stfb4_d[g_detail_idx].stfgseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stfa_m.stfa001 != g_stfa001_t OR g_stfb4_d[g_detail_idx].stfgseq != g_stfb4_d_t.stfgseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stfg_t WHERE "||"stfgent = '" ||g_enterprise|| "' AND "||"stfg001 = '"||g_stfa_m.stfa001 ||"' AND "|| "stfgseq = '"||g_stfb4_d[g_detail_idx].stfgseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page5.stfhseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stfa_m.stfa001 IS NOT NULL AND g_stfb5_d[g_detail_idx].stfhseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stfa_m.stfa001 != g_stfa001_t OR g_stfb5_d[g_detail_idx].stfhseq != g_stfb5_d_t.stfhseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stfh_t WHERE "||"stfhent = '" ||g_enterprise|| "' AND "||"stfh001 = '"||g_stfa_m.stfa001 ||"' AND "|| "stfhseq = '"||g_stfb5_d[g_detail_idx].stfhseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page6.stfi003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfb6_d[l_ac].stfi003
            CALL ap_ref_array2(g_ref_fields,"SELECT stael003 FROM stael_t WHERE staelent='"||g_enterprise||"' AND stael001=? AND stael002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfb6_d[l_ac].stfi003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfb6_d[l_ac].stfi003_desc

]]>
  </point>
  <point name="input.a.page6.stfi010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfb6_d[l_ac].stfi010
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2132' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfb6_d[l_ac].stfi010_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfb6_d[l_ac].stfi010_desc

]]>
  </point>
  <point name="input.a.page6.stfiseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stfa_m.stfa001 IS NOT NULL AND g_stfb6_d[g_detail_idx].stfiseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stfa_m.stfa001 != g_stfa001_t OR g_stfb6_d[g_detail_idx].stfiseq != g_stfb6_d_t.stfiseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stfi_t WHERE "||"stfient = '" ||g_enterprise|| "' AND "||"stfi001 = '"||g_stfa_m.stfa001 ||"' AND "|| "stfiseq = '"||g_stfb6_d[g_detail_idx].stfiseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page7.stfjseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stfa_m.stfa001 IS NOT NULL AND g_stfb7_d[g_detail_idx].stfjseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stfa_m.stfa001 != g_stfa001_t OR g_stfb7_d[g_detail_idx].stfjseq != g_stfb7_d_t.stfjseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stfj_t WHERE "||"stfjent = '" ||g_enterprise|| "' AND "||"stfj001 = '"||g_stfa_m.stfa001 ||"' AND "|| "stfjseq = '"||g_stfb7_d[g_detail_idx].stfjseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page8.stfd003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
]]>
  </point>
  <point name="input.a.page8.stfd004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfb8_d[l_ac].stfd004
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2024' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfb8_d[l_ac].stfd004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfb8_d[l_ac].stfd004_desc

]]>
  </point>
  <point name="input.a.page8.stfdseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stfa_m.stfa001 IS NOT NULL AND g_stfb2_d[g_detail_idx].stfcseq IS NOT NULL AND g_stfb8_d[g_detail_idx2].stfdseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stfa_m.stfa001 != g_stfa001_t OR g_stfb2_d[g_detail_idx].stfcseq != g_stfb2_d[g_detail_idx].stfcseq OR g_stfb8_d[g_detail_idx2].stfdseq != g_stfb8_d_t.stfdseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stfd_t WHERE "||"stfdent = '" ||g_enterprise|| "' AND "||"stfd001 = '"||g_stfa_m.stfa001 ||"' AND "|| "stfd003 = '"||g_stfb2_d[g_detail_idx].stfcseq ||"' AND "|| "stfdseq = '"||g_stfb8_d[g_detail_idx2].stfdseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page8.stfdseq1" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stfa_m.stfa001 IS NOT NULL AND g_stfb2_d[g_detail_idx].stfcseq IS NOT NULL  AND g_stfb8_d[g_detail_idx2].stfdseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stfa_m.stfa001 != g_stfa001_t OR g_stfb2_d[g_detail_idx].stfcseq != g_stfb2_d[g_detail_idx].stfcseq  OR g_stfb8_d[g_detail_idx2].stfdseq1 != g_stfb8_d_t.stfdseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stfd_t WHERE "||"stfdent = '" ||g_enterprise|| "' AND "||"stfd001 = '"||g_stfa_m.stfa001 ||"' AND "|| "stfdseq = '"||g_stfb2_d[g_detail_idx].stfcseq ||"' AND "|| "stfdseq1 = '"||g_stfb8_d[g_detail_idx2].stfdseq1 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page9.stff003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stfa_m.stfa001 IS NOT NULL AND g_stfb3_d[g_detail_idx].stfeseq IS NOT NULL AND g_stfb3_d[g_detail_idx].stfe002 IS NOT NULL AND g_stfb9_d[g_detail_idx2].stff003 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stfa_m.stfa001 != g_stfa001_t OR g_stfb3_d[g_detail_idx].stfeseq != g_stfb3_d[g_detail_idx].stfeseq OR g_stfb3_d[g_detail_idx].stfe002 != g_stfb3_d[g_detail_idx].stfe002 OR g_stfb9_d[g_detail_idx2].stff003 != g_stfb9_d_t.stff003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stff_t WHERE "||"stffent = '" ||g_enterprise|| "' AND "||"stffseq = '"||g_stfa_m.stfa001 ||"' AND "|| "stff001 = '"||g_stfb3_d[g_detail_idx].stfeseq ||"' AND "|| "stff002 = '"||g_stfb3_d[g_detail_idx].stfe002 ||"' AND "|| "stff003 = '"||g_stfb9_d[g_detail_idx2].stff003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page9.stff005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfb9_d[l_ac].stff005
            CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfb9_d[l_ac].stff005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfb9_d[l_ac].stff005_desc

]]>
  </point>
  <point name="input.a.stfa001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_stfa_m.stfa001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_stfa_m.stfa001 != g_stfa001_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stfa_t WHERE "||"stfaent = '" ||g_enterprise|| "' AND "||"stfa001 = '"||g_stfa_m.stfa001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
  </point>
  <point name="input.a.stfa006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2126'stfa006 AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa006_desc

]]>
  </point>
  <point name="input.a.stfa010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfa010
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa010_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa010_desc

]]>
  </point>
  <point name="input.a.stfa011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfa011
            CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa011_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa011_desc

]]>
  </point>
  <point name="input.a.stfa012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfa012
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2002' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa012_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa012_desc

]]>
  </point>
  <point name="input.a.stfa013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfa013
            CALL ap_ref_array2(g_ref_fields,"SELECT stagl003 FROM stagl_t WHERE staglent='"||g_enterprise||"' AND stagl001=? AND stagl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa013_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa013_desc

]]>
  </point>
  <point name="input.a.stfa014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfa014
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa014_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa014_desc

]]>
  </point>
  <point name="input.a.stfa015" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfa015
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa015_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa015_desc

]]>
  </point>
  <point name="input.a.stfa032" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfa032
            CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa032_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa032_desc

]]>
  </point>
  <point name="input.a.stfa033" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfa033
            CALL ap_ref_array2(g_ref_fields,"SELECT oodbl004 FROM oodbl_t WHERE oodblent='"||g_enterprise||"' AND oodbl002=? AND oodbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa033_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa033_desc

]]>
  </point>
  <point name="input.a.stfa034" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfa034
            CALL ap_ref_array2(g_ref_fields,"SELECT oodbl004 FROM oodbl_t WHERE oodblent='"||g_enterprise||"' AND oodbl002=? AND oodbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa034_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa034_desc

]]>
  </point>
  <point name="input.a.stfa035" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfa035
            CALL ap_ref_array2(g_ref_fields,"SELECT ooibl004 FROM ooibl_t WHERE ooiblent='"||g_enterprise||"' AND ooibl002=? AND ooibl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa035_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa035_desc

]]>
  </point>
  <point name="input.a.stfa036" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfa036
            CALL ap_ref_array2(g_ref_fields,"SELECT staal003 FROM staal_t WHERE staalent='"||g_enterprise||"' AND staal001=? AND staal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa036_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa036_desc

]]>
  </point>
  <point name="input.a.stfa037" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfa037
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2060' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa037_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa037_desc

]]>
  </point>
  <point name="input.a.stfa038" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfa038
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa038_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa038_desc

]]>
  </point>
  <point name="input.a.stfa044" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfa044
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa044_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa044_desc

]]>
  </point>
  <point name="input.a.stfa045" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfa045
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2127' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa045_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa045_desc

]]>
  </point>
  <point name="input.a.stfa047" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfa047
            CALL ap_ref_array2(g_ref_fields,"SELECT mhaal003 FROM mhaal_t WHERE mhaalent='"||g_enterprise||"' AND mhaal001=? AND mhaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa047_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa047_desc

]]>
  </point>
  <point name="input.a.stfa048" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfa047
            LET g_ref_fields[2] = g_stfa_m.stfa048
            CALL ap_ref_array2(g_ref_fields,"SELECT mhabl004 FROM mhabl_t WHERE mhablent='"||g_enterprise||"' AND mhabl001=? AND mhabl002=? AND mhabl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa048_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa048_desc

]]>
  </point>
  <point name="input.a.stfasite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfasite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfasite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfasite_desc

]]>
  </point>
  <point name="input.a.stfaunit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfaunit
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfaunit_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfaunit_desc

]]>
  </point>
  <point name="show.body2.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL astm401_stfc006_ref()
      CALL astm401_stfc007_ref()]]>
  </point>
  <point name="show.body4.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL astm401_stfg003_ref()
      CALL astm401_stfg002_ref() ]]>
  </point>
  <point name="show.head.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stfa_m.stfa001
   CALL ap_ref_array2(g_ref_fields," SELECT stfal003,stfal004 FROM stfal_t WHERE stfalent = '"||g_enterprise||"' AND stfal001 = ? AND stfal002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_stfa_m.stfal003 = g_rtn_fields[1] 
   LET g_stfa_m.stfal004 = g_rtn_fields[2] 
   DISPLAY g_stfa_m.stfal003,g_stfa_m.stfal004 TO stfal003,stfal004
   
   CALL astm401_stfa033_ref()
   CALL astm401_stfa034_ref()
   
   SELECT stfj004 INTO g_stfa_m.next_b FROM ( SELECT * FROM stfj_t
   WHERE stfjent = g_enterprise AND  stfj001 = g_stfa_m.stfa001 AND stfj005= 'N' ORDER BY stfjseq) WHERE rownum = 1
 
   DISPLAY g_stfa_m.next_b TO next_b]]>
  </point>
  <section id="astm401.action_chk" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION astm401_action_chk()
   #add-point:action_chk段define
   {<point name="action_chk.define" edit="s"/>}
   #end add-point
   #add-point:action_chk段define(客製用)
   {<point name="action_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:action_chk段action_chk
   {<point name="action_chk.action_chk"/>}
   #end add-point
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="astm401.b_fill" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION astm401_b_fill()
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define
   {<point name="b_fill.define" edit="s"/>}
   #end add-point     
   #add-point:b_fill段define(客製用)
   {<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point     
 
   CALL g_stfb_d.clear()    #g_stfb_d 單頭及單身 
   CALL g_stfb2_d.clear()
   CALL g_stfb3_d.clear()
   CALL g_stfb4_d.clear()
   CALL g_stfb5_d.clear()
   CALL g_stfb6_d.clear()
   CALL g_stfb7_d.clear()
   CALL g_stfb8_d.clear()
   CALL g_stfb9_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF astm401_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE stfbseq,stfb002,stfb003,stfb004,stfb005,stfb006,stfb007,stfb008, 
             stfb009,stfb010,stfb011,stfb012,stfb013,stfb014,stfb015,stfb016,stfb017,stfbsite,stfbunit , 
             t1.stael003 ,t2.stabl003 ,t3.stabl003 FROM stfb_t",   
                     " INNER JOIN stfa_t ON stfa001 = stfb001 ",
 
                     #"",
                     
                     "",
                                    " LEFT JOIN stael_t t1 ON t1.staelent='"||g_enterprise||"' AND t1.stael001=stfb002 AND t1.stael002='"||g_dlang||"' ",
               " LEFT JOIN stabl_t t2 ON t2.stablent='"||g_enterprise||"' AND t2.stabl001=stfb008 AND t2.stabl002='"||g_dlang||"' ",
               " LEFT JOIN stabl_t t3 ON t3.stablent='"||g_enterprise||"' AND t3.stabl001=stfb009 AND t3.stabl002='"||g_dlang||"' ",
 
                     " WHERE stfbent=? AND stfb001=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stfb_t.stfbseq"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astm401_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR astm401_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_stfa_m.stfa001
                                               
      FOREACH b_fill_cs INTO g_stfb_d[l_ac].stfbseq,g_stfb_d[l_ac].stfb002,g_stfb_d[l_ac].stfb003,g_stfb_d[l_ac].stfb004, 
          g_stfb_d[l_ac].stfb005,g_stfb_d[l_ac].stfb006,g_stfb_d[l_ac].stfb007,g_stfb_d[l_ac].stfb008, 
          g_stfb_d[l_ac].stfb009,g_stfb_d[l_ac].stfb010,g_stfb_d[l_ac].stfb011,g_stfb_d[l_ac].stfb012, 
          g_stfb_d[l_ac].stfb013,g_stfb_d[l_ac].stfb014,g_stfb_d[l_ac].stfb015,g_stfb_d[l_ac].stfb016, 
          g_stfb_d[l_ac].stfb017,g_stfb_d[l_ac].stfbsite,g_stfb_d[l_ac].stfbunit,g_stfb_d[l_ac].stfb002_desc, 
          g_stfb_d[l_ac].stfb008_desc,g_stfb_d[l_ac].stfb009_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
   #判斷是否填充
   IF astm401_fill_chk(2) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE stfcseq,stfc002,stfc003,stfc024,stfc025,stfc004,stfc005,stfc006, 
             stfc007,stfc008,stfc009,stfc010,stfc011,stfc012,stfc013,stfc014,stfc015,stfc016,stfc017, 
             stfc018,stfc019,stfc020,stfc021,stfc022,stfc023,stfcsite,stfcunit ,t4.rtaxl003 ,t5.oocql004 , 
             t6.stael003 ,t7.stabl003 ,t8.stabl003 FROM stfc_t",   
                     " INNER JOIN stfa_t ON stfa001 = stfc001 ",
 
                     "",
                     " LEFT JOIN stfd_t ON stfcent = stfdent AND stfc001 = stfd001 AND stfcseq = stfdseq ",
                                    " LEFT JOIN rtaxl_t t4 ON t4.rtaxlent='"||g_enterprise||"' AND t4.rtaxl001=stfc004 AND t4.rtaxl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t5 ON t5.oocqlent='"||g_enterprise||"' AND t5.oocql001='2002' AND t5.oocql002=stfc005 AND t5.oocql003='"||g_dlang||"' ",
               " LEFT JOIN stael_t t6 ON t6.staelent='"||g_enterprise||"' AND t6.stael001=stfc009 AND t6.stael002='"||g_dlang||"' ",
               " LEFT JOIN stabl_t t7 ON t7.stablent='"||g_enterprise||"' AND t7.stabl001=stfc015 AND t7.stabl002='"||g_dlang||"' ",
               " LEFT JOIN stabl_t t8 ON t8.stablent='"||g_enterprise||"' AND t8.stabl001=stfc016 AND t8.stabl002='"||g_dlang||"' ",
 
                     " WHERE stfcent=? AND stfc001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body2.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
            IF NOT cl_null(g_wc2_table8) THEN 
      LET g_sql = g_sql CLIPPED," AND ", g_wc2_table8 CLIPPED
   END IF 
 
         
         LET g_sql = g_sql, " ORDER BY stfc_t.stfcseq"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql2"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astm401_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR astm401_pb2
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_stfa_m.stfa001
                                               
      FOREACH b_fill_cs2 INTO g_stfb2_d[l_ac].stfcseq,g_stfb2_d[l_ac].stfc002,g_stfb2_d[l_ac].stfc003, 
          g_stfb2_d[l_ac].stfc024,g_stfb2_d[l_ac].stfc025,g_stfb2_d[l_ac].stfc004,g_stfb2_d[l_ac].stfc005, 
          g_stfb2_d[l_ac].stfc006,g_stfb2_d[l_ac].stfc007,g_stfb2_d[l_ac].stfc008,g_stfb2_d[l_ac].stfc009, 
          g_stfb2_d[l_ac].stfc010,g_stfb2_d[l_ac].stfc011,g_stfb2_d[l_ac].stfc012,g_stfb2_d[l_ac].stfc013, 
          g_stfb2_d[l_ac].stfc014,g_stfb2_d[l_ac].stfc015,g_stfb2_d[l_ac].stfc016,g_stfb2_d[l_ac].stfc017, 
          g_stfb2_d[l_ac].stfc018,g_stfb2_d[l_ac].stfc019,g_stfb2_d[l_ac].stfc020,g_stfb2_d[l_ac].stfc021, 
          g_stfb2_d[l_ac].stfc022,g_stfb2_d[l_ac].stfc023,g_stfb2_d[l_ac].stfcsite,g_stfb2_d[l_ac].stfcunit, 
          g_stfb2_d[l_ac].stfc004_desc,g_stfb2_d[l_ac].stfc005_desc,g_stfb2_d[l_ac].stfc009_desc,g_stfb2_d[l_ac].stfc015_desc, 
          g_stfb2_d[l_ac].stfc016_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF astm401_fill_chk(3) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE stfe002,stfeseq,stfe003,stfe004,stfe005,stfe006,stfe007,stfe008, 
             stfe009,stfe010,stfe011,stfesite,stfeunit ,t9.stael003 FROM stfe_t",   
                     " INNER JOIN stfa_t ON stfa001 = stfe001 ",
 
                     "",
                     " LEFT JOIN stff_t ON stfeent = stffent AND stfe001 = stff001 AND stfeseq = stffseq AND stfe002 = stff002 ",
                                    " LEFT JOIN stael_t t9 ON t9.staelent='"||g_enterprise||"' AND t9.stael001=stfe003 AND t9.stael002='"||g_dlang||"' ",
 
                     " WHERE stfeent=? AND stfe001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body3.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table3) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
         END IF
         
         #子單身的WC
            IF NOT cl_null(g_wc2_table9) THEN 
      LET g_sql = g_sql CLIPPED," AND ", g_wc2_table9 CLIPPED
   END IF 
 
         
         LET g_sql = g_sql, " ORDER BY stfe_t.stfeseq,stfe_t.stfe002"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql3"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astm401_pb3 FROM g_sql
         DECLARE b_fill_cs3 CURSOR FOR astm401_pb3
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs3 USING g_enterprise,g_stfa_m.stfa001
                                               
      FOREACH b_fill_cs3 INTO g_stfb3_d[l_ac].stfe002,g_stfb3_d[l_ac].stfeseq,g_stfb3_d[l_ac].stfe003, 
          g_stfb3_d[l_ac].stfe004,g_stfb3_d[l_ac].stfe005,g_stfb3_d[l_ac].stfe006,g_stfb3_d[l_ac].stfe007, 
          g_stfb3_d[l_ac].stfe008,g_stfb3_d[l_ac].stfe009,g_stfb3_d[l_ac].stfe010,g_stfb3_d[l_ac].stfe011, 
          g_stfb3_d[l_ac].stfesite,g_stfb3_d[l_ac].stfeunit,g_stfb3_d[l_ac].stfe003_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill3.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF astm401_fill_chk(4) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE stfgseq,stfg003,stfg002,stfg004,stfg005,stfgacti,stfgsite,stfgunit  FROM stfg_t", 
                
                     " INNER JOIN stfa_t ON stfa001 = stfg001 ",
 
                     "",
                     
                     
                     " WHERE stfgent=? AND stfg001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body4.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table4) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table4 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stfg_t.stfgseq"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql4"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astm401_pb4 FROM g_sql
         DECLARE b_fill_cs4 CURSOR FOR astm401_pb4
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs4 USING g_enterprise,g_stfa_m.stfa001
                                               
      FOREACH b_fill_cs4 INTO g_stfb4_d[l_ac].stfgseq,g_stfb4_d[l_ac].stfg003,g_stfb4_d[l_ac].stfg002, 
          g_stfb4_d[l_ac].stfg004,g_stfb4_d[l_ac].stfg005,g_stfb4_d[l_ac].stfgacti,g_stfb4_d[l_ac].stfgsite, 
          g_stfb4_d[l_ac].stfgunit
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill4.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF astm401_fill_chk(5) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE stfhseq,stfh002,stfh003,stfhacti,stfhsite,stfhunit  FROM stfh_t", 
                
                     " INNER JOIN stfa_t ON stfa001 = stfh001 ",
 
                     "",
                     
                     
                     " WHERE stfhent=? AND stfh001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body5.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table5) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table5 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stfh_t.stfhseq"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql5"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astm401_pb5 FROM g_sql
         DECLARE b_fill_cs5 CURSOR FOR astm401_pb5
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs5 USING g_enterprise,g_stfa_m.stfa001
                                               
      FOREACH b_fill_cs5 INTO g_stfb5_d[l_ac].stfhseq,g_stfb5_d[l_ac].stfh002,g_stfb5_d[l_ac].stfh003, 
          g_stfb5_d[l_ac].stfhacti,g_stfb5_d[l_ac].stfhsite,g_stfb5_d[l_ac].stfhunit
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill5.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF astm401_fill_chk(6) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE stfiseq,stfi002,stfi003,stfi005,stfi006,stfi004,stfi007,stfi010, 
             stfi008,stfi009,stfiacti,stfisite,stfiunit ,t10.stael003 ,t11.oocql004 FROM stfi_t",    

                     " INNER JOIN stfa_t ON stfa001 = stfi001 ",
 
                     "",
                     
                                    " LEFT JOIN stael_t t10 ON t10.staelent='"||g_enterprise||"' AND t10.stael001=stfi003 AND t10.stael002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t11 ON t11.oocqlent='"||g_enterprise||"' AND t11.oocql001='2132' AND t11.oocql002=stfi010 AND t11.oocql003='"||g_dlang||"' ",
 
                     " WHERE stfient=? AND stfi001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body6.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table6) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table6 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stfi_t.stfiseq"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql6"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astm401_pb6 FROM g_sql
         DECLARE b_fill_cs6 CURSOR FOR astm401_pb6
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs6 USING g_enterprise,g_stfa_m.stfa001
                                               
      FOREACH b_fill_cs6 INTO g_stfb6_d[l_ac].stfiseq,g_stfb6_d[l_ac].stfi002,g_stfb6_d[l_ac].stfi003, 
          g_stfb6_d[l_ac].stfi005,g_stfb6_d[l_ac].stfi006,g_stfb6_d[l_ac].stfi004,g_stfb6_d[l_ac].stfi007, 
          g_stfb6_d[l_ac].stfi010,g_stfb6_d[l_ac].stfi008,g_stfb6_d[l_ac].stfi009,g_stfb6_d[l_ac].stfiacti, 
          g_stfb6_d[l_ac].stfisite,g_stfb6_d[l_ac].stfiunit,g_stfb6_d[l_ac].stfi003_desc,g_stfb6_d[l_ac].stfi010_desc 

         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill6.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF astm401_fill_chk(7) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE stfjseq,stfj002,stfj003,stfj004,stfj005,stfj006,stfjsite,stfjunit  FROM stfj_t", 
                
                     " INNER JOIN stfa_t ON stfa001 = stfj001 ",
 
                     "",
                     
                     
                     " WHERE stfjent=? AND stfj001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body7.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table7) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table7 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stfj_t.stfjseq"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql7"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astm401_pb7 FROM g_sql
         DECLARE b_fill_cs7 CURSOR FOR astm401_pb7
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs7 USING g_enterprise,g_stfa_m.stfa001
                                               
      FOREACH b_fill_cs7 INTO g_stfb7_d[l_ac].stfjseq,g_stfb7_d[l_ac].stfj002,g_stfb7_d[l_ac].stfj003, 
          g_stfb7_d[l_ac].stfj004,g_stfb7_d[l_ac].stfj005,g_stfb7_d[l_ac].stfj006,g_stfb7_d[l_ac].stfjsite, 
          g_stfb7_d[l_ac].stfjunit
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill7.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_stfb_d.deleteElement(g_stfb_d.getLength())
   CALL g_stfb2_d.deleteElement(g_stfb2_d.getLength())
   CALL g_stfb3_d.deleteElement(g_stfb3_d.getLength())
   CALL g_stfb4_d.deleteElement(g_stfb4_d.getLength())
   CALL g_stfb5_d.deleteElement(g_stfb5_d.getLength())
   CALL g_stfb6_d.deleteElement(g_stfb6_d.getLength())
   CALL g_stfb7_d.deleteElement(g_stfb7_d.getLength())
   CALL g_stfb8_d.deleteElement(g_stfb8_d.getLength())
   CALL g_stfb9_d.deleteElement(g_stfb9_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE astm401_pb
   FREE astm401_pb2
 
   FREE astm401_pb3
 
   FREE astm401_pb4
 
   FREE astm401_pb5
 
   FREE astm401_pb6
 
   FREE astm401_pb7
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_stfb_d.getLength()
      LET g_stfb_d_mask_o[l_ac].* =  g_stfb_d[l_ac].*
      CALL astm401_stfb_t_mask()
      LET g_stfb_d_mask_n[l_ac].* =  g_stfb_d[l_ac].*
   END FOR
   
   LET g_stfb2_d_mask_o.* =  g_stfb2_d.*
   FOR l_ac = 1 TO g_stfb2_d.getLength()
      LET g_stfb2_d_mask_o[l_ac].* =  g_stfb2_d[l_ac].*
      CALL astm401_stfc_t_mask()
      LET g_stfb2_d_mask_n[l_ac].* =  g_stfb2_d[l_ac].*
   END FOR
   LET g_stfb3_d_mask_o.* =  g_stfb3_d.*
   FOR l_ac = 1 TO g_stfb3_d.getLength()
      LET g_stfb3_d_mask_o[l_ac].* =  g_stfb3_d[l_ac].*
      CALL astm401_stfe_t_mask()
      LET g_stfb3_d_mask_n[l_ac].* =  g_stfb3_d[l_ac].*
   END FOR
   LET g_stfb4_d_mask_o.* =  g_stfb4_d.*
   FOR l_ac = 1 TO g_stfb4_d.getLength()
      LET g_stfb4_d_mask_o[l_ac].* =  g_stfb4_d[l_ac].*
      CALL astm401_stfg_t_mask()
      LET g_stfb4_d_mask_n[l_ac].* =  g_stfb4_d[l_ac].*
   END FOR
   LET g_stfb5_d_mask_o.* =  g_stfb5_d.*
   FOR l_ac = 1 TO g_stfb5_d.getLength()
      LET g_stfb5_d_mask_o[l_ac].* =  g_stfb5_d[l_ac].*
      CALL astm401_stfh_t_mask()
      LET g_stfb5_d_mask_n[l_ac].* =  g_stfb5_d[l_ac].*
   END FOR
   LET g_stfb6_d_mask_o.* =  g_stfb6_d.*
   FOR l_ac = 1 TO g_stfb6_d.getLength()
      LET g_stfb6_d_mask_o[l_ac].* =  g_stfb6_d[l_ac].*
      CALL astm401_stfi_t_mask()
      LET g_stfb6_d_mask_n[l_ac].* =  g_stfb6_d[l_ac].*
   END FOR
   LET g_stfb7_d_mask_o.* =  g_stfb7_d.*
   FOR l_ac = 1 TO g_stfb7_d.getLength()
      LET g_stfb7_d_mask_o[l_ac].* =  g_stfb7_d[l_ac].*
      CALL astm401_stfj_t_mask()
      LET g_stfb7_d_mask_n[l_ac].* =  g_stfb7_d[l_ac].*
   END FOR
   LET g_stfb8_d_mask_o.* =  g_stfb8_d.*
   FOR l_ac = 1 TO g_stfb8_d.getLength()
      LET g_stfb8_d_mask_o[l_ac].* =  g_stfb8_d[l_ac].*
      CALL astm401_stfd_t_mask()
      LET g_stfb8_d_mask_n[l_ac].* =  g_stfb8_d[l_ac].*
   END FOR
   LET g_stfb9_d_mask_o.* =  g_stfb9_d.*
   FOR l_ac = 1 TO g_stfb9_d.getLength()
      LET g_stfb9_d_mask_o[l_ac].* =  g_stfb9_d[l_ac].*
      CALL astm401_stff_t_mask()
      LET g_stfb9_d_mask_n[l_ac].* =  g_stfb9_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
]]>
  </section>
  <section id="astm401.b_fill2" ver="9" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION astm401_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define" edit="s"/>}
   #end add-point
   #add-point:b_fill2段define(客製用)
   {<point name="b_fill2.define_customerization" edit="c"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   IF astm401_fill_chk(8) THEN
      IF (pi_idx = 8 OR pi_idx = 0 ) AND g_stfb2_d.getLength() > 0 THEN
               CALL g_stfb8_d.clear()
 
         LET g_sql = "SELECT  UNIQUE stfdseq1,stfd002,stfd003,stfd004,stfd005,stfd006,stfd007,stfd008, 
             stfdsite,stfdunit ,t12.inayl003 ,t13.oocql004 FROM stfd_t",    
                     "",
                                    " LEFT JOIN inayl_t t12 ON t12.inaylent='"||g_enterprise||"' AND t12.inayl001=stfd003 AND t12.inayl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t13 ON t13.oocqlent='"||g_enterprise||"' AND t13.oocql001='2024' AND t13.oocql002=stfd004 AND t13.oocql003='"||g_dlang||"' ",
 
                     " WHERE stfdent=? AND stfd001=? AND stfdseq=?"
         
         IF NOT cl_null(g_wc2_table8) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table8 CLIPPED
         END IF
         
         LET g_sql = g_sql, " ORDER BY  stfd_t.stfdseq1" 
                            
         #add-point:單身填充前
         {<point name="b_fill2.before_fill8" />}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astm401_pb8 FROM g_sql
         DECLARE b_fill_curs8 CURSOR FOR astm401_pb8
         
         OPEN b_fill_curs8 USING g_enterprise,g_stfa_m.stfa001,g_stfb2_d[g_detail_idx].stfcseq
         LET l_ac = 1
         FOREACH b_fill_curs8 INTO g_stfb8_d[l_ac].stfdseq1,g_stfb8_d[l_ac].stfd002,g_stfb8_d[l_ac].stfd003, 
             g_stfb8_d[l_ac].stfd004,g_stfb8_d[l_ac].stfd005,g_stfb8_d[l_ac].stfd006,g_stfb8_d[l_ac].stfd007, 
             g_stfb8_d[l_ac].stfd008,g_stfb8_d[l_ac].stfdsite,g_stfb8_d[l_ac].stfdunit,g_stfb8_d[l_ac].stfd003_desc, 
             g_stfb8_d[l_ac].stfd004_desc 
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "FOREACH:" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               EXIT FOREACH
            END IF
            
            #add-point:b_fill段資料填充
            {<point name="b_fill2.fill8"/>}
            #end add-point
           
            IF l_ac > g_max_rec THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               EXIT FOREACH
            END IF
            
            LET l_ac = l_ac + 1
            
         END FOREACH
               CALL g_stfb8_d.deleteElement(g_stfb8_d.getLength())
 
      END IF
   END IF
 
   IF astm401_fill_chk(9) THEN
      IF (pi_idx = 9 OR pi_idx = 0 ) AND g_stfb3_d.getLength() > 0 THEN
               CALL g_stfb9_d.clear()
 
         LET g_sql = "SELECT  UNIQUE stff003,stff004,stff005,stff006,stff007,stff008,stff009,stffsite, 
             stffunit ,t14.inayl003 FROM stff_t",    
                     "",
                                    " LEFT JOIN inayl_t t14 ON t14.inaylent='"||g_enterprise||"' AND t14.inayl001=stff005 AND t14.inayl002='"||g_dlang||"' ",
 
                     " WHERE stffent=? AND stff001=? AND stffseq=? AND stff002=?"
         
         IF NOT cl_null(g_wc2_table9) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table9 CLIPPED
         END IF
         
         LET g_sql = g_sql, " ORDER BY  stff_t.stff003" 
                            
         #add-point:單身填充前
         {<point name="b_fill2.before_fill9" />}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astm401_pb9 FROM g_sql
         DECLARE b_fill_curs9 CURSOR FOR astm401_pb9
         
         OPEN b_fill_curs9 USING g_enterprise,g_stfa_m.stfa001,g_stfb3_d[g_detail_idx].stfeseq,g_stfb3_d[g_detail_idx].stfe002 

         LET l_ac = 1
         FOREACH b_fill_curs9 INTO g_stfb9_d[l_ac].stff003,g_stfb9_d[l_ac].stff004,g_stfb9_d[l_ac].stff005, 
             g_stfb9_d[l_ac].stff006,g_stfb9_d[l_ac].stff007,g_stfb9_d[l_ac].stff008,g_stfb9_d[l_ac].stff009, 
             g_stfb9_d[l_ac].stffsite,g_stfb9_d[l_ac].stffunit,g_stfb9_d[l_ac].stff005_desc 
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "FOREACH:" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               EXIT FOREACH
            END IF
            
            #add-point:b_fill段資料填充
            {<point name="b_fill2.fill9"/>}
            #end add-point
           
            IF l_ac > g_max_rec THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               EXIT FOREACH
            END IF
            
            LET l_ac = l_ac + 1
            
         END FOREACH
               CALL g_stfb9_d.deleteElement(g_stfb9_d.getLength())
 
      END IF
   END IF
 
 
      
   LET g_stfb8_d_mask_o.* =  g_stfb8_d.*
   FOR l_ac = 1 TO g_stfb8_d.getLength()
      LET g_stfb8_d_mask_o[l_ac].* =  g_stfb8_d[l_ac].*
      CALL astm401_stfd_t_mask()
      LET g_stfb8_d_mask_n[l_ac].* =  g_stfb8_d[l_ac].*
   END FOR
   LET g_stfb9_d_mask_o.* =  g_stfb9_d.*
   FOR l_ac = 1 TO g_stfb9_d.getLength()
      LET g_stfb9_d_mask_o[l_ac].* =  g_stfb9_d[l_ac].*
      CALL astm401_stff_t_mask()
      LET g_stfb9_d_mask_n[l_ac].* =  g_stfb9_d[l_ac].*
   END FOR
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL astm401_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="astm401.browser_fill" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION astm401_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define" edit="s"/>}
   #end add-point   
   #add-point:browser_fill段define(客製用)
   {<point name="browser_fill.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE stfa001 ",
                      " FROM stfa_t ",
                      " ",
                      " LEFT JOIN stfb_t ON stfbent = stfaent AND stfa001 = stfb001 ", "  ",
                      #add-point:browser_fill段sql(stfb_t1)
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
                      " LEFT JOIN stfc_t ON stfcent = stfaent AND stfa001 = stfc001", "  ",
                      #add-point:browser_fill段sql(stfc_t1)
                      {<point name="browser_fill.cnt.join.stfc_t1"/>}
                      #end add-point
 
                      " LEFT JOIN stfe_t ON stfeent = stfaent AND stfa001 = stfe001", "  ",
                      #add-point:browser_fill段sql(stfe_t1)
                      {<point name="browser_fill.cnt.join.stfe_t1"/>}
                      #end add-point
 
                      " LEFT JOIN stfg_t ON stfgent = stfaent AND stfa001 = stfg001", "  ",
                      #add-point:browser_fill段sql(stfg_t1)
                      {<point name="browser_fill.cnt.join.stfg_t1"/>}
                      #end add-point
 
                      " LEFT JOIN stfh_t ON stfhent = stfaent AND stfa001 = stfh001", "  ",
                      #add-point:browser_fill段sql(stfh_t1)
                      {<point name="browser_fill.cnt.join.stfh_t1"/>}
                      #end add-point
 
                      " LEFT JOIN stfi_t ON stfient = stfaent AND stfa001 = stfi001", "  ",
                      #add-point:browser_fill段sql(stfi_t1)
                      {<point name="browser_fill.cnt.join.stfi_t1"/>}
                      #end add-point
 
                      " LEFT JOIN stfj_t ON stfjent = stfaent AND stfa001 = stfj001", "  ",
                      #add-point:browser_fill段sql(stfj_t1)
                      {<point name="browser_fill.cnt.join.stfj_t1"/>}
                      #end add-point
 
 
                      " LEFT JOIN stfd_t ON stfdent = stfaent AND stfc001 = stfd001 AND stfcseq = stfdseq", "  ",
                      #add-point:browser_fill段sql(stfd_t1)
                      {<point name="browser_fill.cnt.join.stfd_t1"/>}
                      #end add-point
 
                      " LEFT JOIN stff_t ON stffent = stfaent AND stfe001 = stff001 AND stfeseq = stffseq AND stfe002 = stff002", "  ",
                      #add-point:browser_fill段sql(stff_t1)
                      {<point name="browser_fill.cnt.join.stff_t1"/>}
                      #end add-point
 
 
                      " LEFT JOIN stfal_t ON stfalent = '"||g_enterprise||"' AND stfa001 = stfal001 AND stfal002 = '",g_dlang,"' ", 
                      " ", 
                      " WHERE stfaent = '" ||g_enterprise|| "' AND stfbent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("stfa_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE stfa001 ",
                      " FROM stfa_t ", 
                      "  ",
                      "  LEFT JOIN stfal_t ON stfalent = '"||g_enterprise||"' AND stfa001 = stfal001 AND stfal002 = '",g_dlang,"' ",
                      " WHERE stfaent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("stfa_t")
   END IF
   
   #add-point:browser_fill,cnt wc
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_stfa_m.* TO NULL
      CALL g_stfb_d.clear()        
      CALL g_stfb2_d.clear() 
      CALL g_stfb3_d.clear() 
      CALL g_stfb4_d.clear() 
      CALL g_stfb5_d.clear() 
      CALL g_stfb6_d.clear() 
      CALL g_stfb7_d.clear() 
      CALL g_stfb8_d.clear() 
      CALL g_stfb9_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.stfa001,t0.stfa002,t0.stfa003,t0.stfa004,t0.stfa005,t0.stfa006,t0.stfa007,t0.stfa008,t0.stfa009,t0.stfa010,t0.stfa011,t0.stfa012,t0.stfa013,t0.stfa014,t0.stfa015,t0.stfa016,t0.stfa017,t0.stfa018,t0.stfa019,t0.stfa020,t0.stfa021,t0.stfa022,t0.stfa023,t0.stfa024,t0.stfa025,t0.stfa026,t0.stfa027,t0.stfa028,t0.stfa029,t0.stfa030,t0.stfa031,t0.stfa032,t0.stfa033,t0.stfa034,t0.stfa035,t0.stfa036,t0.stfa037,t0.stfa038,t0.stfa039,t0.stfa040,t0.stfa042,t0.stfa044,t0.stfa045,t0.stfa046,t0.stfa047,t0.stfa048,t0.stfa049,t0.stfasite,t0.stfaunit Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   LET g_sql = " SELECT DISTINCT t0.stfastus,t0.stfa001,t0.stfa002,t0.stfa003,t0.stfa004,t0.stfa005, 
       t0.stfa006,t0.stfa007,t0.stfa008,t0.stfa009,t0.stfa010,t0.stfa011,t0.stfa012,t0.stfa013,t0.stfa014, 
       t0.stfa015,t0.stfa016,t0.stfa017,t0.stfa018,t0.stfa019,t0.stfa020,t0.stfa021,t0.stfa022,t0.stfa023, 
       t0.stfa024,t0.stfa025,t0.stfa026,t0.stfa027,t0.stfa028,t0.stfa029,t0.stfa030,t0.stfa031,t0.stfa032, 
       t0.stfa033,t0.stfa034,t0.stfa035,t0.stfa036,t0.stfa037,t0.stfa038,t0.stfa039,t0.stfa040,t0.stfa042, 
       t0.stfa044,t0.stfa045,t0.stfa046,t0.stfa047,t0.stfa048,t0.stfa049,t0.stfasite,t0.stfaunit ",
               " FROM stfa_t t0",
               "  ",
               "  LEFT JOIN stfb_t ON stfbent = stfaent AND stfa001 = stfb001 ", "  ", 
               #add-point:browser_fill段sql(stfb_t1)
               {<point name="browser_fill.join.stfb_t1"/>}
               #end add-point
               "  LEFT JOIN stfc_t ON stfcent = stfaent AND stfa001 = stfc001", "  ", 
               #add-point:browser_fill段sql(stfc_t1)
               {<point name="browser_fill.join.stfc_t1"/>}
               #end add-point
 
               "  LEFT JOIN stfe_t ON stfeent = stfaent AND stfa001 = stfe001", "  ", 
               #add-point:browser_fill段sql(stfe_t1)
               {<point name="browser_fill.join.stfe_t1"/>}
               #end add-point
 
               "  LEFT JOIN stfg_t ON stfgent = stfaent AND stfa001 = stfg001", "  ", 
               #add-point:browser_fill段sql(stfg_t1)
               {<point name="browser_fill.join.stfg_t1"/>}
               #end add-point
 
               "  LEFT JOIN stfh_t ON stfhent = stfaent AND stfa001 = stfh001", "  ", 
               #add-point:browser_fill段sql(stfh_t1)
               {<point name="browser_fill.join.stfh_t1"/>}
               #end add-point
 
               "  LEFT JOIN stfi_t ON stfient = stfaent AND stfa001 = stfi001", "  ", 
               #add-point:browser_fill段sql(stfi_t1)
               {<point name="browser_fill.join.stfi_t1"/>}
               #end add-point
 
               "  LEFT JOIN stfj_t ON stfjent = stfaent AND stfa001 = stfj001", "  ", 
               #add-point:browser_fill段sql(stfj_t1)
               {<point name="browser_fill.join.stfj_t1"/>}
               #end add-point
 
 
               "  LEFT JOIN stfd_t ON stfdent = stfaent AND stfc001 = stfd001 AND stfcseq = stfdseq", "  ", 
               #add-point:browser_fill段sql(stfd_t1)
               {<point name="browser_fill.join.stfd_t1"/>}
               #end add-point
 
               "  LEFT JOIN stff_t ON stffent = stfaent AND stfe001 = stff001 AND stfeseq = stffseq AND stfe002 = stff002", "  ", 
               #add-point:browser_fill段sql(stff_t1)
               {<point name="browser_fill.join.stff_t1"/>}
               #end add-point
 
 
               "  ",
               
               " LEFT JOIN stfal_t ON stfalent = '"||g_enterprise||"' AND stfa001 = stfal001 AND stfal002 = '",g_dlang,"' ",
               " WHERE t0.stfaent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("stfa_t")
   #add-point:browser_fill,sql wc
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY stfa001 ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"stfa_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill段open cursor
   {<point name="browser_fill.open"/>}
   #end add-point
   
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_stfa001,g_browser[g_cnt].b_stfa002, 
       g_browser[g_cnt].b_stfa003,g_browser[g_cnt].b_stfa004,g_browser[g_cnt].b_stfa005,g_browser[g_cnt].b_stfa006, 
       g_browser[g_cnt].b_stfa007,g_browser[g_cnt].b_stfa008,g_browser[g_cnt].b_stfa009,g_browser[g_cnt].b_stfa010, 
       g_browser[g_cnt].b_stfa011,g_browser[g_cnt].b_stfa012,g_browser[g_cnt].b_stfa013,g_browser[g_cnt].b_stfa014, 
       g_browser[g_cnt].b_stfa015,g_browser[g_cnt].b_stfa016,g_browser[g_cnt].b_stfa017,g_browser[g_cnt].b_stfa018, 
       g_browser[g_cnt].b_stfa019,g_browser[g_cnt].b_stfa020,g_browser[g_cnt].b_stfa021,g_browser[g_cnt].b_stfa022, 
       g_browser[g_cnt].b_stfa023,g_browser[g_cnt].b_stfa024,g_browser[g_cnt].b_stfa025,g_browser[g_cnt].b_stfa026, 
       g_browser[g_cnt].b_stfa027,g_browser[g_cnt].b_stfa028,g_browser[g_cnt].b_stfa029,g_browser[g_cnt].b_stfa030, 
       g_browser[g_cnt].b_stfa031,g_browser[g_cnt].b_stfa032,g_browser[g_cnt].b_stfa033,g_browser[g_cnt].b_stfa034, 
       g_browser[g_cnt].b_stfa035,g_browser[g_cnt].b_stfa036,g_browser[g_cnt].b_stfa037,g_browser[g_cnt].b_stfa038, 
       g_browser[g_cnt].b_stfa039,g_browser[g_cnt].b_stfa040,g_browser[g_cnt].b_stfa042,g_browser[g_cnt].b_stfa044, 
       g_browser[g_cnt].b_stfa045,g_browser[g_cnt].b_stfa046,g_browser[g_cnt].b_stfa047,g_browser[g_cnt].b_stfa048, 
       g_browser[g_cnt].b_stfa049,g_browser[g_cnt].b_stfasite,g_browser[g_cnt].b_stfaunit
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
      #遮罩相關處理
      CALL astm401_browser_mask()
  
            #應用 a24 樣板自動產生(Version:2)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/open.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/valid.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/void.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_browse THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_stfa001) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION
]]>
  </section>
  <section id="astm401.construct" ver="12" status="" src="s" readonly="">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION astm401_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define
   {<point name="cs.define" edit="s"/>}
   #end add-point    
   #add-point:cs段define(客製用)
   {<point name="cs.define_customerization" edit="c"/>}
   #end add-point    
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_stfa_m.* TO NULL
   CALL g_stfb_d.clear()        
   CALL g_stfb2_d.clear() 
   CALL g_stfb3_d.clear() 
   CALL g_stfb4_d.clear() 
   CALL g_stfb5_d.clear() 
   CALL g_stfb6_d.clear() 
   CALL g_stfb7_d.clear() 
   CALL g_stfb8_d.clear() 
   CALL g_stfb9_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
   INITIALIZE g_wc2_table4 TO NULL
 
   INITIALIZE g_wc2_table5 TO NULL
 
   INITIALIZE g_wc2_table6 TO NULL
 
   INITIALIZE g_wc2_table7 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON stfaunit,stfasite,stfa001,stfa002,stfa003,stfa004,stfa009,stfastus,stfa005, 
          stfal003,stfal004,stfa006,stfa007,stfa008,stfa047,stfa048,stfa044,stfa010,stfa011,stfa012, 
          stfa013,stfa014,stfa015,stfa016,stfa045,stfa046,stfa029,stfa030,stfa032,stfa033,stfa033_desc, 
          stfa034,stfa034_desc,stfa035,stfa036,stfa037,stfa038,stfa039,stfa040,stfa028,stfa017,stfa021, 
          stfa024,stfa018,stfa049,stfa025,stfa019,stfa022,stfa026,stfa020,stfa023,stfa027,stfa031,stfa042, 
          stfaownid,stfaowndp,stfacrtid,stfacrtdp,stfacrtdt,stfamodid,stfamoddt,stfacnfid,stfacnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<stfacrtdt>>----
         AFTER FIELD stfacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<stfamoddt>>----
         AFTER FIELD stfamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<stfacnfdt>>----
         AFTER FIELD stfacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<stfapstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.stfaunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfaunit
            #add-point:ON ACTION controlp INFIELD stfaunit
            {<point name="construct.c.stfaunit" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfaunit
            #add-point:BEFORE FIELD stfaunit
            {<point name="construct.b.stfaunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfaunit
            
            #add-point:AFTER FIELD stfaunit
            {<point name="construct.a.stfaunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfasite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfasite
            #add-point:ON ACTION controlp INFIELD stfasite
            {<point name="construct.c.stfasite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfasite
            #add-point:BEFORE FIELD stfasite
            {<point name="construct.b.stfasite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfasite
            
            #add-point:AFTER FIELD stfasite
            {<point name="construct.a.stfasite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa001
            #add-point:ON ACTION controlp INFIELD stfa001
            {<point name="construct.c.stfa001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa001
            #add-point:BEFORE FIELD stfa001
            {<point name="construct.b.stfa001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa001
            
            #add-point:AFTER FIELD stfa001
            {<point name="construct.a.stfa001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa002
            #add-point:BEFORE FIELD stfa002
            {<point name="construct.b.stfa002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa002
            
            #add-point:AFTER FIELD stfa002
            {<point name="construct.a.stfa002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa002
            #add-point:ON ACTION controlp INFIELD stfa002
            {<point name="construct.c.stfa002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa003
            #add-point:BEFORE FIELD stfa003
            {<point name="construct.b.stfa003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa003
            
            #add-point:AFTER FIELD stfa003
            {<point name="construct.a.stfa003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa003
            #add-point:ON ACTION controlp INFIELD stfa003
            {<point name="construct.c.stfa003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa004
            #add-point:BEFORE FIELD stfa004
            {<point name="construct.b.stfa004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa004
            
            #add-point:AFTER FIELD stfa004
            {<point name="construct.a.stfa004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa004
            #add-point:ON ACTION controlp INFIELD stfa004
            {<point name="construct.c.stfa004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa009
            #add-point:BEFORE FIELD stfa009
            {<point name="construct.b.stfa009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa009
            
            #add-point:AFTER FIELD stfa009
            {<point name="construct.a.stfa009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa009
            #add-point:ON ACTION controlp INFIELD stfa009
            {<point name="construct.c.stfa009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfastus
            #add-point:BEFORE FIELD stfastus
            {<point name="construct.b.stfastus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfastus
            
            #add-point:AFTER FIELD stfastus
            {<point name="construct.a.stfastus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfastus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfastus
            #add-point:ON ACTION controlp INFIELD stfastus
            {<point name="construct.c.stfastus" />}
            #END add-point
 
         #Ctrlp:construct.c.stfa005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa005
            #add-point:ON ACTION controlp INFIELD stfa005
            {<point name="construct.c.stfa005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa005
            #add-point:BEFORE FIELD stfa005
            {<point name="construct.b.stfa005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa005
            
            #add-point:AFTER FIELD stfa005
            {<point name="construct.a.stfa005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfal003
            #add-point:BEFORE FIELD stfal003
            {<point name="construct.b.stfal003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfal003
            
            #add-point:AFTER FIELD stfal003
            {<point name="construct.a.stfal003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfal003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfal003
            #add-point:ON ACTION controlp INFIELD stfal003
            {<point name="construct.c.stfal003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfal004
            #add-point:BEFORE FIELD stfal004
            {<point name="construct.b.stfal004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfal004
            
            #add-point:AFTER FIELD stfal004
            {<point name="construct.a.stfal004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfal004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfal004
            #add-point:ON ACTION controlp INFIELD stfal004
            {<point name="construct.c.stfal004" />}
            #END add-point
 
         #Ctrlp:construct.c.stfa006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa006
            #add-point:ON ACTION controlp INFIELD stfa006
            {<point name="construct.c.stfa006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa006
            #add-point:BEFORE FIELD stfa006
            {<point name="construct.b.stfa006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa006
            
            #add-point:AFTER FIELD stfa006
            {<point name="construct.a.stfa006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa007
            #add-point:BEFORE FIELD stfa007
            {<point name="construct.b.stfa007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa007
            
            #add-point:AFTER FIELD stfa007
            {<point name="construct.a.stfa007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa007
            #add-point:ON ACTION controlp INFIELD stfa007
            {<point name="construct.c.stfa007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa008
            #add-point:BEFORE FIELD stfa008
            {<point name="construct.b.stfa008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa008
            
            #add-point:AFTER FIELD stfa008
            {<point name="construct.a.stfa008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa008
            #add-point:ON ACTION controlp INFIELD stfa008
            {<point name="construct.c.stfa008" />}
            #END add-point
 
         #Ctrlp:construct.c.stfa047
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa047
            #add-point:ON ACTION controlp INFIELD stfa047
            {<point name="construct.c.stfa047" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa047
            #add-point:BEFORE FIELD stfa047
            {<point name="construct.b.stfa047" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa047
            
            #add-point:AFTER FIELD stfa047
            {<point name="construct.a.stfa047" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa048
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa048
            #add-point:ON ACTION controlp INFIELD stfa048
            {<point name="construct.c.stfa048" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa048
            #add-point:BEFORE FIELD stfa048
            {<point name="construct.b.stfa048" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa048
            
            #add-point:AFTER FIELD stfa048
            {<point name="construct.a.stfa048" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa044
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa044
            #add-point:ON ACTION controlp INFIELD stfa044
            {<point name="construct.c.stfa044" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa044
            #add-point:BEFORE FIELD stfa044
            {<point name="construct.b.stfa044" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa044
            
            #add-point:AFTER FIELD stfa044
            {<point name="construct.a.stfa044" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa010
            #add-point:ON ACTION controlp INFIELD stfa010
            {<point name="construct.c.stfa010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa010
            #add-point:BEFORE FIELD stfa010
            {<point name="construct.b.stfa010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa010
            
            #add-point:AFTER FIELD stfa010
            {<point name="construct.a.stfa010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa011
            #add-point:ON ACTION controlp INFIELD stfa011
            {<point name="construct.c.stfa011" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa011
            #add-point:BEFORE FIELD stfa011
            {<point name="construct.b.stfa011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa011
            
            #add-point:AFTER FIELD stfa011
            {<point name="construct.a.stfa011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa012
            #add-point:ON ACTION controlp INFIELD stfa012
            {<point name="construct.c.stfa012" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa012
            #add-point:BEFORE FIELD stfa012
            {<point name="construct.b.stfa012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa012
            
            #add-point:AFTER FIELD stfa012
            {<point name="construct.a.stfa012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa013
            #add-point:ON ACTION controlp INFIELD stfa013
            {<point name="construct.c.stfa013" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa013
            #add-point:BEFORE FIELD stfa013
            {<point name="construct.b.stfa013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa013
            
            #add-point:AFTER FIELD stfa013
            {<point name="construct.a.stfa013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa014
            #add-point:ON ACTION controlp INFIELD stfa014
            {<point name="construct.c.stfa014" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa014
            #add-point:BEFORE FIELD stfa014
            {<point name="construct.b.stfa014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa014
            
            #add-point:AFTER FIELD stfa014
            {<point name="construct.a.stfa014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa015
            #add-point:ON ACTION controlp INFIELD stfa015
            {<point name="construct.c.stfa015" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa015
            #add-point:BEFORE FIELD stfa015
            {<point name="construct.b.stfa015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa015
            
            #add-point:AFTER FIELD stfa015
            {<point name="construct.a.stfa015" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa016
            #add-point:BEFORE FIELD stfa016
            {<point name="construct.b.stfa016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa016
            
            #add-point:AFTER FIELD stfa016
            {<point name="construct.a.stfa016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa016
            #add-point:ON ACTION controlp INFIELD stfa016
            {<point name="construct.c.stfa016" />}
            #END add-point
 
         #Ctrlp:construct.c.stfa045
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa045
            #add-point:ON ACTION controlp INFIELD stfa045
            {<point name="construct.c.stfa045" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa045
            #add-point:BEFORE FIELD stfa045
            {<point name="construct.b.stfa045" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa045
            
            #add-point:AFTER FIELD stfa045
            {<point name="construct.a.stfa045" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa046
            #add-point:BEFORE FIELD stfa046
            {<point name="construct.b.stfa046" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa046
            
            #add-point:AFTER FIELD stfa046
            {<point name="construct.a.stfa046" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa046
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa046
            #add-point:ON ACTION controlp INFIELD stfa046
            {<point name="construct.c.stfa046" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa029
            #add-point:BEFORE FIELD stfa029
            {<point name="construct.b.stfa029" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa029
            
            #add-point:AFTER FIELD stfa029
            {<point name="construct.a.stfa029" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa029
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa029
            #add-point:ON ACTION controlp INFIELD stfa029
            {<point name="construct.c.stfa029" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa030
            #add-point:BEFORE FIELD stfa030
            {<point name="construct.b.stfa030" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa030
            
            #add-point:AFTER FIELD stfa030
            {<point name="construct.a.stfa030" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa030
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa030
            #add-point:ON ACTION controlp INFIELD stfa030
            {<point name="construct.c.stfa030" />}
            #END add-point
 
         #Ctrlp:construct.c.stfa032
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa032
            #add-point:ON ACTION controlp INFIELD stfa032
            {<point name="construct.c.stfa032" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa032
            #add-point:BEFORE FIELD stfa032
            {<point name="construct.b.stfa032" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa032
            
            #add-point:AFTER FIELD stfa032
            {<point name="construct.a.stfa032" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa033
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa033
            #add-point:ON ACTION controlp INFIELD stfa033
            {<point name="construct.c.stfa033" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa033
            #add-point:BEFORE FIELD stfa033
            {<point name="construct.b.stfa033" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa033
            
            #add-point:AFTER FIELD stfa033
            {<point name="construct.a.stfa033" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa033_desc
            #add-point:BEFORE FIELD stfa033_desc
            {<point name="construct.b.stfa033_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa033_desc
            
            #add-point:AFTER FIELD stfa033_desc
            {<point name="construct.a.stfa033_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa033_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa033_desc
            #add-point:ON ACTION controlp INFIELD stfa033_desc
            {<point name="construct.c.stfa033_desc" />}
            #END add-point
 
         #Ctrlp:construct.c.stfa034
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa034
            #add-point:ON ACTION controlp INFIELD stfa034
            {<point name="construct.c.stfa034" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa034
            #add-point:BEFORE FIELD stfa034
            {<point name="construct.b.stfa034" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa034
            
            #add-point:AFTER FIELD stfa034
            {<point name="construct.a.stfa034" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa034_desc
            #add-point:BEFORE FIELD stfa034_desc
            {<point name="construct.b.stfa034_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa034_desc
            
            #add-point:AFTER FIELD stfa034_desc
            {<point name="construct.a.stfa034_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa034_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa034_desc
            #add-point:ON ACTION controlp INFIELD stfa034_desc
            {<point name="construct.c.stfa034_desc" />}
            #END add-point
 
         #Ctrlp:construct.c.stfa035
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa035
            #add-point:ON ACTION controlp INFIELD stfa035
            {<point name="construct.c.stfa035" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa035
            #add-point:BEFORE FIELD stfa035
            {<point name="construct.b.stfa035" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa035
            
            #add-point:AFTER FIELD stfa035
            {<point name="construct.a.stfa035" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa036
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa036
            #add-point:ON ACTION controlp INFIELD stfa036
            {<point name="construct.c.stfa036" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa036
            #add-point:BEFORE FIELD stfa036
            {<point name="construct.b.stfa036" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa036
            
            #add-point:AFTER FIELD stfa036
            {<point name="construct.a.stfa036" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa037
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa037
            #add-point:ON ACTION controlp INFIELD stfa037
            {<point name="construct.c.stfa037" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa037
            #add-point:BEFORE FIELD stfa037
            {<point name="construct.b.stfa037" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa037
            
            #add-point:AFTER FIELD stfa037
            {<point name="construct.a.stfa037" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa038
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa038
            #add-point:ON ACTION controlp INFIELD stfa038
            {<point name="construct.c.stfa038" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa038
            #add-point:BEFORE FIELD stfa038
            {<point name="construct.b.stfa038" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa038
            
            #add-point:AFTER FIELD stfa038
            {<point name="construct.a.stfa038" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa039
            #add-point:BEFORE FIELD stfa039
            {<point name="construct.b.stfa039" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa039
            
            #add-point:AFTER FIELD stfa039
            {<point name="construct.a.stfa039" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa039
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa039
            #add-point:ON ACTION controlp INFIELD stfa039
            {<point name="construct.c.stfa039" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa040
            #add-point:BEFORE FIELD stfa040
            {<point name="construct.b.stfa040" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa040
            
            #add-point:AFTER FIELD stfa040
            {<point name="construct.a.stfa040" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa040
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa040
            #add-point:ON ACTION controlp INFIELD stfa040
            {<point name="construct.c.stfa040" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa028
            #add-point:BEFORE FIELD stfa028
            {<point name="construct.b.stfa028" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa028
            
            #add-point:AFTER FIELD stfa028
            {<point name="construct.a.stfa028" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa028
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa028
            #add-point:ON ACTION controlp INFIELD stfa028
            {<point name="construct.c.stfa028" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa017
            #add-point:BEFORE FIELD stfa017
            {<point name="construct.b.stfa017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa017
            
            #add-point:AFTER FIELD stfa017
            {<point name="construct.a.stfa017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa017
            #add-point:ON ACTION controlp INFIELD stfa017
            {<point name="construct.c.stfa017" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa021
            #add-point:BEFORE FIELD stfa021
            {<point name="construct.b.stfa021" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa021
            
            #add-point:AFTER FIELD stfa021
            {<point name="construct.a.stfa021" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa021
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa021
            #add-point:ON ACTION controlp INFIELD stfa021
            {<point name="construct.c.stfa021" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa024
            #add-point:BEFORE FIELD stfa024
            {<point name="construct.b.stfa024" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa024
            
            #add-point:AFTER FIELD stfa024
            {<point name="construct.a.stfa024" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa024
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa024
            #add-point:ON ACTION controlp INFIELD stfa024
            {<point name="construct.c.stfa024" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa018
            #add-point:BEFORE FIELD stfa018
            {<point name="construct.b.stfa018" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa018
            
            #add-point:AFTER FIELD stfa018
            {<point name="construct.a.stfa018" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa018
            #add-point:ON ACTION controlp INFIELD stfa018
            {<point name="construct.c.stfa018" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa049
            #add-point:BEFORE FIELD stfa049
            {<point name="construct.b.stfa049" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa049
            
            #add-point:AFTER FIELD stfa049
            {<point name="construct.a.stfa049" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa049
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa049
            #add-point:ON ACTION controlp INFIELD stfa049
            {<point name="construct.c.stfa049" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa025
            #add-point:BEFORE FIELD stfa025
            {<point name="construct.b.stfa025" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa025
            
            #add-point:AFTER FIELD stfa025
            {<point name="construct.a.stfa025" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa025
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa025
            #add-point:ON ACTION controlp INFIELD stfa025
            {<point name="construct.c.stfa025" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa019
            #add-point:BEFORE FIELD stfa019
            {<point name="construct.b.stfa019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa019
            
            #add-point:AFTER FIELD stfa019
            {<point name="construct.a.stfa019" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa019
            #add-point:ON ACTION controlp INFIELD stfa019
            {<point name="construct.c.stfa019" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa022
            #add-point:BEFORE FIELD stfa022
            {<point name="construct.b.stfa022" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa022
            
            #add-point:AFTER FIELD stfa022
            {<point name="construct.a.stfa022" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa022
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa022
            #add-point:ON ACTION controlp INFIELD stfa022
            {<point name="construct.c.stfa022" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa026
            #add-point:BEFORE FIELD stfa026
            {<point name="construct.b.stfa026" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa026
            
            #add-point:AFTER FIELD stfa026
            {<point name="construct.a.stfa026" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa026
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa026
            #add-point:ON ACTION controlp INFIELD stfa026
            {<point name="construct.c.stfa026" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa020
            #add-point:BEFORE FIELD stfa020
            {<point name="construct.b.stfa020" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa020
            
            #add-point:AFTER FIELD stfa020
            {<point name="construct.a.stfa020" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa020
            #add-point:ON ACTION controlp INFIELD stfa020
            {<point name="construct.c.stfa020" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa023
            #add-point:BEFORE FIELD stfa023
            {<point name="construct.b.stfa023" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa023
            
            #add-point:AFTER FIELD stfa023
            {<point name="construct.a.stfa023" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa023
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa023
            #add-point:ON ACTION controlp INFIELD stfa023
            {<point name="construct.c.stfa023" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa027
            #add-point:BEFORE FIELD stfa027
            {<point name="construct.b.stfa027" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa027
            
            #add-point:AFTER FIELD stfa027
            {<point name="construct.a.stfa027" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa027
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa027
            #add-point:ON ACTION controlp INFIELD stfa027
            {<point name="construct.c.stfa027" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa031
            #add-point:BEFORE FIELD stfa031
            {<point name="construct.b.stfa031" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa031
            
            #add-point:AFTER FIELD stfa031
            {<point name="construct.a.stfa031" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa031
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa031
            #add-point:ON ACTION controlp INFIELD stfa031
            {<point name="construct.c.stfa031" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa042
            #add-point:BEFORE FIELD stfa042
            {<point name="construct.b.stfa042" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa042
            
            #add-point:AFTER FIELD stfa042
            {<point name="construct.a.stfa042" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfa042
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa042
            #add-point:ON ACTION controlp INFIELD stfa042
            {<point name="construct.c.stfa042" />}
            #END add-point
 
         #Ctrlp:construct.c.stfaownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfaownid
            #add-point:ON ACTION controlp INFIELD stfaownid
            {<point name="construct.c.stfaownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfaownid
            #add-point:BEFORE FIELD stfaownid
            {<point name="construct.b.stfaownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfaownid
            
            #add-point:AFTER FIELD stfaownid
            {<point name="construct.a.stfaownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfaowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfaowndp
            #add-point:ON ACTION controlp INFIELD stfaowndp
            {<point name="construct.c.stfaowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfaowndp
            #add-point:BEFORE FIELD stfaowndp
            {<point name="construct.b.stfaowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfaowndp
            
            #add-point:AFTER FIELD stfaowndp
            {<point name="construct.a.stfaowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfacrtid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfacrtid
            #add-point:ON ACTION controlp INFIELD stfacrtid
            {<point name="construct.c.stfacrtid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfacrtid
            #add-point:BEFORE FIELD stfacrtid
            {<point name="construct.b.stfacrtid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfacrtid
            
            #add-point:AFTER FIELD stfacrtid
            {<point name="construct.a.stfacrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.stfacrtdp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfacrtdp
            #add-point:ON ACTION controlp INFIELD stfacrtdp
            {<point name="construct.c.stfacrtdp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfacrtdp
            #add-point:BEFORE FIELD stfacrtdp
            {<point name="construct.b.stfacrtdp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfacrtdp
            
            #add-point:AFTER FIELD stfacrtdp
            {<point name="construct.a.stfacrtdp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfacrtdt
            #add-point:BEFORE FIELD stfacrtdt
            {<point name="construct.b.stfacrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.stfamodid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfamodid
            #add-point:ON ACTION controlp INFIELD stfamodid
            {<point name="construct.c.stfamodid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfamodid
            #add-point:BEFORE FIELD stfamodid
            {<point name="construct.b.stfamodid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfamodid
            
            #add-point:AFTER FIELD stfamodid
            {<point name="construct.a.stfamodid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfamoddt
            #add-point:BEFORE FIELD stfamoddt
            {<point name="construct.b.stfamoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.stfacnfid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfacnfid
            #add-point:ON ACTION controlp INFIELD stfacnfid
            {<point name="construct.c.stfacnfid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfacnfid
            #add-point:BEFORE FIELD stfacnfid
            {<point name="construct.b.stfacnfid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfacnfid
            
            #add-point:AFTER FIELD stfacnfid
            {<point name="construct.a.stfacnfid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfacnfdt
            #add-point:BEFORE FIELD stfacnfdt
            {<point name="construct.b.stfacnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON stfbseq,stfb002,stfb003,stfb004,stfb005,stfb006,stfb007,stfb008,stfb009, 
          stfb010,stfb011,stfb012,stfb013,stfb014,stfb015,stfb016,stfb017,stfbsite,stfbunit
           FROM s_detail1[1].stfbseq,s_detail1[1].stfb002,s_detail1[1].stfb003,s_detail1[1].stfb004, 
               s_detail1[1].stfb005,s_detail1[1].stfb006,s_detail1[1].stfb007,s_detail1[1].stfb008,s_detail1[1].stfb009, 
               s_detail1[1].stfb010,s_detail1[1].stfb011,s_detail1[1].stfb012,s_detail1[1].stfb013,s_detail1[1].stfb014, 
               s_detail1[1].stfb015,s_detail1[1].stfb016,s_detail1[1].stfb017,s_detail1[1].stfbsite, 
               s_detail1[1].stfbunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfbseq
            #add-point:BEFORE FIELD stfbseq
            {<point name="construct.b.page1.stfbseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfbseq
            
            #add-point:AFTER FIELD stfbseq
            {<point name="construct.a.page1.stfbseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stfbseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfbseq
            #add-point:ON ACTION controlp INFIELD stfbseq
            {<point name="construct.c.page1.stfbseq" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.stfb002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfb002
            #add-point:ON ACTION controlp INFIELD stfb002
            {<point name="construct.c.page1.stfb002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfb002
            #add-point:BEFORE FIELD stfb002
            {<point name="construct.b.page1.stfb002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfb002
            
            #add-point:AFTER FIELD stfb002
            {<point name="construct.a.page1.stfb002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfb003
            #add-point:BEFORE FIELD stfb003
            {<point name="construct.b.page1.stfb003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfb003
            
            #add-point:AFTER FIELD stfb003
            {<point name="construct.a.page1.stfb003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stfb003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfb003
            #add-point:ON ACTION controlp INFIELD stfb003
            {<point name="construct.c.page1.stfb003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfb004
            #add-point:BEFORE FIELD stfb004
            {<point name="construct.b.page1.stfb004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfb004
            
            #add-point:AFTER FIELD stfb004
            {<point name="construct.a.page1.stfb004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stfb004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfb004
            #add-point:ON ACTION controlp INFIELD stfb004
            {<point name="construct.c.page1.stfb004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfb005
            #add-point:BEFORE FIELD stfb005
            {<point name="construct.b.page1.stfb005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfb005
            
            #add-point:AFTER FIELD stfb005
            {<point name="construct.a.page1.stfb005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stfb005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfb005
            #add-point:ON ACTION controlp INFIELD stfb005
            {<point name="construct.c.page1.stfb005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfb006
            #add-point:BEFORE FIELD stfb006
            {<point name="construct.b.page1.stfb006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfb006
            
            #add-point:AFTER FIELD stfb006
            {<point name="construct.a.page1.stfb006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stfb006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfb006
            #add-point:ON ACTION controlp INFIELD stfb006
            {<point name="construct.c.page1.stfb006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfb007
            #add-point:BEFORE FIELD stfb007
            {<point name="construct.b.page1.stfb007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfb007
            
            #add-point:AFTER FIELD stfb007
            {<point name="construct.a.page1.stfb007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stfb007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfb007
            #add-point:ON ACTION controlp INFIELD stfb007
            {<point name="construct.c.page1.stfb007" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.stfb008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfb008
            #add-point:ON ACTION controlp INFIELD stfb008
            {<point name="construct.c.page1.stfb008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfb008
            #add-point:BEFORE FIELD stfb008
            {<point name="construct.b.page1.stfb008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfb008
            
            #add-point:AFTER FIELD stfb008
            {<point name="construct.a.page1.stfb008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stfb009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfb009
            #add-point:ON ACTION controlp INFIELD stfb009
            {<point name="construct.c.page1.stfb009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfb009
            #add-point:BEFORE FIELD stfb009
            {<point name="construct.b.page1.stfb009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfb009
            
            #add-point:AFTER FIELD stfb009
            {<point name="construct.a.page1.stfb009" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfb010
            #add-point:BEFORE FIELD stfb010
            {<point name="construct.b.page1.stfb010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfb010
            
            #add-point:AFTER FIELD stfb010
            {<point name="construct.a.page1.stfb010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stfb010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfb010
            #add-point:ON ACTION controlp INFIELD stfb010
            {<point name="construct.c.page1.stfb010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfb011
            #add-point:BEFORE FIELD stfb011
            {<point name="construct.b.page1.stfb011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfb011
            
            #add-point:AFTER FIELD stfb011
            {<point name="construct.a.page1.stfb011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stfb011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfb011
            #add-point:ON ACTION controlp INFIELD stfb011
            {<point name="construct.c.page1.stfb011" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfb012
            #add-point:BEFORE FIELD stfb012
            {<point name="construct.b.page1.stfb012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfb012
            
            #add-point:AFTER FIELD stfb012
            {<point name="construct.a.page1.stfb012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stfb012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfb012
            #add-point:ON ACTION controlp INFIELD stfb012
            {<point name="construct.c.page1.stfb012" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfb013
            #add-point:BEFORE FIELD stfb013
            {<point name="construct.b.page1.stfb013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfb013
            
            #add-point:AFTER FIELD stfb013
            {<point name="construct.a.page1.stfb013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stfb013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfb013
            #add-point:ON ACTION controlp INFIELD stfb013
            {<point name="construct.c.page1.stfb013" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfb014
            #add-point:BEFORE FIELD stfb014
            {<point name="construct.b.page1.stfb014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfb014
            
            #add-point:AFTER FIELD stfb014
            {<point name="construct.a.page1.stfb014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stfb014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfb014
            #add-point:ON ACTION controlp INFIELD stfb014
            {<point name="construct.c.page1.stfb014" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfb015
            #add-point:BEFORE FIELD stfb015
            {<point name="construct.b.page1.stfb015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfb015
            
            #add-point:AFTER FIELD stfb015
            {<point name="construct.a.page1.stfb015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stfb015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfb015
            #add-point:ON ACTION controlp INFIELD stfb015
            {<point name="construct.c.page1.stfb015" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfb016
            #add-point:BEFORE FIELD stfb016
            {<point name="construct.b.page1.stfb016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfb016
            
            #add-point:AFTER FIELD stfb016
            {<point name="construct.a.page1.stfb016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stfb016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfb016
            #add-point:ON ACTION controlp INFIELD stfb016
            {<point name="construct.c.page1.stfb016" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfb017
            #add-point:BEFORE FIELD stfb017
            {<point name="construct.b.page1.stfb017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfb017
            
            #add-point:AFTER FIELD stfb017
            {<point name="construct.a.page1.stfb017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stfb017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfb017
            #add-point:ON ACTION controlp INFIELD stfb017
            {<point name="construct.c.page1.stfb017" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfbsite
            #add-point:BEFORE FIELD stfbsite
            {<point name="construct.b.page1.stfbsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfbsite
            
            #add-point:AFTER FIELD stfbsite
            {<point name="construct.a.page1.stfbsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stfbsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfbsite
            #add-point:ON ACTION controlp INFIELD stfbsite
            {<point name="construct.c.page1.stfbsite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfbunit
            #add-point:BEFORE FIELD stfbunit
            {<point name="construct.b.page1.stfbunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfbunit
            
            #add-point:AFTER FIELD stfbunit
            {<point name="construct.a.page1.stfbunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.stfbunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfbunit
            #add-point:ON ACTION controlp INFIELD stfbunit
            {<point name="construct.c.page1.stfbunit" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON stfcseq,stfc002,stfc003,stfc024,stfc025,stfc004,stfc005,stfc006,stfc006_desc, 
          stfc007,stfc007_desc,stfc008,stfc009,stfc010,stfc011,stfc012,stfc013,stfc014,stfc015,stfc016, 
          stfc017,stfc018,stfc019,stfc020,stfc021,stfc022,stfc023,stfcsite,stfcunit
           FROM s_detail2[1].stfcseq,s_detail2[1].stfc002,s_detail2[1].stfc003,s_detail2[1].stfc024, 
               s_detail2[1].stfc025,s_detail2[1].stfc004,s_detail2[1].stfc005,s_detail2[1].stfc006,s_detail2[1].stfc006_desc, 
               s_detail2[1].stfc007,s_detail2[1].stfc007_desc,s_detail2[1].stfc008,s_detail2[1].stfc009, 
               s_detail2[1].stfc010,s_detail2[1].stfc011,s_detail2[1].stfc012,s_detail2[1].stfc013,s_detail2[1].stfc014, 
               s_detail2[1].stfc015,s_detail2[1].stfc016,s_detail2[1].stfc017,s_detail2[1].stfc018,s_detail2[1].stfc019, 
               s_detail2[1].stfc020,s_detail2[1].stfc021,s_detail2[1].stfc022,s_detail2[1].stfc023,s_detail2[1].stfcsite, 
               s_detail2[1].stfcunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfcseq
            #add-point:BEFORE FIELD stfcseq
            {<point name="construct.b.page2.stfcseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfcseq
            
            #add-point:AFTER FIELD stfcseq
            {<point name="construct.a.page2.stfcseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stfcseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfcseq
            #add-point:ON ACTION controlp INFIELD stfcseq
            {<point name="construct.c.page2.stfcseq" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.stfc002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc002
            #add-point:ON ACTION controlp INFIELD stfc002
            {<point name="construct.c.page2.stfc002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc002
            #add-point:BEFORE FIELD stfc002
            {<point name="construct.b.page2.stfc002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc002
            
            #add-point:AFTER FIELD stfc002
            {<point name="construct.a.page2.stfc002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc003
            #add-point:BEFORE FIELD stfc003
            {<point name="construct.b.page2.stfc003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc003
            
            #add-point:AFTER FIELD stfc003
            {<point name="construct.a.page2.stfc003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stfc003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc003
            #add-point:ON ACTION controlp INFIELD stfc003
            {<point name="construct.c.page2.stfc003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc024
            #add-point:BEFORE FIELD stfc024
            {<point name="construct.b.page2.stfc024" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc024
            
            #add-point:AFTER FIELD stfc024
            {<point name="construct.a.page2.stfc024" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stfc024
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc024
            #add-point:ON ACTION controlp INFIELD stfc024
            {<point name="construct.c.page2.stfc024" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc025
            #add-point:BEFORE FIELD stfc025
            {<point name="construct.b.page2.stfc025" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc025
            
            #add-point:AFTER FIELD stfc025
            {<point name="construct.a.page2.stfc025" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stfc025
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc025
            #add-point:ON ACTION controlp INFIELD stfc025
            {<point name="construct.c.page2.stfc025" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.stfc004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc004
            #add-point:ON ACTION controlp INFIELD stfc004
            {<point name="construct.c.page2.stfc004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc004
            #add-point:BEFORE FIELD stfc004
            {<point name="construct.b.page2.stfc004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc004
            
            #add-point:AFTER FIELD stfc004
            {<point name="construct.a.page2.stfc004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stfc005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc005
            #add-point:ON ACTION controlp INFIELD stfc005
            {<point name="construct.c.page2.stfc005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc005
            #add-point:BEFORE FIELD stfc005
            {<point name="construct.b.page2.stfc005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc005
            
            #add-point:AFTER FIELD stfc005
            {<point name="construct.a.page2.stfc005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stfc006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc006
            #add-point:ON ACTION controlp INFIELD stfc006
            {<point name="construct.c.page2.stfc006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc006
            #add-point:BEFORE FIELD stfc006
            {<point name="construct.b.page2.stfc006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc006
            
            #add-point:AFTER FIELD stfc006
            {<point name="construct.a.page2.stfc006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc006_desc
            #add-point:BEFORE FIELD stfc006_desc
            {<point name="construct.b.page2.stfc006_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc006_desc
            
            #add-point:AFTER FIELD stfc006_desc
            {<point name="construct.a.page2.stfc006_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stfc006_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc006_desc
            #add-point:ON ACTION controlp INFIELD stfc006_desc
            {<point name="construct.c.page2.stfc006_desc" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.stfc007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc007
            #add-point:ON ACTION controlp INFIELD stfc007
            {<point name="construct.c.page2.stfc007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc007
            #add-point:BEFORE FIELD stfc007
            {<point name="construct.b.page2.stfc007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc007
            
            #add-point:AFTER FIELD stfc007
            {<point name="construct.a.page2.stfc007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc007_desc
            #add-point:BEFORE FIELD stfc007_desc
            {<point name="construct.b.page2.stfc007_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc007_desc
            
            #add-point:AFTER FIELD stfc007_desc
            {<point name="construct.a.page2.stfc007_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stfc007_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc007_desc
            #add-point:ON ACTION controlp INFIELD stfc007_desc
            {<point name="construct.c.page2.stfc007_desc" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc008
            #add-point:BEFORE FIELD stfc008
            {<point name="construct.b.page2.stfc008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc008
            
            #add-point:AFTER FIELD stfc008
            {<point name="construct.a.page2.stfc008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stfc008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc008
            #add-point:ON ACTION controlp INFIELD stfc008
            {<point name="construct.c.page2.stfc008" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.stfc009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc009
            #add-point:ON ACTION controlp INFIELD stfc009
            {<point name="construct.c.page2.stfc009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc009
            #add-point:BEFORE FIELD stfc009
            {<point name="construct.b.page2.stfc009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc009
            
            #add-point:AFTER FIELD stfc009
            {<point name="construct.a.page2.stfc009" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc010
            #add-point:BEFORE FIELD stfc010
            {<point name="construct.b.page2.stfc010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc010
            
            #add-point:AFTER FIELD stfc010
            {<point name="construct.a.page2.stfc010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stfc010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc010
            #add-point:ON ACTION controlp INFIELD stfc010
            {<point name="construct.c.page2.stfc010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc011
            #add-point:BEFORE FIELD stfc011
            {<point name="construct.b.page2.stfc011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc011
            
            #add-point:AFTER FIELD stfc011
            {<point name="construct.a.page2.stfc011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stfc011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc011
            #add-point:ON ACTION controlp INFIELD stfc011
            {<point name="construct.c.page2.stfc011" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc012
            #add-point:BEFORE FIELD stfc012
            {<point name="construct.b.page2.stfc012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc012
            
            #add-point:AFTER FIELD stfc012
            {<point name="construct.a.page2.stfc012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stfc012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc012
            #add-point:ON ACTION controlp INFIELD stfc012
            {<point name="construct.c.page2.stfc012" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc013
            #add-point:BEFORE FIELD stfc013
            {<point name="construct.b.page2.stfc013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc013
            
            #add-point:AFTER FIELD stfc013
            {<point name="construct.a.page2.stfc013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stfc013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc013
            #add-point:ON ACTION controlp INFIELD stfc013
            {<point name="construct.c.page2.stfc013" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc014
            #add-point:BEFORE FIELD stfc014
            {<point name="construct.b.page2.stfc014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc014
            
            #add-point:AFTER FIELD stfc014
            {<point name="construct.a.page2.stfc014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stfc014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc014
            #add-point:ON ACTION controlp INFIELD stfc014
            {<point name="construct.c.page2.stfc014" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.stfc015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc015
            #add-point:ON ACTION controlp INFIELD stfc015
            {<point name="construct.c.page2.stfc015" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc015
            #add-point:BEFORE FIELD stfc015
            {<point name="construct.b.page2.stfc015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc015
            
            #add-point:AFTER FIELD stfc015
            {<point name="construct.a.page2.stfc015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stfc016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc016
            #add-point:ON ACTION controlp INFIELD stfc016
            {<point name="construct.c.page2.stfc016" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc016
            #add-point:BEFORE FIELD stfc016
            {<point name="construct.b.page2.stfc016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc016
            
            #add-point:AFTER FIELD stfc016
            {<point name="construct.a.page2.stfc016" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc017
            #add-point:BEFORE FIELD stfc017
            {<point name="construct.b.page2.stfc017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc017
            
            #add-point:AFTER FIELD stfc017
            {<point name="construct.a.page2.stfc017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stfc017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc017
            #add-point:ON ACTION controlp INFIELD stfc017
            {<point name="construct.c.page2.stfc017" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc018
            #add-point:BEFORE FIELD stfc018
            {<point name="construct.b.page2.stfc018" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc018
            
            #add-point:AFTER FIELD stfc018
            {<point name="construct.a.page2.stfc018" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stfc018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc018
            #add-point:ON ACTION controlp INFIELD stfc018
            {<point name="construct.c.page2.stfc018" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc019
            #add-point:BEFORE FIELD stfc019
            {<point name="construct.b.page2.stfc019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc019
            
            #add-point:AFTER FIELD stfc019
            {<point name="construct.a.page2.stfc019" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stfc019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc019
            #add-point:ON ACTION controlp INFIELD stfc019
            {<point name="construct.c.page2.stfc019" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc020
            #add-point:BEFORE FIELD stfc020
            {<point name="construct.b.page2.stfc020" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc020
            
            #add-point:AFTER FIELD stfc020
            {<point name="construct.a.page2.stfc020" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stfc020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc020
            #add-point:ON ACTION controlp INFIELD stfc020
            {<point name="construct.c.page2.stfc020" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc021
            #add-point:BEFORE FIELD stfc021
            {<point name="construct.b.page2.stfc021" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc021
            
            #add-point:AFTER FIELD stfc021
            {<point name="construct.a.page2.stfc021" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stfc021
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc021
            #add-point:ON ACTION controlp INFIELD stfc021
            {<point name="construct.c.page2.stfc021" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc022
            #add-point:BEFORE FIELD stfc022
            {<point name="construct.b.page2.stfc022" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc022
            
            #add-point:AFTER FIELD stfc022
            {<point name="construct.a.page2.stfc022" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stfc022
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc022
            #add-point:ON ACTION controlp INFIELD stfc022
            {<point name="construct.c.page2.stfc022" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc023
            #add-point:BEFORE FIELD stfc023
            {<point name="construct.b.page2.stfc023" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc023
            
            #add-point:AFTER FIELD stfc023
            {<point name="construct.a.page2.stfc023" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stfc023
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc023
            #add-point:ON ACTION controlp INFIELD stfc023
            {<point name="construct.c.page2.stfc023" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfcsite
            #add-point:BEFORE FIELD stfcsite
            {<point name="construct.b.page2.stfcsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfcsite
            
            #add-point:AFTER FIELD stfcsite
            {<point name="construct.a.page2.stfcsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stfcsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfcsite
            #add-point:ON ACTION controlp INFIELD stfcsite
            {<point name="construct.c.page2.stfcsite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfcunit
            #add-point:BEFORE FIELD stfcunit
            {<point name="construct.b.page2.stfcunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfcunit
            
            #add-point:AFTER FIELD stfcunit
            {<point name="construct.a.page2.stfcunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.stfcunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfcunit
            #add-point:ON ACTION controlp INFIELD stfcunit
            {<point name="construct.c.page2.stfcunit" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON stfe002,stfeseq,stfe003,stfe004,stfe005,stfe006,stfe007,stfe008,stfe009, 
          stfe010,stfe011,stfesite,stfeunit
           FROM s_detail3[1].stfe002,s_detail3[1].stfeseq,s_detail3[1].stfe003,s_detail3[1].stfe004, 
               s_detail3[1].stfe005,s_detail3[1].stfe006,s_detail3[1].stfe007,s_detail3[1].stfe008,s_detail3[1].stfe009, 
               s_detail3[1].stfe010,s_detail3[1].stfe011,s_detail3[1].stfesite,s_detail3[1].stfeunit 

                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body3.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfe002
            #add-point:BEFORE FIELD stfe002
            {<point name="construct.b.page3.stfe002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfe002
            
            #add-point:AFTER FIELD stfe002
            {<point name="construct.a.page3.stfe002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.stfe002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfe002
            #add-point:ON ACTION controlp INFIELD stfe002
            {<point name="construct.c.page3.stfe002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfeseq
            #add-point:BEFORE FIELD stfeseq
            {<point name="construct.b.page3.stfeseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfeseq
            
            #add-point:AFTER FIELD stfeseq
            {<point name="construct.a.page3.stfeseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.stfeseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfeseq
            #add-point:ON ACTION controlp INFIELD stfeseq
            {<point name="construct.c.page3.stfeseq" />}
            #END add-point
 
         #Ctrlp:construct.c.page3.stfe003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfe003
            #add-point:ON ACTION controlp INFIELD stfe003
            {<point name="construct.c.page3.stfe003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfe003
            #add-point:BEFORE FIELD stfe003
            {<point name="construct.b.page3.stfe003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfe003
            
            #add-point:AFTER FIELD stfe003
            {<point name="construct.a.page3.stfe003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfe004
            #add-point:BEFORE FIELD stfe004
            {<point name="construct.b.page3.stfe004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfe004
            
            #add-point:AFTER FIELD stfe004
            {<point name="construct.a.page3.stfe004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.stfe004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfe004
            #add-point:ON ACTION controlp INFIELD stfe004
            {<point name="construct.c.page3.stfe004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfe005
            #add-point:BEFORE FIELD stfe005
            {<point name="construct.b.page3.stfe005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfe005
            
            #add-point:AFTER FIELD stfe005
            {<point name="construct.a.page3.stfe005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.stfe005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfe005
            #add-point:ON ACTION controlp INFIELD stfe005
            {<point name="construct.c.page3.stfe005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfe006
            #add-point:BEFORE FIELD stfe006
            {<point name="construct.b.page3.stfe006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfe006
            
            #add-point:AFTER FIELD stfe006
            {<point name="construct.a.page3.stfe006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.stfe006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfe006
            #add-point:ON ACTION controlp INFIELD stfe006
            {<point name="construct.c.page3.stfe006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfe007
            #add-point:BEFORE FIELD stfe007
            {<point name="construct.b.page3.stfe007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfe007
            
            #add-point:AFTER FIELD stfe007
            {<point name="construct.a.page3.stfe007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.stfe007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfe007
            #add-point:ON ACTION controlp INFIELD stfe007
            {<point name="construct.c.page3.stfe007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfe008
            #add-point:BEFORE FIELD stfe008
            {<point name="construct.b.page3.stfe008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfe008
            
            #add-point:AFTER FIELD stfe008
            {<point name="construct.a.page3.stfe008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.stfe008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfe008
            #add-point:ON ACTION controlp INFIELD stfe008
            {<point name="construct.c.page3.stfe008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfe009
            #add-point:BEFORE FIELD stfe009
            {<point name="construct.b.page3.stfe009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfe009
            
            #add-point:AFTER FIELD stfe009
            {<point name="construct.a.page3.stfe009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.stfe009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfe009
            #add-point:ON ACTION controlp INFIELD stfe009
            {<point name="construct.c.page3.stfe009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfe010
            #add-point:BEFORE FIELD stfe010
            {<point name="construct.b.page3.stfe010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfe010
            
            #add-point:AFTER FIELD stfe010
            {<point name="construct.a.page3.stfe010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.stfe010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfe010
            #add-point:ON ACTION controlp INFIELD stfe010
            {<point name="construct.c.page3.stfe010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfe011
            #add-point:BEFORE FIELD stfe011
            {<point name="construct.b.page3.stfe011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfe011
            
            #add-point:AFTER FIELD stfe011
            {<point name="construct.a.page3.stfe011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.stfe011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfe011
            #add-point:ON ACTION controlp INFIELD stfe011
            {<point name="construct.c.page3.stfe011" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfesite
            #add-point:BEFORE FIELD stfesite
            {<point name="construct.b.page3.stfesite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfesite
            
            #add-point:AFTER FIELD stfesite
            {<point name="construct.a.page3.stfesite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.stfesite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfesite
            #add-point:ON ACTION controlp INFIELD stfesite
            {<point name="construct.c.page3.stfesite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfeunit
            #add-point:BEFORE FIELD stfeunit
            {<point name="construct.b.page3.stfeunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfeunit
            
            #add-point:AFTER FIELD stfeunit
            {<point name="construct.a.page3.stfeunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.stfeunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfeunit
            #add-point:ON ACTION controlp INFIELD stfeunit
            {<point name="construct.c.page3.stfeunit" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table4 ON stfgseq,stfg003,stfg003_desc,stfg002,stfg002_desc,stfg004,stfg005,stfgacti, 
          stfgsite,stfgunit
           FROM s_detail4[1].stfgseq,s_detail4[1].stfg003,s_detail4[1].stfg003_desc,s_detail4[1].stfg002, 
               s_detail4[1].stfg002_desc,s_detail4[1].stfg004,s_detail4[1].stfg005,s_detail4[1].stfgacti, 
               s_detail4[1].stfgsite,s_detail4[1].stfgunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body4.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 4)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfgseq
            #add-point:BEFORE FIELD stfgseq
            {<point name="construct.b.page4.stfgseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfgseq
            
            #add-point:AFTER FIELD stfgseq
            {<point name="construct.a.page4.stfgseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.stfgseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfgseq
            #add-point:ON ACTION controlp INFIELD stfgseq
            {<point name="construct.c.page4.stfgseq" />}
            #END add-point
 
         #Ctrlp:construct.c.page4.stfg003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfg003
            #add-point:ON ACTION controlp INFIELD stfg003
            {<point name="construct.c.page4.stfg003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfg003
            #add-point:BEFORE FIELD stfg003
            {<point name="construct.b.page4.stfg003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfg003
            
            #add-point:AFTER FIELD stfg003
            {<point name="construct.a.page4.stfg003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfg003_desc
            #add-point:BEFORE FIELD stfg003_desc
            {<point name="construct.b.page4.stfg003_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfg003_desc
            
            #add-point:AFTER FIELD stfg003_desc
            {<point name="construct.a.page4.stfg003_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.stfg003_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfg003_desc
            #add-point:ON ACTION controlp INFIELD stfg003_desc
            {<point name="construct.c.page4.stfg003_desc" />}
            #END add-point
 
         #Ctrlp:construct.c.page4.stfg002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfg002
            #add-point:ON ACTION controlp INFIELD stfg002
            {<point name="construct.c.page4.stfg002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfg002
            #add-point:BEFORE FIELD stfg002
            {<point name="construct.b.page4.stfg002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfg002
            
            #add-point:AFTER FIELD stfg002
            {<point name="construct.a.page4.stfg002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfg002_desc
            #add-point:BEFORE FIELD stfg002_desc
            {<point name="construct.b.page4.stfg002_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfg002_desc
            
            #add-point:AFTER FIELD stfg002_desc
            {<point name="construct.a.page4.stfg002_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.stfg002_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfg002_desc
            #add-point:ON ACTION controlp INFIELD stfg002_desc
            {<point name="construct.c.page4.stfg002_desc" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfg004
            #add-point:BEFORE FIELD stfg004
            {<point name="construct.b.page4.stfg004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfg004
            
            #add-point:AFTER FIELD stfg004
            {<point name="construct.a.page4.stfg004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.stfg004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfg004
            #add-point:ON ACTION controlp INFIELD stfg004
            {<point name="construct.c.page4.stfg004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfg005
            #add-point:BEFORE FIELD stfg005
            {<point name="construct.b.page4.stfg005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfg005
            
            #add-point:AFTER FIELD stfg005
            {<point name="construct.a.page4.stfg005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.stfg005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfg005
            #add-point:ON ACTION controlp INFIELD stfg005
            {<point name="construct.c.page4.stfg005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfgacti
            #add-point:BEFORE FIELD stfgacti
            {<point name="construct.b.page4.stfgacti" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfgacti
            
            #add-point:AFTER FIELD stfgacti
            {<point name="construct.a.page4.stfgacti" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.stfgacti
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfgacti
            #add-point:ON ACTION controlp INFIELD stfgacti
            {<point name="construct.c.page4.stfgacti" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfgsite
            #add-point:BEFORE FIELD stfgsite
            {<point name="construct.b.page4.stfgsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfgsite
            
            #add-point:AFTER FIELD stfgsite
            {<point name="construct.a.page4.stfgsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.stfgsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfgsite
            #add-point:ON ACTION controlp INFIELD stfgsite
            {<point name="construct.c.page4.stfgsite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfgunit
            #add-point:BEFORE FIELD stfgunit
            {<point name="construct.b.page4.stfgunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfgunit
            
            #add-point:AFTER FIELD stfgunit
            {<point name="construct.a.page4.stfgunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.stfgunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfgunit
            #add-point:ON ACTION controlp INFIELD stfgunit
            {<point name="construct.c.page4.stfgunit" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table5 ON stfhseq,stfh002,stfh003,stfhacti,stfhsite,stfhunit
           FROM s_detail5[1].stfhseq,s_detail5[1].stfh002,s_detail5[1].stfh003,s_detail5[1].stfhacti, 
               s_detail5[1].stfhsite,s_detail5[1].stfhunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body5.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 5)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfhseq
            #add-point:BEFORE FIELD stfhseq
            {<point name="construct.b.page5.stfhseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfhseq
            
            #add-point:AFTER FIELD stfhseq
            {<point name="construct.a.page5.stfhseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page5.stfhseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfhseq
            #add-point:ON ACTION controlp INFIELD stfhseq
            {<point name="construct.c.page5.stfhseq" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfh002
            #add-point:BEFORE FIELD stfh002
            {<point name="construct.b.page5.stfh002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfh002
            
            #add-point:AFTER FIELD stfh002
            {<point name="construct.a.page5.stfh002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page5.stfh002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfh002
            #add-point:ON ACTION controlp INFIELD stfh002
            {<point name="construct.c.page5.stfh002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfh003
            #add-point:BEFORE FIELD stfh003
            {<point name="construct.b.page5.stfh003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfh003
            
            #add-point:AFTER FIELD stfh003
            {<point name="construct.a.page5.stfh003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page5.stfh003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfh003
            #add-point:ON ACTION controlp INFIELD stfh003
            {<point name="construct.c.page5.stfh003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfhacti
            #add-point:BEFORE FIELD stfhacti
            {<point name="construct.b.page5.stfhacti" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfhacti
            
            #add-point:AFTER FIELD stfhacti
            {<point name="construct.a.page5.stfhacti" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page5.stfhacti
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfhacti
            #add-point:ON ACTION controlp INFIELD stfhacti
            {<point name="construct.c.page5.stfhacti" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfhsite
            #add-point:BEFORE FIELD stfhsite
            {<point name="construct.b.page5.stfhsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfhsite
            
            #add-point:AFTER FIELD stfhsite
            {<point name="construct.a.page5.stfhsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page5.stfhsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfhsite
            #add-point:ON ACTION controlp INFIELD stfhsite
            {<point name="construct.c.page5.stfhsite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfhunit
            #add-point:BEFORE FIELD stfhunit
            {<point name="construct.b.page5.stfhunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfhunit
            
            #add-point:AFTER FIELD stfhunit
            {<point name="construct.a.page5.stfhunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page5.stfhunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfhunit
            #add-point:ON ACTION controlp INFIELD stfhunit
            {<point name="construct.c.page5.stfhunit" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table6 ON stfiseq,stfi002,stfi003,stfi005,stfi006,stfi004,stfi007,stfi010,stfi008, 
          stfi009,stfiacti,stfisite,stfiunit
           FROM s_detail6[1].stfiseq,s_detail6[1].stfi002,s_detail6[1].stfi003,s_detail6[1].stfi005, 
               s_detail6[1].stfi006,s_detail6[1].stfi004,s_detail6[1].stfi007,s_detail6[1].stfi010,s_detail6[1].stfi008, 
               s_detail6[1].stfi009,s_detail6[1].stfiacti,s_detail6[1].stfisite,s_detail6[1].stfiunit 

                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body6.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 6)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfiseq
            #add-point:BEFORE FIELD stfiseq
            {<point name="construct.b.page6.stfiseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfiseq
            
            #add-point:AFTER FIELD stfiseq
            {<point name="construct.a.page6.stfiseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.stfiseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfiseq
            #add-point:ON ACTION controlp INFIELD stfiseq
            {<point name="construct.c.page6.stfiseq" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfi002
            #add-point:BEFORE FIELD stfi002
            {<point name="construct.b.page6.stfi002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfi002
            
            #add-point:AFTER FIELD stfi002
            {<point name="construct.a.page6.stfi002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.stfi002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfi002
            #add-point:ON ACTION controlp INFIELD stfi002
            {<point name="construct.c.page6.stfi002" />}
            #END add-point
 
         #Ctrlp:construct.c.page6.stfi003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfi003
            #add-point:ON ACTION controlp INFIELD stfi003
            {<point name="construct.c.page6.stfi003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfi003
            #add-point:BEFORE FIELD stfi003
            {<point name="construct.b.page6.stfi003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfi003
            
            #add-point:AFTER FIELD stfi003
            {<point name="construct.a.page6.stfi003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfi005
            #add-point:BEFORE FIELD stfi005
            {<point name="construct.b.page6.stfi005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfi005
            
            #add-point:AFTER FIELD stfi005
            {<point name="construct.a.page6.stfi005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.stfi005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfi005
            #add-point:ON ACTION controlp INFIELD stfi005
            {<point name="construct.c.page6.stfi005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfi006
            #add-point:BEFORE FIELD stfi006
            {<point name="construct.b.page6.stfi006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfi006
            
            #add-point:AFTER FIELD stfi006
            {<point name="construct.a.page6.stfi006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.stfi006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfi006
            #add-point:ON ACTION controlp INFIELD stfi006
            {<point name="construct.c.page6.stfi006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfi004
            #add-point:BEFORE FIELD stfi004
            {<point name="construct.b.page6.stfi004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfi004
            
            #add-point:AFTER FIELD stfi004
            {<point name="construct.a.page6.stfi004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.stfi004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfi004
            #add-point:ON ACTION controlp INFIELD stfi004
            {<point name="construct.c.page6.stfi004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfi007
            #add-point:BEFORE FIELD stfi007
            {<point name="construct.b.page6.stfi007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfi007
            
            #add-point:AFTER FIELD stfi007
            {<point name="construct.a.page6.stfi007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.stfi007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfi007
            #add-point:ON ACTION controlp INFIELD stfi007
            {<point name="construct.c.page6.stfi007" />}
            #END add-point
 
         #Ctrlp:construct.c.page6.stfi010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfi010
            #add-point:ON ACTION controlp INFIELD stfi010
            {<point name="construct.c.page6.stfi010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfi010
            #add-point:BEFORE FIELD stfi010
            {<point name="construct.b.page6.stfi010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfi010
            
            #add-point:AFTER FIELD stfi010
            {<point name="construct.a.page6.stfi010" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfi008
            #add-point:BEFORE FIELD stfi008
            {<point name="construct.b.page6.stfi008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfi008
            
            #add-point:AFTER FIELD stfi008
            {<point name="construct.a.page6.stfi008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.stfi008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfi008
            #add-point:ON ACTION controlp INFIELD stfi008
            {<point name="construct.c.page6.stfi008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfi009
            #add-point:BEFORE FIELD stfi009
            {<point name="construct.b.page6.stfi009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfi009
            
            #add-point:AFTER FIELD stfi009
            {<point name="construct.a.page6.stfi009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.stfi009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfi009
            #add-point:ON ACTION controlp INFIELD stfi009
            {<point name="construct.c.page6.stfi009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfiacti
            #add-point:BEFORE FIELD stfiacti
            {<point name="construct.b.page6.stfiacti" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfiacti
            
            #add-point:AFTER FIELD stfiacti
            {<point name="construct.a.page6.stfiacti" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.stfiacti
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfiacti
            #add-point:ON ACTION controlp INFIELD stfiacti
            {<point name="construct.c.page6.stfiacti" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfisite
            #add-point:BEFORE FIELD stfisite
            {<point name="construct.b.page6.stfisite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfisite
            
            #add-point:AFTER FIELD stfisite
            {<point name="construct.a.page6.stfisite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.stfisite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfisite
            #add-point:ON ACTION controlp INFIELD stfisite
            {<point name="construct.c.page6.stfisite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfiunit
            #add-point:BEFORE FIELD stfiunit
            {<point name="construct.b.page6.stfiunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfiunit
            
            #add-point:AFTER FIELD stfiunit
            {<point name="construct.a.page6.stfiunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page6.stfiunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfiunit
            #add-point:ON ACTION controlp INFIELD stfiunit
            {<point name="construct.c.page6.stfiunit" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table7 ON stfjseq,stfj002,stfj003,stfj004,stfj005,stfj006,stfjsite,stfjunit
           FROM s_detail7[1].stfjseq,s_detail7[1].stfj002,s_detail7[1].stfj003,s_detail7[1].stfj004, 
               s_detail7[1].stfj005,s_detail7[1].stfj006,s_detail7[1].stfjsite,s_detail7[1].stfjunit 

                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body7.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 7)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfjseq
            #add-point:BEFORE FIELD stfjseq
            {<point name="construct.b.page7.stfjseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfjseq
            
            #add-point:AFTER FIELD stfjseq
            {<point name="construct.a.page7.stfjseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.stfjseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfjseq
            #add-point:ON ACTION controlp INFIELD stfjseq
            {<point name="construct.c.page7.stfjseq" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfj002
            #add-point:BEFORE FIELD stfj002
            {<point name="construct.b.page7.stfj002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfj002
            
            #add-point:AFTER FIELD stfj002
            {<point name="construct.a.page7.stfj002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.stfj002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfj002
            #add-point:ON ACTION controlp INFIELD stfj002
            {<point name="construct.c.page7.stfj002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfj003
            #add-point:BEFORE FIELD stfj003
            {<point name="construct.b.page7.stfj003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfj003
            
            #add-point:AFTER FIELD stfj003
            {<point name="construct.a.page7.stfj003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.stfj003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfj003
            #add-point:ON ACTION controlp INFIELD stfj003
            {<point name="construct.c.page7.stfj003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfj004
            #add-point:BEFORE FIELD stfj004
            {<point name="construct.b.page7.stfj004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfj004
            
            #add-point:AFTER FIELD stfj004
            {<point name="construct.a.page7.stfj004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.stfj004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfj004
            #add-point:ON ACTION controlp INFIELD stfj004
            {<point name="construct.c.page7.stfj004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfj005
            #add-point:BEFORE FIELD stfj005
            {<point name="construct.b.page7.stfj005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfj005
            
            #add-point:AFTER FIELD stfj005
            {<point name="construct.a.page7.stfj005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.stfj005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfj005
            #add-point:ON ACTION controlp INFIELD stfj005
            {<point name="construct.c.page7.stfj005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfj006
            #add-point:BEFORE FIELD stfj006
            {<point name="construct.b.page7.stfj006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfj006
            
            #add-point:AFTER FIELD stfj006
            {<point name="construct.a.page7.stfj006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.stfj006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfj006
            #add-point:ON ACTION controlp INFIELD stfj006
            {<point name="construct.c.page7.stfj006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfjsite
            #add-point:BEFORE FIELD stfjsite
            {<point name="construct.b.page7.stfjsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfjsite
            
            #add-point:AFTER FIELD stfjsite
            {<point name="construct.a.page7.stfjsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.stfjsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfjsite
            #add-point:ON ACTION controlp INFIELD stfjsite
            {<point name="construct.c.page7.stfjsite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfjunit
            #add-point:BEFORE FIELD stfjunit
            {<point name="construct.b.page7.stfjunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfjunit
            
            #add-point:AFTER FIELD stfjunit
            {<point name="construct.a.page7.stfjunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page7.stfjunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfjunit
            #add-point:ON ACTION controlp INFIELD stfjunit
            {<point name="construct.c.page7.stfjunit" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
      
      CONSTRUCT g_wc2_table8 ON stfdseq1,stfd002,stfd003,stfd004,stfd005,stfd006,stfd007,stfd008,stfdsite, 
          stfdunit
           FROM s_detail8[1].stfdseq1,s_detail8[1].stfd002,s_detail8[1].stfd003,s_detail8[1].stfd004, 
               s_detail8[1].stfd005,s_detail8[1].stfd006,s_detail8[1].stfd007,s_detail8[1].stfd008,s_detail8[1].stfdsite, 
               s_detail8[1].stfdunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body8.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 8)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfdseq1
            #add-point:BEFORE FIELD stfdseq1
            {<point name="construct.b.page8.stfdseq1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfdseq1
            
            #add-point:AFTER FIELD stfdseq1
            {<point name="construct.a.page8.stfdseq1" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page8.stfdseq1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfdseq1
            #add-point:ON ACTION controlp INFIELD stfdseq1
            {<point name="construct.c.page8.stfdseq1" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfd002
            #add-point:BEFORE FIELD stfd002
            {<point name="construct.b.page8.stfd002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfd002
            
            #add-point:AFTER FIELD stfd002
            {<point name="construct.a.page8.stfd002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page8.stfd002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfd002
            #add-point:ON ACTION controlp INFIELD stfd002
            {<point name="construct.c.page8.stfd002" />}
            #END add-point
 
         #Ctrlp:construct.c.page8.stfd003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfd003
            #add-point:ON ACTION controlp INFIELD stfd003
            {<point name="construct.c.page8.stfd003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfd003
            #add-point:BEFORE FIELD stfd003
            {<point name="construct.b.page8.stfd003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfd003
            
            #add-point:AFTER FIELD stfd003
            {<point name="construct.a.page8.stfd003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page8.stfd004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfd004
            #add-point:ON ACTION controlp INFIELD stfd004
            {<point name="construct.c.page8.stfd004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfd004
            #add-point:BEFORE FIELD stfd004
            {<point name="construct.b.page8.stfd004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfd004
            
            #add-point:AFTER FIELD stfd004
            {<point name="construct.a.page8.stfd004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfd005
            #add-point:BEFORE FIELD stfd005
            {<point name="construct.b.page8.stfd005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfd005
            
            #add-point:AFTER FIELD stfd005
            {<point name="construct.a.page8.stfd005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page8.stfd005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfd005
            #add-point:ON ACTION controlp INFIELD stfd005
            {<point name="construct.c.page8.stfd005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfd006
            #add-point:BEFORE FIELD stfd006
            {<point name="construct.b.page8.stfd006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfd006
            
            #add-point:AFTER FIELD stfd006
            {<point name="construct.a.page8.stfd006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page8.stfd006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfd006
            #add-point:ON ACTION controlp INFIELD stfd006
            {<point name="construct.c.page8.stfd006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfd007
            #add-point:BEFORE FIELD stfd007
            {<point name="construct.b.page8.stfd007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfd007
            
            #add-point:AFTER FIELD stfd007
            {<point name="construct.a.page8.stfd007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page8.stfd007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfd007
            #add-point:ON ACTION controlp INFIELD stfd007
            {<point name="construct.c.page8.stfd007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfd008
            #add-point:BEFORE FIELD stfd008
            {<point name="construct.b.page8.stfd008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfd008
            
            #add-point:AFTER FIELD stfd008
            {<point name="construct.a.page8.stfd008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page8.stfd008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfd008
            #add-point:ON ACTION controlp INFIELD stfd008
            {<point name="construct.c.page8.stfd008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfdsite
            #add-point:BEFORE FIELD stfdsite
            {<point name="construct.b.page8.stfdsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfdsite
            
            #add-point:AFTER FIELD stfdsite
            {<point name="construct.a.page8.stfdsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page8.stfdsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfdsite
            #add-point:ON ACTION controlp INFIELD stfdsite
            {<point name="construct.c.page8.stfdsite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfdunit
            #add-point:BEFORE FIELD stfdunit
            {<point name="construct.b.page8.stfdunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfdunit
            
            #add-point:AFTER FIELD stfdunit
            {<point name="construct.a.page8.stfdunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page8.stfdunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfdunit
            #add-point:ON ACTION controlp INFIELD stfdunit
            {<point name="construct.c.page8.stfdunit" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table9 ON stff003,stff004,stff005,stff006,stff007,stff008,stff009,stffsite,stffunit 

           FROM s_detail9[1].stff003,s_detail9[1].stff004,s_detail9[1].stff005,s_detail9[1].stff006, 
               s_detail9[1].stff007,s_detail9[1].stff008,s_detail9[1].stff009,s_detail9[1].stffsite, 
               s_detail9[1].stffunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body9.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 9)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stff003
            #add-point:BEFORE FIELD stff003
            {<point name="construct.b.page9.stff003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stff003
            
            #add-point:AFTER FIELD stff003
            {<point name="construct.a.page9.stff003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page9.stff003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stff003
            #add-point:ON ACTION controlp INFIELD stff003
            {<point name="construct.c.page9.stff003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stff004
            #add-point:BEFORE FIELD stff004
            {<point name="construct.b.page9.stff004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stff004
            
            #add-point:AFTER FIELD stff004
            {<point name="construct.a.page9.stff004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page9.stff004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stff004
            #add-point:ON ACTION controlp INFIELD stff004
            {<point name="construct.c.page9.stff004" />}
            #END add-point
 
         #Ctrlp:construct.c.page9.stff005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stff005
            #add-point:ON ACTION controlp INFIELD stff005
            {<point name="construct.c.page9.stff005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stff005
            #add-point:BEFORE FIELD stff005
            {<point name="construct.b.page9.stff005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stff005
            
            #add-point:AFTER FIELD stff005
            {<point name="construct.a.page9.stff005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stff006
            #add-point:BEFORE FIELD stff006
            {<point name="construct.b.page9.stff006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stff006
            
            #add-point:AFTER FIELD stff006
            {<point name="construct.a.page9.stff006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page9.stff006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stff006
            #add-point:ON ACTION controlp INFIELD stff006
            {<point name="construct.c.page9.stff006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stff007
            #add-point:BEFORE FIELD stff007
            {<point name="construct.b.page9.stff007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stff007
            
            #add-point:AFTER FIELD stff007
            {<point name="construct.a.page9.stff007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page9.stff007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stff007
            #add-point:ON ACTION controlp INFIELD stff007
            {<point name="construct.c.page9.stff007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stff008
            #add-point:BEFORE FIELD stff008
            {<point name="construct.b.page9.stff008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stff008
            
            #add-point:AFTER FIELD stff008
            {<point name="construct.a.page9.stff008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page9.stff008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stff008
            #add-point:ON ACTION controlp INFIELD stff008
            {<point name="construct.c.page9.stff008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stff009
            #add-point:BEFORE FIELD stff009
            {<point name="construct.b.page9.stff009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stff009
            
            #add-point:AFTER FIELD stff009
            {<point name="construct.a.page9.stff009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page9.stff009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stff009
            #add-point:ON ACTION controlp INFIELD stff009
            {<point name="construct.c.page9.stff009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stffsite
            #add-point:BEFORE FIELD stffsite
            {<point name="construct.b.page9.stffsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stffsite
            
            #add-point:AFTER FIELD stffsite
            {<point name="construct.a.page9.stffsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page9.stffsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stffsite
            #add-point:ON ACTION controlp INFIELD stffsite
            {<point name="construct.c.page9.stffsite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stffunit
            #add-point:BEFORE FIELD stffunit
            {<point name="construct.b.page9.stffunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stffunit
            
            #add-point:AFTER FIELD stffunit
            {<point name="construct.a.page9.stffunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page9.stffunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stffunit
            #add-point:ON ACTION controlp INFIELD stffunit
            {<point name="construct.c.page9.stffunit" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
            INITIALIZE g_wc2_table2 TO NULL
 
            INITIALIZE g_wc2_table3 TO NULL
 
            INITIALIZE g_wc2_table4 TO NULL
 
            INITIALIZE g_wc2_table5 TO NULL
 
            INITIALIZE g_wc2_table6 TO NULL
 
            INITIALIZE g_wc2_table7 TO NULL
 
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "stfa_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "stfb_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "stfc_t" 
                     LET g_wc2_table2 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "stfe_t" 
                     LET g_wc2_table3 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "stfg_t" 
                     LET g_wc2_table4 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "stfh_t" 
                     LET g_wc2_table5 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "stfi_t" 
                     LET g_wc2_table6 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "stfj_t" 
                     LET g_wc2_table7 = la_wc[li_idx].wc
 
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
   IF g_wc2_table4 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
   END IF
 
   IF g_wc2_table5 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
   END IF
 
   IF g_wc2_table6 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
   END IF
 
   IF g_wc2_table7 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
   END IF
 
 
 
   IF g_wc2_table8 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table8
   END IF
 
   IF g_wc2_table9 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table9
   END IF
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="astm401.default_search" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION astm401_default_search()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point  
   #add-point:default_search段define(客製用)
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " stfa001 = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
         INITIALIZE g_wc2_table2 TO NULL
 
         INITIALIZE g_wc2_table3 TO NULL
 
         INITIALIZE g_wc2_table4 TO NULL
 
         INITIALIZE g_wc2_table5 TO NULL
 
         INITIALIZE g_wc2_table6 TO NULL
 
         INITIALIZE g_wc2_table7 TO NULL
 
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "stfa_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "stfb_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "stfc_t" 
                  LET g_wc2_table2 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "stfe_t" 
                  LET g_wc2_table3 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "stfg_t" 
                  LET g_wc2_table4 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "stfh_t" 
                  LET g_wc2_table5 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "stfi_t" 
                  LET g_wc2_table6 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "stfj_t" 
                  LET g_wc2_table7 = la_wc[li_idx].wc
 
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
            OR NOT cl_null(g_wc2_table2)
 
            OR NOT cl_null(g_wc2_table3)
 
            OR NOT cl_null(g_wc2_table4)
 
            OR NOT cl_null(g_wc2_table5)
 
            OR NOT cl_null(g_wc2_table6)
 
            OR NOT cl_null(g_wc2_table7)
 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
            IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
            END IF
 
            IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
            END IF
 
            IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
            END IF
 
            IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
            END IF
 
            IF g_wc2_table6 <> " 1=1" AND NOT cl_null(g_wc2_table6) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
            END IF
 
            IF g_wc2_table7 <> " 1=1" AND NOT cl_null(g_wc2_table7) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
            END IF
 
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
]]>
  </section>
  <section id="astm401.delete" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION astm401_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define" edit="s"/>}
   #end add-point     
   #add-point:delete段define(客製用)
   {<point name="delete.define_customerization" edit="c"/>}
   #end add-point     
   
   IF g_stfa_m.stfa001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   LET g_master_multi_table_t.stfal001 = g_stfa_m.stfa001
LET g_master_multi_table_t.stfal003 = g_stfa_m.stfal003
LET g_master_multi_table_t.stfal004 = g_stfa_m.stfal004
 
   
   CALL s_transaction_begin()
 
   OPEN astm401_cl USING g_enterprise,g_stfa_m.stfa001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN astm401_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE astm401_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE astm401_master_referesh USING g_stfa_m.stfa001 INTO g_stfa_m.stfaunit,g_stfa_m.stfasite,g_stfa_m.stfa001, 
       g_stfa_m.stfa002,g_stfa_m.stfa003,g_stfa_m.stfa004,g_stfa_m.stfa009,g_stfa_m.stfastus,g_stfa_m.stfa005, 
       g_stfa_m.stfa006,g_stfa_m.stfa007,g_stfa_m.stfa008,g_stfa_m.stfa047,g_stfa_m.stfa048,g_stfa_m.stfa044, 
       g_stfa_m.stfa010,g_stfa_m.stfa011,g_stfa_m.stfa012,g_stfa_m.stfa013,g_stfa_m.stfa014,g_stfa_m.stfa015, 
       g_stfa_m.stfa016,g_stfa_m.stfa045,g_stfa_m.stfa046,g_stfa_m.stfa029,g_stfa_m.stfa030,g_stfa_m.stfa032, 
       g_stfa_m.stfa033,g_stfa_m.stfa034,g_stfa_m.stfa035,g_stfa_m.stfa036,g_stfa_m.stfa037,g_stfa_m.stfa038, 
       g_stfa_m.stfa039,g_stfa_m.stfa040,g_stfa_m.stfa028,g_stfa_m.stfa017,g_stfa_m.stfa021,g_stfa_m.stfa024, 
       g_stfa_m.stfa018,g_stfa_m.stfa049,g_stfa_m.stfa025,g_stfa_m.stfa019,g_stfa_m.stfa022,g_stfa_m.stfa026, 
       g_stfa_m.stfa020,g_stfa_m.stfa023,g_stfa_m.stfa027,g_stfa_m.stfa031,g_stfa_m.stfa042,g_stfa_m.stfaownid, 
       g_stfa_m.stfaowndp,g_stfa_m.stfacrtid,g_stfa_m.stfacrtdp,g_stfa_m.stfacrtdt,g_stfa_m.stfamodid, 
       g_stfa_m.stfamoddt,g_stfa_m.stfacnfid,g_stfa_m.stfacnfdt,g_stfa_m.stfaunit_desc,g_stfa_m.stfasite_desc, 
       g_stfa_m.stfa006_desc,g_stfa_m.stfa047_desc,g_stfa_m.stfa048_desc,g_stfa_m.stfa044_desc,g_stfa_m.stfa010_desc, 
       g_stfa_m.stfa011_desc,g_stfa_m.stfa012_desc,g_stfa_m.stfa013_desc,g_stfa_m.stfa014_desc,g_stfa_m.stfa015_desc, 
       g_stfa_m.stfa045_desc,g_stfa_m.stfa032_desc,g_stfa_m.stfa035_desc,g_stfa_m.stfa036_desc,g_stfa_m.stfa037_desc, 
       g_stfa_m.stfa038_desc,g_stfa_m.stfaownid_desc,g_stfa_m.stfaowndp_desc,g_stfa_m.stfacrtid_desc, 
       g_stfa_m.stfacrtdp_desc,g_stfa_m.stfamodid_desc,g_stfa_m.stfacnfid_desc
   
   #檢查是否允許此動作
   IF NOT astm401_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_stfa_m_mask_o.* =  g_stfa_m.*
   CALL astm401_stfa_t_mask()
   LET g_stfa_m_mask_n.* =  g_stfa_m.*
   
   CALL astm401_show()
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL astm401_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
  
  
      #資料備份
      LET g_stfa001_t = g_stfa_m.stfa001
 
 
      DELETE FROM stfa_t
       WHERE stfaent = g_enterprise AND stfa001 = g_stfa_m.stfa001
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_stfa_m.stfa001 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM stfb_t
       WHERE stfbent = g_enterprise AND stfb001 = g_stfa_m.stfa001
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfb_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM stfc_t
       WHERE stfcent = g_enterprise AND
             stfc001 = g_stfa_m.stfa001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfc_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete3" mark="Y"/>}
      #end add-point
      DELETE FROM stfe_t
       WHERE stfeent = g_enterprise AND
             stfe001 = g_stfa_m.stfa001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfe_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete3"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete4" mark="Y"/>}
      #end add-point
      DELETE FROM stfg_t
       WHERE stfgent = g_enterprise AND
             stfg001 = g_stfa_m.stfa001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete4"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfg_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete4"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete5" mark="Y"/>}
      #end add-point
      DELETE FROM stfh_t
       WHERE stfhent = g_enterprise AND
             stfh001 = g_stfa_m.stfa001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete5"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfh_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete5"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete6" mark="Y"/>}
      #end add-point
      DELETE FROM stfi_t
       WHERE stfient = g_enterprise AND
             stfi001 = g_stfa_m.stfa001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete6"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfi_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete6"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete7" mark="Y"/>}
      #end add-point
      DELETE FROM stfj_t
       WHERE stfjent = g_enterprise AND
             stfj001 = g_stfa_m.stfa001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete7"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfj_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete7"/>}
      #end add-point
 
 
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete8" mark="Y"/>}
      #end add-point
      DELETE FROM stfd_t
       WHERE stfdent = g_enterprise AND
             stfd001 = g_stfa_m.stfa001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete8"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfd_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete8"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete9" mark="Y"/>}
      #end add-point
      DELETE FROM stff_t
       WHERE stffent = g_enterprise AND
             stff001 = g_stfa_m.stfa001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete9"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stff_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete9"/>}
      #end add-point
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE astm401_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_stfb_d.clear() 
      CALL g_stfb2_d.clear()       
      CALL g_stfb3_d.clear()       
      CALL g_stfb4_d.clear()       
      CALL g_stfb5_d.clear()       
      CALL g_stfb6_d.clear()       
      CALL g_stfb7_d.clear()       
      CALL g_stfb8_d.clear()       
      CALL g_stfb9_d.clear()       
 
     
      CALL astm401_ui_browser_refresh()  
      #CALL astm401_ui_headershow()  
      #CALL astm401_ui_detailshow()
      
      IF g_browser_cnt > 0 THEN 
         #CALL astm401_browser_fill("")
         CALL astm401_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
 
      #add-point:多語言刪除
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_enterprise
   LET l_field_keys[01] = 'stfalent'
   LET l_var_keys_bak[02] = g_master_multi_table_t.stfal001
   LET l_field_keys[02] = 'stfal001'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'stfal_t')
 
      
      #單身多語言刪除
      
      
 
      
 
      
 
      
 
      
 
      
 
 
      
 
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   CLOSE astm401_cl
 
   #功能已完成,通報訊息中心
   CALL astm401_msgcentre_notify('')
    
END FUNCTION
]]>
  </section>
  <section id="astm401.delete_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION astm401_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define(客製用)
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point     
 
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM stfb_t
       WHERE stfbent = g_enterprise AND
         stfb001 = ps_keys_bak[1] AND stfbseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_stfb_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM stfc_t
       WHERE stfcent = g_enterprise AND
             stfc001 = ps_keys_bak[1] AND stfcseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfc_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_stfb2_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete3" mark="Y"/>}
      #end add-point    
      DELETE FROM stfe_t
       WHERE stfeent = g_enterprise AND
             stfe001 = ps_keys_bak[1] AND stfeseq = ps_keys_bak[2] AND stfe002 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete3"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfe_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_stfb3_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete3"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete4" mark="Y"/>}
      #end add-point    
      DELETE FROM stfg_t
       WHERE stfgent = g_enterprise AND
             stfg001 = ps_keys_bak[1] AND stfgseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete4"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfg_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_stfb4_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete4"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete5" mark="Y"/>}
      #end add-point    
      DELETE FROM stfh_t
       WHERE stfhent = g_enterprise AND
             stfh001 = ps_keys_bak[1] AND stfhseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete5"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfh_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'5'" THEN 
         CALL g_stfb5_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete5"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'6',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete6" mark="Y"/>}
      #end add-point    
      DELETE FROM stfi_t
       WHERE stfient = g_enterprise AND
             stfi001 = ps_keys_bak[1] AND stfiseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete6"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfi_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'6'" THEN 
         CALL g_stfb6_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete6"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'7',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete7" mark="Y"/>}
      #end add-point    
      DELETE FROM stfj_t
       WHERE stfjent = g_enterprise AND
             stfj001 = ps_keys_bak[1] AND stfjseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete7"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfj_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'7'" THEN 
         CALL g_stfb7_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete7"/>}
      #end add-point    
   END IF
 
 
   
   LET ls_group = "'8',"
   #判斷是否是同一群組的table2
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete8" mark="Y"/>}
      #end add-point    
      DELETE FROM stfd_t
       WHERE stfdent = g_enterprise AND
             stfd001 = ps_keys_bak[1] AND stfdseq = ps_keys_bak[2] AND stfdseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete8"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfd_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
    
      LET li_idx = g_detail_idx2
      IF ps_page <> "'8'" THEN 
         CALL g_stfb8_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete8"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'9',"
   #判斷是否是同一群組的table2
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete9" mark="Y"/>}
      #end add-point    
      DELETE FROM stff_t
       WHERE stffent = g_enterprise AND
             stff001 = ps_keys_bak[1] AND stffseq = ps_keys_bak[2] AND stff002 = ps_keys_bak[3] AND stff003 = ps_keys_bak[4]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete9"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stff_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
    
      LET li_idx = g_detail_idx2
      IF ps_page <> "'9'" THEN 
         CALL g_stfb9_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete9"/>}
      #end add-point    
   END IF
 
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="astm401.description" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000006
#+ 
#+ Filename...: astm401
#+ Description: 專櫃合同維護作業
#+ Creator....: 01533(2015-05-05 22:16:09)
#+ Modifier...: 01533(2015-05-13 10:08:48) -SD/PR-
]]>
  </section>
  <section id="astm401.detail_reproduce" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION astm401_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE stfb_t.*
   DEFINE l_detail2    RECORD LIKE stfc_t.*
 
   DEFINE l_detail3    RECORD LIKE stfe_t.*
 
   DEFINE l_detail4    RECORD LIKE stfg_t.*
 
   DEFINE l_detail5    RECORD LIKE stfh_t.*
 
   DEFINE l_detail6    RECORD LIKE stfi_t.*
 
   DEFINE l_detail7    RECORD LIKE stfj_t.*
 
 
   DEFINE l_detail8    RECORD LIKE stfd_t.*
 
   DEFINE l_detail9    RECORD LIKE stff_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define" edit="s"/>}
   #end add-point    
   #add-point:delete段define(客製用)
   {<point name="detail_reproduce.define_customerization" edit="c"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE astm401_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE astm401_detail AS ",
                "SELECT * FROM stfb_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO astm401_detail SELECT * FROM stfb_t 
                                         WHERE stfbent = g_enterprise AND stfb001 = g_stfa001_t
 
   
   #將key修正為調整後   
   UPDATE astm401_detail 
      #更新key欄位
      SET stfb001 = g_stfa_m.stfa001
 
      #更新共用欄位
      
 
   #add-point:單身修改前
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO stfb_t SELECT * FROM astm401_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astm401_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE astm401_detail AS ",
      "SELECT * FROM stfc_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO astm401_detail SELECT * FROM stfc_t
                                         WHERE stfcent = g_enterprise AND stfc001 = g_stfa001_t
 
 
   #將key修正為調整後   
   UPDATE astm401_detail SET stfc001 = g_stfa_m.stfa001
 
  
   #將資料塞回原table   
   INSERT INTO stfc_t SELECT * FROM astm401_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astm401_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table3.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE astm401_detail AS ",
      "SELECT * FROM stfe_t "
   PREPARE repro_tbl3 FROM ls_sql
   EXECUTE repro_tbl3
   FREE repro_tbl3
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO astm401_detail SELECT * FROM stfe_t
                                         WHERE stfeent = g_enterprise AND stfe001 = g_stfa001_t
 
 
   #將key修正為調整後   
   UPDATE astm401_detail SET stfe001 = g_stfa_m.stfa001
 
  
   #將資料塞回原table   
   INSERT INTO stfe_t SELECT * FROM astm401_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table3.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astm401_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table3.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table4.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE astm401_detail AS ",
      "SELECT * FROM stfg_t "
   PREPARE repro_tbl4 FROM ls_sql
   EXECUTE repro_tbl4
   FREE repro_tbl4
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO astm401_detail SELECT * FROM stfg_t
                                         WHERE stfgent = g_enterprise AND stfg001 = g_stfa001_t
 
 
   #將key修正為調整後   
   UPDATE astm401_detail SET stfg001 = g_stfa_m.stfa001
 
  
   #將資料塞回原table   
   INSERT INTO stfg_t SELECT * FROM astm401_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table4.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astm401_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table4.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table5.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE astm401_detail AS ",
      "SELECT * FROM stfh_t "
   PREPARE repro_tbl5 FROM ls_sql
   EXECUTE repro_tbl5
   FREE repro_tbl5
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO astm401_detail SELECT * FROM stfh_t
                                         WHERE stfhent = g_enterprise AND stfh001 = g_stfa001_t
 
 
   #將key修正為調整後   
   UPDATE astm401_detail SET stfh001 = g_stfa_m.stfa001
 
  
   #將資料塞回原table   
   INSERT INTO stfh_t SELECT * FROM astm401_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table5.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astm401_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table5.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table6.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE astm401_detail AS ",
      "SELECT * FROM stfi_t "
   PREPARE repro_tbl6 FROM ls_sql
   EXECUTE repro_tbl6
   FREE repro_tbl6
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO astm401_detail SELECT * FROM stfi_t
                                         WHERE stfient = g_enterprise AND stfi001 = g_stfa001_t
 
 
   #將key修正為調整後   
   UPDATE astm401_detail SET stfi001 = g_stfa_m.stfa001
 
  
   #將資料塞回原table   
   INSERT INTO stfi_t SELECT * FROM astm401_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table6.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astm401_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table6.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table7.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE astm401_detail AS ",
      "SELECT * FROM stfj_t "
   PREPARE repro_tbl7 FROM ls_sql
   EXECUTE repro_tbl7
   FREE repro_tbl7
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO astm401_detail SELECT * FROM stfj_t
                                         WHERE stfjent = g_enterprise AND stfj001 = g_stfa001_t
 
 
   #將key修正為調整後   
   UPDATE astm401_detail SET stfj001 = g_stfa_m.stfa001
 
  
   #將資料塞回原table   
   INSERT INTO stfj_t SELECT * FROM astm401_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table7.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astm401_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table7.a_insert"/>}
   #end add-point
 
 
   
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table8.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE astm401_detail AS ",
      "SELECT * FROM stfd_t "
   PREPARE repro_tbl8 FROM ls_sql
   EXECUTE repro_tbl8
   FREE repro_tbl8
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO astm401_detail SELECT * FROM stfd_t
                                         WHERE stfdent = g_enterprise AND stfd001 = g_stfa001_t
 
 
   #將key修正為調整後   
   UPDATE astm401_detail SET stfd001 = g_stfa_m.stfa001
 
  
   #將資料塞回原table   
   INSERT INTO stfd_t SELECT * FROM astm401_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table8.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astm401_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table8.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table9.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE astm401_detail AS ",
      "SELECT * FROM stff_t "
   PREPARE repro_tbl9 FROM ls_sql
   EXECUTE repro_tbl9
   FREE repro_tbl9
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO astm401_detail SELECT * FROM stff_t
                                         WHERE stffent = g_enterprise AND stff001 = g_stfa001_t
 
 
   #將key修正為調整後   
   UPDATE astm401_detail SET stff001 = g_stfa_m.stfa001
 
  
   #將資料塞回原table   
   INSERT INTO stff_t SELECT * FROM astm401_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table9.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astm401_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table9.a_insert"/>}
   #end add-point
 
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_stfa001_t = g_stfa_m.stfa001
 
   
END FUNCTION
]]>
  </section>
  <section id="astm401.detail_show" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION astm401_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define" edit="s"/>}
   #end add-point  
   #add-point:detail_show段define(客製用)
   {<point name="detail_show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="astm401.fetch" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION astm401_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define" edit="s"/>}
   #end add-point    
   #add-point:fetch段define(客製用)
   {<point name="fetch.define_customerization" edit="c"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_stfa_m.stfa001 = g_browser[g_current_idx].b_stfa001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE astm401_master_referesh USING g_stfa_m.stfa001 INTO g_stfa_m.stfaunit,g_stfa_m.stfasite,g_stfa_m.stfa001, 
       g_stfa_m.stfa002,g_stfa_m.stfa003,g_stfa_m.stfa004,g_stfa_m.stfa009,g_stfa_m.stfastus,g_stfa_m.stfa005, 
       g_stfa_m.stfa006,g_stfa_m.stfa007,g_stfa_m.stfa008,g_stfa_m.stfa047,g_stfa_m.stfa048,g_stfa_m.stfa044, 
       g_stfa_m.stfa010,g_stfa_m.stfa011,g_stfa_m.stfa012,g_stfa_m.stfa013,g_stfa_m.stfa014,g_stfa_m.stfa015, 
       g_stfa_m.stfa016,g_stfa_m.stfa045,g_stfa_m.stfa046,g_stfa_m.stfa029,g_stfa_m.stfa030,g_stfa_m.stfa032, 
       g_stfa_m.stfa033,g_stfa_m.stfa034,g_stfa_m.stfa035,g_stfa_m.stfa036,g_stfa_m.stfa037,g_stfa_m.stfa038, 
       g_stfa_m.stfa039,g_stfa_m.stfa040,g_stfa_m.stfa028,g_stfa_m.stfa017,g_stfa_m.stfa021,g_stfa_m.stfa024, 
       g_stfa_m.stfa018,g_stfa_m.stfa049,g_stfa_m.stfa025,g_stfa_m.stfa019,g_stfa_m.stfa022,g_stfa_m.stfa026, 
       g_stfa_m.stfa020,g_stfa_m.stfa023,g_stfa_m.stfa027,g_stfa_m.stfa031,g_stfa_m.stfa042,g_stfa_m.stfaownid, 
       g_stfa_m.stfaowndp,g_stfa_m.stfacrtid,g_stfa_m.stfacrtdp,g_stfa_m.stfacrtdt,g_stfa_m.stfamodid, 
       g_stfa_m.stfamoddt,g_stfa_m.stfacnfid,g_stfa_m.stfacnfdt,g_stfa_m.stfaunit_desc,g_stfa_m.stfasite_desc, 
       g_stfa_m.stfa006_desc,g_stfa_m.stfa047_desc,g_stfa_m.stfa048_desc,g_stfa_m.stfa044_desc,g_stfa_m.stfa010_desc, 
       g_stfa_m.stfa011_desc,g_stfa_m.stfa012_desc,g_stfa_m.stfa013_desc,g_stfa_m.stfa014_desc,g_stfa_m.stfa015_desc, 
       g_stfa_m.stfa045_desc,g_stfa_m.stfa032_desc,g_stfa_m.stfa035_desc,g_stfa_m.stfa036_desc,g_stfa_m.stfa037_desc, 
       g_stfa_m.stfa038_desc,g_stfa_m.stfaownid_desc,g_stfa_m.stfaowndp_desc,g_stfa_m.stfacrtid_desc, 
       g_stfa_m.stfacrtdp_desc,g_stfa_m.stfamodid_desc,g_stfa_m.stfacnfid_desc
   
   #遮罩相關處理
   LET g_stfa_m_mask_o.* =  g_stfa_m.*
   CALL astm401_stfa_t_mask()
   LET g_stfa_m_mask_n.* =  g_stfa_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL astm401_set_act_visible()   
   CALL astm401_set_act_no_visible()
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_stfa_m_t.* = g_stfa_m.*
   LET g_stfa_m_o.* = g_stfa_m.*
   
   LET g_data_owner = g_stfa_m.stfaownid      
   LET g_data_dept  = g_stfa_m.stfaowndp
   
   #重新顯示   
   CALL astm401_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="astm401.fill_chk" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION astm401_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define" edit="s"/>}
   #end add-point
   #add-point:fill_chk段define(客製用)
   {<point name="fill_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1')  AND 
      (cl_null(g_wc2_table4) OR g_wc2_table4.trim() = '1=1')  AND 
      (cl_null(g_wc2_table5) OR g_wc2_table5.trim() = '1=1')  AND 
      (cl_null(g_wc2_table6) OR g_wc2_table6.trim() = '1=1')  AND 
      (cl_null(g_wc2_table7) OR g_wc2_table7.trim() = '1=1')  AND 
      (cl_null(g_wc2_table8) OR g_wc2_table8.trim() = '1=1')  AND 
      (cl_null(g_wc2_table9) OR g_wc2_table9.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="astm401.filter" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a50 樣板自動產生(Version:5)
#+ filter過濾功能
PRIVATE FUNCTION astm401_filter()
   #add-point:filter段define
   {<point name="filter.define" edit="s"/>}
   #end add-point   
   #add-point:filter段define
   {<point name="filter.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON stfa001,stfa002,stfa003,stfa004,stfa005,stfa006,stfa007,stfa008,stfa009, 
          stfa010,stfa011,stfa012,stfa013,stfa014,stfa015,stfa016,stfa017,stfa018,stfa019,stfa020,stfa021, 
          stfa022,stfa023,stfa024,stfa025,stfa026,stfa027,stfa028,stfa029,stfa030,stfa031,stfa032,stfa033, 
          stfa034,stfa035,stfa036,stfa037,stfa038,stfa039,stfa040,stfa042,stfa044,stfa045,stfa046,stfa047, 
          stfa048,stfa049,stfasite,stfaunit
                          FROM s_browse[1].b_stfa001,s_browse[1].b_stfa002,s_browse[1].b_stfa003,s_browse[1].b_stfa004, 
                              s_browse[1].b_stfa005,s_browse[1].b_stfa006,s_browse[1].b_stfa007,s_browse[1].b_stfa008, 
                              s_browse[1].b_stfa009,s_browse[1].b_stfa010,s_browse[1].b_stfa011,s_browse[1].b_stfa012, 
                              s_browse[1].b_stfa013,s_browse[1].b_stfa014,s_browse[1].b_stfa015,s_browse[1].b_stfa016, 
                              s_browse[1].b_stfa017,s_browse[1].b_stfa018,s_browse[1].b_stfa019,s_browse[1].b_stfa020, 
                              s_browse[1].b_stfa021,s_browse[1].b_stfa022,s_browse[1].b_stfa023,s_browse[1].b_stfa024, 
                              s_browse[1].b_stfa025,s_browse[1].b_stfa026,s_browse[1].b_stfa027,s_browse[1].b_stfa028, 
                              s_browse[1].b_stfa029,s_browse[1].b_stfa030,s_browse[1].b_stfa031,s_browse[1].b_stfa032, 
                              s_browse[1].b_stfa033,s_browse[1].b_stfa034,s_browse[1].b_stfa035,s_browse[1].b_stfa036, 
                              s_browse[1].b_stfa037,s_browse[1].b_stfa038,s_browse[1].b_stfa039,s_browse[1].b_stfa040, 
                              s_browse[1].b_stfa042,s_browse[1].b_stfa044,s_browse[1].b_stfa045,s_browse[1].b_stfa046, 
                              s_browse[1].b_stfa047,s_browse[1].b_stfa048,s_browse[1].b_stfa049,s_browse[1].b_stfasite, 
                              s_browse[1].b_stfaunit
 
         BEFORE CONSTRUCT
               DISPLAY astm401_filter_parser('stfa001') TO s_browse[1].b_stfa001
            DISPLAY astm401_filter_parser('stfa002') TO s_browse[1].b_stfa002
            DISPLAY astm401_filter_parser('stfa003') TO s_browse[1].b_stfa003
            DISPLAY astm401_filter_parser('stfa004') TO s_browse[1].b_stfa004
            DISPLAY astm401_filter_parser('stfa005') TO s_browse[1].b_stfa005
            DISPLAY astm401_filter_parser('stfa006') TO s_browse[1].b_stfa006
            DISPLAY astm401_filter_parser('stfa007') TO s_browse[1].b_stfa007
            DISPLAY astm401_filter_parser('stfa008') TO s_browse[1].b_stfa008
            DISPLAY astm401_filter_parser('stfa009') TO s_browse[1].b_stfa009
            DISPLAY astm401_filter_parser('stfa010') TO s_browse[1].b_stfa010
            DISPLAY astm401_filter_parser('stfa011') TO s_browse[1].b_stfa011
            DISPLAY astm401_filter_parser('stfa012') TO s_browse[1].b_stfa012
            DISPLAY astm401_filter_parser('stfa013') TO s_browse[1].b_stfa013
            DISPLAY astm401_filter_parser('stfa014') TO s_browse[1].b_stfa014
            DISPLAY astm401_filter_parser('stfa015') TO s_browse[1].b_stfa015
            DISPLAY astm401_filter_parser('stfa016') TO s_browse[1].b_stfa016
            DISPLAY astm401_filter_parser('stfa017') TO s_browse[1].b_stfa017
            DISPLAY astm401_filter_parser('stfa018') TO s_browse[1].b_stfa018
            DISPLAY astm401_filter_parser('stfa019') TO s_browse[1].b_stfa019
            DISPLAY astm401_filter_parser('stfa020') TO s_browse[1].b_stfa020
            DISPLAY astm401_filter_parser('stfa021') TO s_browse[1].b_stfa021
            DISPLAY astm401_filter_parser('stfa022') TO s_browse[1].b_stfa022
            DISPLAY astm401_filter_parser('stfa023') TO s_browse[1].b_stfa023
            DISPLAY astm401_filter_parser('stfa024') TO s_browse[1].b_stfa024
            DISPLAY astm401_filter_parser('stfa025') TO s_browse[1].b_stfa025
            DISPLAY astm401_filter_parser('stfa026') TO s_browse[1].b_stfa026
            DISPLAY astm401_filter_parser('stfa027') TO s_browse[1].b_stfa027
            DISPLAY astm401_filter_parser('stfa028') TO s_browse[1].b_stfa028
            DISPLAY astm401_filter_parser('stfa029') TO s_browse[1].b_stfa029
            DISPLAY astm401_filter_parser('stfa030') TO s_browse[1].b_stfa030
            DISPLAY astm401_filter_parser('stfa031') TO s_browse[1].b_stfa031
            DISPLAY astm401_filter_parser('stfa032') TO s_browse[1].b_stfa032
            DISPLAY astm401_filter_parser('stfa033') TO s_browse[1].b_stfa033
            DISPLAY astm401_filter_parser('stfa034') TO s_browse[1].b_stfa034
            DISPLAY astm401_filter_parser('stfa035') TO s_browse[1].b_stfa035
            DISPLAY astm401_filter_parser('stfa036') TO s_browse[1].b_stfa036
            DISPLAY astm401_filter_parser('stfa037') TO s_browse[1].b_stfa037
            DISPLAY astm401_filter_parser('stfa038') TO s_browse[1].b_stfa038
            DISPLAY astm401_filter_parser('stfa039') TO s_browse[1].b_stfa039
            DISPLAY astm401_filter_parser('stfa040') TO s_browse[1].b_stfa040
            DISPLAY astm401_filter_parser('stfa042') TO s_browse[1].b_stfa042
            DISPLAY astm401_filter_parser('stfa044') TO s_browse[1].b_stfa044
            DISPLAY astm401_filter_parser('stfa045') TO s_browse[1].b_stfa045
            DISPLAY astm401_filter_parser('stfa046') TO s_browse[1].b_stfa046
            DISPLAY astm401_filter_parser('stfa047') TO s_browse[1].b_stfa047
            DISPLAY astm401_filter_parser('stfa048') TO s_browse[1].b_stfa048
            DISPLAY astm401_filter_parser('stfa049') TO s_browse[1].b_stfa049
            DISPLAY astm401_filter_parser('stfasite') TO s_browse[1].b_stfasite
            DISPLAY astm401_filter_parser('stfaunit') TO s_browse[1].b_stfaunit
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL astm401_filter_show('stfa001')
   CALL astm401_filter_show('stfa002')
   CALL astm401_filter_show('stfa003')
   CALL astm401_filter_show('stfa004')
   CALL astm401_filter_show('stfa005')
   CALL astm401_filter_show('stfa006')
   CALL astm401_filter_show('stfa007')
   CALL astm401_filter_show('stfa008')
   CALL astm401_filter_show('stfa009')
   CALL astm401_filter_show('stfa010')
   CALL astm401_filter_show('stfa011')
   CALL astm401_filter_show('stfa012')
   CALL astm401_filter_show('stfa013')
   CALL astm401_filter_show('stfa014')
   CALL astm401_filter_show('stfa015')
   CALL astm401_filter_show('stfa016')
   CALL astm401_filter_show('stfa017')
   CALL astm401_filter_show('stfa018')
   CALL astm401_filter_show('stfa019')
   CALL astm401_filter_show('stfa020')
   CALL astm401_filter_show('stfa021')
   CALL astm401_filter_show('stfa022')
   CALL astm401_filter_show('stfa023')
   CALL astm401_filter_show('stfa024')
   CALL astm401_filter_show('stfa025')
   CALL astm401_filter_show('stfa026')
   CALL astm401_filter_show('stfa027')
   CALL astm401_filter_show('stfa028')
   CALL astm401_filter_show('stfa029')
   CALL astm401_filter_show('stfa030')
   CALL astm401_filter_show('stfa031')
   CALL astm401_filter_show('stfa032')
   CALL astm401_filter_show('stfa033')
   CALL astm401_filter_show('stfa034')
   CALL astm401_filter_show('stfa035')
   CALL astm401_filter_show('stfa036')
   CALL astm401_filter_show('stfa037')
   CALL astm401_filter_show('stfa038')
   CALL astm401_filter_show('stfa039')
   CALL astm401_filter_show('stfa040')
   CALL astm401_filter_show('stfa042')
   CALL astm401_filter_show('stfa044')
   CALL astm401_filter_show('stfa045')
   CALL astm401_filter_show('stfa046')
   CALL astm401_filter_show('stfa047')
   CALL astm401_filter_show('stfa048')
   CALL astm401_filter_show('stfa049')
   CALL astm401_filter_show('stfasite')
   CALL astm401_filter_show('stfaunit')
 
END FUNCTION
]]>
  </section>
  <section id="astm401.filter_parser" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION astm401_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define" edit="s"/>}
   #end add-point    
   #add-point:filter段define
   {<point name="filter_parser.define_customerization" edit="s"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="astm401.filter_show" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION astm401_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = astm401_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="astm401.global" ver="10" status="" src="s" readonly="">
    <![CDATA[#應用 t01 樣板自動產生(Version:36)
{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_stfa_m        RECORD
       stfaunit LIKE stfa_t.stfaunit, 
   stfaunit_desc LIKE type_t.chr80, 
   stfasite LIKE stfa_t.stfasite, 
   stfasite_desc LIKE type_t.chr80, 
   stfa001 LIKE stfa_t.stfa001, 
   stfa002 LIKE stfa_t.stfa002, 
   stfa003 LIKE stfa_t.stfa003, 
   stfa004 LIKE stfa_t.stfa004, 
   stfa009 LIKE stfa_t.stfa009, 
   stfastus LIKE stfa_t.stfastus, 
   stfa005 LIKE stfa_t.stfa005, 
   stfal003 LIKE type_t.chr500, 
   stfal004 LIKE type_t.chr500, 
   stfa006 LIKE stfa_t.stfa006, 
   stfa006_desc LIKE type_t.chr80, 
   stfa007 LIKE stfa_t.stfa007, 
   stfa008 LIKE stfa_t.stfa008, 
   stfa047 LIKE stfa_t.stfa047, 
   stfa047_desc LIKE type_t.chr80, 
   stfa048 LIKE stfa_t.stfa048, 
   stfa048_desc LIKE type_t.chr80, 
   stfa044 LIKE stfa_t.stfa044, 
   stfa044_desc LIKE type_t.chr80, 
   stfa010 LIKE stfa_t.stfa010, 
   stfa010_desc LIKE type_t.chr80, 
   stfa011 LIKE stfa_t.stfa011, 
   stfa011_desc LIKE type_t.chr80, 
   stfa012 LIKE stfa_t.stfa012, 
   stfa012_desc LIKE type_t.chr80, 
   stfa013 LIKE stfa_t.stfa013, 
   stfa013_desc LIKE type_t.chr80, 
   stfa014 LIKE stfa_t.stfa014, 
   stfa014_desc LIKE type_t.chr80, 
   stfa015 LIKE stfa_t.stfa015, 
   stfa015_desc LIKE type_t.chr80, 
   stfa016 LIKE stfa_t.stfa016, 
   stfa045 LIKE stfa_t.stfa045, 
   stfa045_desc LIKE type_t.chr80, 
   stfa046 LIKE stfa_t.stfa046, 
   stfa029 LIKE stfa_t.stfa029, 
   stfa030 LIKE stfa_t.stfa030, 
   stfa032 LIKE stfa_t.stfa032, 
   stfa032_desc LIKE type_t.chr80, 
   stfa033 LIKE stfa_t.stfa033, 
   stfa033_desc LIKE type_t.chr80, 
   stfa034 LIKE stfa_t.stfa034, 
   stfa034_desc LIKE type_t.chr80, 
   stfa035 LIKE stfa_t.stfa035, 
   stfa035_desc LIKE type_t.chr80, 
   stfa036 LIKE stfa_t.stfa036, 
   stfa036_desc LIKE type_t.chr80, 
   stfa037 LIKE stfa_t.stfa037, 
   stfa037_desc LIKE type_t.chr80, 
   stfa038 LIKE stfa_t.stfa038, 
   stfa038_desc LIKE type_t.chr80, 
   stfa039 LIKE stfa_t.stfa039, 
   stfa040 LIKE stfa_t.stfa040, 
   stfa028 LIKE stfa_t.stfa028, 
   next_b LIKE type_t.dat, 
   stfa017 LIKE stfa_t.stfa017, 
   stfa021 LIKE stfa_t.stfa021, 
   stfa024 LIKE stfa_t.stfa024, 
   stfa018 LIKE stfa_t.stfa018, 
   stfa049 LIKE stfa_t.stfa049, 
   stfa025 LIKE stfa_t.stfa025, 
   stfa019 LIKE stfa_t.stfa019, 
   stfa022 LIKE stfa_t.stfa022, 
   stfa026 LIKE stfa_t.stfa026, 
   stfa020 LIKE stfa_t.stfa020, 
   stfa023 LIKE stfa_t.stfa023, 
   stfa027 LIKE stfa_t.stfa027, 
   stfa031 LIKE stfa_t.stfa031, 
   stfa042 LIKE stfa_t.stfa042, 
   stfaownid LIKE stfa_t.stfaownid, 
   stfaownid_desc LIKE type_t.chr80, 
   stfaowndp LIKE stfa_t.stfaowndp, 
   stfaowndp_desc LIKE type_t.chr80, 
   stfacrtid LIKE stfa_t.stfacrtid, 
   stfacrtid_desc LIKE type_t.chr80, 
   stfacrtdp LIKE stfa_t.stfacrtdp, 
   stfacrtdp_desc LIKE type_t.chr80, 
   stfacrtdt LIKE stfa_t.stfacrtdt, 
   stfamodid LIKE stfa_t.stfamodid, 
   stfamodid_desc LIKE type_t.chr80, 
   stfamoddt LIKE stfa_t.stfamoddt, 
   stfacnfid LIKE stfa_t.stfacnfid, 
   stfacnfid_desc LIKE type_t.chr80, 
   stfacnfdt LIKE stfa_t.stfacnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_stfb_d        RECORD
       stfbseq LIKE stfb_t.stfbseq, 
   stfb002 LIKE stfb_t.stfb002, 
   stfb002_desc LIKE type_t.chr500, 
   stfb003 LIKE stfb_t.stfb003, 
   stfb004 LIKE stfb_t.stfb004, 
   stfb005 LIKE stfb_t.stfb005, 
   stfb006 LIKE stfb_t.stfb006, 
   stfb007 LIKE stfb_t.stfb007, 
   stfb008 LIKE stfb_t.stfb008, 
   stfb008_desc LIKE type_t.chr500, 
   stfb009 LIKE stfb_t.stfb009, 
   stfb009_desc LIKE type_t.chr500, 
   stfb010 LIKE stfb_t.stfb010, 
   stfb011 LIKE stfb_t.stfb011, 
   stfb012 LIKE stfb_t.stfb012, 
   stfb013 LIKE stfb_t.stfb013, 
   stfb014 LIKE stfb_t.stfb014, 
   stfb015 LIKE stfb_t.stfb015, 
   stfb016 LIKE stfb_t.stfb016, 
   stfb017 LIKE stfb_t.stfb017, 
   stfbsite LIKE stfb_t.stfbsite, 
   stfbunit LIKE stfb_t.stfbunit
       END RECORD
PRIVATE TYPE type_g_stfb2_d RECORD
       stfcseq LIKE stfc_t.stfcseq, 
   stfc002 LIKE stfc_t.stfc002, 
   stfc003 LIKE stfc_t.stfc003, 
   stfc024 LIKE stfc_t.stfc024, 
   stfc025 LIKE stfc_t.stfc025, 
   stfc004 LIKE stfc_t.stfc004, 
   stfc004_desc LIKE type_t.chr500, 
   stfc005 LIKE stfc_t.stfc005, 
   stfc005_desc LIKE type_t.chr500, 
   stfc006 LIKE stfc_t.stfc006, 
   stfc006_desc LIKE type_t.chr500, 
   stfc007 LIKE stfc_t.stfc007, 
   stfc007_desc LIKE type_t.chr500, 
   stfc008 LIKE stfc_t.stfc008, 
   stfc009 LIKE stfc_t.stfc009, 
   stfc009_desc LIKE type_t.chr500, 
   stfc010 LIKE stfc_t.stfc010, 
   stfc011 LIKE stfc_t.stfc011, 
   stfc012 LIKE stfc_t.stfc012, 
   stfc013 LIKE stfc_t.stfc013, 
   stfc014 LIKE stfc_t.stfc014, 
   stfc015 LIKE stfc_t.stfc015, 
   stfc015_desc LIKE type_t.chr500, 
   stfc016 LIKE stfc_t.stfc016, 
   stfc016_desc LIKE type_t.chr500, 
   stfc017 LIKE stfc_t.stfc017, 
   stfc018 LIKE stfc_t.stfc018, 
   stfc019 LIKE stfc_t.stfc019, 
   stfc020 LIKE stfc_t.stfc020, 
   stfc021 LIKE stfc_t.stfc021, 
   stfc022 LIKE stfc_t.stfc022, 
   stfc023 LIKE stfc_t.stfc023, 
   stfcsite LIKE stfc_t.stfcsite, 
   stfcunit LIKE stfc_t.stfcunit
       END RECORD
PRIVATE TYPE type_g_stfb3_d RECORD
       stfe002 LIKE stfe_t.stfe002, 
   stfeseq LIKE stfe_t.stfeseq, 
   stfe003 LIKE stfe_t.stfe003, 
   stfe003_desc LIKE type_t.chr500, 
   stfe004 LIKE stfe_t.stfe004, 
   stfe005 LIKE stfe_t.stfe005, 
   stfe006 LIKE stfe_t.stfe006, 
   stfe007 LIKE stfe_t.stfe007, 
   stfe008 LIKE stfe_t.stfe008, 
   stfe009 LIKE stfe_t.stfe009, 
   stfe010 LIKE stfe_t.stfe010, 
   stfe011 LIKE stfe_t.stfe011, 
   stfesite LIKE stfe_t.stfesite, 
   stfeunit LIKE stfe_t.stfeunit
       END RECORD
PRIVATE TYPE type_g_stfb4_d RECORD
       stfgseq LIKE stfg_t.stfgseq, 
   stfg003 LIKE stfg_t.stfg003, 
   stfg003_desc LIKE type_t.chr500, 
   stfg002 LIKE stfg_t.stfg002, 
   stfg002_desc LIKE type_t.chr500, 
   stfg004 LIKE stfg_t.stfg004, 
   stfg005 LIKE stfg_t.stfg005, 
   stfgacti LIKE stfg_t.stfgacti, 
   stfgsite LIKE stfg_t.stfgsite, 
   stfgunit LIKE stfg_t.stfgunit
       END RECORD
PRIVATE TYPE type_g_stfb5_d RECORD
       stfhseq LIKE stfh_t.stfhseq, 
   stfh002 LIKE stfh_t.stfh002, 
   stfh003 LIKE stfh_t.stfh003, 
   stfhacti LIKE stfh_t.stfhacti, 
   stfhsite LIKE stfh_t.stfhsite, 
   stfhunit LIKE stfh_t.stfhunit
       END RECORD
PRIVATE TYPE type_g_stfb6_d RECORD
       stfiseq LIKE stfi_t.stfiseq, 
   stfi002 LIKE stfi_t.stfi002, 
   stfi003 LIKE stfi_t.stfi003, 
   stfi003_desc LIKE type_t.chr500, 
   stfi005 LIKE stfi_t.stfi005, 
   stfi006 LIKE stfi_t.stfi006, 
   stfi004 LIKE stfi_t.stfi004, 
   stfi007 LIKE stfi_t.stfi007, 
   stfi010 LIKE stfi_t.stfi010, 
   stfi010_desc LIKE type_t.chr500, 
   stfi008 LIKE stfi_t.stfi008, 
   stfi009 LIKE stfi_t.stfi009, 
   stfiacti LIKE stfi_t.stfiacti, 
   stfisite LIKE stfi_t.stfisite, 
   stfiunit LIKE stfi_t.stfiunit
       END RECORD
PRIVATE TYPE type_g_stfb7_d RECORD
       stfjseq LIKE stfj_t.stfjseq, 
   stfj002 LIKE stfj_t.stfj002, 
   stfj003 LIKE stfj_t.stfj003, 
   stfj004 LIKE stfj_t.stfj004, 
   stfj005 LIKE stfj_t.stfj005, 
   stfj006 LIKE stfj_t.stfj006, 
   stfjsite LIKE stfj_t.stfjsite, 
   stfjunit LIKE stfj_t.stfjunit
       END RECORD
PRIVATE TYPE type_g_stfb8_d RECORD
       stfdseq1 LIKE stfd_t.stfdseq1, 
   stfd002 LIKE stfd_t.stfd002, 
   stfd003 LIKE stfd_t.stfd003, 
   stfd003_desc LIKE type_t.chr500, 
   stfd004 LIKE stfd_t.stfd004, 
   stfd004_desc LIKE type_t.chr500, 
   stfd005 LIKE stfd_t.stfd005, 
   stfd006 LIKE stfd_t.stfd006, 
   stfd007 LIKE stfd_t.stfd007, 
   stfd008 LIKE stfd_t.stfd008, 
   stfdsite LIKE stfd_t.stfdsite, 
   stfdunit LIKE stfd_t.stfdunit
       END RECORD
PRIVATE TYPE type_g_stfb9_d RECORD
       stff003 LIKE stff_t.stff003, 
   stff004 LIKE stff_t.stff004, 
   stff005 LIKE stff_t.stff005, 
   stff005_desc LIKE type_t.chr500, 
   stff006 LIKE stff_t.stff006, 
   stff007 LIKE stff_t.stff007, 
   stff008 LIKE stff_t.stff008, 
   stff009 LIKE stff_t.stff009, 
   stffsite LIKE stff_t.stffsite, 
   stffunit LIKE stff_t.stffunit
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_stfa001 LIKE stfa_t.stfa001,
      b_stfa002 LIKE stfa_t.stfa002,
      b_stfa003 LIKE stfa_t.stfa003,
      b_stfa004 LIKE stfa_t.stfa004,
      b_stfa005 LIKE stfa_t.stfa005,
      b_stfa006 LIKE stfa_t.stfa006,
      b_stfa007 LIKE stfa_t.stfa007,
      b_stfa008 LIKE stfa_t.stfa008,
      b_stfa009 LIKE stfa_t.stfa009,
      b_stfa010 LIKE stfa_t.stfa010,
      b_stfa011 LIKE stfa_t.stfa011,
      b_stfa012 LIKE stfa_t.stfa012,
      b_stfa013 LIKE stfa_t.stfa013,
      b_stfa014 LIKE stfa_t.stfa014,
      b_stfa015 LIKE stfa_t.stfa015,
      b_stfa016 LIKE stfa_t.stfa016,
      b_stfa017 LIKE stfa_t.stfa017,
      b_stfa018 LIKE stfa_t.stfa018,
      b_stfa019 LIKE stfa_t.stfa019,
      b_stfa020 LIKE stfa_t.stfa020,
      b_stfa021 LIKE stfa_t.stfa021,
      b_stfa022 LIKE stfa_t.stfa022,
      b_stfa023 LIKE stfa_t.stfa023,
      b_stfa024 LIKE stfa_t.stfa024,
      b_stfa025 LIKE stfa_t.stfa025,
      b_stfa026 LIKE stfa_t.stfa026,
      b_stfa027 LIKE stfa_t.stfa027,
      b_stfa028 LIKE stfa_t.stfa028,
      b_stfa029 LIKE stfa_t.stfa029,
      b_stfa030 LIKE stfa_t.stfa030,
      b_stfa031 LIKE stfa_t.stfa031,
      b_stfa032 LIKE stfa_t.stfa032,
      b_stfa033 LIKE stfa_t.stfa033,
      b_stfa034 LIKE stfa_t.stfa034,
      b_stfa035 LIKE stfa_t.stfa035,
      b_stfa036 LIKE stfa_t.stfa036,
      b_stfa037 LIKE stfa_t.stfa037,
      b_stfa038 LIKE stfa_t.stfa038,
      b_stfa039 LIKE stfa_t.stfa039,
      b_stfa040 LIKE stfa_t.stfa040,
      b_stfa042 LIKE stfa_t.stfa042,
      b_stfa044 LIKE stfa_t.stfa044,
      b_stfa045 LIKE stfa_t.stfa045,
      b_stfa046 LIKE stfa_t.stfa046,
      b_stfa047 LIKE stfa_t.stfa047,
      b_stfa048 LIKE stfa_t.stfa048,
      b_stfa049 LIKE stfa_t.stfa049,
      b_stfasite LIKE stfa_t.stfasite,
      b_stfaunit LIKE stfa_t.stfaunit
       END RECORD
       
#模組變數(Module Variables)
DEFINE g_stfa_m          type_g_stfa_m
DEFINE g_stfa_m_t        type_g_stfa_m
DEFINE g_stfa_m_o        type_g_stfa_m
DEFINE g_stfa_m_mask_o   type_g_stfa_m #轉換遮罩前資料
DEFINE g_stfa_m_mask_n   type_g_stfa_m #轉換遮罩後資料
 
   DEFINE g_stfa001_t LIKE stfa_t.stfa001
 
 
DEFINE g_stfb_d          DYNAMIC ARRAY OF type_g_stfb_d
DEFINE g_stfb_d_t        type_g_stfb_d
DEFINE g_stfb_d_o        type_g_stfb_d
DEFINE g_stfb_d_mask_o   DYNAMIC ARRAY OF type_g_stfb_d #轉換遮罩前資料
DEFINE g_stfb_d_mask_n   DYNAMIC ARRAY OF type_g_stfb_d #轉換遮罩後資料
DEFINE g_stfb2_d          DYNAMIC ARRAY OF type_g_stfb2_d
DEFINE g_stfb2_d_t        type_g_stfb2_d
DEFINE g_stfb2_d_o        type_g_stfb2_d
DEFINE g_stfb2_d_mask_o   DYNAMIC ARRAY OF type_g_stfb2_d #轉換遮罩前資料
DEFINE g_stfb2_d_mask_n   DYNAMIC ARRAY OF type_g_stfb2_d #轉換遮罩後資料
DEFINE g_stfb3_d          DYNAMIC ARRAY OF type_g_stfb3_d
DEFINE g_stfb3_d_t        type_g_stfb3_d
DEFINE g_stfb3_d_o        type_g_stfb3_d
DEFINE g_stfb3_d_mask_o   DYNAMIC ARRAY OF type_g_stfb3_d #轉換遮罩前資料
DEFINE g_stfb3_d_mask_n   DYNAMIC ARRAY OF type_g_stfb3_d #轉換遮罩後資料
DEFINE g_stfb4_d          DYNAMIC ARRAY OF type_g_stfb4_d
DEFINE g_stfb4_d_t        type_g_stfb4_d
DEFINE g_stfb4_d_o        type_g_stfb4_d
DEFINE g_stfb4_d_mask_o   DYNAMIC ARRAY OF type_g_stfb4_d #轉換遮罩前資料
DEFINE g_stfb4_d_mask_n   DYNAMIC ARRAY OF type_g_stfb4_d #轉換遮罩後資料
DEFINE g_stfb5_d          DYNAMIC ARRAY OF type_g_stfb5_d
DEFINE g_stfb5_d_t        type_g_stfb5_d
DEFINE g_stfb5_d_o        type_g_stfb5_d
DEFINE g_stfb5_d_mask_o   DYNAMIC ARRAY OF type_g_stfb5_d #轉換遮罩前資料
DEFINE g_stfb5_d_mask_n   DYNAMIC ARRAY OF type_g_stfb5_d #轉換遮罩後資料
DEFINE g_stfb6_d          DYNAMIC ARRAY OF type_g_stfb6_d
DEFINE g_stfb6_d_t        type_g_stfb6_d
DEFINE g_stfb6_d_o        type_g_stfb6_d
DEFINE g_stfb6_d_mask_o   DYNAMIC ARRAY OF type_g_stfb6_d #轉換遮罩前資料
DEFINE g_stfb6_d_mask_n   DYNAMIC ARRAY OF type_g_stfb6_d #轉換遮罩後資料
DEFINE g_stfb7_d          DYNAMIC ARRAY OF type_g_stfb7_d
DEFINE g_stfb7_d_t        type_g_stfb7_d
DEFINE g_stfb7_d_o        type_g_stfb7_d
DEFINE g_stfb7_d_mask_o   DYNAMIC ARRAY OF type_g_stfb7_d #轉換遮罩前資料
DEFINE g_stfb7_d_mask_n   DYNAMIC ARRAY OF type_g_stfb7_d #轉換遮罩後資料
DEFINE g_stfb8_d          DYNAMIC ARRAY OF type_g_stfb8_d
DEFINE g_stfb8_d_t        type_g_stfb8_d
DEFINE g_stfb8_d_o        type_g_stfb8_d
DEFINE g_stfb8_d_mask_o   DYNAMIC ARRAY OF type_g_stfb8_d #轉換遮罩前資料
DEFINE g_stfb8_d_mask_n   DYNAMIC ARRAY OF type_g_stfb8_d #轉換遮罩後資料
DEFINE g_stfb9_d          DYNAMIC ARRAY OF type_g_stfb9_d
DEFINE g_stfb9_d_t        type_g_stfb9_d
DEFINE g_stfb9_d_o        type_g_stfb9_d
DEFINE g_stfb9_d_mask_o   DYNAMIC ARRAY OF type_g_stfb9_d #轉換遮罩前資料
DEFINE g_stfb9_d_mask_n   DYNAMIC ARRAY OF type_g_stfb9_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
DEFINE g_master_multi_table_t    RECORD
      stfal001 LIKE stfal_t.stfal001,
      stfal003 LIKE stfal_t.stfal003,
      stfal004 LIKE stfal_t.stfal004
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
DEFINE g_wc2_table4   STRING
 
DEFINE g_wc2_table5   STRING
 
DEFINE g_wc2_table6   STRING
 
DEFINE g_wc2_table7   STRING
 
 
DEFINE g_wc2_table8   STRING
 
DEFINE g_wc2_table9   STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10              #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="astm401.idx_chk" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION astm401_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define" edit="s"/>}
   #end add-point  
   #add-point:idx_chk段define(客製用)
   {<point name="idx_chk.define_customerization" edit="c"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_stfb_d.getLength() THEN
         LET g_detail_idx = g_stfb_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stfb_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stfb_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_stfb2_d.getLength() THEN
         LET g_detail_idx = g_stfb2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stfb2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stfb2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_stfb3_d.getLength() THEN
         LET g_detail_idx = g_stfb3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stfb3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stfb3_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 4 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail4")
      IF g_detail_idx > g_stfb4_d.getLength() THEN
         LET g_detail_idx = g_stfb4_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stfb4_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stfb4_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 5 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail5")
      IF g_detail_idx > g_stfb5_d.getLength() THEN
         LET g_detail_idx = g_stfb5_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stfb5_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stfb5_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 6 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail6")
      IF g_detail_idx > g_stfb6_d.getLength() THEN
         LET g_detail_idx = g_stfb6_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stfb6_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stfb6_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 7 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail7")
      IF g_detail_idx > g_stfb7_d.getLength() THEN
         LET g_detail_idx = g_stfb7_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stfb7_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stfb7_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 8 THEN
      LET g_detail_idx2 = g_curr_diag.getCurrentRow("s_detail8")
      IF g_detail_idx2 > g_stfb8_d.getLength() THEN
         LET g_detail_idx2 = g_stfb8_d.getLength()
      END IF
      IF g_detail_idx2 = 0 AND g_stfb8_d.getLength() <> 0 THEN
         LET g_detail_idx2 = 1
      END IF
      DISPLAY g_detail_idx2 TO FORMONLY.idx
      DISPLAY g_stfb8_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 9 THEN
      LET g_detail_idx2 = g_curr_diag.getCurrentRow("s_detail9")
      IF g_detail_idx2 > g_stfb9_d.getLength() THEN
         LET g_detail_idx2 = g_stfb9_d.getLength()
      END IF
      IF g_detail_idx2 = 0 AND g_stfb9_d.getLength() <> 0 THEN
         LET g_detail_idx2 = 1
      END IF
      DISPLAY g_detail_idx2 TO FORMONLY.idx
      DISPLAY g_stfb9_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="astm401.init" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION astm401_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point    
   #add-point:init段define(客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point    
 
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('stfastus','50','N,Y,X')
 
      CALL cl_set_combo_scc('stfa003','6014') 
   CALL cl_set_combo_scc('stfa004','6785') 
   CALL cl_set_combo_scc('stfa046','6201') 
   CALL cl_set_combo_scc('stfa029','6202') 
   CALL cl_set_combo_scc('stfa030','6786') 
   CALL cl_set_combo_scc('stfa031','36') 
   CALL cl_set_combo_scc('stfb004','6006') 
   CALL cl_set_combo_scc('stfb005','6007') 
   CALL cl_set_combo_scc('stfb006','6008') 
   CALL cl_set_combo_scc('stfb007','6009') 
   CALL cl_set_combo_scc('stfc024','6781') 
   CALL cl_set_combo_scc('stfc011','6006') 
   CALL cl_set_combo_scc('stfc012','6007') 
   CALL cl_set_combo_scc('stfc013','6008') 
   CALL cl_set_combo_scc('stfc014','6009') 
   CALL cl_set_combo_scc('stfe004','6793') 
   CALL cl_set_combo_scc('stfe005','6011') 
   CALL cl_set_combo_scc('stfe006','6794') 
   CALL cl_set_combo_scc('stfi002','6783') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL astm401_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="astm401.input" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION astm401_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define
   {<point name="input.define" edit="s"/>}
   #end add-point  
   #add-point:input段define(客製用)
   {<point name="input.define_customerization" edit="c"/>}
   #end add-point  
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_stfa_m.stfaunit,g_stfa_m.stfaunit_desc,g_stfa_m.stfasite,g_stfa_m.stfasite_desc, 
       g_stfa_m.stfa001,g_stfa_m.stfa002,g_stfa_m.stfa003,g_stfa_m.stfa004,g_stfa_m.stfa009,g_stfa_m.stfastus, 
       g_stfa_m.stfa005,g_stfa_m.stfal003,g_stfa_m.stfal004,g_stfa_m.stfa006,g_stfa_m.stfa006_desc,g_stfa_m.stfa007, 
       g_stfa_m.stfa008,g_stfa_m.stfa047,g_stfa_m.stfa047_desc,g_stfa_m.stfa048,g_stfa_m.stfa048_desc, 
       g_stfa_m.stfa044,g_stfa_m.stfa044_desc,g_stfa_m.stfa010,g_stfa_m.stfa010_desc,g_stfa_m.stfa011, 
       g_stfa_m.stfa011_desc,g_stfa_m.stfa012,g_stfa_m.stfa012_desc,g_stfa_m.stfa013,g_stfa_m.stfa013_desc, 
       g_stfa_m.stfa014,g_stfa_m.stfa014_desc,g_stfa_m.stfa015,g_stfa_m.stfa015_desc,g_stfa_m.stfa016, 
       g_stfa_m.stfa045,g_stfa_m.stfa045_desc,g_stfa_m.stfa046,g_stfa_m.stfa029,g_stfa_m.stfa030,g_stfa_m.stfa032, 
       g_stfa_m.stfa032_desc,g_stfa_m.stfa033,g_stfa_m.stfa033_desc,g_stfa_m.stfa034,g_stfa_m.stfa034_desc, 
       g_stfa_m.stfa035,g_stfa_m.stfa035_desc,g_stfa_m.stfa036,g_stfa_m.stfa036_desc,g_stfa_m.stfa037, 
       g_stfa_m.stfa037_desc,g_stfa_m.stfa038,g_stfa_m.stfa038_desc,g_stfa_m.stfa039,g_stfa_m.stfa040, 
       g_stfa_m.stfa028,g_stfa_m.next_b,g_stfa_m.stfa017,g_stfa_m.stfa021,g_stfa_m.stfa024,g_stfa_m.stfa018, 
       g_stfa_m.stfa049,g_stfa_m.stfa025,g_stfa_m.stfa019,g_stfa_m.stfa022,g_stfa_m.stfa026,g_stfa_m.stfa020, 
       g_stfa_m.stfa023,g_stfa_m.stfa027,g_stfa_m.stfa031,g_stfa_m.stfa042,g_stfa_m.stfaownid,g_stfa_m.stfaownid_desc, 
       g_stfa_m.stfaowndp,g_stfa_m.stfaowndp_desc,g_stfa_m.stfacrtid,g_stfa_m.stfacrtid_desc,g_stfa_m.stfacrtdp, 
       g_stfa_m.stfacrtdp_desc,g_stfa_m.stfacrtdt,g_stfa_m.stfamodid,g_stfa_m.stfamodid_desc,g_stfa_m.stfamoddt, 
       g_stfa_m.stfacnfid,g_stfa_m.stfacnfid_desc,g_stfa_m.stfacnfdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT stfbseq,stfb002,stfb003,stfb004,stfb005,stfb006,stfb007,stfb008,stfb009, 
       stfb010,stfb011,stfb012,stfb013,stfb014,stfb015,stfb016,stfb017,stfbsite,stfbunit FROM stfb_t  
       WHERE stfbent=? AND stfb001=? AND stfbseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm401_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT stfcseq,stfc002,stfc003,stfc024,stfc025,stfc004,stfc005,stfc006,stfc007, 
       stfc008,stfc009,stfc010,stfc011,stfc012,stfc013,stfc014,stfc015,stfc016,stfc017,stfc018,stfc019, 
       stfc020,stfc021,stfc022,stfc023,stfcsite,stfcunit FROM stfc_t WHERE stfcent=? AND stfc001=? AND  
       stfcseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm401_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql3" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT stfe002,stfeseq,stfe003,stfe004,stfe005,stfe006,stfe007,stfe008,stfe009, 
       stfe010,stfe011,stfesite,stfeunit FROM stfe_t WHERE stfeent=? AND stfe001=? AND stfeseq=? AND  
       stfe002=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql3"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm401_bcl3 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql4" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT stfgseq,stfg003,stfg002,stfg004,stfg005,stfgacti,stfgsite,stfgunit FROM  
       stfg_t WHERE stfgent=? AND stfg001=? AND stfgseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql4"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm401_bcl4 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql5" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT stfhseq,stfh002,stfh003,stfhacti,stfhsite,stfhunit FROM stfh_t WHERE stfhent=?  
       AND stfh001=? AND stfhseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql5"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm401_bcl5 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql6" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT stfiseq,stfi002,stfi003,stfi005,stfi006,stfi004,stfi007,stfi010,stfi008, 
       stfi009,stfiacti,stfisite,stfiunit FROM stfi_t WHERE stfient=? AND stfi001=? AND stfiseq=? FOR  
       UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql6"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm401_bcl6 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql7" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT stfjseq,stfj002,stfj003,stfj004,stfj005,stfj006,stfjsite,stfjunit FROM  
       stfj_t WHERE stfjent=? AND stfj001=? AND stfjseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql7"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm401_bcl7 CURSOR FROM g_forupd_sql
 
 
   
   #add-point:input段define_sql
   {<point name="input.define_sql8" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT stfdseq1,stfd002,stfd003,stfd004,stfd005,stfd006,stfd007,stfd008,stfdsite, 
       stfdunit FROM stfd_t WHERE stfdent=? AND stfd001=? AND stfdseq=? AND stfdseq1=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql8"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm401_bcl8 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql9" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT stff003,stff004,stff005,stff006,stff007,stff008,stff009,stffsite,stffunit  
       FROM stff_t WHERE stffent=? AND stff001=? AND stffseq=? AND stff002=? AND stff003=? FOR UPDATE" 

   #add-point:input段define_sql
   {<point name="input.after_define_sql9"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm401_bcl9 CURSOR FROM g_forupd_sql
 
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL astm401_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL astm401_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_stfa_m.stfaunit,g_stfa_m.stfasite,g_stfa_m.stfa001,g_stfa_m.stfa002,g_stfa_m.stfa003, 
       g_stfa_m.stfa004,g_stfa_m.stfa009,g_stfa_m.stfastus,g_stfa_m.stfa005,g_stfa_m.stfal003,g_stfa_m.stfal004, 
       g_stfa_m.stfa006,g_stfa_m.stfa007,g_stfa_m.stfa008,g_stfa_m.stfa047,g_stfa_m.stfa048,g_stfa_m.stfa044, 
       g_stfa_m.stfa010,g_stfa_m.stfa011,g_stfa_m.stfa012,g_stfa_m.stfa013,g_stfa_m.stfa014,g_stfa_m.stfa015, 
       g_stfa_m.stfa016,g_stfa_m.stfa045,g_stfa_m.stfa046,g_stfa_m.stfa029,g_stfa_m.stfa030,g_stfa_m.stfa032, 
       g_stfa_m.stfa033,g_stfa_m.stfa034,g_stfa_m.stfa035,g_stfa_m.stfa036,g_stfa_m.stfa037,g_stfa_m.stfa038, 
       g_stfa_m.stfa039,g_stfa_m.stfa040,g_stfa_m.stfa028,g_stfa_m.next_b,g_stfa_m.stfa017,g_stfa_m.stfa021, 
       g_stfa_m.stfa024,g_stfa_m.stfa018,g_stfa_m.stfa049,g_stfa_m.stfa025,g_stfa_m.stfa019,g_stfa_m.stfa022, 
       g_stfa_m.stfa026,g_stfa_m.stfa020,g_stfa_m.stfa023,g_stfa_m.stfa027,g_stfa_m.stfa031,g_stfa_m.stfa042 

   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="astm401.input.body" ver="10" status="" src="s" readonly="">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_stfb_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stfb_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astm401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_stfb_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astm401_cl USING g_enterprise,g_stfa_m.stfa001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm401_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE astm401_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_stfb_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stfb_d[l_ac].stfbseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_stfb_d_t.* = g_stfb_d[l_ac].*  #BACKUP
               LET g_stfb_d_o.* = g_stfb_d[l_ac].*  #BACKUP
               CALL astm401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL astm401_set_no_entry_b(l_cmd)
               IF NOT astm401_lock_b("stfb_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astm401_bcl INTO g_stfb_d[l_ac].stfbseq,g_stfb_d[l_ac].stfb002,g_stfb_d[l_ac].stfb003, 
                      g_stfb_d[l_ac].stfb004,g_stfb_d[l_ac].stfb005,g_stfb_d[l_ac].stfb006,g_stfb_d[l_ac].stfb007, 
                      g_stfb_d[l_ac].stfb008,g_stfb_d[l_ac].stfb009,g_stfb_d[l_ac].stfb010,g_stfb_d[l_ac].stfb011, 
                      g_stfb_d[l_ac].stfb012,g_stfb_d[l_ac].stfb013,g_stfb_d[l_ac].stfb014,g_stfb_d[l_ac].stfb015, 
                      g_stfb_d[l_ac].stfb016,g_stfb_d[l_ac].stfb017,g_stfb_d[l_ac].stfbsite,g_stfb_d[l_ac].stfbunit 

                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_stfb_d_t.stfbseq 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stfb_d_mask_o[l_ac].* =  g_stfb_d[l_ac].*
                  CALL astm401_stfb_t_mask()
                  LET g_stfb_d_mask_n[l_ac].* =  g_stfb_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astm401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stfb_d[l_ac].* TO NULL 
            INITIALIZE g_stfb_d_t.* TO NULL 
            INITIALIZE g_stfb_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_stfb_d[l_ac].stfb010 = "0"
 
            #add-point:modify段before備份
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_stfb_d_t.* = g_stfb_d[l_ac].*     #新輸入資料
            LET g_stfb_d_o.* = g_stfb_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astm401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL astm401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stfb_d[li_reproduce_target].* = g_stfb_d[li_reproduce].*
 
               LET g_stfb_d[li_reproduce_target].stfbseq = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM stfb_t 
             WHERE stfbent = g_enterprise AND stfb001 = g_stfa_m.stfa001
 
               AND stfbseq = g_stfb_d[l_ac].stfbseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys[2] = g_stfb_d[g_detail_idx].stfbseq
               CALL astm401_insert_b('stfb_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_stfb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfb_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astm401_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d)
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stfa_m.stfa001
 
               LET gs_keys[gs_keys.getLength()+1] = g_stfb_d_t.stfbseq
 
            
               #刪除同層單身
               IF NOT astm401_delete_b('stfb_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astm401_key_delete_b(gs_keys,'stfb_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE astm401_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_stfb_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stfb_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfbseq
            #add-point:BEFORE FIELD stfbseq
            {<point name="input.b.page1.stfbseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfbseq
            
            #add-point:AFTER FIELD stfbseq
            {<point name="input.a.page1.stfbseq" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfbseq
            #add-point:ON CHANGE stfbseq
            {<point name="input.g.page1.stfbseq" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfb002
            
            #add-point:AFTER FIELD stfb002
            {<point name="input.a.page1.stfb002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfb002
            #add-point:BEFORE FIELD stfb002
            {<point name="input.b.page1.stfb002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfb002
            #add-point:ON CHANGE stfb002
            {<point name="input.g.page1.stfb002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfb003
            #add-point:BEFORE FIELD stfb003
            {<point name="input.b.page1.stfb003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfb003
            
            #add-point:AFTER FIELD stfb003
            {<point name="input.a.page1.stfb003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfb003
            #add-point:ON CHANGE stfb003
            {<point name="input.g.page1.stfb003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfb004
            #add-point:BEFORE FIELD stfb004
            {<point name="input.b.page1.stfb004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfb004
            
            #add-point:AFTER FIELD stfb004
            {<point name="input.a.page1.stfb004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfb004
            #add-point:ON CHANGE stfb004
            {<point name="input.g.page1.stfb004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfb005
            #add-point:BEFORE FIELD stfb005
            {<point name="input.b.page1.stfb005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfb005
            
            #add-point:AFTER FIELD stfb005
            {<point name="input.a.page1.stfb005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfb005
            #add-point:ON CHANGE stfb005
            {<point name="input.g.page1.stfb005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfb006
            #add-point:BEFORE FIELD stfb006
            {<point name="input.b.page1.stfb006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfb006
            
            #add-point:AFTER FIELD stfb006
            {<point name="input.a.page1.stfb006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfb006
            #add-point:ON CHANGE stfb006
            {<point name="input.g.page1.stfb006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfb007
            #add-point:BEFORE FIELD stfb007
            {<point name="input.b.page1.stfb007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfb007
            
            #add-point:AFTER FIELD stfb007
            {<point name="input.a.page1.stfb007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfb007
            #add-point:ON CHANGE stfb007
            {<point name="input.g.page1.stfb007" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfb008
            
            #add-point:AFTER FIELD stfb008
            {<point name="input.a.page1.stfb008" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfb008
            #add-point:BEFORE FIELD stfb008
            {<point name="input.b.page1.stfb008" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfb008
            #add-point:ON CHANGE stfb008
            {<point name="input.g.page1.stfb008" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfb009
            
            #add-point:AFTER FIELD stfb009
            {<point name="input.a.page1.stfb009" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfb009
            #add-point:BEFORE FIELD stfb009
            {<point name="input.b.page1.stfb009" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfb009
            #add-point:ON CHANGE stfb009
            {<point name="input.g.page1.stfb009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfb010
            #add-point:BEFORE FIELD stfb010
            {<point name="input.b.page1.stfb010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfb010
            
            #add-point:AFTER FIELD stfb010
            {<point name="input.a.page1.stfb010" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfb010
            #add-point:ON CHANGE stfb010
            {<point name="input.g.page1.stfb010" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfb011
            #add-point:BEFORE FIELD stfb011
            {<point name="input.b.page1.stfb011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfb011
            
            #add-point:AFTER FIELD stfb011
            {<point name="input.a.page1.stfb011" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfb011
            #add-point:ON CHANGE stfb011
            {<point name="input.g.page1.stfb011" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfb012
            #add-point:BEFORE FIELD stfb012
            {<point name="input.b.page1.stfb012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfb012
            
            #add-point:AFTER FIELD stfb012
            {<point name="input.a.page1.stfb012" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfb012
            #add-point:ON CHANGE stfb012
            {<point name="input.g.page1.stfb012" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfb013
            #add-point:BEFORE FIELD stfb013
            {<point name="input.b.page1.stfb013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfb013
            
            #add-point:AFTER FIELD stfb013
            {<point name="input.a.page1.stfb013" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfb013
            #add-point:ON CHANGE stfb013
            {<point name="input.g.page1.stfb013" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfb014
            #add-point:BEFORE FIELD stfb014
            {<point name="input.b.page1.stfb014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfb014
            
            #add-point:AFTER FIELD stfb014
            {<point name="input.a.page1.stfb014" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfb014
            #add-point:ON CHANGE stfb014
            {<point name="input.g.page1.stfb014" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfb015
            #add-point:BEFORE FIELD stfb015
            {<point name="input.b.page1.stfb015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfb015
            
            #add-point:AFTER FIELD stfb015
            {<point name="input.a.page1.stfb015" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfb015
            #add-point:ON CHANGE stfb015
            {<point name="input.g.page1.stfb015" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfb016
            #add-point:BEFORE FIELD stfb016
            {<point name="input.b.page1.stfb016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfb016
            
            #add-point:AFTER FIELD stfb016
            {<point name="input.a.page1.stfb016" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfb016
            #add-point:ON CHANGE stfb016
            {<point name="input.g.page1.stfb016" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfb017
            #add-point:BEFORE FIELD stfb017
            {<point name="input.b.page1.stfb017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfb017
            
            #add-point:AFTER FIELD stfb017
            {<point name="input.a.page1.stfb017" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfb017
            #add-point:ON CHANGE stfb017
            {<point name="input.g.page1.stfb017" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfbsite
            #add-point:BEFORE FIELD stfbsite
            {<point name="input.b.page1.stfbsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfbsite
            
            #add-point:AFTER FIELD stfbsite
            {<point name="input.a.page1.stfbsite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfbsite
            #add-point:ON CHANGE stfbsite
            {<point name="input.g.page1.stfbsite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfbunit
            #add-point:BEFORE FIELD stfbunit
            {<point name="input.b.page1.stfbunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfbunit
            
            #add-point:AFTER FIELD stfbunit
            {<point name="input.a.page1.stfbunit" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfbunit
            #add-point:ON CHANGE stfbunit
            {<point name="input.g.page1.stfbunit" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.stfbseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfbseq
            #add-point:ON ACTION controlp INFIELD stfbseq
            {<point name="input.c.page1.stfbseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stfb002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfb002
            #add-point:ON ACTION controlp INFIELD stfb002
            {<point name="input.c.page1.stfb002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stfb003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfb003
            #add-point:ON ACTION controlp INFIELD stfb003
            {<point name="input.c.page1.stfb003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stfb004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfb004
            #add-point:ON ACTION controlp INFIELD stfb004
            {<point name="input.c.page1.stfb004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stfb005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfb005
            #add-point:ON ACTION controlp INFIELD stfb005
            {<point name="input.c.page1.stfb005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stfb006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfb006
            #add-point:ON ACTION controlp INFIELD stfb006
            {<point name="input.c.page1.stfb006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stfb007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfb007
            #add-point:ON ACTION controlp INFIELD stfb007
            {<point name="input.c.page1.stfb007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stfb008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfb008
            #add-point:ON ACTION controlp INFIELD stfb008
            {<point name="input.c.page1.stfb008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stfb009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfb009
            #add-point:ON ACTION controlp INFIELD stfb009
            {<point name="input.c.page1.stfb009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stfb010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfb010
            #add-point:ON ACTION controlp INFIELD stfb010
            {<point name="input.c.page1.stfb010" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stfb011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfb011
            #add-point:ON ACTION controlp INFIELD stfb011
            {<point name="input.c.page1.stfb011" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stfb012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfb012
            #add-point:ON ACTION controlp INFIELD stfb012
            {<point name="input.c.page1.stfb012" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stfb013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfb013
            #add-point:ON ACTION controlp INFIELD stfb013
            {<point name="input.c.page1.stfb013" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stfb014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfb014
            #add-point:ON ACTION controlp INFIELD stfb014
            {<point name="input.c.page1.stfb014" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stfb015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfb015
            #add-point:ON ACTION controlp INFIELD stfb015
            {<point name="input.c.page1.stfb015" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stfb016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfb016
            #add-point:ON ACTION controlp INFIELD stfb016
            {<point name="input.c.page1.stfb016" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stfb017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfb017
            #add-point:ON ACTION controlp INFIELD stfb017
            {<point name="input.c.page1.stfb017" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stfbsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfbsite
            #add-point:ON ACTION controlp INFIELD stfbsite
            {<point name="input.c.page1.stfbsite" />}
            #END add-point
 
         #Ctrlp:input.c.page1.stfbunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfbunit
            #add-point:ON ACTION controlp INFIELD stfbunit
            {<point name="input.c.page1.stfbunit" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_stfb_d[l_ac].* = g_stfb_d_t.*
               CLOSE astm401_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_stfb_d[l_ac].stfbseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_stfb_d[l_ac].* = g_stfb_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL astm401_stfb_t_mask_restore('restore_mask_o')
      
               UPDATE stfb_t SET (stfb001,stfbseq,stfb002,stfb003,stfb004,stfb005,stfb006,stfb007,stfb008, 
                   stfb009,stfb010,stfb011,stfb012,stfb013,stfb014,stfb015,stfb016,stfb017,stfbsite, 
                   stfbunit) = (g_stfa_m.stfa001,g_stfb_d[l_ac].stfbseq,g_stfb_d[l_ac].stfb002,g_stfb_d[l_ac].stfb003, 
                   g_stfb_d[l_ac].stfb004,g_stfb_d[l_ac].stfb005,g_stfb_d[l_ac].stfb006,g_stfb_d[l_ac].stfb007, 
                   g_stfb_d[l_ac].stfb008,g_stfb_d[l_ac].stfb009,g_stfb_d[l_ac].stfb010,g_stfb_d[l_ac].stfb011, 
                   g_stfb_d[l_ac].stfb012,g_stfb_d[l_ac].stfb013,g_stfb_d[l_ac].stfb014,g_stfb_d[l_ac].stfb015, 
                   g_stfb_d[l_ac].stfb016,g_stfb_d[l_ac].stfb017,g_stfb_d[l_ac].stfbsite,g_stfb_d[l_ac].stfbunit) 

                WHERE stfbent = g_enterprise AND stfb001 = g_stfa_m.stfa001 
 
                  AND stfbseq = g_stfb_d_t.stfbseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfb_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_stfb_d[l_ac].* = g_stfb_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfb_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_stfb_d[l_ac].* = g_stfb_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys_bak[1] = g_stfa001_t
               LET gs_keys[2] = g_stfb_d[g_detail_idx].stfbseq
               LET gs_keys_bak[2] = g_stfb_d_t.stfbseq
               CALL astm401_update_b('stfb_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL astm401_stfb_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_stfb_d[g_detail_idx].stfbseq = g_stfb_d_t.stfbseq 
 
                  ) THEN
                  LET gs_keys[01] = g_stfa_m.stfa001
 
                  LET gs_keys[gs_keys.getLength()+1] = g_stfb_d_t.stfbseq
 
                  CALL astm401_key_update_b(gs_keys,'stfb_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb_d_t)
               LET g_log2 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL astm401_unlock_b("stfb_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_stfb_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_stfb_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_stfb2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body2.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stfb2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astm401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_stfb2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stfb2_d[l_ac].* TO NULL 
            INITIALIZE g_stfb2_d_t.* TO NULL 
            INITIALIZE g_stfb2_d_o.* TO NULL 
            #公用欄位給值(單身2)
            
            #自定義預設值(單身2)
                  LET g_stfb2_d[l_ac].stfc017 = "0"
 
            #add-point:modify段before備份
            {<point name="input.body2.insert.before_bak"/>}
            #end add-point
            LET g_stfb2_d_t.* = g_stfb2_d[l_ac].*     #新輸入資料
            LET g_stfb2_d_o.* = g_stfb2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astm401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL astm401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stfb2_d[li_reproduce_target].* = g_stfb2_d[li_reproduce].*
 
               LET g_stfb2_d[li_reproduce_target].stfcseq = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 2
            CALL astm401_b_fill2('8')
  
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astm401_cl USING g_enterprise,g_stfa_m.stfa001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm401_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE astm401_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_stfb2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stfb2_d[l_ac].stfcseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_stfb2_d_t.* = g_stfb2_d[l_ac].*  #BACKUP
               LET g_stfb2_d_o.* = g_stfb2_d[l_ac].*  #BACKUP
               CALL astm401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL astm401_set_no_entry_b(l_cmd)
               IF NOT astm401_lock_b("stfc_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astm401_bcl2 INTO g_stfb2_d[l_ac].stfcseq,g_stfb2_d[l_ac].stfc002,g_stfb2_d[l_ac].stfc003, 
                      g_stfb2_d[l_ac].stfc024,g_stfb2_d[l_ac].stfc025,g_stfb2_d[l_ac].stfc004,g_stfb2_d[l_ac].stfc005, 
                      g_stfb2_d[l_ac].stfc006,g_stfb2_d[l_ac].stfc007,g_stfb2_d[l_ac].stfc008,g_stfb2_d[l_ac].stfc009, 
                      g_stfb2_d[l_ac].stfc010,g_stfb2_d[l_ac].stfc011,g_stfb2_d[l_ac].stfc012,g_stfb2_d[l_ac].stfc013, 
                      g_stfb2_d[l_ac].stfc014,g_stfb2_d[l_ac].stfc015,g_stfb2_d[l_ac].stfc016,g_stfb2_d[l_ac].stfc017, 
                      g_stfb2_d[l_ac].stfc018,g_stfb2_d[l_ac].stfc019,g_stfb2_d[l_ac].stfc020,g_stfb2_d[l_ac].stfc021, 
                      g_stfb2_d[l_ac].stfc022,g_stfb2_d[l_ac].stfc023,g_stfb2_d[l_ac].stfcsite,g_stfb2_d[l_ac].stfcunit 

                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stfb2_d_mask_o[l_ac].* =  g_stfb2_d[l_ac].*
                  CALL astm401_stfc_t_mask()
                  LET g_stfb2_d_mask_n[l_ac].* =  g_stfb2_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astm401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body2.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stfa_m.stfa001
               LET gs_keys[gs_keys.getLength()+1] = g_stfb2_d_t.stfcseq
            
               #刪除同層單身
               IF NOT astm401_delete_b('stfc_t',gs_keys,"'2'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astm401_key_delete_b(gs_keys,'stfc_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astm401_bcl
               LET g_rec_b = g_rec_b-1
               
               #add-point:單身2刪除後
               {<point name="input.body2.a_delete"/>}
               #end add-point
               LET l_count = g_stfb_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body2.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stfb2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM stfc_t 
             WHERE stfcent = g_enterprise AND stfc001 = g_stfa_m.stfa001
               AND stfcseq = g_stfb2_d[l_ac].stfcseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys[2] = g_stfb2_d[g_detail_idx].stfcseq
               CALL astm401_insert_b('stfc_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_stfb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfc_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astm401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_stfb2_d[l_ac].* = g_stfb2_d_t.*
               CLOSE astm401_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_stfb2_d[l_ac].* = g_stfb2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               #將遮罩欄位還原
               CALL astm401_stfc_t_mask_restore('restore_mask_o')
                              
               UPDATE stfc_t SET (stfc001,stfcseq,stfc002,stfc003,stfc024,stfc025,stfc004,stfc005,stfc006, 
                   stfc007,stfc008,stfc009,stfc010,stfc011,stfc012,stfc013,stfc014,stfc015,stfc016,stfc017, 
                   stfc018,stfc019,stfc020,stfc021,stfc022,stfc023,stfcsite,stfcunit) = (g_stfa_m.stfa001, 
                   g_stfb2_d[l_ac].stfcseq,g_stfb2_d[l_ac].stfc002,g_stfb2_d[l_ac].stfc003,g_stfb2_d[l_ac].stfc024, 
                   g_stfb2_d[l_ac].stfc025,g_stfb2_d[l_ac].stfc004,g_stfb2_d[l_ac].stfc005,g_stfb2_d[l_ac].stfc006, 
                   g_stfb2_d[l_ac].stfc007,g_stfb2_d[l_ac].stfc008,g_stfb2_d[l_ac].stfc009,g_stfb2_d[l_ac].stfc010, 
                   g_stfb2_d[l_ac].stfc011,g_stfb2_d[l_ac].stfc012,g_stfb2_d[l_ac].stfc013,g_stfb2_d[l_ac].stfc014, 
                   g_stfb2_d[l_ac].stfc015,g_stfb2_d[l_ac].stfc016,g_stfb2_d[l_ac].stfc017,g_stfb2_d[l_ac].stfc018, 
                   g_stfb2_d[l_ac].stfc019,g_stfb2_d[l_ac].stfc020,g_stfb2_d[l_ac].stfc021,g_stfb2_d[l_ac].stfc022, 
                   g_stfb2_d[l_ac].stfc023,g_stfb2_d[l_ac].stfcsite,g_stfb2_d[l_ac].stfcunit) #自訂欄位頁簽 

                WHERE stfcent = g_enterprise AND stfc001 = g_stfa_m.stfa001
                  AND stfcseq = g_stfb2_d_t.stfcseq #項次 
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfc_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_stfb2_d[l_ac].* = g_stfb2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfc_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_stfb2_d[l_ac].* = g_stfb2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys_bak[1] = g_stfa001_t
               LET gs_keys[2] = g_stfb2_d[g_detail_idx].stfcseq
               LET gs_keys_bak[2] = g_stfb2_d_t.stfcseq
               CALL astm401_update_b('stfc_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astm401_stfc_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_stfb2_d[g_detail_idx].stfcseq = g_stfb2_d_t.stfcseq 
                  ) THEN
                  LET gs_keys[01] = g_stfa_m.stfa001
                  LET gs_keys[gs_keys.getLength()+1] = g_stfb2_d_t.stfcseq
                  CALL astm401_key_update_b(gs_keys,'stfc_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb2_d_t)
               LET g_log2 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfcseq
            #add-point:BEFORE FIELD stfcseq
            {<point name="input.b.page2.stfcseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfcseq
            
            #add-point:AFTER FIELD stfcseq
            {<point name="input.a.page2.stfcseq" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfcseq
            #add-point:ON CHANGE stfcseq
            {<point name="input.g.page2.stfcseq" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc002
            #add-point:BEFORE FIELD stfc002
            {<point name="input.b.page2.stfc002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc002
            
            #add-point:AFTER FIELD stfc002
            {<point name="input.a.page2.stfc002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfc002
            #add-point:ON CHANGE stfc002
            {<point name="input.g.page2.stfc002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc003
            #add-point:BEFORE FIELD stfc003
            {<point name="input.b.page2.stfc003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc003
            
            #add-point:AFTER FIELD stfc003
            {<point name="input.a.page2.stfc003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfc003
            #add-point:ON CHANGE stfc003
            {<point name="input.g.page2.stfc003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc024
            #add-point:BEFORE FIELD stfc024
            {<point name="input.b.page2.stfc024" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc024
            
            #add-point:AFTER FIELD stfc024
            {<point name="input.a.page2.stfc024" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfc024
            #add-point:ON CHANGE stfc024
            {<point name="input.g.page2.stfc024" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc025
            #add-point:BEFORE FIELD stfc025
            {<point name="input.b.page2.stfc025" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc025
            
            #add-point:AFTER FIELD stfc025
            {<point name="input.a.page2.stfc025" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfc025
            #add-point:ON CHANGE stfc025
            {<point name="input.g.page2.stfc025" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc004
            
            #add-point:AFTER FIELD stfc004
            {<point name="input.a.page2.stfc004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc004
            #add-point:BEFORE FIELD stfc004
            {<point name="input.b.page2.stfc004" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfc004
            #add-point:ON CHANGE stfc004
            {<point name="input.g.page2.stfc004" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc005
            
            #add-point:AFTER FIELD stfc005
            {<point name="input.a.page2.stfc005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc005
            #add-point:BEFORE FIELD stfc005
            {<point name="input.b.page2.stfc005" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfc005
            #add-point:ON CHANGE stfc005
            {<point name="input.g.page2.stfc005" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc006
            
            #add-point:AFTER FIELD stfc006
            {<point name="input.a.page2.stfc006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc006
            #add-point:BEFORE FIELD stfc006
            {<point name="input.b.page2.stfc006" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfc006
            #add-point:ON CHANGE stfc006
            {<point name="input.g.page2.stfc006" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc007
            
            #add-point:AFTER FIELD stfc007
            {<point name="input.a.page2.stfc007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc007
            #add-point:BEFORE FIELD stfc007
            {<point name="input.b.page2.stfc007" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfc007
            #add-point:ON CHANGE stfc007
            {<point name="input.g.page2.stfc007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc008
            #add-point:BEFORE FIELD stfc008
            {<point name="input.b.page2.stfc008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc008
            
            #add-point:AFTER FIELD stfc008
            {<point name="input.a.page2.stfc008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfc008
            #add-point:ON CHANGE stfc008
            {<point name="input.g.page2.stfc008" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc009
            
            #add-point:AFTER FIELD stfc009
            {<point name="input.a.page2.stfc009" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc009
            #add-point:BEFORE FIELD stfc009
            {<point name="input.b.page2.stfc009" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfc009
            #add-point:ON CHANGE stfc009
            {<point name="input.g.page2.stfc009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc010
            #add-point:BEFORE FIELD stfc010
            {<point name="input.b.page2.stfc010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc010
            
            #add-point:AFTER FIELD stfc010
            {<point name="input.a.page2.stfc010" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfc010
            #add-point:ON CHANGE stfc010
            {<point name="input.g.page2.stfc010" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc011
            #add-point:BEFORE FIELD stfc011
            {<point name="input.b.page2.stfc011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc011
            
            #add-point:AFTER FIELD stfc011
            {<point name="input.a.page2.stfc011" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfc011
            #add-point:ON CHANGE stfc011
            {<point name="input.g.page2.stfc011" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc012
            #add-point:BEFORE FIELD stfc012
            {<point name="input.b.page2.stfc012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc012
            
            #add-point:AFTER FIELD stfc012
            {<point name="input.a.page2.stfc012" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfc012
            #add-point:ON CHANGE stfc012
            {<point name="input.g.page2.stfc012" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc013
            #add-point:BEFORE FIELD stfc013
            {<point name="input.b.page2.stfc013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc013
            
            #add-point:AFTER FIELD stfc013
            {<point name="input.a.page2.stfc013" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfc013
            #add-point:ON CHANGE stfc013
            {<point name="input.g.page2.stfc013" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc014
            #add-point:BEFORE FIELD stfc014
            {<point name="input.b.page2.stfc014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc014
            
            #add-point:AFTER FIELD stfc014
            {<point name="input.a.page2.stfc014" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfc014
            #add-point:ON CHANGE stfc014
            {<point name="input.g.page2.stfc014" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc015
            
            #add-point:AFTER FIELD stfc015
            {<point name="input.a.page2.stfc015" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc015
            #add-point:BEFORE FIELD stfc015
            {<point name="input.b.page2.stfc015" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfc015
            #add-point:ON CHANGE stfc015
            {<point name="input.g.page2.stfc015" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc016
            
            #add-point:AFTER FIELD stfc016
            {<point name="input.a.page2.stfc016" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc016
            #add-point:BEFORE FIELD stfc016
            {<point name="input.b.page2.stfc016" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfc016
            #add-point:ON CHANGE stfc016
            {<point name="input.g.page2.stfc016" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc017
            #add-point:BEFORE FIELD stfc017
            {<point name="input.b.page2.stfc017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc017
            
            #add-point:AFTER FIELD stfc017
            {<point name="input.a.page2.stfc017" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfc017
            #add-point:ON CHANGE stfc017
            {<point name="input.g.page2.stfc017" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc018
            #add-point:BEFORE FIELD stfc018
            {<point name="input.b.page2.stfc018" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc018
            
            #add-point:AFTER FIELD stfc018
            {<point name="input.a.page2.stfc018" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfc018
            #add-point:ON CHANGE stfc018
            {<point name="input.g.page2.stfc018" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc019
            #add-point:BEFORE FIELD stfc019
            {<point name="input.b.page2.stfc019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc019
            
            #add-point:AFTER FIELD stfc019
            {<point name="input.a.page2.stfc019" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfc019
            #add-point:ON CHANGE stfc019
            {<point name="input.g.page2.stfc019" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc020
            #add-point:BEFORE FIELD stfc020
            {<point name="input.b.page2.stfc020" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc020
            
            #add-point:AFTER FIELD stfc020
            {<point name="input.a.page2.stfc020" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfc020
            #add-point:ON CHANGE stfc020
            {<point name="input.g.page2.stfc020" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc021
            #add-point:BEFORE FIELD stfc021
            {<point name="input.b.page2.stfc021" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc021
            
            #add-point:AFTER FIELD stfc021
            {<point name="input.a.page2.stfc021" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfc021
            #add-point:ON CHANGE stfc021
            {<point name="input.g.page2.stfc021" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc022
            #add-point:BEFORE FIELD stfc022
            {<point name="input.b.page2.stfc022" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc022
            
            #add-point:AFTER FIELD stfc022
            {<point name="input.a.page2.stfc022" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfc022
            #add-point:ON CHANGE stfc022
            {<point name="input.g.page2.stfc022" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfc023
            #add-point:BEFORE FIELD stfc023
            {<point name="input.b.page2.stfc023" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfc023
            
            #add-point:AFTER FIELD stfc023
            {<point name="input.a.page2.stfc023" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfc023
            #add-point:ON CHANGE stfc023
            {<point name="input.g.page2.stfc023" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfcsite
            #add-point:BEFORE FIELD stfcsite
            {<point name="input.b.page2.stfcsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfcsite
            
            #add-point:AFTER FIELD stfcsite
            {<point name="input.a.page2.stfcsite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfcsite
            #add-point:ON CHANGE stfcsite
            {<point name="input.g.page2.stfcsite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfcunit
            #add-point:BEFORE FIELD stfcunit
            {<point name="input.b.page2.stfcunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfcunit
            
            #add-point:AFTER FIELD stfcunit
            {<point name="input.a.page2.stfcunit" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfcunit
            #add-point:ON CHANGE stfcunit
            {<point name="input.g.page2.stfcunit" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page2.stfcseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfcseq
            #add-point:ON ACTION controlp INFIELD stfcseq
            {<point name="input.c.page2.stfcseq" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stfc002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc002
            #add-point:ON ACTION controlp INFIELD stfc002
            {<point name="input.c.page2.stfc002" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stfc003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc003
            #add-point:ON ACTION controlp INFIELD stfc003
            {<point name="input.c.page2.stfc003" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stfc024
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc024
            #add-point:ON ACTION controlp INFIELD stfc024
            {<point name="input.c.page2.stfc024" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stfc025
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc025
            #add-point:ON ACTION controlp INFIELD stfc025
            {<point name="input.c.page2.stfc025" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stfc004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc004
            #add-point:ON ACTION controlp INFIELD stfc004
            {<point name="input.c.page2.stfc004" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stfc005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc005
            #add-point:ON ACTION controlp INFIELD stfc005
            {<point name="input.c.page2.stfc005" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stfc006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc006
            #add-point:ON ACTION controlp INFIELD stfc006
            {<point name="input.c.page2.stfc006" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stfc007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc007
            #add-point:ON ACTION controlp INFIELD stfc007
            {<point name="input.c.page2.stfc007" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stfc008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc008
            #add-point:ON ACTION controlp INFIELD stfc008
            {<point name="input.c.page2.stfc008" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stfc009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc009
            #add-point:ON ACTION controlp INFIELD stfc009
            {<point name="input.c.page2.stfc009" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stfc010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc010
            #add-point:ON ACTION controlp INFIELD stfc010
            {<point name="input.c.page2.stfc010" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stfc011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc011
            #add-point:ON ACTION controlp INFIELD stfc011
            {<point name="input.c.page2.stfc011" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stfc012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc012
            #add-point:ON ACTION controlp INFIELD stfc012
            {<point name="input.c.page2.stfc012" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stfc013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc013
            #add-point:ON ACTION controlp INFIELD stfc013
            {<point name="input.c.page2.stfc013" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stfc014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc014
            #add-point:ON ACTION controlp INFIELD stfc014
            {<point name="input.c.page2.stfc014" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stfc015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc015
            #add-point:ON ACTION controlp INFIELD stfc015
            {<point name="input.c.page2.stfc015" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stfc016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc016
            #add-point:ON ACTION controlp INFIELD stfc016
            {<point name="input.c.page2.stfc016" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stfc017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc017
            #add-point:ON ACTION controlp INFIELD stfc017
            {<point name="input.c.page2.stfc017" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stfc018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc018
            #add-point:ON ACTION controlp INFIELD stfc018
            {<point name="input.c.page2.stfc018" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stfc019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc019
            #add-point:ON ACTION controlp INFIELD stfc019
            {<point name="input.c.page2.stfc019" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stfc020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc020
            #add-point:ON ACTION controlp INFIELD stfc020
            {<point name="input.c.page2.stfc020" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stfc021
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc021
            #add-point:ON ACTION controlp INFIELD stfc021
            {<point name="input.c.page2.stfc021" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stfc022
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc022
            #add-point:ON ACTION controlp INFIELD stfc022
            {<point name="input.c.page2.stfc022" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stfc023
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfc023
            #add-point:ON ACTION controlp INFIELD stfc023
            {<point name="input.c.page2.stfc023" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stfcsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfcsite
            #add-point:ON ACTION controlp INFIELD stfcsite
            {<point name="input.c.page2.stfcsite" />}
            #END add-point
 
         #Ctrlp:input.c.page2.stfcunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfcunit
            #add-point:ON ACTION controlp INFIELD stfcunit
            {<point name="input.c.page2.stfcunit" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_stfb2_d[l_ac].* = g_stfb2_d_t.*
               END IF
               CLOSE astm401_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astm401_unlock_b("stfc_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_stfb2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_stfb2_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_stfb3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_3)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body3.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stfb3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astm401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_stfb3_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body3.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stfb3_d[l_ac].* TO NULL 
            INITIALIZE g_stfb3_d_t.* TO NULL 
            INITIALIZE g_stfb3_d_o.* TO NULL 
            #公用欄位給值(單身3)
            
            #自定義預設值(單身3)
                  LET g_stfb3_d[l_ac].stfe007 = "0"
 
            #add-point:modify段before備份
            {<point name="input.body3.insert.before_bak"/>}
            #end add-point
            LET g_stfb3_d_t.* = g_stfb3_d[l_ac].*     #新輸入資料
            LET g_stfb3_d_o.* = g_stfb3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astm401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body3.insert.after_set_entry_b"/>}
            #end add-point
            CALL astm401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stfb3_d[li_reproduce_target].* = g_stfb3_d[li_reproduce].*
 
               LET g_stfb3_d[li_reproduce_target].stfeseq = NULL
               LET g_stfb3_d[li_reproduce_target].stfe002 = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body3.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body3.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 3
            CALL astm401_b_fill2('9')
  
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astm401_cl USING g_enterprise,g_stfa_m.stfa001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm401_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE astm401_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_stfb3_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stfb3_d[l_ac].stfeseq IS NOT NULL
               AND g_stfb3_d[l_ac].stfe002 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_stfb3_d_t.* = g_stfb3_d[l_ac].*  #BACKUP
               LET g_stfb3_d_o.* = g_stfb3_d[l_ac].*  #BACKUP
               CALL astm401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body3.after_set_entry_b"/>}
               #end add-point  
               CALL astm401_set_no_entry_b(l_cmd)
               IF NOT astm401_lock_b("stfe_t","'3'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astm401_bcl3 INTO g_stfb3_d[l_ac].stfe002,g_stfb3_d[l_ac].stfeseq,g_stfb3_d[l_ac].stfe003, 
                      g_stfb3_d[l_ac].stfe004,g_stfb3_d[l_ac].stfe005,g_stfb3_d[l_ac].stfe006,g_stfb3_d[l_ac].stfe007, 
                      g_stfb3_d[l_ac].stfe008,g_stfb3_d[l_ac].stfe009,g_stfb3_d[l_ac].stfe010,g_stfb3_d[l_ac].stfe011, 
                      g_stfb3_d[l_ac].stfesite,g_stfb3_d[l_ac].stfeunit
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stfb3_d_mask_o[l_ac].* =  g_stfb3_d[l_ac].*
                  CALL astm401_stfe_t_mask()
                  LET g_stfb3_d_mask_n[l_ac].* =  g_stfb3_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astm401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body3.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body3.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前
               {<point name="input.body3.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stfa_m.stfa001
               LET gs_keys[gs_keys.getLength()+1] = g_stfb3_d_t.stfeseq
               LET gs_keys[gs_keys.getLength()+1] = g_stfb3_d_t.stfe002
            
               #刪除同層單身
               IF NOT astm401_delete_b('stfe_t',gs_keys,"'3'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astm401_key_delete_b(gs_keys,'stfe_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身3刪除中
               {<point name="input.body3.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astm401_bcl
               LET g_rec_b = g_rec_b-1
               
               #add-point:單身3刪除後
               {<point name="input.body3.a_delete"/>}
               #end add-point
               LET l_count = g_stfb_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body3.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stfb3_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身3新增前
            {<point name="input.body3.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM stfe_t 
             WHERE stfeent = g_enterprise AND stfe001 = g_stfa_m.stfa001
               AND stfeseq = g_stfb3_d[l_ac].stfeseq
               AND stfe002 = g_stfb3_d[l_ac].stfe002
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前
               {<point name="input.body3.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys[2] = g_stfb3_d[g_detail_idx].stfeseq
               LET gs_keys[3] = g_stfb3_d[g_detail_idx].stfe002
               CALL astm401_insert_b('stfe_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3
               {<point name="input.body3.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_stfb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfe_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astm401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body3.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_stfb3_d[l_ac].* = g_stfb3_d_t.*
               CLOSE astm401_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_stfb3_d[l_ac].* = g_stfb3_d_t.*
            ELSE
               #add-point:單身page3修改前
               {<point name="input.body3.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身3)
               
               
               #將遮罩欄位還原
               CALL astm401_stfe_t_mask_restore('restore_mask_o')
                              
               UPDATE stfe_t SET (stfe001,stfe002,stfeseq,stfe003,stfe004,stfe005,stfe006,stfe007,stfe008, 
                   stfe009,stfe010,stfe011,stfesite,stfeunit) = (g_stfa_m.stfa001,g_stfb3_d[l_ac].stfe002, 
                   g_stfb3_d[l_ac].stfeseq,g_stfb3_d[l_ac].stfe003,g_stfb3_d[l_ac].stfe004,g_stfb3_d[l_ac].stfe005, 
                   g_stfb3_d[l_ac].stfe006,g_stfb3_d[l_ac].stfe007,g_stfb3_d[l_ac].stfe008,g_stfb3_d[l_ac].stfe009, 
                   g_stfb3_d[l_ac].stfe010,g_stfb3_d[l_ac].stfe011,g_stfb3_d[l_ac].stfesite,g_stfb3_d[l_ac].stfeunit)  
                   #自訂欄位頁簽
                WHERE stfeent = g_enterprise AND stfe001 = g_stfa_m.stfa001
                  AND stfeseq = g_stfb3_d_t.stfeseq #項次 
                  AND stfe002 = g_stfb3_d_t.stfe002
                  
               #add-point:單身page3修改中
               {<point name="input.body3.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfe_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_stfb3_d[l_ac].* = g_stfb3_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfe_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_stfb3_d[l_ac].* = g_stfb3_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys_bak[1] = g_stfa001_t
               LET gs_keys[2] = g_stfb3_d[g_detail_idx].stfeseq
               LET gs_keys_bak[2] = g_stfb3_d_t.stfeseq
               LET gs_keys[3] = g_stfb3_d[g_detail_idx].stfe002
               LET gs_keys_bak[3] = g_stfb3_d_t.stfe002
               CALL astm401_update_b('stfe_t',gs_keys,gs_keys_bak,"'3'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astm401_stfe_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_stfb3_d[g_detail_idx].stfeseq = g_stfb3_d_t.stfeseq 
                  AND g_stfb3_d[g_detail_idx].stfe002 = g_stfb3_d_t.stfe002 
                  ) THEN
                  LET gs_keys[01] = g_stfa_m.stfa001
                  LET gs_keys[gs_keys.getLength()+1] = g_stfb3_d_t.stfeseq
                  LET gs_keys[gs_keys.getLength()+1] = g_stfb3_d_t.stfe002
                  CALL astm401_key_update_b(gs_keys,'stfe_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb3_d_t)
               LET g_log2 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb3_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page3修改後
               {<point name="input.body3.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfe002
            #add-point:BEFORE FIELD stfe002
            {<point name="input.b.page3.stfe002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfe002
            
            #add-point:AFTER FIELD stfe002
            {<point name="input.a.page3.stfe002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfe002
            #add-point:ON CHANGE stfe002
            {<point name="input.g.page3.stfe002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfeseq
            #add-point:BEFORE FIELD stfeseq
            {<point name="input.b.page3.stfeseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfeseq
            
            #add-point:AFTER FIELD stfeseq
            {<point name="input.a.page3.stfeseq" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfeseq
            #add-point:ON CHANGE stfeseq
            {<point name="input.g.page3.stfeseq" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfe003
            
            #add-point:AFTER FIELD stfe003
            {<point name="input.a.page3.stfe003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfe003
            #add-point:BEFORE FIELD stfe003
            {<point name="input.b.page3.stfe003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfe003
            #add-point:ON CHANGE stfe003
            {<point name="input.g.page3.stfe003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfe004
            #add-point:BEFORE FIELD stfe004
            {<point name="input.b.page3.stfe004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfe004
            
            #add-point:AFTER FIELD stfe004
            {<point name="input.a.page3.stfe004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfe004
            #add-point:ON CHANGE stfe004
            {<point name="input.g.page3.stfe004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfe005
            #add-point:BEFORE FIELD stfe005
            {<point name="input.b.page3.stfe005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfe005
            
            #add-point:AFTER FIELD stfe005
            {<point name="input.a.page3.stfe005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfe005
            #add-point:ON CHANGE stfe005
            {<point name="input.g.page3.stfe005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfe006
            #add-point:BEFORE FIELD stfe006
            {<point name="input.b.page3.stfe006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfe006
            
            #add-point:AFTER FIELD stfe006
            {<point name="input.a.page3.stfe006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfe006
            #add-point:ON CHANGE stfe006
            {<point name="input.g.page3.stfe006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfe007
            #add-point:BEFORE FIELD stfe007
            {<point name="input.b.page3.stfe007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfe007
            
            #add-point:AFTER FIELD stfe007
            {<point name="input.a.page3.stfe007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfe007
            #add-point:ON CHANGE stfe007
            {<point name="input.g.page3.stfe007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfe008
            #add-point:BEFORE FIELD stfe008
            {<point name="input.b.page3.stfe008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfe008
            
            #add-point:AFTER FIELD stfe008
            {<point name="input.a.page3.stfe008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfe008
            #add-point:ON CHANGE stfe008
            {<point name="input.g.page3.stfe008" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfe009
            #add-point:BEFORE FIELD stfe009
            {<point name="input.b.page3.stfe009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfe009
            
            #add-point:AFTER FIELD stfe009
            {<point name="input.a.page3.stfe009" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfe009
            #add-point:ON CHANGE stfe009
            {<point name="input.g.page3.stfe009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfe010
            #add-point:BEFORE FIELD stfe010
            {<point name="input.b.page3.stfe010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfe010
            
            #add-point:AFTER FIELD stfe010
            {<point name="input.a.page3.stfe010" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfe010
            #add-point:ON CHANGE stfe010
            {<point name="input.g.page3.stfe010" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfe011
            #add-point:BEFORE FIELD stfe011
            {<point name="input.b.page3.stfe011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfe011
            
            #add-point:AFTER FIELD stfe011
            {<point name="input.a.page3.stfe011" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfe011
            #add-point:ON CHANGE stfe011
            {<point name="input.g.page3.stfe011" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfesite
            #add-point:BEFORE FIELD stfesite
            {<point name="input.b.page3.stfesite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfesite
            
            #add-point:AFTER FIELD stfesite
            {<point name="input.a.page3.stfesite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfesite
            #add-point:ON CHANGE stfesite
            {<point name="input.g.page3.stfesite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfeunit
            #add-point:BEFORE FIELD stfeunit
            {<point name="input.b.page3.stfeunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfeunit
            
            #add-point:AFTER FIELD stfeunit
            {<point name="input.a.page3.stfeunit" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfeunit
            #add-point:ON CHANGE stfeunit
            {<point name="input.g.page3.stfeunit" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page3.stfe002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfe002
            #add-point:ON ACTION controlp INFIELD stfe002
            {<point name="input.c.page3.stfe002" />}
            #END add-point
 
         #Ctrlp:input.c.page3.stfeseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfeseq
            #add-point:ON ACTION controlp INFIELD stfeseq
            {<point name="input.c.page3.stfeseq" />}
            #END add-point
 
         #Ctrlp:input.c.page3.stfe003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfe003
            #add-point:ON ACTION controlp INFIELD stfe003
            {<point name="input.c.page3.stfe003" />}
            #END add-point
 
         #Ctrlp:input.c.page3.stfe004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfe004
            #add-point:ON ACTION controlp INFIELD stfe004
            {<point name="input.c.page3.stfe004" />}
            #END add-point
 
         #Ctrlp:input.c.page3.stfe005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfe005
            #add-point:ON ACTION controlp INFIELD stfe005
            {<point name="input.c.page3.stfe005" />}
            #END add-point
 
         #Ctrlp:input.c.page3.stfe006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfe006
            #add-point:ON ACTION controlp INFIELD stfe006
            {<point name="input.c.page3.stfe006" />}
            #END add-point
 
         #Ctrlp:input.c.page3.stfe007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfe007
            #add-point:ON ACTION controlp INFIELD stfe007
            {<point name="input.c.page3.stfe007" />}
            #END add-point
 
         #Ctrlp:input.c.page3.stfe008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfe008
            #add-point:ON ACTION controlp INFIELD stfe008
            {<point name="input.c.page3.stfe008" />}
            #END add-point
 
         #Ctrlp:input.c.page3.stfe009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfe009
            #add-point:ON ACTION controlp INFIELD stfe009
            {<point name="input.c.page3.stfe009" />}
            #END add-point
 
         #Ctrlp:input.c.page3.stfe010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfe010
            #add-point:ON ACTION controlp INFIELD stfe010
            {<point name="input.c.page3.stfe010" />}
            #END add-point
 
         #Ctrlp:input.c.page3.stfe011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfe011
            #add-point:ON ACTION controlp INFIELD stfe011
            {<point name="input.c.page3.stfe011" />}
            #END add-point
 
         #Ctrlp:input.c.page3.stfesite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfesite
            #add-point:ON ACTION controlp INFIELD stfesite
            {<point name="input.c.page3.stfesite" />}
            #END add-point
 
         #Ctrlp:input.c.page3.stfeunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfeunit
            #add-point:ON ACTION controlp INFIELD stfeunit
            {<point name="input.c.page3.stfeunit" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page3 after_row
            {<point name="input.body3.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_stfb3_d[l_ac].* = g_stfb3_d_t.*
               END IF
               CLOSE astm401_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astm401_unlock_b("stfe_t","'3'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page3 after_row2
            {<point name="input.body3.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body3.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_stfb3_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_stfb3_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_stfb4_d FROM s_detail4.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_4)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body4.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stfb4_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astm401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_stfb4_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body4.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stfb4_d[l_ac].* TO NULL 
            INITIALIZE g_stfb4_d_t.* TO NULL 
            INITIALIZE g_stfb4_d_o.* TO NULL 
            #公用欄位給值(單身4)
            
            #自定義預設值(單身4)
                  LET g_stfb4_d[l_ac].stfg004 = "0"
      LET g_stfb4_d[l_ac].stfg005 = "0"
 
            #add-point:modify段before備份
            {<point name="input.body4.insert.before_bak"/>}
            #end add-point
            LET g_stfb4_d_t.* = g_stfb4_d[l_ac].*     #新輸入資料
            LET g_stfb4_d_o.* = g_stfb4_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astm401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body4.insert.after_set_entry_b"/>}
            #end add-point
            CALL astm401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stfb4_d[li_reproduce_target].* = g_stfb4_d[li_reproduce].*
 
               LET g_stfb4_d[li_reproduce_target].stfgseq = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body4.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body4.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 4
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astm401_cl USING g_enterprise,g_stfa_m.stfa001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm401_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE astm401_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_stfb4_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stfb4_d[l_ac].stfgseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_stfb4_d_t.* = g_stfb4_d[l_ac].*  #BACKUP
               LET g_stfb4_d_o.* = g_stfb4_d[l_ac].*  #BACKUP
               CALL astm401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body4.after_set_entry_b"/>}
               #end add-point  
               CALL astm401_set_no_entry_b(l_cmd)
               IF NOT astm401_lock_b("stfg_t","'4'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astm401_bcl4 INTO g_stfb4_d[l_ac].stfgseq,g_stfb4_d[l_ac].stfg003,g_stfb4_d[l_ac].stfg002, 
                      g_stfb4_d[l_ac].stfg004,g_stfb4_d[l_ac].stfg005,g_stfb4_d[l_ac].stfgacti,g_stfb4_d[l_ac].stfgsite, 
                      g_stfb4_d[l_ac].stfgunit
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stfb4_d_mask_o[l_ac].* =  g_stfb4_d[l_ac].*
                  CALL astm401_stfg_t_mask()
                  LET g_stfb4_d_mask_n[l_ac].* =  g_stfb4_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astm401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body4.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body4.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身4刪除前
               {<point name="input.body4.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stfa_m.stfa001
               LET gs_keys[gs_keys.getLength()+1] = g_stfb4_d_t.stfgseq
            
               #刪除同層單身
               IF NOT astm401_delete_b('stfg_t',gs_keys,"'4'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astm401_key_delete_b(gs_keys,'stfg_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身4刪除中
               {<point name="input.body4.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astm401_bcl
               LET g_rec_b = g_rec_b-1
               
               #add-point:單身4刪除後
               {<point name="input.body4.a_delete"/>}
               #end add-point
               LET l_count = g_stfb_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body4.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stfb4_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身4新增前
            {<point name="input.body4.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM stfg_t 
             WHERE stfgent = g_enterprise AND stfg001 = g_stfa_m.stfa001
               AND stfgseq = g_stfb4_d[l_ac].stfgseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身4新增前
               {<point name="input.body4.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys[2] = g_stfb4_d[g_detail_idx].stfgseq
               CALL astm401_insert_b('stfg_t',gs_keys,"'4'")
                           
               #add-point:單身新增後4
               {<point name="input.body4.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_stfb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfg_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astm401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body4.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_stfb4_d[l_ac].* = g_stfb4_d_t.*
               CLOSE astm401_bcl4
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_stfb4_d[l_ac].* = g_stfb4_d_t.*
            ELSE
               #add-point:單身page4修改前
               {<point name="input.body4.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身4)
               
               
               #將遮罩欄位還原
               CALL astm401_stfg_t_mask_restore('restore_mask_o')
                              
               UPDATE stfg_t SET (stfg001,stfgseq,stfg003,stfg002,stfg004,stfg005,stfgacti,stfgsite, 
                   stfgunit) = (g_stfa_m.stfa001,g_stfb4_d[l_ac].stfgseq,g_stfb4_d[l_ac].stfg003,g_stfb4_d[l_ac].stfg002, 
                   g_stfb4_d[l_ac].stfg004,g_stfb4_d[l_ac].stfg005,g_stfb4_d[l_ac].stfgacti,g_stfb4_d[l_ac].stfgsite, 
                   g_stfb4_d[l_ac].stfgunit) #自訂欄位頁簽
                WHERE stfgent = g_enterprise AND stfg001 = g_stfa_m.stfa001
                  AND stfgseq = g_stfb4_d_t.stfgseq #項次 
                  
               #add-point:單身page4修改中
               {<point name="input.body4.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfg_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_stfb4_d[l_ac].* = g_stfb4_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfg_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_stfb4_d[l_ac].* = g_stfb4_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys_bak[1] = g_stfa001_t
               LET gs_keys[2] = g_stfb4_d[g_detail_idx].stfgseq
               LET gs_keys_bak[2] = g_stfb4_d_t.stfgseq
               CALL astm401_update_b('stfg_t',gs_keys,gs_keys_bak,"'4'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astm401_stfg_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_stfb4_d[g_detail_idx].stfgseq = g_stfb4_d_t.stfgseq 
                  ) THEN
                  LET gs_keys[01] = g_stfa_m.stfa001
                  LET gs_keys[gs_keys.getLength()+1] = g_stfb4_d_t.stfgseq
                  CALL astm401_key_update_b(gs_keys,'stfg_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb4_d_t)
               LET g_log2 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb4_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page4修改後
               {<point name="input.body4.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfgseq
            #add-point:BEFORE FIELD stfgseq
            {<point name="input.b.page4.stfgseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfgseq
            
            #add-point:AFTER FIELD stfgseq
            {<point name="input.a.page4.stfgseq" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfgseq
            #add-point:ON CHANGE stfgseq
            {<point name="input.g.page4.stfgseq" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfg003
            
            #add-point:AFTER FIELD stfg003
            {<point name="input.a.page4.stfg003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfg003
            #add-point:BEFORE FIELD stfg003
            {<point name="input.b.page4.stfg003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfg003
            #add-point:ON CHANGE stfg003
            {<point name="input.g.page4.stfg003" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfg002
            
            #add-point:AFTER FIELD stfg002
            {<point name="input.a.page4.stfg002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfg002
            #add-point:BEFORE FIELD stfg002
            {<point name="input.b.page4.stfg002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfg002
            #add-point:ON CHANGE stfg002
            {<point name="input.g.page4.stfg002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfg004
            #add-point:BEFORE FIELD stfg004
            {<point name="input.b.page4.stfg004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfg004
            
            #add-point:AFTER FIELD stfg004
            {<point name="input.a.page4.stfg004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfg004
            #add-point:ON CHANGE stfg004
            {<point name="input.g.page4.stfg004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfg005
            #add-point:BEFORE FIELD stfg005
            {<point name="input.b.page4.stfg005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfg005
            
            #add-point:AFTER FIELD stfg005
            {<point name="input.a.page4.stfg005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfg005
            #add-point:ON CHANGE stfg005
            {<point name="input.g.page4.stfg005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfgacti
            #add-point:BEFORE FIELD stfgacti
            {<point name="input.b.page4.stfgacti" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfgacti
            
            #add-point:AFTER FIELD stfgacti
            {<point name="input.a.page4.stfgacti" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfgacti
            #add-point:ON CHANGE stfgacti
            {<point name="input.g.page4.stfgacti" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfgsite
            #add-point:BEFORE FIELD stfgsite
            {<point name="input.b.page4.stfgsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfgsite
            
            #add-point:AFTER FIELD stfgsite
            {<point name="input.a.page4.stfgsite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfgsite
            #add-point:ON CHANGE stfgsite
            {<point name="input.g.page4.stfgsite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfgunit
            #add-point:BEFORE FIELD stfgunit
            {<point name="input.b.page4.stfgunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfgunit
            
            #add-point:AFTER FIELD stfgunit
            {<point name="input.a.page4.stfgunit" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfgunit
            #add-point:ON CHANGE stfgunit
            {<point name="input.g.page4.stfgunit" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page4.stfgseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfgseq
            #add-point:ON ACTION controlp INFIELD stfgseq
            {<point name="input.c.page4.stfgseq" />}
            #END add-point
 
         #Ctrlp:input.c.page4.stfg003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfg003
            #add-point:ON ACTION controlp INFIELD stfg003
            {<point name="input.c.page4.stfg003" />}
            #END add-point
 
         #Ctrlp:input.c.page4.stfg002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfg002
            #add-point:ON ACTION controlp INFIELD stfg002
            {<point name="input.c.page4.stfg002" />}
            #END add-point
 
         #Ctrlp:input.c.page4.stfg004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfg004
            #add-point:ON ACTION controlp INFIELD stfg004
            {<point name="input.c.page4.stfg004" />}
            #END add-point
 
         #Ctrlp:input.c.page4.stfg005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfg005
            #add-point:ON ACTION controlp INFIELD stfg005
            {<point name="input.c.page4.stfg005" />}
            #END add-point
 
         #Ctrlp:input.c.page4.stfgacti
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfgacti
            #add-point:ON ACTION controlp INFIELD stfgacti
            {<point name="input.c.page4.stfgacti" />}
            #END add-point
 
         #Ctrlp:input.c.page4.stfgsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfgsite
            #add-point:ON ACTION controlp INFIELD stfgsite
            {<point name="input.c.page4.stfgsite" />}
            #END add-point
 
         #Ctrlp:input.c.page4.stfgunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfgunit
            #add-point:ON ACTION controlp INFIELD stfgunit
            {<point name="input.c.page4.stfgunit" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page4 after_row
            {<point name="input.body4.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_stfb4_d[l_ac].* = g_stfb4_d_t.*
               END IF
               CLOSE astm401_bcl4
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astm401_unlock_b("stfg_t","'4'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page4 after_row2
            {<point name="input.body4.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body4.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_stfb4_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_stfb4_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_stfb5_d FROM s_detail5.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_5)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body5.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stfb5_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astm401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_stfb5_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body5.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stfb5_d[l_ac].* TO NULL 
            INITIALIZE g_stfb5_d_t.* TO NULL 
            INITIALIZE g_stfb5_d_o.* TO NULL 
            #公用欄位給值(單身5)
            
            #自定義預設值(單身5)
            
            #add-point:modify段before備份
            {<point name="input.body5.insert.before_bak"/>}
            #end add-point
            LET g_stfb5_d_t.* = g_stfb5_d[l_ac].*     #新輸入資料
            LET g_stfb5_d_o.* = g_stfb5_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astm401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body5.insert.after_set_entry_b"/>}
            #end add-point
            CALL astm401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stfb5_d[li_reproduce_target].* = g_stfb5_d[li_reproduce].*
 
               LET g_stfb5_d[li_reproduce_target].stfhseq = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body5.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body5.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 5
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astm401_cl USING g_enterprise,g_stfa_m.stfa001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm401_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE astm401_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_stfb5_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stfb5_d[l_ac].stfhseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_stfb5_d_t.* = g_stfb5_d[l_ac].*  #BACKUP
               LET g_stfb5_d_o.* = g_stfb5_d[l_ac].*  #BACKUP
               CALL astm401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body5.after_set_entry_b"/>}
               #end add-point  
               CALL astm401_set_no_entry_b(l_cmd)
               IF NOT astm401_lock_b("stfh_t","'5'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astm401_bcl5 INTO g_stfb5_d[l_ac].stfhseq,g_stfb5_d[l_ac].stfh002,g_stfb5_d[l_ac].stfh003, 
                      g_stfb5_d[l_ac].stfhacti,g_stfb5_d[l_ac].stfhsite,g_stfb5_d[l_ac].stfhunit
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stfb5_d_mask_o[l_ac].* =  g_stfb5_d[l_ac].*
                  CALL astm401_stfh_t_mask()
                  LET g_stfb5_d_mask_n[l_ac].* =  g_stfb5_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astm401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body5.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body5.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身5刪除前
               {<point name="input.body5.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stfa_m.stfa001
               LET gs_keys[gs_keys.getLength()+1] = g_stfb5_d_t.stfhseq
            
               #刪除同層單身
               IF NOT astm401_delete_b('stfh_t',gs_keys,"'5'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astm401_key_delete_b(gs_keys,'stfh_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身5刪除中
               {<point name="input.body5.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astm401_bcl
               LET g_rec_b = g_rec_b-1
               
               #add-point:單身5刪除後
               {<point name="input.body5.a_delete"/>}
               #end add-point
               LET l_count = g_stfb_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body5.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stfb5_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身5新增前
            {<point name="input.body5.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM stfh_t 
             WHERE stfhent = g_enterprise AND stfh001 = g_stfa_m.stfa001
               AND stfhseq = g_stfb5_d[l_ac].stfhseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身5新增前
               {<point name="input.body5.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys[2] = g_stfb5_d[g_detail_idx].stfhseq
               CALL astm401_insert_b('stfh_t',gs_keys,"'5'")
                           
               #add-point:單身新增後5
               {<point name="input.body5.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_stfb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfh_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astm401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body5.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_stfb5_d[l_ac].* = g_stfb5_d_t.*
               CLOSE astm401_bcl5
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_stfb5_d[l_ac].* = g_stfb5_d_t.*
            ELSE
               #add-point:單身page5修改前
               {<point name="input.body5.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身5)
               
               
               #將遮罩欄位還原
               CALL astm401_stfh_t_mask_restore('restore_mask_o')
                              
               UPDATE stfh_t SET (stfh001,stfhseq,stfh002,stfh003,stfhacti,stfhsite,stfhunit) = (g_stfa_m.stfa001, 
                   g_stfb5_d[l_ac].stfhseq,g_stfb5_d[l_ac].stfh002,g_stfb5_d[l_ac].stfh003,g_stfb5_d[l_ac].stfhacti, 
                   g_stfb5_d[l_ac].stfhsite,g_stfb5_d[l_ac].stfhunit) #自訂欄位頁簽
                WHERE stfhent = g_enterprise AND stfh001 = g_stfa_m.stfa001
                  AND stfhseq = g_stfb5_d_t.stfhseq #項次 
                  
               #add-point:單身page5修改中
               {<point name="input.body5.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfh_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_stfb5_d[l_ac].* = g_stfb5_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfh_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_stfb5_d[l_ac].* = g_stfb5_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys_bak[1] = g_stfa001_t
               LET gs_keys[2] = g_stfb5_d[g_detail_idx].stfhseq
               LET gs_keys_bak[2] = g_stfb5_d_t.stfhseq
               CALL astm401_update_b('stfh_t',gs_keys,gs_keys_bak,"'5'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astm401_stfh_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_stfb5_d[g_detail_idx].stfhseq = g_stfb5_d_t.stfhseq 
                  ) THEN
                  LET gs_keys[01] = g_stfa_m.stfa001
                  LET gs_keys[gs_keys.getLength()+1] = g_stfb5_d_t.stfhseq
                  CALL astm401_key_update_b(gs_keys,'stfh_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb5_d_t)
               LET g_log2 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb5_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page5修改後
               {<point name="input.body5.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfhseq
            #add-point:BEFORE FIELD stfhseq
            {<point name="input.b.page5.stfhseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfhseq
            
            #add-point:AFTER FIELD stfhseq
            {<point name="input.a.page5.stfhseq" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfhseq
            #add-point:ON CHANGE stfhseq
            {<point name="input.g.page5.stfhseq" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfh002
            #add-point:BEFORE FIELD stfh002
            {<point name="input.b.page5.stfh002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfh002
            
            #add-point:AFTER FIELD stfh002
            {<point name="input.a.page5.stfh002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfh002
            #add-point:ON CHANGE stfh002
            {<point name="input.g.page5.stfh002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfh003
            #add-point:BEFORE FIELD stfh003
            {<point name="input.b.page5.stfh003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfh003
            
            #add-point:AFTER FIELD stfh003
            {<point name="input.a.page5.stfh003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfh003
            #add-point:ON CHANGE stfh003
            {<point name="input.g.page5.stfh003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfhacti
            #add-point:BEFORE FIELD stfhacti
            {<point name="input.b.page5.stfhacti" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfhacti
            
            #add-point:AFTER FIELD stfhacti
            {<point name="input.a.page5.stfhacti" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfhacti
            #add-point:ON CHANGE stfhacti
            {<point name="input.g.page5.stfhacti" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfhsite
            #add-point:BEFORE FIELD stfhsite
            {<point name="input.b.page5.stfhsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfhsite
            
            #add-point:AFTER FIELD stfhsite
            {<point name="input.a.page5.stfhsite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfhsite
            #add-point:ON CHANGE stfhsite
            {<point name="input.g.page5.stfhsite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfhunit
            #add-point:BEFORE FIELD stfhunit
            {<point name="input.b.page5.stfhunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfhunit
            
            #add-point:AFTER FIELD stfhunit
            {<point name="input.a.page5.stfhunit" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfhunit
            #add-point:ON CHANGE stfhunit
            {<point name="input.g.page5.stfhunit" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page5.stfhseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfhseq
            #add-point:ON ACTION controlp INFIELD stfhseq
            {<point name="input.c.page5.stfhseq" />}
            #END add-point
 
         #Ctrlp:input.c.page5.stfh002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfh002
            #add-point:ON ACTION controlp INFIELD stfh002
            {<point name="input.c.page5.stfh002" />}
            #END add-point
 
         #Ctrlp:input.c.page5.stfh003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfh003
            #add-point:ON ACTION controlp INFIELD stfh003
            {<point name="input.c.page5.stfh003" />}
            #END add-point
 
         #Ctrlp:input.c.page5.stfhacti
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfhacti
            #add-point:ON ACTION controlp INFIELD stfhacti
            {<point name="input.c.page5.stfhacti" />}
            #END add-point
 
         #Ctrlp:input.c.page5.stfhsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfhsite
            #add-point:ON ACTION controlp INFIELD stfhsite
            {<point name="input.c.page5.stfhsite" />}
            #END add-point
 
         #Ctrlp:input.c.page5.stfhunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfhunit
            #add-point:ON ACTION controlp INFIELD stfhunit
            {<point name="input.c.page5.stfhunit" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page5 after_row
            {<point name="input.body5.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_stfb5_d[l_ac].* = g_stfb5_d_t.*
               END IF
               CLOSE astm401_bcl5
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astm401_unlock_b("stfh_t","'5'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page5 after_row2
            {<point name="input.body5.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body5.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_stfb5_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_stfb5_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_stfb6_d FROM s_detail6.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_6)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body6.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stfb6_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astm401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_stfb6_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body6.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stfb6_d[l_ac].* TO NULL 
            INITIALIZE g_stfb6_d_t.* TO NULL 
            INITIALIZE g_stfb6_d_o.* TO NULL 
            #公用欄位給值(單身6)
            
            #自定義預設值(單身6)
                  LET g_stfb6_d[l_ac].stfi004 = "0"
 
            #add-point:modify段before備份
            {<point name="input.body6.insert.before_bak"/>}
            #end add-point
            LET g_stfb6_d_t.* = g_stfb6_d[l_ac].*     #新輸入資料
            LET g_stfb6_d_o.* = g_stfb6_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astm401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body6.insert.after_set_entry_b"/>}
            #end add-point
            CALL astm401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stfb6_d[li_reproduce_target].* = g_stfb6_d[li_reproduce].*
 
               LET g_stfb6_d[li_reproduce_target].stfiseq = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body6.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body6.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 6
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astm401_cl USING g_enterprise,g_stfa_m.stfa001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm401_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE astm401_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_stfb6_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stfb6_d[l_ac].stfiseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_stfb6_d_t.* = g_stfb6_d[l_ac].*  #BACKUP
               LET g_stfb6_d_o.* = g_stfb6_d[l_ac].*  #BACKUP
               CALL astm401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body6.after_set_entry_b"/>}
               #end add-point  
               CALL astm401_set_no_entry_b(l_cmd)
               IF NOT astm401_lock_b("stfi_t","'6'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astm401_bcl6 INTO g_stfb6_d[l_ac].stfiseq,g_stfb6_d[l_ac].stfi002,g_stfb6_d[l_ac].stfi003, 
                      g_stfb6_d[l_ac].stfi005,g_stfb6_d[l_ac].stfi006,g_stfb6_d[l_ac].stfi004,g_stfb6_d[l_ac].stfi007, 
                      g_stfb6_d[l_ac].stfi010,g_stfb6_d[l_ac].stfi008,g_stfb6_d[l_ac].stfi009,g_stfb6_d[l_ac].stfiacti, 
                      g_stfb6_d[l_ac].stfisite,g_stfb6_d[l_ac].stfiunit
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stfb6_d_mask_o[l_ac].* =  g_stfb6_d[l_ac].*
                  CALL astm401_stfi_t_mask()
                  LET g_stfb6_d_mask_n[l_ac].* =  g_stfb6_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astm401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body6.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body6.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身6刪除前
               {<point name="input.body6.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stfa_m.stfa001
               LET gs_keys[gs_keys.getLength()+1] = g_stfb6_d_t.stfiseq
            
               #刪除同層單身
               IF NOT astm401_delete_b('stfi_t',gs_keys,"'6'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astm401_key_delete_b(gs_keys,'stfi_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身6刪除中
               {<point name="input.body6.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astm401_bcl
               LET g_rec_b = g_rec_b-1
               
               #add-point:單身6刪除後
               {<point name="input.body6.a_delete"/>}
               #end add-point
               LET l_count = g_stfb_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body6.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stfb6_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身6新增前
            {<point name="input.body6.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM stfi_t 
             WHERE stfient = g_enterprise AND stfi001 = g_stfa_m.stfa001
               AND stfiseq = g_stfb6_d[l_ac].stfiseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身6新增前
               {<point name="input.body6.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys[2] = g_stfb6_d[g_detail_idx].stfiseq
               CALL astm401_insert_b('stfi_t',gs_keys,"'6'")
                           
               #add-point:單身新增後6
               {<point name="input.body6.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_stfb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfi_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astm401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body6.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_stfb6_d[l_ac].* = g_stfb6_d_t.*
               CLOSE astm401_bcl6
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_stfb6_d[l_ac].* = g_stfb6_d_t.*
            ELSE
               #add-point:單身page6修改前
               {<point name="input.body6.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身6)
               
               
               #將遮罩欄位還原
               CALL astm401_stfi_t_mask_restore('restore_mask_o')
                              
               UPDATE stfi_t SET (stfi001,stfiseq,stfi002,stfi003,stfi005,stfi006,stfi004,stfi007,stfi010, 
                   stfi008,stfi009,stfiacti,stfisite,stfiunit) = (g_stfa_m.stfa001,g_stfb6_d[l_ac].stfiseq, 
                   g_stfb6_d[l_ac].stfi002,g_stfb6_d[l_ac].stfi003,g_stfb6_d[l_ac].stfi005,g_stfb6_d[l_ac].stfi006, 
                   g_stfb6_d[l_ac].stfi004,g_stfb6_d[l_ac].stfi007,g_stfb6_d[l_ac].stfi010,g_stfb6_d[l_ac].stfi008, 
                   g_stfb6_d[l_ac].stfi009,g_stfb6_d[l_ac].stfiacti,g_stfb6_d[l_ac].stfisite,g_stfb6_d[l_ac].stfiunit)  
                   #自訂欄位頁簽
                WHERE stfient = g_enterprise AND stfi001 = g_stfa_m.stfa001
                  AND stfiseq = g_stfb6_d_t.stfiseq #項次 
                  
               #add-point:單身page6修改中
               {<point name="input.body6.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfi_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_stfb6_d[l_ac].* = g_stfb6_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfi_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_stfb6_d[l_ac].* = g_stfb6_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys_bak[1] = g_stfa001_t
               LET gs_keys[2] = g_stfb6_d[g_detail_idx].stfiseq
               LET gs_keys_bak[2] = g_stfb6_d_t.stfiseq
               CALL astm401_update_b('stfi_t',gs_keys,gs_keys_bak,"'6'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astm401_stfi_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_stfb6_d[g_detail_idx].stfiseq = g_stfb6_d_t.stfiseq 
                  ) THEN
                  LET gs_keys[01] = g_stfa_m.stfa001
                  LET gs_keys[gs_keys.getLength()+1] = g_stfb6_d_t.stfiseq
                  CALL astm401_key_update_b(gs_keys,'stfi_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb6_d_t)
               LET g_log2 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb6_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page6修改後
               {<point name="input.body6.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfiseq
            #add-point:BEFORE FIELD stfiseq
            {<point name="input.b.page6.stfiseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfiseq
            
            #add-point:AFTER FIELD stfiseq
            {<point name="input.a.page6.stfiseq" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfiseq
            #add-point:ON CHANGE stfiseq
            {<point name="input.g.page6.stfiseq" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfi002
            #add-point:BEFORE FIELD stfi002
            {<point name="input.b.page6.stfi002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfi002
            
            #add-point:AFTER FIELD stfi002
            {<point name="input.a.page6.stfi002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfi002
            #add-point:ON CHANGE stfi002
            {<point name="input.g.page6.stfi002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfi003
            
            #add-point:AFTER FIELD stfi003
            {<point name="input.a.page6.stfi003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfi003
            #add-point:BEFORE FIELD stfi003
            {<point name="input.b.page6.stfi003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfi003
            #add-point:ON CHANGE stfi003
            {<point name="input.g.page6.stfi003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfi005
            #add-point:BEFORE FIELD stfi005
            {<point name="input.b.page6.stfi005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfi005
            
            #add-point:AFTER FIELD stfi005
            {<point name="input.a.page6.stfi005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfi005
            #add-point:ON CHANGE stfi005
            {<point name="input.g.page6.stfi005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfi006
            #add-point:BEFORE FIELD stfi006
            {<point name="input.b.page6.stfi006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfi006
            
            #add-point:AFTER FIELD stfi006
            {<point name="input.a.page6.stfi006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfi006
            #add-point:ON CHANGE stfi006
            {<point name="input.g.page6.stfi006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfi004
            #add-point:BEFORE FIELD stfi004
            {<point name="input.b.page6.stfi004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfi004
            
            #add-point:AFTER FIELD stfi004
            {<point name="input.a.page6.stfi004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfi004
            #add-point:ON CHANGE stfi004
            {<point name="input.g.page6.stfi004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfi007
            #add-point:BEFORE FIELD stfi007
            {<point name="input.b.page6.stfi007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfi007
            
            #add-point:AFTER FIELD stfi007
            {<point name="input.a.page6.stfi007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfi007
            #add-point:ON CHANGE stfi007
            {<point name="input.g.page6.stfi007" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfi010
            
            #add-point:AFTER FIELD stfi010
            {<point name="input.a.page6.stfi010" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfi010
            #add-point:BEFORE FIELD stfi010
            {<point name="input.b.page6.stfi010" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfi010
            #add-point:ON CHANGE stfi010
            {<point name="input.g.page6.stfi010" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfi008
            #add-point:BEFORE FIELD stfi008
            {<point name="input.b.page6.stfi008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfi008
            
            #add-point:AFTER FIELD stfi008
            {<point name="input.a.page6.stfi008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfi008
            #add-point:ON CHANGE stfi008
            {<point name="input.g.page6.stfi008" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfi009
            #add-point:BEFORE FIELD stfi009
            {<point name="input.b.page6.stfi009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfi009
            
            #add-point:AFTER FIELD stfi009
            {<point name="input.a.page6.stfi009" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfi009
            #add-point:ON CHANGE stfi009
            {<point name="input.g.page6.stfi009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfiacti
            #add-point:BEFORE FIELD stfiacti
            {<point name="input.b.page6.stfiacti" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfiacti
            
            #add-point:AFTER FIELD stfiacti
            {<point name="input.a.page6.stfiacti" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfiacti
            #add-point:ON CHANGE stfiacti
            {<point name="input.g.page6.stfiacti" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfisite
            #add-point:BEFORE FIELD stfisite
            {<point name="input.b.page6.stfisite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfisite
            
            #add-point:AFTER FIELD stfisite
            {<point name="input.a.page6.stfisite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfisite
            #add-point:ON CHANGE stfisite
            {<point name="input.g.page6.stfisite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfiunit
            #add-point:BEFORE FIELD stfiunit
            {<point name="input.b.page6.stfiunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfiunit
            
            #add-point:AFTER FIELD stfiunit
            {<point name="input.a.page6.stfiunit" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfiunit
            #add-point:ON CHANGE stfiunit
            {<point name="input.g.page6.stfiunit" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page6.stfiseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfiseq
            #add-point:ON ACTION controlp INFIELD stfiseq
            {<point name="input.c.page6.stfiseq" />}
            #END add-point
 
         #Ctrlp:input.c.page6.stfi002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfi002
            #add-point:ON ACTION controlp INFIELD stfi002
            {<point name="input.c.page6.stfi002" />}
            #END add-point
 
         #Ctrlp:input.c.page6.stfi003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfi003
            #add-point:ON ACTION controlp INFIELD stfi003
            {<point name="input.c.page6.stfi003" />}
            #END add-point
 
         #Ctrlp:input.c.page6.stfi005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfi005
            #add-point:ON ACTION controlp INFIELD stfi005
            {<point name="input.c.page6.stfi005" />}
            #END add-point
 
         #Ctrlp:input.c.page6.stfi006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfi006
            #add-point:ON ACTION controlp INFIELD stfi006
            {<point name="input.c.page6.stfi006" />}
            #END add-point
 
         #Ctrlp:input.c.page6.stfi004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfi004
            #add-point:ON ACTION controlp INFIELD stfi004
            {<point name="input.c.page6.stfi004" />}
            #END add-point
 
         #Ctrlp:input.c.page6.stfi007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfi007
            #add-point:ON ACTION controlp INFIELD stfi007
            {<point name="input.c.page6.stfi007" />}
            #END add-point
 
         #Ctrlp:input.c.page6.stfi010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfi010
            #add-point:ON ACTION controlp INFIELD stfi010
            {<point name="input.c.page6.stfi010" />}
            #END add-point
 
         #Ctrlp:input.c.page6.stfi008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfi008
            #add-point:ON ACTION controlp INFIELD stfi008
            {<point name="input.c.page6.stfi008" />}
            #END add-point
 
         #Ctrlp:input.c.page6.stfi009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfi009
            #add-point:ON ACTION controlp INFIELD stfi009
            {<point name="input.c.page6.stfi009" />}
            #END add-point
 
         #Ctrlp:input.c.page6.stfiacti
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfiacti
            #add-point:ON ACTION controlp INFIELD stfiacti
            {<point name="input.c.page6.stfiacti" />}
            #END add-point
 
         #Ctrlp:input.c.page6.stfisite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfisite
            #add-point:ON ACTION controlp INFIELD stfisite
            {<point name="input.c.page6.stfisite" />}
            #END add-point
 
         #Ctrlp:input.c.page6.stfiunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfiunit
            #add-point:ON ACTION controlp INFIELD stfiunit
            {<point name="input.c.page6.stfiunit" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page6 after_row
            {<point name="input.body6.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_stfb6_d[l_ac].* = g_stfb6_d_t.*
               END IF
               CLOSE astm401_bcl6
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astm401_unlock_b("stfi_t","'6'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page6 after_row2
            {<point name="input.body6.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body6.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_stfb6_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_stfb6_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_stfb7_d FROM s_detail7.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_7)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body7.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stfb7_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astm401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_stfb7_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body7.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stfb7_d[l_ac].* TO NULL 
            INITIALIZE g_stfb7_d_t.* TO NULL 
            INITIALIZE g_stfb7_d_o.* TO NULL 
            #公用欄位給值(單身7)
            
            #自定義預設值(單身7)
            
            #add-point:modify段before備份
            {<point name="input.body7.insert.before_bak"/>}
            #end add-point
            LET g_stfb7_d_t.* = g_stfb7_d[l_ac].*     #新輸入資料
            LET g_stfb7_d_o.* = g_stfb7_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astm401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body7.insert.after_set_entry_b"/>}
            #end add-point
            CALL astm401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stfb7_d[li_reproduce_target].* = g_stfb7_d[li_reproduce].*
 
               LET g_stfb7_d[li_reproduce_target].stfjseq = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body7.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body7.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 7
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astm401_cl USING g_enterprise,g_stfa_m.stfa001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm401_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE astm401_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_stfb7_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stfb7_d[l_ac].stfjseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_stfb7_d_t.* = g_stfb7_d[l_ac].*  #BACKUP
               LET g_stfb7_d_o.* = g_stfb7_d[l_ac].*  #BACKUP
               CALL astm401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body7.after_set_entry_b"/>}
               #end add-point  
               CALL astm401_set_no_entry_b(l_cmd)
               IF NOT astm401_lock_b("stfj_t","'7'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astm401_bcl7 INTO g_stfb7_d[l_ac].stfjseq,g_stfb7_d[l_ac].stfj002,g_stfb7_d[l_ac].stfj003, 
                      g_stfb7_d[l_ac].stfj004,g_stfb7_d[l_ac].stfj005,g_stfb7_d[l_ac].stfj006,g_stfb7_d[l_ac].stfjsite, 
                      g_stfb7_d[l_ac].stfjunit
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stfb7_d_mask_o[l_ac].* =  g_stfb7_d[l_ac].*
                  CALL astm401_stfj_t_mask()
                  LET g_stfb7_d_mask_n[l_ac].* =  g_stfb7_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astm401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body7.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body7.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身7刪除前
               {<point name="input.body7.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stfa_m.stfa001
               LET gs_keys[gs_keys.getLength()+1] = g_stfb7_d_t.stfjseq
            
               #刪除同層單身
               IF NOT astm401_delete_b('stfj_t',gs_keys,"'7'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astm401_key_delete_b(gs_keys,'stfj_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身7刪除中
               {<point name="input.body7.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astm401_bcl
               LET g_rec_b = g_rec_b-1
               
               #add-point:單身7刪除後
               {<point name="input.body7.a_delete"/>}
               #end add-point
               LET l_count = g_stfb_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body7.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stfb7_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身7新增前
            {<point name="input.body7.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM stfj_t 
             WHERE stfjent = g_enterprise AND stfj001 = g_stfa_m.stfa001
               AND stfjseq = g_stfb7_d[l_ac].stfjseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身7新增前
               {<point name="input.body7.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys[2] = g_stfb7_d[g_detail_idx].stfjseq
               CALL astm401_insert_b('stfj_t',gs_keys,"'7'")
                           
               #add-point:單身新增後7
               {<point name="input.body7.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_stfb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfj_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astm401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body7.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_stfb7_d[l_ac].* = g_stfb7_d_t.*
               CLOSE astm401_bcl7
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_stfb7_d[l_ac].* = g_stfb7_d_t.*
            ELSE
               #add-point:單身page7修改前
               {<point name="input.body7.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身7)
               
               
               #將遮罩欄位還原
               CALL astm401_stfj_t_mask_restore('restore_mask_o')
                              
               UPDATE stfj_t SET (stfj001,stfjseq,stfj002,stfj003,stfj004,stfj005,stfj006,stfjsite,stfjunit) = (g_stfa_m.stfa001, 
                   g_stfb7_d[l_ac].stfjseq,g_stfb7_d[l_ac].stfj002,g_stfb7_d[l_ac].stfj003,g_stfb7_d[l_ac].stfj004, 
                   g_stfb7_d[l_ac].stfj005,g_stfb7_d[l_ac].stfj006,g_stfb7_d[l_ac].stfjsite,g_stfb7_d[l_ac].stfjunit)  
                   #自訂欄位頁簽
                WHERE stfjent = g_enterprise AND stfj001 = g_stfa_m.stfa001
                  AND stfjseq = g_stfb7_d_t.stfjseq #項次 
                  
               #add-point:單身page7修改中
               {<point name="input.body7.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfj_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_stfb7_d[l_ac].* = g_stfb7_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfj_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_stfb7_d[l_ac].* = g_stfb7_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys_bak[1] = g_stfa001_t
               LET gs_keys[2] = g_stfb7_d[g_detail_idx].stfjseq
               LET gs_keys_bak[2] = g_stfb7_d_t.stfjseq
               CALL astm401_update_b('stfj_t',gs_keys,gs_keys_bak,"'7'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astm401_stfj_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_stfb7_d[g_detail_idx].stfjseq = g_stfb7_d_t.stfjseq 
                  ) THEN
                  LET gs_keys[01] = g_stfa_m.stfa001
                  LET gs_keys[gs_keys.getLength()+1] = g_stfb7_d_t.stfjseq
                  CALL astm401_key_update_b(gs_keys,'stfj_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb7_d_t)
               LET g_log2 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb7_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page7修改後
               {<point name="input.body7.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfjseq
            #add-point:BEFORE FIELD stfjseq
            {<point name="input.b.page7.stfjseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfjseq
            
            #add-point:AFTER FIELD stfjseq
            {<point name="input.a.page7.stfjseq" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfjseq
            #add-point:ON CHANGE stfjseq
            {<point name="input.g.page7.stfjseq" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfj002
            #add-point:BEFORE FIELD stfj002
            {<point name="input.b.page7.stfj002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfj002
            
            #add-point:AFTER FIELD stfj002
            {<point name="input.a.page7.stfj002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfj002
            #add-point:ON CHANGE stfj002
            {<point name="input.g.page7.stfj002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfj003
            #add-point:BEFORE FIELD stfj003
            {<point name="input.b.page7.stfj003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfj003
            
            #add-point:AFTER FIELD stfj003
            {<point name="input.a.page7.stfj003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfj003
            #add-point:ON CHANGE stfj003
            {<point name="input.g.page7.stfj003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfj004
            #add-point:BEFORE FIELD stfj004
            {<point name="input.b.page7.stfj004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfj004
            
            #add-point:AFTER FIELD stfj004
            {<point name="input.a.page7.stfj004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfj004
            #add-point:ON CHANGE stfj004
            {<point name="input.g.page7.stfj004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfj005
            #add-point:BEFORE FIELD stfj005
            {<point name="input.b.page7.stfj005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfj005
            
            #add-point:AFTER FIELD stfj005
            {<point name="input.a.page7.stfj005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfj005
            #add-point:ON CHANGE stfj005
            {<point name="input.g.page7.stfj005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfj006
            #add-point:BEFORE FIELD stfj006
            {<point name="input.b.page7.stfj006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfj006
            
            #add-point:AFTER FIELD stfj006
            {<point name="input.a.page7.stfj006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfj006
            #add-point:ON CHANGE stfj006
            {<point name="input.g.page7.stfj006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfjsite
            #add-point:BEFORE FIELD stfjsite
            {<point name="input.b.page7.stfjsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfjsite
            
            #add-point:AFTER FIELD stfjsite
            {<point name="input.a.page7.stfjsite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfjsite
            #add-point:ON CHANGE stfjsite
            {<point name="input.g.page7.stfjsite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfjunit
            #add-point:BEFORE FIELD stfjunit
            {<point name="input.b.page7.stfjunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfjunit
            
            #add-point:AFTER FIELD stfjunit
            {<point name="input.a.page7.stfjunit" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfjunit
            #add-point:ON CHANGE stfjunit
            {<point name="input.g.page7.stfjunit" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page7.stfjseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfjseq
            #add-point:ON ACTION controlp INFIELD stfjseq
            {<point name="input.c.page7.stfjseq" />}
            #END add-point
 
         #Ctrlp:input.c.page7.stfj002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfj002
            #add-point:ON ACTION controlp INFIELD stfj002
            {<point name="input.c.page7.stfj002" />}
            #END add-point
 
         #Ctrlp:input.c.page7.stfj003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfj003
            #add-point:ON ACTION controlp INFIELD stfj003
            {<point name="input.c.page7.stfj003" />}
            #END add-point
 
         #Ctrlp:input.c.page7.stfj004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfj004
            #add-point:ON ACTION controlp INFIELD stfj004
            {<point name="input.c.page7.stfj004" />}
            #END add-point
 
         #Ctrlp:input.c.page7.stfj005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfj005
            #add-point:ON ACTION controlp INFIELD stfj005
            {<point name="input.c.page7.stfj005" />}
            #END add-point
 
         #Ctrlp:input.c.page7.stfj006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfj006
            #add-point:ON ACTION controlp INFIELD stfj006
            {<point name="input.c.page7.stfj006" />}
            #END add-point
 
         #Ctrlp:input.c.page7.stfjsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfjsite
            #add-point:ON ACTION controlp INFIELD stfjsite
            {<point name="input.c.page7.stfjsite" />}
            #END add-point
 
         #Ctrlp:input.c.page7.stfjunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfjunit
            #add-point:ON ACTION controlp INFIELD stfjunit
            {<point name="input.c.page7.stfjunit" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page7 after_row
            {<point name="input.body7.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_stfb7_d[l_ac].* = g_stfb7_d_t.*
               END IF
               CLOSE astm401_bcl7
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astm401_unlock_b("stfj_t","'7'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page7 after_row2
            {<point name="input.body7.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body7.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_stfb7_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_stfb7_d.getLength()+1
 
      END INPUT
 
      
      INPUT ARRAY g_stfb8_d FROM s_detail8.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_8)
         
         
         BEFORE INPUT
            #檢查上層單身是否有資料
            IF cl_null(g_stfb2_d[g_detail_idx].stfcseq) THEN
               NEXT FIELD stfcseq
            END IF
            #add-point:資料輸入前
            {<point name="input.body8.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stfb8_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            #如果一直都在單身2則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx2)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_stfb8_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body8.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stfb8_d[l_ac].* TO NULL 
            INITIALIZE g_stfb8_d_t.* TO NULL 
            INITIALIZE g_stfb8_d_o.* TO NULL 
            #公用欄位給值(單身8)
            
            #自定義預設值(單身8)
                  LET g_stfb8_d[l_ac].stfdseq1 = "0"
      LET g_stfb8_d[l_ac].stfd005 = "0"
      LET g_stfb8_d[l_ac].stfd008 = "0"
 
            #add-point:modify段before備份
            {<point name="input.body8.insert.before_bak"/>}
            #end add-point
            LET g_stfb8_d_t.* = g_stfb8_d[l_ac].*     #新輸入資料
            LET g_stfb8_d_o.* = g_stfb8_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astm401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body8.insert.after_set_entry_b"/>}
            #end add-point
            CALL astm401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stfb8_d[li_reproduce_target].* = g_stfb8_d[li_reproduce].*
 
               LET g_stfb8_d[li_reproduce_target].stfdseq1 = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body8.before_insert"/>}
            #end add-point  
            
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body8.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx2 = l_ac
            LET g_current_page = 8
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astm401_cl USING g_enterprise,g_stfa_m.stfa001
            OPEN astm401_bcl2 USING g_enterprise,g_stfa_m.stfa001,g_stfb2_d[g_detail_idx].stfcseq
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm401_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE astm401_cl
               CLOSE astm401_bcl2
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_stfb8_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stfb8_d[l_ac].stfdseq1 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_stfb8_d_t.* = g_stfb8_d[l_ac].*  #BACKUP
               LET g_stfb8_d_o.* = g_stfb8_d[l_ac].*  #BACKUP
               CALL astm401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body8.after_set_entry_b"/>}
               #end add-point  
               CALL astm401_set_no_entry_b(l_cmd)
               IF NOT astm401_lock_b("stfd_t","'8'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astm401_bcl8 INTO g_stfb8_d[l_ac].stfdseq1,g_stfb8_d[l_ac].stfd002,g_stfb8_d[l_ac].stfd003, 
                      g_stfb8_d[l_ac].stfd004,g_stfb8_d[l_ac].stfd005,g_stfb8_d[l_ac].stfd006,g_stfb8_d[l_ac].stfd007, 
                      g_stfb8_d[l_ac].stfd008,g_stfb8_d[l_ac].stfdsite,g_stfb8_d[l_ac].stfdunit
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stfb8_d_mask_o[l_ac].* =  g_stfb8_d[l_ac].*
                  CALL astm401_stfd_t_mask()
                  LET g_stfb8_d_mask_n[l_ac].* =  g_stfb8_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astm401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body8.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body8.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身8刪除前
               {<point name="input.body8.b_delete" mark="Y"/>}
               #end add-point    
               #取得該筆資料key值
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys[2] = g_stfb2_d[g_detail_idx].stfcseq
               LET gs_keys[3] = g_stfb8_d_t.stfdseq1
 
               #刪除同層單身
               IF NOT astm401_delete_b('stfd_t',gs_keys,"'8'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身8刪除中
               {<point name="input.body8.m_delete"/>}
               #end add-point   
               
               CALL s_transaction_end('Y','0')
               CLOSE astm401_bcl
                  
               LET g_rec_b = g_rec_b-1
               #add-point:單身8刪除後
               {<point name="input.body8.a_delete"/>}
               #end add-point
               LET l_count = g_stfb_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body8.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stfb8_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
         
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身8新增前
            {<point name="input.body8.b_a_insert"/>}
            #end add-point
    
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM stfd_t 
             WHERE stfdent = g_enterprise AND stfd001 = g_stfa_m.stfa001 AND stfdseq = g_stfb2_d[g_detail_idx].stfcseq  
                 AND stfdseq1 = g_stfb8_d[g_detail_idx2].stfdseq1
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身8新增前
               {<point name="input.body8.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys[2] = g_stfb2_d[g_detail_idx].stfcseq
               LET gs_keys[3] = g_stfb8_d[g_detail_idx2].stfdseq1
               CALL astm401_insert_b('stfd_t',gs_keys,"'8'")
                           
               #add-point:單身新增後8
               {<point name="input.body8.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_stfb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfd_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astm401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body8.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_stfb8_d[l_ac].* = g_stfb8_d_t.*
               CLOSE astm401_bcl8
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_stfb8_d[l_ac].* = g_stfb8_d_t.*
            ELSE
               #add-point:單身page8修改前
               {<point name="input.body8.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身8)
               
               
               #將遮罩欄位還原
               CALL astm401_stfd_t_mask_restore('restore_mask_o')
               
               UPDATE stfd_t SET (stfd001,stfdseq,stfdseq1,stfd002,stfd003,stfd004,stfd005,stfd006,stfd007, 
                   stfd008,stfdsite,stfdunit) = (g_stfa_m.stfa001,g_stfb2_d[g_detail_idx].stfcseq,g_stfb8_d[l_ac].stfdseq1, 
                   g_stfb8_d[l_ac].stfd002,g_stfb8_d[l_ac].stfd003,g_stfb8_d[l_ac].stfd004,g_stfb8_d[l_ac].stfd005, 
                   g_stfb8_d[l_ac].stfd006,g_stfb8_d[l_ac].stfd007,g_stfb8_d[l_ac].stfd008,g_stfb8_d[l_ac].stfdsite, 
                   g_stfb8_d[l_ac].stfdunit) #自訂欄位頁簽
                WHERE stfdent = g_enterprise AND stfd001 = g_stfa001_t AND stfdseq = g_stfb2_d[g_detail_idx].stfcseq  
                    AND stfdseq1 = g_stfb8_d_t.stfdseq1
                  
               #add-point:單身page8修改中
               {<point name="input.body8.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfd_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_stfb8_d[l_ac].* = g_stfb8_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfd_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_stfb8_d[l_ac].* = g_stfb8_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys_bak[1] = g_stfa001_t
               LET gs_keys[2] = g_stfb2_d[g_detail_idx].stfcseq
               LET gs_keys_bak[2] = g_stfb2_d[g_detail_idx].stfcseq
               LET gs_keys[3] = g_stfb8_d[g_detail_idx2].stfdseq1
               LET gs_keys_bak[3] = g_stfb8_d_t.stfdseq1
               CALL astm401_update_b('stfd_t',gs_keys,gs_keys_bak,"'8'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astm401_stfd_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb8_d_t)
               LET g_log2 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb8_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page8修改後
               {<point name="input.body8.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfdseq1
            #add-point:BEFORE FIELD stfdseq1
            {<point name="input.b.page8.stfdseq1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfdseq1
            
            #add-point:AFTER FIELD stfdseq1
            {<point name="input.a.page8.stfdseq1" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfdseq1
            #add-point:ON CHANGE stfdseq1
            {<point name="input.g.page8.stfdseq1" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfd002
            #add-point:BEFORE FIELD stfd002
            {<point name="input.b.page8.stfd002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfd002
            
            #add-point:AFTER FIELD stfd002
            {<point name="input.a.page8.stfd002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfd002
            #add-point:ON CHANGE stfd002
            {<point name="input.g.page8.stfd002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfd003
            
            #add-point:AFTER FIELD stfd003
            {<point name="input.a.page8.stfd003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfd003
            #add-point:BEFORE FIELD stfd003
            {<point name="input.b.page8.stfd003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfd003
            #add-point:ON CHANGE stfd003
            {<point name="input.g.page8.stfd003" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfd004
            
            #add-point:AFTER FIELD stfd004
            {<point name="input.a.page8.stfd004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfd004
            #add-point:BEFORE FIELD stfd004
            {<point name="input.b.page8.stfd004" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfd004
            #add-point:ON CHANGE stfd004
            {<point name="input.g.page8.stfd004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfd005
            #add-point:BEFORE FIELD stfd005
            {<point name="input.b.page8.stfd005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfd005
            
            #add-point:AFTER FIELD stfd005
            {<point name="input.a.page8.stfd005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfd005
            #add-point:ON CHANGE stfd005
            {<point name="input.g.page8.stfd005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfd006
            #add-point:BEFORE FIELD stfd006
            {<point name="input.b.page8.stfd006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfd006
            
            #add-point:AFTER FIELD stfd006
            {<point name="input.a.page8.stfd006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfd006
            #add-point:ON CHANGE stfd006
            {<point name="input.g.page8.stfd006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfd007
            #add-point:BEFORE FIELD stfd007
            {<point name="input.b.page8.stfd007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfd007
            
            #add-point:AFTER FIELD stfd007
            {<point name="input.a.page8.stfd007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfd007
            #add-point:ON CHANGE stfd007
            {<point name="input.g.page8.stfd007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfd008
            #add-point:BEFORE FIELD stfd008
            {<point name="input.b.page8.stfd008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfd008
            
            #add-point:AFTER FIELD stfd008
            {<point name="input.a.page8.stfd008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfd008
            #add-point:ON CHANGE stfd008
            {<point name="input.g.page8.stfd008" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfdsite
            #add-point:BEFORE FIELD stfdsite
            {<point name="input.b.page8.stfdsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfdsite
            
            #add-point:AFTER FIELD stfdsite
            {<point name="input.a.page8.stfdsite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfdsite
            #add-point:ON CHANGE stfdsite
            {<point name="input.g.page8.stfdsite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfdunit
            #add-point:BEFORE FIELD stfdunit
            {<point name="input.b.page8.stfdunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfdunit
            
            #add-point:AFTER FIELD stfdunit
            {<point name="input.a.page8.stfdunit" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfdunit
            #add-point:ON CHANGE stfdunit
            {<point name="input.g.page8.stfdunit" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page8.stfdseq1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfdseq1
            #add-point:ON ACTION controlp INFIELD stfdseq1
            {<point name="input.c.page8.stfdseq1" />}
            #END add-point
 
         #Ctrlp:input.c.page8.stfd002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfd002
            #add-point:ON ACTION controlp INFIELD stfd002
            {<point name="input.c.page8.stfd002" />}
            #END add-point
 
         #Ctrlp:input.c.page8.stfd003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfd003
            #add-point:ON ACTION controlp INFIELD stfd003
            {<point name="input.c.page8.stfd003" />}
            #END add-point
 
         #Ctrlp:input.c.page8.stfd004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfd004
            #add-point:ON ACTION controlp INFIELD stfd004
            {<point name="input.c.page8.stfd004" />}
            #END add-point
 
         #Ctrlp:input.c.page8.stfd005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfd005
            #add-point:ON ACTION controlp INFIELD stfd005
            {<point name="input.c.page8.stfd005" />}
            #END add-point
 
         #Ctrlp:input.c.page8.stfd006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfd006
            #add-point:ON ACTION controlp INFIELD stfd006
            {<point name="input.c.page8.stfd006" />}
            #END add-point
 
         #Ctrlp:input.c.page8.stfd007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfd007
            #add-point:ON ACTION controlp INFIELD stfd007
            {<point name="input.c.page8.stfd007" />}
            #END add-point
 
         #Ctrlp:input.c.page8.stfd008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfd008
            #add-point:ON ACTION controlp INFIELD stfd008
            {<point name="input.c.page8.stfd008" />}
            #END add-point
 
         #Ctrlp:input.c.page8.stfdsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfdsite
            #add-point:ON ACTION controlp INFIELD stfdsite
            {<point name="input.c.page8.stfdsite" />}
            #END add-point
 
         #Ctrlp:input.c.page8.stfdunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfdunit
            #add-point:ON ACTION controlp INFIELD stfdunit
            {<point name="input.c.page8.stfdunit" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page8_after_row
            {<point name="input.body8.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_stfb8_d[l_ac].* = g_stfb8_d_t.*
               END IF
               CLOSE astm401_bcl8
               CLOSE astm401_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astm401_unlock_b("stfd_t","'8'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page8_after_row2
            {<point name="input.body8.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body8.after_input"/>}
            #end add-point  
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_stfb8_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_stfb8_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_stfb9_d FROM s_detail9.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_9)
         
         
         BEFORE INPUT
            #檢查上層單身是否有資料
            IF cl_null(g_stfb3_d[g_detail_idx].stfeseq) THEN
               NEXT FIELD stfeseq
            END IF
            #add-point:資料輸入前
            {<point name="input.body9.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stfb9_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            #如果一直都在單身2則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx2)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_stfb9_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body9.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stfb9_d[l_ac].* TO NULL 
            INITIALIZE g_stfb9_d_t.* TO NULL 
            INITIALIZE g_stfb9_d_o.* TO NULL 
            #公用欄位給值(單身9)
            
            #自定義預設值(單身9)
                  LET g_stfb9_d[l_ac].stff006 = "0"
      LET g_stfb9_d[l_ac].stff007 = "0"
 
            #add-point:modify段before備份
            {<point name="input.body9.insert.before_bak"/>}
            #end add-point
            LET g_stfb9_d_t.* = g_stfb9_d[l_ac].*     #新輸入資料
            LET g_stfb9_d_o.* = g_stfb9_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astm401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body9.insert.after_set_entry_b"/>}
            #end add-point
            CALL astm401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stfb9_d[li_reproduce_target].* = g_stfb9_d[li_reproduce].*
 
               LET g_stfb9_d[li_reproduce_target].stff003 = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body9.before_insert"/>}
            #end add-point  
            
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body9.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx2 = l_ac
            LET g_current_page = 9
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astm401_cl USING g_enterprise,g_stfa_m.stfa001
            OPEN astm401_bcl3 USING g_enterprise,g_stfa_m.stfa001,g_stfb3_d[g_detail_idx].stfeseq,g_stfb3_d[g_detail_idx].stfe002 

            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm401_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE astm401_cl
               CLOSE astm401_bcl3
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_stfb9_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stfb9_d[l_ac].stff003 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_stfb9_d_t.* = g_stfb9_d[l_ac].*  #BACKUP
               LET g_stfb9_d_o.* = g_stfb9_d[l_ac].*  #BACKUP
               CALL astm401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body9.after_set_entry_b"/>}
               #end add-point  
               CALL astm401_set_no_entry_b(l_cmd)
               IF NOT astm401_lock_b("stff_t","'9'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astm401_bcl9 INTO g_stfb9_d[l_ac].stff003,g_stfb9_d[l_ac].stff004,g_stfb9_d[l_ac].stff005, 
                      g_stfb9_d[l_ac].stff006,g_stfb9_d[l_ac].stff007,g_stfb9_d[l_ac].stff008,g_stfb9_d[l_ac].stff009, 
                      g_stfb9_d[l_ac].stffsite,g_stfb9_d[l_ac].stffunit
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stfb9_d_mask_o[l_ac].* =  g_stfb9_d[l_ac].*
                  CALL astm401_stff_t_mask()
                  LET g_stfb9_d_mask_n[l_ac].* =  g_stfb9_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astm401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body9.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body9.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身9刪除前
               {<point name="input.body9.b_delete" mark="Y"/>}
               #end add-point    
               #取得該筆資料key值
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys[2] = g_stfb3_d[g_detail_idx].stfeseq
               LET gs_keys[3] = g_stfb3_d[g_detail_idx].stfe002
               LET gs_keys[4] = g_stfb9_d_t.stff003
 
               #刪除同層單身
               IF NOT astm401_delete_b('stff_t',gs_keys,"'9'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身9刪除中
               {<point name="input.body9.m_delete"/>}
               #end add-point   
               
               CALL s_transaction_end('Y','0')
               CLOSE astm401_bcl
                  
               LET g_rec_b = g_rec_b-1
               #add-point:單身9刪除後
               {<point name="input.body9.a_delete"/>}
               #end add-point
               LET l_count = g_stfb_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body9.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stfb9_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
         
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身9新增前
            {<point name="input.body9.b_a_insert"/>}
            #end add-point
    
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM stff_t 
             WHERE stffent = g_enterprise AND stff001 = g_stfa_m.stfa001 AND stffseq = g_stfb3_d[g_detail_idx].stfeseq  
                 AND stff002 = g_stfb3_d[g_detail_idx].stfe002 AND stff003 = g_stfb9_d[g_detail_idx2].stff003 

                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身9新增前
               {<point name="input.body9.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys[2] = g_stfb3_d[g_detail_idx].stfeseq
               LET gs_keys[3] = g_stfb3_d[g_detail_idx].stfe002
               LET gs_keys[4] = g_stfb9_d[g_detail_idx2].stff003
               CALL astm401_insert_b('stff_t',gs_keys,"'9'")
                           
               #add-point:單身新增後9
               {<point name="input.body9.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_stfb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stff_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astm401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body9.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_stfb9_d[l_ac].* = g_stfb9_d_t.*
               CLOSE astm401_bcl9
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_stfb9_d[l_ac].* = g_stfb9_d_t.*
            ELSE
               #add-point:單身page9修改前
               {<point name="input.body9.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身9)
               
               
               #將遮罩欄位還原
               CALL astm401_stff_t_mask_restore('restore_mask_o')
               
               UPDATE stff_t SET (stff001,stffseq,stff002,stff003,stff004,stff005,stff006,stff007,stff008, 
                   stff009,stffsite,stffunit) = (g_stfa_m.stfa001,g_stfb3_d[g_detail_idx].stfeseq,g_stfb3_d[g_detail_idx].stfe002, 
                   g_stfb9_d[l_ac].stff003,g_stfb9_d[l_ac].stff004,g_stfb9_d[l_ac].stff005,g_stfb9_d[l_ac].stff006, 
                   g_stfb9_d[l_ac].stff007,g_stfb9_d[l_ac].stff008,g_stfb9_d[l_ac].stff009,g_stfb9_d[l_ac].stffsite, 
                   g_stfb9_d[l_ac].stffunit) #自訂欄位頁簽
                WHERE stffent = g_enterprise AND stff001 = g_stfa001_t AND stffseq = g_stfb3_d[g_detail_idx].stfeseq  
                    AND stff002 = g_stfb3_d[g_detail_idx].stfe002 AND stff003 = g_stfb9_d_t.stff003
                  
               #add-point:單身page9修改中
               {<point name="input.body9.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stff_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_stfb9_d[l_ac].* = g_stfb9_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stff_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_stfb9_d[l_ac].* = g_stfb9_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys_bak[1] = g_stfa001_t
               LET gs_keys[2] = g_stfb3_d[g_detail_idx].stfeseq
               LET gs_keys_bak[2] = g_stfb3_d[g_detail_idx].stfeseq
               LET gs_keys[3] = g_stfb3_d[g_detail_idx].stfe002
               LET gs_keys_bak[3] = g_stfb3_d[g_detail_idx].stfe002
               LET gs_keys[4] = g_stfb9_d[g_detail_idx2].stff003
               LET gs_keys_bak[4] = g_stfb9_d_t.stff003
               CALL astm401_update_b('stff_t',gs_keys,gs_keys_bak,"'9'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astm401_stff_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb9_d_t)
               LET g_log2 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb9_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page9修改後
               {<point name="input.body9.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stff003
            #add-point:BEFORE FIELD stff003
            {<point name="input.b.page9.stff003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stff003
            
            #add-point:AFTER FIELD stff003
            {<point name="input.a.page9.stff003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stff003
            #add-point:ON CHANGE stff003
            {<point name="input.g.page9.stff003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stff004
            #add-point:BEFORE FIELD stff004
            {<point name="input.b.page9.stff004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stff004
            
            #add-point:AFTER FIELD stff004
            {<point name="input.a.page9.stff004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stff004
            #add-point:ON CHANGE stff004
            {<point name="input.g.page9.stff004" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stff005
            
            #add-point:AFTER FIELD stff005
            {<point name="input.a.page9.stff005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stff005
            #add-point:BEFORE FIELD stff005
            {<point name="input.b.page9.stff005" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stff005
            #add-point:ON CHANGE stff005
            {<point name="input.g.page9.stff005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stff006
            #add-point:BEFORE FIELD stff006
            {<point name="input.b.page9.stff006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stff006
            
            #add-point:AFTER FIELD stff006
            {<point name="input.a.page9.stff006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stff006
            #add-point:ON CHANGE stff006
            {<point name="input.g.page9.stff006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stff007
            #add-point:BEFORE FIELD stff007
            {<point name="input.b.page9.stff007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stff007
            
            #add-point:AFTER FIELD stff007
            {<point name="input.a.page9.stff007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stff007
            #add-point:ON CHANGE stff007
            {<point name="input.g.page9.stff007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stff008
            #add-point:BEFORE FIELD stff008
            {<point name="input.b.page9.stff008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stff008
            
            #add-point:AFTER FIELD stff008
            {<point name="input.a.page9.stff008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stff008
            #add-point:ON CHANGE stff008
            {<point name="input.g.page9.stff008" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stff009
            #add-point:BEFORE FIELD stff009
            {<point name="input.b.page9.stff009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stff009
            
            #add-point:AFTER FIELD stff009
            {<point name="input.a.page9.stff009" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stff009
            #add-point:ON CHANGE stff009
            {<point name="input.g.page9.stff009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stffsite
            #add-point:BEFORE FIELD stffsite
            {<point name="input.b.page9.stffsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stffsite
            
            #add-point:AFTER FIELD stffsite
            {<point name="input.a.page9.stffsite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stffsite
            #add-point:ON CHANGE stffsite
            {<point name="input.g.page9.stffsite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stffunit
            #add-point:BEFORE FIELD stffunit
            {<point name="input.b.page9.stffunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stffunit
            
            #add-point:AFTER FIELD stffunit
            {<point name="input.a.page9.stffunit" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stffunit
            #add-point:ON CHANGE stffunit
            {<point name="input.g.page9.stffunit" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page9.stff003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stff003
            #add-point:ON ACTION controlp INFIELD stff003
            {<point name="input.c.page9.stff003" />}
            #END add-point
 
         #Ctrlp:input.c.page9.stff004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stff004
            #add-point:ON ACTION controlp INFIELD stff004
            {<point name="input.c.page9.stff004" />}
            #END add-point
 
         #Ctrlp:input.c.page9.stff005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stff005
            #add-point:ON ACTION controlp INFIELD stff005
            {<point name="input.c.page9.stff005" />}
            #END add-point
 
         #Ctrlp:input.c.page9.stff006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stff006
            #add-point:ON ACTION controlp INFIELD stff006
            {<point name="input.c.page9.stff006" />}
            #END add-point
 
         #Ctrlp:input.c.page9.stff007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stff007
            #add-point:ON ACTION controlp INFIELD stff007
            {<point name="input.c.page9.stff007" />}
            #END add-point
 
         #Ctrlp:input.c.page9.stff008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stff008
            #add-point:ON ACTION controlp INFIELD stff008
            {<point name="input.c.page9.stff008" />}
            #END add-point
 
         #Ctrlp:input.c.page9.stff009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stff009
            #add-point:ON ACTION controlp INFIELD stff009
            {<point name="input.c.page9.stff009" />}
            #END add-point
 
         #Ctrlp:input.c.page9.stffsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stffsite
            #add-point:ON ACTION controlp INFIELD stffsite
            {<point name="input.c.page9.stffsite" />}
            #END add-point
 
         #Ctrlp:input.c.page9.stffunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stffunit
            #add-point:ON ACTION controlp INFIELD stffunit
            {<point name="input.c.page9.stffunit" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page9_after_row
            {<point name="input.body9.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_stfb9_d[l_ac].* = g_stfb9_d_t.*
               END IF
               CLOSE astm401_bcl9
               CLOSE astm401_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astm401_unlock_b("stff_t","'9'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page9_after_row2
            {<point name="input.body9.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body9.after_input"/>}
            #end add-point  
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_stfb9_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_stfb9_d.getLength()+1
 
      END INPUT
 
 
 
]]>
  </section>
  <section id="astm401.input.head" ver="2" status="" src="s" readonly="">
    <![CDATA[      #單頭段
      INPUT BY NAME g_stfa_m.stfaunit,g_stfa_m.stfasite,g_stfa_m.stfa001,g_stfa_m.stfa002,g_stfa_m.stfa003, 
          g_stfa_m.stfa004,g_stfa_m.stfa009,g_stfa_m.stfastus,g_stfa_m.stfa005,g_stfa_m.stfal003,g_stfa_m.stfal004, 
          g_stfa_m.stfa006,g_stfa_m.stfa007,g_stfa_m.stfa008,g_stfa_m.stfa047,g_stfa_m.stfa048,g_stfa_m.stfa044, 
          g_stfa_m.stfa010,g_stfa_m.stfa011,g_stfa_m.stfa012,g_stfa_m.stfa013,g_stfa_m.stfa014,g_stfa_m.stfa015, 
          g_stfa_m.stfa016,g_stfa_m.stfa045,g_stfa_m.stfa046,g_stfa_m.stfa029,g_stfa_m.stfa030,g_stfa_m.stfa032, 
          g_stfa_m.stfa033,g_stfa_m.stfa034,g_stfa_m.stfa035,g_stfa_m.stfa036,g_stfa_m.stfa037,g_stfa_m.stfa038, 
          g_stfa_m.stfa039,g_stfa_m.stfa040,g_stfa_m.stfa028,g_stfa_m.next_b,g_stfa_m.stfa017,g_stfa_m.stfa021, 
          g_stfa_m.stfa024,g_stfa_m.stfa018,g_stfa_m.stfa049,g_stfa_m.stfa025,g_stfa_m.stfa019,g_stfa_m.stfa022, 
          g_stfa_m.stfa026,g_stfa_m.stfa020,g_stfa_m.stfa023,g_stfa_m.stfa027,g_stfa_m.stfa031,g_stfa_m.stfa042  

         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.master_input.update_item" />}
               #END add-point
            END IF
 
 
 
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN astm401_cl USING g_enterprise,g_stfa_m.stfa001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm401_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE astm401_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            LET g_master_multi_table_t.stfal001 = g_stfa_m.stfa001
LET g_master_multi_table_t.stfal003 = g_stfa_m.stfal003
LET g_master_multi_table_t.stfal004 = g_stfa_m.stfal004
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.stfal001 = ''
LET g_master_multi_table_t.stfal003 = ''
LET g_master_multi_table_t.stfal004 = ''
 
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL astm401_set_entry(p_cmd)
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL astm401_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfaunit
            
            #add-point:AFTER FIELD stfaunit
            {<point name="input.a.stfaunit" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfaunit
            #add-point:BEFORE FIELD stfaunit
            {<point name="input.b.stfaunit" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfaunit
            #add-point:ON CHANGE stfaunit
            {<point name="input.g.stfaunit" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfasite
            
            #add-point:AFTER FIELD stfasite
            {<point name="input.a.stfasite" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfasite
            #add-point:BEFORE FIELD stfasite
            {<point name="input.b.stfasite" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfasite
            #add-point:ON CHANGE stfasite
            {<point name="input.g.stfasite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa001
            #add-point:BEFORE FIELD stfa001
            {<point name="input.b.stfa001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa001
            
            #add-point:AFTER FIELD stfa001
            {<point name="input.a.stfa001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa001
            #add-point:ON CHANGE stfa001
            {<point name="input.g.stfa001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa002
            #add-point:BEFORE FIELD stfa002
            {<point name="input.b.stfa002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa002
            
            #add-point:AFTER FIELD stfa002
            {<point name="input.a.stfa002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa002
            #add-point:ON CHANGE stfa002
            {<point name="input.g.stfa002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa003
            #add-point:BEFORE FIELD stfa003
            {<point name="input.b.stfa003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa003
            
            #add-point:AFTER FIELD stfa003
            {<point name="input.a.stfa003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa003
            #add-point:ON CHANGE stfa003
            {<point name="input.g.stfa003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa004
            #add-point:BEFORE FIELD stfa004
            {<point name="input.b.stfa004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa004
            
            #add-point:AFTER FIELD stfa004
            {<point name="input.a.stfa004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa004
            #add-point:ON CHANGE stfa004
            {<point name="input.g.stfa004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa009
            #add-point:BEFORE FIELD stfa009
            {<point name="input.b.stfa009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa009
            
            #add-point:AFTER FIELD stfa009
            {<point name="input.a.stfa009" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa009
            #add-point:ON CHANGE stfa009
            {<point name="input.g.stfa009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfastus
            #add-point:BEFORE FIELD stfastus
            {<point name="input.b.stfastus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfastus
            
            #add-point:AFTER FIELD stfastus
            {<point name="input.a.stfastus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfastus
            #add-point:ON CHANGE stfastus
            {<point name="input.g.stfastus" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa005
            #add-point:BEFORE FIELD stfa005
            {<point name="input.b.stfa005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa005
            
            #add-point:AFTER FIELD stfa005
            {<point name="input.a.stfa005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa005
            #add-point:ON CHANGE stfa005
            {<point name="input.g.stfa005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfal003
            #add-point:BEFORE FIELD stfal003
            {<point name="input.b.stfal003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfal003
            
            #add-point:AFTER FIELD stfal003
            {<point name="input.a.stfal003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfal003
            #add-point:ON CHANGE stfal003
            {<point name="input.g.stfal003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfal004
            #add-point:BEFORE FIELD stfal004
            {<point name="input.b.stfal004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfal004
            
            #add-point:AFTER FIELD stfal004
            {<point name="input.a.stfal004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfal004
            #add-point:ON CHANGE stfal004
            {<point name="input.g.stfal004" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa006
            
            #add-point:AFTER FIELD stfa006
            {<point name="input.a.stfa006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa006
            #add-point:BEFORE FIELD stfa006
            {<point name="input.b.stfa006" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa006
            #add-point:ON CHANGE stfa006
            {<point name="input.g.stfa006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa007
            #add-point:BEFORE FIELD stfa007
            {<point name="input.b.stfa007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa007
            
            #add-point:AFTER FIELD stfa007
            {<point name="input.a.stfa007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa007
            #add-point:ON CHANGE stfa007
            {<point name="input.g.stfa007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa008
            #add-point:BEFORE FIELD stfa008
            {<point name="input.b.stfa008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa008
            
            #add-point:AFTER FIELD stfa008
            {<point name="input.a.stfa008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa008
            #add-point:ON CHANGE stfa008
            {<point name="input.g.stfa008" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa047
            
            #add-point:AFTER FIELD stfa047
            {<point name="input.a.stfa047" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa047
            #add-point:BEFORE FIELD stfa047
            {<point name="input.b.stfa047" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa047
            #add-point:ON CHANGE stfa047
            {<point name="input.g.stfa047" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa048
            
            #add-point:AFTER FIELD stfa048
            {<point name="input.a.stfa048" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa048
            #add-point:BEFORE FIELD stfa048
            {<point name="input.b.stfa048" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa048
            #add-point:ON CHANGE stfa048
            {<point name="input.g.stfa048" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa044
            
            #add-point:AFTER FIELD stfa044
            {<point name="input.a.stfa044" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa044
            #add-point:BEFORE FIELD stfa044
            {<point name="input.b.stfa044" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa044
            #add-point:ON CHANGE stfa044
            {<point name="input.g.stfa044" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa010
            
            #add-point:AFTER FIELD stfa010
            {<point name="input.a.stfa010" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa010
            #add-point:BEFORE FIELD stfa010
            {<point name="input.b.stfa010" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa010
            #add-point:ON CHANGE stfa010
            {<point name="input.g.stfa010" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa011
            
            #add-point:AFTER FIELD stfa011
            {<point name="input.a.stfa011" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa011
            #add-point:BEFORE FIELD stfa011
            {<point name="input.b.stfa011" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa011
            #add-point:ON CHANGE stfa011
            {<point name="input.g.stfa011" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa012
            
            #add-point:AFTER FIELD stfa012
            {<point name="input.a.stfa012" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa012
            #add-point:BEFORE FIELD stfa012
            {<point name="input.b.stfa012" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa012
            #add-point:ON CHANGE stfa012
            {<point name="input.g.stfa012" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa013
            
            #add-point:AFTER FIELD stfa013
            {<point name="input.a.stfa013" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa013
            #add-point:BEFORE FIELD stfa013
            {<point name="input.b.stfa013" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa013
            #add-point:ON CHANGE stfa013
            {<point name="input.g.stfa013" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa014
            
            #add-point:AFTER FIELD stfa014
            {<point name="input.a.stfa014" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa014
            #add-point:BEFORE FIELD stfa014
            {<point name="input.b.stfa014" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa014
            #add-point:ON CHANGE stfa014
            {<point name="input.g.stfa014" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa015
            
            #add-point:AFTER FIELD stfa015
            {<point name="input.a.stfa015" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa015
            #add-point:BEFORE FIELD stfa015
            {<point name="input.b.stfa015" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa015
            #add-point:ON CHANGE stfa015
            {<point name="input.g.stfa015" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa016
            #add-point:BEFORE FIELD stfa016
            {<point name="input.b.stfa016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa016
            
            #add-point:AFTER FIELD stfa016
            {<point name="input.a.stfa016" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa016
            #add-point:ON CHANGE stfa016
            {<point name="input.g.stfa016" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa045
            
            #add-point:AFTER FIELD stfa045
            {<point name="input.a.stfa045" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa045
            #add-point:BEFORE FIELD stfa045
            {<point name="input.b.stfa045" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa045
            #add-point:ON CHANGE stfa045
            {<point name="input.g.stfa045" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa046
            #add-point:BEFORE FIELD stfa046
            {<point name="input.b.stfa046" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa046
            
            #add-point:AFTER FIELD stfa046
            {<point name="input.a.stfa046" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa046
            #add-point:ON CHANGE stfa046
            {<point name="input.g.stfa046" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa029
            #add-point:BEFORE FIELD stfa029
            {<point name="input.b.stfa029" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa029
            
            #add-point:AFTER FIELD stfa029
            {<point name="input.a.stfa029" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa029
            #add-point:ON CHANGE stfa029
            {<point name="input.g.stfa029" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa030
            #add-point:BEFORE FIELD stfa030
            {<point name="input.b.stfa030" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa030
            
            #add-point:AFTER FIELD stfa030
            {<point name="input.a.stfa030" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa030
            #add-point:ON CHANGE stfa030
            {<point name="input.g.stfa030" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa032
            
            #add-point:AFTER FIELD stfa032
            {<point name="input.a.stfa032" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa032
            #add-point:BEFORE FIELD stfa032
            {<point name="input.b.stfa032" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa032
            #add-point:ON CHANGE stfa032
            {<point name="input.g.stfa032" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa033
            
            #add-point:AFTER FIELD stfa033
            {<point name="input.a.stfa033" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa033
            #add-point:BEFORE FIELD stfa033
            {<point name="input.b.stfa033" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa033
            #add-point:ON CHANGE stfa033
            {<point name="input.g.stfa033" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa034
            
            #add-point:AFTER FIELD stfa034
            {<point name="input.a.stfa034" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa034
            #add-point:BEFORE FIELD stfa034
            {<point name="input.b.stfa034" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa034
            #add-point:ON CHANGE stfa034
            {<point name="input.g.stfa034" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa035
            
            #add-point:AFTER FIELD stfa035
            {<point name="input.a.stfa035" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa035
            #add-point:BEFORE FIELD stfa035
            {<point name="input.b.stfa035" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa035
            #add-point:ON CHANGE stfa035
            {<point name="input.g.stfa035" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa036
            
            #add-point:AFTER FIELD stfa036
            {<point name="input.a.stfa036" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa036
            #add-point:BEFORE FIELD stfa036
            {<point name="input.b.stfa036" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa036
            #add-point:ON CHANGE stfa036
            {<point name="input.g.stfa036" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa037
            
            #add-point:AFTER FIELD stfa037
            {<point name="input.a.stfa037" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa037
            #add-point:BEFORE FIELD stfa037
            {<point name="input.b.stfa037" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa037
            #add-point:ON CHANGE stfa037
            {<point name="input.g.stfa037" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa038
            
            #add-point:AFTER FIELD stfa038
            {<point name="input.a.stfa038" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa038
            #add-point:BEFORE FIELD stfa038
            {<point name="input.b.stfa038" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa038
            #add-point:ON CHANGE stfa038
            {<point name="input.g.stfa038" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa039
            #add-point:BEFORE FIELD stfa039
            {<point name="input.b.stfa039" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa039
            
            #add-point:AFTER FIELD stfa039
            {<point name="input.a.stfa039" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa039
            #add-point:ON CHANGE stfa039
            {<point name="input.g.stfa039" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa040
            #add-point:BEFORE FIELD stfa040
            {<point name="input.b.stfa040" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa040
            
            #add-point:AFTER FIELD stfa040
            {<point name="input.a.stfa040" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa040
            #add-point:ON CHANGE stfa040
            {<point name="input.g.stfa040" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa028
            #add-point:BEFORE FIELD stfa028
            {<point name="input.b.stfa028" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa028
            
            #add-point:AFTER FIELD stfa028
            {<point name="input.a.stfa028" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa028
            #add-point:ON CHANGE stfa028
            {<point name="input.g.stfa028" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD next_b
            #add-point:BEFORE FIELD next_b
            {<point name="input.b.next_b" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD next_b
            
            #add-point:AFTER FIELD next_b
            {<point name="input.a.next_b" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE next_b
            #add-point:ON CHANGE next_b
            {<point name="input.g.next_b" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa017
            #add-point:BEFORE FIELD stfa017
            {<point name="input.b.stfa017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa017
            
            #add-point:AFTER FIELD stfa017
            {<point name="input.a.stfa017" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa017
            #add-point:ON CHANGE stfa017
            {<point name="input.g.stfa017" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa021
            #add-point:BEFORE FIELD stfa021
            {<point name="input.b.stfa021" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa021
            
            #add-point:AFTER FIELD stfa021
            {<point name="input.a.stfa021" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa021
            #add-point:ON CHANGE stfa021
            {<point name="input.g.stfa021" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa024
            #add-point:BEFORE FIELD stfa024
            {<point name="input.b.stfa024" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa024
            
            #add-point:AFTER FIELD stfa024
            {<point name="input.a.stfa024" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa024
            #add-point:ON CHANGE stfa024
            {<point name="input.g.stfa024" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa018
            #add-point:BEFORE FIELD stfa018
            {<point name="input.b.stfa018" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa018
            
            #add-point:AFTER FIELD stfa018
            {<point name="input.a.stfa018" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa018
            #add-point:ON CHANGE stfa018
            {<point name="input.g.stfa018" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa049
            #add-point:BEFORE FIELD stfa049
            {<point name="input.b.stfa049" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa049
            
            #add-point:AFTER FIELD stfa049
            {<point name="input.a.stfa049" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa049
            #add-point:ON CHANGE stfa049
            {<point name="input.g.stfa049" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa025
            #add-point:BEFORE FIELD stfa025
            {<point name="input.b.stfa025" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa025
            
            #add-point:AFTER FIELD stfa025
            {<point name="input.a.stfa025" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa025
            #add-point:ON CHANGE stfa025
            {<point name="input.g.stfa025" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa019
            #add-point:BEFORE FIELD stfa019
            {<point name="input.b.stfa019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa019
            
            #add-point:AFTER FIELD stfa019
            {<point name="input.a.stfa019" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa019
            #add-point:ON CHANGE stfa019
            {<point name="input.g.stfa019" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa022
            #add-point:BEFORE FIELD stfa022
            {<point name="input.b.stfa022" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa022
            
            #add-point:AFTER FIELD stfa022
            {<point name="input.a.stfa022" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa022
            #add-point:ON CHANGE stfa022
            {<point name="input.g.stfa022" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa026
            #add-point:BEFORE FIELD stfa026
            {<point name="input.b.stfa026" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa026
            
            #add-point:AFTER FIELD stfa026
            {<point name="input.a.stfa026" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa026
            #add-point:ON CHANGE stfa026
            {<point name="input.g.stfa026" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa020
            #add-point:BEFORE FIELD stfa020
            {<point name="input.b.stfa020" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa020
            
            #add-point:AFTER FIELD stfa020
            {<point name="input.a.stfa020" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa020
            #add-point:ON CHANGE stfa020
            {<point name="input.g.stfa020" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa023
            #add-point:BEFORE FIELD stfa023
            {<point name="input.b.stfa023" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa023
            
            #add-point:AFTER FIELD stfa023
            {<point name="input.a.stfa023" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa023
            #add-point:ON CHANGE stfa023
            {<point name="input.g.stfa023" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa027
            #add-point:BEFORE FIELD stfa027
            {<point name="input.b.stfa027" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa027
            
            #add-point:AFTER FIELD stfa027
            {<point name="input.a.stfa027" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa027
            #add-point:ON CHANGE stfa027
            {<point name="input.g.stfa027" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa031
            #add-point:BEFORE FIELD stfa031
            {<point name="input.b.stfa031" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa031
            
            #add-point:AFTER FIELD stfa031
            {<point name="input.a.stfa031" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa031
            #add-point:ON CHANGE stfa031
            {<point name="input.g.stfa031" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD stfa042
            #add-point:BEFORE FIELD stfa042
            {<point name="input.b.stfa042" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD stfa042
            
            #add-point:AFTER FIELD stfa042
            {<point name="input.a.stfa042" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE stfa042
            #add-point:ON CHANGE stfa042
            {<point name="input.g.stfa042" />}
            #END add-point 
 
 #欄位檢查
                  #Ctrlp:input.c.stfaunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfaunit
            #add-point:ON ACTION controlp INFIELD stfaunit
            {<point name="input.c.stfaunit" />}
            #END add-point
 
         #Ctrlp:input.c.stfasite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfasite
            #add-point:ON ACTION controlp INFIELD stfasite
            {<point name="input.c.stfasite" />}
            #END add-point
 
         #Ctrlp:input.c.stfa001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa001
            #add-point:ON ACTION controlp INFIELD stfa001
            {<point name="input.c.stfa001" />}
            #END add-point
 
         #Ctrlp:input.c.stfa002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa002
            #add-point:ON ACTION controlp INFIELD stfa002
            {<point name="input.c.stfa002" />}
            #END add-point
 
         #Ctrlp:input.c.stfa003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa003
            #add-point:ON ACTION controlp INFIELD stfa003
            {<point name="input.c.stfa003" />}
            #END add-point
 
         #Ctrlp:input.c.stfa004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa004
            #add-point:ON ACTION controlp INFIELD stfa004
            {<point name="input.c.stfa004" />}
            #END add-point
 
         #Ctrlp:input.c.stfa009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa009
            #add-point:ON ACTION controlp INFIELD stfa009
            {<point name="input.c.stfa009" />}
            #END add-point
 
         #Ctrlp:input.c.stfastus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfastus
            #add-point:ON ACTION controlp INFIELD stfastus
            {<point name="input.c.stfastus" />}
            #END add-point
 
         #Ctrlp:input.c.stfa005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa005
            #add-point:ON ACTION controlp INFIELD stfa005
            {<point name="input.c.stfa005" />}
            #END add-point
 
         #Ctrlp:input.c.stfal003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfal003
            #add-point:ON ACTION controlp INFIELD stfal003
            {<point name="input.c.stfal003" />}
            #END add-point
 
         #Ctrlp:input.c.stfal004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfal004
            #add-point:ON ACTION controlp INFIELD stfal004
            {<point name="input.c.stfal004" />}
            #END add-point
 
         #Ctrlp:input.c.stfa006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa006
            #add-point:ON ACTION controlp INFIELD stfa006
            {<point name="input.c.stfa006" />}
            #END add-point
 
         #Ctrlp:input.c.stfa007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa007
            #add-point:ON ACTION controlp INFIELD stfa007
            {<point name="input.c.stfa007" />}
            #END add-point
 
         #Ctrlp:input.c.stfa008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa008
            #add-point:ON ACTION controlp INFIELD stfa008
            {<point name="input.c.stfa008" />}
            #END add-point
 
         #Ctrlp:input.c.stfa047
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa047
            #add-point:ON ACTION controlp INFIELD stfa047
            {<point name="input.c.stfa047" />}
            #END add-point
 
         #Ctrlp:input.c.stfa048
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa048
            #add-point:ON ACTION controlp INFIELD stfa048
            {<point name="input.c.stfa048" />}
            #END add-point
 
         #Ctrlp:input.c.stfa044
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa044
            #add-point:ON ACTION controlp INFIELD stfa044
            {<point name="input.c.stfa044" />}
            #END add-point
 
         #Ctrlp:input.c.stfa010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa010
            #add-point:ON ACTION controlp INFIELD stfa010
            {<point name="input.c.stfa010" />}
            #END add-point
 
         #Ctrlp:input.c.stfa011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa011
            #add-point:ON ACTION controlp INFIELD stfa011
            {<point name="input.c.stfa011" />}
            #END add-point
 
         #Ctrlp:input.c.stfa012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa012
            #add-point:ON ACTION controlp INFIELD stfa012
            {<point name="input.c.stfa012" />}
            #END add-point
 
         #Ctrlp:input.c.stfa013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa013
            #add-point:ON ACTION controlp INFIELD stfa013
            {<point name="input.c.stfa013" />}
            #END add-point
 
         #Ctrlp:input.c.stfa014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa014
            #add-point:ON ACTION controlp INFIELD stfa014
            {<point name="input.c.stfa014" />}
            #END add-point
 
         #Ctrlp:input.c.stfa015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa015
            #add-point:ON ACTION controlp INFIELD stfa015
            {<point name="input.c.stfa015" />}
            #END add-point
 
         #Ctrlp:input.c.stfa016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa016
            #add-point:ON ACTION controlp INFIELD stfa016
            {<point name="input.c.stfa016" />}
            #END add-point
 
         #Ctrlp:input.c.stfa045
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa045
            #add-point:ON ACTION controlp INFIELD stfa045
            {<point name="input.c.stfa045" />}
            #END add-point
 
         #Ctrlp:input.c.stfa046
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa046
            #add-point:ON ACTION controlp INFIELD stfa046
            {<point name="input.c.stfa046" />}
            #END add-point
 
         #Ctrlp:input.c.stfa029
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa029
            #add-point:ON ACTION controlp INFIELD stfa029
            {<point name="input.c.stfa029" />}
            #END add-point
 
         #Ctrlp:input.c.stfa030
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa030
            #add-point:ON ACTION controlp INFIELD stfa030
            {<point name="input.c.stfa030" />}
            #END add-point
 
         #Ctrlp:input.c.stfa032
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa032
            #add-point:ON ACTION controlp INFIELD stfa032
            {<point name="input.c.stfa032" />}
            #END add-point
 
         #Ctrlp:input.c.stfa033
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa033
            #add-point:ON ACTION controlp INFIELD stfa033
            {<point name="input.c.stfa033" />}
            #END add-point
 
         #Ctrlp:input.c.stfa034
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa034
            #add-point:ON ACTION controlp INFIELD stfa034
            {<point name="input.c.stfa034" />}
            #END add-point
 
         #Ctrlp:input.c.stfa035
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa035
            #add-point:ON ACTION controlp INFIELD stfa035
            {<point name="input.c.stfa035" />}
            #END add-point
 
         #Ctrlp:input.c.stfa036
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa036
            #add-point:ON ACTION controlp INFIELD stfa036
            {<point name="input.c.stfa036" />}
            #END add-point
 
         #Ctrlp:input.c.stfa037
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa037
            #add-point:ON ACTION controlp INFIELD stfa037
            {<point name="input.c.stfa037" />}
            #END add-point
 
         #Ctrlp:input.c.stfa038
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa038
            #add-point:ON ACTION controlp INFIELD stfa038
            {<point name="input.c.stfa038" />}
            #END add-point
 
         #Ctrlp:input.c.stfa039
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa039
            #add-point:ON ACTION controlp INFIELD stfa039
            {<point name="input.c.stfa039" />}
            #END add-point
 
         #Ctrlp:input.c.stfa040
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa040
            #add-point:ON ACTION controlp INFIELD stfa040
            {<point name="input.c.stfa040" />}
            #END add-point
 
         #Ctrlp:input.c.stfa028
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa028
            #add-point:ON ACTION controlp INFIELD stfa028
            {<point name="input.c.stfa028" />}
            #END add-point
 
         #Ctrlp:input.c.next_b
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD next_b
            #add-point:ON ACTION controlp INFIELD next_b
            {<point name="input.c.next_b" />}
            #END add-point
 
         #Ctrlp:input.c.stfa017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa017
            #add-point:ON ACTION controlp INFIELD stfa017
            {<point name="input.c.stfa017" />}
            #END add-point
 
         #Ctrlp:input.c.stfa021
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa021
            #add-point:ON ACTION controlp INFIELD stfa021
            {<point name="input.c.stfa021" />}
            #END add-point
 
         #Ctrlp:input.c.stfa024
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa024
            #add-point:ON ACTION controlp INFIELD stfa024
            {<point name="input.c.stfa024" />}
            #END add-point
 
         #Ctrlp:input.c.stfa018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa018
            #add-point:ON ACTION controlp INFIELD stfa018
            {<point name="input.c.stfa018" />}
            #END add-point
 
         #Ctrlp:input.c.stfa049
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa049
            #add-point:ON ACTION controlp INFIELD stfa049
            {<point name="input.c.stfa049" />}
            #END add-point
 
         #Ctrlp:input.c.stfa025
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa025
            #add-point:ON ACTION controlp INFIELD stfa025
            {<point name="input.c.stfa025" />}
            #END add-point
 
         #Ctrlp:input.c.stfa019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa019
            #add-point:ON ACTION controlp INFIELD stfa019
            {<point name="input.c.stfa019" />}
            #END add-point
 
         #Ctrlp:input.c.stfa022
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa022
            #add-point:ON ACTION controlp INFIELD stfa022
            {<point name="input.c.stfa022" />}
            #END add-point
 
         #Ctrlp:input.c.stfa026
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa026
            #add-point:ON ACTION controlp INFIELD stfa026
            {<point name="input.c.stfa026" />}
            #END add-point
 
         #Ctrlp:input.c.stfa020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa020
            #add-point:ON ACTION controlp INFIELD stfa020
            {<point name="input.c.stfa020" />}
            #END add-point
 
         #Ctrlp:input.c.stfa023
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa023
            #add-point:ON ACTION controlp INFIELD stfa023
            {<point name="input.c.stfa023" />}
            #END add-point
 
         #Ctrlp:input.c.stfa027
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa027
            #add-point:ON ACTION controlp INFIELD stfa027
            {<point name="input.c.stfa027" />}
            #END add-point
 
         #Ctrlp:input.c.stfa031
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa031
            #add-point:ON ACTION controlp INFIELD stfa031
            {<point name="input.c.stfa031" />}
            #END add-point
 
         #Ctrlp:input.c.stfa042
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD stfa042
            #add-point:ON ACTION controlp INFIELD stfa042
            {<point name="input.c.stfa042" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_stfa_m.stfa001
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO stfa_t (stfaent,stfaunit,stfasite,stfa001,stfa002,stfa003,stfa004,stfa009, 
                   stfastus,stfa005,stfa006,stfa007,stfa008,stfa047,stfa048,stfa044,stfa010,stfa011, 
                   stfa012,stfa013,stfa014,stfa015,stfa016,stfa045,stfa046,stfa029,stfa030,stfa032,stfa033, 
                   stfa034,stfa035,stfa036,stfa037,stfa038,stfa039,stfa040,stfa028,stfa017,stfa021,stfa024, 
                   stfa018,stfa049,stfa025,stfa019,stfa022,stfa026,stfa020,stfa023,stfa027,stfa031,stfa042, 
                   stfaownid,stfaowndp,stfacrtid,stfacrtdp,stfacrtdt,stfamodid,stfamoddt,stfacnfid,stfacnfdt) 

               VALUES (g_enterprise,g_stfa_m.stfaunit,g_stfa_m.stfasite,g_stfa_m.stfa001,g_stfa_m.stfa002, 
                   g_stfa_m.stfa003,g_stfa_m.stfa004,g_stfa_m.stfa009,g_stfa_m.stfastus,g_stfa_m.stfa005, 
                   g_stfa_m.stfa006,g_stfa_m.stfa007,g_stfa_m.stfa008,g_stfa_m.stfa047,g_stfa_m.stfa048, 
                   g_stfa_m.stfa044,g_stfa_m.stfa010,g_stfa_m.stfa011,g_stfa_m.stfa012,g_stfa_m.stfa013, 
                   g_stfa_m.stfa014,g_stfa_m.stfa015,g_stfa_m.stfa016,g_stfa_m.stfa045,g_stfa_m.stfa046, 
                   g_stfa_m.stfa029,g_stfa_m.stfa030,g_stfa_m.stfa032,g_stfa_m.stfa033,g_stfa_m.stfa034, 
                   g_stfa_m.stfa035,g_stfa_m.stfa036,g_stfa_m.stfa037,g_stfa_m.stfa038,g_stfa_m.stfa039, 
                   g_stfa_m.stfa040,g_stfa_m.stfa028,g_stfa_m.stfa017,g_stfa_m.stfa021,g_stfa_m.stfa024, 
                   g_stfa_m.stfa018,g_stfa_m.stfa049,g_stfa_m.stfa025,g_stfa_m.stfa019,g_stfa_m.stfa022, 
                   g_stfa_m.stfa026,g_stfa_m.stfa020,g_stfa_m.stfa023,g_stfa_m.stfa027,g_stfa_m.stfa031, 
                   g_stfa_m.stfa042,g_stfa_m.stfaownid,g_stfa_m.stfaowndp,g_stfa_m.stfacrtid,g_stfa_m.stfacrtdp, 
                   g_stfa_m.stfacrtdt,g_stfa_m.stfamodid,g_stfa_m.stfamoddt,g_stfa_m.stfacnfid,g_stfa_m.stfacnfdt)  

               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_stfa_m" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_stfa_m.stfa001 = g_master_multi_table_t.stfal001 AND
         g_stfa_m.stfal003 = g_master_multi_table_t.stfal003 AND 
         g_stfa_m.stfal004 = g_master_multi_table_t.stfal004  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'stfalent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_stfa_m.stfa001
            LET l_field_keys[02] = 'stfal001'
            LET l_var_keys_bak[02] = g_master_multi_table_t.stfal001
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'stfal002'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_stfa_m.stfal003
            LET l_fields[01] = 'stfal003'
            LET l_vars[02] = g_stfa_m.stfal004
            LET l_fields[02] = 'stfal004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'stfal_t')
         END IF 
 
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL astm401_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL astm401_b_fill()
               END IF
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL astm401_stfa_t_mask_restore('restore_mask_o')
               
               UPDATE stfa_t SET (stfaunit,stfasite,stfa001,stfa002,stfa003,stfa004,stfa009,stfastus, 
                   stfa005,stfa006,stfa007,stfa008,stfa047,stfa048,stfa044,stfa010,stfa011,stfa012,stfa013, 
                   stfa014,stfa015,stfa016,stfa045,stfa046,stfa029,stfa030,stfa032,stfa033,stfa034,stfa035, 
                   stfa036,stfa037,stfa038,stfa039,stfa040,stfa028,stfa017,stfa021,stfa024,stfa018,stfa049, 
                   stfa025,stfa019,stfa022,stfa026,stfa020,stfa023,stfa027,stfa031,stfa042,stfaownid, 
                   stfaowndp,stfacrtid,stfacrtdp,stfacrtdt,stfamodid,stfamoddt,stfacnfid,stfacnfdt) = (g_stfa_m.stfaunit, 
                   g_stfa_m.stfasite,g_stfa_m.stfa001,g_stfa_m.stfa002,g_stfa_m.stfa003,g_stfa_m.stfa004, 
                   g_stfa_m.stfa009,g_stfa_m.stfastus,g_stfa_m.stfa005,g_stfa_m.stfa006,g_stfa_m.stfa007, 
                   g_stfa_m.stfa008,g_stfa_m.stfa047,g_stfa_m.stfa048,g_stfa_m.stfa044,g_stfa_m.stfa010, 
                   g_stfa_m.stfa011,g_stfa_m.stfa012,g_stfa_m.stfa013,g_stfa_m.stfa014,g_stfa_m.stfa015, 
                   g_stfa_m.stfa016,g_stfa_m.stfa045,g_stfa_m.stfa046,g_stfa_m.stfa029,g_stfa_m.stfa030, 
                   g_stfa_m.stfa032,g_stfa_m.stfa033,g_stfa_m.stfa034,g_stfa_m.stfa035,g_stfa_m.stfa036, 
                   g_stfa_m.stfa037,g_stfa_m.stfa038,g_stfa_m.stfa039,g_stfa_m.stfa040,g_stfa_m.stfa028, 
                   g_stfa_m.stfa017,g_stfa_m.stfa021,g_stfa_m.stfa024,g_stfa_m.stfa018,g_stfa_m.stfa049, 
                   g_stfa_m.stfa025,g_stfa_m.stfa019,g_stfa_m.stfa022,g_stfa_m.stfa026,g_stfa_m.stfa020, 
                   g_stfa_m.stfa023,g_stfa_m.stfa027,g_stfa_m.stfa031,g_stfa_m.stfa042,g_stfa_m.stfaownid, 
                   g_stfa_m.stfaowndp,g_stfa_m.stfacrtid,g_stfa_m.stfacrtdp,g_stfa_m.stfacrtdt,g_stfa_m.stfamodid, 
                   g_stfa_m.stfamoddt,g_stfa_m.stfacnfid,g_stfa_m.stfacnfdt)
                WHERE stfaent = g_enterprise AND stfa001 = g_stfa001_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "stfa_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_stfa_m.stfa001 = g_master_multi_table_t.stfal001 AND
         g_stfa_m.stfal003 = g_master_multi_table_t.stfal003 AND 
         g_stfa_m.stfal004 = g_master_multi_table_t.stfal004  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'stfalent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_stfa_m.stfa001
            LET l_field_keys[02] = 'stfal001'
            LET l_var_keys_bak[02] = g_master_multi_table_t.stfal001
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'stfal002'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_stfa_m.stfal003
            LET l_fields[01] = 'stfal003'
            LET l_vars[02] = g_stfa_m.stfal004
            LET l_fields[02] = 'stfal004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'stfal_t')
         END IF 
 
               
               #將遮罩欄位進行遮蔽
               CALL astm401_stfa_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_stfa_m_t)
               LET g_log2 = util.JSON.stringify(g_stfa_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_stfa001_t = g_stfa_m.stfa001
 
            
      END INPUT
   
]]>
  </section>
  <section id="astm401.input.other" ver="6" status="" src="s" readonly="">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
         CALL DIALOG.setCurrentRow("s_detail2",g_detail_idx)
         CALL DIALOG.setCurrentRow("s_detail3",g_detail_idx)
         CALL DIALOG.setCurrentRow("s_detail4",g_detail_idx)
         CALL DIALOG.setCurrentRow("s_detail5",g_detail_idx)
         CALL DIALOG.setCurrentRow("s_detail6",g_detail_idx)
         CALL DIALOG.setCurrentRow("s_detail7",g_detail_idx)
         CALL DIALOG.setCurrentRow("s_detail8",g_detail_idx2)
         CALL DIALOG.setCurrentRow("s_detail9",g_detail_idx2)
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD stfa001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD stfbseq
               WHEN "s_detail2"
                  NEXT FIELD stfcseq
               WHEN "s_detail3"
                  NEXT FIELD stfe002
               WHEN "s_detail4"
                  NEXT FIELD stfgseq
               WHEN "s_detail5"
                  NEXT FIELD stfhseq
               WHEN "s_detail6"
                  NEXT FIELD stfiseq
               WHEN "s_detail7"
                  NEXT FIELD stfjseq
               WHEN "s_detail8"
                  NEXT FIELD stfdseq1
               WHEN "s_detail9"
                  NEXT FIELD stff003
 
               #add-point:input段modify_detail 
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog
         {<point name="input.after_dialog"/>}
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel
         {<point name="input.cancel"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close
         {<point name="input.close"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit
         {<point name="input.exit"/>}
         #end add-point
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="astm401.insert" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION astm401_insert()
   #add-point:insert段define
   {<point name="insert.define" edit="s"/>}
   #end add-point    
   #add-point:insert段define(客製用)
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_stfb_d.clear()   
   CALL g_stfb2_d.clear()  
   CALL g_stfb3_d.clear()  
   CALL g_stfb4_d.clear()  
   CALL g_stfb5_d.clear()  
   CALL g_stfb6_d.clear()  
   CALL g_stfb7_d.clear()  
   CALL g_stfb8_d.clear()  
   CALL g_stfb9_d.clear()  
 
 
   INITIALIZE g_stfa_m.* LIKE stfa_t.*             #DEFAULT 設定
   
   LET g_stfa001_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_stfa_m.stfaownid = g_user
      LET g_stfa_m.stfaowndp = g_dept
      LET g_stfa_m.stfacrtid = g_user
      LET g_stfa_m.stfacrtdp = g_dept 
      LET g_stfa_m.stfacrtdt = cl_get_current()
      LET g_stfa_m.stfamodid = g_user
      LET g_stfa_m.stfamoddt = cl_get_current()
      LET g_stfa_m.stfastus = 'N'
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
      
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_stfa_m_t.* = g_stfa_m.*
      LET g_stfa_m_o.* = g_stfa_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_stfa_m.stfastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         
      END CASE
 
 
    
      CALL astm401_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_stfa_m.* TO NULL
         INITIALIZE g_stfb_d TO NULL
         INITIALIZE g_stfb2_d TO NULL
         INITIALIZE g_stfb3_d TO NULL
         INITIALIZE g_stfb4_d TO NULL
         INITIALIZE g_stfb5_d TO NULL
         INITIALIZE g_stfb6_d TO NULL
         INITIALIZE g_stfb7_d TO NULL
         INITIALIZE g_stfb8_d TO NULL
         INITIALIZE g_stfb9_d TO NULL
 
         #add-point:取消新增後
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL astm401_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_stfb_d.clear()
      #CALL g_stfb2_d.clear()
      #CALL g_stfb3_d.clear()
      #CALL g_stfb4_d.clear()
      #CALL g_stfb5_d.clear()
      #CALL g_stfb6_d.clear()
      #CALL g_stfb7_d.clear()
      #CALL g_stfb8_d.clear()
      #CALL g_stfb9_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL astm401_set_act_visible()   
   CALL astm401_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_stfa001_t = g_stfa_m.stfa001
 
   
   #組合新增資料的條件
   LET g_add_browse = " stfaent = '" ||g_enterprise|| "' AND",
                      " stfa001 = '", g_stfa_m.stfa001, "' "
 
                      
   #add-point:組合新增資料的條件後
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL astm401_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE astm401_cl
   
   CALL astm401_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE astm401_master_referesh USING g_stfa_m.stfa001 INTO g_stfa_m.stfaunit,g_stfa_m.stfasite,g_stfa_m.stfa001, 
       g_stfa_m.stfa002,g_stfa_m.stfa003,g_stfa_m.stfa004,g_stfa_m.stfa009,g_stfa_m.stfastus,g_stfa_m.stfa005, 
       g_stfa_m.stfa006,g_stfa_m.stfa007,g_stfa_m.stfa008,g_stfa_m.stfa047,g_stfa_m.stfa048,g_stfa_m.stfa044, 
       g_stfa_m.stfa010,g_stfa_m.stfa011,g_stfa_m.stfa012,g_stfa_m.stfa013,g_stfa_m.stfa014,g_stfa_m.stfa015, 
       g_stfa_m.stfa016,g_stfa_m.stfa045,g_stfa_m.stfa046,g_stfa_m.stfa029,g_stfa_m.stfa030,g_stfa_m.stfa032, 
       g_stfa_m.stfa033,g_stfa_m.stfa034,g_stfa_m.stfa035,g_stfa_m.stfa036,g_stfa_m.stfa037,g_stfa_m.stfa038, 
       g_stfa_m.stfa039,g_stfa_m.stfa040,g_stfa_m.stfa028,g_stfa_m.stfa017,g_stfa_m.stfa021,g_stfa_m.stfa024, 
       g_stfa_m.stfa018,g_stfa_m.stfa049,g_stfa_m.stfa025,g_stfa_m.stfa019,g_stfa_m.stfa022,g_stfa_m.stfa026, 
       g_stfa_m.stfa020,g_stfa_m.stfa023,g_stfa_m.stfa027,g_stfa_m.stfa031,g_stfa_m.stfa042,g_stfa_m.stfaownid, 
       g_stfa_m.stfaowndp,g_stfa_m.stfacrtid,g_stfa_m.stfacrtdp,g_stfa_m.stfacrtdt,g_stfa_m.stfamodid, 
       g_stfa_m.stfamoddt,g_stfa_m.stfacnfid,g_stfa_m.stfacnfdt,g_stfa_m.stfaunit_desc,g_stfa_m.stfasite_desc, 
       g_stfa_m.stfa006_desc,g_stfa_m.stfa047_desc,g_stfa_m.stfa048_desc,g_stfa_m.stfa044_desc,g_stfa_m.stfa010_desc, 
       g_stfa_m.stfa011_desc,g_stfa_m.stfa012_desc,g_stfa_m.stfa013_desc,g_stfa_m.stfa014_desc,g_stfa_m.stfa015_desc, 
       g_stfa_m.stfa045_desc,g_stfa_m.stfa032_desc,g_stfa_m.stfa035_desc,g_stfa_m.stfa036_desc,g_stfa_m.stfa037_desc, 
       g_stfa_m.stfa038_desc,g_stfa_m.stfaownid_desc,g_stfa_m.stfaowndp_desc,g_stfa_m.stfacrtid_desc, 
       g_stfa_m.stfacrtdp_desc,g_stfa_m.stfamodid_desc,g_stfa_m.stfacnfid_desc
   
   #遮罩相關處理
   LET g_stfa_m_mask_o.* =  g_stfa_m.*
   CALL astm401_stfa_t_mask()
   LET g_stfa_m_mask_n.* =  g_stfa_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_stfa_m.stfaunit,g_stfa_m.stfaunit_desc,g_stfa_m.stfasite,g_stfa_m.stfasite_desc, 
       g_stfa_m.stfa001,g_stfa_m.stfa002,g_stfa_m.stfa003,g_stfa_m.stfa004,g_stfa_m.stfa009,g_stfa_m.stfastus, 
       g_stfa_m.stfa005,g_stfa_m.stfal003,g_stfa_m.stfal004,g_stfa_m.stfa006,g_stfa_m.stfa006_desc,g_stfa_m.stfa007, 
       g_stfa_m.stfa008,g_stfa_m.stfa047,g_stfa_m.stfa047_desc,g_stfa_m.stfa048,g_stfa_m.stfa048_desc, 
       g_stfa_m.stfa044,g_stfa_m.stfa044_desc,g_stfa_m.stfa010,g_stfa_m.stfa010_desc,g_stfa_m.stfa011, 
       g_stfa_m.stfa011_desc,g_stfa_m.stfa012,g_stfa_m.stfa012_desc,g_stfa_m.stfa013,g_stfa_m.stfa013_desc, 
       g_stfa_m.stfa014,g_stfa_m.stfa014_desc,g_stfa_m.stfa015,g_stfa_m.stfa015_desc,g_stfa_m.stfa016, 
       g_stfa_m.stfa045,g_stfa_m.stfa045_desc,g_stfa_m.stfa046,g_stfa_m.stfa029,g_stfa_m.stfa030,g_stfa_m.stfa032, 
       g_stfa_m.stfa032_desc,g_stfa_m.stfa033,g_stfa_m.stfa033_desc,g_stfa_m.stfa034,g_stfa_m.stfa034_desc, 
       g_stfa_m.stfa035,g_stfa_m.stfa035_desc,g_stfa_m.stfa036,g_stfa_m.stfa036_desc,g_stfa_m.stfa037, 
       g_stfa_m.stfa037_desc,g_stfa_m.stfa038,g_stfa_m.stfa038_desc,g_stfa_m.stfa039,g_stfa_m.stfa040, 
       g_stfa_m.stfa028,g_stfa_m.next_b,g_stfa_m.stfa017,g_stfa_m.stfa021,g_stfa_m.stfa024,g_stfa_m.stfa018, 
       g_stfa_m.stfa049,g_stfa_m.stfa025,g_stfa_m.stfa019,g_stfa_m.stfa022,g_stfa_m.stfa026,g_stfa_m.stfa020, 
       g_stfa_m.stfa023,g_stfa_m.stfa027,g_stfa_m.stfa031,g_stfa_m.stfa042,g_stfa_m.stfaownid,g_stfa_m.stfaownid_desc, 
       g_stfa_m.stfaowndp,g_stfa_m.stfaowndp_desc,g_stfa_m.stfacrtid,g_stfa_m.stfacrtid_desc,g_stfa_m.stfacrtdp, 
       g_stfa_m.stfacrtdp_desc,g_stfa_m.stfacrtdt,g_stfa_m.stfamodid,g_stfa_m.stfamodid_desc,g_stfa_m.stfamoddt, 
       g_stfa_m.stfacnfid,g_stfa_m.stfacnfid_desc,g_stfa_m.stfacnfdt
   
   #add-point:新增結束後
   {<point name="insert.after"/>}
   #end add-point 
   
   #功能已完成,通報訊息中心
   CALL astm401_msgcentre_notify('')
   
END FUNCTION
]]>
  </section>
  <section id="astm401.insert_b" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION astm401_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define
   {<point name="insert_b.define" edit="s"/>}
   #end add-point     
   #add-point:insert_b段define(客製用)
   {<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point     
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO stfb_t
                  (stfbent,
                   stfb001,
                   stfbseq
                   ,stfb002,stfb003,stfb004,stfb005,stfb006,stfb007,stfb008,stfb009,stfb010,stfb011,stfb012,stfb013,stfb014,stfb015,stfb016,stfb017,stfbsite,stfbunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stfb_d[g_detail_idx].stfb002,g_stfb_d[g_detail_idx].stfb003,g_stfb_d[g_detail_idx].stfb004, 
                       g_stfb_d[g_detail_idx].stfb005,g_stfb_d[g_detail_idx].stfb006,g_stfb_d[g_detail_idx].stfb007, 
                       g_stfb_d[g_detail_idx].stfb008,g_stfb_d[g_detail_idx].stfb009,g_stfb_d[g_detail_idx].stfb010, 
                       g_stfb_d[g_detail_idx].stfb011,g_stfb_d[g_detail_idx].stfb012,g_stfb_d[g_detail_idx].stfb013, 
                       g_stfb_d[g_detail_idx].stfb014,g_stfb_d[g_detail_idx].stfb015,g_stfb_d[g_detail_idx].stfb016, 
                       g_stfb_d[g_detail_idx].stfb017,g_stfb_d[g_detail_idx].stfbsite,g_stfb_d[g_detail_idx].stfbunit) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfb_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_stfb_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO stfc_t
                  (stfcent,
                   stfc001,
                   stfcseq
                   ,stfc002,stfc003,stfc024,stfc025,stfc004,stfc005,stfc006,stfc007,stfc008,stfc009,stfc010,stfc011,stfc012,stfc013,stfc014,stfc015,stfc016,stfc017,stfc018,stfc019,stfc020,stfc021,stfc022,stfc023,stfcsite,stfcunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stfb2_d[g_detail_idx].stfc002,g_stfb2_d[g_detail_idx].stfc003,g_stfb2_d[g_detail_idx].stfc024, 
                       g_stfb2_d[g_detail_idx].stfc025,g_stfb2_d[g_detail_idx].stfc004,g_stfb2_d[g_detail_idx].stfc005, 
                       g_stfb2_d[g_detail_idx].stfc006,g_stfb2_d[g_detail_idx].stfc007,g_stfb2_d[g_detail_idx].stfc008, 
                       g_stfb2_d[g_detail_idx].stfc009,g_stfb2_d[g_detail_idx].stfc010,g_stfb2_d[g_detail_idx].stfc011, 
                       g_stfb2_d[g_detail_idx].stfc012,g_stfb2_d[g_detail_idx].stfc013,g_stfb2_d[g_detail_idx].stfc014, 
                       g_stfb2_d[g_detail_idx].stfc015,g_stfb2_d[g_detail_idx].stfc016,g_stfb2_d[g_detail_idx].stfc017, 
                       g_stfb2_d[g_detail_idx].stfc018,g_stfb2_d[g_detail_idx].stfc019,g_stfb2_d[g_detail_idx].stfc020, 
                       g_stfb2_d[g_detail_idx].stfc021,g_stfb2_d[g_detail_idx].stfc022,g_stfb2_d[g_detail_idx].stfc023, 
                       g_stfb2_d[g_detail_idx].stfcsite,g_stfb2_d[g_detail_idx].stfcunit)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfc_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_stfb2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert3" mark="Y"/>}
      #end add-point 
      INSERT INTO stfe_t
                  (stfeent,
                   stfe001,
                   stfeseq,stfe002
                   ,stfe003,stfe004,stfe005,stfe006,stfe007,stfe008,stfe009,stfe010,stfe011,stfesite,stfeunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_stfb3_d[g_detail_idx].stfe003,g_stfb3_d[g_detail_idx].stfe004,g_stfb3_d[g_detail_idx].stfe005, 
                       g_stfb3_d[g_detail_idx].stfe006,g_stfb3_d[g_detail_idx].stfe007,g_stfb3_d[g_detail_idx].stfe008, 
                       g_stfb3_d[g_detail_idx].stfe009,g_stfb3_d[g_detail_idx].stfe010,g_stfb3_d[g_detail_idx].stfe011, 
                       g_stfb3_d[g_detail_idx].stfesite,g_stfb3_d[g_detail_idx].stfeunit)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfe_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_stfb3_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert3"/>}
      #end add-point
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert4" mark="Y"/>}
      #end add-point 
      INSERT INTO stfg_t
                  (stfgent,
                   stfg001,
                   stfgseq
                   ,stfg003,stfg002,stfg004,stfg005,stfgacti,stfgsite,stfgunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stfb4_d[g_detail_idx].stfg003,g_stfb4_d[g_detail_idx].stfg002,g_stfb4_d[g_detail_idx].stfg004, 
                       g_stfb4_d[g_detail_idx].stfg005,g_stfb4_d[g_detail_idx].stfgacti,g_stfb4_d[g_detail_idx].stfgsite, 
                       g_stfb4_d[g_detail_idx].stfgunit)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert4"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfg_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_stfb4_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert4"/>}
      #end add-point
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert5" mark="Y"/>}
      #end add-point 
      INSERT INTO stfh_t
                  (stfhent,
                   stfh001,
                   stfhseq
                   ,stfh002,stfh003,stfhacti,stfhsite,stfhunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stfb5_d[g_detail_idx].stfh002,g_stfb5_d[g_detail_idx].stfh003,g_stfb5_d[g_detail_idx].stfhacti, 
                       g_stfb5_d[g_detail_idx].stfhsite,g_stfb5_d[g_detail_idx].stfhunit)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert5"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfh_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'5'" THEN 
         CALL g_stfb5_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert5"/>}
      #end add-point
   END IF
 
   LET ls_group = "'6',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert6" mark="Y"/>}
      #end add-point 
      INSERT INTO stfi_t
                  (stfient,
                   stfi001,
                   stfiseq
                   ,stfi002,stfi003,stfi005,stfi006,stfi004,stfi007,stfi010,stfi008,stfi009,stfiacti,stfisite,stfiunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stfb6_d[g_detail_idx].stfi002,g_stfb6_d[g_detail_idx].stfi003,g_stfb6_d[g_detail_idx].stfi005, 
                       g_stfb6_d[g_detail_idx].stfi006,g_stfb6_d[g_detail_idx].stfi004,g_stfb6_d[g_detail_idx].stfi007, 
                       g_stfb6_d[g_detail_idx].stfi010,g_stfb6_d[g_detail_idx].stfi008,g_stfb6_d[g_detail_idx].stfi009, 
                       g_stfb6_d[g_detail_idx].stfiacti,g_stfb6_d[g_detail_idx].stfisite,g_stfb6_d[g_detail_idx].stfiunit) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert6"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfi_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'6'" THEN 
         CALL g_stfb6_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert6"/>}
      #end add-point
   END IF
 
   LET ls_group = "'7',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert7" mark="Y"/>}
      #end add-point 
      INSERT INTO stfj_t
                  (stfjent,
                   stfj001,
                   stfjseq
                   ,stfj002,stfj003,stfj004,stfj005,stfj006,stfjsite,stfjunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stfb7_d[g_detail_idx].stfj002,g_stfb7_d[g_detail_idx].stfj003,g_stfb7_d[g_detail_idx].stfj004, 
                       g_stfb7_d[g_detail_idx].stfj005,g_stfb7_d[g_detail_idx].stfj006,g_stfb7_d[g_detail_idx].stfjsite, 
                       g_stfb7_d[g_detail_idx].stfjunit)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert7"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfj_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'7'" THEN 
         CALL g_stfb7_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert7"/>}
      #end add-point
   END IF
 
 
   
   LET ls_group = "'8',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert8" mark="Y"/>}
      #end add-point 
      INSERT INTO stfd_t
                  (stfdent,
                   stfd001,stfdseq,
                   stfdseq1
                   ,stfd002,stfd003,stfd004,stfd005,stfd006,stfd007,stfd008,stfdsite,stfdunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_stfb8_d[g_detail_idx2].stfd002,g_stfb8_d[g_detail_idx2].stfd003,g_stfb8_d[g_detail_idx2].stfd004, 
                       g_stfb8_d[g_detail_idx2].stfd005,g_stfb8_d[g_detail_idx2].stfd006,g_stfb8_d[g_detail_idx2].stfd007, 
                       g_stfb8_d[g_detail_idx2].stfd008,g_stfb8_d[g_detail_idx2].stfdsite,g_stfb8_d[g_detail_idx2].stfdunit) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert8"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfd_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx2
      IF ps_page <> "'8'" THEN 
         CALL g_stfb8_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert8"/>}
      #end add-point
   END IF
 
   LET ls_group = "'9',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert9" mark="Y"/>}
      #end add-point 
      INSERT INTO stff_t
                  (stffent,
                   stff001,stffseq,stff002,
                   stff003
                   ,stff004,stff005,stff006,stff007,stff008,stff009,stffsite,stffunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
                   ,g_stfb9_d[g_detail_idx2].stff004,g_stfb9_d[g_detail_idx2].stff005,g_stfb9_d[g_detail_idx2].stff006, 
                       g_stfb9_d[g_detail_idx2].stff007,g_stfb9_d[g_detail_idx2].stff008,g_stfb9_d[g_detail_idx2].stff009, 
                       g_stfb9_d[g_detail_idx2].stffsite,g_stfb9_d[g_detail_idx2].stffunit)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert9"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stff_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx2
      IF ps_page <> "'9'" THEN 
         CALL g_stfb9_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert9"/>}
      #end add-point
   END IF
 
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="astm401.key_delete_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION astm401_key_delete_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define
   {<point name="key_delete_b.define" edit="s"/>}
   #end add-point
   #add-point:delete_b段define(客製用)
   {<point name="key_delete_b.define_customerization" edit="c"/>}
   #end add-point
   
   #如果是上層單身則進行delete
   IF ps_table = 'stfc_t' THEN
      #add-point:delete_b段修改前
      {<point name="key_delete_b.before_delete8" mark="Y"/>}
      #end add-point
      
      DELETE FROM stfd_t 
            WHERE stfdent = g_enterprise AND
                  stfd001 = ps_keys_bak[1] AND stfdseq = ps_keys_bak[2]
 
      #add-point:delete_b段修改中
      {<point name="key_delete_b.m_delete8"/>}
      #end add-point
              
      CASE
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfd_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
            RETURN FALSE
         OTHERWISE
      END CASE
      
      #add-point:delete_b段修改後
      {<point name="key_delete_b.after_delete8"/>}
      #end add-point
   END IF
 
   #如果是上層單身則進行delete
   IF ps_table = 'stfe_t' THEN
      #add-point:delete_b段修改前
      {<point name="key_delete_b.before_delete9" mark="Y"/>}
      #end add-point
      
      DELETE FROM stff_t 
            WHERE stffent = g_enterprise AND
                  stff001 = ps_keys_bak[1] AND stffseq = ps_keys_bak[2] AND stff002 = ps_keys_bak[3]
 
      #add-point:delete_b段修改中
      {<point name="key_delete_b.m_delete9"/>}
      #end add-point
              
      CASE
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stff_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
            RETURN FALSE
         OTHERWISE
      END CASE
      
      #add-point:delete_b段修改後
      {<point name="key_delete_b.after_delete9"/>}
      #end add-point
   END IF
 
 
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="astm401.key_update_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION astm401_key_update_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:update_b段define
   {<point name="key_update_b.define" edit="s"/>}
   #end add-point
   #add-point:update_b段define(客製用)
   {<point name="key_update_b.define_customerization" edit="c"/>}
   #end add-point
   
   #如果是上層單身則進行update
   IF ps_table = 'stfc_t' THEN
      #add-point:update_b段修改前
      {<point name="key_update_b.before_update8" mark="Y"/>}
      #end add-point
      
      UPDATE stfd_t 
         SET (stfd001,stfdseq) 
              = 
             (g_stfa_m.stfa001,g_stfb2_d[g_detail_idx].stfcseq) 
         WHERE stfdent = g_enterprise AND
               stfd001 = ps_keys_bak[1] AND stfdseq = ps_keys_bak[2]
 
      #add-point:update_b段修改中
      {<point name="key_update_b.m_update8"/>}
      #end add-point
              
      CASE
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfd_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            #若有多語言table資料一同更新
            
      END CASE
      
      #add-point:update_b段修改後
      {<point name="key_update_b.after_update8"/>}
      #end add-point
   END IF
 
   #如果是上層單身則進行update
   IF ps_table = 'stfe_t' THEN
      #add-point:update_b段修改前
      {<point name="key_update_b.before_update9" mark="Y"/>}
      #end add-point
      
      UPDATE stff_t 
         SET (stff001,stffseq,stff002) 
              = 
             (g_stfa_m.stfa001,g_stfb3_d[g_detail_idx].stfeseq,g_stfb3_d[g_detail_idx].stfe002) 
         WHERE stffent = g_enterprise AND
               stff001 = ps_keys_bak[1] AND stffseq = ps_keys_bak[2] AND stff002 = ps_keys_bak[3]
 
      #add-point:update_b段修改中
      {<point name="key_update_b.m_update9"/>}
      #end add-point
              
      CASE
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stff_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            #若有多語言table資料一同更新
            
      END CASE
      
      #add-point:update_b段修改後
      {<point name="key_update_b.after_update9"/>}
      #end add-point
   END IF
 
 
   
END FUNCTION
]]>
  </section>
  <section id="astm401.lock_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION astm401_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define(客製用)
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point   
    
   #先刷新資料
   #CALL astm401_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "stfb_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN astm401_bcl USING g_enterprise,
                                       g_stfa_m.stfa001,g_stfb_d[g_detail_idx].stfbseq     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astm401_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "stfc_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astm401_bcl2 USING g_enterprise,
                                             g_stfa_m.stfa001,g_stfb2_d[g_detail_idx].stfcseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astm401_bcl2" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "stfe_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astm401_bcl3 USING g_enterprise,
                                             g_stfa_m.stfa001,g_stfb3_d[g_detail_idx].stfeseq,g_stfb3_d[g_detail_idx].stfe002 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astm401_bcl3" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'4',"
   #僅鎖定自身table
   LET ls_group = "stfg_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astm401_bcl4 USING g_enterprise,
                                             g_stfa_m.stfa001,g_stfb4_d[g_detail_idx].stfgseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astm401_bcl4" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'5',"
   #僅鎖定自身table
   LET ls_group = "stfh_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astm401_bcl5 USING g_enterprise,
                                             g_stfa_m.stfa001,g_stfb5_d[g_detail_idx].stfhseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astm401_bcl5" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'6',"
   #僅鎖定自身table
   LET ls_group = "stfi_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astm401_bcl6 USING g_enterprise,
                                             g_stfa_m.stfa001,g_stfb6_d[g_detail_idx].stfiseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astm401_bcl6" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'7',"
   #僅鎖定自身table
   LET ls_group = "stfj_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astm401_bcl7 USING g_enterprise,
                                             g_stfa_m.stfa001,g_stfb7_d[g_detail_idx].stfjseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astm401_bcl7" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
   #鎖定整組table
   #LET ls_group = "'8',"
   #僅鎖定自身table
   LET ls_group = "stfd_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astm401_bcl8 USING g_enterprise,
                                             g_stfa_m.stfa001,g_stfb2_d[g_detail_idx].stfcseq,
                                             g_stfb8_d[g_detail_idx2].stfdseq1
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astm401_bcl8" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'9',"
   #僅鎖定自身table
   LET ls_group = "stff_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astm401_bcl9 USING g_enterprise,
                                             g_stfa_m.stfa001,g_stfb3_d[g_detail_idx].stfeseq,g_stfb3_d[g_detail_idx].stfe002, 

                                             g_stfb9_d[g_detail_idx2].stff003
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astm401_bcl9" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="astm401.main" ver="4" status="" src="s" readonly="">
    <![CDATA[#應用 a26 樣板自動產生(Version:4)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ast","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT stfaunit,'',stfasite,'',stfa001,stfa002,stfa003,stfa004,stfa009,stfastus, 
       stfa005,'','',stfa006,'',stfa007,stfa008,stfa047,'',stfa048,'',stfa044,'',stfa010,'',stfa011, 
       '',stfa012,'',stfa013,'',stfa014,'',stfa015,'',stfa016,stfa045,'',stfa046,stfa029,stfa030,stfa032, 
       '',stfa033,'',stfa034,'',stfa035,'',stfa036,'',stfa037,'',stfa038,'',stfa039,stfa040,stfa028, 
       '',stfa017,stfa021,stfa024,stfa018,stfa049,stfa025,stfa019,stfa022,stfa026,stfa020,stfa023,stfa027, 
       stfa031,stfa042,stfaownid,'',stfaowndp,'',stfacrtid,'',stfacrtdp,'',stfacrtdt,stfamodid,'',stfamoddt, 
       stfacnfid,'',stfacnfdt", 
                      " FROM stfa_t",
                      " WHERE stfaent= ? AND stfa001=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm401_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.stfaunit,t0.stfasite,t0.stfa001,t0.stfa002,t0.stfa003,t0.stfa004,t0.stfa009, 
       t0.stfastus,t0.stfa005,t0.stfa006,t0.stfa007,t0.stfa008,t0.stfa047,t0.stfa048,t0.stfa044,t0.stfa010, 
       t0.stfa011,t0.stfa012,t0.stfa013,t0.stfa014,t0.stfa015,t0.stfa016,t0.stfa045,t0.stfa046,t0.stfa029, 
       t0.stfa030,t0.stfa032,t0.stfa033,t0.stfa034,t0.stfa035,t0.stfa036,t0.stfa037,t0.stfa038,t0.stfa039, 
       t0.stfa040,t0.stfa028,t0.stfa017,t0.stfa021,t0.stfa024,t0.stfa018,t0.stfa049,t0.stfa025,t0.stfa019, 
       t0.stfa022,t0.stfa026,t0.stfa020,t0.stfa023,t0.stfa027,t0.stfa031,t0.stfa042,t0.stfaownid,t0.stfaowndp, 
       t0.stfacrtid,t0.stfacrtdp,t0.stfacrtdt,t0.stfamodid,t0.stfamoddt,t0.stfacnfid,t0.stfacnfdt,t1.ooefl003 , 
       t2.ooefl003 ,t3.oocql004 ,t4.mhaal003 ,t5.mhabl004 ,t6.ooefl003 ,t7.pmaal004 ,t8.rtaxl003 ,t9.oocql004 , 
       t10.stagl003 ,t11.ooefl003 ,t12.ooag011 ,t13.oocql004 ,t14.ooail003 ,t15.ooibl004 ,t16.staal003 , 
       t17.oocql004 ,t18.ooefl003 ,t19.ooag011 ,t20.ooefl003 ,t21.ooag011 ,t22.ooefl003 ,t23.ooag011 , 
       t24.ooag011",
               " FROM stfa_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=t0.stfaunit AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=t0.stfasite AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t3 ON t3.oocqlent='"||g_enterprise||"' AND t3.oocql001='2126' AND t3.oocql002=t0.stfa006 AND t3.oocql003='"||g_dlang||"' ",
               " LEFT JOIN mhaal_t t4 ON t4.mhaalent='"||g_enterprise||"' AND t4.mhaal001=t0.stfa047 AND t4.mhaal002='"||g_dlang||"' ",
               " LEFT JOIN mhabl_t t5 ON t5.mhablent='"||g_enterprise||"' AND t5.mhabl001=t0.stfa047 AND t5.mhabl002=t0.stfa048 AND t5.mhabl003='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent='"||g_enterprise||"' AND t6.ooefl001=t0.stfa044 AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t7 ON t7.pmaalent='"||g_enterprise||"' AND t7.pmaal001=t0.stfa010 AND t7.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN rtaxl_t t8 ON t8.rtaxlent='"||g_enterprise||"' AND t8.rtaxl001=t0.stfa011 AND t8.rtaxl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t9 ON t9.oocqlent='"||g_enterprise||"' AND t9.oocql001='2002' AND t9.oocql002=t0.stfa012 AND t9.oocql003='"||g_dlang||"' ",
               " LEFT JOIN stagl_t t10 ON t10.staglent='"||g_enterprise||"' AND t10.stagl001=t0.stfa013 AND t10.stagl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t11 ON t11.ooeflent='"||g_enterprise||"' AND t11.ooefl001=t0.stfa014 AND t11.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t12 ON t12.ooagent='"||g_enterprise||"' AND t12.ooag001=t0.stfa015  ",
               " LEFT JOIN oocql_t t13 ON t13.oocqlent='"||g_enterprise||"' AND t13.oocql001='2127' AND t13.oocql002=t0.stfa045 AND t13.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t14 ON t14.ooailent='"||g_enterprise||"' AND t14.ooail001=t0.stfa032 AND t14.ooail002='"||g_dlang||"' ",
               " LEFT JOIN ooibl_t t15 ON t15.ooiblent='"||g_enterprise||"' AND t15.ooibl002=t0.stfa035 AND t15.ooibl003='"||g_dlang||"' ",
               " LEFT JOIN staal_t t16 ON t16.staalent='"||g_enterprise||"' AND t16.staal001=t0.stfa036 AND t16.staal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t17 ON t17.oocqlent='"||g_enterprise||"' AND t17.oocql001='2060' AND t17.oocql002=t0.stfa037 AND t17.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t18 ON t18.ooeflent='"||g_enterprise||"' AND t18.ooefl001=t0.stfa038 AND t18.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t19 ON t19.ooagent='"||g_enterprise||"' AND t19.ooag001=t0.stfaownid  ",
               " LEFT JOIN ooefl_t t20 ON t20.ooeflent='"||g_enterprise||"' AND t20.ooefl001=t0.stfaowndp AND t20.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t21 ON t21.ooagent='"||g_enterprise||"' AND t21.ooag001=t0.stfacrtid  ",
               " LEFT JOIN ooefl_t t22 ON t22.ooeflent='"||g_enterprise||"' AND t22.ooefl001=t0.stfacrtdp AND t22.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t23 ON t23.ooagent='"||g_enterprise||"' AND t23.ooag001=t0.stfamodid  ",
               " LEFT JOIN ooag_t t24 ON t24.ooagent='"||g_enterprise||"' AND t24.ooag001=t0.stfacnfid  ",
 
               " WHERE t0.stfaent = '" ||g_enterprise|| "' AND t0.stfa001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE astm401_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_astm401 WITH FORM cl_ap_formpath("ast",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL astm401_init()   
 
      #進入選單 Menu (="N")
      CALL astm401_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_astm401
      
   END IF 
   
   CLOSE astm401_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
]]>
  </section>
  <section id="astm401.mask_functions" ver="1" status="" src="s" readonly="">
    <![CDATA[&include "erp/ast/astm401_mask.4gl"
]]>
  </section>
  <section id="astm401.modify" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION astm401_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
   DEFINE l_wc2_table3   STRING
 
   DEFINE l_wc2_table4   STRING
 
   DEFINE l_wc2_table5   STRING
 
   DEFINE l_wc2_table6   STRING
 
   DEFINE l_wc2_table7   STRING
 
 
   DEFINE l_wc2_table8   STRING
 
   DEFINE l_wc2_table9   STRING
 
 
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point    
   #add-point:modify段define(客製用)
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point    
   
   #保存單頭舊值
   LET g_stfa_m_t.* = g_stfa_m.*
   LET g_stfa_m_o.* = g_stfa_m.*
   
   IF g_stfa_m.stfa001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_stfa001_t = g_stfa_m.stfa001
 
   CALL s_transaction_begin()
   
   OPEN astm401_cl USING g_enterprise,g_stfa_m.stfa001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN astm401_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE astm401_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE astm401_master_referesh USING g_stfa_m.stfa001 INTO g_stfa_m.stfaunit,g_stfa_m.stfasite,g_stfa_m.stfa001, 
       g_stfa_m.stfa002,g_stfa_m.stfa003,g_stfa_m.stfa004,g_stfa_m.stfa009,g_stfa_m.stfastus,g_stfa_m.stfa005, 
       g_stfa_m.stfa006,g_stfa_m.stfa007,g_stfa_m.stfa008,g_stfa_m.stfa047,g_stfa_m.stfa048,g_stfa_m.stfa044, 
       g_stfa_m.stfa010,g_stfa_m.stfa011,g_stfa_m.stfa012,g_stfa_m.stfa013,g_stfa_m.stfa014,g_stfa_m.stfa015, 
       g_stfa_m.stfa016,g_stfa_m.stfa045,g_stfa_m.stfa046,g_stfa_m.stfa029,g_stfa_m.stfa030,g_stfa_m.stfa032, 
       g_stfa_m.stfa033,g_stfa_m.stfa034,g_stfa_m.stfa035,g_stfa_m.stfa036,g_stfa_m.stfa037,g_stfa_m.stfa038, 
       g_stfa_m.stfa039,g_stfa_m.stfa040,g_stfa_m.stfa028,g_stfa_m.stfa017,g_stfa_m.stfa021,g_stfa_m.stfa024, 
       g_stfa_m.stfa018,g_stfa_m.stfa049,g_stfa_m.stfa025,g_stfa_m.stfa019,g_stfa_m.stfa022,g_stfa_m.stfa026, 
       g_stfa_m.stfa020,g_stfa_m.stfa023,g_stfa_m.stfa027,g_stfa_m.stfa031,g_stfa_m.stfa042,g_stfa_m.stfaownid, 
       g_stfa_m.stfaowndp,g_stfa_m.stfacrtid,g_stfa_m.stfacrtdp,g_stfa_m.stfacrtdt,g_stfa_m.stfamodid, 
       g_stfa_m.stfamoddt,g_stfa_m.stfacnfid,g_stfa_m.stfacnfdt,g_stfa_m.stfaunit_desc,g_stfa_m.stfasite_desc, 
       g_stfa_m.stfa006_desc,g_stfa_m.stfa047_desc,g_stfa_m.stfa048_desc,g_stfa_m.stfa044_desc,g_stfa_m.stfa010_desc, 
       g_stfa_m.stfa011_desc,g_stfa_m.stfa012_desc,g_stfa_m.stfa013_desc,g_stfa_m.stfa014_desc,g_stfa_m.stfa015_desc, 
       g_stfa_m.stfa045_desc,g_stfa_m.stfa032_desc,g_stfa_m.stfa035_desc,g_stfa_m.stfa036_desc,g_stfa_m.stfa037_desc, 
       g_stfa_m.stfa038_desc,g_stfa_m.stfaownid_desc,g_stfa_m.stfaowndp_desc,g_stfa_m.stfacrtid_desc, 
       g_stfa_m.stfacrtdp_desc,g_stfa_m.stfamodid_desc,g_stfa_m.stfacnfid_desc
   
   #檢查是否允許此動作
   IF NOT astm401_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_stfa_m_mask_o.* =  g_stfa_m.*
   CALL astm401_stfa_t_mask()
   LET g_stfa_m_mask_n.* =  g_stfa_m.*
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
   #LET l_wc2_table3 = g_wc2_table3
   #LET l_wc2_table3 = " 1=1"
 
   #LET l_wc2_table4 = g_wc2_table4
   #LET l_wc2_table4 = " 1=1"
 
   #LET l_wc2_table5 = g_wc2_table5
   #LET l_wc2_table5 = " 1=1"
 
   #LET l_wc2_table6 = g_wc2_table6
   #LET l_wc2_table6 = " 1=1"
 
   #LET l_wc2_table7 = g_wc2_table7
   #LET l_wc2_table7 = " 1=1"
 
 
   #LET l_wc2_table8 = g_wc2_table8
   #LET l_wc2_table8 = " 1=1"
 
   #LET l_wc2_table9 = g_wc2_table9
   #LET l_wc2_table9 = " 1=1"
 
 
   
   CALL astm401_show()
   #add-point:modify段show之後
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
   #LET  g_wc2_table3 = l_wc2_table3 
 
   #LET  g_wc2_table4 = l_wc2_table4 
 
   #LET  g_wc2_table5 = l_wc2_table5 
 
   #LET  g_wc2_table6 = l_wc2_table6 
 
   #LET  g_wc2_table7 = l_wc2_table7 
 
 
   #LET  g_wc2_table8 = l_wc2_table8 
 
   #LET  g_wc2_table9 = l_wc2_table9 
 
 
    
   WHILE TRUE
      LET g_stfa001_t = g_stfa_m.stfa001
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_stfa_m.stfamodid = g_user 
LET g_stfa_m.stfamoddt = cl_get_current()
LET g_stfa_m.stfamodid_desc = cl_get_username(g_stfa_m.stfamodid)
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      CALL astm401_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE stfa_t SET (stfamodid,stfamoddt) = (g_stfa_m.stfamodid,g_stfa_m.stfamoddt)
          WHERE stfaent = g_enterprise AND stfa001 = g_stfa001_t
 
      END IF
    
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_stfa_m.* = g_stfa_m_t.*
         CALL astm401_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_stfa_m.stfa001 != g_stfa001_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE stfb_t SET stfb001 = g_stfa_m.stfa001
 
          WHERE stfbent = g_enterprise AND stfb001 = g_stfa001_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfb_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfb_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         
         UPDATE stfc_t
            SET stfc001 = g_stfa_m.stfa001
 
          WHERE stfcent = g_enterprise AND
                stfc001 = g_stfa001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfc_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfc_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update3" mark="Y"/>}
         #end add-point
         
         UPDATE stfe_t
            SET stfe001 = g_stfa_m.stfa001
 
          WHERE stfeent = g_enterprise AND
                stfe001 = g_stfa001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update3"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfe_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfe_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update3"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update4" mark="Y"/>}
         #end add-point
         
         UPDATE stfg_t
            SET stfg001 = g_stfa_m.stfa001
 
          WHERE stfgent = g_enterprise AND
                stfg001 = g_stfa001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update4"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfg_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfg_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update4"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update5" mark="Y"/>}
         #end add-point
         
         UPDATE stfh_t
            SET stfh001 = g_stfa_m.stfa001
 
          WHERE stfhent = g_enterprise AND
                stfh001 = g_stfa001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update5"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfh_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfh_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update5"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update6" mark="Y"/>}
         #end add-point
         
         UPDATE stfi_t
            SET stfi001 = g_stfa_m.stfa001
 
          WHERE stfient = g_enterprise AND
                stfi001 = g_stfa001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update6"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfi_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfi_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update6"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update7" mark="Y"/>}
         #end add-point
         
         UPDATE stfj_t
            SET stfj001 = g_stfa_m.stfa001
 
          WHERE stfjent = g_enterprise AND
                stfj001 = g_stfa001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update7"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfj_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfj_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update7"/>}
         #end add-point
 
 
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update8" mark="Y"/>}
         #end add-point
         UPDATE stfd_t
            SET stfd001 = g_stfa_m.stfa001
 
          WHERE stfdent = g_enterprise AND
                stfd001 = g_stfa001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update8"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfd_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfd_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update8"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update9" mark="Y"/>}
         #end add-point
         UPDATE stff_t
            SET stff001 = g_stfa_m.stfa001
 
          WHERE stffent = g_enterprise AND
                stff001 = g_stfa001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update9"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stff_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stff_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update9"/>}
         #end add-point
 
 
         
         #UPDATE 多語言table key值
         
         
         
         
         
         
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL astm401_set_act_visible()   
   CALL astm401_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " stfaent = '" ||g_enterprise|| "' AND",
                      " stfa001 = '", g_stfa_m.stfa001, "' "
 
   #填到對應位置
   CALL astm401_browser_fill("")
 
   CLOSE astm401_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL astm401_msgcentre_notify('')
 
END FUNCTION   
]]>
  </section>
  <section id="astm401.msgcentre_notify" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a66 樣板自動產生(Version:2)
PRIVATE FUNCTION astm401_msgcentre_notify(lc_state)
   DEFINE lc_state LIKE type_t.chr5
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define" edit="s"/>}
   #end add-point
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define_customerization" edit="c"/>}
   #end add-point   
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   IF g_action_choice = "statechange" THEN
      LET g_msgparam.state = g_action_choice,":",lc_state
   ELSE
      LET g_msgparam.state = g_action_choice
   END IF
 
   #PK資料填寫
   CALL astm401_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_stfa_m)
 
   #add-point:msgcentre其他通知
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
]]>
  </section>
  <section id="astm401.other_dialog" ver="1" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="astm401.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="astm401.query" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION astm401_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point   
   #add-point:query段define(客製用)
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_stfb_d.clear()
   CALL g_stfb2_d.clear()
   CALL g_stfb3_d.clear()
   CALL g_stfb4_d.clear()
   CALL g_stfb5_d.clear()
   CALL g_stfb6_d.clear()
   CALL g_stfb7_d.clear()
   CALL g_stfb8_d.clear()
   CALL g_stfb9_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL astm401_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL astm401_browser_fill("")
      CALL astm401_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL astm401_filter_show('stfa001')
   CALL astm401_filter_show('stfa002')
   CALL astm401_filter_show('stfa003')
   CALL astm401_filter_show('stfa004')
   CALL astm401_filter_show('stfa005')
   CALL astm401_filter_show('stfa006')
   CALL astm401_filter_show('stfa007')
   CALL astm401_filter_show('stfa008')
   CALL astm401_filter_show('stfa009')
   CALL astm401_filter_show('stfa010')
   CALL astm401_filter_show('stfa011')
   CALL astm401_filter_show('stfa012')
   CALL astm401_filter_show('stfa013')
   CALL astm401_filter_show('stfa014')
   CALL astm401_filter_show('stfa015')
   CALL astm401_filter_show('stfa016')
   CALL astm401_filter_show('stfa017')
   CALL astm401_filter_show('stfa018')
   CALL astm401_filter_show('stfa019')
   CALL astm401_filter_show('stfa020')
   CALL astm401_filter_show('stfa021')
   CALL astm401_filter_show('stfa022')
   CALL astm401_filter_show('stfa023')
   CALL astm401_filter_show('stfa024')
   CALL astm401_filter_show('stfa025')
   CALL astm401_filter_show('stfa026')
   CALL astm401_filter_show('stfa027')
   CALL astm401_filter_show('stfa028')
   CALL astm401_filter_show('stfa029')
   CALL astm401_filter_show('stfa030')
   CALL astm401_filter_show('stfa031')
   CALL astm401_filter_show('stfa032')
   CALL astm401_filter_show('stfa033')
   CALL astm401_filter_show('stfa034')
   CALL astm401_filter_show('stfa035')
   CALL astm401_filter_show('stfa036')
   CALL astm401_filter_show('stfa037')
   CALL astm401_filter_show('stfa038')
   CALL astm401_filter_show('stfa039')
   CALL astm401_filter_show('stfa040')
   CALL astm401_filter_show('stfa042')
   CALL astm401_filter_show('stfa044')
   CALL astm401_filter_show('stfa045')
   CALL astm401_filter_show('stfa046')
   CALL astm401_filter_show('stfa047')
   CALL astm401_filter_show('stfa048')
   CALL astm401_filter_show('stfa049')
   CALL astm401_filter_show('stfasite')
   CALL astm401_filter_show('stfaunit')
   CALL astm401_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL astm401_fetch("F") 
      #顯示單身筆數
      CALL astm401_idx_chk()
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="astm401.reproduce" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION astm401_reproduce()
   DEFINE l_newno     LIKE stfa_t.stfa001 
   DEFINE l_oldno     LIKE stfa_t.stfa001 
 
   DEFINE l_master    RECORD LIKE stfa_t.*
   DEFINE l_detail    RECORD LIKE stfb_t.*
   DEFINE l_detail2    RECORD LIKE stfc_t.*
 
   DEFINE l_detail3    RECORD LIKE stfe_t.*
 
   DEFINE l_detail4    RECORD LIKE stfg_t.*
 
   DEFINE l_detail5    RECORD LIKE stfh_t.*
 
   DEFINE l_detail6    RECORD LIKE stfi_t.*
 
   DEFINE l_detail7    RECORD LIKE stfj_t.*
 
 
   DEFINE l_detail8    RECORD LIKE stfd_t.*
 
   DEFINE l_detail9    RECORD LIKE stff_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define
   {<point name="reproduce.define" edit="s"/>}
   #end add-point   
   #add-point:reproduce段define(客製用)
   {<point name="reproduce.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_stfa_m.stfa001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_stfa001_t = g_stfa_m.stfa001
 
    
   LET g_stfa_m.stfa001 = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_stfa_m.stfaownid = g_user
      LET g_stfa_m.stfaowndp = g_dept
      LET g_stfa_m.stfacrtid = g_user
      LET g_stfa_m.stfacrtdp = g_dept 
      LET g_stfa_m.stfacrtdt = cl_get_current()
      LET g_stfa_m.stfamodid = g_user
      LET g_stfa_m.stfamoddt = cl_get_current()
      LET g_stfa_m.stfastus = 'N'
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_stfa_m.stfastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         
      END CASE
 
 
   
   #清空key欄位的desc
   
   
   CALL astm401_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_stfa_m.* TO NULL
      INITIALIZE g_stfb_d TO NULL
      INITIALIZE g_stfb2_d TO NULL
      INITIALIZE g_stfb3_d TO NULL
      INITIALIZE g_stfb4_d TO NULL
      INITIALIZE g_stfb5_d TO NULL
      INITIALIZE g_stfb6_d TO NULL
      INITIALIZE g_stfb7_d TO NULL
      INITIALIZE g_stfb8_d TO NULL
      INITIALIZE g_stfb9_d TO NULL
 
      #add-point:複製取消後
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL astm401_show()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL astm401_set_act_visible()   
   CALL astm401_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_stfa001_t = g_stfa_m.stfa001
 
   
   #組合新增資料的條件
   LET g_add_browse = " stfaent = '" ||g_enterprise|| "' AND",
                      " stfa001 = '", g_stfa_m.stfa001, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL astm401_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL astm401_idx_chk()
   
   #功能已完成,通報訊息中心
   CALL astm401_msgcentre_notify('')
 
END FUNCTION
]]>
  </section>
  <section id="astm401.set_act_no_visible" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限關閉
PRIVATE FUNCTION astm401_set_act_no_visible()
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible段define(客製用)
   {<point name="set_act_no_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible段
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="astm401.set_act_no_visible_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限關閉
PRIVATE FUNCTION astm401_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define(客製用)
   {<point name="set_act_no_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="astm401.set_act_visible" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限開啟
PRIVATE FUNCTION astm401_set_act_visible()
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible段define(客製用)
   {<point name="set_act_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible段
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="astm401.set_act_visible_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限開啟
PRIVATE FUNCTION astm401_set_act_visible_b()
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible_b段define(客製用)
   {<point name="set_act_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible_b段
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="astm401.set_entry" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION astm401_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define" edit="s"/>}
   #end add-point       
   #add-point:set_entry段define(客製用)
   {<point name="set_entry.define_customerization" edit="c"/>}
   #end add-point       
   
   CALL cl_set_comp_entry("",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("stfa001",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="astm401.set_entry_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION astm401_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define" edit="s"/>}
   #end add-point     
   #add-point:set_entry_b段define(客製用)
   {<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point     
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="astm401.set_no_entry" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION astm401_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define" edit="s"/>}
   #end add-point     
   #add-point:set_no_entry段define(客製用)
   {<point name="set_no_entry.define_customerization" edit="c"/>}
   #end add-point     
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("stfa001",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("",FALSE)
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="astm401.set_no_entry_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION astm401_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point    
   #add-point:set_no_entry_b段define(客製用)
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point    
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="astm401.set_pk_array" ver="1" status="" src="s" readonly="">
    <![CDATA[   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION astm401_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_stfa_m.stfa001
   LET g_pk_array[1].column = 'stfa001'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="astm401.show" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION astm401_show()
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define
   {<point name="show.define" edit="s"/>}
   #end add-point  
   #add-point:show段define(客製用)
   {<point name="show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL astm401_b_fill() #單身填充
      CALL astm401_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:3)
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:2)
   CALL astm401_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_stfa_m_mask_o.* =  g_stfa_m.*
   CALL astm401_stfa_t_mask()
   LET g_stfa_m_mask_n.* =  g_stfa_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_stfa_m.stfaunit,g_stfa_m.stfaunit_desc,g_stfa_m.stfasite,g_stfa_m.stfasite_desc, 
       g_stfa_m.stfa001,g_stfa_m.stfa002,g_stfa_m.stfa003,g_stfa_m.stfa004,g_stfa_m.stfa009,g_stfa_m.stfastus, 
       g_stfa_m.stfa005,g_stfa_m.stfal003,g_stfa_m.stfal004,g_stfa_m.stfa006,g_stfa_m.stfa006_desc,g_stfa_m.stfa007, 
       g_stfa_m.stfa008,g_stfa_m.stfa047,g_stfa_m.stfa047_desc,g_stfa_m.stfa048,g_stfa_m.stfa048_desc, 
       g_stfa_m.stfa044,g_stfa_m.stfa044_desc,g_stfa_m.stfa010,g_stfa_m.stfa010_desc,g_stfa_m.stfa011, 
       g_stfa_m.stfa011_desc,g_stfa_m.stfa012,g_stfa_m.stfa012_desc,g_stfa_m.stfa013,g_stfa_m.stfa013_desc, 
       g_stfa_m.stfa014,g_stfa_m.stfa014_desc,g_stfa_m.stfa015,g_stfa_m.stfa015_desc,g_stfa_m.stfa016, 
       g_stfa_m.stfa045,g_stfa_m.stfa045_desc,g_stfa_m.stfa046,g_stfa_m.stfa029,g_stfa_m.stfa030,g_stfa_m.stfa032, 
       g_stfa_m.stfa032_desc,g_stfa_m.stfa033,g_stfa_m.stfa033_desc,g_stfa_m.stfa034,g_stfa_m.stfa034_desc, 
       g_stfa_m.stfa035,g_stfa_m.stfa035_desc,g_stfa_m.stfa036,g_stfa_m.stfa036_desc,g_stfa_m.stfa037, 
       g_stfa_m.stfa037_desc,g_stfa_m.stfa038,g_stfa_m.stfa038_desc,g_stfa_m.stfa039,g_stfa_m.stfa040, 
       g_stfa_m.stfa028,g_stfa_m.next_b,g_stfa_m.stfa017,g_stfa_m.stfa021,g_stfa_m.stfa024,g_stfa_m.stfa018, 
       g_stfa_m.stfa049,g_stfa_m.stfa025,g_stfa_m.stfa019,g_stfa_m.stfa022,g_stfa_m.stfa026,g_stfa_m.stfa020, 
       g_stfa_m.stfa023,g_stfa_m.stfa027,g_stfa_m.stfa031,g_stfa_m.stfa042,g_stfa_m.stfaownid,g_stfa_m.stfaownid_desc, 
       g_stfa_m.stfaowndp,g_stfa_m.stfaowndp_desc,g_stfa_m.stfacrtid,g_stfa_m.stfacrtid_desc,g_stfa_m.stfacrtdp, 
       g_stfa_m.stfacrtdp_desc,g_stfa_m.stfacrtdt,g_stfa_m.stfamodid,g_stfa_m.stfamodid_desc,g_stfa_m.stfamoddt, 
       g_stfa_m.stfacnfid,g_stfa_m.stfacnfid_desc,g_stfa_m.stfacnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_stfa_m.stfastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_stfb_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_stfb2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_stfb3_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body3.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_stfb4_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body4.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_stfb5_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body5.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_stfb6_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body6.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_stfb7_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body7.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_stfb8_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body8.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_stfb9_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body9.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL astm401_detail_show()
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="astm401.signature" ver="1" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="astm401.state_change" ver="5" status="" src="s" readonly="">
    <![CDATA[   #應用 a09 樣板自動產生(Version:11)
#+ 確認碼變更 
PRIVATE FUNCTION astm401_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define" edit="s"/>}
   #end add-point  
   #add-point:statechange段define(客製用)
   {<point name="statechange.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_stfa_m.stfa001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN astm401_cl USING g_enterprise,g_stfa_m.stfa001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN astm401_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE astm401_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE astm401_master_referesh USING g_stfa_m.stfa001 INTO g_stfa_m.stfaunit,g_stfa_m.stfasite,g_stfa_m.stfa001, 
       g_stfa_m.stfa002,g_stfa_m.stfa003,g_stfa_m.stfa004,g_stfa_m.stfa009,g_stfa_m.stfastus,g_stfa_m.stfa005, 
       g_stfa_m.stfa006,g_stfa_m.stfa007,g_stfa_m.stfa008,g_stfa_m.stfa047,g_stfa_m.stfa048,g_stfa_m.stfa044, 
       g_stfa_m.stfa010,g_stfa_m.stfa011,g_stfa_m.stfa012,g_stfa_m.stfa013,g_stfa_m.stfa014,g_stfa_m.stfa015, 
       g_stfa_m.stfa016,g_stfa_m.stfa045,g_stfa_m.stfa046,g_stfa_m.stfa029,g_stfa_m.stfa030,g_stfa_m.stfa032, 
       g_stfa_m.stfa033,g_stfa_m.stfa034,g_stfa_m.stfa035,g_stfa_m.stfa036,g_stfa_m.stfa037,g_stfa_m.stfa038, 
       g_stfa_m.stfa039,g_stfa_m.stfa040,g_stfa_m.stfa028,g_stfa_m.stfa017,g_stfa_m.stfa021,g_stfa_m.stfa024, 
       g_stfa_m.stfa018,g_stfa_m.stfa049,g_stfa_m.stfa025,g_stfa_m.stfa019,g_stfa_m.stfa022,g_stfa_m.stfa026, 
       g_stfa_m.stfa020,g_stfa_m.stfa023,g_stfa_m.stfa027,g_stfa_m.stfa031,g_stfa_m.stfa042,g_stfa_m.stfaownid, 
       g_stfa_m.stfaowndp,g_stfa_m.stfacrtid,g_stfa_m.stfacrtdp,g_stfa_m.stfacrtdt,g_stfa_m.stfamodid, 
       g_stfa_m.stfamoddt,g_stfa_m.stfacnfid,g_stfa_m.stfacnfdt,g_stfa_m.stfaunit_desc,g_stfa_m.stfasite_desc, 
       g_stfa_m.stfa006_desc,g_stfa_m.stfa047_desc,g_stfa_m.stfa048_desc,g_stfa_m.stfa044_desc,g_stfa_m.stfa010_desc, 
       g_stfa_m.stfa011_desc,g_stfa_m.stfa012_desc,g_stfa_m.stfa013_desc,g_stfa_m.stfa014_desc,g_stfa_m.stfa015_desc, 
       g_stfa_m.stfa045_desc,g_stfa_m.stfa032_desc,g_stfa_m.stfa035_desc,g_stfa_m.stfa036_desc,g_stfa_m.stfa037_desc, 
       g_stfa_m.stfa038_desc,g_stfa_m.stfaownid_desc,g_stfa_m.stfaowndp_desc,g_stfa_m.stfacrtid_desc, 
       g_stfa_m.stfacrtdp_desc,g_stfa_m.stfamodid_desc,g_stfa_m.stfacnfid_desc
 
   #檢查是否允許此動作
   IF NOT astm401_action_chk() THEN
      CLOSE astm401_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_stfa_m.stfaunit,g_stfa_m.stfaunit_desc,g_stfa_m.stfasite,g_stfa_m.stfasite_desc, 
       g_stfa_m.stfa001,g_stfa_m.stfa002,g_stfa_m.stfa003,g_stfa_m.stfa004,g_stfa_m.stfa009,g_stfa_m.stfastus, 
       g_stfa_m.stfa005,g_stfa_m.stfal003,g_stfa_m.stfal004,g_stfa_m.stfa006,g_stfa_m.stfa006_desc,g_stfa_m.stfa007, 
       g_stfa_m.stfa008,g_stfa_m.stfa047,g_stfa_m.stfa047_desc,g_stfa_m.stfa048,g_stfa_m.stfa048_desc, 
       g_stfa_m.stfa044,g_stfa_m.stfa044_desc,g_stfa_m.stfa010,g_stfa_m.stfa010_desc,g_stfa_m.stfa011, 
       g_stfa_m.stfa011_desc,g_stfa_m.stfa012,g_stfa_m.stfa012_desc,g_stfa_m.stfa013,g_stfa_m.stfa013_desc, 
       g_stfa_m.stfa014,g_stfa_m.stfa014_desc,g_stfa_m.stfa015,g_stfa_m.stfa015_desc,g_stfa_m.stfa016, 
       g_stfa_m.stfa045,g_stfa_m.stfa045_desc,g_stfa_m.stfa046,g_stfa_m.stfa029,g_stfa_m.stfa030,g_stfa_m.stfa032, 
       g_stfa_m.stfa032_desc,g_stfa_m.stfa033,g_stfa_m.stfa033_desc,g_stfa_m.stfa034,g_stfa_m.stfa034_desc, 
       g_stfa_m.stfa035,g_stfa_m.stfa035_desc,g_stfa_m.stfa036,g_stfa_m.stfa036_desc,g_stfa_m.stfa037, 
       g_stfa_m.stfa037_desc,g_stfa_m.stfa038,g_stfa_m.stfa038_desc,g_stfa_m.stfa039,g_stfa_m.stfa040, 
       g_stfa_m.stfa028,g_stfa_m.next_b,g_stfa_m.stfa017,g_stfa_m.stfa021,g_stfa_m.stfa024,g_stfa_m.stfa018, 
       g_stfa_m.stfa049,g_stfa_m.stfa025,g_stfa_m.stfa019,g_stfa_m.stfa022,g_stfa_m.stfa026,g_stfa_m.stfa020, 
       g_stfa_m.stfa023,g_stfa_m.stfa027,g_stfa_m.stfa031,g_stfa_m.stfa042,g_stfa_m.stfaownid,g_stfa_m.stfaownid_desc, 
       g_stfa_m.stfaowndp,g_stfa_m.stfaowndp_desc,g_stfa_m.stfacrtid,g_stfa_m.stfacrtid_desc,g_stfa_m.stfacrtdp, 
       g_stfa_m.stfacrtdp_desc,g_stfa_m.stfacrtdt,g_stfa_m.stfamodid,g_stfa_m.stfamodid_desc,g_stfa_m.stfamoddt, 
       g_stfa_m.stfacnfid,g_stfa_m.stfacnfid_desc,g_stfa_m.stfacnfdt
 
   CASE g_stfa_m.stfastus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
      
   END CASE
 
   #add-point:資料刷新後
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_stfa_m.stfastus
            
            WHEN "N"
               HIDE OPTION "open"
            WHEN "Y"
               HIDE OPTION "valid"
            WHEN "X"
               HIDE OPTION "void"
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      
	  
      ON ACTION open
         IF cl_auth_chk_act("open") THEN
            LET lc_state = "N"
            #add-point:action控制
            {<point name="statechange.open"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION valid
         IF cl_auth_chk_act("valid") THEN
            LET lc_state = "Y"
            #add-point:action控制
            {<point name="statechange.valid"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION void
         IF cl_auth_chk_act("void") THEN
            LET lc_state = "X"
            #add-point:action控制
            {<point name="statechange.void"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "X"
      ) OR 
      g_stfa_m.stfastus = lc_state OR cl_null(lc_state) THEN
      CLOSE astm401_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_stfa_m.stfamodid = g_user
   LET g_stfa_m.stfamoddt = cl_get_current()
   LET g_stfa_m.stfastus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE stfa_t 
      SET (stfastus,stfamodid,stfamoddt) 
        = (g_stfa_m.stfastus,g_stfa_m.stfamodid,g_stfa_m.stfamoddt)     
    WHERE stfaent = g_enterprise AND stfa001 = g_stfa_m.stfa001
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE astm401_master_referesh USING g_stfa_m.stfa001 INTO g_stfa_m.stfaunit,g_stfa_m.stfasite, 
          g_stfa_m.stfa001,g_stfa_m.stfa002,g_stfa_m.stfa003,g_stfa_m.stfa004,g_stfa_m.stfa009,g_stfa_m.stfastus, 
          g_stfa_m.stfa005,g_stfa_m.stfa006,g_stfa_m.stfa007,g_stfa_m.stfa008,g_stfa_m.stfa047,g_stfa_m.stfa048, 
          g_stfa_m.stfa044,g_stfa_m.stfa010,g_stfa_m.stfa011,g_stfa_m.stfa012,g_stfa_m.stfa013,g_stfa_m.stfa014, 
          g_stfa_m.stfa015,g_stfa_m.stfa016,g_stfa_m.stfa045,g_stfa_m.stfa046,g_stfa_m.stfa029,g_stfa_m.stfa030, 
          g_stfa_m.stfa032,g_stfa_m.stfa033,g_stfa_m.stfa034,g_stfa_m.stfa035,g_stfa_m.stfa036,g_stfa_m.stfa037, 
          g_stfa_m.stfa038,g_stfa_m.stfa039,g_stfa_m.stfa040,g_stfa_m.stfa028,g_stfa_m.stfa017,g_stfa_m.stfa021, 
          g_stfa_m.stfa024,g_stfa_m.stfa018,g_stfa_m.stfa049,g_stfa_m.stfa025,g_stfa_m.stfa019,g_stfa_m.stfa022, 
          g_stfa_m.stfa026,g_stfa_m.stfa020,g_stfa_m.stfa023,g_stfa_m.stfa027,g_stfa_m.stfa031,g_stfa_m.stfa042, 
          g_stfa_m.stfaownid,g_stfa_m.stfaowndp,g_stfa_m.stfacrtid,g_stfa_m.stfacrtdp,g_stfa_m.stfacrtdt, 
          g_stfa_m.stfamodid,g_stfa_m.stfamoddt,g_stfa_m.stfacnfid,g_stfa_m.stfacnfdt,g_stfa_m.stfaunit_desc, 
          g_stfa_m.stfasite_desc,g_stfa_m.stfa006_desc,g_stfa_m.stfa047_desc,g_stfa_m.stfa048_desc,g_stfa_m.stfa044_desc, 
          g_stfa_m.stfa010_desc,g_stfa_m.stfa011_desc,g_stfa_m.stfa012_desc,g_stfa_m.stfa013_desc,g_stfa_m.stfa014_desc, 
          g_stfa_m.stfa015_desc,g_stfa_m.stfa045_desc,g_stfa_m.stfa032_desc,g_stfa_m.stfa035_desc,g_stfa_m.stfa036_desc, 
          g_stfa_m.stfa037_desc,g_stfa_m.stfa038_desc,g_stfa_m.stfaownid_desc,g_stfa_m.stfaowndp_desc, 
          g_stfa_m.stfacrtid_desc,g_stfa_m.stfacrtdp_desc,g_stfa_m.stfamodid_desc,g_stfa_m.stfacnfid_desc 

      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_stfa_m.stfaunit,g_stfa_m.stfaunit_desc,g_stfa_m.stfasite,g_stfa_m.stfasite_desc, 
          g_stfa_m.stfa001,g_stfa_m.stfa002,g_stfa_m.stfa003,g_stfa_m.stfa004,g_stfa_m.stfa009,g_stfa_m.stfastus, 
          g_stfa_m.stfa005,g_stfa_m.stfal003,g_stfa_m.stfal004,g_stfa_m.stfa006,g_stfa_m.stfa006_desc, 
          g_stfa_m.stfa007,g_stfa_m.stfa008,g_stfa_m.stfa047,g_stfa_m.stfa047_desc,g_stfa_m.stfa048, 
          g_stfa_m.stfa048_desc,g_stfa_m.stfa044,g_stfa_m.stfa044_desc,g_stfa_m.stfa010,g_stfa_m.stfa010_desc, 
          g_stfa_m.stfa011,g_stfa_m.stfa011_desc,g_stfa_m.stfa012,g_stfa_m.stfa012_desc,g_stfa_m.stfa013, 
          g_stfa_m.stfa013_desc,g_stfa_m.stfa014,g_stfa_m.stfa014_desc,g_stfa_m.stfa015,g_stfa_m.stfa015_desc, 
          g_stfa_m.stfa016,g_stfa_m.stfa045,g_stfa_m.stfa045_desc,g_stfa_m.stfa046,g_stfa_m.stfa029, 
          g_stfa_m.stfa030,g_stfa_m.stfa032,g_stfa_m.stfa032_desc,g_stfa_m.stfa033,g_stfa_m.stfa033_desc, 
          g_stfa_m.stfa034,g_stfa_m.stfa034_desc,g_stfa_m.stfa035,g_stfa_m.stfa035_desc,g_stfa_m.stfa036, 
          g_stfa_m.stfa036_desc,g_stfa_m.stfa037,g_stfa_m.stfa037_desc,g_stfa_m.stfa038,g_stfa_m.stfa038_desc, 
          g_stfa_m.stfa039,g_stfa_m.stfa040,g_stfa_m.stfa028,g_stfa_m.next_b,g_stfa_m.stfa017,g_stfa_m.stfa021, 
          g_stfa_m.stfa024,g_stfa_m.stfa018,g_stfa_m.stfa049,g_stfa_m.stfa025,g_stfa_m.stfa019,g_stfa_m.stfa022, 
          g_stfa_m.stfa026,g_stfa_m.stfa020,g_stfa_m.stfa023,g_stfa_m.stfa027,g_stfa_m.stfa031,g_stfa_m.stfa042, 
          g_stfa_m.stfaownid,g_stfa_m.stfaownid_desc,g_stfa_m.stfaowndp,g_stfa_m.stfaowndp_desc,g_stfa_m.stfacrtid, 
          g_stfa_m.stfacrtid_desc,g_stfa_m.stfacrtdp,g_stfa_m.stfacrtdp_desc,g_stfa_m.stfacrtdt,g_stfa_m.stfamodid, 
          g_stfa_m.stfamodid_desc,g_stfa_m.stfamoddt,g_stfa_m.stfacnfid,g_stfa_m.stfacnfid_desc,g_stfa_m.stfacnfdt 

   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE astm401_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL astm401_msgcentre_notify(lc_state)
   
END FUNCTION
 
 
]]>
  </section>
  <section id="astm401.status_show" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION astm401_status_show()
   #add-point:status_show段define
   {<point name="status_show.define" edit="s"/>}
   #end add-point
   #add-point:status_show段define(客製用)
   {<point name="status_show.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:status_show段status_show
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="astm401.ui_browser_refresh" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION astm401_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define" edit="s"/>}
   #end add-point    
   #add-point:ui_browser_refresh段define(客製用)
   {<point name="ui_browser_refresh.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_stfa001 = g_stfa_m.stfa001 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="astm401.ui_detailshow" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION astm401_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_detailshow段define(客製用)
   {<point name="ui_detailshow.define_customerization" edit="c"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail5",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail6",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail7",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail8",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail9",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="astm401.ui_dialog" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION astm401_ui_dialog()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define(客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_stfa_m.* TO NULL
         CALL g_stfb_d.clear()
         CALL g_stfb2_d.clear()
         CALL g_stfb3_d.clear()
         CALL g_stfb4_d.clear()
         CALL g_stfb5_d.clear()
         CALL g_stfb6_d.clear()
         CALL g_stfb7_d.clear()
         CALL g_stfb8_d.clear()
         CALL g_stfb9_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL astm401_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL astm401_fetch('') # reload data
               LET l_ac = 1
               CALL astm401_ui_detailshow() #Setting the current row 
         
               CALL astm401_idx_chk()
               #NEXT FIELD stfbseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_stfb_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astm401_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL astm401_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_stfb2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astm401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               CALL astm401_b_fill2('8')
 
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL astm401_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_stfb3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astm401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               CALL astm401_b_fill2('9')
 
               #add-point:page3, before row動作
               {<point name="ui_dialog.body3.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               #顯示單身筆數
               CALL astm401_idx_chk()
               #add-point:page3自定義行為
               {<point name="ui_dialog.body3.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為
            {<point name="ui_dialog.body3.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_stfb4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astm401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_detail_idx = l_ac
               
               #add-point:page4, before row動作
               {<point name="ui_dialog.body4.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_current_page = 4
               #顯示單身筆數
               CALL astm401_idx_chk()
               #add-point:page4自定義行為
               {<point name="ui_dialog.body4.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_4)
            
         
            #add-point:page4自定義行為
            {<point name="ui_dialog.body4.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_stfb5_d TO s_detail5.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astm401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               LET g_detail_idx = l_ac
               
               #add-point:page5, before row動作
               {<point name="ui_dialog.body5.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               LET g_current_page = 5
               #顯示單身筆數
               CALL astm401_idx_chk()
               #add-point:page5自定義行為
               {<point name="ui_dialog.body5.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_5)
            
         
            #add-point:page5自定義行為
            {<point name="ui_dialog.body5.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_stfb6_d TO s_detail6.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astm401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail6")
               LET g_detail_idx = l_ac
               
               #add-point:page6, before row動作
               {<point name="ui_dialog.body6.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail6")
               LET g_current_page = 6
               #顯示單身筆數
               CALL astm401_idx_chk()
               #add-point:page6自定義行為
               {<point name="ui_dialog.body6.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_6)
            
         
            #add-point:page6自定義行為
            {<point name="ui_dialog.body6.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_stfb7_d TO s_detail7.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astm401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail7")
               LET g_detail_idx = l_ac
               
               #add-point:page7, before row動作
               {<point name="ui_dialog.body7.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail7")
               LET g_current_page = 7
               #顯示單身筆數
               CALL astm401_idx_chk()
               #add-point:page7自定義行為
               {<point name="ui_dialog.body7.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_7)
            
         
            #add-point:page7自定義行為
            {<point name="ui_dialog.body7.action"/>}
            #end add-point
         
         END DISPLAY
 
         
         #第二階單身段落
         DISPLAY ARRAY g_stfb8_d TO s_detail8.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astm401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail8")
               LET g_detail_idx2 = l_ac
               
               #add-point:page8, before row動作
               {<point name="ui_dialog.body8.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在下階單身則控制筆數位置
               IF g_loc = 'd' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx2)
               END IF
               LET g_loc = 'd'
               LET l_ac = DIALOG.getCurrentRow("s_detail8")
               LET g_current_page = 8
               #顯示單身筆數
               CALL astm401_idx_chk()
               #add-point:page8自定義行為
               {<point name="ui_dialog.body8.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_8)
            
         
            #add-point:page8自定義行為
            {<point name="ui_dialog.body8.action"/>}
            #end add-point
         
         END DISPLAY
         #第二階單身段落
         DISPLAY ARRAY g_stfb9_d TO s_detail9.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astm401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail9")
               LET g_detail_idx2 = l_ac
               
               #add-point:page9, before row動作
               {<point name="ui_dialog.body9.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在下階單身則控制筆數位置
               IF g_loc = 'd' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx2)
               END IF
               LET g_loc = 'd'
               LET l_ac = DIALOG.getCurrentRow("s_detail9")
               LET g_current_page = 9
               #顯示單身筆數
               CALL astm401_idx_chk()
               #add-point:page9自定義行為
               {<point name="ui_dialog.body9.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_9)
            
         
            #add-point:page9自定義行為
            {<point name="ui_dialog.body9.action"/>}
            #end add-point
         
         END DISPLAY
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL astm401_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL astm401_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL astm401_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL astm401_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL astm401_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL astm401_set_act_visible()   
            CALL astm401_set_act_no_visible()
            IF NOT (g_stfa_m.stfa001 IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " stfaent = '" ||g_enterprise|| "' AND",
                                  " stfa001 = '", g_stfa_m.stfa001, "' "
 
               #填到對應位置
               CALL astm401_browser_fill("")
            END IF
         
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
               INITIALIZE g_wc2_table4 TO NULL
 
               INITIALIZE g_wc2_table5 TO NULL
 
               INITIALIZE g_wc2_table6 TO NULL
 
               INITIALIZE g_wc2_table7 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "stfa_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "stfb_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "stfc_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stfe_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stfg_t" 
                        LET g_wc2_table4 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stfh_t" 
                        LET g_wc2_table5 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stfi_t" 
                        LET g_wc2_table6 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stfj_t" 
                        LET g_wc2_table7 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
                  OR NOT cl_null(g_wc2_table4)
 
                  OR NOT cl_null(g_wc2_table5)
 
                  OR NOT cl_null(g_wc2_table6)
 
                  OR NOT cl_null(g_wc2_table7)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
                  IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
                  END IF
 
                  IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
                  END IF
 
                  IF g_wc2_table6 <> " 1=1" AND NOT cl_null(g_wc2_table6) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
                  END IF
 
                  IF g_wc2_table7 <> " 1=1" AND NOT cl_null(g_wc2_table7) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL astm401_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
               INITIALIZE g_wc2_table4 TO NULL
 
               INITIALIZE g_wc2_table5 TO NULL
 
               INITIALIZE g_wc2_table6 TO NULL
 
               INITIALIZE g_wc2_table7 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "stfa_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "stfb_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "stfc_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stfe_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stfg_t" 
                        LET g_wc2_table4 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stfh_t" 
                        LET g_wc2_table5 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stfi_t" 
                        LET g_wc2_table6 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stfj_t" 
                        LET g_wc2_table7 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
                  OR NOT cl_null(g_wc2_table4)
 
                  OR NOT cl_null(g_wc2_table5)
 
                  OR NOT cl_null(g_wc2_table6)
 
                  OR NOT cl_null(g_wc2_table7)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
                  IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
                  END IF
 
                  IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
                  END IF
 
                  IF g_wc2_table6 <> " 1=1" AND NOT cl_null(g_wc2_table6) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
                  END IF
 
                  IF g_wc2_table7 <> " 1=1" AND NOT cl_null(g_wc2_table7) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL astm401_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL astm401_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:2)
            #過濾瀏覽頁資料
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL astm401_filter()
               EXIT DIALOG
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL astm401_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astm401_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL astm401_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astm401_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL astm401_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astm401_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL astm401_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astm401_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL astm401_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astm401_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_stfb_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_stfb2_d)
                  LET g_export_id[2]   = "s_detail2"
                  LET g_export_node[3] = base.typeInfo.create(g_stfb3_d)
                  LET g_export_id[3]   = "s_detail3"
                  LET g_export_node[4] = base.typeInfo.create(g_stfb4_d)
                  LET g_export_id[4]   = "s_detail4"
                  LET g_export_node[5] = base.typeInfo.create(g_stfb5_d)
                  LET g_export_id[5]   = "s_detail5"
                  LET g_export_node[6] = base.typeInfo.create(g_stfb6_d)
                  LET g_export_id[6]   = "s_detail6"
                  LET g_export_node[7] = base.typeInfo.create(g_stfb7_d)
                  LET g_export_id[7]   = "s_detail7"
                  LET g_export_node[8] = base.typeInfo.create(g_stfb8_d)
                  LET g_export_id[8]   = "s_detail8"
                  LET g_export_node[9] = base.typeInfo.create(g_stfb9_d)
                  LET g_export_id[9]   = "s_detail9"
 
                  #add-point:ON ACTION exporttoexcel
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD stfbseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL astm401_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
               CALL g_curr_diag.setCurrentRow("s_detail3",1)
               CALL g_curr_diag.setCurrentRow("s_detail4",1)
               CALL g_curr_diag.setCurrentRow("s_detail5",1)
               CALL g_curr_diag.setCurrentRow("s_detail6",1)
               CALL g_curr_diag.setCurrentRow("s_detail7",1)
               CALL g_curr_diag.setCurrentRow("s_detail8",1)
               CALL g_curr_diag.setCurrentRow("s_detail9",1)
 
 
 
            END IF
 
 
 
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL astm401_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL astm401_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL astm401_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="astm401.ui_headershow" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION astm401_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_headershow段define(客製用)
   {<point name="ui_headershow.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_stfa_m.stfa001 = g_browser[g_current_idx].b_stfa001   
 
   EXECUTE astm401_master_referesh USING g_stfa_m.stfa001 INTO g_stfa_m.stfaunit,g_stfa_m.stfasite,g_stfa_m.stfa001, 
       g_stfa_m.stfa002,g_stfa_m.stfa003,g_stfa_m.stfa004,g_stfa_m.stfa009,g_stfa_m.stfastus,g_stfa_m.stfa005, 
       g_stfa_m.stfa006,g_stfa_m.stfa007,g_stfa_m.stfa008,g_stfa_m.stfa047,g_stfa_m.stfa048,g_stfa_m.stfa044, 
       g_stfa_m.stfa010,g_stfa_m.stfa011,g_stfa_m.stfa012,g_stfa_m.stfa013,g_stfa_m.stfa014,g_stfa_m.stfa015, 
       g_stfa_m.stfa016,g_stfa_m.stfa045,g_stfa_m.stfa046,g_stfa_m.stfa029,g_stfa_m.stfa030,g_stfa_m.stfa032, 
       g_stfa_m.stfa033,g_stfa_m.stfa034,g_stfa_m.stfa035,g_stfa_m.stfa036,g_stfa_m.stfa037,g_stfa_m.stfa038, 
       g_stfa_m.stfa039,g_stfa_m.stfa040,g_stfa_m.stfa028,g_stfa_m.stfa017,g_stfa_m.stfa021,g_stfa_m.stfa024, 
       g_stfa_m.stfa018,g_stfa_m.stfa049,g_stfa_m.stfa025,g_stfa_m.stfa019,g_stfa_m.stfa022,g_stfa_m.stfa026, 
       g_stfa_m.stfa020,g_stfa_m.stfa023,g_stfa_m.stfa027,g_stfa_m.stfa031,g_stfa_m.stfa042,g_stfa_m.stfaownid, 
       g_stfa_m.stfaowndp,g_stfa_m.stfacrtid,g_stfa_m.stfacrtdp,g_stfa_m.stfacrtdt,g_stfa_m.stfamodid, 
       g_stfa_m.stfamoddt,g_stfa_m.stfacnfid,g_stfa_m.stfacnfdt,g_stfa_m.stfaunit_desc,g_stfa_m.stfasite_desc, 
       g_stfa_m.stfa006_desc,g_stfa_m.stfa047_desc,g_stfa_m.stfa048_desc,g_stfa_m.stfa044_desc,g_stfa_m.stfa010_desc, 
       g_stfa_m.stfa011_desc,g_stfa_m.stfa012_desc,g_stfa_m.stfa013_desc,g_stfa_m.stfa014_desc,g_stfa_m.stfa015_desc, 
       g_stfa_m.stfa045_desc,g_stfa_m.stfa032_desc,g_stfa_m.stfa035_desc,g_stfa_m.stfa036_desc,g_stfa_m.stfa037_desc, 
       g_stfa_m.stfa038_desc,g_stfa_m.stfaownid_desc,g_stfa_m.stfaowndp_desc,g_stfa_m.stfacrtid_desc, 
       g_stfa_m.stfacrtdp_desc,g_stfa_m.stfamodid_desc,g_stfa_m.stfacnfid_desc
   CALL astm401_stfa_t_mask()
   CALL astm401_show()
      
END FUNCTION
]]>
  </section>
  <section id="astm401.unlock_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION astm401_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define(客製用)
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point  
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astm401_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astm401_bcl2
   END IF
 
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astm401_bcl3
   END IF
 
   LET ls_group = "'4',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astm401_bcl4
   END IF
 
   LET ls_group = "'5',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astm401_bcl5
   END IF
 
   LET ls_group = "'6',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astm401_bcl6
   END IF
 
   LET ls_group = "'7',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astm401_bcl7
   END IF
 
 
   
   LET ls_group = "'8',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astm401_bcl8
   END IF
 
   LET ls_group = "'9',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astm401_bcl9
   END IF
 
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="astm401.update_b" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION astm401_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define" edit="s"/>}
   #end add-point   
   #add-point:update_b段define(客製用)
   {<point name="update_b.define_customerization" edit="c"/>}
   #end add-point   
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stfb_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL astm401_stfb_t_mask_restore('restore_mask_o')
               
      UPDATE stfb_t 
         SET (stfb001,
              stfbseq
              ,stfb002,stfb003,stfb004,stfb005,stfb006,stfb007,stfb008,stfb009,stfb010,stfb011,stfb012,stfb013,stfb014,stfb015,stfb016,stfb017,stfbsite,stfbunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stfb_d[g_detail_idx].stfb002,g_stfb_d[g_detail_idx].stfb003,g_stfb_d[g_detail_idx].stfb004, 
                  g_stfb_d[g_detail_idx].stfb005,g_stfb_d[g_detail_idx].stfb006,g_stfb_d[g_detail_idx].stfb007, 
                  g_stfb_d[g_detail_idx].stfb008,g_stfb_d[g_detail_idx].stfb009,g_stfb_d[g_detail_idx].stfb010, 
                  g_stfb_d[g_detail_idx].stfb011,g_stfb_d[g_detail_idx].stfb012,g_stfb_d[g_detail_idx].stfb013, 
                  g_stfb_d[g_detail_idx].stfb014,g_stfb_d[g_detail_idx].stfb015,g_stfb_d[g_detail_idx].stfb016, 
                  g_stfb_d[g_detail_idx].stfb017,g_stfb_d[g_detail_idx].stfbsite,g_stfb_d[g_detail_idx].stfbunit)  

         WHERE stfbent = g_enterprise AND stfb001 = ps_keys_bak[1] AND stfbseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfb_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfb_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astm401_stfb_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stfc_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL astm401_stfc_t_mask_restore('restore_mask_o')
               
      UPDATE stfc_t 
         SET (stfc001,
              stfcseq
              ,stfc002,stfc003,stfc024,stfc025,stfc004,stfc005,stfc006,stfc007,stfc008,stfc009,stfc010,stfc011,stfc012,stfc013,stfc014,stfc015,stfc016,stfc017,stfc018,stfc019,stfc020,stfc021,stfc022,stfc023,stfcsite,stfcunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stfb2_d[g_detail_idx].stfc002,g_stfb2_d[g_detail_idx].stfc003,g_stfb2_d[g_detail_idx].stfc024, 
                  g_stfb2_d[g_detail_idx].stfc025,g_stfb2_d[g_detail_idx].stfc004,g_stfb2_d[g_detail_idx].stfc005, 
                  g_stfb2_d[g_detail_idx].stfc006,g_stfb2_d[g_detail_idx].stfc007,g_stfb2_d[g_detail_idx].stfc008, 
                  g_stfb2_d[g_detail_idx].stfc009,g_stfb2_d[g_detail_idx].stfc010,g_stfb2_d[g_detail_idx].stfc011, 
                  g_stfb2_d[g_detail_idx].stfc012,g_stfb2_d[g_detail_idx].stfc013,g_stfb2_d[g_detail_idx].stfc014, 
                  g_stfb2_d[g_detail_idx].stfc015,g_stfb2_d[g_detail_idx].stfc016,g_stfb2_d[g_detail_idx].stfc017, 
                  g_stfb2_d[g_detail_idx].stfc018,g_stfb2_d[g_detail_idx].stfc019,g_stfb2_d[g_detail_idx].stfc020, 
                  g_stfb2_d[g_detail_idx].stfc021,g_stfb2_d[g_detail_idx].stfc022,g_stfb2_d[g_detail_idx].stfc023, 
                  g_stfb2_d[g_detail_idx].stfcsite,g_stfb2_d[g_detail_idx].stfcunit) 
         WHERE stfcent = g_enterprise AND stfc001 = ps_keys_bak[1] AND stfcseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfc_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfc_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astm401_stfc_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stfe_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update3" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL astm401_stfe_t_mask_restore('restore_mask_o')
               
      UPDATE stfe_t 
         SET (stfe001,
              stfeseq,stfe002
              ,stfe003,stfe004,stfe005,stfe006,stfe007,stfe008,stfe009,stfe010,stfe011,stfesite,stfeunit) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_stfb3_d[g_detail_idx].stfe003,g_stfb3_d[g_detail_idx].stfe004,g_stfb3_d[g_detail_idx].stfe005, 
                  g_stfb3_d[g_detail_idx].stfe006,g_stfb3_d[g_detail_idx].stfe007,g_stfb3_d[g_detail_idx].stfe008, 
                  g_stfb3_d[g_detail_idx].stfe009,g_stfb3_d[g_detail_idx].stfe010,g_stfb3_d[g_detail_idx].stfe011, 
                  g_stfb3_d[g_detail_idx].stfesite,g_stfb3_d[g_detail_idx].stfeunit) 
         WHERE stfeent = g_enterprise AND stfe001 = ps_keys_bak[1] AND stfeseq = ps_keys_bak[2] AND stfe002 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update3"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfe_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfe_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astm401_stfe_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update3"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stfg_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update4" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL astm401_stfg_t_mask_restore('restore_mask_o')
               
      UPDATE stfg_t 
         SET (stfg001,
              stfgseq
              ,stfg003,stfg002,stfg004,stfg005,stfgacti,stfgsite,stfgunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stfb4_d[g_detail_idx].stfg003,g_stfb4_d[g_detail_idx].stfg002,g_stfb4_d[g_detail_idx].stfg004, 
                  g_stfb4_d[g_detail_idx].stfg005,g_stfb4_d[g_detail_idx].stfgacti,g_stfb4_d[g_detail_idx].stfgsite, 
                  g_stfb4_d[g_detail_idx].stfgunit) 
         WHERE stfgent = g_enterprise AND stfg001 = ps_keys_bak[1] AND stfgseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update4"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfg_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfg_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astm401_stfg_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update4"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stfh_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update5" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL astm401_stfh_t_mask_restore('restore_mask_o')
               
      UPDATE stfh_t 
         SET (stfh001,
              stfhseq
              ,stfh002,stfh003,stfhacti,stfhsite,stfhunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stfb5_d[g_detail_idx].stfh002,g_stfb5_d[g_detail_idx].stfh003,g_stfb5_d[g_detail_idx].stfhacti, 
                  g_stfb5_d[g_detail_idx].stfhsite,g_stfb5_d[g_detail_idx].stfhunit) 
         WHERE stfhent = g_enterprise AND stfh001 = ps_keys_bak[1] AND stfhseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update5"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfh_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfh_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astm401_stfh_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update5"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'6',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stfi_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update6" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL astm401_stfi_t_mask_restore('restore_mask_o')
               
      UPDATE stfi_t 
         SET (stfi001,
              stfiseq
              ,stfi002,stfi003,stfi005,stfi006,stfi004,stfi007,stfi010,stfi008,stfi009,stfiacti,stfisite,stfiunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stfb6_d[g_detail_idx].stfi002,g_stfb6_d[g_detail_idx].stfi003,g_stfb6_d[g_detail_idx].stfi005, 
                  g_stfb6_d[g_detail_idx].stfi006,g_stfb6_d[g_detail_idx].stfi004,g_stfb6_d[g_detail_idx].stfi007, 
                  g_stfb6_d[g_detail_idx].stfi010,g_stfb6_d[g_detail_idx].stfi008,g_stfb6_d[g_detail_idx].stfi009, 
                  g_stfb6_d[g_detail_idx].stfiacti,g_stfb6_d[g_detail_idx].stfisite,g_stfb6_d[g_detail_idx].stfiunit)  

         WHERE stfient = g_enterprise AND stfi001 = ps_keys_bak[1] AND stfiseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update6"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfi_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfi_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astm401_stfi_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update6"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'7',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stfj_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update7" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL astm401_stfj_t_mask_restore('restore_mask_o')
               
      UPDATE stfj_t 
         SET (stfj001,
              stfjseq
              ,stfj002,stfj003,stfj004,stfj005,stfj006,stfjsite,stfjunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stfb7_d[g_detail_idx].stfj002,g_stfb7_d[g_detail_idx].stfj003,g_stfb7_d[g_detail_idx].stfj004, 
                  g_stfb7_d[g_detail_idx].stfj005,g_stfb7_d[g_detail_idx].stfj006,g_stfb7_d[g_detail_idx].stfjsite, 
                  g_stfb7_d[g_detail_idx].stfjunit) 
         WHERE stfjent = g_enterprise AND stfj001 = ps_keys_bak[1] AND stfjseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update7"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfj_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfj_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astm401_stfj_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update7"/>}
      #end add-point  
   END IF
 
 
   
   LET ls_group = "'8',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stfd_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update8" mark="Y"/>}
      #end add-point
      
      #將遮罩欄位還原
      CALL astm401_stfd_t_mask_restore('restore_mask_o')
               
      UPDATE stfd_t 
         SET (stfd001,stfdseq,
              stfdseq1
              ,stfd002,stfd003,stfd004,stfd005,stfd006,stfd007,stfd008,stfdsite,stfdunit) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_stfb8_d[g_detail_idx2].stfd002,g_stfb8_d[g_detail_idx2].stfd003,g_stfb8_d[g_detail_idx2].stfd004, 
                  g_stfb8_d[g_detail_idx2].stfd005,g_stfb8_d[g_detail_idx2].stfd006,g_stfb8_d[g_detail_idx2].stfd007, 
                  g_stfb8_d[g_detail_idx2].stfd008,g_stfb8_d[g_detail_idx2].stfdsite,g_stfb8_d[g_detail_idx2].stfdunit)  

         WHERE stfdent = g_enterprise AND stfd001 = ps_keys_bak[1] AND stfdseq = ps_keys_bak[2] AND stfdseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update8"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfd_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfd_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astm401_stfd_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update8"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'9',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stff_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update9" mark="Y"/>}
      #end add-point
      
      #將遮罩欄位還原
      CALL astm401_stff_t_mask_restore('restore_mask_o')
               
      UPDATE stff_t 
         SET (stff001,stffseq,stff002,
              stff003
              ,stff004,stff005,stff006,stff007,stff008,stff009,stffsite,stffunit) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
              ,g_stfb9_d[g_detail_idx2].stff004,g_stfb9_d[g_detail_idx2].stff005,g_stfb9_d[g_detail_idx2].stff006, 
                  g_stfb9_d[g_detail_idx2].stff007,g_stfb9_d[g_detail_idx2].stff008,g_stfb9_d[g_detail_idx2].stff009, 
                  g_stfb9_d[g_detail_idx2].stffsite,g_stfb9_d[g_detail_idx2].stffunit) 
         WHERE stffent = g_enterprise AND stff001 = ps_keys_bak[1] AND stffseq = ps_keys_bak[2] AND stff002 = ps_keys_bak[3] AND stff003 = ps_keys_bak[4]
      #add-point:update_b段修改中
      {<point name="update_b.m_update9"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stff_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stff_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astm401_stff_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update9"/>}
      #end add-point  
   END IF
 
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
