#該程式未解開Section, 採用最新樣板產出!
{<section id="astp404.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0002(2015-12-23 17:11:10), PR版次:0002(2016-10-27 21:45:32)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000036
#+ Filename...: astp404
#+ Description: 專櫃合約補差計算批次作業
#+ Creator....: 02003(2015-09-28 15:28:42)
#+ Modifier...: 02003 -SD/PR- 08742
 
{</section>}
 
{<section id="astp404.global" >}
#應用 p01 樣板自動產生(Version:18)
#add-point:填寫註解說明
#Memos
#161024-00025#9   2016/10/27  by 08742     组织开窗调整
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_schedule
#add-point:增加匯入項目

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
   DEFINE g_chk_jobid          LIKE type_t.num5
END GLOBALS
 
PRIVATE TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
   steb021              LIKE steb_t.steb021,
   sel                  LIKE type_t.chr1,
   #end add-point
        wc               STRING
                     END RECORD
 
DEFINE g_sql             STRING        #組 sql 用
DEFINE g_forupd_sql      STRING        #SELECT ... FOR UPDATE  SQL
DEFINE g_error_show      LIKE type_t.num5
DEFINE g_jobid           STRING
DEFINE g_wc              STRING
 
PRIVATE TYPE type_master RECORD
       steasite LIKE type_t.chr500, 
   mhae001 LIKE type_t.chr20, 
   pmaa001 LIKE type_t.chr10, 
   stfa054_2 LIKE type_t.chr1, 
   bdate LIKE type_t.dat, 
   stagenow LIKE type_t.chr80,
       wc               STRING
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_master type_master
 
#add-point:自定義模組變數(Module Variable)
DEFINE g_cnt        LIKE type_t.num10
DEFINE g_deteal_cnt LIKE type_t.num10
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)

#end add-point
 
#add-point:傳入參數說明

#end add-point
 
{</section>}
 
{<section id="astp404.main" >}
MAIN
   #add-point:main段define (客製用)
   
   #end add-point 
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter  
   #add-point:main段define 
   DEFINE l_success  LIKE type_t.num5 
   #end add-point 
  
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:初始化前定義
   
   #end add-point
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ast","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   
   #end add-point
 
   #背景(Y) 或半背景(T) 時不做主畫面開窗
   IF g_bgjob = "Y" OR g_bgjob = "T" THEN
      #排程參數由01開始，若不是1開始，表示有保留參數
      LET ls_js = g_argv[01]
     #CALL util.JSON.parse(ls_js,g_master)   #p類主要使用l_param,此處不解析
      #add-point:Service Call
      
      #end add-point
      CALL astp404_process(ls_js)
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_astp404 WITH FORM cl_ap_formpath("ast",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL astp404_init()
 
      #進入選單 Menu (="N")
      CALL astp404_ui_dialog()
 
      #add-point:畫面關閉前
      
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_astp404
   END IF
 
   #add-point:作業離開前
   CALL s_aooi500_drop_temp() RETURNING l_success
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
{</section>}
 
{<section id="astp404.init" >}
#+ 初始化作業
PRIVATE FUNCTION astp404_init()
 
   #add-point:init段define (客製用)
   
   #end add-point
   #add-point:ui_dialog段define 
   DEFINE l_success  LIKE type_t.num5 
   #end add-point
 
   LET g_error_show = 1
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #add-point:畫面資料初始化
   CALL cl_set_combo_scc("stfa054_2","6870")
   CALL s_aooi500_create_temp() RETURNING l_success
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="astp404.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION astp404_ui_dialog()
 
   #add-point:ui_dialog段define (客製用)
   
   #end add-point
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx   LIKE type_t.num10
   DEFINE ls_js    STRING
   DEFINE ls_wc    STRING
   DEFINE l_dialog ui.DIALOG
   DEFINE lc_param type_parameter
   #add-point:ui_dialog段define 
   DEFINE l_edate  LIKE type_t.dat
   #end add-point
   
   #add-point:ui_dialog段before dialog
   LET g_master.stfa054_2 = '1'
   LET g_master.bdate = g_today
   DISPLAY BY NAME g_master.stfa054_2,g_master.bdate
   #end add-point
 
   WHILE TRUE
      #add-point:ui_dialog段before dialog2
      
      #end add-point
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #應用 a57 樣板自動產生(Version:3)
         INPUT BY NAME g_master.stfa054_2,g_master.bdate 
            ATTRIBUTE(WITHOUT DEFAULTS)
            
            #自訂ACTION(master_input)
            
         
            BEFORE INPUT
               #add-point:資料輸入前 name="input.m.before_input"
               
               #end add-point
         
                     #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa054_2
            #add-point:BEFORE FIELD stfa054_2 name="input.b.stfa054_2"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa054_2
            
            #add-point:AFTER FIELD stfa054_2 name="input.a.stfa054_2"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa054_2
            #add-point:ON CHANGE stfa054_2 name="input.g.stfa054_2"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bdate
            #add-point:BEFORE FIELD bdate name="input.b.bdate"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bdate
            
            #add-point:AFTER FIELD bdate name="input.a.bdate"
            IF NOT cl_null(g_master.bdate) THEN 
               LET l_edate = ''
               LET l_edate = s_date_get_last_date(g_today)
               IF l_edate < g_master.bdate THEN 
                  LET g_master.bdate = ''
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'ast-00400'
                  LET g_errparam.extend = g_master.bdate
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  NEXT FIELD CURRENT 
               END IF 
            END IF 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bdate
            #add-point:ON CHANGE bdate name="input.g.bdate"
            
            #END add-point 
 
 
 
                     #Ctrlp:input.c.stfa054_2
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa054_2
            #add-point:ON ACTION controlp INFIELD stfa054_2 name="input.c.stfa054_2"
            
            #END add-point
 
 
         #Ctrlp:input.c.bdate
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bdate
            #add-point:ON ACTION controlp INFIELD bdate name="input.c.bdate"
            
            #END add-point
 
 
 
               
            AFTER INPUT
               #add-point:資料輸入後 name="input.m.after_input"
               
               #end add-point
               
            #add-point:其他管控(on row change, etc...) name="input.other"
            
            #end add-point
         END INPUT
 
 
 
         
         #應用 a58 樣板自動產生(Version:3)
         CONSTRUCT BY NAME g_master.wc ON steasite,mhae001,pmaa001
            BEFORE CONSTRUCT
               #add-point:cs段before_construct name="cs.head.before_construct"
               
               #end add-point 
         
            #公用欄位開窗相關處理
            
               
            #一般欄位開窗相關處理    
                     #Ctrlp:construct.c.steasite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD steasite
            #add-point:ON ACTION controlp INFIELD steasite name="construct.c.steasite"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            #LET g_qryparam.where = s_aooi500_q_where(g_prog,'steasite',g_stea_m.steasite,'c')    #161024-00025#11   2016/10/27  by 08742 add
            CALL q_ooef001_24()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO steasite  #顯示到畫面上
            NEXT FIELD steasite                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD steasite
            #add-point:BEFORE FIELD steasite name="construct.b.steasite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD steasite
            
            #add-point:AFTER FIELD steasite name="construct.a.steasite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.mhae001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhae001
            #add-point:ON ACTION controlp INFIELD mhae001 name="construct.c.mhae001"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.WHERE = " mhaestus = 'Y' AND mhaesite = '",g_site,"'"
            CALL q_mhae001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mhae001  #顯示到畫面上
            NEXT FIELD mhae001                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhae001
            #add-point:BEFORE FIELD mhae001 name="construct.b.mhae001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mhae001
            
            #add-point:AFTER FIELD mhae001 name="construct.a.mhae001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.pmaa001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD pmaa001
            #add-point:ON ACTION controlp INFIELD pmaa001 name="construct.c.pmaa001"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.WHERE = " pmaastus = 'Y' "
            CALL q_pmaa001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pmaa001  #顯示到畫面上
            NEXT FIELD pmaa001                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD pmaa001
            #add-point:BEFORE FIELD pmaa001 name="construct.b.pmaa001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD pmaa001
            
            #add-point:AFTER FIELD pmaa001 name="construct.a.pmaa001"
            
            #END add-point
            
 
 
 
            
            #add-point:其他管控 name="cs.other"
            
            #end add-point
            
         END CONSTRUCT
 
 
 
      
         #add-point:ui_dialog段construct
         
         #end add-point
         #add-point:ui_dialog段input
         
         #end add-point
         #add-point:ui_dialog段自定義display array
         
         #end add-point
 
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
 
         BEFORE DIALOG
            LET l_dialog = ui.DIALOG.getCurrent()
            CALL astp404_get_buffer(l_dialog)
            #add-point:ui_dialog段before dialog
            NEXT FIELD steasite
            #end add-point
 
         ON ACTION batch_execute
            LET g_action_choice = "batch_execute"
            ACCEPT DIALOG
 
         #add-point:ui_dialog段before_qbeclear
         
         #end add-point
 
         ON ACTION qbeclear         
            CLEAR FORM
            INITIALIZE g_master.* TO NULL   #畫面變數清空
            INITIALIZE lc_param.* TO NULL   #傳遞參數變數清空
            #add-point:ui_dialog段qbeclear
            
            #end add-point
 
         ON ACTION history_fill
            CALL cl_schedule_history_fill()
 
         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT DIALOG
         
         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT DIALOG
 
         #add-point:ui_dialog段action
         
         #end add-point
 
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM   
         INITIALIZE g_master.* TO NULL
         LET g_wc  = ' 1=2'
         LET g_action_choice = ""
         CALL astp404_init()
         CONTINUE WHILE
      END IF
 
      #檢查批次設定是否有錯(或未設定完成)
      IF NOT cl_schedule_exec_check() THEN
         CONTINUE WHILE
      END IF
      
      LET lc_param.wc = g_master.wc    #把畫面上的wc傳遞到參數變數
      #請在下方的add-point內進行把畫面的輸入資料(g_master)轉換到傳遞參數變數(lc_param)的動作
      #add-point:ui_dialog段exit dialog
      LET lc_param.steb021 = g_master.bdate
      LET lc_param.sel = g_master.stfa054_2
      #end add-point
 
      LET ls_js = util.JSON.stringify(lc_param)  #r類使用g_master/p類使用lc_param
 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      ELSE
         IF g_chk_jobid THEN 
            LET g_jobid = g_schedule.gzpa001
         ELSE 
            LET g_jobid = cl_schedule_get_jobid(g_prog)
         END IF 
 
         #依照指定模式執行報表列印
         CASE 
            WHEN g_schedule.gzpa003 = "0"
                 CALL astp404_process(ls_js)
 
            WHEN g_schedule.gzpa003 = "1"
                 LET ls_js = astp404_transfer_argv(ls_js)
                 CALL cl_cmdrun(ls_js)
 
            WHEN g_schedule.gzpa003 = "2"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
 
            WHEN g_schedule.gzpa003 = "3"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
         END CASE  
 
         IF g_schedule.gzpa003 = "2" OR g_schedule.gzpa003 = "3" THEN 
            CALL cl_ask_confirm3("std-00014","") #設定完成
         END IF    
         LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
 
         #add-point:ui_dialog段after schedule
         
         #end add-point
 
         #欄位初始資訊 
         CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
         LET gi_hiden_asign = FALSE 
         LET gi_hiden_exec = FALSE 
         LET gi_hiden_spec = FALSE 
         LET gi_hiden_exec_end = FALSE 
         CALL cl_schedule_hidden()
      END IF
   END WHILE
 
END FUNCTION
 
{</section>}
 
{<section id="astp404.transfer_argv" >}
#+ 轉換本地參數至cmdrun參數內,準備進入背景執行
PRIVATE FUNCTION astp404_transfer_argv(ls_js)
 
   #add-point:transfer_agrv段define (客製用)
   
   #end add-point
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog       STRING,
             actionid   STRING,
             background LIKE type_t.chr1,
             param      DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter
   #add-point:transfer_agrv段define 
   
   #end add-point
 
   LET la_cmdrun.prog = g_prog
   LET la_cmdrun.background = "Y"
   LET la_cmdrun.param[1] = ls_js
 
   #add-point:transfer.argv段程式內容
   
   #end add-point
 
   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION
 
{</section>}
 
{<section id="astp404.process" >}
#+ 資料處理   (r類使用g_master為主處理/p類使用l_param為主)
PRIVATE FUNCTION astp404_process(ls_js)
 
   #add-point:process段define (客製用)
   
   #end add-point
   DEFINE ls_js         STRING
   DEFINE lc_param      type_parameter
   DEFINE li_stus       LIKE type_t.num5
   DEFINE li_count      LIKE type_t.num10  #progressbar計量
   DEFINE ls_sql        STRING             #主SQL
   DEFINE li_p01_status LIKE type_t.num5
   #add-point:process段define 
   DEFINE l_success     LIKE type_t.num5
   DEFINE l_msg         STRING           #160225-00040#16 20160328 add by beckxie
   #end add-point
 
  #INITIALIZE lc_param TO NULL           #p類不可以清空
   CALL util.JSON.parse(ls_js,lc_param)  #r類作業被t類呼叫時使用, p類主要解開參數處
   LET li_p01_status = 1
 
  #IF lc_param.wc IS NOT NULL THEN
  #   LET g_bgjob = "T"       #特殊情況,此為t類作業鬆耦合串入報表主程式使用
  #END IF
 
   #add-point:process段前處理
   
   #end add-point
 
   #預先計算progressbar迴圈次數
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress
      CALL cl_progress_bar_no_window(2)   #160225-00040#17 20160328 add by beckxie
      #end add-point
   END IF
 
   #主SQL及相關FOREACH前置處理
#  DECLARE astp404_process_cs CURSOR FROM ls_sql
#  FOREACH astp404_process_cs INTO
   #add-point:process段process
   IF cl_null(lc_param.steb021) THEN 
      LET lc_param.steb021 = g_today-1                                  
   END IF
   #160225-00040#17 20160328 add by beckxie---S
   LET l_msg = cl_getmsg('ast-00330',g_lang)
   CALL cl_progress_no_window_ing(l_msg)
   #160225-00040#17 20160328 add by beckxie---E
   IF lc_param.sel != '3' THEN 
      IF NOT astp404_process_1(lc_param.wc,lc_param.steb021,lc_param.sel) THEN 
         LET g_errparam.code = 'adz-00218'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()
      ELSE
         LET g_errparam.code = 'ast-00405'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         LET g_errparam.replace[1] = g_cnt
         CALL cl_err()
      END IF
   ELSE
      LET l_success = TRUE
      IF NOT astp404_process_1(lc_param.wc,lc_param.steb021,'1') THEN 
         LET l_success = FALSE
      END IF
      IF NOT astp404_process_1(lc_param.wc,lc_param.steb021,'2') THEN 
         LET l_success = FALSE
      END IF
      IF NOT l_success THEN 
         LET g_errparam.code = 'adz-00218'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()
      END IF 
   END IF 
   #160225-00040#17 20160328 add by beckxie---S
   LET l_msg = cl_getmsg('std-00012',g_lang)
   CALL cl_progress_no_window_ing(l_msg)
   #160225-00040#17 20160328 add by beckxie---E
   #end add-point
#  END FOREACH
 
   IF g_bgjob = "N" THEN
      #前景作業完成處理
      #add-point:process段foreground完成處理
 
      #end add-point
      CALL cl_ask_confirm3("std-00012","")
   ELSE
      #背景作業完成處理
      #add-point:process段background完成處理
 
      #end add-point
      CALL cl_schedule_exec_call(li_p01_status)
   END IF
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL astp404_msgcentre_notify()
 
END FUNCTION
 
{</section>}
 
{<section id="astp404.get_buffer" >}
PRIVATE FUNCTION astp404_get_buffer(p_dialog)
 
   #add-point:process段define (客製用)
   
   #end add-point
   DEFINE p_dialog   ui.DIALOG
   #add-point:process段define
   
   #end add-point
 
   
   LET g_master.stfa054_2 = p_dialog.getFieldBuffer('stfa054_2')
   LET g_master.bdate = p_dialog.getFieldBuffer('bdate')
 
   CALL cl_schedule_get_buffer(p_dialog)
 
   #add-point:get_buffer段其他欄位處理
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="astp404.msgcentre_notify" >}
PRIVATE FUNCTION astp404_msgcentre_notify()
 
   #add-point:process段define (客製用)
   
   #end add-point
   DEFINE lc_state LIKE type_t.chr5
   #add-point:process段define
   
   #end add-point
 
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = "process"
 
   #add-point:msgcentre其他通知
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
{</section>}
 
{<section id="astp404.other_function" readonly="Y" >}
#add-point:自定義元件(Function)

################################################################################
# Descriptions...: 批次处理
# Memo...........:
# Usage..........: CALL astp404_process_1(p_wc,p_date,p_type)
# Input parameter: p_wc     查询条件
# Return code....: p_date   执行日期
#                : p_type   补差类型 1.费用补差  2.成本补差
# Date & Author..: 2015/08/01 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION astp404_process_1(p_wc,p_date,p_type)
DEFINE p_wc        STRING 
DEFINE p_date      LIKE steb_t.steb021
DEFINE p_type      LIKE type_t.chr1
DEFINE l_sql       STRING 
DEFINE l_steb      RECORD LIKE steb_t.*
DEFINE l_stea      RECORD LIKE stea_t.*
DEFINE l_stec      RECORD LIKE stec_t.*
DEFINE l_stba      RECORD LIKE stba_t.*
DEFINE l_stbb      RECORD LIKE stbb_t.*
DEFINE l_bdate     LIKE type_t.dat
DEFINE l_edate     LIKE type_t.dat
DEFINE l_bdate_t   LIKE type_t.dat
DEFINE l_edate_t   LIKE type_t.dat
DEFINE l_sys       LIKE type_t.num5
DEFINE l_year      LIKE type_t.num5
DEFINE l_month     LIKE type_t.num5
DEFINE l_first     LIKE type_t.dat
DEFINE l_last      LIKE type_t.dat
DEFINE l_success   LIKE type_t.num5
DEFINE r_success   LIKE type_t.num5
DEFINE r_doctype   LIKE rtai_t.rtai004
DEFINE r_nextd     LIKE type_t.dat
DEFINE r_begin     LIKE type_t.dat
DEFINE r_end       LIKE type_t.dat
DEFINE l_stab008   LIKE stab_t.stab008
DEFINE l_stab009   LIKE stab_t.stab009
DEFINE l_stab010   LIKE stab_t.stab010
DEFINE l_stab013   LIKE stab_t.stab013
DEFINE l_stab008_2 LIKE stab_t.stab008
DEFINE l_stab009_2 LIKE stab_t.stab009
DEFINE l_stab010_2 LIKE stab_t.stab010
DEFINE l_stab013_2 LIKE stab_t.stab013
DEFINE l_stbb009   LIKE stbb_t.stbb009
DEFINE l_stbb009_sum    LIKE stbb_t.stbb009
DEFINE l_stbb009_t LIKE stbb_t.stbb009
DEFINE l_stbb009_2 LIKE stbb_t.stbb009
DEFINE l_stae005   LIKE stae_t.stae005
DEFINE l_nextd     LIKE type_t.dat
DEFINE l_begin     LIKE type_t.dat
DEFINE l_end       LIKE type_t.dat
DEFINE l_sum       LIKE stbb_t.stbb009
DEFINE l_acount_t  LIKE stbb_t.stbb009
DEFINE l_exit      LIKE type_t.chr1
DEFINE l_day       LIKE type_t.num5
DEFINE l_stbastus  LIKE stba_t.stbastus
DEFINE l_stga008_old    LIKE stga_t.stga008
DEFINE l_stga009_old    LIKE stga_t.stga009
DEFINE l_stga012_old    LIKE stga_t.stga012
DEFINE l_stga012_new    LIKE stga_t.stga012
DEFINE l_stga012        LIKE stga_t.stga012
DEFINE l_where           STRING     #161024-00025#11   2016/10/27  by 08742 


   WHENEVER ERROR CONTINUE
   
   #161024-00025#11   2016/10/27  by 08742  -S
   LET l_where = ''
   CALL s_aooi500_sql_where(g_prog,'steasite') RETURNING l_where
   LET p_wc = p_wc," AND ",l_where
   #161024-00025#11   2016/10/27  by 08742   -E
   
   CALL s_transaction_begin()
   CALL cl_err_collect_init()
   LET l_bdate = ''
   LET l_edate = ''
   LET l_bdate_t = ''
   LET l_edate_t = ''
   LET l_success = TRUE
   IF cl_null(p_wc) THEN 
      LET p_wc = " 1=1"
   END IF
   INITIALIZE l_stea.* TO NULL
   #抓取需要补差的合同资料
   LET l_sql = " SELECT DISTINCT stea_t.* FROM stea_t ",
               "   LEFT JOIN pmaa_t ON pmaaent = steaent AND pmaa001 = stea010 ",
               "   LEFT JOIN mhae_t ON mhaeent = steaent AND mhae001 = stea005 AND mhaesite = steasite ",
               "  WHERE steaent = ",g_enterprise,
               "    AND stea054 = '",p_date,"'",
               "    AND stea000 = 'R' ",
               "    AND stea055 = 'Y' ",
               "    AND steastus = 'Y' ",
               "    AND ",p_wc
   PREPARE sel_stea FROM l_sql
   DECLARE sel_stea_cs CURSOR FOR sel_stea
   #费用补差明细
   LET l_sql = " SELECT * FROM steb_t ",
               "  WHERE stebent = ",g_enterprise,
               "    AND stebdocno = ? ",
               "    AND steb023 >= ? ",
               "    AND steb026 = 'Y' "
   PREPARE sel_steb FROM l_sql
   DECLARE sel_steb_cs CURSOR FOR sel_steb
   #成本补差明细
   LET l_sql = " SELECT * FROM stec_t ",
               "  WHERE stecent = ",g_enterprise,
               "    AND stecdocno = ? ",
               "    AND stecacti = 'Y' ",
               "    AND stec024 IN('1','3')"
   PREPARE sel_stec FROM l_sql
   DECLARE sel_stec_cs CURSOR FOR sel_stec
   LET g_cnt = 0
   FOREACH sel_stea_cs INTO l_stea.*
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         LET l_success = FALSE
         EXIT FOREACH
      END IF
      #费用单单头栏位赋值
      INITIALIZE l_stba.* TO NULL
      LET l_stba.stbaownid = g_user
      LET l_stba.stbaowndp = g_dept
      LET l_stba.stbacrtid = g_user
      LET l_stba.stbacrtdp = g_dept 
      LET l_stba.stbacrtdt = cl_get_current()
      LET l_stba.stbamodid = g_user
      LET l_stba.stbamoddt = cl_get_current()
      LET l_stba.stbastus = 'N'
      LET l_stba.stbaent = g_enterprise
      LET l_stba.stbasite = l_stea.steasite
      LET l_stba.stbaunit = l_stea.steasite
      LET l_stba.stbadocdt = p_date
      ##預設單據的單別
      LET r_success = ''
      LET r_doctype = ''
      CALL s_arti200_get_def_doc_type(l_stba.stbaunit,'astt510','1')
           RETURNING r_success,r_doctype
      LET l_stba.stbadocno = r_doctype
      CALL s_aooi200_gen_docno(g_site,l_stba.stbadocno,l_stba.stbadocdt,'astt510') RETURNING r_success,l_stba.stbadocno
      IF NOT r_success THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'apm-00003'
         LET g_errparam.extend = l_stba.stbadocno
         LET g_errparam.popup = TRUE
         CALL cl_err()
         LET l_success = FALSE
         EXIT FOREACH              
      END IF 
      LET l_stba.stba001 = l_stea.stea038    #結算中心
      LET l_stba.stba002 = l_stea.stea010    #供應商編號
      LET l_stba.stba003 = l_stea.stea003    #經營方式
      LET l_stba.stba004 = l_stea.stea036    #結算方式
      LET l_stba.stba005 = l_stea.stea037    #結算類型
      LET l_stba.stba006 = '2'               #來源類型
      LET l_stba.stba007 = l_stea.stea001    #來源單號
      LET l_stba.stba008 = l_stea.stea015    #人員
      SELECT ooag003 INTO l_stba.stba009     #部門
        FROM ooag_t
       WHERE ooagent = g_enterprise
         AND ooag001 = l_stba.stba008       
      LET l_stba.stbastus = 'N'              #狀態碼
      LET l_stba.stba010 = l_stea.stea001    #合同編號
      LET l_stba.stba011 = l_stea.stea032    #幣別
      LET l_stba.stba012 = l_stea.stea034    #稅別
      LET l_stba.stba013 = l_stea.stea005    #專櫃編號
      LET l_stba.stba014 = '2'               #費用類型
      LET l_stba.stba015 = ''                #交款狀態
      LET l_stba.stba016 = ''                #交款人
      LET l_stba.stba000 = 'astt510'         #程式編號
      INSERT INTO stba_t VALUES(l_stba.*)
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = " INTO stba_t "
         LET g_errparam.popup = TRUE
         CALL cl_err()
         LET l_success = FALSE
         EXIT FOREACH   
      END IF
      LET g_cnt = g_cnt + 1
      #费用补差
      IF p_type = '1' THEN 
         INITIALIZE l_steb.* TO NULL
         LET g_deteal_cnt = 0
         FOREACH sel_steb_cs USING l_stea.steadocno,l_stea.stea049 INTO l_steb.*
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'foreach:' 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET l_success = FALSE
               EXIT FOREACH
            END IF
             
            #上次费用开始日期>续签日期
            IF l_steb.steb022 > l_stea.stea049 THEN 
               #计算补差日期范围：续签日期~上次费用截止日期
               #费用计算方式：   (上次开始日期~上次截止日期之间的费用)/N天*(截止日期-续签日期)-(续签日期~截止日期费用单费用)
               #重新计算续签日期所在月份的开始和结束日期
               CALL astp404_get_date(l_steb.steb022,l_steb.steb023,l_stea.stea049,l_steb.steb006,l_steb.steb020,l_stea.stea001)
                    RETURNING l_bdate_t,l_edate_t
               IF cl_null(l_bdate_t) OR cl_null(l_edate_t) THEN 
                  EXIT FOREACH 
               END IF 
               LET l_bdate = l_stea.stea049    #续签日期
               LET l_edate = l_edate_t         #截止日期
            ELSE
               #计算补差日期范围：续签日期~上次费用截止日期
               LET l_bdate_t = l_steb.steb022
               LET l_edate_t = l_steb.steb023
               LET l_bdate = l_stea.stea049    #续签日期
               LET l_edate = l_steb.steb023
            END IF 
            WHILE TRUE
               IF l_bdate > l_steb.steb023 OR cl_null(l_bdate) THEN 
                  EXIT WHILE 
               END IF 
               CALL cl_get_para(g_enterprise,l_stea.steasite,'S-CIR-2003') RETURNING l_sys
               #开始日期按进场日期算
               IF l_sys = '1' THEN
                  IF NOT cl_null(l_stea.stea017) THEN 
                     #费用开始日期<进场日期<费用截止日赋值。则费用开始日期 = 进场日期      
                     IF l_bdate < l_stea.stea017 AND l_stea.stea017 < l_edate THEN 
                        LET l_bdate = l_stea.stea017
                     END IF 
                  END IF 
               END IF 
               #清退日期不为空且为本月，则结束日期给清退日期
               IF NOT cl_null(l_stea.stea024) THEN 
                  IF YEAR(l_stea.stea024) = YEAR(l_edate) AND MONTH(l_stea.stea024) = MONTH(l_edate) THEN 
                     LET l_edate = l_stea.stea024
                  END IF 
               END IF 
               #费用类型为"固定"
               IF l_steb.steb005 = '2' THEN 
                  CASE l_steb.steb006
                       #年
                       WHEN '1'
                           #按自然月计费
                           IF l_steb.steb020 = 'Y' THEN 
                              LET l_year = YEAR(l_bdate)
                              #获取当前年份第一天
                              LET l_first = MDY(1,1,l_year)
                              #获取当前年份最后一天
                              LET l_last = MDY(12,31,l_year)
                              #费用 = 一年的费用/一年的天数*费用天数*供应商承担比例
                              LET l_stbb009 = l_steb.steb010/(l_last-l_first+1)*(l_edate-l_bdate+1)*(l_steb.steb012/100)
                           ELSE
                              #费用 = 一年的费用/(下次费用截止日期-下次费用开始日期)*费用天数*供应商承担比例
                              LET l_stbb009 = l_steb.steb010/(l_edate_t-l_bdate_t+1)*(l_edate-l_bdate+1)*(l_steb.steb012/100)
                           END IF 
                       #季
                       WHEN '2'
                           #按自然月计费
                           IF l_steb.steb020 = 'Y' THEN 
                              LET l_year = YEAR(l_bdate)
                              LET l_month = MONTH(l_bdate)
                              #获取当前季度第一天
                              #四个季度 1-3 4-6 7-9 10-12
                              IF l_month >= 1 AND l_month <= 3 THEN 
                                 LET l_first = MDY( 1, 1, l_year)
                                 LET l_last  = MDY( 3,31, l_year)
                              END IF 
                              IF l_month >= 4 AND l_month <= 6 THEN 
                                 LET l_first = MDY( 4, 1, l_year)
                                 LET l_last  = MDY( 6,30, l_year)
                              END IF 
                              IF l_month >= 7 AND l_month <= 9 THEN 
                                 LET l_first = MDY( 7, 1, l_year)
                                 LET l_last  = MDY( 9,30, l_year)
                              END IF 
                              IF l_month >= 10 AND l_month <= 12 THEN 
                                 LET l_first = MDY(10, 1, l_year)
                                 LET l_last  = MDY(12,31, l_year)
                              END IF 
                              #费用 = 一季度的费用/一年的天数*费用天数*供应商承担比例
                              LET l_stbb009 = l_steb.steb010/(l_last-l_first+1)*(l_edate-l_bdate+1)*(l_steb.steb012/100)
                           ELSE
                              #费用 = 一季度费用/(下次费用截止日期-下次费用开始日期)*费用天数*供应商承担比例
                              LET l_stbb009 = l_steb.steb010/(l_edate_t-l_bdate_t+1)*(l_edate-l_bdate+1)*(l_steb.steb012/100)
                           END IF 
                       #月
                       WHEN '3'
                           #按自然月计费
                           IF l_steb.steb020 = 'Y' THEN 
                              #获取当前月第一天
                              CALL s_date_get_first_date(l_bdate) RETURNING l_first
                              #获取当月最后一天
                              CALL s_date_get_last_date(l_bdate) RETURNING l_last
                              #费用 = 一月的费用/一年的天数*费用天数*供应商承担比例
                              LET l_stbb009 = l_steb.steb010/(l_last-l_first+1)*(l_edate-l_bdate+1)*(l_steb.steb012/100)
                           ELSE
                              #费用 = 一月的费用/(下次费用截止日期-下次费用开始日期)*费用天数*供应商承担比例
                              LET l_stbb009 = l_steb.steb010/(l_edate_t-l_bdate_t+1)*(l_edate-l_bdate+1)*(l_steb.steb012/100)
                           END IF 
                       #单次
                       WHEN '4'
                           LET l_stbb009 = l_steb.steb010*(l_steb.steb012/100)
                           
                       #按结算帐期
                       WHEN '5'
                           #费用 = 一结算帐期的费用/(下次费用截止日期-下次费用开始日期)*费用天数*供应商承担比例
                           LET l_stbb009 = l_steb.steb010/(l_edate_t-l_bdate_t+1)*(l_edate-l_bdate+1)*(l_steb.steb012/100)
                           
                       OTHERWISE 
                          CONTINUE FOREACH 
                  END CASE 
               #变动费用
               ELSE
                  #条件基准
                  IF NOT cl_null(l_steb.steb008) THEN 
                     #计算条件基准
                     SELECT stab008,stab009,stab010,stab013
                       INTO l_stab008_2,l_stab009_2,l_stab010_2,l_stab013_2
                       FROM stab_t
                      WHERE stabent = g_enterprise
                        AND stab001 = l_steb.steb008
                     #取原价金额
                     IF l_stab008_2 = 'Y' AND l_stab009_2 ='Y'  AND l_stab010_2 = 'Y' THEN 
                        SELECT COALESCE(SUM(debg013),0) INTO l_stbb009_2
                          FROM debg_t
                         WHERE debgent = g_enterprise
                           AND debgsite = l_stea.steasite
                           AND debg005 = l_stea.stea005
                           AND debg002 BETWEEN l_bdate AND l_edate 
                           AND debg027 != '5'     #160420-00008#1 Add By Ken 160429加上經營方式不等於租賃
                     END IF 
                     #实收金额
                     IF l_stab008_2 = 'Y' AND l_stab009_2 ='Y'  AND l_stab010_2 = 'N' THEN 
                        SELECT COALESCE(SUM(debg017),0) INTO l_stbb009_2
                          FROM debg_t
                         WHERE debgent = g_enterprise
                           AND debgsite = l_stea.steasite
                           AND debg005 = l_stea.stea005
                           AND debg002 BETWEEN l_bdate AND l_edate 
                           AND debg027 != '5'     #160420-00008#1 Add By Ken 160429加上經營方式不等於租賃
                     END IF
                     IF l_stab013_2 = 'Y' THEN 
                        SELECT COALESCE(SUM(debb030),0) INTO l_stbb009_2
                          FROM debb_t 
                         WHERE debbent = g_enterprise
                           AND debb017 = l_stea.stea005
                           AND debb002 BETWEEN l_bdate AND l_edate
                     END IF 
                     #条件基准不满足条件则更新下次计算日、下次费用开始日期，下次费用结束日期
                     IF l_stbb009_2 < l_steb.steb010 THEN 
                        #更新下次费用计算日、下次费用开始日、下次费用截止日
                        CALL s_astm301_cal_nextd(l_steb.steb006,l_steb.steb007,l_steb.steb013,l_steb.steb014,l_bdate_t,l_edate_t,l_steb.steb001,'2',l_steb.steb020,l_steb.steb003)
                             RETURNING r_nextd,l_bdate_t,l_edate_t
                        CONTINUE FOREACH 
                     END IF 
                  END IF 
                  #计算基准条件
                  SELECT stab008,stab009,stab010,stab013
                    INTO l_stab008,l_stab009,l_stab010,l_stab013
                    FROM stab_t
                   WHERE stabent = g_enterprise
                     AND stab001 = l_steb.steb009
                  #取原价金额
                  IF l_stab008 = 'Y' AND l_stab009 ='Y'  AND l_stab010 = 'Y' THEN 
                     SELECT COALESCE(SUM(debg013),0) INTO l_stbb009
                       FROM debg_t
                      WHERE debgent = g_enterprise
                        AND debgsite = l_stea.steasite
                        AND debg005 = l_stea.stea005
                        AND debg002 BETWEEN l_bdate AND l_edate 
                        AND debg027 != '5'     #160420-00008#1 Add By Ken 160429加上經營方式不等於租賃
                  END IF 
                  #实收金额
                  IF l_stab008 = 'Y' AND l_stab009 ='Y'  AND l_stab010 = 'N' THEN 
                     SELECT COALESCE(SUM(debg017),0) INTO l_stbb009
                       FROM debg_t
                      WHERE debgent = g_enterprise
                        AND debgsite = l_stea.steasite
                        AND debg005 = l_stea.stea005
                        AND debg002 BETWEEN l_bdate AND l_edate 
                        AND debg027 != '5'     #160420-00008#1 Add By Ken 160429加上經營方式不等於租賃
                  END IF 
                  IF l_stab013 = 'Y' THEN 
                     SELECT COALESCE(SUM(debb030),0) INTO l_stbb009
                       FROM debb_t 
                      WHERE debbent = g_enterprise
                        AND debb017 = l_stea.stea005
                        AND debb002 BETWEEN l_bdate AND l_edate
                  END IF 
                  IF cl_null(l_stbb009) THEN 
                     LET l_stbb009 = 0
                  END IF 
                  LET l_stbb009 = l_stbb009*(l_steb.steb011/100)*(l_steb.steb012/100)
               END IF 
               #此日期区间费用单中的费用
               SELECT SUM(stbb009) INTO l_stbb009_t
                 FROM stbb_t,stba_t
                WHERE stbbent = g_enterprise
                  AND stbbent = stbaent
                  AND stbbdocno = stbadocno
                  AND stba010 = l_stea.stea001
                  AND stbb001 = l_steb.steb002
                  AND stbb005 >= l_bdate_t
                  AND stbb006 <= l_edate_t
               IF cl_null(l_stbb009_t) THEN 
                  LET l_stbb009_t = 0
               END IF
               #续签日期-截止日期之间的费用
               LET l_stbb009_t = l_stbb009_t/(l_edate_t-l_bdate_t+1)*(l_edate-l_bdate+1)
               CALL s_curr_round(l_stba.stbasite,l_stea.stea032,l_stbb009,'2') RETURNING l_stbb009
               CALL s_curr_round(l_stba.stbasite,l_stea.stea032,l_stbb009_t,'2') RETURNING l_stbb009_t
               #补差金额                  
               IF l_stbb009 - l_stbb009_t <> 0 THEN 
                  #写入费用单---start----
                  INITIALIZE l_stbb.* TO NULL
                  LET l_stbb.stbbent = g_enterprise      #企业编号
                  LET l_stbb.stbbunit = l_stba.stbaunit  #制定组织
                  LET l_stbb.stbbsite = l_stba.stbasite  #营运组织
                  LET l_stbb.stbbdocno = l_stba.stbadocno#单据编号
                  LET l_stbb.stbb001 = l_steb.steb002    #费用编号
                  LET l_stbb.stbb002 = l_stea.stea032    #幣別
                  LET l_stbb.stbb003 = l_stea.stea034    #稅別
                  LET l_stbb.stbb004 = l_steb.steb004    #價款類別
                  LET l_stbb.stbb010 = '1'               #承擔對象
                  LET l_stbb.stbb011 = l_stea.stea051    #所屬品類
                  LET l_stbb.stbb012 = l_stea.stea044    #所屬部門
                  LET l_stbb.stbb013 = '1'               #結算對象
                  LET l_stbb.stbb015 = l_steb.steb018    #納入結算單否
                  LET l_stbb.stbb016 = l_steb.steb019    #票扣否
                  LET l_stbb.stbb017 = ''                #備註
                  #当费用核算制度为2.权责发生制 写入费用单的开始日期和截止日期，按照自然月以及天数拆分处理
                  SELECT stae005 INTO l_stae005
                    FROM stae_t 
                   WHERE staeent = g_enterprise
                     AND stae001 = l_stbb.stbb001
                  SELECT stfa050 INTO l_stbb.stbbud001
                    FROM stfa_t
                   WHERE stfaent = g_enterprise
                     AND stfa001 = l_stea.stea001
                  #根据开始日期结束日期抓取结算账期和结算日期
                  CALL s_settle_date_get_stbb019(l_stba.stba010,l_bdate_t,l_edate_t,'2') 
                  RETURNING  l_stbb.stbb018,l_stbb.stbb019  
                  
                  IF l_stae005 = '2' THEN
                     LET l_stbb009_sum = l_stbb009 - l_stbb009_t                     
                     CALL s_curr_round(l_stba.stbasite,l_stbb.stbb002,l_stbb009_sum,'2') RETURNING l_stbb009_sum
                     LET l_acount_t = l_stbb009_sum
                     #根据费用开始和截止拆分
                     LET l_begin = ''
                     LET l_end = ''
                     LET l_sum = 0
                     WHILE TRUE
                        #费用下次计算开始日-下次计算截止日
                        CALL s_astm301_cal_nextd('3',l_stec.stec014,l_bdate,l_edate,l_begin,l_end,l_stec.stec001,'2','Y',l_stec.stec010) RETURNING l_nextd,l_begin,l_end
                        IF l_end> = l_edate THEN
                           LET l_end = l_edate
                           LET l_exit = 'Y'   #退出循环标志 'Y' 退出
                        ELSE
                           LET l_exit = 'N'
                        END IF
                        LET l_day = l_end - l_begin+1
                        LET l_stbb.stbb005 = l_begin
                        LET l_stbb.stbb006 = l_end
                      
                        CALL s_asti206_get_period(l_stbb.stbb005,l_stbb.stbb006,l_stba.stba001,"astt510") 
                              RETURNING l_success,l_stbb.stbb007, 
                                        l_year,#会计期年度
                                        l_month #会计期月份
                        LET l_stbb.stbb008 = l_year                
                        LET l_stbb.stbb014 = l_month
                        IF NOT l_success THEN
                           LET l_success = FALSE
                           EXIT FOREACH
                        END IF
                        SELECT MAX(stbbseq)+1 INTO l_stbb.stbbseq FROM stbb_t
                         WHERE stbbent = g_enterprise AND stbbdocno = l_stba.stbadocno
                     
                        IF cl_null(l_stbb.stbbseq) THEN
                           LET l_stbb.stbbseq = 1
                        END IF
                        IF l_exit = 'Y' THEN
                           LET l_stbb.stbb009 = l_acount_t - l_sum
                        ELSE 
                           LET l_stbb.stbb009 = l_acount_t/(l_edate - l_bdate+1)*l_day
                           CALL s_curr_round(l_stba.stbasite,l_stbb.stbb002,l_stbb.stbb009,'2') RETURNING l_stbb.stbb009  
                           LET l_sum = l_sum+ l_stbb.stbb009
                        END IF
                        
                        INSERT INTO stbb_t VALUES(l_stbb.*)
                        IF SQLCA.sqlcode THEN
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = SQLCA.sqlcode
                           LET g_errparam.extend = " INTO stbb_t "
                           LET g_errparam.popup = TRUE
                           CALL cl_err()
                           LET l_success = FALSE
                           EXIT WHILE
                        END IF
                        LET g_deteal_cnt = g_deteal_cnt + 1
                        IF l_exit = 'Y' THEN     
                           EXIT WHILE
                        END IF
                                     
                     END WHILE
                     IF NOT l_success THEN 
                        EXIT FOREACH 
                     END IF 
                  ELSE
                     SELECT MAX(stbbseq) + 1 INTO l_stbb.stbbseq
                       FROM stbb_t 
                      WHERE stbbent = g_enterprise
                        AND stbbdocno = l_stba.stbadocno
                     IF cl_null(l_stbb.stbbseq) THEN 
                        LET l_stbb.stbbseq = 1
                     END IF 
                     LET l_stbb.stbb005 = l_bdate           #起始日期
                     LET l_stbb.stbb006 = l_edate           #截止日期
                     CALL s_asti206_get_period(l_stbb.stbb005,l_stbb.stbb006,l_stba.stba001,"astt510") 
                                    RETURNING l_success,l_stbb.stbb007, 
                                              l_year,#会计期年度
                                              l_month #会计期月份
                     LET l_stbb.stbb008 = l_year                
                     LET l_stbb.stbb014 = l_month           #財務會計期別    
                     IF NOT l_success THEN
                        LET l_success = FALSE
                        EXIT FOREACH
                     END IF
                     LET l_stbb.stbb009 = l_stbb009 - l_stbb009_t         #費用金額
                     CALL s_curr_round(l_stba.stbasite,l_stbb.stbb002,l_stbb.stbb009,'2') RETURNING l_stbb.stbb009
                     INSERT INTO stbb_t VALUES(l_stbb.*)
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = " INTO stbb_t "
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        LET l_success = FALSE
                        EXIT FOREACH   
                     END IF
                     LET g_deteal_cnt = g_deteal_cnt + 1
                  END IF 
                  #写入费用单----end-----
               END IF 
               #更新下次费用计算日、下次费用开始日、下次费用截止日
               CALL s_astm301_cal_nextd(l_steb.steb006,l_steb.steb007,l_steb.steb013,l_steb.steb014,l_bdate_t,l_edate_t,l_steb.steb001,'2',l_steb.steb020,l_steb.steb003)
                    RETURNING r_nextd,l_bdate_t,l_edate_t
               LET l_bdate = l_bdate_t
               LET l_edate = l_edate_t
            END WHILE
         END FOREACH 
         IF g_deteal_cnt = 0 THEN 
            #删除费用单单头表
            DELETE FROM stba_t WHERE stbaent = g_enterprise AND stbadocno = l_stba.stbadocno
            LET g_cnt = g_cnt - 1
         END IF 
      END IF
      #成本补差      
      IF p_type = '2' THEN 
         INITIALIZE l_stec.* TO NULL
         LET g_deteal_cnt = 0
         FOREACH sel_stec_cs USING l_stea.steadocno INTO l_stec.* 
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'foreach:' 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET l_success = FALSE
               EXIT FOREACH
            END IF
            LET l_stga012_new = 0
            LET l_stga012_old = 0
            #抓取astq501从续签日期到执行日期的原价、实收、成本金额
            SELECT SUM(stga008),SUM(stga009),SUM(stga012)
              INTO l_stga008_old,l_stga009_old,l_stga012_old
              FROM stga_t
             WHERE stgaent = g_enterprise
               AND stga001 >= l_stea.stea049
               AND stga001 < l_stea.stea054
               AND stga003 = l_stec.stec002
               AND stga004 = l_stea.stea005
            IF cl_null(l_stga008_old) THEN 
               LET l_stga008_old = 0
            END IF 
            IF cl_null(l_stga009_old) THEN 
               LET l_stga009_old = 0
            END IF 
            #计算基准条件
            SELECT stab008,stab009,stab010,stab013
              INTO l_stab008,l_stab009,l_stab010,l_stab013
              FROM stab_t
             WHERE stabent = g_enterprise
               AND stab001 = l_stec.stec016
            #取原价金额
            IF l_stab008 = 'Y' AND l_stab009 ='Y'  AND l_stab010 = 'Y' THEN 
               #根据原价算成本
               LET l_stga012_new = l_stga008_old*(1-l_stec.stec018/100)
            END IF 
            #实收金额
            IF l_stab008 = 'Y' AND l_stab009 ='Y'  AND l_stab010 = 'N' THEN 
               #根据实收金额计算成本
               LET l_stga012_new = l_stga009_old*(1-l_stec.stec018/100)
            END IF 
            #补差成本=新成本金额-旧成本金额
            LET l_stga012 = l_stga012_new - l_stga012_old
            IF l_stga012 <> 0 THEN 
               #写入费用单---start----
               INITIALIZE l_stbb.* TO NULL
               LET l_stbb.stbbent = g_enterprise      #企业编号
               LET l_stbb.stbbunit = l_stba.stbaunit  #制定组织
               LET l_stbb.stbbsite = l_stba.stbasite  #营运组织
               LET l_stbb.stbbdocno = l_stba.stbadocno#单据编号
               LET l_stbb.stbb001 = l_stec.stec009    #费用编号
               LET l_stbb.stbb002 = l_stea.stea032    #幣別
               LET l_stbb.stbb003 = l_stea.stea034    #稅別
               LET l_stbb.stbb004 = l_stec.stec011    #價款類別
               LET l_stbb.stbb010 = '1'               #承擔對象
               LET l_stbb.stbb011 = l_stea.stea051    #所屬品類
               LET l_stbb.stbb012 = l_stea.stea044    #所屬部門
               LET l_stbb.stbb013 = '1'               #結算對象
               LET l_stbb.stbb015 = l_stec.stec026    #納入結算單否
               LET l_stbb.stbb016 = l_stec.stec027    #票扣否
               LET l_stbb.stbb017 = ''                #備註
               SELECT stfa050 INTO l_stbb.stbbud001
                 FROM stfa_t
                WHERE stfaent = g_enterprise
                  AND stfa001 = l_stea.stea001
               #当费用核算制度为2.权责发生制 写入费用单的开始日期和截止日期，按照自然月以及天数拆分处理
               SELECT stae005 INTO l_stae005
                 FROM stae_t 
                WHERE staeent = g_enterprise
                  AND stae001 = l_stbb.stbb001
               
               #根据开始日期结束日期抓取结算账期和结算日期
               CALL s_settle_date_get_stbb019(l_stba.stba010,l_stea.stea049,l_stea.stea054,'2') 
                  RETURNING  l_stbb.stbb018,l_stbb.stbb019  
               LET l_bdate = l_stea.stea049
               LET l_edate = l_stea.stea054
               IF l_stae005 = '2' THEN    
                  CALL s_curr_round(l_stba.stbasite,l_stbb.stbb002,l_stga012,'2') RETURNING l_stga012
                  LET l_acount_t = l_stga012
                  #根据费用开始和截止拆分
                  LET l_begin = ''
                  LET l_end = ''
                  LET l_sum = 0
                  WHILE TRUE
                     #费用下次计算开始日-下次计算截止日
                     CALL s_astm301_cal_nextd('3',l_stec.stec014,l_bdate,l_edate,l_begin,l_end,l_stec.stec001,'2','Y',l_stec.stec010) RETURNING l_nextd,l_begin,l_end
                     IF l_end> = l_edate THEN
                        LET l_end = l_edate
                        LET l_exit = 'Y'   #退出循环标志 'Y' 退出
                     ELSE
                        LET l_exit = 'N'
                     END IF
                     LET l_day = l_end - l_begin+1
                     LET l_stbb.stbb005 = l_begin
                     LET l_stbb.stbb006 = l_end
                   
                     CALL s_asti206_get_period(l_stbb.stbb005,l_stbb.stbb006,l_stba.stba001,"astt510") 
                           RETURNING l_success,l_stbb.stbb007, 
                                     l_year,#会计期年度
                                     l_month #会计期月份
                     LET l_stbb.stbb008 = l_year                
                     LET l_stbb.stbb014 = l_month
                     IF NOT l_success THEN
                        LET l_success = FALSE
                        EXIT FOREACH
                     END IF
                     SELECT MAX(stbbseq)+1 INTO l_stbb.stbbseq FROM stbb_t
                      WHERE stbbent = g_enterprise AND stbbdocno = l_stba.stbadocno
                  
                     IF cl_null(l_stbb.stbbseq) THEN
                        LET l_stbb.stbbseq = 1
                     END IF
                     IF l_exit = 'Y' THEN
                        LET l_stbb.stbb009 = l_acount_t - l_sum
                     ELSE 
                        LET l_stbb.stbb009 = l_acount_t/(l_edate - l_bdate+1)*l_day
                        CALL s_curr_round(l_stba.stbasite,l_stbb.stbb002,l_stbb.stbb009,'2') RETURNING l_stbb.stbb009  
                        LET l_sum = l_sum+ l_stbb.stbb009
                     END IF
                     
                     INSERT INTO stbb_t VALUES(l_stbb.*)
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = " INTO stbb_t "
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        LET l_success = FALSE
                        EXIT WHILE
                     END IF
                     LET g_deteal_cnt = g_deteal_cnt + 1
                     IF l_exit = 'Y' THEN     
                        EXIT WHILE
                     END IF
                                  
                  END WHILE
                  IF NOT l_success THEN 
                     EXIT FOREACH 
                  END IF 
               ELSE
                  SELECT MAX(stbbseq) + 1 INTO l_stbb.stbbseq
                    FROM stbb_t 
                   WHERE stbbent = g_enterprise
                     AND stbbdocno = l_stba.stbadocno
                  IF cl_null(l_stbb.stbbseq) THEN 
                     LET l_stbb.stbbseq = 1
                  END IF 
                  LET l_stbb.stbb005 = l_bdate           #起始日期
                  LET l_stbb.stbb006 = l_edate           #截止日期
                  CALL s_asti206_get_period(l_stbb.stbb005,l_stbb.stbb006,l_stba.stba001,"astt510") 
                                 RETURNING l_success,l_stbb.stbb007, 
                                           l_year,#会计期年度
                                           l_month #会计期月份
                  LET l_stbb.stbb008 = l_year                
                  LET l_stbb.stbb014 = l_month           #財務會計期別    
                  IF NOT l_success THEN
                     LET l_success = FALSE
                     EXIT FOREACH
                  END IF
                  LET l_stbb.stbb009 = l_stga012         #費用金額
                  CALL s_curr_round(l_stba.stbasite,l_stbb.stbb002,l_stbb.stbb009,'2') RETURNING l_stbb.stbb009
                  INSERT INTO stbb_t VALUES(l_stbb.*)
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = " INTO stbb_t "
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET l_success = FALSE
                     EXIT FOREACH   
                  END IF
                  LET g_deteal_cnt = g_deteal_cnt + 1
               END IF 
               #写入费用单----end-----
            END IF 
         END FOREACH 
         IF g_deteal_cnt = 0 THEN 
            #删除费用单单头表
            DELETE FROM stba_t WHERE stbaent = g_enterprise AND stbadocno = l_stba.stbadocno
            LET g_cnt = g_cnt - 1
         END IF 
      END IF 
      IF NOT l_success THEN 
         EXIT FOREACH 
      END IF 
   END FOREACH 
   IF l_success THEN 
      CALL cl_err_collect_show()
      CALL s_transaction_end('Y','0')
      RETURN TRUE
   ELSE
      CALL cl_err_collect_show()
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF 
END FUNCTION

################################################################################
# Descriptions...: 推算延期日期所在开始日期、截止日期
# Memo...........:
# Usage..........: CALL astp404_get_date(p_bdate,p_edate,p_stea049,p_steb006,p_steb020,p_stfj001)
#                  RETURNING r_bdate,r_edate
# Input parameter: p_bdate        上次费用计算开始日期
#                : p_edate        上次费用计算截止日期
#                : p_stea049      续签日期
#                : p_steb006      费用周期
#                : p_steb020      自然月否
#                : p_stfj001      合同编号
# Return code....: r_bdate        费用开始日期
#                : r_edate        费用结束日期
# Date & Author..: 2016/1/6 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION astp404_get_date(p_bdate,p_edate,p_stea049,p_steb006,p_steb020,p_stfj001)
DEFINE p_bdate      LIKE type_t.dat
DEFINE p_edate      LIKE type_t.dat
DEFINE p_stea049    LIKE stea_t.stea049
DEFINE p_steb006    LIKE steb_t.steb006
DEFINE p_steb020    LIKE steb_t.steb020
DEFINE p_stfj001    LIKE stfj_t.stfj001
DEFINE r_bdate      LIKE type_t.dat
DEFINE r_edate      LIKE type_t.dat
DEFINE l_year      LIKE type_t.num5
DEFINE l_month     LIKE type_t.num5

   LET r_bdate = ''
   LET r_edate = ''
   IF p_bdate <= p_stea049 AND p_stea049 <= p_edate THEN
      LET r_bdate = p_bdate
      LET r_edate = p_edate
      RETURN r_bdate,r_edate
   END IF 
   WHILE TRUE 
      CASE p_steb006
         #年
         WHEN '1'
             #按自然月计费
             IF p_steb020 = 'Y' THEN 
                LET l_year = YEAR(p_bdate)
                #获取当前年份第一天
                LET p_bdate = MDY(1,1,l_year-1)
                #获取当前年份最后一天
                LET p_edate = MDY(12,31,l_year-1)
             ELSE
                LET p_bdate = s_date_get_date(p_bdate,-12,0)
                LET p_edate = s_date_get_date(p_edate,-12,0)
             END IF 
         #季
         WHEN '2'
             #按自然月计费
             IF p_steb020 = 'Y' THEN 
                LET l_year = YEAR(p_bdate)
                LET l_month = MONTH(p_bdate)
                #获取当前季度第一天
                #四个季度 1-3 4-6 7-9 10-12
                IF l_month >= 1 AND l_month <= 3 THEN 
                   LET p_bdate = MDY(10, 1, l_year-1)
                   LET p_edate  = MDY(12,31, l_year-1)
                END IF 
                IF l_month >= 4 AND l_month <= 6 THEN 
                   LET p_bdate = MDY( 1, 1, l_year)
                   LET p_edate  = MDY( 3,31, l_year)
                   
                END IF 
                IF l_month >= 7 AND l_month <= 9 THEN 
                   LET p_bdate = MDY( 4, 1, l_year)
                   LET p_edate  = MDY( 6,30, l_year)
                END IF 
                IF l_month >= 10 AND l_month <= 12 THEN 
                   LET p_bdate = MDY( 7, 1, l_year)
                   LET p_edate  = MDY( 9,30, l_year)
                END IF 
             ELSE
                LET p_bdate = s_date_get_date(p_bdate,-3,0)
                LET p_edate = s_date_get_date(p_edate,-3,0)
             END IF 
         #月
         WHEN '3'
             #按自然月计费
             IF p_steb020 = 'Y' THEN 
                LET p_bdate = s_date_get_date(p_bdate,-1,0)
                #获取当前月第一天
                CALL s_date_get_first_date(p_bdate) RETURNING p_bdate
                #获取当月最后一天
                CALL s_date_get_last_date(p_bdate) RETURNING p_edate
             ELSE
                LET p_bdate = s_date_get_date(p_bdate,-1,0)
                LET p_edate = s_date_get_date(p_edate,-1,0)
             END IF 
         #单次
         WHEN '4'
             IF p_bdate < p_stea049 THEN 
                LET p_bdate = p_stea049
             END IF 
             RETURN p_bdate,p_edate
             
         #按结算帐期
         WHEN '5'
             SELECT stfj002,stfj003 
               INTO p_bdate,p_edate
               FROM stfj_t
              WHERE stfjent = g_enterprise
                AND stfj001 = p_stfj001
                AND stfj002 <= p_stea049
                AND stfj003 >= p_stea049
                
         OTHERWISE 
            EXIT WHILE 
      END CASE 
      IF p_bdate <= p_stea049 AND p_stea049 <= p_edate THEN
         LET r_bdate = p_bdate
         LET r_edate = p_edate
         EXIT WHILE
      END IF 
   END WHILE 
   RETURN r_bdate,r_edate
END FUNCTION

#end add-point
 
{</section>}
 
