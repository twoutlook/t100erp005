#該程式未解開Section, 採用最新樣板產出!
{<section id="astm801.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0007(2016-08-20 16:55:28), PR版次:0007(2016-08-23 09:29:34)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000040
#+ Filename...: astm801
#+ Description: 招商租賃合約主檔作業
#+ Creator....: 06189(2016-04-12 16:39:20)
#+ Modifier...: 06189 -SD/PR- 06189
 
{</section>}
 
{<section id="astm801.global" >}
#應用 t01 樣板自動產生(Version:79)
#add-point:填寫註解說明 name="global.memo" 
#Memos   ##zhangnan add 清单里面的楼层信息等
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_stje_m        RECORD
       stjesite LIKE stje_t.stjesite, 
   stjesite_desc LIKE type_t.chr80, 
   stje004 LIKE stje_t.stje004, 
   stje001 LIKE stje_t.stje001, 
   stje002 LIKE stje_t.stje002, 
   stje003 LIKE stje_t.stje003, 
   stje003_desc LIKE type_t.chr80, 
   stje005 LIKE stje_t.stje005, 
   stje006 LIKE stje_t.stje006, 
   stjestus LIKE stje_t.stjestus, 
   stje007 LIKE stje_t.stje007, 
   stje007_desc LIKE type_t.chr80, 
   stje008 LIKE stje_t.stje008, 
   stje008_desc LIKE type_t.chr80, 
   stje010 LIKE stje_t.stje010, 
   stje009 LIKE stje_t.stje009, 
   stje011 LIKE stje_t.stje011, 
   stje012 LIKE stje_t.stje012, 
   stje013 LIKE stje_t.stje013, 
   stje014 LIKE stje_t.stje014, 
   stje015 LIKE stje_t.stje015, 
   stje016 LIKE stje_t.stje016, 
   stje017 LIKE stje_t.stje017, 
   stje017_desc LIKE type_t.chr80, 
   stje018 LIKE stje_t.stje018, 
   stje018_desc LIKE type_t.chr80, 
   stje049 LIKE stje_t.stje049, 
   stje019 LIKE stje_t.stje019, 
   stje019_desc LIKE type_t.chr80, 
   stje020 LIKE stje_t.stje020, 
   stje020_desc LIKE type_t.chr80, 
   stje021 LIKE stje_t.stje021, 
   stje021_desc LIKE type_t.chr80, 
   stje022 LIKE stje_t.stje022, 
   stje022_desc LIKE type_t.chr80, 
   stje027 LIKE stje_t.stje027, 
   stje027_desc LIKE type_t.chr80, 
   stje028 LIKE stje_t.stje028, 
   stje028_desc LIKE type_t.chr80, 
   stje029 LIKE stje_t.stje029, 
   stje029_desc LIKE type_t.chr80, 
   stje026 LIKE stje_t.stje026, 
   stje023 LIKE stje_t.stje023, 
   stje024 LIKE stje_t.stje024, 
   stje025 LIKE stje_t.stje025, 
   stje030 LIKE stje_t.stje030, 
   stje030_desc LIKE type_t.chr80, 
   stje031 LIKE stje_t.stje031, 
   stje031_desc LIKE type_t.chr80, 
   stje032 LIKE stje_t.stje032, 
   stje032_desc LIKE type_t.chr80, 
   stje033 LIKE stje_t.stje033, 
   stje034 LIKE stje_t.stje034, 
   stje034_desc LIKE type_t.chr80, 
   stje035 LIKE stje_t.stje035, 
   stje035_desc LIKE type_t.chr80, 
   stje036 LIKE stje_t.stje036, 
   stje036_desc LIKE type_t.chr80, 
   stje037 LIKE stje_t.stje037, 
   stje038 LIKE stje_t.stje038, 
   stje038_desc LIKE type_t.chr80, 
   stje039 LIKE stje_t.stje039, 
   stje039_desc LIKE type_t.chr80, 
   stje040 LIKE stje_t.stje040, 
   stje041 LIKE stje_t.stje041, 
   stje042 LIKE stje_t.stje042, 
   stje043 LIKE stje_t.stje043, 
   stje044 LIKE stje_t.stje044, 
   stje045 LIKE stje_t.stje045, 
   stje046 LIKE stje_t.stje046, 
   stje047 LIKE stje_t.stje047, 
   stje048 LIKE stje_t.stje048, 
   stje050 LIKE stje_t.stje050, 
   stje051 LIKE stje_t.stje051, 
   stje051_desc LIKE type_t.chr80, 
   stje052 LIKE stje_t.stje052, 
   stje053 LIKE stje_t.stje053, 
   stje053_desc LIKE type_t.chr80, 
   stjeownid LIKE stje_t.stjeownid, 
   stjeownid_desc LIKE type_t.chr80, 
   stjeowndp LIKE stje_t.stjeowndp, 
   stjeowndp_desc LIKE type_t.chr80, 
   stjecrtid LIKE stje_t.stjecrtid, 
   stjecrtid_desc LIKE type_t.chr80, 
   stjecrtdp LIKE stje_t.stjecrtdp, 
   stjecrtdp_desc LIKE type_t.chr80, 
   stjecrtdt LIKE stje_t.stjecrtdt, 
   stjemodid LIKE stje_t.stjemodid, 
   stjemodid_desc LIKE type_t.chr80, 
   stjemoddt LIKE stje_t.stjemoddt, 
   stjecnfid LIKE stje_t.stjecnfid, 
   stjecnfid_desc LIKE type_t.chr80, 
   stjecnfdt LIKE stje_t.stjecnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_stjf_d        RECORD
       stjfseq LIKE stjf_t.stjfseq, 
   stjf002 LIKE stjf_t.stjf002, 
   stjf003 LIKE stjf_t.stjf003, 
   stjf021 LIKE stjf_t.stjf021, 
   stjf004 LIKE stjf_t.stjf004, 
   stjf004_desc LIKE type_t.chr500, 
   stae004 LIKE type_t.chr10, 
   stjf022 LIKE stjf_t.stjf022, 
   stjf022_desc LIKE type_t.chr500, 
   stjf005 LIKE stjf_t.stjf005, 
   stjf006 LIKE stjf_t.stjf006, 
   stjf007 LIKE stjf_t.stjf007, 
   stjf008 LIKE stjf_t.stjf008, 
   stjf009 LIKE stjf_t.stjf009, 
   stjf010 LIKE stjf_t.stjf010, 
   stjf011 LIKE stjf_t.stjf011, 
   stjf018 LIKE stjf_t.stjf018, 
   stjf016 LIKE stjf_t.stjf016, 
   stjf017 LIKE stjf_t.stjf017, 
   stjf020 LIKE stjf_t.stjf020, 
   stjf023 LIKE stjf_t.stjf023, 
   stjf024 LIKE stjf_t.stjf024, 
   stjf024_desc LIKE type_t.chr500, 
   stjf025 LIKE stjf_t.stjf025, 
   stjfsite LIKE stjf_t.stjfsite, 
   stjfunit LIKE stjf_t.stjfunit
       END RECORD
PRIVATE TYPE type_g_stjf11_d RECORD
       stjnsite LIKE type_t.chr10, 
   stjnunit LIKE type_t.chr10, 
   stjnseq LIKE type_t.num10, 
   stjn002 LIKE type_t.dat, 
   stjn004 LIKE type_t.chr10, 
   stjn003 LIKE type_t.chr10, 
   stjn005 LIKE type_t.chr10, 
   stjn005_desc LIKE type_t.chr500, 
   stjn006 LIKE stjn_t.stjn006, 
   stjn007 LIKE type_t.chr20, 
   stjn008 LIKE type_t.chr10, 
   stjn009 LIKE type_t.chr10, 
   stjn010 LIKE type_t.num10
       END RECORD
PRIVATE TYPE type_g_stjf13_d RECORD
       stjosite LIKE type_t.chr10, 
   stjounit LIKE type_t.chr10, 
   stjoseq LIKE type_t.num10, 
   stjo002 LIKE type_t.dat, 
   stjo003 LIKE type_t.dat, 
   stjo004 LIKE type_t.dat, 
   stjo005 LIKE type_t.chr1, 
   stjo006 LIKE type_t.chr20, 
   stjo007 LIKE type_t.chr10
       END RECORD
PRIVATE TYPE type_g_stjf2_d RECORD
       stjhseq LIKE stjh_t.stjhseq, 
   stjh002 LIKE stjh_t.stjh002, 
   stjh002_desc LIKE type_t.chr500, 
   stae004 LIKE stae_t.stae004, 
   stjh003 LIKE stjh_t.stjh003, 
   stjh008 LIKE stjh_t.stjh008, 
   stjh004 LIKE stjh_t.stjh004, 
   stjh005 LIKE stjh_t.stjh005, 
   stjh006 LIKE stjh_t.stjh006, 
   stjh007 LIKE stjh_t.stjh007, 
   stjhsite LIKE stjh_t.stjhsite, 
   stjhunit LIKE stjh_t.stjhunit
       END RECORD
PRIVATE TYPE type_g_stjf3_d RECORD
       stjiseq LIKE stji_t.stjiseq, 
   stji002 LIKE stji_t.stji002, 
   stji002_desc LIKE type_t.chr500, 
   stae004 LIKE stae_t.stae004, 
   stji003 LIKE stji_t.stji003, 
   stji003_desc LIKE type_t.chr500, 
   stji010 LIKE stji_t.stji010, 
   stji010_desc LIKE type_t.chr500, 
   stji004 LIKE stji_t.stji004, 
   stji005 LIKE stji_t.stji005, 
   stji006 LIKE stji_t.stji006, 
   stji007 LIKE stji_t.stji007, 
   stji008 LIKE stji_t.stji008, 
   stji009 LIKE stji_t.stji009, 
   stjisite LIKE stji_t.stjisite, 
   stjiunit LIKE stji_t.stjiunit
       END RECORD
PRIVATE TYPE type_g_stjf4_d RECORD
       stjlseq LIKE stjl_t.stjlseq, 
   stjl002 LIKE stjl_t.stjl002, 
   stjl003 LIKE stjl_t.stjl003, 
   stjl003_desc LIKE type_t.chr500, 
   stjl004 LIKE stjl_t.stjl004, 
   stjl005 LIKE stjl_t.stjl005, 
   stjl006 LIKE stjl_t.stjl006, 
   stjl007 LIKE stjl_t.stjl007, 
   stjl008 LIKE stjl_t.stjl008, 
   stjlsite LIKE stjl_t.stjlsite, 
   stjlunit LIKE stjl_t.stjlunit
       END RECORD
PRIVATE TYPE type_g_stjf5_d RECORD
       stjjacti LIKE stjj_t.stjjacti, 
   stjjseq LIKE stjj_t.stjjseq, 
   stjj002 LIKE stjj_t.stjj002, 
   stjj002_desc LIKE type_t.chr500, 
   stjj003 LIKE stjj_t.stjj003, 
   stjj004 LIKE stjj_t.stjj004, 
   stjj005 LIKE stjj_t.stjj005, 
   stjj006 LIKE stjj_t.stjj006, 
   stjj006_desc LIKE type_t.chr500, 
   stjj007 LIKE stjj_t.stjj007, 
   stjj007_desc LIKE type_t.chr500, 
   stjj008 LIKE stjj_t.stjj008, 
   stjj008_desc LIKE type_t.chr500, 
   stjj009 LIKE stjj_t.stjj009, 
   stjjsite LIKE stjj_t.stjjsite, 
   stjjunit LIKE stjj_t.stjjunit
       END RECORD
PRIVATE TYPE type_g_stjf6_d RECORD
       stjkacti LIKE stjk_t.stjkacti, 
   stjkseq LIKE stjk_t.stjkseq, 
   stjk002 LIKE stjk_t.stjk002, 
   stjk002_desc LIKE type_t.chr500, 
   stjk004 LIKE stjk_t.stjk004, 
   stjk003 LIKE stjk_t.stjk003, 
   stjk003_desc LIKE type_t.chr500, 
   stjk005 LIKE stjk_t.stjk005, 
   stjksite LIKE stjk_t.stjksite, 
   stjkunit LIKE stjk_t.stjkunit
       END RECORD
PRIVATE TYPE type_g_stjf7_d RECORD
       stjmseq LIKE stjm_t.stjmseq, 
   stjm002 LIKE stjm_t.stjm002, 
   stjm003 LIKE stjm_t.stjm003, 
   stjm003_desc LIKE type_t.chr500, 
   stjm004 LIKE stjm_t.stjm004, 
   stjm005 LIKE stjm_t.stjm005, 
   stjm006 LIKE stjm_t.stjm006, 
   stjm007 LIKE stjm_t.stjm007, 
   stjm008 LIKE stjm_t.stjm008, 
   stjm009 LIKE stjm_t.stjm009, 
   stjm010 LIKE stjm_t.stjm010, 
   stjm011 LIKE stjm_t.stjm011, 
   stjm012 LIKE stjm_t.stjm012, 
   stjm013 LIKE stjm_t.stjm013, 
   stjm014 LIKE stjm_t.stjm014, 
   stjm015 LIKE stjm_t.stjm015, 
   stjm016 LIKE stjm_t.stjm016, 
   stjm018 LIKE stjm_t.stjm018, 
   stjm019 LIKE stjm_t.stjm019, 
   stjm019_desc LIKE type_t.chr500, 
   stjm017 LIKE stjm_t.stjm017, 
   stjmsite LIKE stjm_t.stjmsite, 
   stjmunit LIKE stjm_t.stjmunit
       END RECORD
PRIVATE TYPE type_g_stjf9_d RECORD
       stjgsite LIKE type_t.chr10, 
   stjgunit LIKE type_t.chr10, 
   stjgseq1 LIKE type_t.num10, 
   stjg002 LIKE type_t.num20_6, 
   stjg003 LIKE type_t.num20_6, 
   stjg004 LIKE type_t.num20_6, 
   stjg006 LIKE type_t.num20_6
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_stje001 LIKE stje_t.stje001,
      b_stje002 LIKE stje_t.stje002,
      b_stje003 LIKE stje_t.stje003,
      b_stje005 LIKE stje_t.stje005,
      b_stje007 LIKE stje_t.stje007,
   b_stje007_desc LIKE type_t.chr80,
      b_stje008 LIKE stje_t.stje008,
   b_stje008_desc LIKE type_t.chr80,
      b_stje019 LIKE stje_t.stje019,
   b_stje019_desc LIKE type_t.chr80,
      b_stje020 LIKE stje_t.stje020,
   b_stje020_desc LIKE type_t.chr80,
      b_stje021 LIKE stje_t.stje021,
   b_stje021_desc LIKE type_t.chr80,
      b_stje023 LIKE stje_t.stje023,
      b_stje024 LIKE stje_t.stje024,
      b_stje025 LIKE stje_t.stje025,
      b_stjesite LIKE stje_t.stjesite,
   b_stjesite_desc LIKE type_t.chr80,
      b_stje028 LIKE stje_t.stje028,
   b_stje028_desc LIKE type_t.chr80,
      b_stje029 LIKE stje_t.stje029,
   b_stje029_desc LIKE type_t.chr80,
      b_stje011 LIKE stje_t.stje011,
      b_stje012 LIKE stje_t.stje012,
      b_stje013 LIKE stje_t.stje013,
      b_stje030 LIKE stje_t.stje030,
   b_stje030_desc LIKE type_t.chr80,
      b_stje031 LIKE stje_t.stje031,
   b_stje031_desc LIKE type_t.chr80,
      b_stje041 LIKE stje_t.stje041,
      b_stje042 LIKE stje_t.stje042,
      b_stje043 LIKE stje_t.stje043,
      b_stje044 LIKE stje_t.stje044,
      b_stje045 LIKE stje_t.stje045,
      b_stje046 LIKE stje_t.stje046,
      b_stje047 LIKE stje_t.stje047
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
 TYPE type_g_stjf12_d        RECORD
       stjfseq_2 LIKE stjf_t.stjfseq, 
   stjf002_2 LIKE stjf_t.stjf002, 
   stjf003_2 LIKE stjf_t.stjf003, 
   stjf021_2 LIKE stjf_t.stjf021,
   stjf004_2 LIKE stjf_t.stjf004, 
   stjf004_2_desc LIKE type_t.chr500, 
   stae004_2 LIKE stae_t.stae004, 
   stjf005_2 LIKE stjf_t.stjf005, 
   stjf006_2 LIKE stjf_t.stjf006, 
   stjf007_2 LIKE stjf_t.stjf007, 
   stjf008_2 LIKE stjf_t.stjf008, 
   stjf009_2 LIKE stjf_t.stjf009, 
   stjf010_2 LIKE stjf_t.stjf010, 
   stjf012_2 LIKE stjf_t.stjf012,
   stjf019_2 LIKE stjf_t.stjf019,
   stjf013_2 LIKE stjf_t.stjf013,
   stjf014_2 LIKE stjf_t.stjf014,
   stjf015_2 LIKE stjf_t.stjf015,
   stjf016_2 LIKE stjf_t.stjf016,
   stjf020_2 LIKE stjf_t.stjf020,
   stjf023_2 LIKE stjf_t.stjf023,
   stjf024_2 LIKE stjf_t.stjf024,
   stjf024_2_desc LIKE type_t.chr500, 
   stjf025_2 LIKE stjf_t.stjf025, 
   stjfsite_2 LIKE stjf_t.stjfsite
       END RECORD
 TYPE type_g_stjf15_d RECORD
   stjgseq1_1 LIKE stjg_t.stjgseq1, 
   stjg002_1 LIKE stjg_t.stjg002, 
   stjg003_1 LIKE stjg_t.stjg003, 
   stjg005_1 LIKE stjg_t.stjg005,
   stjg007_1 LIKE stjg_t.stjg007
       END RECORD       
DEFINE g_stjf12_d          DYNAMIC ARRAY OF type_g_stjf12_d
DEFINE g_stjf12_d_t        type_g_stjf12_d
DEFINE g_stjf12_d_o        type_g_stjf12_d 
DEFINE g_stjf12_d_mask_o   DYNAMIC ARRAY OF type_g_stjf12_d #轉換遮罩前資料
DEFINE g_stjf12_d_mask_n   DYNAMIC ARRAY OF type_g_stjf12_d #轉換遮罩後資料
DEFINE g_stjf15_d          DYNAMIC ARRAY OF type_g_stjf15_d
DEFINE g_stjf15_d_t        type_g_stjf15_d
DEFINE g_stjf15_d_o        type_g_stjf15_d 
DEFINE g_stjf15_d_mask_o   DYNAMIC ARRAY OF type_g_stjf15_d #轉換遮罩前資料
DEFINE g_stjf15_d_mask_n   DYNAMIC ARRAY OF type_g_stjf15_d #轉換遮罩後資料
DEFINE g_wc2_table12          STRING
DEFINE g_wc2_table13          STRING
TYPE type_g_stjf14_d        RECORD
   stjfseq_1 LIKE stjf_t.stjfseq, 
   stjf004_1 LIKE stjf_t.stjf004,
   stjf004_1_desc LIKE type_t.chr500,
   stae004_1 LIKE stae_t.stae004,
   stae012_1 LIKE stae_t.stae012,
   stjf002_1 LIKE stjf_t.stjf002,  
   stjm007_1 LIKE stjm_t.stjm007, 
   stjm008_1 LIKE stjm_t.stjm008, 
   stjm009_1 LIKE stjm_t.stjm009, 
   stjm010_1 LIKE stjm_t.stjm010, 
   stjm011_1 LIKE stjm_t.stjm011, 
   stjm012_1 LIKE stjm_t.stjm012, 
   stjm013_1 LIKE stjm_t.stjm013, 
   stjm014_1 LIKE stjm_t.stjm014
  END RECORD    
DEFINE g_stjf14_d          DYNAMIC ARRAY OF type_g_stjf14_d
DEFINE g_site_flag         LIKE type_t.num5
#end add-point
       
#模組變數(Module Variables)
DEFINE g_stje_m          type_g_stje_m
DEFINE g_stje_m_t        type_g_stje_m
DEFINE g_stje_m_o        type_g_stje_m
DEFINE g_stje_m_mask_o   type_g_stje_m #轉換遮罩前資料
DEFINE g_stje_m_mask_n   type_g_stje_m #轉換遮罩後資料
 
   DEFINE g_stje001_t LIKE stje_t.stje001
 
 
DEFINE g_stjf_d          DYNAMIC ARRAY OF type_g_stjf_d
DEFINE g_stjf_d_t        type_g_stjf_d
DEFINE g_stjf_d_o        type_g_stjf_d
DEFINE g_stjf_d_mask_o   DYNAMIC ARRAY OF type_g_stjf_d #轉換遮罩前資料
DEFINE g_stjf_d_mask_n   DYNAMIC ARRAY OF type_g_stjf_d #轉換遮罩後資料
DEFINE g_stjf11_d          DYNAMIC ARRAY OF type_g_stjf11_d
DEFINE g_stjf11_d_t        type_g_stjf11_d
DEFINE g_stjf11_d_o        type_g_stjf11_d
DEFINE g_stjf11_d_mask_o   DYNAMIC ARRAY OF type_g_stjf11_d #轉換遮罩前資料
DEFINE g_stjf11_d_mask_n   DYNAMIC ARRAY OF type_g_stjf11_d #轉換遮罩後資料
DEFINE g_stjf13_d          DYNAMIC ARRAY OF type_g_stjf13_d
DEFINE g_stjf13_d_t        type_g_stjf13_d
DEFINE g_stjf13_d_o        type_g_stjf13_d
DEFINE g_stjf13_d_mask_o   DYNAMIC ARRAY OF type_g_stjf13_d #轉換遮罩前資料
DEFINE g_stjf13_d_mask_n   DYNAMIC ARRAY OF type_g_stjf13_d #轉換遮罩後資料
DEFINE g_stjf2_d          DYNAMIC ARRAY OF type_g_stjf2_d
DEFINE g_stjf2_d_t        type_g_stjf2_d
DEFINE g_stjf2_d_o        type_g_stjf2_d
DEFINE g_stjf2_d_mask_o   DYNAMIC ARRAY OF type_g_stjf2_d #轉換遮罩前資料
DEFINE g_stjf2_d_mask_n   DYNAMIC ARRAY OF type_g_stjf2_d #轉換遮罩後資料
DEFINE g_stjf3_d          DYNAMIC ARRAY OF type_g_stjf3_d
DEFINE g_stjf3_d_t        type_g_stjf3_d
DEFINE g_stjf3_d_o        type_g_stjf3_d
DEFINE g_stjf3_d_mask_o   DYNAMIC ARRAY OF type_g_stjf3_d #轉換遮罩前資料
DEFINE g_stjf3_d_mask_n   DYNAMIC ARRAY OF type_g_stjf3_d #轉換遮罩後資料
DEFINE g_stjf4_d          DYNAMIC ARRAY OF type_g_stjf4_d
DEFINE g_stjf4_d_t        type_g_stjf4_d
DEFINE g_stjf4_d_o        type_g_stjf4_d
DEFINE g_stjf4_d_mask_o   DYNAMIC ARRAY OF type_g_stjf4_d #轉換遮罩前資料
DEFINE g_stjf4_d_mask_n   DYNAMIC ARRAY OF type_g_stjf4_d #轉換遮罩後資料
DEFINE g_stjf5_d          DYNAMIC ARRAY OF type_g_stjf5_d
DEFINE g_stjf5_d_t        type_g_stjf5_d
DEFINE g_stjf5_d_o        type_g_stjf5_d
DEFINE g_stjf5_d_mask_o   DYNAMIC ARRAY OF type_g_stjf5_d #轉換遮罩前資料
DEFINE g_stjf5_d_mask_n   DYNAMIC ARRAY OF type_g_stjf5_d #轉換遮罩後資料
DEFINE g_stjf6_d          DYNAMIC ARRAY OF type_g_stjf6_d
DEFINE g_stjf6_d_t        type_g_stjf6_d
DEFINE g_stjf6_d_o        type_g_stjf6_d
DEFINE g_stjf6_d_mask_o   DYNAMIC ARRAY OF type_g_stjf6_d #轉換遮罩前資料
DEFINE g_stjf6_d_mask_n   DYNAMIC ARRAY OF type_g_stjf6_d #轉換遮罩後資料
DEFINE g_stjf7_d          DYNAMIC ARRAY OF type_g_stjf7_d
DEFINE g_stjf7_d_t        type_g_stjf7_d
DEFINE g_stjf7_d_o        type_g_stjf7_d
DEFINE g_stjf7_d_mask_o   DYNAMIC ARRAY OF type_g_stjf7_d #轉換遮罩前資料
DEFINE g_stjf7_d_mask_n   DYNAMIC ARRAY OF type_g_stjf7_d #轉換遮罩後資料
DEFINE g_stjf9_d          DYNAMIC ARRAY OF type_g_stjf9_d
DEFINE g_stjf9_d_t        type_g_stjf9_d
DEFINE g_stjf9_d_o        type_g_stjf9_d
DEFINE g_stjf9_d_mask_o   DYNAMIC ARRAY OF type_g_stjf9_d #轉換遮罩前資料
DEFINE g_stjf9_d_mask_n   DYNAMIC ARRAY OF type_g_stjf9_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
DEFINE g_wc2_table4   STRING
 
DEFINE g_wc2_table5   STRING
 
DEFINE g_wc2_table6   STRING
 
DEFINE g_wc2_table7   STRING
 
DEFINE g_wc2_table8   STRING
 
DEFINE g_wc2_table9   STRING
 
 
DEFINE g_wc2_table10   STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="astm801.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   DEFINE l_success LIKE type_t.num5
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ast","")
 
   #add-point:作業初始化 name="main.init"
   
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT stjesite,'',stje004,stje001,stje002,stje003,'',stje005,stje006,stjestus, 
       stje007,'',stje008,'',stje010,stje009,stje011,stje012,stje013,stje014,stje015,stje016,stje017, 
       '',stje018,'',stje049,stje019,'',stje020,'',stje021,'',stje022,'',stje027,'',stje028,'',stje029, 
       '',stje026,stje023,stje024,stje025,stje030,'',stje031,'',stje032,'',stje033,stje034,'',stje035, 
       '',stje036,'',stje037,stje038,'',stje039,'',stje040,stje041,stje042,stje043,stje044,stje045,stje046, 
       stje047,stje048,stje050,stje051,'',stje052,stje053,'',stjeownid,'',stjeowndp,'',stjecrtid,'', 
       stjecrtdp,'',stjecrtdt,stjemodid,'',stjemoddt,stjecnfid,'',stjecnfdt", 
                      " FROM stje_t",
                      " WHERE stjeent= ? AND stje001=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm801_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.stjesite,t0.stje004,t0.stje001,t0.stje002,t0.stje003,t0.stje005, 
       t0.stje006,t0.stjestus,t0.stje007,t0.stje008,t0.stje010,t0.stje009,t0.stje011,t0.stje012,t0.stje013, 
       t0.stje014,t0.stje015,t0.stje016,t0.stje017,t0.stje018,t0.stje049,t0.stje019,t0.stje020,t0.stje021, 
       t0.stje022,t0.stje027,t0.stje028,t0.stje029,t0.stje026,t0.stje023,t0.stje024,t0.stje025,t0.stje030, 
       t0.stje031,t0.stje032,t0.stje033,t0.stje034,t0.stje035,t0.stje036,t0.stje037,t0.stje038,t0.stje039, 
       t0.stje040,t0.stje041,t0.stje042,t0.stje043,t0.stje044,t0.stje045,t0.stje046,t0.stje047,t0.stje048, 
       t0.stje050,t0.stje051,t0.stje052,t0.stje053,t0.stjeownid,t0.stjeowndp,t0.stjecrtid,t0.stjecrtdp, 
       t0.stjecrtdt,t0.stjemodid,t0.stjemoddt,t0.stjecnfid,t0.stjecnfdt,t1.ooefl003 ,t2.sthal003 ,t3.pmaal003 , 
       t4.mhbel003 ,t5.ooag011 ,t6.ooefl003 ,t7.mhaal003 ,t8.mhabl004 ,t9.mhacl005 ,t10.oocql004 ,t11.rtaxl003 , 
       t12.rtaxl003 ,t13.oocql004 ,t14.ooefl003 ,t15.staal003 ,t16.oocql004 ,t17.ooibl004 ,t18.oocql004 , 
       t19.ooail003 ,t20.oodbl004 ,t21.isacl004 ,t22.ooag011 ,t23.ooag011 ,t24.ooag011 ,t25.ooefl003 , 
       t26.ooag011",
               " FROM stje_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.stjesite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN sthal_t t2 ON t2.sthalent="||g_enterprise||" AND t2.sthal001=t0.stje003 AND t2.sthal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t3 ON t3.pmaalent="||g_enterprise||" AND t3.pmaal001=t0.stje007 AND t3.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN mhbel_t t4 ON t4.mhbelent="||g_enterprise||" AND t4.mhbel001=t0.stje008 AND t4.mhbel002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent="||g_enterprise||" AND t5.ooag001=t0.stje017  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent="||g_enterprise||" AND t6.ooefl001=t0.stje018 AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN mhaal_t t7 ON t7.mhaalent="||g_enterprise||" AND t7.mhaal001=t0.stje019 AND t7.mhaal002='"||g_dlang||"' ",
               " LEFT JOIN mhabl_t t8 ON t8.mhablent="||g_enterprise||" AND t8.mhabl001=t0.stje019 AND t8.mhabl002=t0.stje020 AND t8.mhabl003='"||g_dlang||"' ",
               " LEFT JOIN mhacl_t t9 ON t9.mhaclent="||g_enterprise||" AND t9.mhacl001=t0.stje019 AND t9.mhacl002=t0.stje020 AND t9.mhacl003=t0.stje021 AND t9.mhacl004='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t10 ON t10.oocqlent="||g_enterprise||" AND t10.oocql001='2144' AND t10.oocql002=t0.stje022 AND t10.oocql003='"||g_dlang||"' ",
               " LEFT JOIN rtaxl_t t11 ON t11.rtaxlent="||g_enterprise||" AND t11.rtaxl001=t0.stje027 AND t11.rtaxl002='"||g_dlang||"' ",
               " LEFT JOIN rtaxl_t t12 ON t12.rtaxlent="||g_enterprise||" AND t12.rtaxl001=t0.stje028 AND t12.rtaxl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t13 ON t13.oocqlent="||g_enterprise||" AND t13.oocql001='2002' AND t13.oocql002=t0.stje029 AND t13.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t14 ON t14.ooeflent="||g_enterprise||" AND t14.ooefl001=t0.stje030 AND t14.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN staal_t t15 ON t15.staalent="||g_enterprise||" AND t15.staal001=t0.stje031 AND t15.staal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t16 ON t16.oocqlent="||g_enterprise||" AND t16.oocql001='2060' AND t16.oocql002=t0.stje032 AND t16.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooibl_t t17 ON t17.ooiblent="||g_enterprise||" AND t17.ooibl002=t0.stje034 AND t17.ooibl003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t18 ON t18.oocqlent="||g_enterprise||" AND t18.oocql001='238' AND t18.oocql002=t0.stje035 AND t18.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t19 ON t19.ooailent="||g_enterprise||" AND t19.ooail001=t0.stje036 AND t19.ooail002='"||g_dlang||"' ",
               " LEFT JOIN oodbl_t t20 ON t20.oodblent="||g_enterprise||" AND t20.oodbl002=t0.stje038 AND t20.oodbl003='"||g_dlang||"' ",
               " LEFT JOIN isacl_t t21 ON t21.isaclent="||g_enterprise||" AND t21.isacl002=t0.stje039 AND t21.isacl003='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t22 ON t22.ooagent="||g_enterprise||" AND t22.ooag001=t0.stje051  ",
               " LEFT JOIN ooag_t t23 ON t23.ooagent="||g_enterprise||" AND t23.ooag001=t0.stje053  ",
               " LEFT JOIN ooag_t t24 ON t24.ooagent="||g_enterprise||" AND t24.ooag001=t0.stjeownid  ",
               " LEFT JOIN ooefl_t t25 ON t25.ooeflent="||g_enterprise||" AND t25.ooefl001=t0.stjeowndp AND t25.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t26 ON t26.ooagent="||g_enterprise||" AND t26.ooag001=t0.stjemodid  ",
 
               " WHERE t0.stjeent = " ||g_enterprise|| " AND t0.stje001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   LET g_sql = " SELECT DISTINCT t0.stjesite,t0.stje004,t0.stje001,t0.stje002,t0.stje003,t0.stje005, 
       t0.stje006,t0.stjestus,t0.stje007,t0.stje008,t0.stje010,t0.stje009,t0.stje011,t0.stje012,t0.stje013, 
       t0.stje014,t0.stje015,t0.stje016,t0.stje017,t0.stje018,t0.stje049,t0.stje019,t0.stje020,t0.stje021, 
       t0.stje022,t0.stje027,t0.stje028,t0.stje029,t0.stje026,t0.stje023,t0.stje024,t0.stje025,t0.stje030, 
       t0.stje031,t0.stje032,t0.stje033,t0.stje034,t0.stje035,t0.stje036,t0.stje037,t0.stje038,t0.stje039, 
       t0.stje040,t0.stje041,t0.stje042,t0.stje043,t0.stje044,t0.stje045,t0.stje046,t0.stje047,t0.stje048, 
       t0.stje050,t0.stje051,t0.stje052,t0.stje053,t0.stjeownid,t0.stjeowndp,t0.stjecrtid,t0.stjecrtdp, 
       t0.stjecrtdt,t0.stjemodid,t0.stjemoddt,t0.stjecnfid,t0.stjecnfdt,t1.ooefl003 ,t2.sthal003 ,t3.pmaal003 , 
       t4.mhbel003 ,t5.ooag011 ,t6.ooefl003 ,t7.mhaal003 ,t8.mhabl004 ,t9.mhacl005 ,t10.oocql004 ,t11.rtaxl003 , 
       t12.rtaxl003 ,t13.oocql004 ,t14.ooefl003 ,t15.staal003 ,t16.oocql004 ,t17.ooibl004 ,t18.oocql004 , 
       t19.ooail003 ,t20.oodbl004 ,t21.isacl004 ,t22.ooag011 ,t23.ooag011 ,t24.ooag011 ,t25.ooefl003 , 
       t26.ooag011",
               " FROM stje_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=t0.stjesite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN sthal_t t2 ON t2.sthalent='"||g_enterprise||"' AND t2.sthal001=t0.stje003 AND t2.sthal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t3 ON t3.pmaalent='"||g_enterprise||"' AND t3.pmaal001=t0.stje007 AND t3.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN mhbel_t t4 ON t4.mhbelent='"||g_enterprise||"' AND t4.mhbel001=t0.stje008 AND t4.mhbel002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent='"||g_enterprise||"' AND t5.ooag001=t0.stje017  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent='"||g_enterprise||"' AND t6.ooefl001=t0.stje018 AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN mhaal_t t7 ON t7.mhaalent='"||g_enterprise||"' AND t7.mhaal001=t0.stje019 AND t7.mhaal002='"||g_dlang||"' ",
               " LEFT JOIN mhabl_t t8 ON t8.mhablent='"||g_enterprise||"' AND t8.mhabl001=t0.stje019 AND t8.mhabl002=t0.stje020 AND t8.mhabl003='"||g_dlang||"' ",
               " LEFT JOIN mhacl_t t9 ON t9.mhaclent='"||g_enterprise||"' AND t9.mhacl001=t0.stje019 AND t9.mhacl002=t0.stje020 AND t9.mhacl003=t0.stje021 AND t9.mhacl004='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t10 ON t10.oocqlent='"||g_enterprise||"' AND t10.oocql001='2144' AND t10.oocql002=t0.stje022 AND t10.oocql003='"||g_dlang||"' ",
               " LEFT JOIN rtaxl_t t11 ON t11.rtaxlent='"||g_enterprise||"' AND t11.rtaxl001=t0.stje027 AND t11.rtaxl002='"||g_dlang||"' ",
               " LEFT JOIN rtaxl_t t12 ON t12.rtaxlent='"||g_enterprise||"' AND t12.rtaxl001=t0.stje028 AND t12.rtaxl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t13 ON t13.oocqlent='"||g_enterprise||"' AND t13.oocql001='2002' AND t13.oocql002=t0.stje029 AND t13.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t14 ON t14.ooeflent='"||g_enterprise||"' AND t14.ooefl001=t0.stje030 AND t14.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN staal_t t15 ON t15.staalent='"||g_enterprise||"' AND t15.staal001=t0.stje031 AND t15.staal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t16 ON t16.oocqlent='"||g_enterprise||"' AND t16.oocql001='2060' AND t16.oocql002=t0.stje032 AND t16.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooibl_t t17 ON t17.ooiblent='"||g_enterprise||"' AND t17.ooibl002=t0.stje034 AND t17.ooibl003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t18 ON t18.oocqlent='"||g_enterprise||"' AND t18.oocql001='238' AND t18.oocql002=t0.stje035 AND t18.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t19 ON t19.ooailent='"||g_enterprise||"' AND t19.ooail001=t0.stje036 AND t19.ooail002='"||g_dlang||"' ",
               " LEFT JOIN oodbl_t t20 ON t20.oodblent='"||g_enterprise||"' AND t20.oodbl002=t0.stje038 AND t20.oodbl003='"||g_dlang||"' ",
               " LEFT JOIN ooef_t  t99 ON t99.ooefent='"||g_enterprise||"' AND t99.ooef001=t0.stjesite  ",
               " LEFT JOIN isacl_t t21 ON t21.isaclent='"||g_enterprise||"' AND t21.isacl002=t0.stje039 AND t21.isacl001=t99.ooef019 AND t21.isacl003='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t22 ON t22.ooagent='"||g_enterprise||"' AND t22.ooag001=t0.stje051  ",
               " LEFT JOIN ooag_t t23 ON t23.ooagent='"||g_enterprise||"' AND t23.ooag001=t0.stje053  ",
               " LEFT JOIN ooag_t t24 ON t24.ooagent='"||g_enterprise||"' AND t24.ooag001=t0.stjeownid  ",
               " LEFT JOIN ooefl_t t25 ON t25.ooeflent='"||g_enterprise||"' AND t25.ooefl001=t0.stjeowndp AND t25.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t26 ON t26.ooagent='"||g_enterprise||"' AND t26.ooag001=t0.stjemodid  ",
               
               " WHERE t0.stjeent = '" ||g_enterprise|| "' AND t0.stje001 = ?"                         
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #end add-point
   PREPARE astm801_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_astm801 WITH FORM cl_ap_formpath("ast",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL astm801_init()   
 
      #進入選單 Menu (="N")
      CALL astm801_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_astm801
      
   END IF 
   
   CLOSE astm801_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   CALL s_aooi500_drop_temp() RETURNING l_success
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="astm801.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION astm801_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   DEFINE l_success LIKE type_t.num5
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
   LET g_detail_idx_list[4] = 1
   LET g_detail_idx_list[5] = 1
   LET g_detail_idx_list[6] = 1
   LET g_detail_idx_list[7] = 1
   LET g_detail_idx_list[8] = 1
   LET g_detail_idx_list[9] = 1
   LET g_detail_idx_list[10] = 1
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('stjestus','50','N,X,Y')
 
      CALL cl_set_combo_scc('stje005','6785') 
   CALL cl_set_combo_scc('stje009','6911') 
   CALL cl_set_combo_scc('stje033','6202') 
   CALL cl_set_combo_scc('stje037','2086') 
   CALL cl_set_combo_scc('stjf007','6920') 
   CALL cl_set_combo_scc('stjf009','6910') 
   CALL cl_set_combo_scc('stjf010','6912') 
   CALL cl_set_combo_scc('stjf016','6011') 
   CALL cl_set_combo_scc('stjf023','6932') 
   CALL cl_set_combo_scc('stjh008','6915') 
   CALL cl_set_combo_scc('stji006','6005') 
   CALL cl_set_combo_scc('stji009','6917') 
   CALL cl_set_combo_scc('stjl002','6848') 
   CALL cl_set_combo_scc('stjm018','6932') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1',","1")
   CALL g_idx_group.addAttribute("'2',","1")
   CALL g_idx_group.addAttribute("'3',","1")
   CALL g_idx_group.addAttribute("'4',","1")
   CALL g_idx_group.addAttribute("'5',","1")
   CALL g_idx_group.addAttribute("'6',","1")
   CALL g_idx_group.addAttribute("'7',","1")
   CALL g_idx_group.addAttribute("'8',","1")
   CALL g_idx_group.addAttribute("'9',","1")
   CALL g_idx_group.addAttribute("'10',","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   CALL cl_set_combo_scc('stje005','6935')
   CALL cl_set_combo_scc('b_stje005','6935')
   CALL cl_set_combo_scc('stjf023_2','6932')
   LET g_detail_idx_list[10] = 1
   LET g_detail_idx_list[11] = 1   
   LET g_detail_idx_list[12] = 1
   CALL g_idx_group.addAttribute("'10',","1")
   CALL g_idx_group.addAttribute("'11',","1")
   CALL g_idx_group.addAttribute("'12',","1")
   CALL cl_set_combo_scc_part('stje004','6013','5')   
   CALL cl_set_combo_scc('stje009','6911')
   CALL cl_set_combo_scc('stje033','6202')
   CALL cl_set_combo_scc('stje037','2086')
   #CALL cl_set_combo_scc('stjf007','6920')
   CALL cl_set_combo_scc_part('stjf007','6920','1,2,3,4,5')   
   CALL cl_set_combo_scc('stae012','6820')
   CALL cl_set_combo_scc_part('stjf009','6910','1,3')
   CALL cl_set_combo_scc_part('stjf010','6904','1,2,3,4')
   CALL cl_set_combo_scc_part('stjf016','6011','1,2,3')
   CALL cl_set_combo_scc('stae004_1','6004')
   CALL cl_set_combo_scc('stae012_1','6820')
   CALL cl_set_combo_scc('stae004_2','6004')
   CALL cl_set_combo_scc('stae004_3','6004')
   CALL cl_set_combo_scc('stae004_4','6004')
   CALL cl_set_combo_scc('stae004','6004')
   #CALL cl_set_combo_scc('stjf007_2','6920')
   CALL cl_set_combo_scc_part('stjf007_2','6920','1,2,3,4,5')
   CALL cl_set_combo_scc_part('stjf009_2','6910','2')
   #CALL cl_set_combo_scc_part('stjf010_2','6904','5')   #mark by geza 160604-00009#138 
   CALL cl_set_combo_scc_part('stjf010_2','6904','5,6') #add by geza 160604-00009#138
   CALL cl_set_combo_scc('stjf013_2','6010')
   CALL cl_set_combo_scc_part('stjf016_2','6011','1,2,3')
   CALL cl_set_combo_scc('stji006','6005')
   CALL cl_set_combo_scc('stjl002','6848') 
   CALL cl_set_combo_scc('stjn003','6916') 
   CALL cl_set_combo_scc('stjn004','6915') 
   CALL cl_set_combo_scc('stjh008','6916')
   CALL cl_set_combo_scc('stji009','6917')
   CALL s_aooi500_create_temp() RETURNING l_success 
   CALL s_asti800_set_comp_format("stje023",g_site,'2')
   CALL s_asti800_set_comp_format("stje024",g_site,'2')
   CALL s_asti800_set_comp_format("stje025",g_site,'2')
   CALL s_asti800_set_comp_format("stje223",g_site,'2')
   CALL s_asti800_set_comp_format("stje224",g_site,'2')
   CALL s_asti800_set_comp_format("stje225",g_site,'2')
   CALL s_asti800_set_comp_format("stjj003",g_site,'2')
   CALL s_asti800_set_comp_format("stjj004",g_site,'2')
   CALL s_asti800_set_comp_format("stjj005",g_site,'2')
   CALL s_asti800_set_comp_format("stjm007",g_site,'1')
   CALL s_asti800_set_comp_format("stjm008",g_site,'1')
   CALL s_asti800_set_comp_format("stjm009",g_site,'1')
   CALL s_asti800_set_comp_format("stjm010",g_site,'1')
   CALL s_asti800_set_comp_format("stjm007_1",g_site,'1')
   CALL s_asti800_set_comp_format("stjm008_1",g_site,'1')
   CALL s_asti800_set_comp_format("stjm009_1",g_site,'1')
   CALL s_asti800_set_comp_format("stjm010_1",g_site,'1')
   CALL s_asti800_set_comp_format("stjm007_1",g_site,'1')
   CALL s_asti800_set_comp_format("stjn006",g_site,'1')
   CALL s_asti800_set_comp_format("stjh006",g_site,'1')
   CALL s_asti800_set_comp_format("stjf014_2",g_site,'1')
   CALL s_asti800_set_comp_format("stjf011",g_site,'1')
   CALL s_asti800_set_comp_format("stjf018",g_site,'1')
   CALL s_asti800_set_comp_format("stjf017",g_site,'1')
   CALL s_asti800_set_comp_format("stjg004",g_site,'1')
   CALL s_asti800_set_comp_format("stjg006",g_site,'1')
   #end add-point
   
   #初始化搜尋條件
   CALL astm801_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="astm801.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION astm801_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   DEFINE l_success LIKE type_t.num5 
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_stje_m.* TO NULL
         CALL g_stjf_d.clear()
         CALL g_stjf11_d.clear()
         CALL g_stjf13_d.clear()
         CALL g_stjf2_d.clear()
         CALL g_stjf3_d.clear()
         CALL g_stjf4_d.clear()
         CALL g_stjf5_d.clear()
         CALL g_stjf6_d.clear()
         CALL g_stjf7_d.clear()
         CALL g_stjf9_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL astm801_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL astm801_fetch('') # reload data
               LET l_ac = 1
               CALL astm801_ui_detailshow() #Setting the current row 
         
               CALL astm801_idx_chk()
               #NEXT FIELD stjfseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_stjf_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astm801_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1',",l_ac)
               CALL astm801_b_fill2('10')
 
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL astm801_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_stjf11_d TO s_detail11.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astm801_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail11")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[2] = l_ac
               CALL g_idx_group.addAttribute("'2',",l_ac)
               
               #add-point:page2, before row動作 name="ui_dialog.body11.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail11")
               LET g_current_page = 2
               #顯示單身筆數
               CALL astm801_idx_chk()
               #add-point:page2自定義行為 name="ui_dialog.body11.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為 name="ui_dialog.body11.action"
            
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_stjf13_d TO s_detail13.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astm801_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail13")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[3] = l_ac
               CALL g_idx_group.addAttribute("'3',",l_ac)
               
               #add-point:page3, before row動作 name="ui_dialog.body13.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail13")
               LET g_current_page = 3
               #顯示單身筆數
               CALL astm801_idx_chk()
               #add-point:page3自定義行為 name="ui_dialog.body13.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為 name="ui_dialog.body13.action"
            
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_stjf2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astm801_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[4] = l_ac
               CALL g_idx_group.addAttribute("'4',",l_ac)
               
               #add-point:page4, before row動作 name="ui_dialog.body2.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'4',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 4
               #顯示單身筆數
               CALL astm801_idx_chk()
               #add-point:page4自定義行為 name="ui_dialog.body2.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_4)
            
         
            #add-point:page4自定義行為 name="ui_dialog.body2.action"
            
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_stjf3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astm801_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[5] = l_ac
               CALL g_idx_group.addAttribute("'5',",l_ac)
               
               #add-point:page5, before row動作 name="ui_dialog.body3.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'5',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 5
               #顯示單身筆數
               CALL astm801_idx_chk()
               #add-point:page5自定義行為 name="ui_dialog.body3.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_5)
            
         
            #add-point:page5自定義行為 name="ui_dialog.body3.action"
            
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_stjf4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astm801_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[6] = l_ac
               CALL g_idx_group.addAttribute("'6',",l_ac)
               
               #add-point:page6, before row動作 name="ui_dialog.body4.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'6',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_current_page = 6
               #顯示單身筆數
               CALL astm801_idx_chk()
               #add-point:page6自定義行為 name="ui_dialog.body4.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_6)
            
         
            #add-point:page6自定義行為 name="ui_dialog.body4.action"
            
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_stjf5_d TO s_detail5.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astm801_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[7] = l_ac
               CALL g_idx_group.addAttribute("'7',",l_ac)
               
               #add-point:page7, before row動作 name="ui_dialog.body5.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'7',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               LET g_current_page = 7
               #顯示單身筆數
               CALL astm801_idx_chk()
               #add-point:page7自定義行為 name="ui_dialog.body5.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_7)
            
         
            #add-point:page7自定義行為 name="ui_dialog.body5.action"
            
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_stjf6_d TO s_detail6.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astm801_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail6")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[8] = l_ac
               CALL g_idx_group.addAttribute("'8',",l_ac)
               
               #add-point:page8, before row動作 name="ui_dialog.body6.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'8',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail6")
               LET g_current_page = 8
               #顯示單身筆數
               CALL astm801_idx_chk()
               #add-point:page8自定義行為 name="ui_dialog.body6.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_8)
            
         
            #add-point:page8自定義行為 name="ui_dialog.body6.action"
            
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_stjf7_d TO s_detail7.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astm801_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail7")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[9] = l_ac
               CALL g_idx_group.addAttribute("'9',",l_ac)
               
               #add-point:page9, before row動作 name="ui_dialog.body7.before_row"
               CALL astm801_b_fill_1()
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'9',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail7")
               LET g_current_page = 9
               #顯示單身筆數
               CALL astm801_idx_chk()
               #add-point:page9自定義行為 name="ui_dialog.body7.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_9)
            
         
            #add-point:page9自定義行為 name="ui_dialog.body7.action"
            
            #end add-point
         
         END DISPLAY
 
         
         #第二階單身段落
         DISPLAY ARRAY g_stjf9_d TO s_detail9.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astm801_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail9")
               LET g_detail_idx2 = l_ac
               LET g_detail_idx_list[10] = l_ac
               CALL g_idx_group.addAttribute("'10',",l_ac)
               
               #add-point:page10, before row動作 name="ui_dialog.body9.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在下階單身則控制筆數位置
               IF g_loc = 'd' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'10',"))
               END IF
               LET g_loc = 'd'
               LET l_ac = DIALOG.getCurrentRow("s_detail9")
               LET g_current_page = 10
               #顯示單身筆數
               CALL astm801_idx_chk()
               #add-point:page10自定義行為 name="ui_dialog.body9.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_10)
            
         
            #add-point:page10自定義行為 name="ui_dialog.body9.action"
            
            #end add-point
         
         END DISPLAY
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         #第一階單身段落
         DISPLAY ARRAY g_stjf12_d TO s_detail8.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astm801_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail8")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[10] = l_ac
               CALL g_idx_group.addAttribute("'10',",l_ac)
               CALL astm801_b_fill2_1()
               #add-point:page8, before row動作 name="ui_dialog.body7.before_row"

               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'10',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail8")
               LET g_current_page = 10
               #顯示單身筆數
               CALL astm801_idx_chk()
               #add-point:page8自定義行為 name="ui_dialog.body7.before_display"

               #end add-point
      
            #自訂ACTION(detail_show,page_8)
            
         
            #add-point:page8自定義行為 name="ui_dialog.body7.action"

            #end add-point
         
         END DISPLAY
         
         DISPLAY ARRAY g_stjf15_d TO s_detail10.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astm801_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail10")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[11] = l_ac
               CALL g_idx_group.addAttribute("'11',",l_ac)
               
               #add-point:page8, before row動作 name="ui_dialog.body7.before_row"

               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'11',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail10")
               LET g_current_page = 11
               #顯示單身筆數
               CALL astm801_idx_chk()
               #add-point:page8自定義行為 name="ui_dialog.body7.before_display"

               #end add-point
      
            #自訂ACTION(detail_show,page_8)
            
         
            #add-point:page8自定義行為 name="ui_dialog.body7.action"

            #end add-point
         
         END DISPLAY
         
        DISPLAY ARRAY g_stjf14_d TO s_detail12.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astm801_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail12")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[12] = l_ac
               CALL g_idx_group.addAttribute("'12',",l_ac)
               
               #add-point:page8, before row動作 name="ui_dialog.body7.before_row"

               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'12',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail12")
               LET g_current_page = 12
               #顯示單身筆數
               CALL astm801_idx_chk()
               #add-point:page8自定義行為 name="ui_dialog.body7.before_display"

               #end add-point
      
            #自訂ACTION(detail_show,page_8)
            
         
            #add-point:page8自定義行為 name="ui_dialog.body7.action"

            #end add-point
         
         END DISPLAY
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL astm801_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL astm801_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL astm801_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL astm801_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL astm801_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL astm801_set_act_visible()   
            CALL astm801_set_act_no_visible()
            IF NOT (g_stje_m.stje001 IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " stjeent = " ||g_enterprise|| " AND",
                                  " stje001 = '", g_stje_m.stje001, "' "
 
               #填到對應位置
               CALL astm801_browser_fill("")
            END IF
         
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
               INITIALIZE g_wc2_table4 TO NULL
 
               INITIALIZE g_wc2_table5 TO NULL
 
               INITIALIZE g_wc2_table6 TO NULL
 
               INITIALIZE g_wc2_table7 TO NULL
 
               INITIALIZE g_wc2_table8 TO NULL
 
               INITIALIZE g_wc2_table9 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "stje_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "stjf_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "stjn_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stjo_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stjh_t" 
                        LET g_wc2_table4 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stji_t" 
                        LET g_wc2_table5 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stjl_t" 
                        LET g_wc2_table6 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stjj_t" 
                        LET g_wc2_table7 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stjk_t" 
                        LET g_wc2_table8 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stjm_t" 
                        LET g_wc2_table9 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
                  OR NOT cl_null(g_wc2_table4)
 
                  OR NOT cl_null(g_wc2_table5)
 
                  OR NOT cl_null(g_wc2_table6)
 
                  OR NOT cl_null(g_wc2_table7)
 
                  OR NOT cl_null(g_wc2_table8)
 
                  OR NOT cl_null(g_wc2_table9)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
                  IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
                  END IF
 
                  IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
                  END IF
 
                  IF g_wc2_table6 <> " 1=1" AND NOT cl_null(g_wc2_table6) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
                  END IF
 
                  IF g_wc2_table7 <> " 1=1" AND NOT cl_null(g_wc2_table7) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
                  END IF
 
                  IF g_wc2_table8 <> " 1=1" AND NOT cl_null(g_wc2_table8) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table8
                  END IF
 
                  IF g_wc2_table9 <> " 1=1" AND NOT cl_null(g_wc2_table9) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table9
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL astm801_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
               INITIALIZE g_wc2_table4 TO NULL
 
               INITIALIZE g_wc2_table5 TO NULL
 
               INITIALIZE g_wc2_table6 TO NULL
 
               INITIALIZE g_wc2_table7 TO NULL
 
               INITIALIZE g_wc2_table8 TO NULL
 
               INITIALIZE g_wc2_table9 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "stje_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "stjf_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "stjn_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stjo_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stjh_t" 
                        LET g_wc2_table4 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stji_t" 
                        LET g_wc2_table5 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stjl_t" 
                        LET g_wc2_table6 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stjj_t" 
                        LET g_wc2_table7 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stjk_t" 
                        LET g_wc2_table8 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stjm_t" 
                        LET g_wc2_table9 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
                  OR NOT cl_null(g_wc2_table4)
 
                  OR NOT cl_null(g_wc2_table5)
 
                  OR NOT cl_null(g_wc2_table6)
 
                  OR NOT cl_null(g_wc2_table7)
 
                  OR NOT cl_null(g_wc2_table8)
 
                  OR NOT cl_null(g_wc2_table9)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
                  IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
                  END IF
 
                  IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
                  END IF
 
                  IF g_wc2_table6 <> " 1=1" AND NOT cl_null(g_wc2_table6) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
                  END IF
 
                  IF g_wc2_table7 <> " 1=1" AND NOT cl_null(g_wc2_table7) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
                  END IF
 
                  IF g_wc2_table8 <> " 1=1" AND NOT cl_null(g_wc2_table8) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table8
                  END IF
 
                  IF g_wc2_table9 <> " 1=1" AND NOT cl_null(g_wc2_table9) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table9
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL astm801_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code = "-100" 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL astm801_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               
               #end add-point
               CALL astm801_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL astm801_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astm801_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL astm801_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astm801_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL astm801_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astm801_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL astm801_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astm801_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL astm801_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astm801_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_stjf_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_stjf11_d)
                  LET g_export_id[2]   = "s_detail11"
                  LET g_export_node[3] = base.typeInfo.create(g_stjf13_d)
                  LET g_export_id[3]   = "s_detail13"
                  LET g_export_node[4] = base.typeInfo.create(g_stjf2_d)
                  LET g_export_id[4]   = "s_detail2"
                  LET g_export_node[5] = base.typeInfo.create(g_stjf3_d)
                  LET g_export_id[5]   = "s_detail3"
                  LET g_export_node[6] = base.typeInfo.create(g_stjf4_d)
                  LET g_export_id[6]   = "s_detail4"
                  LET g_export_node[7] = base.typeInfo.create(g_stjf5_d)
                  LET g_export_id[7]   = "s_detail5"
                  LET g_export_node[8] = base.typeInfo.create(g_stjf6_d)
                  LET g_export_id[8]   = "s_detail6"
                  LET g_export_node[9] = base.typeInfo.create(g_stjf7_d)
                  LET g_export_id[9]   = "s_detail7"
                  LET g_export_node[10] = base.typeInfo.create(g_stjf9_d)
                  LET g_export_id[10]   = "s_detail9"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  #add by geza 20160825 (S)
                  LET g_export_node[11] = base.typeInfo.create(g_stjf12_d)
                  LET g_export_id[11]   = "s_detail8"
                  LET g_export_node[12] = base.typeInfo.create(g_stjf15_d)
                  LET g_export_id[12]   = "s_detail10"
                  LET g_export_node[13] = base.typeInfo.create(g_stjf14_d)
                  LET g_export_id[13]   =  "s_detail12"
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD stjfseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION cancel_off
            LET g_action_choice="cancel_off"
            IF cl_auth_chk_act("cancel_off") THEN
               
               #add-point:ON ACTION cancel_off name="menu.cancel_off"
               CALL astm801_upd_stje045_cancel()
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_text
            LET g_action_choice="modify_text"
            IF cl_auth_chk_act("modify_text") THEN
               
               #add-point:ON ACTION modify_text name="menu.modify_text"
               CALL astm801_upd_stje047()
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION quickprint
            LET g_action_choice="quickprint"
            IF cl_auth_chk_act("quickprint") THEN
               
               #add-point:ON ACTION quickprint name="menu.quickprint"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL astm801_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail11",1)
               CALL g_curr_diag.setCurrentRow("s_detail13",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
               CALL g_curr_diag.setCurrentRow("s_detail3",1)
               CALL g_curr_diag.setCurrentRow("s_detail4",1)
               CALL g_curr_diag.setCurrentRow("s_detail5",1)
               CALL g_curr_diag.setCurrentRow("s_detail6",1)
               CALL g_curr_diag.setCurrentRow("s_detail7",1)
               CALL g_curr_diag.setCurrentRow("s_detail9",1)
 
 
 
 
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION bunk_off
            LET g_action_choice="bunk_off"
            IF cl_auth_chk_act("bunk_off") THEN
               
               #add-point:ON ACTION bunk_off name="menu.bunk_off"
               CALL astm801_upd_stje045()   
               #END add-point
               
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL astm801_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL astm801_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL astm801_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow('')
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
 
      #(ver:79) ---add start---
      #add-point:ui_dialog段 after dialog name="ui_dialog.exit_dialog"
      
      #end add-point
      #(ver:79) --- add end ---
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
 
{</section>}
 
{<section id="astm801.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION astm801_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   DEFINE l_where           STRING
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   CALL s_aooi500_sql_where(g_prog,'stjesite') RETURNING l_where
   LET g_wc = g_wc," AND ",l_where
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
 
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT stje001 ",
                      " FROM stje_t ",
                      " ",
                      " LEFT JOIN stjf_t ON stjfent = stjeent AND stje001 = stjf001 ", "  ",
                      #add-point:browser_fill段sql(stjf_t1) name="browser_fill.cnt.join.}"
                      
                      #end add-point
                      " LEFT JOIN stjn_t ON stjnent = stjeent AND stje001 = stjn001", "  ",
                      #add-point:browser_fill段sql(stjn_t1) name="browser_fill.cnt.join.stjn_t1"
                      
                      #end add-point
 
                      " LEFT JOIN stjo_t ON stjoent = stjeent AND stje001 = stjo001", "  ",
                      #add-point:browser_fill段sql(stjo_t1) name="browser_fill.cnt.join.stjo_t1"
                      
                      #end add-point
 
                      " LEFT JOIN stjh_t ON stjhent = stjeent AND stje001 = stjh001", "  ",
                      #add-point:browser_fill段sql(stjh_t1) name="browser_fill.cnt.join.stjh_t1"
                      
                      #end add-point
 
                      " LEFT JOIN stji_t ON stjient = stjeent AND stje001 = stji001", "  ",
                      #add-point:browser_fill段sql(stji_t1) name="browser_fill.cnt.join.stji_t1"
                      
                      #end add-point
 
                      " LEFT JOIN stjl_t ON stjlent = stjeent AND stje001 = stjl001", "  ",
                      #add-point:browser_fill段sql(stjl_t1) name="browser_fill.cnt.join.stjl_t1"
                      
                      #end add-point
 
                      " LEFT JOIN stjj_t ON stjjent = stjeent AND stje001 = stjj001", "  ",
                      #add-point:browser_fill段sql(stjj_t1) name="browser_fill.cnt.join.stjj_t1"
                      
                      #end add-point
 
                      " LEFT JOIN stjk_t ON stjkent = stjeent AND stje001 = stjk001", "  ",
                      #add-point:browser_fill段sql(stjk_t1) name="browser_fill.cnt.join.stjk_t1"
                      
                      #end add-point
 
                      " LEFT JOIN stjm_t ON stjment = stjeent AND stje001 = stjm001", "  ",
                      #add-point:browser_fill段sql(stjm_t1) name="browser_fill.cnt.join.stjm_t1"
                      
                      #end add-point
 
 
                      " LEFT JOIN stjg_t ON stjgent = stjeent AND stjf001 = stjg001 AND stjfseq = stjgseq", "  ",
                      #add-point:browser_fill段sql(stjg_t1) name="browser_fill.cnt.join.stjg_t1"
                      
                      #end add-point
 
 
                      " ", 
                      " ", 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
 
                      " ",
 
 
                      " WHERE stjeent = " ||g_enterprise|| " AND stjfent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("stje_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT stje001 ",
                      " FROM stje_t ", 
                      "  ",
                      "  ",
                      " WHERE stjeent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("stje_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   IF g_wc2 =  " 1=1" AND (g_wc2_table12 <> " 1=1" OR g_wc2_table13 <> " 1=1") THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT stje001 ",
                      " FROM stje_t ",
                      " ",
                      " LEFT JOIN stjf_t ON stjfent = stjeent AND stje001 = stjf001 AND stjf009 = '2' ",                  
                      " LEFT JOIN stjg_t ON stjgent = stjeent AND stjf001 = stjg001 AND stjfseq = stjgseq",
                      " WHERE stjeent = '" ||g_enterprise|| "' AND stjfent = '" ||g_enterprise|| "' AND ",g_wc2_table12," AND ", g_wc, " AND ", g_wc2_table13, cl_sql_add_filter("stje_t")
   END IF
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code = 9035 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_stje_m.* TO NULL
      CALL g_stjf_d.clear()        
      CALL g_stjf11_d.clear() 
      CALL g_stjf13_d.clear() 
      CALL g_stjf2_d.clear() 
      CALL g_stjf3_d.clear() 
      CALL g_stjf4_d.clear() 
      CALL g_stjf5_d.clear() 
      CALL g_stjf6_d.clear() 
      CALL g_stjf7_d.clear() 
      CALL g_stjf9_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      CALL g_stjf12_d.clear()
      CALL g_stjf15_d.clear()
      CALL g_stjf14_d.clear()
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.stje001,t0.stje002,t0.stje003,t0.stje005,t0.stje007,t0.stje008,t0.stje019,t0.stje020,t0.stje021,t0.stje023,t0.stje024,t0.stje025,t0.stjesite,t0.stje028,t0.stje029,t0.stje011,t0.stje012,t0.stje013,t0.stje030,t0.stje031,t0.stje041,t0.stje042,t0.stje043,t0.stje044,t0.stje045,t0.stje046,t0.stje047 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.stjestus,t0.stje001,t0.stje002,t0.stje003,t0.stje005,t0.stje007, 
          t0.stje008,t0.stje019,t0.stje020,t0.stje021,t0.stje023,t0.stje024,t0.stje025,t0.stjesite,t0.stje028, 
          t0.stje029,t0.stje011,t0.stje012,t0.stje013,t0.stje030,t0.stje031,t0.stje041,t0.stje042,t0.stje043, 
          t0.stje044,t0.stje045,t0.stje046,t0.stje047,t1.pmaal003 ,t2.mhbel003 ,t3.mhaal003 ,t4.mhabl004 , 
          t5.mhacl005 ,t6.ooefl003 ,t7.rtaxl003 ,t8.oocql004 ,t9.ooefl003 ,t10.staal003 ",
                  " FROM stje_t t0",
                  "  ",
                  "  LEFT JOIN stjf_t ON stjfent = stjeent AND stje001 = stjf001 ", "  ", 
                  #add-point:browser_fill段sql(stjf_t1) name="browser_fill.join.stjf_t1"
                  
                  #end add-point
                  "  LEFT JOIN stjn_t ON stjnent = stjeent AND stje001 = stjn001", "  ", 
                  #add-point:browser_fill段sql(stjn_t1) name="browser_fill.join.stjn_t1"
                  
                  #end add-point
 
                  "  LEFT JOIN stjo_t ON stjoent = stjeent AND stje001 = stjo001", "  ", 
                  #add-point:browser_fill段sql(stjo_t1) name="browser_fill.join.stjo_t1"
                  
                  #end add-point
 
                  "  LEFT JOIN stjh_t ON stjhent = stjeent AND stje001 = stjh001", "  ", 
                  #add-point:browser_fill段sql(stjh_t1) name="browser_fill.join.stjh_t1"
                  
                  #end add-point
 
                  "  LEFT JOIN stji_t ON stjient = stjeent AND stje001 = stji001", "  ", 
                  #add-point:browser_fill段sql(stji_t1) name="browser_fill.join.stji_t1"
                  
                  #end add-point
 
                  "  LEFT JOIN stjl_t ON stjlent = stjeent AND stje001 = stjl001", "  ", 
                  #add-point:browser_fill段sql(stjl_t1) name="browser_fill.join.stjl_t1"
                  
                  #end add-point
 
                  "  LEFT JOIN stjj_t ON stjjent = stjeent AND stje001 = stjj001", "  ", 
                  #add-point:browser_fill段sql(stjj_t1) name="browser_fill.join.stjj_t1"
                  
                  #end add-point
 
                  "  LEFT JOIN stjk_t ON stjkent = stjeent AND stje001 = stjk001", "  ", 
                  #add-point:browser_fill段sql(stjk_t1) name="browser_fill.join.stjk_t1"
                  
                  #end add-point
 
                  "  LEFT JOIN stjm_t ON stjment = stjeent AND stje001 = stjm001", "  ", 
                  #add-point:browser_fill段sql(stjm_t1) name="browser_fill.join.stjm_t1"
                  
                  #end add-point
 
 
                  "  LEFT JOIN stjg_t ON stjgent = stjeent AND stjf001 = stjg001 AND stjfseq = stjgseq", "  ", 
                  #add-point:browser_fill段sql(stjg_t1) name="browser_fill.join.stjg_t1"
                  
                  #end add-point
 
 
                  " ", 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
 
                  " ",
 
 
                                 " LEFT JOIN pmaal_t t1 ON t1.pmaalent="||g_enterprise||" AND t1.pmaal001=t0.stje007 AND t1.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN mhbel_t t2 ON t2.mhbelent="||g_enterprise||" AND t2.mhbel001=t0.stje008 AND t2.mhbel002='"||g_dlang||"' ",
               " LEFT JOIN mhaal_t t3 ON t3.mhaalent="||g_enterprise||" AND t3.mhaal001=t0.stje019 AND t3.mhaal002='"||g_dlang||"' ",
               " LEFT JOIN mhabl_t t4 ON t4.mhablent="||g_enterprise||" AND t4.mhabl001=t0.stje019 AND t4.mhabl002=t0.stje020 AND t4.mhabl003='"||g_dlang||"' ",
               " LEFT JOIN mhacl_t t5 ON t5.mhaclent="||g_enterprise||" AND t5.mhacl001=t0.stje019 AND t5.mhacl002=t0.stje020 AND t5.mhacl003=t0.stje021 AND t5.mhacl004='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent="||g_enterprise||" AND t6.ooefl001=t0.stjesite AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN rtaxl_t t7 ON t7.rtaxlent="||g_enterprise||" AND t7.rtaxl001=t0.stje028 AND t7.rtaxl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t8 ON t8.oocqlent="||g_enterprise||" AND t8.oocql001='2002' AND t8.oocql002=t0.stje029 AND t8.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t9 ON t9.ooeflent="||g_enterprise||" AND t9.ooefl001=t0.stje030 AND t9.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN staal_t t10 ON t10.staalent="||g_enterprise||" AND t10.staal001=t0.stje031 AND t10.staal002='"||g_dlang||"' ",
 
                  " WHERE t0.stjeent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("stje_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.stjestus,t0.stje001,t0.stje002,t0.stje003,t0.stje005,t0.stje007, 
          t0.stje008,t0.stje019,t0.stje020,t0.stje021,t0.stje023,t0.stje024,t0.stje025,t0.stjesite,t0.stje028, 
          t0.stje029,t0.stje011,t0.stje012,t0.stje013,t0.stje030,t0.stje031,t0.stje041,t0.stje042,t0.stje043, 
          t0.stje044,t0.stje045,t0.stje046,t0.stje047,t1.pmaal003 ,t2.mhbel003 ,t3.mhaal003 ,t4.mhabl004 , 
          t5.mhacl005 ,t6.ooefl003 ,t7.rtaxl003 ,t8.oocql004 ,t9.ooefl003 ,t10.staal003 ",
                  " FROM stje_t t0",
                  "  ",
                                 " LEFT JOIN pmaal_t t1 ON t1.pmaalent="||g_enterprise||" AND t1.pmaal001=t0.stje007 AND t1.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN mhbel_t t2 ON t2.mhbelent="||g_enterprise||" AND t2.mhbel001=t0.stje008 AND t2.mhbel002='"||g_dlang||"' ",
               " LEFT JOIN mhaal_t t3 ON t3.mhaalent="||g_enterprise||" AND t3.mhaal001=t0.stje019 AND t3.mhaal002='"||g_dlang||"' ",
               " LEFT JOIN mhabl_t t4 ON t4.mhablent="||g_enterprise||" AND t4.mhabl001=t0.stje019 AND t4.mhabl002=t0.stje020 AND t4.mhabl003='"||g_dlang||"' ",
               " LEFT JOIN mhacl_t t5 ON t5.mhaclent="||g_enterprise||" AND t5.mhacl001=t0.stje019 AND t5.mhacl002=t0.stje020 AND t5.mhacl003=t0.stje021 AND t5.mhacl004='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent="||g_enterprise||" AND t6.ooefl001=t0.stjesite AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN rtaxl_t t7 ON t7.rtaxlent="||g_enterprise||" AND t7.rtaxl001=t0.stje028 AND t7.rtaxl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t8 ON t8.oocqlent="||g_enterprise||" AND t8.oocql001='2002' AND t8.oocql002=t0.stje029 AND t8.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t9 ON t9.ooeflent="||g_enterprise||" AND t9.ooefl001=t0.stje030 AND t9.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN staal_t t10 ON t10.staalent="||g_enterprise||" AND t10.staal001=t0.stje031 AND t10.staal002='"||g_dlang||"' ",
 
                  " WHERE t0.stjeent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("stje_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   IF g_wc2 <> " 1=1"  AND (g_wc2_table12 = " 1=1" AND g_wc2_table13 = " 1=1")  THEN
      #單身有輸入搜尋條件   
      LET g_sql = "  SELECT DISTINCT t0.stjestus,t0.stje001,t0.stje002,t0.stje003,t0.stje005,t0.stje007, 
                      t0.stje008,t0.stje019,t0.stje020,t0.stje021,t0.stje023,t0.stje024,t0.stje025,
                      t0.stjesite,t0.stje028,t0.stje029,t0.stje011,t0.stje012,t0.stje013,t0.stje030,t0.stje031,
                      t0.stje041,t0.stje042,t0.stje043,t0.stje044,t0.stje045,t0.stje046,t0.stje047,                      
                      t1.pmaal003 ,t2.mhbel003 ,t8.mhaal003,t9.mhabl004,t10.mhacl005,t3.ooefl003 ,t4.rtaxl003 ,t5.oocql004 ,t6.ooefl003 ,t7.staal003 ",  
                  " FROM stje_t t0",
                  "  ",
                  "  LEFT JOIN stjf_t ON stjfent = stjeent AND stje001 = stjf001 AND stjf009 IN ('1','3') ", "  ", 
                  #add-point:browser_fill段sql(stjf_t1) name="browser_fill.join.stjf_t1"

                  #end add-point
                  "  LEFT JOIN stjn_t ON stjnent = stjeent AND stje001 = stjn001", "  ", 
                  #add-point:browser_fill段sql(stjn_t1) name="browser_fill.join.stjn_t1"

                  #end add-point
 
                  "  LEFT JOIN stjo_t ON stjoent = stjeent AND stje001 = stjo001", "  ", 
                  #add-point:browser_fill段sql(stjo_t1) name="browser_fill.join.stjo_t1"

                  #end add-point
 
                  "  LEFT JOIN stjh_t ON stjhent = stjeent AND stje001 = stjh001", "  ", 
                  #add-point:browser_fill段sql(stjh_t1) name="browser_fill.join.stjh_t1"

                  #end add-point
 
                  "  LEFT JOIN stji_t ON stjient = stjeent AND stje001 = stji001", "  ", 
                  #add-point:browser_fill段sql(stji_t1) name="browser_fill.join.stji_t1"

                  #end add-point
 
                  "  LEFT JOIN stjl_t ON stjlent = stjeent AND stje001 = stjl001", "  ", 
                  #add-point:browser_fill段sql(stjl_t1) name="browser_fill.join.stjl_t1"

                  #end add-point
 
                  "  LEFT JOIN stjj_t ON stjjent = stjeent AND stje001 = stjj001", "  ", 
                  #add-point:browser_fill段sql(stjj_t1) name="browser_fill.join.stjj_t1"

                  #end add-point
 
                  "  LEFT JOIN stjk_t ON stjkent = stjeent AND stje001 = stjk001", "  ", 
                  #add-point:browser_fill段sql(stjk_t1) name="browser_fill.join.stjk_t1"

                  #end add-point
 
                  "  LEFT JOIN stjm_t ON stjment = stjeent AND stje001 = stjm001", "  ", 
                  #add-point:browser_fill段sql(stjm_t1) name="browser_fill.join.stjm_t1"

                  #end add-point
 
 
                  "  LEFT JOIN stjg_t ON stjgent = stjeent AND stjf001 = stjg001 AND stjfseq = stjgseq", "  ", 
                  #add-point:browser_fill段sql(stjg_t1) name="browser_fill.join.stjg_t1"

                  #end add-point
                   
                 " LEFT JOIN pmaal_t t1 ON t1.pmaalent='"||g_enterprise||"' AND t1.pmaal001=t0.stje007 AND t1.pmaal002='"||g_dlang||"' ",
                 " LEFT JOIN mhbel_t t2 ON t2.mhbelent='"||g_enterprise||"' AND t2.mhbel001=t0.stje008 AND t2.mhbel002='"||g_dlang||"' ",
                 " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=t0.stjesite AND t3.ooefl002='"||g_dlang||"' ",
                 " LEFT JOIN rtaxl_t t4 ON t4.rtaxlent='"||g_enterprise||"' AND t4.rtaxl001=t0.stje028 AND t4.rtaxl002='"||g_dlang||"' ",
                 " LEFT JOIN oocql_t t5 ON t5.oocqlent='"||g_enterprise||"' AND t5.oocql001='2002' AND t5.oocql002=t0.stje029 AND t5.oocql003='"||g_dlang||"' ",
                 " LEFT JOIN ooefl_t t6 ON t6.ooeflent='"||g_enterprise||"' AND t6.ooefl001=t0.stje030 AND t6.ooefl002='"||g_dlang||"' ",
                 " LEFT JOIN staal_t t7 ON t7.staalent='"||g_enterprise||"' AND t7.staal001=t0.stje031 AND t7.staal002='"||g_dlang||"' ",
                 " LEFT JOIN mhaal_t t8 ON t8.mhaalent='"||g_enterprise||"' AND t8.mhaal001=t0.stje019 AND t8.mhaal002='"||g_dlang||"' ",
                 " LEFT JOIN mhabl_t t9 ON t9.mhablent='"||g_enterprise||"' AND t9.mhabl001=t0.stje019 AND t9.mhabl002=t0.stje020 AND t9.mhabl003='"||g_dlang||"' ",
                 " LEFT JOIN mhacl_t t10 ON t10.mhaclent='"||g_enterprise||"' AND t10.mhacl001=t0.stje019 AND t10.mhacl002=t0.stje020 AND t10.mhacl003=t0.stje021 AND t10.mhacl004='"||g_dlang||"' ",
 
                  "  ",
                  
                  " WHERE t0.stjeent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("stje_t")
   END IF
   IF g_wc2 = " 1=1"  AND (g_wc2_table12 <> " 1=1" OR g_wc2_table13 <> " 1=1")  THEN
      #單身有輸入搜尋條件   
      LET g_sql = "  SELECT DISTINCT t0.stjestus,t0.stje001,t0.stje002,t0.stje003,t0.stje005,t0.stje007, 
                      t0.stje008,t0.stje019,t0.stje020,t0.stje021,t0.stje023,t0.stje024,t0.stje025,
                      t0.stjesite,t0.stje028,t0.stje029,t0.stje011,t0.stje012,t0.stje013,t0.stje030,t0.stje031,
                      t0.stje041,t0.stje042,t0.stje043,t0.stje044,t0.stje045,t0.stje046,t0.stje047,                      
                      t1.pmaal003 ,t2.mhbel003 ,t8.mhaal003,t9.mhabl004,t10.mhacl005,t3.ooefl003 ,t4.rtaxl003 ,t5.oocql004 ,t6.ooefl003 ,t7.staal003 ", 
                  " FROM stje_t t0",
                  "  ",
                  "  LEFT JOIN stjf_t ON stjfent = stjeent AND stje001 = stjf001 AND stjf009 = '2' ", "  ",                  
                  "  LEFT JOIN stjg_t ON stjgent = stjeent AND stjf001 = stjg001 AND stjfseq = stjgseq", "  ", 
                   
                  " LEFT JOIN pmaal_t t1 ON t1.pmaalent='"||g_enterprise||"' AND t1.pmaal001=t0.stje007 AND t1.pmaal002='"||g_dlang||"' ",
                  " LEFT JOIN mhbel_t t2 ON t2.mhbelent='"||g_enterprise||"' AND t2.mhbel001=t0.stje008 AND t2.mhbel002='"||g_dlang||"' ",
                  " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=t0.stjesite AND t3.ooefl002='"||g_dlang||"' ",
                  " LEFT JOIN rtaxl_t t4 ON t4.rtaxlent='"||g_enterprise||"' AND t4.rtaxl001=t0.stje028 AND t4.rtaxl002='"||g_dlang||"' ",
                  " LEFT JOIN oocql_t t5 ON t5.oocqlent='"||g_enterprise||"' AND t5.oocql001='2002' AND t5.oocql002=t0.stje029 AND t5.oocql003='"||g_dlang||"' ",
                  " LEFT JOIN ooefl_t t6 ON t6.ooeflent='"||g_enterprise||"' AND t6.ooefl001=t0.stje030 AND t6.ooefl002='"||g_dlang||"' ",
                  " LEFT JOIN staal_t t7 ON t7.staalent='"||g_enterprise||"' AND t7.staal001=t0.stje031 AND t7.staal002='"||g_dlang||"' ",
                  " LEFT JOIN mhaal_t t8 ON t8.mhaalent='"||g_enterprise||"' AND t8.mhaal001=t0.stje019 AND t8.mhaal002='"||g_dlang||"' ",
                  " LEFT JOIN mhabl_t t9 ON t9.mhablent='"||g_enterprise||"' AND t9.mhabl001=t0.stje019 AND t9.mhabl002=t0.stje020 AND t9.mhabl003='"||g_dlang||"' ",
                  " LEFT JOIN mhacl_t t10 ON t10.mhaclent='"||g_enterprise||"' AND t10.mhacl001=t0.stje019 AND t10.mhacl002=t0.stje020 AND t10.mhacl003=t0.stje021 AND t10.mhacl004='"||g_dlang||"' ",
                  " WHERE t0.stjeent = '" ||g_enterprise|| "' AND ",l_wc," AND ",g_wc2_table12," AND ",g_wc2_table13,cl_sql_add_filter("stje_t")
   END IF
   IF g_wc2 =" 1=1"  AND g_wc2_table12 = " 1=1" AND g_wc2_table13 = " 1=1"  THEN
      #單身無輸入搜尋條件   
      LET g_sql = "  SELECT DISTINCT t0.stjestus,t0.stje001,t0.stje002,t0.stje003,t0.stje005,t0.stje007, 
                     t0.stje008,t0.stje019,t0.stje020,t0.stje021,t0.stje023,t0.stje024,t0.stje025,
                      t0.stjesite,t0.stje028,t0.stje029,t0.stje011,t0.stje012,t0.stje013,t0.stje030,t0.stje031,
                      t0.stje041,t0.stje042,t0.stje043,t0.stje044,t0.stje045,t0.stje046,t0.stje047,  
                      t1.pmaal003 ,t2.mhbel003 ,t8.mhaal003,t9.mhabl004,t10.mhacl005,t3.ooefl003 ,t4.rtaxl003 ,t5.oocql004 ,t6.ooefl003 ,t7.staal003 ", 
                  " FROM stje_t t0",
                  "  ",
                   
                  " LEFT JOIN pmaal_t t1 ON t1.pmaalent='"||g_enterprise||"' AND t1.pmaal001=t0.stje007 AND t1.pmaal002='"||g_dlang||"' ",
                  " LEFT JOIN mhbel_t t2 ON t2.mhbelent='"||g_enterprise||"' AND t2.mhbel001=t0.stje008 AND t2.mhbel002='"||g_dlang||"' ",
                  " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=t0.stjesite AND t3.ooefl002='"||g_dlang||"' ",
                  " LEFT JOIN rtaxl_t t4 ON t4.rtaxlent='"||g_enterprise||"' AND t4.rtaxl001=t0.stje028 AND t4.rtaxl002='"||g_dlang||"' ",
                  " LEFT JOIN oocql_t t5 ON t5.oocqlent='"||g_enterprise||"' AND t5.oocql001='2002' AND t5.oocql002=t0.stje029 AND t5.oocql003='"||g_dlang||"' ",
                  " LEFT JOIN ooefl_t t6 ON t6.ooeflent='"||g_enterprise||"' AND t6.ooefl001=t0.stje030 AND t6.ooefl002='"||g_dlang||"' ",
                  " LEFT JOIN staal_t t7 ON t7.staalent='"||g_enterprise||"' AND t7.staal001=t0.stje031 AND t7.staal002='"||g_dlang||"' ",
                  " LEFT JOIN mhaal_t t8 ON t8.mhaalent='"||g_enterprise||"' AND t8.mhaal001=t0.stje019 AND t8.mhaal002='"||g_dlang||"' ",
                  " LEFT JOIN mhabl_t t9 ON t9.mhablent='"||g_enterprise||"' AND t9.mhabl001=t0.stje019 AND t9.mhabl002=t0.stje020 AND t9.mhabl003='"||g_dlang||"' ",
                  " LEFT JOIN mhacl_t t10 ON t10.mhaclent='"||g_enterprise||"' AND t10.mhacl001=t0.stje019 AND t10.mhacl002=t0.stje020 AND t10.mhacl003=t0.stje021 AND t10.mhacl004='"||g_dlang||"' ",
                  " WHERE t0.stjeent = '" ||g_enterprise|| "' AND ",l_wc, cl_sql_add_filter("stje_t")
   END IF
   #end add-point
   LET g_sql = g_sql, " ORDER BY stje001 ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"stje_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_stje001,g_browser[g_cnt].b_stje002, 
          g_browser[g_cnt].b_stje003,g_browser[g_cnt].b_stje005,g_browser[g_cnt].b_stje007,g_browser[g_cnt].b_stje008, 
          g_browser[g_cnt].b_stje019,g_browser[g_cnt].b_stje020,g_browser[g_cnt].b_stje021,g_browser[g_cnt].b_stje023, 
          g_browser[g_cnt].b_stje024,g_browser[g_cnt].b_stje025,g_browser[g_cnt].b_stjesite,g_browser[g_cnt].b_stje028, 
          g_browser[g_cnt].b_stje029,g_browser[g_cnt].b_stje011,g_browser[g_cnt].b_stje012,g_browser[g_cnt].b_stje013, 
          g_browser[g_cnt].b_stje030,g_browser[g_cnt].b_stje031,g_browser[g_cnt].b_stje041,g_browser[g_cnt].b_stje042, 
          g_browser[g_cnt].b_stje043,g_browser[g_cnt].b_stje044,g_browser[g_cnt].b_stje045,g_browser[g_cnt].b_stje046, 
          g_browser[g_cnt].b_stje047,g_browser[g_cnt].b_stje007_desc,g_browser[g_cnt].b_stje008_desc, 
          g_browser[g_cnt].b_stje019_desc,g_browser[g_cnt].b_stje020_desc,g_browser[g_cnt].b_stje021_desc, 
          g_browser[g_cnt].b_stjesite_desc,g_browser[g_cnt].b_stje028_desc,g_browser[g_cnt].b_stje029_desc, 
          g_browser[g_cnt].b_stje030_desc,g_browser[g_cnt].b_stje031_desc
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         
         #end add-point
      
         #遮罩相關處理
         CALL astm801_browser_mask()
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/open.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/void.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/valid.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_stje001) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
 
END FUNCTION
 
{</section>}
 
{<section id="astm801.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION astm801_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_stje_m.stje001 = g_browser[g_current_idx].b_stje001   
 
   EXECUTE astm801_master_referesh USING g_stje_m.stje001 INTO g_stje_m.stjesite,g_stje_m.stje004,g_stje_m.stje001, 
       g_stje_m.stje002,g_stje_m.stje003,g_stje_m.stje005,g_stje_m.stje006,g_stje_m.stjestus,g_stje_m.stje007, 
       g_stje_m.stje008,g_stje_m.stje010,g_stje_m.stje009,g_stje_m.stje011,g_stje_m.stje012,g_stje_m.stje013, 
       g_stje_m.stje014,g_stje_m.stje015,g_stje_m.stje016,g_stje_m.stje017,g_stje_m.stje018,g_stje_m.stje049, 
       g_stje_m.stje019,g_stje_m.stje020,g_stje_m.stje021,g_stje_m.stje022,g_stje_m.stje027,g_stje_m.stje028, 
       g_stje_m.stje029,g_stje_m.stje026,g_stje_m.stje023,g_stje_m.stje024,g_stje_m.stje025,g_stje_m.stje030, 
       g_stje_m.stje031,g_stje_m.stje032,g_stje_m.stje033,g_stje_m.stje034,g_stje_m.stje035,g_stje_m.stje036, 
       g_stje_m.stje037,g_stje_m.stje038,g_stje_m.stje039,g_stje_m.stje040,g_stje_m.stje041,g_stje_m.stje042, 
       g_stje_m.stje043,g_stje_m.stje044,g_stje_m.stje045,g_stje_m.stje046,g_stje_m.stje047,g_stje_m.stje048, 
       g_stje_m.stje050,g_stje_m.stje051,g_stje_m.stje052,g_stje_m.stje053,g_stje_m.stjeownid,g_stje_m.stjeowndp, 
       g_stje_m.stjecrtid,g_stje_m.stjecrtdp,g_stje_m.stjecrtdt,g_stje_m.stjemodid,g_stje_m.stjemoddt, 
       g_stje_m.stjecnfid,g_stje_m.stjecnfdt,g_stje_m.stjesite_desc,g_stje_m.stje003_desc,g_stje_m.stje007_desc, 
       g_stje_m.stje008_desc,g_stje_m.stje017_desc,g_stje_m.stje018_desc,g_stje_m.stje019_desc,g_stje_m.stje020_desc, 
       g_stje_m.stje021_desc,g_stje_m.stje022_desc,g_stje_m.stje027_desc,g_stje_m.stje028_desc,g_stje_m.stje029_desc, 
       g_stje_m.stje030_desc,g_stje_m.stje031_desc,g_stje_m.stje032_desc,g_stje_m.stje034_desc,g_stje_m.stje035_desc, 
       g_stje_m.stje036_desc,g_stje_m.stje038_desc,g_stje_m.stje039_desc,g_stje_m.stje051_desc,g_stje_m.stje053_desc, 
       g_stje_m.stjeownid_desc,g_stje_m.stjeowndp_desc,g_stje_m.stjemodid_desc
   
   CALL astm801_stje_t_mask()
   CALL astm801_show()
      
END FUNCTION
 
{</section>}
 
{<section id="astm801.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION astm801_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail11",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail13",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail5",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail6",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail7",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail9",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="astm801.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION astm801_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_stje001 = g_stje_m.stje001 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="astm801.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION astm801_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   DEFINE  l_ooef019             LIKE ooef_t.ooef019 #稅區
   DEFINE  l_success             LIKE type_t.num5
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   CALL g_stjf12_d.clear()
   CALL g_stjf15_d.clear()
   CALL g_stjf14_d.clear()
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_stje_m.* TO NULL
   CALL g_stjf_d.clear()        
   CALL g_stjf11_d.clear() 
   CALL g_stjf13_d.clear() 
   CALL g_stjf2_d.clear() 
   CALL g_stjf3_d.clear() 
   CALL g_stjf4_d.clear() 
   CALL g_stjf5_d.clear() 
   CALL g_stjf6_d.clear() 
   CALL g_stjf7_d.clear() 
   CALL g_stjf9_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
   INITIALIZE g_wc2_table4 TO NULL
 
   INITIALIZE g_wc2_table5 TO NULL
 
   INITIALIZE g_wc2_table6 TO NULL
 
   INITIALIZE g_wc2_table7 TO NULL
 
   INITIALIZE g_wc2_table8 TO NULL
 
   INITIALIZE g_wc2_table9 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON stjesite,stje004,stje001,stje002,stje003,stje005,stje006,stjestus,stje007, 
          stje008,stje010,stje009,stje011,stje012,stje013,stje014,stje015,stje016,stje017,stje018,stje049, 
          stje019,stje020,stje021,stje022,stje027,stje028,stje029,stje026,stje023,stje024,stje025,stje030, 
          stje031,stje032,stje033,stje034,stje035,stje036,stje037,stje038,stje039,stje040,stje041,stje042, 
          stje043,stje044,stje045,stje046,stje047,stje048,stje050,stje051,stje052,stje053,stjeownid, 
          stjeowndp,stjecrtid,stjecrtdp,stjecrtdt,stjemodid,stjemoddt,stjecnfid,stjecnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<stjecrtdt>>----
         AFTER FIELD stjecrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<stjemoddt>>----
         AFTER FIELD stjemoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<stjecnfdt>>----
         AFTER FIELD stjecnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<stjepstdt>>----
 
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.stjesite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjesite
            #add-point:ON ACTION controlp INFIELD stjesite name="construct.c.stjesite"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'stjesite',g_site,'c')
            CALL q_ooef001_24()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stjesite  #顯示到畫面上
            NEXT FIELD stjesite                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjesite
            #add-point:BEFORE FIELD stjesite name="construct.b.stjesite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjesite
            
            #add-point:AFTER FIELD stjesite name="construct.a.stjesite"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje004
            #add-point:BEFORE FIELD stje004 name="construct.b.stje004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje004
            
            #add-point:AFTER FIELD stje004 name="construct.a.stje004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje004
            #add-point:ON ACTION controlp INFIELD stje004 name="construct.c.stje004"
            
            #END add-point
 
 
         #Ctrlp:construct.c.stje001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje001
            #add-point:ON ACTION controlp INFIELD stje001 name="construct.c.stje001"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stje001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stje001  #顯示到畫面上
            NEXT FIELD stje001                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje001
            #add-point:BEFORE FIELD stje001 name="construct.b.stje001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje001
            
            #add-point:AFTER FIELD stje001 name="construct.a.stje001"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje002
            #add-point:BEFORE FIELD stje002 name="construct.b.stje002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje002
            
            #add-point:AFTER FIELD stje002 name="construct.a.stje002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje002
            #add-point:ON ACTION controlp INFIELD stje002 name="construct.c.stje002"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje003
            #add-point:BEFORE FIELD stje003 name="construct.b.stje003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje003
            
            #add-point:AFTER FIELD stje003 name="construct.a.stje003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje003
            #add-point:ON ACTION controlp INFIELD stje003 name="construct.c.stje003"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stha001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stje003  #顯示到畫面上
            NEXT FIELD stje003                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje005
            #add-point:BEFORE FIELD stje005 name="construct.b.stje005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje005
            
            #add-point:AFTER FIELD stje005 name="construct.a.stje005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje005
            #add-point:ON ACTION controlp INFIELD stje005 name="construct.c.stje005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje006
            #add-point:BEFORE FIELD stje006 name="construct.b.stje006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje006
            
            #add-point:AFTER FIELD stje006 name="construct.a.stje006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje006
            #add-point:ON ACTION controlp INFIELD stje006 name="construct.c.stje006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjestus
            #add-point:BEFORE FIELD stjestus name="construct.b.stjestus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjestus
            
            #add-point:AFTER FIELD stjestus name="construct.a.stjestus"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stjestus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjestus
            #add-point:ON ACTION controlp INFIELD stjestus name="construct.c.stjestus"
            
            #END add-point
 
 
         #Ctrlp:construct.c.stje007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje007
            #add-point:ON ACTION controlp INFIELD stje007 name="construct.c.stje007"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "('1','3')" 
            CALL q_pmaa001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stje007  #顯示到畫面上
            NEXT FIELD stje007                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje007
            #add-point:BEFORE FIELD stje007 name="construct.b.stje007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje007
            
            #add-point:AFTER FIELD stje007 name="construct.a.stje007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje008
            #add-point:ON ACTION controlp INFIELD stje008 name="construct.c.stje008"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_mhbe001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stje008  #顯示到畫面上
            NEXT FIELD stje008                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje008
            #add-point:BEFORE FIELD stje008 name="construct.b.stje008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje008
            
            #add-point:AFTER FIELD stje008 name="construct.a.stje008"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje010
            #add-point:BEFORE FIELD stje010 name="construct.b.stje010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje010
            
            #add-point:AFTER FIELD stje010 name="construct.a.stje010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje010
            #add-point:ON ACTION controlp INFIELD stje010 name="construct.c.stje010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje009
            #add-point:BEFORE FIELD stje009 name="construct.b.stje009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje009
            
            #add-point:AFTER FIELD stje009 name="construct.a.stje009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje009
            #add-point:ON ACTION controlp INFIELD stje009 name="construct.c.stje009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje011
            #add-point:BEFORE FIELD stje011 name="construct.b.stje011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje011
            
            #add-point:AFTER FIELD stje011 name="construct.a.stje011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje011
            #add-point:ON ACTION controlp INFIELD stje011 name="construct.c.stje011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje012
            #add-point:BEFORE FIELD stje012 name="construct.b.stje012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje012
            
            #add-point:AFTER FIELD stje012 name="construct.a.stje012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje012
            #add-point:ON ACTION controlp INFIELD stje012 name="construct.c.stje012"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje013
            #add-point:BEFORE FIELD stje013 name="construct.b.stje013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje013
            
            #add-point:AFTER FIELD stje013 name="construct.a.stje013"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje013
            #add-point:ON ACTION controlp INFIELD stje013 name="construct.c.stje013"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje014
            #add-point:BEFORE FIELD stje014 name="construct.b.stje014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje014
            
            #add-point:AFTER FIELD stje014 name="construct.a.stje014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje014
            #add-point:ON ACTION controlp INFIELD stje014 name="construct.c.stje014"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje015
            #add-point:BEFORE FIELD stje015 name="construct.b.stje015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje015
            
            #add-point:AFTER FIELD stje015 name="construct.a.stje015"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje015
            #add-point:ON ACTION controlp INFIELD stje015 name="construct.c.stje015"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje016
            #add-point:BEFORE FIELD stje016 name="construct.b.stje016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje016
            
            #add-point:AFTER FIELD stje016 name="construct.a.stje016"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje016
            #add-point:ON ACTION controlp INFIELD stje016 name="construct.c.stje016"
            
            #END add-point
 
 
         #Ctrlp:construct.c.stje017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje017
            #add-point:ON ACTION controlp INFIELD stje017 name="construct.c.stje017"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stje017  #顯示到畫面上
            NEXT FIELD stje017                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje017
            #add-point:BEFORE FIELD stje017 name="construct.b.stje017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje017
            
            #add-point:AFTER FIELD stje017 name="construct.a.stje017"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje018
            #add-point:ON ACTION controlp INFIELD stje018 name="construct.c.stje018"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stje018  #顯示到畫面上
            NEXT FIELD stje018                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje018
            #add-point:BEFORE FIELD stje018 name="construct.b.stje018"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje018
            
            #add-point:AFTER FIELD stje018 name="construct.a.stje018"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje049
            #add-point:BEFORE FIELD stje049 name="construct.b.stje049"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje049
            
            #add-point:AFTER FIELD stje049 name="construct.a.stje049"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje049
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje049
            #add-point:ON ACTION controlp INFIELD stje049 name="construct.c.stje049"
            
            #END add-point
 
 
         #Ctrlp:construct.c.stje019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje019
            #add-point:ON ACTION controlp INFIELD stje019 name="construct.c.stje019"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_mhaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stje019  #顯示到畫面上
            NEXT FIELD stje019                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje019
            #add-point:BEFORE FIELD stje019 name="construct.b.stje019"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje019
            
            #add-point:AFTER FIELD stje019 name="construct.a.stje019"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje020
            #add-point:ON ACTION controlp INFIELD stje020 name="construct.c.stje020"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_mhab002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stje020  #顯示到畫面上
            NEXT FIELD stje020                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje020
            #add-point:BEFORE FIELD stje020 name="construct.b.stje020"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje020
            
            #add-point:AFTER FIELD stje020 name="construct.a.stje020"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje021
            #add-point:ON ACTION controlp INFIELD stje021 name="construct.c.stje021"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_mhac003()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stje021  #顯示到畫面上
            NEXT FIELD stje021                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje021
            #add-point:BEFORE FIELD stje021 name="construct.b.stje021"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje021
            
            #add-point:AFTER FIELD stje021 name="construct.a.stje021"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje022
            #add-point:BEFORE FIELD stje022 name="construct.b.stje022"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje022
            
            #add-point:AFTER FIELD stje022 name="construct.a.stje022"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje022
            #add-point:ON ACTION controlp INFIELD stje022 name="construct.c.stje022"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '2144'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stje022  #顯示到畫面上
            NEXT FIELD stje022    
            #END add-point
 
 
         #Ctrlp:construct.c.stje027
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje027
            #add-point:ON ACTION controlp INFIELD stje027 name="construct.c.stje027"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = cl_get_para(g_enterprise,g_site,'E-CIR-0001') #
            CALL q_rtax001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stje027  #顯示到畫面上
            NEXT FIELD stje027                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje027
            #add-point:BEFORE FIELD stje027 name="construct.b.stje027"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje027
            
            #add-point:AFTER FIELD stje027 name="construct.a.stje027"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje028
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje028
            #add-point:ON ACTION controlp INFIELD stje028 name="construct.c.stje028"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = cl_get_para(g_enterprise,g_site,'E-CIR-0001') #
            CALL q_rtax001_3()                              #呼叫開窗
            DISPLAY g_qryparam.return1 TO stje028  #顯示到畫面上
            NEXT FIELD stje028                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje028
            #add-point:BEFORE FIELD stje028 name="construct.b.stje028"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje028
            
            #add-point:AFTER FIELD stje028 name="construct.a.stje028"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje029
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje029
            #add-point:ON ACTION controlp INFIELD stje029 name="construct.c.stje029"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002_2002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stje029  #顯示到畫面上
            NEXT FIELD stje029                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje029
            #add-point:BEFORE FIELD stje029 name="construct.b.stje029"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje029
            
            #add-point:AFTER FIELD stje029 name="construct.a.stje029"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje026
            #add-point:BEFORE FIELD stje026 name="construct.b.stje026"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje026
            
            #add-point:AFTER FIELD stje026 name="construct.a.stje026"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje026
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje026
            #add-point:ON ACTION controlp INFIELD stje026 name="construct.c.stje026"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje023
            #add-point:BEFORE FIELD stje023 name="construct.b.stje023"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje023
            
            #add-point:AFTER FIELD stje023 name="construct.a.stje023"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje023
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje023
            #add-point:ON ACTION controlp INFIELD stje023 name="construct.c.stje023"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje024
            #add-point:BEFORE FIELD stje024 name="construct.b.stje024"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje024
            
            #add-point:AFTER FIELD stje024 name="construct.a.stje024"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje024
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje024
            #add-point:ON ACTION controlp INFIELD stje024 name="construct.c.stje024"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje025
            #add-point:BEFORE FIELD stje025 name="construct.b.stje025"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje025
            
            #add-point:AFTER FIELD stje025 name="construct.a.stje025"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje025
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje025
            #add-point:ON ACTION controlp INFIELD stje025 name="construct.c.stje025"
            
            #END add-point
 
 
         #Ctrlp:construct.c.stje030
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje030
            #add-point:ON ACTION controlp INFIELD stje030 name="construct.c.stje030"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001_23()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stje030  #顯示到畫面上
            NEXT FIELD stje030                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje030
            #add-point:BEFORE FIELD stje030 name="construct.b.stje030"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje030
            
            #add-point:AFTER FIELD stje030 name="construct.a.stje030"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje031
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje031
            #add-point:ON ACTION controlp INFIELD stje031 name="construct.c.stje031"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_staa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stje031  #顯示到畫面上
            NEXT FIELD stje031                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje031
            #add-point:BEFORE FIELD stje031 name="construct.b.stje031"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje031
            
            #add-point:AFTER FIELD stje031 name="construct.a.stje031"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje032
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje032
            #add-point:ON ACTION controlp INFIELD stje032 name="construct.c.stje032"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '2060'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stje032  #顯示到畫面上
            NEXT FIELD stje032                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje032
            #add-point:BEFORE FIELD stje032 name="construct.b.stje032"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje032
            
            #add-point:AFTER FIELD stje032 name="construct.a.stje032"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje033
            #add-point:BEFORE FIELD stje033 name="construct.b.stje033"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje033
            
            #add-point:AFTER FIELD stje033 name="construct.a.stje033"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje033
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje033
            #add-point:ON ACTION controlp INFIELD stje033 name="construct.c.stje033"
            
            #END add-point
 
 
         #Ctrlp:construct.c.stje034
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje034
            #add-point:ON ACTION controlp INFIELD stje034 name="construct.c.stje034"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooib002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stje034  #顯示到畫面上
            NEXT FIELD stje034                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje034
            #add-point:BEFORE FIELD stje034 name="construct.b.stje034"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje034
            
            #add-point:AFTER FIELD stje034 name="construct.a.stje034"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje035
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje035
            #add-point:ON ACTION controlp INFIELD stje035 name="construct.c.stje035"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '238'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stje035  #顯示到畫面上
            NEXT FIELD stje035                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje035
            #add-point:BEFORE FIELD stje035 name="construct.b.stje035"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje035
            
            #add-point:AFTER FIELD stje035 name="construct.a.stje035"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje036
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje036
            #add-point:ON ACTION controlp INFIELD stje036 name="construct.c.stje036"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site 
            CALL q_ooaj002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stje036  #顯示到畫面上
            NEXT FIELD stje036                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje036
            #add-point:BEFORE FIELD stje036 name="construct.b.stje036"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje036
            
            #add-point:AFTER FIELD stje036 name="construct.a.stje036"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje037
            #add-point:BEFORE FIELD stje037 name="construct.b.stje037"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje037
            
            #add-point:AFTER FIELD stje037 name="construct.a.stje037"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje037
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje037
            #add-point:ON ACTION controlp INFIELD stje037 name="construct.c.stje037"
            
            #END add-point
 
 
         #Ctrlp:construct.c.stje038
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje038
            #add-point:ON ACTION controlp INFIELD stje038 name="construct.c.stje038"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            CALL q_oodb002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stje038  #顯示到畫面上
            NEXT FIELD stje038                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje038
            #add-point:BEFORE FIELD stje038 name="construct.b.stje038"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje038
            
            #add-point:AFTER FIELD stje038 name="construct.a.stje038"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje039
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje039
            #add-point:ON ACTION controlp INFIELD stje039 name="construct.c.stje039"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET l_ooef019 = ''
            CALL s_tax_get_ooef019(g_site) RETURNING l_success,l_ooef019
            LET g_qryparam.arg1 = l_ooef019
            LET g_qryparam.arg2 = '1'
            CALL q_isac002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stje039  #顯示到畫面上
            NEXT FIELD stje039                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje039
            #add-point:BEFORE FIELD stje039 name="construct.b.stje039"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje039
            
            #add-point:AFTER FIELD stje039 name="construct.a.stje039"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje040
            #add-point:BEFORE FIELD stje040 name="construct.b.stje040"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje040
            
            #add-point:AFTER FIELD stje040 name="construct.a.stje040"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje040
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje040
            #add-point:ON ACTION controlp INFIELD stje040 name="construct.c.stje040"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje041
            #add-point:BEFORE FIELD stje041 name="construct.b.stje041"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje041
            
            #add-point:AFTER FIELD stje041 name="construct.a.stje041"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje041
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje041
            #add-point:ON ACTION controlp INFIELD stje041 name="construct.c.stje041"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje042
            #add-point:BEFORE FIELD stje042 name="construct.b.stje042"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje042
            
            #add-point:AFTER FIELD stje042 name="construct.a.stje042"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje042
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje042
            #add-point:ON ACTION controlp INFIELD stje042 name="construct.c.stje042"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje043
            #add-point:BEFORE FIELD stje043 name="construct.b.stje043"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje043
            
            #add-point:AFTER FIELD stje043 name="construct.a.stje043"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje043
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje043
            #add-point:ON ACTION controlp INFIELD stje043 name="construct.c.stje043"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje044
            #add-point:BEFORE FIELD stje044 name="construct.b.stje044"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje044
            
            #add-point:AFTER FIELD stje044 name="construct.a.stje044"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje044
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje044
            #add-point:ON ACTION controlp INFIELD stje044 name="construct.c.stje044"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje045
            #add-point:BEFORE FIELD stje045 name="construct.b.stje045"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje045
            
            #add-point:AFTER FIELD stje045 name="construct.a.stje045"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje045
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje045
            #add-point:ON ACTION controlp INFIELD stje045 name="construct.c.stje045"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje046
            #add-point:BEFORE FIELD stje046 name="construct.b.stje046"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje046
            
            #add-point:AFTER FIELD stje046 name="construct.a.stje046"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje046
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje046
            #add-point:ON ACTION controlp INFIELD stje046 name="construct.c.stje046"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje047
            #add-point:BEFORE FIELD stje047 name="construct.b.stje047"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje047
            
            #add-point:AFTER FIELD stje047 name="construct.a.stje047"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje047
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje047
            #add-point:ON ACTION controlp INFIELD stje047 name="construct.c.stje047"
            
            #END add-point
 
 
         #Ctrlp:construct.c.stje048
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje048
            #add-point:ON ACTION controlp INFIELD stje048 name="construct.c.stje048"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_sticdocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stje048  #顯示到畫面上
            NEXT FIELD stje048                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje048
            #add-point:BEFORE FIELD stje048 name="construct.b.stje048"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje048
            
            #add-point:AFTER FIELD stje048 name="construct.a.stje048"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje050
            #add-point:BEFORE FIELD stje050 name="construct.b.stje050"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje050
            
            #add-point:AFTER FIELD stje050 name="construct.a.stje050"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje050
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje050
            #add-point:ON ACTION controlp INFIELD stje050 name="construct.c.stje050"
            
            #END add-point
 
 
         #Ctrlp:construct.c.stje051
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje051
            #add-point:ON ACTION controlp INFIELD stje051 name="construct.c.stje051"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stje051  #顯示到畫面上
            NEXT FIELD stje051                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje051
            #add-point:BEFORE FIELD stje051 name="construct.b.stje051"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje051
            
            #add-point:AFTER FIELD stje051 name="construct.a.stje051"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje052
            #add-point:BEFORE FIELD stje052 name="construct.b.stje052"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje052
            
            #add-point:AFTER FIELD stje052 name="construct.a.stje052"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stje052
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje052
            #add-point:ON ACTION controlp INFIELD stje052 name="construct.c.stje052"
            
            #END add-point
 
 
         #Ctrlp:construct.c.stje053
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje053
            #add-point:ON ACTION controlp INFIELD stje053 name="construct.c.stje053"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stje053  #顯示到畫面上
            NEXT FIELD stje053                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje053
            #add-point:BEFORE FIELD stje053 name="construct.b.stje053"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje053
            
            #add-point:AFTER FIELD stje053 name="construct.a.stje053"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stjeownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjeownid
            #add-point:ON ACTION controlp INFIELD stjeownid name="construct.c.stjeownid"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stjeownid  #顯示到畫面上
            NEXT FIELD stjeownid                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjeownid
            #add-point:BEFORE FIELD stjeownid name="construct.b.stjeownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjeownid
            
            #add-point:AFTER FIELD stjeownid name="construct.a.stjeownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stjeowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjeowndp
            #add-point:ON ACTION controlp INFIELD stjeowndp name="construct.c.stjeowndp"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stjeowndp  #顯示到畫面上
            NEXT FIELD stjeowndp                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjeowndp
            #add-point:BEFORE FIELD stjeowndp name="construct.b.stjeowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjeowndp
            
            #add-point:AFTER FIELD stjeowndp name="construct.a.stjeowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stjecrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjecrtid
            #add-point:ON ACTION controlp INFIELD stjecrtid name="construct.c.stjecrtid"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stjecrtid  #顯示到畫面上
            NEXT FIELD stjecrtid                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjecrtid
            #add-point:BEFORE FIELD stjecrtid name="construct.b.stjecrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjecrtid
            
            #add-point:AFTER FIELD stjecrtid name="construct.a.stjecrtid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stjecrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjecrtdp
            #add-point:ON ACTION controlp INFIELD stjecrtdp name="construct.c.stjecrtdp"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stjecrtdp  #顯示到畫面上
            NEXT FIELD stjecrtdp                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjecrtdp
            #add-point:BEFORE FIELD stjecrtdp name="construct.b.stjecrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjecrtdp
            
            #add-point:AFTER FIELD stjecrtdp name="construct.a.stjecrtdp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjecrtdt
            #add-point:BEFORE FIELD stjecrtdt name="construct.b.stjecrtdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.stjemodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjemodid
            #add-point:ON ACTION controlp INFIELD stjemodid name="construct.c.stjemodid"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stjemodid  #顯示到畫面上
            NEXT FIELD stjemodid                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjemodid
            #add-point:BEFORE FIELD stjemodid name="construct.b.stjemodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjemodid
            
            #add-point:AFTER FIELD stjemodid name="construct.a.stjemodid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjemoddt
            #add-point:BEFORE FIELD stjemoddt name="construct.b.stjemoddt"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjecnfid
            #add-point:BEFORE FIELD stjecnfid name="construct.b.stjecnfid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjecnfid
            
            #add-point:AFTER FIELD stjecnfid name="construct.a.stjecnfid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stjecnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjecnfid
            #add-point:ON ACTION controlp INFIELD stjecnfid name="construct.c.stjecnfid"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stjecnfid  #顯示到畫面上
            NEXT FIELD stjecnfid                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjecnfdt
            #add-point:BEFORE FIELD stjecnfdt name="construct.b.stjecnfdt"
            
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON stjfseq,stjf002,stjf003,stjf021,stjf004,stjf022,stjf005,stjf006,stjf007, 
          stjf008,stjf009,stjf010,stjf011,stjf018,stjf016,stjf017,stjf020,stjf023,stjf024,stjf025,stjfsite, 
          stjfunit
           FROM s_detail1[1].stjfseq,s_detail1[1].stjf002,s_detail1[1].stjf003,s_detail1[1].stjf021, 
               s_detail1[1].stjf004,s_detail1[1].stjf022,s_detail1[1].stjf005,s_detail1[1].stjf006,s_detail1[1].stjf007, 
               s_detail1[1].stjf008,s_detail1[1].stjf009,s_detail1[1].stjf010,s_detail1[1].stjf011,s_detail1[1].stjf018, 
               s_detail1[1].stjf016,s_detail1[1].stjf017,s_detail1[1].stjf020,s_detail1[1].stjf023,s_detail1[1].stjf024, 
               s_detail1[1].stjf025,s_detail1[1].stjfsite,s_detail1[1].stjfunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjfseq
            #add-point:BEFORE FIELD stjfseq name="construct.b.page1.stjfseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjfseq
            
            #add-point:AFTER FIELD stjfseq name="construct.a.page1.stjfseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stjfseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjfseq
            #add-point:ON ACTION controlp INFIELD stjfseq name="construct.c.page1.stjfseq"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf002
            #add-point:BEFORE FIELD stjf002 name="construct.b.page1.stjf002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf002
            
            #add-point:AFTER FIELD stjf002 name="construct.a.page1.stjf002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stjf002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf002
            #add-point:ON ACTION controlp INFIELD stjf002 name="construct.c.page1.stjf002"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.stjf003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf003
            #add-point:ON ACTION controlp INFIELD stjf003 name="construct.c.page1.stjf003"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sthisite = '",g_site,"' AND EXISTS (SELECT 1 FROM sthj_t WHERE sthjent = sthient AND sthj001 =sthi002 AND sthj010 <> '2' )"
            CALL q_sthi002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stjf003  #顯示到畫面上
            NEXT FIELD stjf003                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf003
            #add-point:BEFORE FIELD stjf003 name="construct.b.page1.stjf003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf003
            
            #add-point:AFTER FIELD stjf003 name="construct.a.page1.stjf003"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf021
            #add-point:BEFORE FIELD stjf021 name="construct.b.page1.stjf021"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf021
            
            #add-point:AFTER FIELD stjf021 name="construct.a.page1.stjf021"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stjf021
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf021
            #add-point:ON ACTION controlp INFIELD stjf021 name="construct.c.page1.stjf021"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.stjf004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf004
            #add-point:ON ACTION controlp INFIELD stjf004 name="construct.c.page1.stjf004"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stae001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stjf004  #顯示到畫面上
            NEXT FIELD stjf004                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf004
            #add-point:BEFORE FIELD stjf004 name="construct.b.page1.stjf004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf004
            
            #add-point:AFTER FIELD stjf004 name="construct.a.page1.stjf004"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf022
            #add-point:BEFORE FIELD stjf022 name="construct.b.page1.stjf022"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf022
            
            #add-point:AFTER FIELD stjf022 name="construct.a.page1.stjf022"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stjf022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf022
            #add-point:ON ACTION controlp INFIELD stjf022 name="construct.c.page1.stjf022"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_mhad001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stjf022  #顯示到畫面上
            NEXT FIELD stjf022  
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf005
            #add-point:BEFORE FIELD stjf005 name="construct.b.page1.stjf005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf005
            
            #add-point:AFTER FIELD stjf005 name="construct.a.page1.stjf005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stjf005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf005
            #add-point:ON ACTION controlp INFIELD stjf005 name="construct.c.page1.stjf005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf006
            #add-point:BEFORE FIELD stjf006 name="construct.b.page1.stjf006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf006
            
            #add-point:AFTER FIELD stjf006 name="construct.a.page1.stjf006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stjf006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf006
            #add-point:ON ACTION controlp INFIELD stjf006 name="construct.c.page1.stjf006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf007
            #add-point:BEFORE FIELD stjf007 name="construct.b.page1.stjf007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf007
            
            #add-point:AFTER FIELD stjf007 name="construct.a.page1.stjf007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stjf007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf007
            #add-point:ON ACTION controlp INFIELD stjf007 name="construct.c.page1.stjf007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf008
            #add-point:BEFORE FIELD stjf008 name="construct.b.page1.stjf008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf008
            
            #add-point:AFTER FIELD stjf008 name="construct.a.page1.stjf008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stjf008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf008
            #add-point:ON ACTION controlp INFIELD stjf008 name="construct.c.page1.stjf008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf009
            #add-point:BEFORE FIELD stjf009 name="construct.b.page1.stjf009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf009
            
            #add-point:AFTER FIELD stjf009 name="construct.a.page1.stjf009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stjf009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf009
            #add-point:ON ACTION controlp INFIELD stjf009 name="construct.c.page1.stjf009"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.stjf010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf010
            #add-point:ON ACTION controlp INFIELD stjf010 name="construct.c.page1.stjf010"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stab001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stjf010  #顯示到畫面上
            NEXT FIELD stjf010                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf010
            #add-point:BEFORE FIELD stjf010 name="construct.b.page1.stjf010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf010
            
            #add-point:AFTER FIELD stjf010 name="construct.a.page1.stjf010"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf011
            #add-point:BEFORE FIELD stjf011 name="construct.b.page1.stjf011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf011
            
            #add-point:AFTER FIELD stjf011 name="construct.a.page1.stjf011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stjf011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf011
            #add-point:ON ACTION controlp INFIELD stjf011 name="construct.c.page1.stjf011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf018
            #add-point:BEFORE FIELD stjf018 name="construct.b.page1.stjf018"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf018
            
            #add-point:AFTER FIELD stjf018 name="construct.a.page1.stjf018"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stjf018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf018
            #add-point:ON ACTION controlp INFIELD stjf018 name="construct.c.page1.stjf018"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf016
            #add-point:BEFORE FIELD stjf016 name="construct.b.page1.stjf016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf016
            
            #add-point:AFTER FIELD stjf016 name="construct.a.page1.stjf016"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stjf016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf016
            #add-point:ON ACTION controlp INFIELD stjf016 name="construct.c.page1.stjf016"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf017
            #add-point:BEFORE FIELD stjf017 name="construct.b.page1.stjf017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf017
            
            #add-point:AFTER FIELD stjf017 name="construct.a.page1.stjf017"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stjf017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf017
            #add-point:ON ACTION controlp INFIELD stjf017 name="construct.c.page1.stjf017"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf020
            #add-point:BEFORE FIELD stjf020 name="construct.b.page1.stjf020"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf020
            
            #add-point:AFTER FIELD stjf020 name="construct.a.page1.stjf020"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stjf020
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf020
            #add-point:ON ACTION controlp INFIELD stjf020 name="construct.c.page1.stjf020"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf023
            #add-point:BEFORE FIELD stjf023 name="construct.b.page1.stjf023"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf023
            
            #add-point:AFTER FIELD stjf023 name="construct.a.page1.stjf023"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stjf023
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf023
            #add-point:ON ACTION controlp INFIELD stjf023 name="construct.c.page1.stjf023"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.stjf024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf024
            #add-point:ON ACTION controlp INFIELD stjf024 name="construct.c.page1.stjf024"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
#            IF s_aooi500_setpoint(g_prog,'stjf024') THEN
#               LET g_qryparam.where = s_aooi500_q_where(g_prog,'stjf024',g_site,'c')
#               CALL q_ooef001_24() 
#            ELSE
#               CALL q_ooef001_12()                           #呼叫開窗
#            END IF
            CALL q_stif024()
            DISPLAY g_qryparam.return1 TO stjf024  #顯示到畫面上
            NEXT FIELD stjf024                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf024
            #add-point:BEFORE FIELD stjf024 name="construct.b.page1.stjf024"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf024
            
            #add-point:AFTER FIELD stjf024 name="construct.a.page1.stjf024"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf025
            #add-point:BEFORE FIELD stjf025 name="construct.b.page1.stjf025"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf025
            
            #add-point:AFTER FIELD stjf025 name="construct.a.page1.stjf025"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stjf025
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf025
            #add-point:ON ACTION controlp INFIELD stjf025 name="construct.c.page1.stjf025"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjfsite
            #add-point:BEFORE FIELD stjfsite name="construct.b.page1.stjfsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjfsite
            
            #add-point:AFTER FIELD stjfsite name="construct.a.page1.stjfsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stjfsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjfsite
            #add-point:ON ACTION controlp INFIELD stjfsite name="construct.c.page1.stjfsite"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjfunit
            #add-point:BEFORE FIELD stjfunit name="construct.b.page1.stjfunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjfunit
            
            #add-point:AFTER FIELD stjfunit name="construct.a.page1.stjfunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stjfunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjfunit
            #add-point:ON ACTION controlp INFIELD stjfunit name="construct.c.page1.stjfunit"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON stjnsite,stjnunit,stjnseq,stjn002,stjn004,stjn003,stjn005,stjn006,stjn007, 
          stjn008,stjn009,stjn010
           FROM s_detail11[1].stjnsite,s_detail11[1].stjnunit,s_detail11[1].stjnseq,s_detail11[1].stjn002, 
               s_detail11[1].stjn004,s_detail11[1].stjn003,s_detail11[1].stjn005,s_detail11[1].stjn006, 
               s_detail11[1].stjn007,s_detail11[1].stjn008,s_detail11[1].stjn009,s_detail11[1].stjn010 
 
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body2.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjnsite
            #add-point:BEFORE FIELD stjnsite name="construct.b.page11.stjnsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjnsite
            
            #add-point:AFTER FIELD stjnsite name="construct.a.page11.stjnsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page11.stjnsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjnsite
            #add-point:ON ACTION controlp INFIELD stjnsite name="construct.c.page11.stjnsite"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjnunit
            #add-point:BEFORE FIELD stjnunit name="construct.b.page11.stjnunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjnunit
            
            #add-point:AFTER FIELD stjnunit name="construct.a.page11.stjnunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page11.stjnunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjnunit
            #add-point:ON ACTION controlp INFIELD stjnunit name="construct.c.page11.stjnunit"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjnseq
            #add-point:BEFORE FIELD stjnseq name="construct.b.page11.stjnseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjnseq
            
            #add-point:AFTER FIELD stjnseq name="construct.a.page11.stjnseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page11.stjnseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjnseq
            #add-point:ON ACTION controlp INFIELD stjnseq name="construct.c.page11.stjnseq"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjn002
            #add-point:BEFORE FIELD stjn002 name="construct.b.page11.stjn002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjn002
            
            #add-point:AFTER FIELD stjn002 name="construct.a.page11.stjn002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page11.stjn002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjn002
            #add-point:ON ACTION controlp INFIELD stjn002 name="construct.c.page11.stjn002"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjn004
            #add-point:BEFORE FIELD stjn004 name="construct.b.page11.stjn004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjn004
            
            #add-point:AFTER FIELD stjn004 name="construct.a.page11.stjn004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page11.stjn004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjn004
            #add-point:ON ACTION controlp INFIELD stjn004 name="construct.c.page11.stjn004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjn003
            #add-point:BEFORE FIELD stjn003 name="construct.b.page11.stjn003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjn003
            
            #add-point:AFTER FIELD stjn003 name="construct.a.page11.stjn003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page11.stjn003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjn003
            #add-point:ON ACTION controlp INFIELD stjn003 name="construct.c.page11.stjn003"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page11.stjn005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjn005
            #add-point:ON ACTION controlp INFIELD stjn005 name="construct.c.page11.stjn005"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stae001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stjn005  #顯示到畫面上
            NEXT FIELD stjn005                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjn005
            #add-point:BEFORE FIELD stjn005 name="construct.b.page11.stjn005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjn005
            
            #add-point:AFTER FIELD stjn005 name="construct.a.page11.stjn005"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjn006
            #add-point:BEFORE FIELD stjn006 name="construct.b.page11.stjn006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjn006
            
            #add-point:AFTER FIELD stjn006 name="construct.a.page11.stjn006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page11.stjn006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjn006
            #add-point:ON ACTION controlp INFIELD stjn006 name="construct.c.page11.stjn006"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page11.stjn007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjn007
            #add-point:ON ACTION controlp INFIELD stjn007 name="construct.c.page11.stjn007"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " stiesite = '",g_site,"' "
            CALL q_stin007()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stjn007  #顯示到畫面上
            NEXT FIELD stjn007                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjn007
            #add-point:BEFORE FIELD stjn007 name="construct.b.page11.stjn007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjn007
            
            #add-point:AFTER FIELD stjn007 name="construct.a.page11.stjn007"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjn008
            #add-point:BEFORE FIELD stjn008 name="construct.b.page11.stjn008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjn008
            
            #add-point:AFTER FIELD stjn008 name="construct.a.page11.stjn008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page11.stjn008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjn008
            #add-point:ON ACTION controlp INFIELD stjn008 name="construct.c.page11.stjn008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjn009
            #add-point:BEFORE FIELD stjn009 name="construct.b.page11.stjn009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjn009
            
            #add-point:AFTER FIELD stjn009 name="construct.a.page11.stjn009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page11.stjn009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjn009
            #add-point:ON ACTION controlp INFIELD stjn009 name="construct.c.page11.stjn009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjn010
            #add-point:BEFORE FIELD stjn010 name="construct.b.page11.stjn010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjn010
            
            #add-point:AFTER FIELD stjn010 name="construct.a.page11.stjn010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page11.stjn010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjn010
            #add-point:ON ACTION controlp INFIELD stjn010 name="construct.c.page11.stjn010"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON stjosite,stjounit,stjoseq,stjo002,stjo003,stjo004,stjo005,stjo006,stjo007 
 
           FROM s_detail13[1].stjosite,s_detail13[1].stjounit,s_detail13[1].stjoseq,s_detail13[1].stjo002, 
               s_detail13[1].stjo003,s_detail13[1].stjo004,s_detail13[1].stjo005,s_detail13[1].stjo006, 
               s_detail13[1].stjo007
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body3.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjosite
            #add-point:BEFORE FIELD stjosite name="construct.b.page13.stjosite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjosite
            
            #add-point:AFTER FIELD stjosite name="construct.a.page13.stjosite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page13.stjosite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjosite
            #add-point:ON ACTION controlp INFIELD stjosite name="construct.c.page13.stjosite"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjounit
            #add-point:BEFORE FIELD stjounit name="construct.b.page13.stjounit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjounit
            
            #add-point:AFTER FIELD stjounit name="construct.a.page13.stjounit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page13.stjounit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjounit
            #add-point:ON ACTION controlp INFIELD stjounit name="construct.c.page13.stjounit"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjoseq
            #add-point:BEFORE FIELD stjoseq name="construct.b.page13.stjoseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjoseq
            
            #add-point:AFTER FIELD stjoseq name="construct.a.page13.stjoseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page13.stjoseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjoseq
            #add-point:ON ACTION controlp INFIELD stjoseq name="construct.c.page13.stjoseq"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjo002
            #add-point:BEFORE FIELD stjo002 name="construct.b.page13.stjo002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjo002
            
            #add-point:AFTER FIELD stjo002 name="construct.a.page13.stjo002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page13.stjo002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjo002
            #add-point:ON ACTION controlp INFIELD stjo002 name="construct.c.page13.stjo002"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stae001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stjo002  #顯示到畫面上
            NEXT FIELD stjo002                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjo003
            #add-point:BEFORE FIELD stjo003 name="construct.b.page13.stjo003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjo003
            
            #add-point:AFTER FIELD stjo003 name="construct.a.page13.stjo003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page13.stjo003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjo003
            #add-point:ON ACTION controlp INFIELD stjo003 name="construct.c.page13.stjo003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjo004
            #add-point:BEFORE FIELD stjo004 name="construct.b.page13.stjo004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjo004
            
            #add-point:AFTER FIELD stjo004 name="construct.a.page13.stjo004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page13.stjo004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjo004
            #add-point:ON ACTION controlp INFIELD stjo004 name="construct.c.page13.stjo004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjo005
            #add-point:BEFORE FIELD stjo005 name="construct.b.page13.stjo005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjo005
            
            #add-point:AFTER FIELD stjo005 name="construct.a.page13.stjo005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page13.stjo005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjo005
            #add-point:ON ACTION controlp INFIELD stjo005 name="construct.c.page13.stjo005"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page13.stjo006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjo006
            #add-point:ON ACTION controlp INFIELD stjo006 name="construct.c.page13.stjo006"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " stbd000 = '3' "
            CALL q_stbddocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stjo006  #顯示到畫面上
            NEXT FIELD stjo006                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjo006
            #add-point:BEFORE FIELD stjo006 name="construct.b.page13.stjo006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjo006
            
            #add-point:AFTER FIELD stjo006 name="construct.a.page13.stjo006"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjo007
            #add-point:BEFORE FIELD stjo007 name="construct.b.page13.stjo007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjo007
            
            #add-point:AFTER FIELD stjo007 name="construct.a.page13.stjo007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page13.stjo007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjo007
            #add-point:ON ACTION controlp INFIELD stjo007 name="construct.c.page13.stjo007"




            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table4 ON stjhseq,stjh002,stjh003,stjh008,stjh004,stjh005,stjh006,stjh007,stjhsite, 
          stjhunit
           FROM s_detail2[1].stjhseq,s_detail2[1].stjh002,s_detail2[1].stjh003,s_detail2[1].stjh008, 
               s_detail2[1].stjh004,s_detail2[1].stjh005,s_detail2[1].stjh006,s_detail2[1].stjh007,s_detail2[1].stjhsite, 
               s_detail2[1].stjhunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body4.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 4)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjhseq
            #add-point:BEFORE FIELD stjhseq name="construct.b.page2.stjhseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjhseq
            
            #add-point:AFTER FIELD stjhseq name="construct.a.page2.stjhseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stjhseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjhseq
            #add-point:ON ACTION controlp INFIELD stjhseq name="construct.c.page2.stjhseq"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.stjh002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjh002
            #add-point:ON ACTION controlp INFIELD stjh002 name="construct.c.page2.stjh002"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stae001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stjh002  #顯示到畫面上
            NEXT FIELD stjh002                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjh002
            #add-point:BEFORE FIELD stjh002 name="construct.b.page2.stjh002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjh002
            
            #add-point:AFTER FIELD stjh002 name="construct.a.page2.stjh002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stjh003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjh003
            #add-point:ON ACTION controlp INFIELD stjh003 name="construct.c.page2.stjh003"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " stem000 = 'astt802' "
            CALL q_stemdocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stjh003  #顯示到畫面上
            NEXT FIELD stjh003                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjh003
            #add-point:BEFORE FIELD stjh003 name="construct.b.page2.stjh003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjh003
            
            #add-point:AFTER FIELD stjh003 name="construct.a.page2.stjh003"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjh008
            #add-point:BEFORE FIELD stjh008 name="construct.b.page2.stjh008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjh008
            
            #add-point:AFTER FIELD stjh008 name="construct.a.page2.stjh008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stjh008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjh008
            #add-point:ON ACTION controlp INFIELD stjh008 name="construct.c.page2.stjh008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjh004
            #add-point:BEFORE FIELD stjh004 name="construct.b.page2.stjh004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjh004
            
            #add-point:AFTER FIELD stjh004 name="construct.a.page2.stjh004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stjh004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjh004
            #add-point:ON ACTION controlp INFIELD stjh004 name="construct.c.page2.stjh004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjh005
            #add-point:BEFORE FIELD stjh005 name="construct.b.page2.stjh005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjh005
            
            #add-point:AFTER FIELD stjh005 name="construct.a.page2.stjh005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stjh005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjh005
            #add-point:ON ACTION controlp INFIELD stjh005 name="construct.c.page2.stjh005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjh006
            #add-point:BEFORE FIELD stjh006 name="construct.b.page2.stjh006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjh006
            
            #add-point:AFTER FIELD stjh006 name="construct.a.page2.stjh006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stjh006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjh006
            #add-point:ON ACTION controlp INFIELD stjh006 name="construct.c.page2.stjh006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjh007
            #add-point:BEFORE FIELD stjh007 name="construct.b.page2.stjh007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjh007
            
            #add-point:AFTER FIELD stjh007 name="construct.a.page2.stjh007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stjh007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjh007
            #add-point:ON ACTION controlp INFIELD stjh007 name="construct.c.page2.stjh007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjhsite
            #add-point:BEFORE FIELD stjhsite name="construct.b.page2.stjhsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjhsite
            
            #add-point:AFTER FIELD stjhsite name="construct.a.page2.stjhsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stjhsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjhsite
            #add-point:ON ACTION controlp INFIELD stjhsite name="construct.c.page2.stjhsite"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjhunit
            #add-point:BEFORE FIELD stjhunit name="construct.b.page2.stjhunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjhunit
            
            #add-point:AFTER FIELD stjhunit name="construct.a.page2.stjhunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stjhunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjhunit
            #add-point:ON ACTION controlp INFIELD stjhunit name="construct.c.page2.stjhunit"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table5 ON stjiseq,stji002,stji003,stji010,stji004,stji005,stji006,stji007,stji008, 
          stji009,stjisite,stjiunit
           FROM s_detail3[1].stjiseq,s_detail3[1].stji002,s_detail3[1].stji003,s_detail3[1].stji010, 
               s_detail3[1].stji004,s_detail3[1].stji005,s_detail3[1].stji006,s_detail3[1].stji007,s_detail3[1].stji008, 
               s_detail3[1].stji009,s_detail3[1].stjisite,s_detail3[1].stjiunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body5.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 5)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjiseq
            #add-point:BEFORE FIELD stjiseq name="construct.b.page3.stjiseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjiseq
            
            #add-point:AFTER FIELD stjiseq name="construct.a.page3.stjiseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.stjiseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjiseq
            #add-point:ON ACTION controlp INFIELD stjiseq name="construct.c.page3.stjiseq"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page3.stji002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stji002
            #add-point:ON ACTION controlp INFIELD stji002 name="construct.c.page3.stji002"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stae001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stji002  #顯示到畫面上
            NEXT FIELD stji002                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stji002
            #add-point:BEFORE FIELD stji002 name="construct.b.page3.stji002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stji002
            
            #add-point:AFTER FIELD stji002 name="construct.a.page3.stji002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.stji003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stji003
            #add-point:ON ACTION controlp INFIELD stji003 name="construct.c.page3.stji003"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_staa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stji003  #顯示到畫面上
            NEXT FIELD stji003                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stji003
            #add-point:BEFORE FIELD stji003 name="construct.b.page3.stji003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stji003
            
            #add-point:AFTER FIELD stji003 name="construct.a.page3.stji003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.stji010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stji010
            #add-point:ON ACTION controlp INFIELD stji010 name="construct.c.page3.stji010"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            CALL q_oodb002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stji010  #顯示到畫面上
            NEXT FIELD stji010                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stji010
            #add-point:BEFORE FIELD stji010 name="construct.b.page3.stji010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stji010
            
            #add-point:AFTER FIELD stji010 name="construct.a.page3.stji010"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stji004
            #add-point:BEFORE FIELD stji004 name="construct.b.page3.stji004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stji004
            
            #add-point:AFTER FIELD stji004 name="construct.a.page3.stji004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.stji004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stji004
            #add-point:ON ACTION controlp INFIELD stji004 name="construct.c.page3.stji004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stji005
            #add-point:BEFORE FIELD stji005 name="construct.b.page3.stji005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stji005
            
            #add-point:AFTER FIELD stji005 name="construct.a.page3.stji005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.stji005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stji005
            #add-point:ON ACTION controlp INFIELD stji005 name="construct.c.page3.stji005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stji006
            #add-point:BEFORE FIELD stji006 name="construct.b.page3.stji006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stji006
            
            #add-point:AFTER FIELD stji006 name="construct.a.page3.stji006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.stji006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stji006
            #add-point:ON ACTION controlp INFIELD stji006 name="construct.c.page3.stji006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stji007
            #add-point:BEFORE FIELD stji007 name="construct.b.page3.stji007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stji007
            
            #add-point:AFTER FIELD stji007 name="construct.a.page3.stji007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.stji007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stji007
            #add-point:ON ACTION controlp INFIELD stji007 name="construct.c.page3.stji007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stji008
            #add-point:BEFORE FIELD stji008 name="construct.b.page3.stji008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stji008
            
            #add-point:AFTER FIELD stji008 name="construct.a.page3.stji008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.stji008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stji008
            #add-point:ON ACTION controlp INFIELD stji008 name="construct.c.page3.stji008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stji009
            #add-point:BEFORE FIELD stji009 name="construct.b.page3.stji009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stji009
            
            #add-point:AFTER FIELD stji009 name="construct.a.page3.stji009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.stji009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stji009
            #add-point:ON ACTION controlp INFIELD stji009 name="construct.c.page3.stji009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjisite
            #add-point:BEFORE FIELD stjisite name="construct.b.page3.stjisite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjisite
            
            #add-point:AFTER FIELD stjisite name="construct.a.page3.stjisite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.stjisite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjisite
            #add-point:ON ACTION controlp INFIELD stjisite name="construct.c.page3.stjisite"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjiunit
            #add-point:BEFORE FIELD stjiunit name="construct.b.page3.stjiunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjiunit
            
            #add-point:AFTER FIELD stjiunit name="construct.a.page3.stjiunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.stjiunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjiunit
            #add-point:ON ACTION controlp INFIELD stjiunit name="construct.c.page3.stjiunit"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table6 ON stjlseq,stjl002,stjl003,stjl004,stjl005,stjl006,stjl007,stjl008,stjlsite, 
          stjlunit
           FROM s_detail4[1].stjlseq,s_detail4[1].stjl002,s_detail4[1].stjl003,s_detail4[1].stjl004, 
               s_detail4[1].stjl005,s_detail4[1].stjl006,s_detail4[1].stjl007,s_detail4[1].stjl008,s_detail4[1].stjlsite, 
               s_detail4[1].stjlunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body6.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 6)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjlseq
            #add-point:BEFORE FIELD stjlseq name="construct.b.page4.stjlseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjlseq
            
            #add-point:AFTER FIELD stjlseq name="construct.a.page4.stjlseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.stjlseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjlseq
            #add-point:ON ACTION controlp INFIELD stjlseq name="construct.c.page4.stjlseq"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjl002
            #add-point:BEFORE FIELD stjl002 name="construct.b.page4.stjl002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjl002
            
            #add-point:AFTER FIELD stjl002 name="construct.a.page4.stjl002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.stjl002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjl002
            #add-point:ON ACTION controlp INFIELD stjl002 name="construct.c.page4.stjl002"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page4.stjl003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjl003
            #add-point:ON ACTION controlp INFIELD stjl003 name="construct.c.page4.stjl003"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stae001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stjl003  #顯示到畫面上
            NEXT FIELD stjl003                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjl003
            #add-point:BEFORE FIELD stjl003 name="construct.b.page4.stjl003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjl003
            
            #add-point:AFTER FIELD stjl003 name="construct.a.page4.stjl003"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjl004
            #add-point:BEFORE FIELD stjl004 name="construct.b.page4.stjl004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjl004
            
            #add-point:AFTER FIELD stjl004 name="construct.a.page4.stjl004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.stjl004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjl004
            #add-point:ON ACTION controlp INFIELD stjl004 name="construct.c.page4.stjl004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjl005
            #add-point:BEFORE FIELD stjl005 name="construct.b.page4.stjl005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjl005
            
            #add-point:AFTER FIELD stjl005 name="construct.a.page4.stjl005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.stjl005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjl005
            #add-point:ON ACTION controlp INFIELD stjl005 name="construct.c.page4.stjl005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjl006
            #add-point:BEFORE FIELD stjl006 name="construct.b.page4.stjl006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjl006
            
            #add-point:AFTER FIELD stjl006 name="construct.a.page4.stjl006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.stjl006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjl006
            #add-point:ON ACTION controlp INFIELD stjl006 name="construct.c.page4.stjl006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjl007
            #add-point:BEFORE FIELD stjl007 name="construct.b.page4.stjl007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjl007
            
            #add-point:AFTER FIELD stjl007 name="construct.a.page4.stjl007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.stjl007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjl007
            #add-point:ON ACTION controlp INFIELD stjl007 name="construct.c.page4.stjl007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjl008
            #add-point:BEFORE FIELD stjl008 name="construct.b.page4.stjl008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjl008
            
            #add-point:AFTER FIELD stjl008 name="construct.a.page4.stjl008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.stjl008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjl008
            #add-point:ON ACTION controlp INFIELD stjl008 name="construct.c.page4.stjl008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjlsite
            #add-point:BEFORE FIELD stjlsite name="construct.b.page4.stjlsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjlsite
            
            #add-point:AFTER FIELD stjlsite name="construct.a.page4.stjlsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.stjlsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjlsite
            #add-point:ON ACTION controlp INFIELD stjlsite name="construct.c.page4.stjlsite"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjlunit
            #add-point:BEFORE FIELD stjlunit name="construct.b.page4.stjlunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjlunit
            
            #add-point:AFTER FIELD stjlunit name="construct.a.page4.stjlunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.stjlunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjlunit
            #add-point:ON ACTION controlp INFIELD stjlunit name="construct.c.page4.stjlunit"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table7 ON stjjacti,stjjseq,stjj002,stjj003,stjj004,stjj005,stjj006,stjj007,stjj008, 
          stjj009,stjjsite,stjjunit
           FROM s_detail5[1].stjjacti,s_detail5[1].stjjseq,s_detail5[1].stjj002,s_detail5[1].stjj003, 
               s_detail5[1].stjj004,s_detail5[1].stjj005,s_detail5[1].stjj006,s_detail5[1].stjj007,s_detail5[1].stjj008, 
               s_detail5[1].stjj009,s_detail5[1].stjjsite,s_detail5[1].stjjunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body7.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 7)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjjacti
            #add-point:BEFORE FIELD stjjacti name="construct.b.page5.stjjacti"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjjacti
            
            #add-point:AFTER FIELD stjjacti name="construct.a.page5.stjjacti"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.stjjacti
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjjacti
            #add-point:ON ACTION controlp INFIELD stjjacti name="construct.c.page5.stjjacti"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjjseq
            #add-point:BEFORE FIELD stjjseq name="construct.b.page5.stjjseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjjseq
            
            #add-point:AFTER FIELD stjjseq name="construct.a.page5.stjjseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.stjjseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjjseq
            #add-point:ON ACTION controlp INFIELD stjjseq name="construct.c.page5.stjjseq"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page5.stjj002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjj002
            #add-point:ON ACTION controlp INFIELD stjj002 name="construct.c.page5.stjj002"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_mhad001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stjj002  #顯示到畫面上
            NEXT FIELD stjj002                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjj002
            #add-point:BEFORE FIELD stjj002 name="construct.b.page5.stjj002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjj002
            
            #add-point:AFTER FIELD stjj002 name="construct.a.page5.stjj002"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjj003
            #add-point:BEFORE FIELD stjj003 name="construct.b.page5.stjj003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjj003
            
            #add-point:AFTER FIELD stjj003 name="construct.a.page5.stjj003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.stjj003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjj003
            #add-point:ON ACTION controlp INFIELD stjj003 name="construct.c.page5.stjj003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjj004
            #add-point:BEFORE FIELD stjj004 name="construct.b.page5.stjj004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjj004
            
            #add-point:AFTER FIELD stjj004 name="construct.a.page5.stjj004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.stjj004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjj004
            #add-point:ON ACTION controlp INFIELD stjj004 name="construct.c.page5.stjj004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjj005
            #add-point:BEFORE FIELD stjj005 name="construct.b.page5.stjj005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjj005
            
            #add-point:AFTER FIELD stjj005 name="construct.a.page5.stjj005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.stjj005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjj005
            #add-point:ON ACTION controlp INFIELD stjj005 name="construct.c.page5.stjj005"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page5.stjj006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjj006
            #add-point:ON ACTION controlp INFIELD stjj006 name="construct.c.page5.stjj006"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_mhaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stjj006  #顯示到畫面上
            NEXT FIELD stjj006                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjj006
            #add-point:BEFORE FIELD stjj006 name="construct.b.page5.stjj006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjj006
            
            #add-point:AFTER FIELD stjj006 name="construct.a.page5.stjj006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.stjj007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjj007
            #add-point:ON ACTION controlp INFIELD stjj007 name="construct.c.page5.stjj007"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_mhab002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stjj007  #顯示到畫面上
            NEXT FIELD stjj007                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjj007
            #add-point:BEFORE FIELD stjj007 name="construct.b.page5.stjj007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjj007
            
            #add-point:AFTER FIELD stjj007 name="construct.a.page5.stjj007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.stjj008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjj008
            #add-point:ON ACTION controlp INFIELD stjj008 name="construct.c.page5.stjj008"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_mhac003()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stjj008  #顯示到畫面上
            NEXT FIELD stjj008                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjj008
            #add-point:BEFORE FIELD stjj008 name="construct.b.page5.stjj008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjj008
            
            #add-point:AFTER FIELD stjj008 name="construct.a.page5.stjj008"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjj009
            #add-point:BEFORE FIELD stjj009 name="construct.b.page5.stjj009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjj009
            
            #add-point:AFTER FIELD stjj009 name="construct.a.page5.stjj009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.stjj009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjj009
            #add-point:ON ACTION controlp INFIELD stjj009 name="construct.c.page5.stjj009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjjsite
            #add-point:BEFORE FIELD stjjsite name="construct.b.page5.stjjsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjjsite
            
            #add-point:AFTER FIELD stjjsite name="construct.a.page5.stjjsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.stjjsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjjsite
            #add-point:ON ACTION controlp INFIELD stjjsite name="construct.c.page5.stjjsite"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjjunit
            #add-point:BEFORE FIELD stjjunit name="construct.b.page5.stjjunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjjunit
            
            #add-point:AFTER FIELD stjjunit name="construct.a.page5.stjjunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.stjjunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjjunit
            #add-point:ON ACTION controlp INFIELD stjjunit name="construct.c.page5.stjjunit"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table8 ON stjkacti,stjkseq,stjk002,stjk004,stjk003,stjk005,stjksite,stjkunit
           FROM s_detail6[1].stjkacti,s_detail6[1].stjkseq,s_detail6[1].stjk002,s_detail6[1].stjk004, 
               s_detail6[1].stjk003,s_detail6[1].stjk005,s_detail6[1].stjksite,s_detail6[1].stjkunit 
 
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body8.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 8)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjkacti
            #add-point:BEFORE FIELD stjkacti name="construct.b.page6.stjkacti"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjkacti
            
            #add-point:AFTER FIELD stjkacti name="construct.a.page6.stjkacti"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.stjkacti
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjkacti
            #add-point:ON ACTION controlp INFIELD stjkacti name="construct.c.page6.stjkacti"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjkseq
            #add-point:BEFORE FIELD stjkseq name="construct.b.page6.stjkseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjkseq
            
            #add-point:AFTER FIELD stjkseq name="construct.a.page6.stjkseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.stjkseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjkseq
            #add-point:ON ACTION controlp INFIELD stjkseq name="construct.c.page6.stjkseq"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page6.stjk002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjk002
            #add-point:ON ACTION controlp INFIELD stjk002 name="construct.c.page6.stjk002"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = cl_get_para(g_enterprise,g_site,'E-CIR-0001')
            CALL q_rtax001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stjk002  #顯示到畫面上
            NEXT FIELD stjk002                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjk002
            #add-point:BEFORE FIELD stjk002 name="construct.b.page6.stjk002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjk002
            
            #add-point:AFTER FIELD stjk002 name="construct.a.page6.stjk002"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjk004
            #add-point:BEFORE FIELD stjk004 name="construct.b.page6.stjk004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjk004
            
            #add-point:AFTER FIELD stjk004 name="construct.a.page6.stjk004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.stjk004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjk004
            #add-point:ON ACTION controlp INFIELD stjk004 name="construct.c.page6.stjk004"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page6.stjk003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjk003
            #add-point:ON ACTION controlp INFIELD stjk003 name="construct.c.page6.stjk003"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002_2002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stjk003  #顯示到畫面上
            NEXT FIELD stjk003                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjk003
            #add-point:BEFORE FIELD stjk003 name="construct.b.page6.stjk003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjk003
            
            #add-point:AFTER FIELD stjk003 name="construct.a.page6.stjk003"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjk005
            #add-point:BEFORE FIELD stjk005 name="construct.b.page6.stjk005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjk005
            
            #add-point:AFTER FIELD stjk005 name="construct.a.page6.stjk005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.stjk005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjk005
            #add-point:ON ACTION controlp INFIELD stjk005 name="construct.c.page6.stjk005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjksite
            #add-point:BEFORE FIELD stjksite name="construct.b.page6.stjksite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjksite
            
            #add-point:AFTER FIELD stjksite name="construct.a.page6.stjksite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.stjksite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjksite
            #add-point:ON ACTION controlp INFIELD stjksite name="construct.c.page6.stjksite"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjkunit
            #add-point:BEFORE FIELD stjkunit name="construct.b.page6.stjkunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjkunit
            
            #add-point:AFTER FIELD stjkunit name="construct.a.page6.stjkunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.stjkunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjkunit
            #add-point:ON ACTION controlp INFIELD stjkunit name="construct.c.page6.stjkunit"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table9 ON stjmseq,stjm002,stjm003,stjm004,stjm005,stjm006,stjm007,stjm008,stjm009, 
          stjm010,stjm011,stjm012,stjm013,stjm014,stjm015,stjm016,stjm018,stjm019,stjm017,stjmsite,stjmunit 
 
           FROM s_detail7[1].stjmseq,s_detail7[1].stjm002,s_detail7[1].stjm003,s_detail7[1].stjm004, 
               s_detail7[1].stjm005,s_detail7[1].stjm006,s_detail7[1].stjm007,s_detail7[1].stjm008,s_detail7[1].stjm009, 
               s_detail7[1].stjm010,s_detail7[1].stjm011,s_detail7[1].stjm012,s_detail7[1].stjm013,s_detail7[1].stjm014, 
               s_detail7[1].stjm015,s_detail7[1].stjm016,s_detail7[1].stjm018,s_detail7[1].stjm019,s_detail7[1].stjm017, 
               s_detail7[1].stjmsite,s_detail7[1].stjmunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body9.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 9)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjmseq
            #add-point:BEFORE FIELD stjmseq name="construct.b.page7.stjmseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjmseq
            
            #add-point:AFTER FIELD stjmseq name="construct.a.page7.stjmseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.stjmseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjmseq
            #add-point:ON ACTION controlp INFIELD stjmseq name="construct.c.page7.stjmseq"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm002
            #add-point:BEFORE FIELD stjm002 name="construct.b.page7.stjm002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm002
            
            #add-point:AFTER FIELD stjm002 name="construct.a.page7.stjm002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.stjm002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm002
            #add-point:ON ACTION controlp INFIELD stjm002 name="construct.c.page7.stjm002"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page7.stjm003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm003
            #add-point:ON ACTION controlp INFIELD stjm003 name="construct.c.page7.stjm003"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stae001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stjm003  #顯示到畫面上
            NEXT FIELD stjm003                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm003
            #add-point:BEFORE FIELD stjm003 name="construct.b.page7.stjm003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm003
            
            #add-point:AFTER FIELD stjm003 name="construct.a.page7.stjm003"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm004
            #add-point:BEFORE FIELD stjm004 name="construct.b.page7.stjm004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm004
            
            #add-point:AFTER FIELD stjm004 name="construct.a.page7.stjm004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.stjm004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm004
            #add-point:ON ACTION controlp INFIELD stjm004 name="construct.c.page7.stjm004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm005
            #add-point:BEFORE FIELD stjm005 name="construct.b.page7.stjm005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm005
            
            #add-point:AFTER FIELD stjm005 name="construct.a.page7.stjm005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.stjm005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm005
            #add-point:ON ACTION controlp INFIELD stjm005 name="construct.c.page7.stjm005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm006
            #add-point:BEFORE FIELD stjm006 name="construct.b.page7.stjm006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm006
            
            #add-point:AFTER FIELD stjm006 name="construct.a.page7.stjm006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.stjm006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm006
            #add-point:ON ACTION controlp INFIELD stjm006 name="construct.c.page7.stjm006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm007
            #add-point:BEFORE FIELD stjm007 name="construct.b.page7.stjm007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm007
            
            #add-point:AFTER FIELD stjm007 name="construct.a.page7.stjm007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.stjm007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm007
            #add-point:ON ACTION controlp INFIELD stjm007 name="construct.c.page7.stjm007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm008
            #add-point:BEFORE FIELD stjm008 name="construct.b.page7.stjm008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm008
            
            #add-point:AFTER FIELD stjm008 name="construct.a.page7.stjm008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.stjm008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm008
            #add-point:ON ACTION controlp INFIELD stjm008 name="construct.c.page7.stjm008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm009
            #add-point:BEFORE FIELD stjm009 name="construct.b.page7.stjm009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm009
            
            #add-point:AFTER FIELD stjm009 name="construct.a.page7.stjm009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.stjm009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm009
            #add-point:ON ACTION controlp INFIELD stjm009 name="construct.c.page7.stjm009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm010
            #add-point:BEFORE FIELD stjm010 name="construct.b.page7.stjm010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm010
            
            #add-point:AFTER FIELD stjm010 name="construct.a.page7.stjm010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.stjm010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm010
            #add-point:ON ACTION controlp INFIELD stjm010 name="construct.c.page7.stjm010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm011
            #add-point:BEFORE FIELD stjm011 name="construct.b.page7.stjm011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm011
            
            #add-point:AFTER FIELD stjm011 name="construct.a.page7.stjm011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.stjm011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm011
            #add-point:ON ACTION controlp INFIELD stjm011 name="construct.c.page7.stjm011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm012
            #add-point:BEFORE FIELD stjm012 name="construct.b.page7.stjm012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm012
            
            #add-point:AFTER FIELD stjm012 name="construct.a.page7.stjm012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.stjm012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm012
            #add-point:ON ACTION controlp INFIELD stjm012 name="construct.c.page7.stjm012"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm013
            #add-point:BEFORE FIELD stjm013 name="construct.b.page7.stjm013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm013
            
            #add-point:AFTER FIELD stjm013 name="construct.a.page7.stjm013"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.stjm013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm013
            #add-point:ON ACTION controlp INFIELD stjm013 name="construct.c.page7.stjm013"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm014
            #add-point:BEFORE FIELD stjm014 name="construct.b.page7.stjm014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm014
            
            #add-point:AFTER FIELD stjm014 name="construct.a.page7.stjm014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.stjm014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm014
            #add-point:ON ACTION controlp INFIELD stjm014 name="construct.c.page7.stjm014"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm015
            #add-point:BEFORE FIELD stjm015 name="construct.b.page7.stjm015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm015
            
            #add-point:AFTER FIELD stjm015 name="construct.a.page7.stjm015"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.stjm015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm015
            #add-point:ON ACTION controlp INFIELD stjm015 name="construct.c.page7.stjm015"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page7.stjm016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm016
            #add-point:ON ACTION controlp INFIELD stjm016 name="construct.c.page7.stjm016"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " stba000 = 'astt810' "
            CALL q_stbadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stjm016  #顯示到畫面上
            NEXT FIELD stjm016                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm016
            #add-point:BEFORE FIELD stjm016 name="construct.b.page7.stjm016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm016
            
            #add-point:AFTER FIELD stjm016 name="construct.a.page7.stjm016"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm018
            #add-point:BEFORE FIELD stjm018 name="construct.b.page7.stjm018"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm018
            
            #add-point:AFTER FIELD stjm018 name="construct.a.page7.stjm018"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.stjm018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm018
            #add-point:ON ACTION controlp INFIELD stjm018 name="construct.c.page7.stjm018"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page7.stjm019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm019
            #add-point:ON ACTION controlp INFIELD stjm019 name="construct.c.page7.stjm019"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
#            IF s_aooi500_setpoint(g_prog,'stjm019') THEN
#               LET g_qryparam.where = s_aooi500_q_where(g_prog,'stjm019',g_site,'c')
#               CALL q_ooef001_24() 
#            ELSE
#               CALL q_ooef001_12()                           #呼叫開窗
#            END IF
            CALL q_stim019()
            DISPLAY g_qryparam.return1 TO stjm019  #顯示到畫面上
            NEXT FIELD stjm019                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm019
            #add-point:BEFORE FIELD stjm019 name="construct.b.page7.stjm019"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm019
            
            #add-point:AFTER FIELD stjm019 name="construct.a.page7.stjm019"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm017
            #add-point:BEFORE FIELD stjm017 name="construct.b.page7.stjm017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm017
            
            #add-point:AFTER FIELD stjm017 name="construct.a.page7.stjm017"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.stjm017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm017
            #add-point:ON ACTION controlp INFIELD stjm017 name="construct.c.page7.stjm017"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjmsite
            #add-point:BEFORE FIELD stjmsite name="construct.b.page7.stjmsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjmsite
            
            #add-point:AFTER FIELD stjmsite name="construct.a.page7.stjmsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.stjmsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjmsite
            #add-point:ON ACTION controlp INFIELD stjmsite name="construct.c.page7.stjmsite"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjmunit
            #add-point:BEFORE FIELD stjmunit name="construct.b.page7.stjmunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjmunit
            
            #add-point:AFTER FIELD stjmunit name="construct.a.page7.stjmunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.stjmunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjmunit
            #add-point:ON ACTION controlp INFIELD stjmunit name="construct.c.page7.stjmunit"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
 
      
      CONSTRUCT g_wc2_table10 ON stjgsite,stjgunit,stjgseq1,stjg002,stjg003,stjg004,stjg006
           FROM s_detail9[1].stjgsite,s_detail9[1].stjgunit,s_detail9[1].stjgseq1,s_detail9[1].stjg002, 
               s_detail9[1].stjg003,s_detail9[1].stjg004,s_detail9[1].stjg006
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body10.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 10)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjgsite
            #add-point:BEFORE FIELD stjgsite name="construct.b.page9.stjgsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjgsite
            
            #add-point:AFTER FIELD stjgsite name="construct.a.page9.stjgsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.stjgsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjgsite
            #add-point:ON ACTION controlp INFIELD stjgsite name="construct.c.page9.stjgsite"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjgunit
            #add-point:BEFORE FIELD stjgunit name="construct.b.page9.stjgunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjgunit
            
            #add-point:AFTER FIELD stjgunit name="construct.a.page9.stjgunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.stjgunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjgunit
            #add-point:ON ACTION controlp INFIELD stjgunit name="construct.c.page9.stjgunit"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjgseq1
            #add-point:BEFORE FIELD stjgseq1 name="construct.b.page9.stjgseq1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjgseq1
            
            #add-point:AFTER FIELD stjgseq1 name="construct.a.page9.stjgseq1"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.stjgseq1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjgseq1
            #add-point:ON ACTION controlp INFIELD stjgseq1 name="construct.c.page9.stjgseq1"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjg002
            #add-point:BEFORE FIELD stjg002 name="construct.b.page9.stjg002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjg002
            
            #add-point:AFTER FIELD stjg002 name="construct.a.page9.stjg002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.stjg002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjg002
            #add-point:ON ACTION controlp INFIELD stjg002 name="construct.c.page9.stjg002"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjg003
            #add-point:BEFORE FIELD stjg003 name="construct.b.page9.stjg003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjg003
            
            #add-point:AFTER FIELD stjg003 name="construct.a.page9.stjg003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.stjg003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjg003
            #add-point:ON ACTION controlp INFIELD stjg003 name="construct.c.page9.stjg003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjg004
            #add-point:BEFORE FIELD stjg004 name="construct.b.page9.stjg004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjg004
            
            #add-point:AFTER FIELD stjg004 name="construct.a.page9.stjg004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.stjg004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjg004
            #add-point:ON ACTION controlp INFIELD stjg004 name="construct.c.page9.stjg004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjg006
            #add-point:BEFORE FIELD stjg006 name="construct.b.page9.stjg006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjg006
            
            #add-point:AFTER FIELD stjg006 name="construct.a.page9.stjg006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.stjg006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjg006
            #add-point:ON ACTION controlp INFIELD stjg006 name="construct.c.page9.stjg006"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      CONSTRUCT g_wc2_table12 ON stjfseq,stjf002,stjf003,stjf004,stjf005,stjf006,stjf007,stjf008, 
          stjf009,stjf010,stjf012,stjf019,stjf013,stjf014,stjf015,stjf016,stjf020,stjf021,stjf023,stjf024,stjf025
           FROM s_detail8[1].stjfseq_2,s_detail8[1].stjf002_2,s_detail8[1].stjf003_2, 
                s_detail8[1].stjf004_2,s_detail8[1].stjf005_2,s_detail8[1].stjf006_2,s_detail8[1].stjf007_2,
                s_detail8[1].stjf008_2,s_detail8[1].stjf009_2,s_detail8[1].stjf010_2,s_detail8[1].stjf012_2,s_detail8[1].stjf019_2,
                s_detail8[1].stjf013_2,s_detail8[1].stjf014_2,s_detail8[1].stjf015_2,s_detail8[1].stjf016_2,s_detail8[1].stjf020_2,
                s_detail8[1].stjf021_2,s_detail8[1].stjf023_2,s_detail8[1].stjf024_2,s_detail8[1].stjf025_2
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"

            #end add-point 
            
         #單身公用欄位開窗相關處理
          
         ON ACTION controlp INFIELD stjf003_2
            #add-point:ON ACTION controlp INFIELD stjf003 name="construct.c.page1.stjf003"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " sthisite = '",g_site,"' AND EXISTS (SELECT 1 FROM sthj_t WHERE sthjent = sthient AND sthj001 =sthi002 AND sthj010 = '2' )"
            CALL q_sthi002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stjf003_2  #顯示到畫面上
            NEXT FIELD stjf003_2
         
         #Ctrlp:construct.c.page1.stjf004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf004_2
            #add-point:ON ACTION controlp INFIELD stjf004 name="construct.c.page1.stjf004"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stae001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stjf004_2  #顯示到畫面上
            NEXT FIELD stjf004_2                     #返回原欄位
    
         ON ACTION controlp INFIELD stjf024_2
            #add-point:ON ACTION controlp INFIELD stjf024_2 name="construct.c.page1.stjf024_2"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
#            IF s_aooi500_setpoint(g_prog,'stjf024') THEN
#               LET g_qryparam.where = s_aooi500_q_where(g_prog,'stjf024',g_site,'c')
#               CALL q_ooef001_24() 
#            ELSE
#               CALL q_ooef001_12()                           #呼叫開窗
#            END IF
            CALL q_stif024()
            DISPLAY g_qryparam.return1 TO stjf024_2  #顯示到畫面上
            NEXT FIELD stjf024_2                     #返回原欄位


            #END add-point

      END CONSTRUCT
      
      CONSTRUCT g_wc2_table13 ON stjgseq1,stjg002,stjg003,stjg005,stjg007
           FROM s_detail10[1].stjgseq1_1, 
                s_detail10[1].stjg002_1,s_detail10[1].stjg003_1,s_detail10[1].stjg005_1,s_detail10[1].stjg007_1
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body9.before_construct"

            #end add-point 
            
      END CONSTRUCT
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
            INITIALIZE g_wc2_table2 TO NULL
 
            INITIALIZE g_wc2_table3 TO NULL
 
            INITIALIZE g_wc2_table4 TO NULL
 
            INITIALIZE g_wc2_table5 TO NULL
 
            INITIALIZE g_wc2_table6 TO NULL
 
            INITIALIZE g_wc2_table7 TO NULL
 
            INITIALIZE g_wc2_table8 TO NULL
 
            INITIALIZE g_wc2_table9 TO NULL
 
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "stje_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "stjf_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "stjn_t" 
                     LET g_wc2_table2 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "stjo_t" 
                     LET g_wc2_table3 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "stjh_t" 
                     LET g_wc2_table4 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "stji_t" 
                     LET g_wc2_table5 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "stjl_t" 
                     LET g_wc2_table6 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "stjj_t" 
                     LET g_wc2_table7 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "stjk_t" 
                     LET g_wc2_table8 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "stjm_t" 
                     LET g_wc2_table9 = la_wc[li_idx].wc
 
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
   IF g_wc2_table4 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
   END IF
 
   IF g_wc2_table5 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
   END IF
 
   IF g_wc2_table6 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
   END IF
 
   IF g_wc2_table7 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
   END IF
 
   IF g_wc2_table8 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table8
   END IF
 
   IF g_wc2_table9 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table9
   END IF
 
 
 
   IF g_wc2_table10 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table10
   END IF
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
#   IF g_wc2_table12 <> " 1=1" THEN
#      LET g_wc2 = g_wc2 ," AND ", g_wc2_table12
#   END IF
#   IF g_wc2_table13 <> " 1=1" THEN
#      LET g_wc2 = g_wc2 ," AND ", g_wc2_table13
#   END IF
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="astm801.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION astm801_filter()
   #add-point:filter段define name="filter.define_customerization"
   
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON stje001,stje002,stje003,stje005,stje007,stje008,stje019,stje020,stje021, 
          stje023,stje024,stje025,stjesite,stje028,stje029,stje011,stje012,stje013,stje030,stje031,stje041, 
          stje042,stje043,stje044,stje045,stje046,stje047
                          FROM s_browse[1].b_stje001,s_browse[1].b_stje002,s_browse[1].b_stje003,s_browse[1].b_stje005, 
                              s_browse[1].b_stje007,s_browse[1].b_stje008,s_browse[1].b_stje019,s_browse[1].b_stje020, 
                              s_browse[1].b_stje021,s_browse[1].b_stje023,s_browse[1].b_stje024,s_browse[1].b_stje025, 
                              s_browse[1].b_stjesite,s_browse[1].b_stje028,s_browse[1].b_stje029,s_browse[1].b_stje011, 
                              s_browse[1].b_stje012,s_browse[1].b_stje013,s_browse[1].b_stje030,s_browse[1].b_stje031, 
                              s_browse[1].b_stje041,s_browse[1].b_stje042,s_browse[1].b_stje043,s_browse[1].b_stje044, 
                              s_browse[1].b_stje045,s_browse[1].b_stje046,s_browse[1].b_stje047
 
         BEFORE CONSTRUCT
               DISPLAY astm801_filter_parser('stje001') TO s_browse[1].b_stje001
            DISPLAY astm801_filter_parser('stje002') TO s_browse[1].b_stje002
            DISPLAY astm801_filter_parser('stje003') TO s_browse[1].b_stje003
            DISPLAY astm801_filter_parser('stje005') TO s_browse[1].b_stje005
            DISPLAY astm801_filter_parser('stje007') TO s_browse[1].b_stje007
            DISPLAY astm801_filter_parser('stje008') TO s_browse[1].b_stje008
            DISPLAY astm801_filter_parser('stje019') TO s_browse[1].b_stje019
            DISPLAY astm801_filter_parser('stje020') TO s_browse[1].b_stje020
            DISPLAY astm801_filter_parser('stje021') TO s_browse[1].b_stje021
            DISPLAY astm801_filter_parser('stje023') TO s_browse[1].b_stje023
            DISPLAY astm801_filter_parser('stje024') TO s_browse[1].b_stje024
            DISPLAY astm801_filter_parser('stje025') TO s_browse[1].b_stje025
            DISPLAY astm801_filter_parser('stjesite') TO s_browse[1].b_stjesite
            DISPLAY astm801_filter_parser('stje028') TO s_browse[1].b_stje028
            DISPLAY astm801_filter_parser('stje029') TO s_browse[1].b_stje029
            DISPLAY astm801_filter_parser('stje011') TO s_browse[1].b_stje011
            DISPLAY astm801_filter_parser('stje012') TO s_browse[1].b_stje012
            DISPLAY astm801_filter_parser('stje013') TO s_browse[1].b_stje013
            DISPLAY astm801_filter_parser('stje030') TO s_browse[1].b_stje030
            DISPLAY astm801_filter_parser('stje031') TO s_browse[1].b_stje031
            DISPLAY astm801_filter_parser('stje041') TO s_browse[1].b_stje041
            DISPLAY astm801_filter_parser('stje042') TO s_browse[1].b_stje042
            DISPLAY astm801_filter_parser('stje043') TO s_browse[1].b_stje043
            DISPLAY astm801_filter_parser('stje044') TO s_browse[1].b_stje044
            DISPLAY astm801_filter_parser('stje045') TO s_browse[1].b_stje045
            DISPLAY astm801_filter_parser('stje046') TO s_browse[1].b_stje046
            DISPLAY astm801_filter_parser('stje047') TO s_browse[1].b_stje047
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL astm801_filter_show('stje001')
   CALL astm801_filter_show('stje002')
   CALL astm801_filter_show('stje003')
   CALL astm801_filter_show('stje005')
   CALL astm801_filter_show('stje007')
   CALL astm801_filter_show('stje008')
   CALL astm801_filter_show('stje019')
   CALL astm801_filter_show('stje020')
   CALL astm801_filter_show('stje021')
   CALL astm801_filter_show('stje023')
   CALL astm801_filter_show('stje024')
   CALL astm801_filter_show('stje025')
   CALL astm801_filter_show('stjesite')
   CALL astm801_filter_show('stje028')
   CALL astm801_filter_show('stje029')
   CALL astm801_filter_show('stje011')
   CALL astm801_filter_show('stje012')
   CALL astm801_filter_show('stje013')
   CALL astm801_filter_show('stje030')
   CALL astm801_filter_show('stje031')
   CALL astm801_filter_show('stje041')
   CALL astm801_filter_show('stje042')
   CALL astm801_filter_show('stje043')
   CALL astm801_filter_show('stje044')
   CALL astm801_filter_show('stje045')
   CALL astm801_filter_show('stje046')
   CALL astm801_filter_show('stje047')
 
END FUNCTION
 
{</section>}
 
{<section id="astm801.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION astm801_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="astm801.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION astm801_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = astm801_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="astm801.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION astm801_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_stjf_d.clear()
   CALL g_stjf11_d.clear()
   CALL g_stjf13_d.clear()
   CALL g_stjf2_d.clear()
   CALL g_stjf3_d.clear()
   CALL g_stjf4_d.clear()
   CALL g_stjf5_d.clear()
   CALL g_stjf6_d.clear()
   CALL g_stjf7_d.clear()
   CALL g_stjf9_d.clear()
 
   
   #add-point:query段other name="query.other"
   CALL g_stjf12_d.clear()
   CALL g_stjf15_d.clear()
   CALL g_stjf14_d.clear()
   CALL cl_set_comp_visible('group_26',TRUE)
   CALL cl_set_comp_visible('group_28',TRUE)
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL astm801_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL astm801_browser_fill("")
      CALL astm801_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
   LET g_detail_idx_list[4] = 1
   LET g_detail_idx_list[5] = 1
   LET g_detail_idx_list[6] = 1
   LET g_detail_idx_list[7] = 1
   LET g_detail_idx_list[8] = 1
   LET g_detail_idx_list[9] = 1
   LET g_detail_idx_list[10] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL astm801_filter_show('stje001')
   CALL astm801_filter_show('stje002')
   CALL astm801_filter_show('stje003')
   CALL astm801_filter_show('stje005')
   CALL astm801_filter_show('stje007')
   CALL astm801_filter_show('stje008')
   CALL astm801_filter_show('stje019')
   CALL astm801_filter_show('stje020')
   CALL astm801_filter_show('stje021')
   CALL astm801_filter_show('stje023')
   CALL astm801_filter_show('stje024')
   CALL astm801_filter_show('stje025')
   CALL astm801_filter_show('stjesite')
   CALL astm801_filter_show('stje028')
   CALL astm801_filter_show('stje029')
   CALL astm801_filter_show('stje011')
   CALL astm801_filter_show('stje012')
   CALL astm801_filter_show('stje013')
   CALL astm801_filter_show('stje030')
   CALL astm801_filter_show('stje031')
   CALL astm801_filter_show('stje041')
   CALL astm801_filter_show('stje042')
   CALL astm801_filter_show('stje043')
   CALL astm801_filter_show('stje044')
   CALL astm801_filter_show('stje045')
   CALL astm801_filter_show('stje046')
   CALL astm801_filter_show('stje047')
   CALL astm801_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "-100" 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
   ELSE
      CALL astm801_fetch("F") 
      #顯示單身筆數
      CALL astm801_idx_chk()
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="astm801.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION astm801_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
   CALL g_stjf9_d.clear()
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_stje_m.stje001 = g_browser[g_current_idx].b_stje001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE astm801_master_referesh USING g_stje_m.stje001 INTO g_stje_m.stjesite,g_stje_m.stje004,g_stje_m.stje001, 
       g_stje_m.stje002,g_stje_m.stje003,g_stje_m.stje005,g_stje_m.stje006,g_stje_m.stjestus,g_stje_m.stje007, 
       g_stje_m.stje008,g_stje_m.stje010,g_stje_m.stje009,g_stje_m.stje011,g_stje_m.stje012,g_stje_m.stje013, 
       g_stje_m.stje014,g_stje_m.stje015,g_stje_m.stje016,g_stje_m.stje017,g_stje_m.stje018,g_stje_m.stje049, 
       g_stje_m.stje019,g_stje_m.stje020,g_stje_m.stje021,g_stje_m.stje022,g_stje_m.stje027,g_stje_m.stje028, 
       g_stje_m.stje029,g_stje_m.stje026,g_stje_m.stje023,g_stje_m.stje024,g_stje_m.stje025,g_stje_m.stje030, 
       g_stje_m.stje031,g_stje_m.stje032,g_stje_m.stje033,g_stje_m.stje034,g_stje_m.stje035,g_stje_m.stje036, 
       g_stje_m.stje037,g_stje_m.stje038,g_stje_m.stje039,g_stje_m.stje040,g_stje_m.stje041,g_stje_m.stje042, 
       g_stje_m.stje043,g_stje_m.stje044,g_stje_m.stje045,g_stje_m.stje046,g_stje_m.stje047,g_stje_m.stje048, 
       g_stje_m.stje050,g_stje_m.stje051,g_stje_m.stje052,g_stje_m.stje053,g_stje_m.stjeownid,g_stje_m.stjeowndp, 
       g_stje_m.stjecrtid,g_stje_m.stjecrtdp,g_stje_m.stjecrtdt,g_stje_m.stjemodid,g_stje_m.stjemoddt, 
       g_stje_m.stjecnfid,g_stje_m.stjecnfdt,g_stje_m.stjesite_desc,g_stje_m.stje003_desc,g_stje_m.stje007_desc, 
       g_stje_m.stje008_desc,g_stje_m.stje017_desc,g_stje_m.stje018_desc,g_stje_m.stje019_desc,g_stje_m.stje020_desc, 
       g_stje_m.stje021_desc,g_stje_m.stje022_desc,g_stje_m.stje027_desc,g_stje_m.stje028_desc,g_stje_m.stje029_desc, 
       g_stje_m.stje030_desc,g_stje_m.stje031_desc,g_stje_m.stje032_desc,g_stje_m.stje034_desc,g_stje_m.stje035_desc, 
       g_stje_m.stje036_desc,g_stje_m.stje038_desc,g_stje_m.stje039_desc,g_stje_m.stje051_desc,g_stje_m.stje053_desc, 
       g_stje_m.stjeownid_desc,g_stje_m.stjeowndp_desc,g_stje_m.stjemodid_desc
   
   #遮罩相關處理
   LET g_stje_m_mask_o.* =  g_stje_m.*
   CALL astm801_stje_t_mask()
   LET g_stje_m_mask_n.* =  g_stje_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL astm801_set_act_visible()   
   CALL astm801_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
   
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
   
   #保存單頭舊值
   LET g_stje_m_t.* = g_stje_m.*
   LET g_stje_m_o.* = g_stje_m.*
   
   LET g_data_owner = g_stje_m.stjeownid      
   LET g_data_dept  = g_stje_m.stjeowndp
   
   #重新顯示   
   CALL astm801_show()
 
   
 
END FUNCTION
 
{</section>}
 
{<section id="astm801.insert" >}
#+ 資料新增
PRIVATE FUNCTION astm801_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   DEFINE r_insert       LIKE type_t.num5
   DEFINE r_success     LIKE type_t.num5
   DEFINE r_doctype     LIKE rtai_t.rtai004
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_stjf_d.clear()   
   CALL g_stjf11_d.clear()  
   CALL g_stjf13_d.clear()  
   CALL g_stjf2_d.clear()  
   CALL g_stjf3_d.clear()  
   CALL g_stjf4_d.clear()  
   CALL g_stjf5_d.clear()  
   CALL g_stjf6_d.clear()  
   CALL g_stjf7_d.clear()  
   CALL g_stjf9_d.clear()  
 
 
   INITIALIZE g_stje_m.* TO NULL             #DEFAULT 設定
   
   LET g_stje001_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_stje_m.stjeownid = g_user
      LET g_stje_m.stjeowndp = g_dept
      LET g_stje_m.stjecrtid = g_user
      LET g_stje_m.stjecrtdp = g_dept 
      LET g_stje_m.stjecrtdt = cl_get_current()
      LET g_stje_m.stjemodid = g_user
      LET g_stje_m.stjemoddt = cl_get_current()
      LET g_stje_m.stjestus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_stje_m.stje005 = "1"
      LET g_stje_m.stje009 = "1"
      LET g_stje_m.stje013 = "0"
      LET g_stje_m.stje014 = "Y"
      LET g_stje_m.stje015 = "N"
      LET g_stje_m.stje026 = "1"
      LET g_stje_m.stje040 = "N"
 
  
      #add-point:單頭預設值 name="insert.default"
      CALL s_aooi500_default(g_prog,'stjesite',g_stje_m.stjesite)
         RETURNING r_insert,g_stje_m.stjesite
      IF r_insert = FALSE THEN
         RETURN
      END IF
      LET g_site_flag = FALSE
      LET g_stje_m.stje016 = g_today
      LET g_stje_m.stje017 = g_user
      LET g_stje_m.stje018 = g_dept
      LET g_stje_m.stje002 = '1'
      LET g_stje_m.stje011 = g_today
      LET g_stje_m.stje012 = g_today+1
      LET g_stje_m.stje041 = g_stje_m.stje011 
      LET g_stje_m.stje042 = g_stje_m.stje011 + g_stje_m.stje013
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_stje_m.stjesite
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_stje_m.stjesite_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_stje_m.stjesite_desc
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_stje_m.stje017
      CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
      LET g_stje_m.stje017_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_stje_m.stje017_desc
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_stje_m.stje018
      CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_stje_m.stje018_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_stje_m.stje018_desc
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_stje_m_t.* = g_stje_m.*
      LET g_stje_m_o.* = g_stje_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_stje_m.stjestus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         
      END CASE
 
 
 
    
      CALL astm801_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_stje_m.* TO NULL
         INITIALIZE g_stjf_d TO NULL
         INITIALIZE g_stjf11_d TO NULL
         INITIALIZE g_stjf13_d TO NULL
         INITIALIZE g_stjf2_d TO NULL
         INITIALIZE g_stjf3_d TO NULL
         INITIALIZE g_stjf4_d TO NULL
         INITIALIZE g_stjf5_d TO NULL
         INITIALIZE g_stjf6_d TO NULL
         INITIALIZE g_stjf7_d TO NULL
         INITIALIZE g_stjf9_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         
         #end add-point 
         CALL astm801_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_stjf_d.clear()
      #CALL g_stjf11_d.clear()
      #CALL g_stjf13_d.clear()
      #CALL g_stjf2_d.clear()
      #CALL g_stjf3_d.clear()
      #CALL g_stjf4_d.clear()
      #CALL g_stjf5_d.clear()
      #CALL g_stjf6_d.clear()
      #CALL g_stjf7_d.clear()
      #CALL g_stjf9_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL astm801_set_act_visible()   
   CALL astm801_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_stje001_t = g_stje_m.stje001
 
   
   #組合新增資料的條件
   LET g_add_browse = " stjeent = " ||g_enterprise|| " AND",
                      " stje001 = '", g_stje_m.stje001, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL astm801_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE astm801_cl
   
   CALL astm801_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE astm801_master_referesh USING g_stje_m.stje001 INTO g_stje_m.stjesite,g_stje_m.stje004,g_stje_m.stje001, 
       g_stje_m.stje002,g_stje_m.stje003,g_stje_m.stje005,g_stje_m.stje006,g_stje_m.stjestus,g_stje_m.stje007, 
       g_stje_m.stje008,g_stje_m.stje010,g_stje_m.stje009,g_stje_m.stje011,g_stje_m.stje012,g_stje_m.stje013, 
       g_stje_m.stje014,g_stje_m.stje015,g_stje_m.stje016,g_stje_m.stje017,g_stje_m.stje018,g_stje_m.stje049, 
       g_stje_m.stje019,g_stje_m.stje020,g_stje_m.stje021,g_stje_m.stje022,g_stje_m.stje027,g_stje_m.stje028, 
       g_stje_m.stje029,g_stje_m.stje026,g_stje_m.stje023,g_stje_m.stje024,g_stje_m.stje025,g_stje_m.stje030, 
       g_stje_m.stje031,g_stje_m.stje032,g_stje_m.stje033,g_stje_m.stje034,g_stje_m.stje035,g_stje_m.stje036, 
       g_stje_m.stje037,g_stje_m.stje038,g_stje_m.stje039,g_stje_m.stje040,g_stje_m.stje041,g_stje_m.stje042, 
       g_stje_m.stje043,g_stje_m.stje044,g_stje_m.stje045,g_stje_m.stje046,g_stje_m.stje047,g_stje_m.stje048, 
       g_stje_m.stje050,g_stje_m.stje051,g_stje_m.stje052,g_stje_m.stje053,g_stje_m.stjeownid,g_stje_m.stjeowndp, 
       g_stje_m.stjecrtid,g_stje_m.stjecrtdp,g_stje_m.stjecrtdt,g_stje_m.stjemodid,g_stje_m.stjemoddt, 
       g_stje_m.stjecnfid,g_stje_m.stjecnfdt,g_stje_m.stjesite_desc,g_stje_m.stje003_desc,g_stje_m.stje007_desc, 
       g_stje_m.stje008_desc,g_stje_m.stje017_desc,g_stje_m.stje018_desc,g_stje_m.stje019_desc,g_stje_m.stje020_desc, 
       g_stje_m.stje021_desc,g_stje_m.stje022_desc,g_stje_m.stje027_desc,g_stje_m.stje028_desc,g_stje_m.stje029_desc, 
       g_stje_m.stje030_desc,g_stje_m.stje031_desc,g_stje_m.stje032_desc,g_stje_m.stje034_desc,g_stje_m.stje035_desc, 
       g_stje_m.stje036_desc,g_stje_m.stje038_desc,g_stje_m.stje039_desc,g_stje_m.stje051_desc,g_stje_m.stje053_desc, 
       g_stje_m.stjeownid_desc,g_stje_m.stjeowndp_desc,g_stje_m.stjemodid_desc
   
   
   #遮罩相關處理
   LET g_stje_m_mask_o.* =  g_stje_m.*
   CALL astm801_stje_t_mask()
   LET g_stje_m_mask_n.* =  g_stje_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_stje_m.stjesite,g_stje_m.stjesite_desc,g_stje_m.stje004,g_stje_m.stje001,g_stje_m.stje002, 
       g_stje_m.stje003,g_stje_m.stje003_desc,g_stje_m.stje005,g_stje_m.stje006,g_stje_m.stjestus,g_stje_m.stje007, 
       g_stje_m.stje007_desc,g_stje_m.stje008,g_stje_m.stje008_desc,g_stje_m.stje010,g_stje_m.stje009, 
       g_stje_m.stje011,g_stje_m.stje012,g_stje_m.stje013,g_stje_m.stje014,g_stje_m.stje015,g_stje_m.stje016, 
       g_stje_m.stje017,g_stje_m.stje017_desc,g_stje_m.stje018,g_stje_m.stje018_desc,g_stje_m.stje049, 
       g_stje_m.stje019,g_stje_m.stje019_desc,g_stje_m.stje020,g_stje_m.stje020_desc,g_stje_m.stje021, 
       g_stje_m.stje021_desc,g_stje_m.stje022,g_stje_m.stje022_desc,g_stje_m.stje027,g_stje_m.stje027_desc, 
       g_stje_m.stje028,g_stje_m.stje028_desc,g_stje_m.stje029,g_stje_m.stje029_desc,g_stje_m.stje026, 
       g_stje_m.stje023,g_stje_m.stje024,g_stje_m.stje025,g_stje_m.stje030,g_stje_m.stje030_desc,g_stje_m.stje031, 
       g_stje_m.stje031_desc,g_stje_m.stje032,g_stje_m.stje032_desc,g_stje_m.stje033,g_stje_m.stje034, 
       g_stje_m.stje034_desc,g_stje_m.stje035,g_stje_m.stje035_desc,g_stje_m.stje036,g_stje_m.stje036_desc, 
       g_stje_m.stje037,g_stje_m.stje038,g_stje_m.stje038_desc,g_stje_m.stje039,g_stje_m.stje039_desc, 
       g_stje_m.stje040,g_stje_m.stje041,g_stje_m.stje042,g_stje_m.stje043,g_stje_m.stje044,g_stje_m.stje045, 
       g_stje_m.stje046,g_stje_m.stje047,g_stje_m.stje048,g_stje_m.stje050,g_stje_m.stje051,g_stje_m.stje051_desc, 
       g_stje_m.stje052,g_stje_m.stje053,g_stje_m.stje053_desc,g_stje_m.stjeownid,g_stje_m.stjeownid_desc, 
       g_stje_m.stjeowndp,g_stje_m.stjeowndp_desc,g_stje_m.stjecrtid,g_stje_m.stjecrtid_desc,g_stje_m.stjecrtdp, 
       g_stje_m.stjecrtdp_desc,g_stje_m.stjecrtdt,g_stje_m.stjemodid,g_stje_m.stjemodid_desc,g_stje_m.stjemoddt, 
       g_stje_m.stjecnfid,g_stje_m.stjecnfid_desc,g_stje_m.stjecnfdt
   
   #add-point:新增結束後 name="insert.after"
   
   #end add-point 
   
   LET g_data_owner = g_stje_m.stjeownid      
   LET g_data_dept  = g_stje_m.stjeowndp
   
   #功能已完成,通報訊息中心
   CALL astm801_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="astm801.modify" >}
#+ 資料修改
PRIVATE FUNCTION astm801_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
   DEFINE l_wc2_table3   STRING
 
   DEFINE l_wc2_table4   STRING
 
   DEFINE l_wc2_table5   STRING
 
   DEFINE l_wc2_table6   STRING
 
   DEFINE l_wc2_table7   STRING
 
   DEFINE l_wc2_table8   STRING
 
   DEFINE l_wc2_table9   STRING
 
 
   DEFINE l_wc2_table10   STRING
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   #保存單頭舊值
   LET g_stje_m_t.* = g_stje_m.*
   LET g_stje_m_o.* = g_stje_m.*
   
   IF g_stje_m.stje001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_stje001_t = g_stje_m.stje001
 
   CALL s_transaction_begin()
   
   OPEN astm801_cl USING g_enterprise,g_stje_m.stje001
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN astm801_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE astm801_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE astm801_master_referesh USING g_stje_m.stje001 INTO g_stje_m.stjesite,g_stje_m.stje004,g_stje_m.stje001, 
       g_stje_m.stje002,g_stje_m.stje003,g_stje_m.stje005,g_stje_m.stje006,g_stje_m.stjestus,g_stje_m.stje007, 
       g_stje_m.stje008,g_stje_m.stje010,g_stje_m.stje009,g_stje_m.stje011,g_stje_m.stje012,g_stje_m.stje013, 
       g_stje_m.stje014,g_stje_m.stje015,g_stje_m.stje016,g_stje_m.stje017,g_stje_m.stje018,g_stje_m.stje049, 
       g_stje_m.stje019,g_stje_m.stje020,g_stje_m.stje021,g_stje_m.stje022,g_stje_m.stje027,g_stje_m.stje028, 
       g_stje_m.stje029,g_stje_m.stje026,g_stje_m.stje023,g_stje_m.stje024,g_stje_m.stje025,g_stje_m.stje030, 
       g_stje_m.stje031,g_stje_m.stje032,g_stje_m.stje033,g_stje_m.stje034,g_stje_m.stje035,g_stje_m.stje036, 
       g_stje_m.stje037,g_stje_m.stje038,g_stje_m.stje039,g_stje_m.stje040,g_stje_m.stje041,g_stje_m.stje042, 
       g_stje_m.stje043,g_stje_m.stje044,g_stje_m.stje045,g_stje_m.stje046,g_stje_m.stje047,g_stje_m.stje048, 
       g_stje_m.stje050,g_stje_m.stje051,g_stje_m.stje052,g_stje_m.stje053,g_stje_m.stjeownid,g_stje_m.stjeowndp, 
       g_stje_m.stjecrtid,g_stje_m.stjecrtdp,g_stje_m.stjecrtdt,g_stje_m.stjemodid,g_stje_m.stjemoddt, 
       g_stje_m.stjecnfid,g_stje_m.stjecnfdt,g_stje_m.stjesite_desc,g_stje_m.stje003_desc,g_stje_m.stje007_desc, 
       g_stje_m.stje008_desc,g_stje_m.stje017_desc,g_stje_m.stje018_desc,g_stje_m.stje019_desc,g_stje_m.stje020_desc, 
       g_stje_m.stje021_desc,g_stje_m.stje022_desc,g_stje_m.stje027_desc,g_stje_m.stje028_desc,g_stje_m.stje029_desc, 
       g_stje_m.stje030_desc,g_stje_m.stje031_desc,g_stje_m.stje032_desc,g_stje_m.stje034_desc,g_stje_m.stje035_desc, 
       g_stje_m.stje036_desc,g_stje_m.stje038_desc,g_stje_m.stje039_desc,g_stje_m.stje051_desc,g_stje_m.stje053_desc, 
       g_stje_m.stjeownid_desc,g_stje_m.stjeowndp_desc,g_stje_m.stjemodid_desc
   
   #檢查是否允許此動作
   IF NOT astm801_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_stje_m_mask_o.* =  g_stje_m.*
   CALL astm801_stje_t_mask()
   LET g_stje_m_mask_n.* =  g_stje_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
   #LET l_wc2_table3 = g_wc2_table3
   #LET l_wc2_table3 = " 1=1"
 
   #LET l_wc2_table4 = g_wc2_table4
   #LET l_wc2_table4 = " 1=1"
 
   #LET l_wc2_table5 = g_wc2_table5
   #LET l_wc2_table5 = " 1=1"
 
   #LET l_wc2_table6 = g_wc2_table6
   #LET l_wc2_table6 = " 1=1"
 
   #LET l_wc2_table7 = g_wc2_table7
   #LET l_wc2_table7 = " 1=1"
 
   #LET l_wc2_table8 = g_wc2_table8
   #LET l_wc2_table8 = " 1=1"
 
   #LET l_wc2_table9 = g_wc2_table9
   #LET l_wc2_table9 = " 1=1"
 
 
   #LET l_wc2_table10 = g_wc2_table10
   #LET l_wc2_table10 = " 1=1"
 
 
   
   CALL astm801_show()
   #add-point:modify段show之後 name="modify.after_show"
   
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
   #LET  g_wc2_table3 = l_wc2_table3 
 
   #LET  g_wc2_table4 = l_wc2_table4 
 
   #LET  g_wc2_table5 = l_wc2_table5 
 
   #LET  g_wc2_table6 = l_wc2_table6 
 
   #LET  g_wc2_table7 = l_wc2_table7 
 
   #LET  g_wc2_table8 = l_wc2_table8 
 
   #LET  g_wc2_table9 = l_wc2_table9 
 
 
   #LET  g_wc2_table10 = l_wc2_table10 
 
 
    
   WHILE TRUE
      LET g_stje001_t = g_stje_m.stje001
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_stje_m.stjemodid = g_user 
LET g_stje_m.stjemoddt = cl_get_current()
LET g_stje_m.stjemodid_desc = cl_get_username(g_stje_m.stjemodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL astm801_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE stje_t SET (stjemodid,stjemoddt) = (g_stje_m.stjemodid,g_stje_m.stjemoddt)
          WHERE stjeent = g_enterprise AND stje001 = g_stje001_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_stje_m.* = g_stje_m_t.*
            CALL astm801_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_stje_m.stje001 != g_stje_m_t.stje001
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         
         #end add-point
         
         #更新單身key值
         UPDATE stjf_t SET stjf001 = g_stje_m.stje001
 
          WHERE stjfent = g_enterprise AND stjf001 = g_stje_m_t.stje001
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stjf_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stjf_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update2"
         
         #end add-point
         
         UPDATE stjn_t
            SET stjn001 = g_stje_m.stje001
 
          WHERE stjnent = g_enterprise AND
                stjn001 = g_stje001_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update2"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stjn_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stjn_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update2"
         
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update3"
         
         #end add-point
         
         UPDATE stjo_t
            SET stjo001 = g_stje_m.stje001
 
          WHERE stjoent = g_enterprise AND
                stjo001 = g_stje001_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update3"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stjo_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stjo_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update3"
         
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update4"
         
         #end add-point
         
         UPDATE stjh_t
            SET stjh001 = g_stje_m.stje001
 
          WHERE stjhent = g_enterprise AND
                stjh001 = g_stje001_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update4"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stjh_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stjh_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update4"
         
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update5"
         
         #end add-point
         
         UPDATE stji_t
            SET stji001 = g_stje_m.stje001
 
          WHERE stjient = g_enterprise AND
                stji001 = g_stje001_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update5"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stji_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stji_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update5"
         
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update6"
         
         #end add-point
         
         UPDATE stjl_t
            SET stjl001 = g_stje_m.stje001
 
          WHERE stjlent = g_enterprise AND
                stjl001 = g_stje001_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update6"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stjl_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stjl_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update6"
         
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update7"
         
         #end add-point
         
         UPDATE stjj_t
            SET stjj001 = g_stje_m.stje001
 
          WHERE stjjent = g_enterprise AND
                stjj001 = g_stje001_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update7"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stjj_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stjj_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update7"
         
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update8"
         
         #end add-point
         
         UPDATE stjk_t
            SET stjk001 = g_stje_m.stje001
 
          WHERE stjkent = g_enterprise AND
                stjk001 = g_stje001_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update8"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stjk_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stjk_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update8"
         
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update9"
         
         #end add-point
         
         UPDATE stjm_t
            SET stjm001 = g_stje_m.stje001
 
          WHERE stjment = g_enterprise AND
                stjm001 = g_stje001_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update9"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stjm_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stjm_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update9"
         
         #end add-point
 
 
         
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update10"
         
         #end add-point
         UPDATE stjg_t
            SET stjg001 = g_stje_m.stje001
 
          WHERE stjgent = g_enterprise AND
                stjg001 = g_stje001_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update10"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stjg_t" 
               LET g_errparam.code = "std-00009" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stjg_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update10"
         
         #end add-point
 
 
         
         #UPDATE 多語言table key值
         
         
         
         
         
         
         
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL astm801_set_act_visible()   
   CALL astm801_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " stjeent = " ||g_enterprise|| " AND",
                      " stje001 = '", g_stje_m.stje001, "' "
 
   #填到對應位置
   CALL astm801_browser_fill("")
 
   CLOSE astm801_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL astm801_msgcentre_notify('modify')
 
END FUNCTION 
 
{</section>}
 
{<section id="astm801.input" >}
#+ 資料輸入
PRIVATE FUNCTION astm801_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE  l_success             LIKE type_t.num5
   DEFINE  l_errno               LIKE type_t.chr10
   DEFINE  l_ooef004             LIKE ooef_t.ooef004   
   DEFINE  l_stha002             LIKE stha_t.stha002
   DEFINE  l_stha003             LIKE stha_t.stha003
   DEFINE  l_stha004             LIKE stha_t.stha004
   DEFINE  l_mhbe003             LIKE mhbe_t.mhbe003
   DEFINE  l_mhbe004             LIKE mhbe_t.mhbe004
   DEFINE  l_mhbe010             LIKE mhbe_t.mhbe010
   DEFINE  l_ooef019             LIKE ooef_t.ooef019 #稅區 
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_stje_m.stjesite,g_stje_m.stjesite_desc,g_stje_m.stje004,g_stje_m.stje001,g_stje_m.stje002, 
       g_stje_m.stje003,g_stje_m.stje003_desc,g_stje_m.stje005,g_stje_m.stje006,g_stje_m.stjestus,g_stje_m.stje007, 
       g_stje_m.stje007_desc,g_stje_m.stje008,g_stje_m.stje008_desc,g_stje_m.stje010,g_stje_m.stje009, 
       g_stje_m.stje011,g_stje_m.stje012,g_stje_m.stje013,g_stje_m.stje014,g_stje_m.stje015,g_stje_m.stje016, 
       g_stje_m.stje017,g_stje_m.stje017_desc,g_stje_m.stje018,g_stje_m.stje018_desc,g_stje_m.stje049, 
       g_stje_m.stje019,g_stje_m.stje019_desc,g_stje_m.stje020,g_stje_m.stje020_desc,g_stje_m.stje021, 
       g_stje_m.stje021_desc,g_stje_m.stje022,g_stje_m.stje022_desc,g_stje_m.stje027,g_stje_m.stje027_desc, 
       g_stje_m.stje028,g_stje_m.stje028_desc,g_stje_m.stje029,g_stje_m.stje029_desc,g_stje_m.stje026, 
       g_stje_m.stje023,g_stje_m.stje024,g_stje_m.stje025,g_stje_m.stje030,g_stje_m.stje030_desc,g_stje_m.stje031, 
       g_stje_m.stje031_desc,g_stje_m.stje032,g_stje_m.stje032_desc,g_stje_m.stje033,g_stje_m.stje034, 
       g_stje_m.stje034_desc,g_stje_m.stje035,g_stje_m.stje035_desc,g_stje_m.stje036,g_stje_m.stje036_desc, 
       g_stje_m.stje037,g_stje_m.stje038,g_stje_m.stje038_desc,g_stje_m.stje039,g_stje_m.stje039_desc, 
       g_stje_m.stje040,g_stje_m.stje041,g_stje_m.stje042,g_stje_m.stje043,g_stje_m.stje044,g_stje_m.stje045, 
       g_stje_m.stje046,g_stje_m.stje047,g_stje_m.stje048,g_stje_m.stje050,g_stje_m.stje051,g_stje_m.stje051_desc, 
       g_stje_m.stje052,g_stje_m.stje053,g_stje_m.stje053_desc,g_stje_m.stjeownid,g_stje_m.stjeownid_desc, 
       g_stje_m.stjeowndp,g_stje_m.stjeowndp_desc,g_stje_m.stjecrtid,g_stje_m.stjecrtid_desc,g_stje_m.stjecrtdp, 
       g_stje_m.stjecrtdp_desc,g_stje_m.stjecrtdt,g_stje_m.stjemodid,g_stje_m.stjemodid_desc,g_stje_m.stjemoddt, 
       g_stje_m.stjecnfid,g_stje_m.stjecnfid_desc,g_stje_m.stjecnfdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT stjfseq,stjf002,stjf003,stjf021,stjf004,stjf022,stjf005,stjf006,stjf007, 
       stjf008,stjf009,stjf010,stjf011,stjf018,stjf016,stjf017,stjf020,stjf023,stjf024,stjf025,stjfsite, 
       stjfunit FROM stjf_t WHERE stjfent=? AND stjf001=? AND stjfseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm801_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql name="input.define_sql2"
   
   #end add-point    
   LET g_forupd_sql = "SELECT stjnsite,stjnunit,stjnseq,stjn002,stjn004,stjn003,stjn005,stjn006,stjn007, 
       stjn008,stjn009,stjn010 FROM stjn_t WHERE stjnent=? AND stjn001=? AND stjnseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql2"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm801_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql3"
   
   #end add-point    
   LET g_forupd_sql = "SELECT stjosite,stjounit,stjoseq,stjo002,stjo003,stjo004,stjo005,stjo006,stjo007  
       FROM stjo_t WHERE stjoent=? AND stjo001=? AND stjoseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql3"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm801_bcl3 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql4"
   
   #end add-point    
   LET g_forupd_sql = "SELECT stjhseq,stjh002,stjh003,stjh008,stjh004,stjh005,stjh006,stjh007,stjhsite, 
       stjhunit FROM stjh_t WHERE stjhent=? AND stjh001=? AND stjhseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql4"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm801_bcl4 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql5"
   
   #end add-point    
   LET g_forupd_sql = "SELECT stjiseq,stji002,stji003,stji010,stji004,stji005,stji006,stji007,stji008, 
       stji009,stjisite,stjiunit FROM stji_t WHERE stjient=? AND stji001=? AND stjiseq=? FOR UPDATE" 
 
   #add-point:input段define_sql name="input.after_define_sql5"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm801_bcl5 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql6"
   
   #end add-point    
   LET g_forupd_sql = "SELECT stjlseq,stjl002,stjl003,stjl004,stjl005,stjl006,stjl007,stjl008,stjlsite, 
       stjlunit FROM stjl_t WHERE stjlent=? AND stjl001=? AND stjlseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql6"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm801_bcl6 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql7"
   
   #end add-point    
   LET g_forupd_sql = "SELECT stjjacti,stjjseq,stjj002,stjj003,stjj004,stjj005,stjj006,stjj007,stjj008, 
       stjj009,stjjsite,stjjunit FROM stjj_t WHERE stjjent=? AND stjj001=? AND stjjseq=? FOR UPDATE" 
 
   #add-point:input段define_sql name="input.after_define_sql7"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm801_bcl7 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql8"
   
   #end add-point    
   LET g_forupd_sql = "SELECT stjkacti,stjkseq,stjk002,stjk004,stjk003,stjk005,stjksite,stjkunit FROM  
       stjk_t WHERE stjkent=? AND stjk001=? AND stjkseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql8"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm801_bcl8 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql9"
   
   #end add-point    
   LET g_forupd_sql = "SELECT stjmseq,stjm002,stjm003,stjm004,stjm005,stjm006,stjm007,stjm008,stjm009, 
       stjm010,stjm011,stjm012,stjm013,stjm014,stjm015,stjm016,stjm018,stjm019,stjm017,stjmsite,stjmunit  
       FROM stjm_t WHERE stjment=? AND stjm001=? AND stjmseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql9"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm801_bcl9 CURSOR FROM g_forupd_sql
 
 
   
   #add-point:input段define_sql name="input.define_sql10"
   
   #end add-point 
   LET g_forupd_sql = "SELECT stjgsite,stjgunit,stjgseq1,stjg002,stjg003,stjg004,stjg006 FROM stjg_t  
       WHERE stjgent=? AND stjg001=? AND stjgseq=? AND stjgseq1=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql10"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm801_bcl10 CURSOR FROM g_forupd_sql
 
 
 
   #add-point:input段define_sql name="input.other_sql"
   LET g_forupd_sql = "SELECT stjfseq,stjf002,stjf003,stjf004,stjf005,stjf006,stjf007,stjf008, 
       stjf009,stjf010,stjf012,stjf019,stjf013,stjf014,stjf015,stjf016,stjf020 FROM stjf_t WHERE stjfent=? AND stjf001=?  
       AND stjfseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"

   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm801_bcl11 CURSOR FROM g_forupd_sql
   
   LET g_forupd_sql = "SELECT stjgseq1,stjg002,stjg003,stjg005,stjg007 FROM stjg_t  
       WHERE stjgent=? AND stjg001=? AND stjgseq=? AND stjgseq1=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql9"

   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm801_bcl12 CURSOR FROM g_forupd_sql
   
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL astm801_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL astm801_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_stje_m.stjesite,g_stje_m.stje004,g_stje_m.stje001,g_stje_m.stje002,g_stje_m.stje003, 
       g_stje_m.stje005,g_stje_m.stje006,g_stje_m.stjestus,g_stje_m.stje007,g_stje_m.stje008,g_stje_m.stje010, 
       g_stje_m.stje009,g_stje_m.stje011,g_stje_m.stje012,g_stje_m.stje013,g_stje_m.stje014,g_stje_m.stje015, 
       g_stje_m.stje016,g_stje_m.stje017,g_stje_m.stje018,g_stje_m.stje049,g_stje_m.stje019,g_stje_m.stje020, 
       g_stje_m.stje021,g_stje_m.stje022,g_stje_m.stje027,g_stje_m.stje028,g_stje_m.stje029,g_stje_m.stje026, 
       g_stje_m.stje023,g_stje_m.stje024,g_stje_m.stje025,g_stje_m.stje030,g_stje_m.stje031,g_stje_m.stje032, 
       g_stje_m.stje033,g_stje_m.stje034,g_stje_m.stje035,g_stje_m.stje036,g_stje_m.stje037,g_stje_m.stje038, 
       g_stje_m.stje039,g_stje_m.stje040,g_stje_m.stje041,g_stje_m.stje042,g_stje_m.stje043,g_stje_m.stje044, 
       g_stje_m.stje045,g_stje_m.stje046,g_stje_m.stje047,g_stje_m.stje048,g_stje_m.stje050,g_stje_m.stje051, 
       g_stje_m.stje052,g_stje_m.stje053
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="astm801.input.head" >}
      #單頭段
      INPUT BY NAME g_stje_m.stjesite,g_stje_m.stje004,g_stje_m.stje001,g_stje_m.stje002,g_stje_m.stje003, 
          g_stje_m.stje005,g_stje_m.stje006,g_stje_m.stjestus,g_stje_m.stje007,g_stje_m.stje008,g_stje_m.stje010, 
          g_stje_m.stje009,g_stje_m.stje011,g_stje_m.stje012,g_stje_m.stje013,g_stje_m.stje014,g_stje_m.stje015, 
          g_stje_m.stje016,g_stje_m.stje017,g_stje_m.stje018,g_stje_m.stje049,g_stje_m.stje019,g_stje_m.stje020, 
          g_stje_m.stje021,g_stje_m.stje022,g_stje_m.stje027,g_stje_m.stje028,g_stje_m.stje029,g_stje_m.stje026, 
          g_stje_m.stje023,g_stje_m.stje024,g_stje_m.stje025,g_stje_m.stje030,g_stje_m.stje031,g_stje_m.stje032, 
          g_stje_m.stje033,g_stje_m.stje034,g_stje_m.stje035,g_stje_m.stje036,g_stje_m.stje037,g_stje_m.stje038, 
          g_stje_m.stje039,g_stje_m.stje040,g_stje_m.stje041,g_stje_m.stje042,g_stje_m.stje043,g_stje_m.stje044, 
          g_stje_m.stje045,g_stje_m.stje046,g_stje_m.stje047,g_stje_m.stje048,g_stje_m.stje050,g_stje_m.stje051, 
          g_stje_m.stje052,g_stje_m.stje053 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN astm801_cl USING g_enterprise,g_stje_m.stje001
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm801_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astm801_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL astm801_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            
            #end add-point
            CALL astm801_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjesite
            
            #add-point:AFTER FIELD stjesite name="input.a.stjesite"
            IF NOT cl_null(g_stje_m.stjesite) THEN
               CALL s_aooi500_chk(g_prog,'stjesite',g_stje_m.stjesite,g_site) RETURNING l_success,l_errno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = g_stje_m.stjesite
                  LET g_errparam.code   = l_errno
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()

                  LET g_stje_m.stjesite = g_stje_m_t.stjesite
                  CALL astm801_stjesite_ref()
                  NEXT FIELD CURRENT
               END IF
            END IF
            LET g_site_flag = TRUE         
            CALL astm801_set_entry(p_cmd)    
            CALL astm801_set_no_entry(p_cmd) 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stje_m.stjesite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stje_m.stjesite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stje_m.stjesite_desc
            

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjesite
            #add-point:BEFORE FIELD stjesite name="input.b.stjesite"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjesite
            #add-point:ON CHANGE stjesite name="input.g.stjesite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje004
            #add-point:BEFORE FIELD stje004 name="input.b.stje004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje004
            
            #add-point:AFTER FIELD stje004 name="input.a.stje004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje004
            #add-point:ON CHANGE stje004 name="input.g.stje004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje001
            #add-point:BEFORE FIELD stje001 name="input.b.stje001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje001
            
            #add-point:AFTER FIELD stje001 name="input.a.stje001"
            #應用 a05 樣板自動產生(Version:3)
            #確認資料無重複
            IF  NOT cl_null(g_stje_m.stje001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_stje_m.stje001 != g_stje001_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stje_t WHERE "||"stjeent = '" ||g_enterprise|| "' AND "||"stje001 = '"||g_stje_m.stje001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF




            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje001
            #add-point:ON CHANGE stje001 name="input.g.stje001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje002
            #add-point:BEFORE FIELD stje002 name="input.b.stje002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje002
            
            #add-point:AFTER FIELD stje002 name="input.a.stje002"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje002
            #add-point:ON CHANGE stje002 name="input.g.stje002"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje003
            
            #add-point:AFTER FIELD stje003 name="input.a.stje003"
            IF NOT cl_null(g_stje_m.stje003) THEN 
               LET l_cnt = 0
               SELECT COUNT(*) INTO l_cnt
                 FROM stha_t
                WHERE sthaent = g_enterprise
                  AND stha001 = g_stje_m.stje003
               IF l_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "ast-00579"
                  LET g_errparam.extend = g_stje_m.stje003
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                   
                  LET g_stje_m.stje003 =  g_stje_m_t.stje003
                  NEXT FIELD CURRENT   
               END IF
               LET l_cnt = 0
               SELECT COUNT(*) INTO l_cnt
                 FROM stha_t
                WHERE sthaent = g_enterprise
                  AND stha001 = g_stje_m.stje003
                  AND sthastus = 'Y'
               IF l_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "ast-00580"
                  LET g_errparam.extend = g_stje_m.stje003
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                   
                  LET g_stje_m.stje003 =  g_stje_m_t.stje003
                  NEXT FIELD CURRENT   
               END IF
               LET l_cnt = 0
               SELECT COUNT(*) INTO l_cnt
                 FROM stha_t
                WHERE sthaent = g_enterprise
                  AND stha001 = g_stje_m.stje003
                  AND sthastus = 'Y'
                  AND sthasite = g_stje_m.stjesite
               IF l_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "ast-00581"
                  LET g_errparam.extend = g_stje_m.stje003
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                   
                  LET g_stje_m.stje003 =  g_stje_m_t.stje003
                  NEXT FIELD CURRENT   
               END IF
               IF g_stje_m.stje008 IS NOT NULL THEN
                  INITIALIZE l_stha002 TO NULL
                  INITIALIZE l_stha003 TO NULL
                  INITIALIZE l_stha004 TO NULL
                  INITIALIZE l_mhbe003 TO NULL
                  INITIALIZE l_mhbe004 TO NULL
                  INITIALIZE l_mhbe010 TO NULL
                  SELECT stha002,stha003,stha004 INTO l_stha002,l_stha003,l_stha004 
                    FROM stha_t
                   WHERE sthaent = g_enterprise
                     AND stha001 = g_stje_m.stje003
                     AND sthastus = 'Y'
                     AND sthasite = g_stje_m.stjesite
                  SELECT mhbe003,mhbe004,mhbe010 INTO l_mhbe003,l_mhbe004,l_mhbe010 
                    FROM mhbe_t
                   WHERE mhbeent = g_enterprise
                     AND mhbe001 = g_stje_m.stje008
                     AND mhbestus = 'Y'
                     AND mhbesite = g_stje_m.stjesite
                  IF l_stha002 IS NOT NULL AND l_mhbe003 IS NOT NULL THEN
                     IF l_stha002<>l_mhbe003  THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = "ast-00582"
                        LET g_errparam.extend = g_stje_m.stje003
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                         
                        LET g_stje_m.stje003 =  g_stje_m_t.stje003
                        NEXT FIELD CURRENT  
                     END IF
                  END IF
                  IF l_stha003 IS NOT NULL AND l_mhbe004 IS NOT NULL THEN
                     IF l_stha003<>l_mhbe004  THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = "ast-00583"
                        LET g_errparam.extend = g_stje_m.stje003
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                         
                        LET g_stje_m.stje003 =  g_stje_m_t.stje003
                        NEXT FIELD CURRENT  
                     END IF
                  END IF
                  IF l_stha004 IS NOT NULL AND l_mhbe010 IS NOT NULL THEN
                     IF l_stha004<>l_mhbe010  THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = "ast-00584"
                        LET g_errparam.extend = g_stje_m.stje003
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                         
                        LET g_stje_m.stje003 =  g_stje_m_t.stje003
                        NEXT FIELD CURRENT  
                     END IF
                  END IF
               END IF
            END IF
            CALL astm801_stje003_ref()
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje003
            #add-point:BEFORE FIELD stje003 name="input.b.stje003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje003
            #add-point:ON CHANGE stje003 name="input.g.stje003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje005
            #add-point:BEFORE FIELD stje005 name="input.b.stje005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje005
            
            #add-point:AFTER FIELD stje005 name="input.a.stje005"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje005
            #add-point:ON CHANGE stje005 name="input.g.stje005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje006
            #add-point:BEFORE FIELD stje006 name="input.b.stje006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje006
            
            #add-point:AFTER FIELD stje006 name="input.a.stje006"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje006
            #add-point:ON CHANGE stje006 name="input.g.stje006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjestus
            #add-point:BEFORE FIELD stjestus name="input.b.stjestus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjestus
            
            #add-point:AFTER FIELD stjestus name="input.a.stjestus"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjestus
            #add-point:ON CHANGE stjestus name="input.g.stjestus"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje007
            
            #add-point:AFTER FIELD stje007 name="input.a.stje007"
             IF NOT cl_null(g_stje_m.stje007) THEN 
#應用 a17 樣板自動產生(Version:3)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
 
               #設定g_chkparam.*的參數              
               LET g_chkparam.arg1 = g_stje_m.stje007
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_pmaa001_1") THEN
                  #檢查成功時後續處理
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
               IF g_stje_m.stje007 <> g_stje_m_o.stje007 OR g_stje_m_o.stje007 IS NULL THEN 
                  CALL astm801_stje007_other()
               END IF
            END IF 
            LET g_stje_m_o.stje007 = g_stje_m.stje007
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stje_m.stje007
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal003 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stje_m.stje007_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stje_m.stje007_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje007
            #add-point:BEFORE FIELD stje007 name="input.b.stje007"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje007
            #add-point:ON CHANGE stje007 name="input.g.stje007"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje008
            
            #add-point:AFTER FIELD stje008 name="input.a.stje008"
            IF NOT cl_null(g_stje_m.stje008) THEN 
               LET l_cnt = 0
               SELECT COUNT(*) INTO l_cnt
                 FROM mhbe_t
                WHERE mhbeent = g_enterprise
                  AND mhbe001 = g_stje_m.stje008
               IF l_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "amh-00630"
                  LET g_errparam.extend = g_stje_m.stje008
                  LET g_errparam.popup = TRUE
                  LET g_errparam.replace[1] = g_stje_m.stje008
                  CALL cl_err()
                   
                  LET g_stje_m.stje008 =  g_stje_m_t.stje008
                  NEXT FIELD CURRENT   
               END IF
               LET l_cnt = 0
               SELECT COUNT(*) INTO l_cnt
                 FROM mhbe_t
                WHERE mhbeent = g_enterprise
                  AND mhbe001 = g_stje_m.stje008
                  AND mhbestus = 'Y'
               IF l_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "amh-00643"
                  LET g_errparam.extend = g_stje_m.stje008
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                   
                  LET g_stje_m.stje008 =  g_stje_m_t.stje008
                  NEXT FIELD CURRENT   
               END IF
               LET l_cnt = 0
               SELECT COUNT(*) INTO l_cnt
                 FROM mhbe_t
                WHERE mhbeent = g_enterprise
                  AND mhbe001 = g_stje_m.stje008
                  AND mhbestus = 'Y'
                  AND mhbesite = g_stje_m.stjesite
               IF l_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "ast-00585"
                  LET g_errparam.extend = g_stje_m.stje008
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                   
                  LET g_stje_m.stje008 =  g_stje_m_t.stje008
                  NEXT FIELD CURRENT   
               END IF
               LET l_cnt = 0
               SELECT COUNT(*) INTO l_cnt
                 FROM mhbe_t
                WHERE mhbeent = g_enterprise
                  AND mhbe001 = g_stje_m.stje008
                  AND mhbestus = 'Y'
                  AND mhbesite = g_stje_m.stjesite
                  AND mhbe012 = '1'
               IF l_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "ast-00586"
                  LET g_errparam.extend = g_stje_m.stje008
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                   
                  LET g_stje_m.stje008 =  g_stje_m_t.stje008
                  NEXT FIELD CURRENT   
               END IF
               IF g_stje_m.stje003 IS NOT NULL THEN
                  INITIALIZE l_stha002 TO NULL
                  INITIALIZE l_stha003 TO NULL
                  INITIALIZE l_stha004 TO NULL
                  INITIALIZE l_mhbe003 TO NULL
                  INITIALIZE l_mhbe004 TO NULL
                  INITIALIZE l_mhbe010 TO NULL
                  SELECT stha002,stha003,stha004 INTO l_stha002,l_stha003,l_stha004 
                    FROM stha_t
                   WHERE sthaent = g_enterprise
                     AND stha001 = g_stje_m.stje003
                     AND sthastus = 'Y'
                     AND sthasite = g_stje_m.stjesite
                  SELECT mhbe003,mhbe004,mhbe010 INTO l_mhbe003,l_mhbe004,l_mhbe010 
                    FROM mhbe_t
                   WHERE mhbeent = g_enterprise
                     AND mhbe001 = g_stje_m.stje008
                     AND mhbestus = 'Y'
                     AND mhbesite = g_stje_m.stjesite
                  IF l_stha002 IS NOT NULL AND l_mhbe003 IS NOT NULL THEN
                     IF l_stha002<>l_mhbe003  THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = "ast-00582"
                        LET g_errparam.extend = g_stje_m.stje008
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                         
                        LET g_stje_m.stje008 =  g_stje_m_t.stje008
                        NEXT FIELD CURRENT  
                     END IF
                  END IF
                  IF l_stha003 IS NOT NULL AND l_mhbe004 IS NOT NULL THEN
                     IF l_stha003<>l_mhbe004  THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = "ast-00583"
                        LET g_errparam.extend = g_stje_m.stje008
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                         
                        LET g_stje_m.stje008 =  g_stje_m_t.stje008
                        NEXT FIELD CURRENT  
                     END IF
                  END IF
                  IF l_stha004 IS NOT NULL AND l_mhbe010 IS NOT NULL THEN
                     IF l_stha004<>l_mhbe010  THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = "ast-00584"
                        LET g_errparam.extend = g_stje_m.stje008
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                         
                        LET g_stje_m.stje008 =  g_stje_m_t.stje008
                        NEXT FIELD CURRENT  
                     END IF
                  END IF
               END IF
               CALL astm801_stje008_init()
            END IF
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stje_m.stje008
            CALL ap_ref_array2(g_ref_fields,"SELECT mhbel003 FROM mhbel_t WHERE mhbelent='"||g_enterprise||"' AND mhbel001=? AND mhbel002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stje_m.stje008_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stje_m.stje008_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje008
            #add-point:BEFORE FIELD stje008 name="input.b.stje008"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje008
            #add-point:ON CHANGE stje008 name="input.g.stje008"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje010
            #add-point:BEFORE FIELD stje010 name="input.b.stje010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje010
            
            #add-point:AFTER FIELD stje010 name="input.a.stje010"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje010
            #add-point:ON CHANGE stje010 name="input.g.stje010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje009
            #add-point:BEFORE FIELD stje009 name="input.b.stje009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje009
            
            #add-point:AFTER FIELD stje009 name="input.a.stje009"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje009
            #add-point:ON CHANGE stje009 name="input.g.stje009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje011
            #add-point:BEFORE FIELD stje011 name="input.b.stje011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje011
            
            #add-point:AFTER FIELD stje011 name="input.a.stje011"
            IF NOT cl_null(g_stje_m.stje011) THEN 
               IF NOT cl_null(g_stje_m.stje012) THEN 
                  IF g_stje_m.stje011 > g_stje_m.stje012 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "amm-00080"
                     LET g_errparam.extend = g_stje_m.stje011
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                      
                     LET g_stje_m.stje011 =  g_stje_m_t.stje011
                     NEXT FIELD CURRENT  
                  END IF
                  IF NOT cl_null(g_stje_m.stje013) THEN 
                     IF g_stje_m.stje013 > g_stje_m.stje012 - g_stje_m.stje011 THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = "ast-00589"
                        LET g_errparam.extend = g_stje_m.stje011
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                         
                        LET g_stje_m.stje011 =  g_stje_m_t.stje011
                        NEXT FIELD CURRENT  
                     END IF
                  END IF 
               END IF
               LET g_stje_m.stje041 = g_stje_m.stje011
               IF g_stje_m.stje013 IS NOT NULL THEN
                  LET g_stje_m.stje042 = g_stje_m.stje011 + g_stje_m.stje013
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje011
            #add-point:ON CHANGE stje011 name="input.g.stje011"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje012
            #add-point:BEFORE FIELD stje012 name="input.b.stje012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje012
            
            #add-point:AFTER FIELD stje012 name="input.a.stje012"
            IF NOT cl_null(g_stje_m.stje012) THEN 
               IF NOT cl_null(g_stje_m.stje011) THEN 
                  IF g_stje_m.stje011 > g_stje_m.stje012 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "amm-00080"
                     LET g_errparam.extend = g_stje_m.stje012
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                      
                     LET g_stje_m.stje012 =  g_stje_m_t.stje012
                     NEXT FIELD CURRENT  
                  END IF
                  IF NOT cl_null(g_stje_m.stje013) THEN 
                     IF g_stje_m.stje013 > g_stje_m.stje012 - g_stje_m.stje011 THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = "ast-00589"
                        LET g_errparam.extend = g_stje_m.stje012
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                         
                        LET g_stje_m.stje012 =  g_stje_m_t.stje012
                        NEXT FIELD CURRENT  
                     END IF
                  END IF
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje012
            #add-point:ON CHANGE stje012 name="input.g.stje012"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje013
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_stje_m.stje013,"0","1","","","azz-00079",1) THEN
               NEXT FIELD stje013
            END IF 
 
 
 
            #add-point:AFTER FIELD stje013 name="input.a.stje013"
            IF NOT cl_null(g_stje_m.stje013) THEN 
               IF g_stje_m.stje011 IS NOT NULL AND g_stje_m.stje012 IS NOT NULL THEN
                  IF g_stje_m.stje013 > g_stje_m.stje012 - g_stje_m.stje011 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "ast-00589"
                     LET g_errparam.extend = g_stje_m.stje013
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                      
                     LET g_stje_m.stje013 =  g_stje_m_t.stje013
                     NEXT FIELD CURRENT  
                  END IF
                  LET g_stje_m.stje042 = g_stje_m.stje011 + g_stje_m.stje013
               END IF
            END IF 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje013
            #add-point:BEFORE FIELD stje013 name="input.b.stje013"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje013
            #add-point:ON CHANGE stje013 name="input.g.stje013"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje014
            #add-point:BEFORE FIELD stje014 name="input.b.stje014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje014
            
            #add-point:AFTER FIELD stje014 name="input.a.stje014"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje014
            #add-point:ON CHANGE stje014 name="input.g.stje014"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje015
            #add-point:BEFORE FIELD stje015 name="input.b.stje015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje015
            
            #add-point:AFTER FIELD stje015 name="input.a.stje015"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje015
            #add-point:ON CHANGE stje015 name="input.g.stje015"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje016
            #add-point:BEFORE FIELD stje016 name="input.b.stje016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje016
            
            #add-point:AFTER FIELD stje016 name="input.a.stje016"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje016
            #add-point:ON CHANGE stje016 name="input.g.stje016"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje017
            
            #add-point:AFTER FIELD stje017 name="input.a.stje017"
             IF NOT cl_null(g_stje_m.stje017) THEN 
                #應用 a17 樣板自動產生(Version:3)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
 
               #設定g_chkparam.*的參數              
               LET g_chkparam.arg1 = g_stje_m.stje017
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooag001") THEN
                  #檢查成功時後續處理
                  #带出部门
                  IF g_stje_m_o.stje017 <> g_stje_m.stje017 OR g_stje_m_o.stje017 IS NULL THEN
                     SELECT ooag003 INTO g_stje_m.stje018 
                       FROM ooag_t
                      WHERE ooagent = g_enterprise
                        AND ooag001 = g_stje_m.stje017
                     INITIALIZE g_ref_fields TO NULL
                     LET g_ref_fields[1] = g_stje_m.stje018
                     CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
                     LET g_stje_m.stje018_desc = '', g_rtn_fields[1] , ''
                     DISPLAY BY NAME g_stje_m.stje018_desc   
                  END IF
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF               
            END IF  
            LET g_stje_m_o.stje017 = g_stje_m.stje017
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stje_m.stje017
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_stje_m.stje017_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stje_m.stje017_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje017
            #add-point:BEFORE FIELD stje017 name="input.b.stje017"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje017
            #add-point:ON CHANGE stje017 name="input.g.stje017"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje018
            
            #add-point:AFTER FIELD stje018 name="input.a.stje018"
            IF NOT cl_null(g_stje_m.stje018) THEN 
                #應用 a17 樣板自動產生(Version:3)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
 
               #設定g_chkparam.*的參數              
               LET g_chkparam.arg1 = g_stje_m.stje018
               LET g_chkparam.arg2 = g_today   
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooeg001_3") THEN
                  #檢查成功時後續處理
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
 


            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stje_m.stje018
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stje_m.stje018_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stje_m.stje018_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje018
            #add-point:BEFORE FIELD stje018 name="input.b.stje018"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje018
            #add-point:ON CHANGE stje018 name="input.g.stje018"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje049
            #add-point:BEFORE FIELD stje049 name="input.b.stje049"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje049
            
            #add-point:AFTER FIELD stje049 name="input.a.stje049"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje049
            #add-point:ON CHANGE stje049 name="input.g.stje049"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje019
            
            #add-point:AFTER FIELD stje019 name="input.a.stje019"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stje_m.stje019
            CALL ap_ref_array2(g_ref_fields,"SELECT mhaal003 FROM mhaal_t WHERE mhaalent='"||g_enterprise||"' AND mhaal001=? AND mhaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stje_m.stje019_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stje_m.stje019_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje019
            #add-point:BEFORE FIELD stje019 name="input.b.stje019"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje019
            #add-point:ON CHANGE stje019 name="input.g.stje019"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje020
            
            #add-point:AFTER FIELD stje020 name="input.a.stje020"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stje_m.stje019
            LET g_ref_fields[2] = g_stje_m.stje020
            CALL ap_ref_array2(g_ref_fields,"SELECT mhabl004 FROM mhabl_t WHERE mhablent='"||g_enterprise||"' AND mhabl001=? AND mhabl002=? AND mhabl004='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stje_m.stje020_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stje_m.stje020_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje020
            #add-point:BEFORE FIELD stje020 name="input.b.stje020"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje020
            #add-point:ON CHANGE stje020 name="input.g.stje020"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje021
            
            #add-point:AFTER FIELD stje021 name="input.a.stje021"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stje_m.stje019
            LET g_ref_fields[2] = g_stje_m.stje020
            LET g_ref_fields[3] = g_stje_m.stje021
            CALL ap_ref_array2(g_ref_fields,"SELECT mhacl005 FROM mhacl_t WHERE mhaclent='"||g_enterprise||"' AND mhacl001=? AND mhacl002=? AND mhacl003=? AND mhacl004='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stje_m.stje021_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stje_m.stje021_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje021
            #add-point:BEFORE FIELD stje021 name="input.b.stje021"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje021
            #add-point:ON CHANGE stje021 name="input.g.stje021"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje022
            
            #add-point:AFTER FIELD stje022 name="input.a.stje022"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stje_m.stje022
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2144' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stje_m.stje022_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stje_m.stje022_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje022
            #add-point:BEFORE FIELD stje022 name="input.b.stje022"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje022
            #add-point:ON CHANGE stje022 name="input.g.stje022"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje027
            
            #add-point:AFTER FIELD stje027 name="input.a.stje027"
            IF NOT cl_null(g_stje_m.stje027) THEN 
                #應用 a17 樣板自動產生(Version:3)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
 
               #設定g_chkparam.*的參數              
               LET g_chkparam.arg1 = g_stje_m.stje027
               LET g_chkparam.arg2 = cl_get_para(g_enterprise,g_site,'E-CIR-0001')  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_rtax001_2") THEN
                  #檢查成功時後續處理                  
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF               
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stje_m.stje027
            CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stje_m.stje027_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stje_m.stje027_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje027
            #add-point:BEFORE FIELD stje027 name="input.b.stje027"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje027
            #add-point:ON CHANGE stje027 name="input.g.stje027"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje028
            
            #add-point:AFTER FIELD stje028 name="input.a.stje028"
            IF NOT cl_null(g_stje_m.stje028) THEN 
                #應用 a17 樣板自動產生(Version:3)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
 
               #設定g_chkparam.*的參數              
               LET g_chkparam.arg1 = g_stje_m.stje028 
               LET g_chkparam.arg2 = cl_get_para(g_enterprise,g_site,'E-CIR-0001')  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_rtax001_2") THEN
                  #檢查成功時後續處理                  
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF               
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stje_m.stje028
            CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stje_m.stje028_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stje_m.stje028_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje028
            #add-point:BEFORE FIELD stje028 name="input.b.stje028"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje028
            #add-point:ON CHANGE stje028 name="input.g.stje028"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje029
            
            #add-point:AFTER FIELD stje029 name="input.a.stje029"
            IF NOT cl_null(g_stje_m.stje029) THEN 
                #應用 a17 樣板自動產生(Version:3)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
 
               #設定g_chkparam.*的參數              
               LET g_chkparam.arg1 = g_stje_m.stje029 
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_oocq002_2002") THEN
                  #檢查成功時後續處理                  
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF               
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stje_m.stje029
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2002' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stje_m.stje029_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stje_m.stje029_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje029
            #add-point:BEFORE FIELD stje029 name="input.b.stje029"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje029
            #add-point:ON CHANGE stje029 name="input.g.stje029"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje026
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_stje_m.stje026,"0","0","","","azz-00079",1) THEN
               NEXT FIELD stje026
            END IF 
 
 
 
            #add-point:AFTER FIELD stje026 name="input.a.stje026"
            IF NOT cl_null(g_stje_m.stje026) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje026
            #add-point:BEFORE FIELD stje026 name="input.b.stje026"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje026
            #add-point:ON CHANGE stje026 name="input.g.stje026"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje023
            #add-point:BEFORE FIELD stje023 name="input.b.stje023"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje023
            
            #add-point:AFTER FIELD stje023 name="input.a.stje023"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje023
            #add-point:ON CHANGE stje023 name="input.g.stje023"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje024
            #add-point:BEFORE FIELD stje024 name="input.b.stje024"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje024
            
            #add-point:AFTER FIELD stje024 name="input.a.stje024"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje024
            #add-point:ON CHANGE stje024 name="input.g.stje024"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje025
            #add-point:BEFORE FIELD stje025 name="input.b.stje025"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje025
            
            #add-point:AFTER FIELD stje025 name="input.a.stje025"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje025
            #add-point:ON CHANGE stje025 name="input.g.stje025"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje030
            
            #add-point:AFTER FIELD stje030 name="input.a.stje030"
            IF NOT cl_null(g_stje_m.stje030) THEN 
                #應用 a17 樣板自動產生(Version:3)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
 
               #設定g_chkparam.*的參數              
               LET g_chkparam.arg1 = g_stje_m.stje030 
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooef001_212") THEN
                  #檢查成功時後續處理                  
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF               
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stje_m.stje030
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stje_m.stje030_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stje_m.stje030_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje030
            #add-point:BEFORE FIELD stje030 name="input.b.stje030"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje030
            #add-point:ON CHANGE stje030 name="input.g.stje030"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje031
            
            #add-point:AFTER FIELD stje031 name="input.a.stje031"
            IF NOT cl_null(g_stje_m.stje031) THEN 
                #應用 a17 樣板自動產生(Version:3)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
 
               #設定g_chkparam.*的參數              
               LET g_chkparam.arg1 = g_stje_m.stje031 
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_staa001") THEN
                  #檢查成功時後續處理                  
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF               
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stje_m.stje031
            CALL ap_ref_array2(g_ref_fields,"SELECT staal003 FROM staal_t WHERE staalent='"||g_enterprise||"' AND staal001=? AND staal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stje_m.stje031_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stje_m.stje031_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje031
            #add-point:BEFORE FIELD stje031 name="input.b.stje031"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje031
            #add-point:ON CHANGE stje031 name="input.g.stje031"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje032
            
            #add-point:AFTER FIELD stje032 name="input.a.stje032"
            IF NOT cl_null(g_stje_m.stje032) THEN 
                #應用 a17 樣板自動產生(Version:3)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
 
               #設定g_chkparam.*的參數              
               LET g_chkparam.arg1 = g_stje_m.stje032 
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_oocq002_2060") THEN
                  #檢查成功時後續處理                  
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF               
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stje_m.stje032
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2060' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stje_m.stje032_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stje_m.stje032_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje032
            #add-point:BEFORE FIELD stje032 name="input.b.stje032"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje032
            #add-point:ON CHANGE stje032 name="input.g.stje032"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje033
            #add-point:BEFORE FIELD stje033 name="input.b.stje033"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje033
            
            #add-point:AFTER FIELD stje033 name="input.a.stje033"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje033
            #add-point:ON CHANGE stje033 name="input.g.stje033"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje034
            
            #add-point:AFTER FIELD stje034 name="input.a.stje034"
            IF NOT cl_null(g_stje_m.stje034) THEN 
                #應用 a17 樣板自動產生(Version:3)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
 
               #設定g_chkparam.*的參數              
               LET g_chkparam.arg1 = g_stje_m.stje034 
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooib002") THEN
                  #檢查成功時後續處理                  
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF               
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stje_m.stje034
            CALL ap_ref_array2(g_ref_fields,"SELECT ooibl004 FROM ooibl_t WHERE ooiblent='"||g_enterprise||"' AND ooibl002=? AND ooibl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stje_m.stje034_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stje_m.stje034_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje034
            #add-point:BEFORE FIELD stje034 name="input.b.stje034"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje034
            #add-point:ON CHANGE stje034 name="input.g.stje034"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje035
            
            #add-point:AFTER FIELD stje035 name="input.a.stje035"
            IF NOT cl_null(g_stje_m.stje035) THEN 
               LET l_cnt = 0
               SELECT COUNT(*) INTO l_cnt 
                 FROM oocq_t 
                WHERE oocqent = g_enterprise 
                  AND oocq001 = '238' 
                  AND oocq002 = g_stje_m.stje035 
               IF l_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "axm-00048"
                  LET g_errparam.extend = g_stje_m.stje035
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                   
                  LET g_stje_m.stje035 =  g_stje_m_t.stje035
                  NEXT FIELD CURRENT   
               END IF
               LET l_cnt = 0
               SELECT COUNT(*) INTO l_cnt 
                 FROM oocq_t 
                WHERE oocqent = g_enterprise 
                  AND oocq001 = '238' 
                  AND oocq002 = g_stje_m.stje035 
                  AND oocqstus = 'Y'
               IF l_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "ast-00591"
                  LET g_errparam.extend = g_stje_m.stje035
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                   
                  LET g_stje_m.stje035 =  g_stje_m_t.stje035
                  NEXT FIELD CURRENT   
               END IF               
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stje_m.stje035
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='238' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stje_m.stje035_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stje_m.stje035_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje035
            #add-point:BEFORE FIELD stje035 name="input.b.stje035"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje035
            #add-point:ON CHANGE stje035 name="input.g.stje035"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje036
            
            #add-point:AFTER FIELD stje036 name="input.a.stje036"
            IF NOT cl_null(g_stje_m.stje036) THEN 
                #應用 a17 樣板自動產生(Version:3)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
 
               #設定g_chkparam.*的參數              
               LET g_chkparam.arg1 = g_stje_m.stje036 
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooai001") THEN
                  #檢查成功時後續處理                  
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF               
            END IF
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stje_m.stje036
            CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stje_m.stje036_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stje_m.stje036_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje036
            #add-point:BEFORE FIELD stje036 name="input.b.stje036"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje036
            #add-point:ON CHANGE stje036 name="input.g.stje036"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje037
            #add-point:BEFORE FIELD stje037 name="input.b.stje037"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje037
            
            #add-point:AFTER FIELD stje037 name="input.a.stje037"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje037
            #add-point:ON CHANGE stje037 name="input.g.stje037"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje038
            
            #add-point:AFTER FIELD stje038 name="input.a.stje038"
            IF NOT cl_null(g_stje_m.stje038) THEN 
                #應用 a17 樣板自動產生(Version:3)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
 
               #設定g_chkparam.*的參數              
               LET g_chkparam.arg1 = g_stje_m.stjesite
               LET g_chkparam.arg2 = g_stje_m.stje038
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_oodb002") THEN
                  #檢查成功時後續處理                  
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF               
            END IF
            CALL astm801_stje038_ref()
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje038
            #add-point:BEFORE FIELD stje038 name="input.b.stje038"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje038
            #add-point:ON CHANGE stje038 name="input.g.stje038"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje039
            
            #add-point:AFTER FIELD stje039 name="input.a.stje039"
            IF NOT cl_null(g_stje_m.stje039) THEN 
#應用 a17 樣板自動產生(Version:3)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
 
               #設定g_chkparam.*的參數
               LET l_ooef019 = ''
               CALL s_tax_get_ooef019(g_stje_m.stjesite) RETURNING l_success,l_ooef019
               LET g_chkparam.arg1 = l_ooef019
               LET g_chkparam.arg2 = g_stje_m.stje039
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_isac002_1") THEN
                  #檢查成功時後續處理
                   #含发票否
                   IF g_stje_m.stje039 <> g_stje_m_o.stje039 OR g_stje_m_o.stje039 IS NULL THEN 
                      LET l_ooef019 = ''
                      CALL s_tax_get_ooef019(g_stje_m.stjesite) RETURNING l_success,l_ooef019
                      SELECT isacud001 INTO g_stje_m.stje040
                        FROM isac_t
                       WHERE isacent = g_enterprise
                         AND isac001 = l_ooef019
                         AND isac002 = g_stje_m.stje039
                      IF cl_null(g_stje_m.stje040) THEN 
                         LET g_stje_m.stje040 = 'N'
                      END IF 
                  END IF
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            END IF
            LET g_stje_m_o.stje039 = g_stje_m.stje039           
            CALL s_desc_get_invoice_type_desc1(g_stje_m.stjesite,g_stje_m.stje039) RETURNING g_stje_m.stje039_desc
            DISPLAY BY NAME g_stje_m.stje039_desc 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje039
            #add-point:BEFORE FIELD stje039 name="input.b.stje039"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje039
            #add-point:ON CHANGE stje039 name="input.g.stje039"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje040
            #add-point:BEFORE FIELD stje040 name="input.b.stje040"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje040
            
            #add-point:AFTER FIELD stje040 name="input.a.stje040"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje040
            #add-point:ON CHANGE stje040 name="input.g.stje040"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje041
            #add-point:BEFORE FIELD stje041 name="input.b.stje041"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje041
            
            #add-point:AFTER FIELD stje041 name="input.a.stje041"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje041
            #add-point:ON CHANGE stje041 name="input.g.stje041"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje042
            #add-point:BEFORE FIELD stje042 name="input.b.stje042"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje042
            
            #add-point:AFTER FIELD stje042 name="input.a.stje042"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje042
            #add-point:ON CHANGE stje042 name="input.g.stje042"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje043
            #add-point:BEFORE FIELD stje043 name="input.b.stje043"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje043
            
            #add-point:AFTER FIELD stje043 name="input.a.stje043"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje043
            #add-point:ON CHANGE stje043 name="input.g.stje043"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje044
            #add-point:BEFORE FIELD stje044 name="input.b.stje044"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje044
            
            #add-point:AFTER FIELD stje044 name="input.a.stje044"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje044
            #add-point:ON CHANGE stje044 name="input.g.stje044"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje045
            #add-point:BEFORE FIELD stje045 name="input.b.stje045"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje045
            
            #add-point:AFTER FIELD stje045 name="input.a.stje045"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje045
            #add-point:ON CHANGE stje045 name="input.g.stje045"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje046
            #add-point:BEFORE FIELD stje046 name="input.b.stje046"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje046
            
            #add-point:AFTER FIELD stje046 name="input.a.stje046"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje046
            #add-point:ON CHANGE stje046 name="input.g.stje046"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje047
            #add-point:BEFORE FIELD stje047 name="input.b.stje047"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje047
            
            #add-point:AFTER FIELD stje047 name="input.a.stje047"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje047
            #add-point:ON CHANGE stje047 name="input.g.stje047"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje048
            #add-point:BEFORE FIELD stje048 name="input.b.stje048"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje048
            
            #add-point:AFTER FIELD stje048 name="input.a.stje048"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje048
            #add-point:ON CHANGE stje048 name="input.g.stje048"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje050
            #add-point:BEFORE FIELD stje050 name="input.b.stje050"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje050
            
            #add-point:AFTER FIELD stje050 name="input.a.stje050"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje050
            #add-point:ON CHANGE stje050 name="input.g.stje050"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje051
            
            #add-point:AFTER FIELD stje051 name="input.a.stje051"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stje_m.stje051
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_stje_m.stje051_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stje_m.stje051_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje051
            #add-point:BEFORE FIELD stje051 name="input.b.stje051"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje051
            #add-point:ON CHANGE stje051 name="input.g.stje051"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje052
            #add-point:BEFORE FIELD stje052 name="input.b.stje052"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje052
            
            #add-point:AFTER FIELD stje052 name="input.a.stje052"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje052
            #add-point:ON CHANGE stje052 name="input.g.stje052"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stje053
            
            #add-point:AFTER FIELD stje053 name="input.a.stje053"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stje_m.stje053
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_stje_m.stje053_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stje_m.stje053_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stje053
            #add-point:BEFORE FIELD stje053 name="input.b.stje053"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stje053
            #add-point:ON CHANGE stje053 name="input.g.stje053"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.stjesite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjesite
            #add-point:ON ACTION controlp INFIELD stjesite name="input.c.stjesite"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_stje_m.stjesite             #給予default值

            #給予arg
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'stjesite',g_stje_m.stjesite,'i')  
 
            CALL q_ooef001_24()                                #呼叫開窗
 
            LET g_stje_m.stjesite = g_qryparam.return1              

            DISPLAY g_stje_m.stjesite TO stjesite              #

            NEXT FIELD stjesite                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.stje004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje004
            #add-point:ON ACTION controlp INFIELD stje004 name="input.c.stje004"
            
            #END add-point
 
 
         #Ctrlp:input.c.stje001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje001
            #add-point:ON ACTION controlp INFIELD stje001 name="input.c.stje001"
            
            #END add-point
 
 
         #Ctrlp:input.c.stje002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje002
            #add-point:ON ACTION controlp INFIELD stje002 name="input.c.stje002"
            
            #END add-point
 
 
         #Ctrlp:input.c.stje003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje003
            #add-point:ON ACTION controlp INFIELD stje003 name="input.c.stje003"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_stje_m.stje003             #給予default值

            #給予arg
            LET g_qryparam.where = " sthastus = 'Y'"
            IF g_stje_m.stjesite IS NOT NULL THEN
               LET g_qryparam.where = g_qryparam.where," AND sthasite = '",g_stje_m.stjesite,"'" #s
            END IF
 
            CALL q_stha001()                                #呼叫開窗
 
            LET g_stje_m.stje003 = g_qryparam.return1              

            DISPLAY g_stje_m.stje003 TO stje003              #

            NEXT FIELD stje003                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.stje005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje005
            #add-point:ON ACTION controlp INFIELD stje005 name="input.c.stje005"
            
            #END add-point
 
 
         #Ctrlp:input.c.stje006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje006
            #add-point:ON ACTION controlp INFIELD stje006 name="input.c.stje006"
            
            #END add-point
 
 
         #Ctrlp:input.c.stjestus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjestus
            #add-point:ON ACTION controlp INFIELD stjestus name="input.c.stjestus"
            
            #END add-point
 
 
         #Ctrlp:input.c.stje007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje007
            #add-point:ON ACTION controlp INFIELD stje007 name="input.c.stje007"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_stje_m.stje007             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "('1','3')" 

 
            CALL q_pmaa001_1()                                #呼叫開窗
 
            LET g_stje_m.stje007 = g_qryparam.return1              

            DISPLAY g_stje_m.stje007 TO stje007              #

            NEXT FIELD stje007                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.stje008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje008
            #add-point:ON ACTION controlp INFIELD stje008 name="input.c.stje008"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_stje_m.stje008             #給予default值

            #給予arg
            LET g_qryparam.where = "mhbesite = '",g_stje_m.stjesite,"'" #s

 
            CALL q_mhbe001()                                #呼叫開窗
 
            LET g_stje_m.stje008 = g_qryparam.return1              

            DISPLAY g_stje_m.stje008 TO stje008              #

            NEXT FIELD stje008                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.stje010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje010
            #add-point:ON ACTION controlp INFIELD stje010 name="input.c.stje010"
            
            #END add-point
 
 
         #Ctrlp:input.c.stje009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje009
            #add-point:ON ACTION controlp INFIELD stje009 name="input.c.stje009"
            
            #END add-point
 
 
         #Ctrlp:input.c.stje011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje011
            #add-point:ON ACTION controlp INFIELD stje011 name="input.c.stje011"
            
            #END add-point
 
 
         #Ctrlp:input.c.stje012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje012
            #add-point:ON ACTION controlp INFIELD stje012 name="input.c.stje012"
            
            #END add-point
 
 
         #Ctrlp:input.c.stje013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje013
            #add-point:ON ACTION controlp INFIELD stje013 name="input.c.stje013"
            
            #END add-point
 
 
         #Ctrlp:input.c.stje014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje014
            #add-point:ON ACTION controlp INFIELD stje014 name="input.c.stje014"
            
            #END add-point
 
 
         #Ctrlp:input.c.stje015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje015
            #add-point:ON ACTION controlp INFIELD stje015 name="input.c.stje015"
            
            #END add-point
 
 
         #Ctrlp:input.c.stje016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje016
            #add-point:ON ACTION controlp INFIELD stje016 name="input.c.stje016"
            
            #END add-point
 
 
         #Ctrlp:input.c.stje017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje017
            #add-point:ON ACTION controlp INFIELD stje017 name="input.c.stje017"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_stje_m.stje017             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

 
            CALL q_ooag001()                                #呼叫開窗
 
            LET g_stje_m.stje017 = g_qryparam.return1              

            DISPLAY g_stje_m.stje017 TO stje017              #

            NEXT FIELD stje017                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.stje018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje018
            #add-point:ON ACTION controlp INFIELD stje018 name="input.c.stje018"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_stje_m.stje018             #給予default值
            LET g_qryparam.default2 = "" #g_stje_m.ooeg001 #部門編號
            #給予arg
                        
            CALL q_ooeg001()                                #呼叫開窗
 
            LET g_stje_m.stje018 = g_qryparam.return1              
            #LET g_stje_m.ooeg001 = g_qryparam.return2 
            DISPLAY g_stje_m.stje018 TO stje018              #
            #DISPLAY g_stje_m.ooeg001 TO ooeg001 #部門編號
            NEXT FIELD stje018                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.stje049
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje049
            #add-point:ON ACTION controlp INFIELD stje049 name="input.c.stje049"
            
            #END add-point
 
 
         #Ctrlp:input.c.stje019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje019
            #add-point:ON ACTION controlp INFIELD stje019 name="input.c.stje019"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_stje_m.stje019             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

 
            CALL q_mhaa001()                                #呼叫開窗
 
            LET g_stje_m.stje019 = g_qryparam.return1              

            DISPLAY g_stje_m.stje019 TO stje019              #

            NEXT FIELD stje019                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.stje020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje020
            #add-point:ON ACTION controlp INFIELD stje020 name="input.c.stje020"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_stje_m.stje020             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

 
            CALL q_mhab002()                                #呼叫開窗
 
            LET g_stje_m.stje020 = g_qryparam.return1              

            DISPLAY g_stje_m.stje020 TO stje020              #

            NEXT FIELD stje020                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.stje021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje021
            #add-point:ON ACTION controlp INFIELD stje021 name="input.c.stje021"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_stje_m.stje021             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

 
            CALL q_mhac003()                                #呼叫開窗
 
            LET g_stje_m.stje021 = g_qryparam.return1              

            DISPLAY g_stje_m.stje021 TO stje021              #

            NEXT FIELD stje021                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.stje022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje022
            #add-point:ON ACTION controlp INFIELD stje022 name="input.c.stje022"
             #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_stje_m.stje022             #給予default值
            LET g_qryparam.default2 = "" #g_stje_m.oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = '2144'

 
            CALL q_oocq002()                                #呼叫開窗
 
            LET g_stje_m.stje022 = g_qryparam.return1              
            #LET g_stje_m.oocq002 = g_qryparam.return2 
            DISPLAY g_stje_m.stje022 TO stje022              #
            #DISPLAY g_stje_m.oocq002 TO oocq002 #應用分類碼
            NEXT FIELD stje022 
            #END add-point
 
 
         #Ctrlp:input.c.stje027
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje027
            #add-point:ON ACTION controlp INFIELD stje027 name="input.c.stje027"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_stje_m.stje027             #給予default值

            #給予arg
            LET g_qryparam.arg1 = cl_get_para(g_enterprise,g_site,'E-CIR-0001')

 
            CALL q_rtax001_3()                                #呼叫開窗
 
            LET g_stje_m.stje027 = g_qryparam.return1              

            DISPLAY g_stje_m.stje027 TO stje027              #

            NEXT FIELD stje027                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.stje028
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje028
            #add-point:ON ACTION controlp INFIELD stje028 name="input.c.stje028"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_stje_m.stje028             #給予default值

            #給予arg
            LET g_qryparam.arg1 = cl_get_para(g_enterprise,g_site,'E-CIR-0001')

 
            CALL q_rtax001_3()                                 #呼叫開窗
 
            LET g_stje_m.stje028 = g_qryparam.return1              

            DISPLAY g_stje_m.stje028 TO stje028              #

            NEXT FIELD stje028                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.stje029
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje029
            #add-point:ON ACTION controlp INFIELD stje029 name="input.c.stje029"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_stje_m.stje029             #給予default值
            LET g_qryparam.default2 = "" #g_stje_m.oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "" #s

 
            CALL q_oocq002_2002()                                #呼叫開窗
 
            LET g_stje_m.stje029 = g_qryparam.return1              
            #LET g_stje_m.oocq002 = g_qryparam.return2 
            DISPLAY g_stje_m.stje029 TO stje029              #
            #DISPLAY g_stje_m.oocq002 TO oocq002 #應用分類碼
            NEXT FIELD stje029                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.stje026
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje026
            #add-point:ON ACTION controlp INFIELD stje026 name="input.c.stje026"
            
            #END add-point
 
 
         #Ctrlp:input.c.stje023
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje023
            #add-point:ON ACTION controlp INFIELD stje023 name="input.c.stje023"
            
            #END add-point
 
 
         #Ctrlp:input.c.stje024
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje024
            #add-point:ON ACTION controlp INFIELD stje024 name="input.c.stje024"
            
            #END add-point
 
 
         #Ctrlp:input.c.stje025
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje025
            #add-point:ON ACTION controlp INFIELD stje025 name="input.c.stje025"
            
            #END add-point
 
 
         #Ctrlp:input.c.stje030
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje030
            #add-point:ON ACTION controlp INFIELD stje030 name="input.c.stje030"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_stje_m.stje030             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

 
            CALL q_ooef001_23()                                #呼叫開窗
 
            LET g_stje_m.stje030 = g_qryparam.return1              

            DISPLAY g_stje_m.stje030 TO stje030              #

            NEXT FIELD stje030                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.stje031
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje031
            #add-point:ON ACTION controlp INFIELD stje031 name="input.c.stje031"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_stje_m.stje031             #給予default值
            LET g_qryparam.default2 = "" #g_stje_m.staal003 #說明
            #給予arg
            LET g_qryparam.arg1 = "" #s

 
            CALL q_staa001()                                #呼叫開窗
 
            LET g_stje_m.stje031 = g_qryparam.return1              
            #LET g_stje_m.staal003 = g_qryparam.return2 
            DISPLAY g_stje_m.stje031 TO stje031              #
            #DISPLAY g_stje_m.staal003 TO staal003 #說明
            NEXT FIELD stje031                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.stje032
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje032
            #add-point:ON ACTION controlp INFIELD stje032 name="input.c.stje032"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_stje_m.stje032             #給予default值
            LET g_qryparam.default2 = "" #g_stje_m.oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = '2060'

 
            CALL q_oocq002()                                #呼叫開窗
 
            LET g_stje_m.stje032 = g_qryparam.return1              
            #LET g_stje_m.oocq002 = g_qryparam.return2 
            DISPLAY g_stje_m.stje032 TO stje032              #
            #DISPLAY g_stje_m.oocq002 TO oocq002 #應用分類碼
            NEXT FIELD stje032                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.stje033
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje033
            #add-point:ON ACTION controlp INFIELD stje033 name="input.c.stje033"
            
            #END add-point
 
 
         #Ctrlp:input.c.stje034
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje034
            #add-point:ON ACTION controlp INFIELD stje034 name="input.c.stje034"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_stje_m.stje034             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s

 
            CALL q_ooib002_1()                                #呼叫開窗
 
            LET g_stje_m.stje034 = g_qryparam.return1              

            DISPLAY g_stje_m.stje034 TO stje034              #

            NEXT FIELD stje034                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.stje035
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje035
            #add-point:ON ACTION controlp INFIELD stje035 name="input.c.stje035"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_stje_m.stje035             #給予default值
            LET g_qryparam.default2 = "" #g_stje_m.oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = '238'

 
            CALL q_oocq002()                                #呼叫開窗
 
            LET g_stje_m.stje035 = g_qryparam.return1              
            #LET g_stje_m.oocq002 = g_qryparam.return2 
            DISPLAY g_stje_m.stje035 TO stje035              #
            #DISPLAY g_stje_m.oocq002 TO oocq002 #應用分類碼
            NEXT FIELD stje035                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.stje036
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje036
            #add-point:ON ACTION controlp INFIELD stje036 name="input.c.stje036"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_stje_m.stje036             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_stje_m.stjesite

 
            CALL q_ooaj002_1()                                #呼叫開窗
 
            LET g_stje_m.stje036 = g_qryparam.return1              

            DISPLAY g_stje_m.stje036 TO stje036              #

            NEXT FIELD stje036                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.stje037
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje037
            #add-point:ON ACTION controlp INFIELD stje037 name="input.c.stje037"
            
            #END add-point
 
 
         #Ctrlp:input.c.stje038
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje038
            #add-point:ON ACTION controlp INFIELD stje038 name="input.c.stje038"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_stje_m.stje038             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_stje_m.stjesite

 
            CALL q_oodb002_1()                                #呼叫開窗
 
            LET g_stje_m.stje038 = g_qryparam.return1              

            DISPLAY g_stje_m.stje038 TO stje038              #

            NEXT FIELD stje038                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.stje039
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje039
            #add-point:ON ACTION controlp INFIELD stje039 name="input.c.stje039"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_stje_m.stje039             #給予default值

            #給予arg
            LET l_ooef019 = ''
            CALL s_tax_get_ooef019(g_site) RETURNING l_success,l_ooef019
            LET g_qryparam.arg1 = l_ooef019
            LET g_qryparam.arg2 = '1'
 
            CALL q_isac002_1()                                #呼叫開窗
 
            LET g_stje_m.stje039 = g_qryparam.return1              

            DISPLAY g_stje_m.stje039 TO stje039              #

            NEXT FIELD stje039                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.stje040
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje040
            #add-point:ON ACTION controlp INFIELD stje040 name="input.c.stje040"
            
            #END add-point
 
 
         #Ctrlp:input.c.stje041
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje041
            #add-point:ON ACTION controlp INFIELD stje041 name="input.c.stje041"
            
            #END add-point
 
 
         #Ctrlp:input.c.stje042
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje042
            #add-point:ON ACTION controlp INFIELD stje042 name="input.c.stje042"
            
            #END add-point
 
 
         #Ctrlp:input.c.stje043
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje043
            #add-point:ON ACTION controlp INFIELD stje043 name="input.c.stje043"
            
            #END add-point
 
 
         #Ctrlp:input.c.stje044
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje044
            #add-point:ON ACTION controlp INFIELD stje044 name="input.c.stje044"
            
            #END add-point
 
 
         #Ctrlp:input.c.stje045
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje045
            #add-point:ON ACTION controlp INFIELD stje045 name="input.c.stje045"
            
            #END add-point
 
 
         #Ctrlp:input.c.stje046
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje046
            #add-point:ON ACTION controlp INFIELD stje046 name="input.c.stje046"
            
            #END add-point
 
 
         #Ctrlp:input.c.stje047
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje047
            #add-point:ON ACTION controlp INFIELD stje047 name="input.c.stje047"
            
            #END add-point
 
 
         #Ctrlp:input.c.stje048
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje048
            #add-point:ON ACTION controlp INFIELD stje048 name="input.c.stje048"
            
            #END add-point
 
 
         #Ctrlp:input.c.stje050
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje050
            #add-point:ON ACTION controlp INFIELD stje050 name="input.c.stje050"
            
            #END add-point
 
 
         #Ctrlp:input.c.stje051
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje051
            #add-point:ON ACTION controlp INFIELD stje051 name="input.c.stje051"
            
            #END add-point
 
 
         #Ctrlp:input.c.stje052
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje052
            #add-point:ON ACTION controlp INFIELD stje052 name="input.c.stje052"
            
            #END add-point
 
 
         #Ctrlp:input.c.stje053
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stje053
            #add-point:ON ACTION controlp INFIELD stje053 name="input.c.stje053"
            
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_stje_m.stje001
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
 
               #end add-point
               
               INSERT INTO stje_t (stjeent,stjesite,stje004,stje001,stje002,stje003,stje005,stje006, 
                   stjestus,stje007,stje008,stje010,stje009,stje011,stje012,stje013,stje014,stje015, 
                   stje016,stje017,stje018,stje049,stje019,stje020,stje021,stje022,stje027,stje028,stje029, 
                   stje026,stje023,stje024,stje025,stje030,stje031,stje032,stje033,stje034,stje035,stje036, 
                   stje037,stje038,stje039,stje040,stje041,stje042,stje043,stje044,stje045,stje046,stje047, 
                   stje048,stje050,stje051,stje052,stje053,stjeownid,stjeowndp,stjecrtid,stjecrtdp,stjecrtdt, 
                   stjemodid,stjemoddt,stjecnfid,stjecnfdt)
               VALUES (g_enterprise,g_stje_m.stjesite,g_stje_m.stje004,g_stje_m.stje001,g_stje_m.stje002, 
                   g_stje_m.stje003,g_stje_m.stje005,g_stje_m.stje006,g_stje_m.stjestus,g_stje_m.stje007, 
                   g_stje_m.stje008,g_stje_m.stje010,g_stje_m.stje009,g_stje_m.stje011,g_stje_m.stje012, 
                   g_stje_m.stje013,g_stje_m.stje014,g_stje_m.stje015,g_stje_m.stje016,g_stje_m.stje017, 
                   g_stje_m.stje018,g_stje_m.stje049,g_stje_m.stje019,g_stje_m.stje020,g_stje_m.stje021, 
                   g_stje_m.stje022,g_stje_m.stje027,g_stje_m.stje028,g_stje_m.stje029,g_stje_m.stje026, 
                   g_stje_m.stje023,g_stje_m.stje024,g_stje_m.stje025,g_stje_m.stje030,g_stje_m.stje031, 
                   g_stje_m.stje032,g_stje_m.stje033,g_stje_m.stje034,g_stje_m.stje035,g_stje_m.stje036, 
                   g_stje_m.stje037,g_stje_m.stje038,g_stje_m.stje039,g_stje_m.stje040,g_stje_m.stje041, 
                   g_stje_m.stje042,g_stje_m.stje043,g_stje_m.stje044,g_stje_m.stje045,g_stje_m.stje046, 
                   g_stje_m.stje047,g_stje_m.stje048,g_stje_m.stje050,g_stje_m.stje051,g_stje_m.stje052, 
                   g_stje_m.stje053,g_stje_m.stjeownid,g_stje_m.stjeowndp,g_stje_m.stjecrtid,g_stje_m.stjecrtdp, 
                   g_stje_m.stjecrtdt,g_stje_m.stjemodid,g_stje_m.stjemoddt,g_stje_m.stjecnfid,g_stje_m.stjecnfdt)  
 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_stje_m:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               CALL astm801_stjj_insert() RETURNING l_success
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_stje_m:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               SELECT stje023,stje024,stje025 INTO g_stje_m.stje023,g_stje_m.stje024,g_stje_m.stje025
                 FROM stje_t 
                WHERE stjeent = g_enterprise
                  AND stje001 = g_stje_m.stje001
               DISPLAY BY NAME g_stje_m.stje023,g_stje_m.stje024,g_stje_m.stje025  
               #end add-point
               
               
               
               
               #add-point:單頭新增後 name="input.head.a_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL astm801_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL astm801_b_fill()
                  CALL astm801_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
               
               #將遮罩欄位還原
               CALL astm801_stje_t_mask_restore('restore_mask_o')
               
               UPDATE stje_t SET (stjesite,stje004,stje001,stje002,stje003,stje005,stje006,stjestus, 
                   stje007,stje008,stje010,stje009,stje011,stje012,stje013,stje014,stje015,stje016,stje017, 
                   stje018,stje049,stje019,stje020,stje021,stje022,stje027,stje028,stje029,stje026,stje023, 
                   stje024,stje025,stje030,stje031,stje032,stje033,stje034,stje035,stje036,stje037,stje038, 
                   stje039,stje040,stje041,stje042,stje043,stje044,stje045,stje046,stje047,stje048,stje050, 
                   stje051,stje052,stje053,stjeownid,stjeowndp,stjecrtid,stjecrtdp,stjecrtdt,stjemodid, 
                   stjemoddt,stjecnfid,stjecnfdt) = (g_stje_m.stjesite,g_stje_m.stje004,g_stje_m.stje001, 
                   g_stje_m.stje002,g_stje_m.stje003,g_stje_m.stje005,g_stje_m.stje006,g_stje_m.stjestus, 
                   g_stje_m.stje007,g_stje_m.stje008,g_stje_m.stje010,g_stje_m.stje009,g_stje_m.stje011, 
                   g_stje_m.stje012,g_stje_m.stje013,g_stje_m.stje014,g_stje_m.stje015,g_stje_m.stje016, 
                   g_stje_m.stje017,g_stje_m.stje018,g_stje_m.stje049,g_stje_m.stje019,g_stje_m.stje020, 
                   g_stje_m.stje021,g_stje_m.stje022,g_stje_m.stje027,g_stje_m.stje028,g_stje_m.stje029, 
                   g_stje_m.stje026,g_stje_m.stje023,g_stje_m.stje024,g_stje_m.stje025,g_stje_m.stje030, 
                   g_stje_m.stje031,g_stje_m.stje032,g_stje_m.stje033,g_stje_m.stje034,g_stje_m.stje035, 
                   g_stje_m.stje036,g_stje_m.stje037,g_stje_m.stje038,g_stje_m.stje039,g_stje_m.stje040, 
                   g_stje_m.stje041,g_stje_m.stje042,g_stje_m.stje043,g_stje_m.stje044,g_stje_m.stje045, 
                   g_stje_m.stje046,g_stje_m.stje047,g_stje_m.stje048,g_stje_m.stje050,g_stje_m.stje051, 
                   g_stje_m.stje052,g_stje_m.stje053,g_stje_m.stjeownid,g_stje_m.stjeowndp,g_stje_m.stjecrtid, 
                   g_stje_m.stjecrtdp,g_stje_m.stjecrtdt,g_stje_m.stjemodid,g_stje_m.stjemoddt,g_stje_m.stjecnfid, 
                   g_stje_m.stjecnfdt)
                WHERE stjeent = g_enterprise AND stje001 = g_stje001_t
 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "stje_t:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
 
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL astm801_stje_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_stje_m_t)
               LET g_log2 = util.JSON.stringify(g_stje_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_stje001_t = g_stje_m.stje001
 
            
      END INPUT
   
 
{</section>}
 
{<section id="astm801.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_stjf_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
 
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stjf_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astm801_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_stjf_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            CALL astm801_b_fill2('10')
 
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astm801_cl USING g_enterprise,g_stje_m.stje001
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm801_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astm801_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_stjf_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stjf_d[l_ac].stjfseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_stjf_d_t.* = g_stjf_d[l_ac].*  #BACKUP
               LET g_stjf_d_o.* = g_stjf_d[l_ac].*  #BACKUP
               CALL astm801_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               
               #end add-point  
               CALL astm801_set_no_entry_b(l_cmd)
               IF NOT astm801_lock_b("stjf_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astm801_bcl INTO g_stjf_d[l_ac].stjfseq,g_stjf_d[l_ac].stjf002,g_stjf_d[l_ac].stjf003, 
                      g_stjf_d[l_ac].stjf021,g_stjf_d[l_ac].stjf004,g_stjf_d[l_ac].stjf022,g_stjf_d[l_ac].stjf005, 
                      g_stjf_d[l_ac].stjf006,g_stjf_d[l_ac].stjf007,g_stjf_d[l_ac].stjf008,g_stjf_d[l_ac].stjf009, 
                      g_stjf_d[l_ac].stjf010,g_stjf_d[l_ac].stjf011,g_stjf_d[l_ac].stjf018,g_stjf_d[l_ac].stjf016, 
                      g_stjf_d[l_ac].stjf017,g_stjf_d[l_ac].stjf020,g_stjf_d[l_ac].stjf023,g_stjf_d[l_ac].stjf024, 
                      g_stjf_d[l_ac].stjf025,g_stjf_d[l_ac].stjfsite,g_stjf_d[l_ac].stjfunit
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_stjf_d_t.stjfseq,":",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stjf_d_mask_o[l_ac].* =  g_stjf_d[l_ac].*
                  CALL astm801_stjf_t_mask()
                  LET g_stjf_d_mask_n[l_ac].* =  g_stjf_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astm801_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            IF g_stjf_d[l_ac].stjf016 = '1' THEN
               CALL cl_set_comp_visible('group_26',FALSE)
            ELSE
               CALL cl_set_comp_visible('group_26',TRUE)
            END IF 
            IF g_stjf_d[l_ac].stjf003 IS NOT NULL THEN
               NEXT FIELD stjfsite
            END IF
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stjf_d[l_ac].* TO NULL 
            INITIALIZE g_stjf_d_t.* TO NULL 
            INITIALIZE g_stjf_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_stjf_d[l_ac].stjf002 = "N"
      LET g_stjf_d[l_ac].stjf007 = "1"
      LET g_stjf_d[l_ac].stjf008 = "1"
      LET g_stjf_d[l_ac].stjf016 = "1"
      LET g_stjf_d[l_ac].stjf020 = "Y"
 
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            SELECT MAX(stjfseq) INTO g_stjf_d[l_ac].stjfseq
              FROM stjf_t
             WHERE stjfent= g_enterprise
               AND stjf001= g_stje_m.stje001
            IF cl_null(g_stjf_d[l_ac].stjfseq) THEN
               LET g_stjf_d[l_ac].stjfseq=1
            ELSE
               LET  g_stjf_d[l_ac].stjfseq=g_stjf_d[l_ac].stjfseq+1
            END IF 
            IF g_stjf_d[l_ac].stjf016 = '1' THEN
               CALL cl_set_comp_visible('group_26',FALSE)
            ELSE
               CALL cl_set_comp_visible('group_26',TRUE)
            END IF 
            #end add-point
            LET g_stjf_d_t.* = g_stjf_d[l_ac].*     #新輸入資料
            LET g_stjf_d_o.* = g_stjf_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astm801_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            
            #end add-point
            CALL astm801_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stjf_d[li_reproduce_target].* = g_stjf_d[li_reproduce].*
 
               LET g_stjf_d[li_reproduce_target].stjfseq = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
            
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stjf_t 
             WHERE stjfent = g_enterprise AND stjf001 = g_stje_m.stje001
 
               AND stjfseq = g_stjf_d[l_ac].stjfseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stje_m.stje001
               LET gs_keys[2] = g_stjf_d[g_detail_idx].stjfseq
               CALL astm801_insert_b('stjf_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               INITIALIZE g_stjf_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stjf_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astm801_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
  
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stje_m.stje001
 
               LET gs_keys[gs_keys.getLength()+1] = g_stjf_d_t.stjfseq
 
            
               #刪除同層單身
               IF NOT astm801_delete_b('stjf_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm801_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astm801_key_delete_b(gs_keys,'stjf_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm801_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
 
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE astm801_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               
               #end add-point
               LET l_count = g_stjf_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stjf_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjfseq
            #add-point:BEFORE FIELD stjfseq name="input.b.page1.stjfseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjfseq
            
            #add-point:AFTER FIELD stjfseq name="input.a.page1.stjfseq"
            #應用 a05 樣板自動產生(Version:3)
            #確認資料無重複
            IF  g_stje_m.stje001 IS NOT NULL AND g_stjf_d[g_detail_idx].stjfseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stje_m.stje001 != g_stje001_t OR g_stjf_d[g_detail_idx].stjfseq != g_stjf_d_t.stjfseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stjf_t WHERE "||"stjfent = '" ||g_enterprise|| "' AND "||"stjf001 = '"||g_stje_m.stje001 ||"' AND "|| "stjfseq = '"||g_stjf_d[g_detail_idx].stjfseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjfseq
            #add-point:ON CHANGE stjfseq name="input.g.page1.stjfseq"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf002
            #add-point:BEFORE FIELD stjf002 name="input.b.page1.stjf002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf002
            
            #add-point:AFTER FIELD stjf002 name="input.a.page1.stjf002"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjf002
            #add-point:ON CHANGE stjf002 name="input.g.page1.stjf002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf003
            #add-point:BEFORE FIELD stjf003 name="input.b.page1.stjf003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf003
            
            #add-point:AFTER FIELD stjf003 name="input.a.page1.stjf003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjf003
            #add-point:ON CHANGE stjf003 name="input.g.page1.stjf003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf021
            #add-point:BEFORE FIELD stjf021 name="input.b.page1.stjf021"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf021
            
            #add-point:AFTER FIELD stjf021 name="input.a.page1.stjf021"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjf021
            #add-point:ON CHANGE stjf021 name="input.g.page1.stjf021"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf004
            
            #add-point:AFTER FIELD stjf004 name="input.a.page1.stjf004"
            IF NOT cl_null(g_stjf_d[l_ac].stjf004) THEN 
               #應用 a17 樣板自動產生(Version:3)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
 
               #設定g_chkparam.*的參數              
               LET g_chkparam.arg1 = g_stjf_d[l_ac].stjf004
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_stae001") THEN
                  #檢查成功時後續處理
                  #判断该费用编号要存在于单头的费用合同项里面
                  LET l_cnt = 0
                  SELECT COUNT(*) INTO l_cnt 
                    FROM sthb_t
                   WHERE sthbent = g_enterprise
                     AND sthb001 = g_stje_m.stje003
                     AND sthb002 = g_stjf_d[l_ac].stjf004
                  IF l_cnt <= 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "ast-00607"
                     LET g_errparam.extend = g_stjf_d[l_ac].stjf004
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                      
                     LET g_stjf_d[l_ac].stjf004=  g_stjf_d_t.stjf004
                     NEXT FIELD CURRENT  
                  END IF
                  #同一个费用只能是固定或者变动的
                  LET l_cnt = 0 
                  SELECT COUNT(*) INTO l_cnt 
                    FROM stjf_t
                   WHERE stjfent = g_enterprise
                     AND stjf004 = g_stjf_d[l_ac].stjf004
                     AND stjf001 = g_stje_m.stje001
                     AND stjf009 = '2'
                  IF l_cnt > 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "ast-00608"
                     LET g_errparam.extend = g_stjf_d[l_ac].stjf004
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                      
                     LET g_stjf_d[l_ac].stjf004=  g_stjf_d_t.stjf004
                     NEXT FIELD CURRENT  
                  END IF
                  #同一个费用，日期区间不能重叠
                  IF NOT cl_null(g_stjf_d[l_ac].stjf004) AND NOT cl_null(g_stjf_d[l_ac].stjf005) AND NOT cl_null(g_stjf_d[l_ac].stjf006) THEN
                     LET l_cnt = 0 
                     SELECT COUNT(*) INTO l_cnt 
                       FROM stjf_t
                      WHERE stjfent = g_enterprise
                        AND stjf001 = g_stjf_d[l_ac].stjf004
                        AND ((stjf005 >= g_stjf_d[l_ac].stjf005 AND stjf005 <= g_stjf_d[l_ac].stjf006) 
                         OR ( stjf006 <= g_stjf_d[l_ac].stjf006 AND stjf006 >= g_stjf_d[l_ac].stjf005))
                        AND stjfseq <> g_stjf_d[l_ac].stjfseq
                        AND stjf009 IN ('1','3')
                     IF l_cnt > 0 THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = "ast-00609"
                        LET g_errparam.extend = g_stjf_d[l_ac].stjf004
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                         
                        LET g_stjf_d[l_ac].stjf004=  g_stjf_d_t.stjf004
                        NEXT FIELD CURRENT  
                     END IF
                  END IF   
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            END IF  
            #带出标准否
            SELECT sthb006 INTO g_stjf_d[l_ac].stjf002
              FROM sthb_t
             WHERE sthbent = g_enterprise
               AND sthb001 = g_stje_m.stje008
               AND sthb002 = g_stjf_d[l_ac].stjf004
               
            SELECT stae004 INTO g_stjf_d[l_ac].stae004
              FROM stae_t
             WHERE staeent = g_enterprise
               AND stae001 = g_stjf_d[l_ac].stjf004
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stjf_d[l_ac].stjf004
            CALL ap_ref_array2(g_ref_fields,"SELECT stael003 FROM stael_t WHERE staelent='"||g_enterprise||"' AND stael001=? AND stael002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stjf_d[l_ac].stjf004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stjf_d[l_ac].stjf004_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf004
            #add-point:BEFORE FIELD stjf004 name="input.b.page1.stjf004"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjf004
            #add-point:ON CHANGE stjf004 name="input.g.page1.stjf004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stae004
            #add-point:BEFORE FIELD stae004 name="input.b.page1.stae004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stae004
            
            #add-point:AFTER FIELD stae004 name="input.a.page1.stae004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stae004
            #add-point:ON CHANGE stae004 name="input.g.page1.stae004"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf022
            
            #add-point:AFTER FIELD stjf022 name="input.a.page1.stjf022"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stjf_d[l_ac].stjf022
            CALL ap_ref_array2(g_ref_fields,"SELECT mhadl006 FROM mhadl_t WHERE mhadlent='"||g_enterprise||"' AND mhadl004=? AND mhadl005='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stjf_d[l_ac].stjf022_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stjf_d[l_ac].stjf022_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf022
            #add-point:BEFORE FIELD stjf022 name="input.b.page1.stjf022"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjf022
            #add-point:ON CHANGE stjf022 name="input.g.page1.stjf022"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf005
            #add-point:BEFORE FIELD stjf005 name="input.b.page1.stjf005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf005
            
            #add-point:AFTER FIELD stjf005 name="input.a.page1.stjf005"
            IF g_stjf_d[l_ac].stjf005 IS NOT NULL THEN
               IF g_stjf_d[l_ac].stjf005 < g_stje_m.stje011 OR g_stjf_d[l_ac].stjf005 > g_stje_m.stje012 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "ast-00610"
                  LET g_errparam.extend = g_stjf_d[l_ac].stjf005
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                   
                  LET g_stjf_d[l_ac].stjf005=  g_stjf_d_t.stjf005
                  NEXT FIELD CURRENT 
               END IF
               IF g_stjf_d[l_ac].stjf006 IS NOT NULL THEN
                  IF g_stjf_d[l_ac].stjf005 > g_stjf_d[l_ac].stjf006 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "amm-00080"
                  LET g_errparam.extend = g_stjf_d[l_ac].stjf005
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                   
                  LET g_stjf_d[l_ac].stjf005=  g_stjf_d_t.stjf005
                  NEXT FIELD CURRENT 
               END IF
               END IF
            END IF
            #同一个费用，日期区间不能重叠
            IF NOT cl_null(g_stjf_d[l_ac].stjf004) AND NOT cl_null(g_stjf_d[l_ac].stjf005) AND NOT cl_null(g_stjf_d[l_ac].stjf006) THEN
               LET l_cnt = 0 
               SELECT COUNT(*) INTO l_cnt 
                 FROM stjf_t
                WHERE stjfent = g_enterprise
                  AND stjf001 = g_stjf_d[l_ac].stjf004
                  AND ((stjf005 >= g_stjf_d[l_ac].stjf005 AND stjf005 <= g_stjf_d[l_ac].stjf006) 
                   OR ( stjf006 <= g_stjf_d[l_ac].stjf006 AND stjf006 >= g_stjf_d[l_ac].stjf005))
                  AND stjfseq <> g_stjf_d[l_ac].stjfseq
                  AND stjf009 IN ('1','3')
               IF l_cnt > 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "ast-00609"
                  LET g_errparam.extend = g_stjf_d[l_ac].stjf005
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                   
                  LET g_stjf_d[l_ac].stjf005=  g_stjf_d_t.stjf005
                  NEXT FIELD CURRENT  
               END IF
            END IF   
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjf005
            #add-point:ON CHANGE stjf005 name="input.g.page1.stjf005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf006
            #add-point:BEFORE FIELD stjf006 name="input.b.page1.stjf006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf006
            
            #add-point:AFTER FIELD stjf006 name="input.a.page1.stjf006"
            IF g_stjf_d[l_ac].stjf006 IS NOT NULL THEN
               IF g_stjf_d[l_ac].stjf006 < g_stje_m.stje011 OR g_stjf_d[l_ac].stjf006 > g_stje_m.stje012 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "ast-00610"
                  LET g_errparam.extend = g_stjf_d[l_ac].stjf006
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                   
                  LET g_stjf_d[l_ac].stjf006=  g_stjf_d_t.stjf006
                  NEXT FIELD CURRENT 
               END IF
               IF g_stjf_d[l_ac].stjf005 IS NOT NULL THEN
                  IF g_stjf_d[l_ac].stjf005 > g_stjf_d[l_ac].stjf006 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "amm-00080"
                  LET g_errparam.extend = g_stjf_d[l_ac].stjf006
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                   
                  LET g_stjf_d[l_ac].stjf006=  g_stjf_d_t.stjf006
                  NEXT FIELD CURRENT 
               END IF
               END IF
            END IF
            #同一个费用，日期区间不能重叠
            IF NOT cl_null(g_stjf_d[l_ac].stjf004) AND NOT cl_null(g_stjf_d[l_ac].stjf005) AND NOT cl_null(g_stjf_d[l_ac].stjf006) THEN
               LET l_cnt = 0 
               SELECT COUNT(*) INTO l_cnt 
                 FROM stjf_t
                WHERE stjfent = g_enterprise
                  AND stjf001 = g_stjf_d[l_ac].stjf004
                  AND ((stjf005 >= g_stjf_d[l_ac].stjf005 AND stjf005 <= g_stjf_d[l_ac].stjf006) 
                   OR ( stjf006 <= g_stjf_d[l_ac].stjf006 AND stjf006 >= g_stjf_d[l_ac].stjf005))
                  AND stjfseq <> g_stjf_d[l_ac].stjfseq
                  AND stjf009 IN ('1','3')
               IF l_cnt > 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "ast-00609"
                  LET g_errparam.extend = g_stjf_d[l_ac].stjf006
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                   
                  LET g_stjf_d[l_ac].stjf006=  g_stjf_d_t.stjf006
                  NEXT FIELD CURRENT  
               END IF
            END IF 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjf006
            #add-point:ON CHANGE stjf006 name="input.g.page1.stjf006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf007
            #add-point:BEFORE FIELD stjf007 name="input.b.page1.stjf007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf007
            
            #add-point:AFTER FIELD stjf007 name="input.a.page1.stjf007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjf007
            #add-point:ON CHANGE stjf007 name="input.g.page1.stjf007"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf008
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_stjf_d[l_ac].stjf008,"0","0","","","azz-00079",1) THEN
               NEXT FIELD stjf008
            END IF 
 
 
 
            #add-point:AFTER FIELD stjf008 name="input.a.page1.stjf008"
            IF NOT cl_null(g_stjf_d[l_ac].stjf008) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf008
            #add-point:BEFORE FIELD stjf008 name="input.b.page1.stjf008"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjf008
            #add-point:ON CHANGE stjf008 name="input.g.page1.stjf008"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf009
            #add-point:BEFORE FIELD stjf009 name="input.b.page1.stjf009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf009
            
            #add-point:AFTER FIELD stjf009 name="input.a.page1.stjf009"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjf009
            #add-point:ON CHANGE stjf009 name="input.g.page1.stjf009"
            IF g_stjf_d[l_ac].stjf009 ='3' THEN 
               IF g_stjf_d[l_ac].stjf010 = '4' THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "ast-00613"
                  LET g_errparam.extend = g_stjf_d[l_ac].stjf009
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                   
                  LET g_stjf_d[l_ac].stjf009=  g_stjf_d_t.stjf009
                  NEXT FIELD CURRENT  
               END IF
            END IF 
            IF g_stjf_d[l_ac].stjf009 ='1'  THEN
               IF g_stjf_d[l_ac].stjf010 <> '4'  THEN
                  LET g_stjf_d[l_ac].stjf016 =''
               END IF   
            END IF
            IF g_stjf_d[l_ac].stjf009 ='1'  THEN
               IF g_stjf_d[l_ac].stjf010 = '4'  THEN
                  LET g_stjf_d[l_ac].stjf016 ='1'
               END IF   
            END IF
            IF g_stjf_d[l_ac].stjf016 = '1' THEN
               CALL cl_set_comp_visible('group_26',FALSE)
               #删除单身
            ELSE
               CALL cl_set_comp_visible('group_26',TRUE)
            END IF 
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf010
            #add-point:BEFORE FIELD stjf010 name="input.b.page1.stjf010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf010
            
            #add-point:AFTER FIELD stjf010 name="input.a.page1.stjf010"
            
           


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjf010
            #add-point:ON CHANGE stjf010 name="input.g.page1.stjf010"
            IF g_stjf_d[l_ac].stjf009 ='3' THEN 
               IF g_stjf_d[l_ac].stjf010 = '4' THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "ast-00613"
                  LET g_errparam.extend = g_stjf_d[l_ac].stjf010
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                   
                  LET g_stjf_d[l_ac].stjf010=  g_stjf_d_t.stjf010
                  NEXT FIELD CURRENT  
               END IF
            END IF 
            IF g_stjf_d[l_ac].stjf009 ='1'  THEN
               IF g_stjf_d[l_ac].stjf010 <> '4'  THEN
                  LET g_stjf_d[l_ac].stjf016 =''
               END IF   
            END IF
            IF g_stjf_d[l_ac].stjf009 ='1'  THEN
               IF g_stjf_d[l_ac].stjf010 = '4'  THEN
                  LET g_stjf_d[l_ac].stjf016 ='1'
               END IF   
            END IF
            IF g_stjf_d[l_ac].stjf016 = '1' THEN
               CALL cl_set_comp_visible('group_26',FALSE)
               #删除单身
            ELSE
               CALL cl_set_comp_visible('group_26',TRUE)
            END IF 
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf011
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_stjf_d[l_ac].stjf011,"0","0","","","azz-00079",1) THEN
               NEXT FIELD stjf011
            END IF 
 
 
 
            #add-point:AFTER FIELD stjf011 name="input.a.page1.stjf011"
            IF NOT cl_null(g_stjf_d[l_ac].stjf011) THEN 
               LET g_stjf_d[l_ac].stjf018 = g_stjf_d[l_ac].stjf011
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf011
            #add-point:BEFORE FIELD stjf011 name="input.b.page1.stjf011"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjf011
            #add-point:ON CHANGE stjf011 name="input.g.page1.stjf011"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf018
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_stjf_d[l_ac].stjf018,"0","0","","","azz-00079",1) THEN
               NEXT FIELD stjf018
            END IF 
 
 
 
            #add-point:AFTER FIELD stjf018 name="input.a.page1.stjf018"
            IF NOT cl_null(g_stjf_d[l_ac].stjf018) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf018
            #add-point:BEFORE FIELD stjf018 name="input.b.page1.stjf018"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjf018
            #add-point:ON CHANGE stjf018 name="input.g.page1.stjf018"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf016
            #add-point:BEFORE FIELD stjf016 name="input.b.page1.stjf016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf016
            
            #add-point:AFTER FIELD stjf016 name="input.a.page1.stjf016"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjf016
            #add-point:ON CHANGE stjf016 name="input.g.page1.stjf016"
            IF g_stjf_d[l_ac].stjf016 IS NOT NULL THEN
               IF g_stjf_d[l_ac].stjf016 <> '1' THEN
                  LET g_stjf_d[l_ac].stjf011 = ''
                  LET g_stjf_d[l_ac].stjf018 = ''
               END IF 
            END IF
            IF g_stjf_d[l_ac].stjf009 ='1'  THEN
               IF g_stjf_d[l_ac].stjf010 ='1' OR g_stjf_d[l_ac].stjf010 ='2' OR g_stjf_d[l_ac].stjf010 ='3' THEN
                  IF g_stjf_d[l_ac].stjf016 = '1'  THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "ast-00614"
                     LET g_errparam.extend = g_stjf_d[l_ac].stjf016
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_stjf_d[l_ac].stjf016 =''
                     NEXT FIELD CURRENT
                  END IF  
               END IF               
            END IF 
            IF g_stjf_d[l_ac].stjf009 ='1'  THEN
               IF g_stjf_d[l_ac].stjf010 = '4' THEN
                  IF g_stjf_d[l_ac].stjf016 <> '1'  THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "ast-00623"
                     LET g_errparam.extend = g_stjf_d[l_ac].stjf016
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_stjf_d[l_ac].stjf016 =''
                     NEXT FIELD CURRENT
                  END IF  
               END IF               
            END IF             
            IF g_stjf_d[l_ac].stjf016 = '1' THEN
               CALL cl_set_comp_visible('group_26',FALSE)
               #删除单身
            ELSE
               CALL cl_set_comp_visible('group_26',TRUE)
            END IF 
            CALL astm801_set_entry_b(l_cmd)
            CALL astm801_set_no_entry_b(l_cmd)
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf017
            #add-point:BEFORE FIELD stjf017 name="input.b.page1.stjf017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf017
            
            #add-point:AFTER FIELD stjf017 name="input.a.page1.stjf017"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjf017
            #add-point:ON CHANGE stjf017 name="input.g.page1.stjf017"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf020
            #add-point:BEFORE FIELD stjf020 name="input.b.page1.stjf020"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf020
            
            #add-point:AFTER FIELD stjf020 name="input.a.page1.stjf020"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjf020
            #add-point:ON CHANGE stjf020 name="input.g.page1.stjf020"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf023
            #add-point:BEFORE FIELD stjf023 name="input.b.page1.stjf023"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf023
            
            #add-point:AFTER FIELD stjf023 name="input.a.page1.stjf023"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjf023
            #add-point:ON CHANGE stjf023 name="input.g.page1.stjf023"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf024
            
            #add-point:AFTER FIELD stjf024 name="input.a.page1.stjf024"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stjf_d[l_ac].stjf024
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stjf_d[l_ac].stjf024_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stjf_d[l_ac].stjf024_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf024
            #add-point:BEFORE FIELD stjf024 name="input.b.page1.stjf024"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjf024
            #add-point:ON CHANGE stjf024 name="input.g.page1.stjf024"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf025
            #add-point:BEFORE FIELD stjf025 name="input.b.page1.stjf025"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf025
            
            #add-point:AFTER FIELD stjf025 name="input.a.page1.stjf025"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjf025
            #add-point:ON CHANGE stjf025 name="input.g.page1.stjf025"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjfsite
            #add-point:BEFORE FIELD stjfsite name="input.b.page1.stjfsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjfsite
            
            #add-point:AFTER FIELD stjfsite name="input.a.page1.stjfsite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjfsite
            #add-point:ON CHANGE stjfsite name="input.g.page1.stjfsite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjfunit
            #add-point:BEFORE FIELD stjfunit name="input.b.page1.stjfunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjfunit
            
            #add-point:AFTER FIELD stjfunit name="input.a.page1.stjfunit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjfunit
            #add-point:ON CHANGE stjfunit name="input.g.page1.stjfunit"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.stjfseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjfseq
            #add-point:ON ACTION controlp INFIELD stjfseq name="input.c.page1.stjfseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stjf002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf002
            #add-point:ON ACTION controlp INFIELD stjf002 name="input.c.page1.stjf002"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stjf003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf003
            #add-point:ON ACTION controlp INFIELD stjf003 name="input.c.page1.stjf003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stjf021
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf021
            #add-point:ON ACTION controlp INFIELD stjf021 name="input.c.page1.stjf021"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stjf004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf004
            #add-point:ON ACTION controlp INFIELD stjf004 name="input.c.page1.stjf004"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_stjf_d[l_ac].stjf004             #給予default值
            LET g_qryparam.default2 = "" #g_stjf_d[l_ac].stael003 #說明
            LET g_qryparam.default3 = "" #g_stjf_d[l_ac].stael004 #助記碼
            #給予arg
            LET g_qryparam.arg1 = "" #s

 
            CALL q_stae001()                                #呼叫開窗
 
            LET g_stjf_d[l_ac].stjf004 = g_qryparam.return1              
            #LET g_stjf_d[l_ac].stael003 = g_qryparam.return2 
            #LET g_stjf_d[l_ac].stael004 = g_qryparam.return3 
            DISPLAY g_stjf_d[l_ac].stjf004 TO stjf004              #
            #DISPLAY g_stjf_d[l_ac].stael003 TO stael003 #說明
            #DISPLAY g_stjf_d[l_ac].stael004 TO stael004 #助記碼
            NEXT FIELD stjf004                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.page1.stae004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stae004
            #add-point:ON ACTION controlp INFIELD stae004 name="input.c.page1.stae004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stjf022
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf022
            #add-point:ON ACTION controlp INFIELD stjf022 name="input.c.page1.stjf022"
             
            #END add-point
 
 
         #Ctrlp:input.c.page1.stjf005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf005
            #add-point:ON ACTION controlp INFIELD stjf005 name="input.c.page1.stjf005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stjf006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf006
            #add-point:ON ACTION controlp INFIELD stjf006 name="input.c.page1.stjf006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stjf007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf007
            #add-point:ON ACTION controlp INFIELD stjf007 name="input.c.page1.stjf007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stjf008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf008
            #add-point:ON ACTION controlp INFIELD stjf008 name="input.c.page1.stjf008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stjf009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf009
            #add-point:ON ACTION controlp INFIELD stjf009 name="input.c.page1.stjf009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stjf010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf010
            #add-point:ON ACTION controlp INFIELD stjf010 name="input.c.page1.stjf010"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_stjf_d[l_ac].stjf010             #給予default值
            LET g_qryparam.default2 = "" #g_stjf_d[l_ac].stabl003 #說明
            LET g_qryparam.default3 = "" #g_stjf_d[l_ac].stabl004 #助記碼
            #給予arg
            LET g_qryparam.arg1 = "" #s
            LET g_qryparam.arg2 = "" #s
 
            CALL q_stab001_3()                                #呼叫開窗
 
            LET g_stjf_d[l_ac].stjf010 = g_qryparam.return1              
            #LET g_stjf_d[l_ac].stabl003 = g_qryparam.return2 
            #LET g_stjf_d[l_ac].stabl004 = g_qryparam.return3 
            DISPLAY g_stjf_d[l_ac].stjf010 TO stjf010              #
            #DISPLAY g_stjf_d[l_ac].stabl003 TO stabl003 #說明
            #DISPLAY g_stjf_d[l_ac].stabl004 TO stabl004 #助記碼
            NEXT FIELD stjf010                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.page1.stjf011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf011
            #add-point:ON ACTION controlp INFIELD stjf011 name="input.c.page1.stjf011"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stjf018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf018
            #add-point:ON ACTION controlp INFIELD stjf018 name="input.c.page1.stjf018"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stjf016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf016
            #add-point:ON ACTION controlp INFIELD stjf016 name="input.c.page1.stjf016"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stjf017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf017
            #add-point:ON ACTION controlp INFIELD stjf017 name="input.c.page1.stjf017"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stjf020
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf020
            #add-point:ON ACTION controlp INFIELD stjf020 name="input.c.page1.stjf020"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stjf023
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf023
            #add-point:ON ACTION controlp INFIELD stjf023 name="input.c.page1.stjf023"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stjf024
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf024
            #add-point:ON ACTION controlp INFIELD stjf024 name="input.c.page1.stjf024"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stjf025
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf025
            #add-point:ON ACTION controlp INFIELD stjf025 name="input.c.page1.stjf025"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stjfsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjfsite
            #add-point:ON ACTION controlp INFIELD stjfsite name="input.c.page1.stjfsite"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stjfunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjfunit
            #add-point:ON ACTION controlp INFIELD stjfunit name="input.c.page1.stjfunit"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_stjf_d[l_ac].* = g_stjf_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm801_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_stjf_d[l_ac].stjfseq 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_stjf_d[l_ac].* = g_stjf_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
 
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL astm801_stjf_t_mask_restore('restore_mask_o')
      
               UPDATE stjf_t SET (stjf001,stjfseq,stjf002,stjf003,stjf021,stjf004,stjf022,stjf005,stjf006, 
                   stjf007,stjf008,stjf009,stjf010,stjf011,stjf018,stjf016,stjf017,stjf020,stjf023,stjf024, 
                   stjf025,stjfsite,stjfunit) = (g_stje_m.stje001,g_stjf_d[l_ac].stjfseq,g_stjf_d[l_ac].stjf002, 
                   g_stjf_d[l_ac].stjf003,g_stjf_d[l_ac].stjf021,g_stjf_d[l_ac].stjf004,g_stjf_d[l_ac].stjf022, 
                   g_stjf_d[l_ac].stjf005,g_stjf_d[l_ac].stjf006,g_stjf_d[l_ac].stjf007,g_stjf_d[l_ac].stjf008, 
                   g_stjf_d[l_ac].stjf009,g_stjf_d[l_ac].stjf010,g_stjf_d[l_ac].stjf011,g_stjf_d[l_ac].stjf018, 
                   g_stjf_d[l_ac].stjf016,g_stjf_d[l_ac].stjf017,g_stjf_d[l_ac].stjf020,g_stjf_d[l_ac].stjf023, 
                   g_stjf_d[l_ac].stjf024,g_stjf_d[l_ac].stjf025,g_stjf_d[l_ac].stjfsite,g_stjf_d[l_ac].stjfunit) 
 
                WHERE stjfent = g_enterprise AND stjf001 = g_stje_m.stje001 
 
                  AND stjfseq = g_stjf_d_t.stjfseq #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_stjf_d[l_ac].* = g_stjf_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stjf_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_stjf_d[l_ac].* = g_stjf_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stjf_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stje_m.stje001
               LET gs_keys_bak[1] = g_stje001_t
               LET gs_keys[2] = g_stjf_d[g_detail_idx].stjfseq
               LET gs_keys_bak[2] = g_stjf_d_t.stjfseq
               CALL astm801_update_b('stjf_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL astm801_stjf_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_stjf_d[g_detail_idx].stjfseq = g_stjf_d_t.stjfseq 
 
                  ) THEN
                  LET gs_keys[01] = g_stje_m.stje001
 
                  LET gs_keys[gs_keys.getLength()+1] = g_stjf_d_t.stjfseq
 
                  CALL astm801_key_update_b(gs_keys,'stjf_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stje_m),util.JSON.stringify(g_stjf_d_t)
               LET g_log2 = util.JSON.stringify(g_stje_m),util.JSON.stringify(g_stjf_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            IF g_stjf_d[l_ac].stjf016 = '1' THEN
               #删除单身
               DELETE FROM stjg_t
                WHERE stjgent = g_enterprise 
                  AND stjg001 = g_stje_m.stje001
                  AND stjgseq = g_stjf_d[l_ac].stjfseq
                   
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "stjg_t:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = FALSE 
                  CALL cl_err()
                  CLOSE astm801_bcl
                  CALL s_transaction_end('N','0')
                  EXIT DIALOG 
               END IF
            END IF            
            #end add-point
            CALL astm801_unlock_b("stjf_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            CALL astm801_b_fill()
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_stjf_d[li_reproduce_target].* = g_stjf_d[li_reproduce].*
 
               LET g_stjf_d[li_reproduce_target].stjfseq = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_stjf_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_stjf_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_stjf11_d FROM s_detail11.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body11.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stjf11_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astm801_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_stjf11_d.getLength()
            #add-point:資料輸入前 name="input.body11.before_input"
            
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stjf11_d[l_ac].* TO NULL 
            INITIALIZE g_stjf11_d_t.* TO NULL 
            INITIALIZE g_stjf11_d_o.* TO NULL 
            #公用欄位給值(單身2)
            
            #自定義預設值(單身2)
                  LET g_stjf11_d[l_ac].stjn010 = "0"
 
            #add-point:modify段before備份 name="input.body11.insert.before_bak"
            SELECT MAX(stjnseq) INTO g_stjf11_d[l_ac].stjnseq
              FROM stjn_t
             WHERE stjnent= g_enterprise
               AND stjn001= g_stje_m.stje001
            IF cl_null(g_stjf11_d[l_ac].stjnseq) THEN
               LET g_stjf11_d[l_ac].stjnseq=1
            ELSE
               LET  g_stjf11_d[l_ac].stjnseq=g_stjf11_d[l_ac].stjnseq+1
            END IF 
            #end add-point
            LET g_stjf11_d_t.* = g_stjf11_d[l_ac].*     #新輸入資料
            LET g_stjf11_d_o.* = g_stjf11_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astm801_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body11.insert.after_set_entry_b"
            
            #end add-point
            CALL astm801_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stjf11_d[li_reproduce_target].* = g_stjf11_d[li_reproduce].*
 
               LET g_stjf11_d[li_reproduce_target].stjnseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body11.before_insert"
            
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body11.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[2] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 2
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astm801_cl USING g_enterprise,g_stje_m.stje001
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm801_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astm801_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_stjf11_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stjf11_d[l_ac].stjnseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_stjf11_d_t.* = g_stjf11_d[l_ac].*  #BACKUP
               LET g_stjf11_d_o.* = g_stjf11_d[l_ac].*  #BACKUP
               CALL astm801_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body11.after_set_entry_b"
               
               #end add-point  
               CALL astm801_set_no_entry_b(l_cmd)
               IF NOT astm801_lock_b("stjn_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astm801_bcl2 INTO g_stjf11_d[l_ac].stjnsite,g_stjf11_d[l_ac].stjnunit,g_stjf11_d[l_ac].stjnseq, 
                      g_stjf11_d[l_ac].stjn002,g_stjf11_d[l_ac].stjn004,g_stjf11_d[l_ac].stjn003,g_stjf11_d[l_ac].stjn005, 
                      g_stjf11_d[l_ac].stjn006,g_stjf11_d[l_ac].stjn007,g_stjf11_d[l_ac].stjn008,g_stjf11_d[l_ac].stjn009, 
                      g_stjf11_d[l_ac].stjn010
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stjf11_d_mask_o[l_ac].* =  g_stjf11_d[l_ac].*
                  CALL astm801_stjn_t_mask()
                  LET g_stjf11_d_mask_n[l_ac].* =  g_stjf11_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astm801_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body11.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body11.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body11.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前 name="input.body11.b_delete"
               
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stje_m.stje001
               LET gs_keys[gs_keys.getLength()+1] = g_stjf11_d_t.stjnseq
            
               #刪除同層單身
               IF NOT astm801_delete_b('stjn_t',gs_keys,"'2'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm801_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astm801_key_delete_b(gs_keys,'stjn_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm801_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身2刪除中 name="input.body11.m_delete"
               
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astm801_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身2刪除後 name="input.body11.a_delete"
               
               #end add-point
               LET l_count = g_stjf_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body11.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stjf11_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前 name="input.body11.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stjn_t 
             WHERE stjnent = g_enterprise AND stjn001 = g_stje_m.stje001
               AND stjnseq = g_stjf11_d[l_ac].stjnseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前 name="input.body11.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stje_m.stje001
               LET gs_keys[2] = g_stjf11_d[g_detail_idx].stjnseq
               CALL astm801_insert_b('stjn_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2 name="input.body11.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_stjf_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stjn_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astm801_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body11.after_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_stjf11_d[l_ac].* = g_stjf11_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm801_bcl2
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_stjf11_d[l_ac].* = g_stjf11_d_t.*
            ELSE
               #add-point:單身page2修改前 name="input.body11.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               #將遮罩欄位還原
               CALL astm801_stjn_t_mask_restore('restore_mask_o')
                              
               UPDATE stjn_t SET (stjn001,stjnsite,stjnunit,stjnseq,stjn002,stjn004,stjn003,stjn005, 
                   stjn006,stjn007,stjn008,stjn009,stjn010) = (g_stje_m.stje001,g_stjf11_d[l_ac].stjnsite, 
                   g_stjf11_d[l_ac].stjnunit,g_stjf11_d[l_ac].stjnseq,g_stjf11_d[l_ac].stjn002,g_stjf11_d[l_ac].stjn004, 
                   g_stjf11_d[l_ac].stjn003,g_stjf11_d[l_ac].stjn005,g_stjf11_d[l_ac].stjn006,g_stjf11_d[l_ac].stjn007, 
                   g_stjf11_d[l_ac].stjn008,g_stjf11_d[l_ac].stjn009,g_stjf11_d[l_ac].stjn010) #自訂欄位頁簽 
 
                WHERE stjnent = g_enterprise AND stjn001 = g_stje_m.stje001
                  AND stjnseq = g_stjf11_d_t.stjnseq #項次 
                  
               #add-point:單身page2修改中 name="input.body11.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_stjf11_d[l_ac].* = g_stjf11_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stjn_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_stjf11_d[l_ac].* = g_stjf11_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stjn_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stje_m.stje001
               LET gs_keys_bak[1] = g_stje001_t
               LET gs_keys[2] = g_stjf11_d[g_detail_idx].stjnseq
               LET gs_keys_bak[2] = g_stjf11_d_t.stjnseq
               CALL astm801_update_b('stjn_t',gs_keys,gs_keys_bak,"'2'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astm801_stjn_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_stjf11_d[g_detail_idx].stjnseq = g_stjf11_d_t.stjnseq 
                  ) THEN
                  LET gs_keys[01] = g_stje_m.stje001
                  LET gs_keys[gs_keys.getLength()+1] = g_stjf11_d_t.stjnseq
                  CALL astm801_key_update_b(gs_keys,'stjn_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stje_m),util.JSON.stringify(g_stjf11_d_t)
               LET g_log2 = util.JSON.stringify(g_stje_m),util.JSON.stringify(g_stjf11_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後 name="input.body11.a_update"
               
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjnsite
            #add-point:BEFORE FIELD stjnsite name="input.b.page11.stjnsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjnsite
            
            #add-point:AFTER FIELD stjnsite name="input.a.page11.stjnsite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjnsite
            #add-point:ON CHANGE stjnsite name="input.g.page11.stjnsite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjnunit
            #add-point:BEFORE FIELD stjnunit name="input.b.page11.stjnunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjnunit
            
            #add-point:AFTER FIELD stjnunit name="input.a.page11.stjnunit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjnunit
            #add-point:ON CHANGE stjnunit name="input.g.page11.stjnunit"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjnseq
            #add-point:BEFORE FIELD stjnseq name="input.b.page11.stjnseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjnseq
            
            #add-point:AFTER FIELD stjnseq name="input.a.page11.stjnseq"
            #應用 a05 樣板自動產生(Version:3)
            #確認資料無重複




            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjnseq
            #add-point:ON CHANGE stjnseq name="input.g.page11.stjnseq"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjn002
            #add-point:BEFORE FIELD stjn002 name="input.b.page11.stjn002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjn002
            
            #add-point:AFTER FIELD stjn002 name="input.a.page11.stjn002"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjn002
            #add-point:ON CHANGE stjn002 name="input.g.page11.stjn002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjn004
            #add-point:BEFORE FIELD stjn004 name="input.b.page11.stjn004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjn004
            
            #add-point:AFTER FIELD stjn004 name="input.a.page11.stjn004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjn004
            #add-point:ON CHANGE stjn004 name="input.g.page11.stjn004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjn003
            #add-point:BEFORE FIELD stjn003 name="input.b.page11.stjn003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjn003
            
            #add-point:AFTER FIELD stjn003 name="input.a.page11.stjn003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjn003
            #add-point:ON CHANGE stjn003 name="input.g.page11.stjn003"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjn005
            
            #add-point:AFTER FIELD stjn005 name="input.a.page11.stjn005"
            IF NOT cl_null(g_stjf11_d[l_ac].stjn005) THEN 
               #應用 a17 樣板自動產生(Version:3)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
 
               #設定g_chkparam.*的參數              
               LET g_chkparam.arg1 = g_stjf11_d[l_ac].stjn005
    
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_stae001") THEN
                  #檢查成功時後續處理
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            END IF  
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stjf11_d[l_ac].stjn005
            CALL ap_ref_array2(g_ref_fields,"SELECT stael003 FROM stael_t WHERE staelent='"||g_enterprise||"' AND stael001=? AND stael002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stjf11_d[l_ac].stjn005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stjf11_d[l_ac].stjn005_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjn005
            #add-point:BEFORE FIELD stjn005 name="input.b.page11.stjn005"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjn005
            #add-point:ON CHANGE stjn005 name="input.g.page11.stjn005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjn006
            #add-point:BEFORE FIELD stjn006 name="input.b.page11.stjn006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjn006
            
            #add-point:AFTER FIELD stjn006 name="input.a.page11.stjn006"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjn006
            #add-point:ON CHANGE stjn006 name="input.g.page11.stjn006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjn007
            #add-point:BEFORE FIELD stjn007 name="input.b.page11.stjn007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjn007
            
            #add-point:AFTER FIELD stjn007 name="input.a.page11.stjn007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjn007
            #add-point:ON CHANGE stjn007 name="input.g.page11.stjn007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjn008
            #add-point:BEFORE FIELD stjn008 name="input.b.page11.stjn008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjn008
            
            #add-point:AFTER FIELD stjn008 name="input.a.page11.stjn008"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjn008
            #add-point:ON CHANGE stjn008 name="input.g.page11.stjn008"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjn009
            #add-point:BEFORE FIELD stjn009 name="input.b.page11.stjn009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjn009
            
            #add-point:AFTER FIELD stjn009 name="input.a.page11.stjn009"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjn009
            #add-point:ON CHANGE stjn009 name="input.g.page11.stjn009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjn010
            #add-point:BEFORE FIELD stjn010 name="input.b.page11.stjn010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjn010
            
            #add-point:AFTER FIELD stjn010 name="input.a.page11.stjn010"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjn010
            #add-point:ON CHANGE stjn010 name="input.g.page11.stjn010"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page11.stjnsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjnsite
            #add-point:ON ACTION controlp INFIELD stjnsite name="input.c.page11.stjnsite"
            
            #END add-point
 
 
         #Ctrlp:input.c.page11.stjnunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjnunit
            #add-point:ON ACTION controlp INFIELD stjnunit name="input.c.page11.stjnunit"
            
            #END add-point
 
 
         #Ctrlp:input.c.page11.stjnseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjnseq
            #add-point:ON ACTION controlp INFIELD stjnseq name="input.c.page11.stjnseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page11.stjn002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjn002
            #add-point:ON ACTION controlp INFIELD stjn002 name="input.c.page11.stjn002"
            
            #END add-point
 
 
         #Ctrlp:input.c.page11.stjn004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjn004
            #add-point:ON ACTION controlp INFIELD stjn004 name="input.c.page11.stjn004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page11.stjn003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjn003
            #add-point:ON ACTION controlp INFIELD stjn003 name="input.c.page11.stjn003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page11.stjn005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjn005
            #add-point:ON ACTION controlp INFIELD stjn005 name="input.c.page11.stjn005"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_stjf11_d[l_ac].stjn005             #給予default值
            LET g_qryparam.default2 = "" #g_stjf11_d[l_ac].stael003 #說明
            LET g_qryparam.default3 = "" #g_stjf11_d[l_ac].stael004 #助記碼
            #給予arg
            LET g_qryparam.arg1 = "" #s

 
            CALL q_stae001()                                #呼叫開窗
 
            LET g_stjf11_d[l_ac].stjn005 = g_qryparam.return1              
            #LET g_stjf11_d[l_ac].stael003 = g_qryparam.return2 
            #LET g_stjf11_d[l_ac].stael004 = g_qryparam.return3 
            DISPLAY g_stjf11_d[l_ac].stjn005 TO stjn005              #
            #DISPLAY g_stjf11_d[l_ac].stael003 TO stael003 #說明
            #DISPLAY g_stjf11_d[l_ac].stael004 TO stael004 #助記碼
            NEXT FIELD stjn005                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.page11.stjn006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjn006
            #add-point:ON ACTION controlp INFIELD stjn006 name="input.c.page11.stjn006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page11.stjn007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjn007
            #add-point:ON ACTION controlp INFIELD stjn007 name="input.c.page11.stjn007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page11.stjn008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjn008
            #add-point:ON ACTION controlp INFIELD stjn008 name="input.c.page11.stjn008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page11.stjn009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjn009
            #add-point:ON ACTION controlp INFIELD stjn009 name="input.c.page11.stjn009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page11.stjn010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjn010
            #add-point:ON ACTION controlp INFIELD stjn010 name="input.c.page11.stjn010"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row name="input.body11.after_row"
            
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_stjf11_d[l_ac].* = g_stjf11_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm801_bcl2
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astm801_unlock_b("stjn_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2 name="input.body11.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body11.after_input"
            
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_stjf11_d[li_reproduce_target].* = g_stjf11_d[li_reproduce].*
 
               LET g_stjf11_d[li_reproduce_target].stjnseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_stjf11_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_stjf11_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_stjf13_d FROM s_detail13.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_3)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body13.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stjf13_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astm801_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_stjf13_d.getLength()
            #add-point:資料輸入前 name="input.body13.before_input"
            
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stjf13_d[l_ac].* TO NULL 
            INITIALIZE g_stjf13_d_t.* TO NULL 
            INITIALIZE g_stjf13_d_o.* TO NULL 
            #公用欄位給值(單身3)
            
            #自定義預設值(單身3)
            
            #add-point:modify段before備份 name="input.body13.insert.before_bak"
            
            #end add-point
            LET g_stjf13_d_t.* = g_stjf13_d[l_ac].*     #新輸入資料
            LET g_stjf13_d_o.* = g_stjf13_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astm801_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body13.insert.after_set_entry_b"
            
            #end add-point
            CALL astm801_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stjf13_d[li_reproduce_target].* = g_stjf13_d[li_reproduce].*
 
               LET g_stjf13_d[li_reproduce_target].stjoseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body13.before_insert"
            
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body13.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[3] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 3
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astm801_cl USING g_enterprise,g_stje_m.stje001
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm801_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astm801_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_stjf13_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stjf13_d[l_ac].stjoseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_stjf13_d_t.* = g_stjf13_d[l_ac].*  #BACKUP
               LET g_stjf13_d_o.* = g_stjf13_d[l_ac].*  #BACKUP
               CALL astm801_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body13.after_set_entry_b"
               
               #end add-point  
               CALL astm801_set_no_entry_b(l_cmd)
               IF NOT astm801_lock_b("stjo_t","'3'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astm801_bcl3 INTO g_stjf13_d[l_ac].stjosite,g_stjf13_d[l_ac].stjounit,g_stjf13_d[l_ac].stjoseq, 
                      g_stjf13_d[l_ac].stjo002,g_stjf13_d[l_ac].stjo003,g_stjf13_d[l_ac].stjo004,g_stjf13_d[l_ac].stjo005, 
                      g_stjf13_d[l_ac].stjo006,g_stjf13_d[l_ac].stjo007
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stjf13_d_mask_o[l_ac].* =  g_stjf13_d[l_ac].*
                  CALL astm801_stjo_t_mask()
                  LET g_stjf13_d_mask_n[l_ac].* =  g_stjf13_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astm801_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body13.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body13.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body13.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前 name="input.body13.b_delete"
               
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stje_m.stje001
               LET gs_keys[gs_keys.getLength()+1] = g_stjf13_d_t.stjoseq
            
               #刪除同層單身
               IF NOT astm801_delete_b('stjo_t',gs_keys,"'3'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm801_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astm801_key_delete_b(gs_keys,'stjo_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm801_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身3刪除中 name="input.body13.m_delete"
               
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astm801_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身3刪除後 name="input.body13.a_delete"
               
               #end add-point
               LET l_count = g_stjf_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body13.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stjf13_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身3新增前 name="input.body13.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stjo_t 
             WHERE stjoent = g_enterprise AND stjo001 = g_stje_m.stje001
               AND stjoseq = g_stjf13_d[l_ac].stjoseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前 name="input.body13.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stje_m.stje001
               LET gs_keys[2] = g_stjf13_d[g_detail_idx].stjoseq
               CALL astm801_insert_b('stjo_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3 name="input.body13.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_stjf_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stjo_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astm801_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body13.after_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_stjf13_d[l_ac].* = g_stjf13_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm801_bcl3
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_stjf13_d[l_ac].* = g_stjf13_d_t.*
            ELSE
               #add-point:單身page3修改前 name="input.body13.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身3)
               
               
               #將遮罩欄位還原
               CALL astm801_stjo_t_mask_restore('restore_mask_o')
                              
               UPDATE stjo_t SET (stjo001,stjosite,stjounit,stjoseq,stjo002,stjo003,stjo004,stjo005, 
                   stjo006,stjo007) = (g_stje_m.stje001,g_stjf13_d[l_ac].stjosite,g_stjf13_d[l_ac].stjounit, 
                   g_stjf13_d[l_ac].stjoseq,g_stjf13_d[l_ac].stjo002,g_stjf13_d[l_ac].stjo003,g_stjf13_d[l_ac].stjo004, 
                   g_stjf13_d[l_ac].stjo005,g_stjf13_d[l_ac].stjo006,g_stjf13_d[l_ac].stjo007) #自訂欄位頁簽 
 
                WHERE stjoent = g_enterprise AND stjo001 = g_stje_m.stje001
                  AND stjoseq = g_stjf13_d_t.stjoseq #項次 
                  
               #add-point:單身page3修改中 name="input.body13.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_stjf13_d[l_ac].* = g_stjf13_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stjo_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_stjf13_d[l_ac].* = g_stjf13_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stjo_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stje_m.stje001
               LET gs_keys_bak[1] = g_stje001_t
               LET gs_keys[2] = g_stjf13_d[g_detail_idx].stjoseq
               LET gs_keys_bak[2] = g_stjf13_d_t.stjoseq
               CALL astm801_update_b('stjo_t',gs_keys,gs_keys_bak,"'3'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astm801_stjo_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_stjf13_d[g_detail_idx].stjoseq = g_stjf13_d_t.stjoseq 
                  ) THEN
                  LET gs_keys[01] = g_stje_m.stje001
                  LET gs_keys[gs_keys.getLength()+1] = g_stjf13_d_t.stjoseq
                  CALL astm801_key_update_b(gs_keys,'stjo_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stje_m),util.JSON.stringify(g_stjf13_d_t)
               LET g_log2 = util.JSON.stringify(g_stje_m),util.JSON.stringify(g_stjf13_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page3修改後 name="input.body13.a_update"
               
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjosite
            #add-point:BEFORE FIELD stjosite name="input.b.page13.stjosite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjosite
            
            #add-point:AFTER FIELD stjosite name="input.a.page13.stjosite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjosite
            #add-point:ON CHANGE stjosite name="input.g.page13.stjosite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjounit
            #add-point:BEFORE FIELD stjounit name="input.b.page13.stjounit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjounit
            
            #add-point:AFTER FIELD stjounit name="input.a.page13.stjounit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjounit
            #add-point:ON CHANGE stjounit name="input.g.page13.stjounit"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjoseq
            #add-point:BEFORE FIELD stjoseq name="input.b.page13.stjoseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjoseq
            
            #add-point:AFTER FIELD stjoseq name="input.a.page13.stjoseq"
            #應用 a05 樣板自動產生(Version:3)
            #確認資料無重複
            IF  g_stje_m.stje001 IS NOT NULL AND g_stjf13_d[g_detail_idx].stjoseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stje_m.stje001 != g_stje001_t OR g_stjf13_d[g_detail_idx].stjoseq != g_stjf13_d_t.stjoseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stjo_t WHERE "||"stjoent = '" ||g_enterprise|| "' AND "||"stjo001 = '"||g_stje_m.stje001 ||"' AND "|| "stjoseq = '"||g_stjf13_d[g_detail_idx].stjoseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjoseq
            #add-point:ON CHANGE stjoseq name="input.g.page13.stjoseq"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjo002
            #add-point:BEFORE FIELD stjo002 name="input.b.page13.stjo002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjo002
            
            #add-point:AFTER FIELD stjo002 name="input.a.page13.stjo002"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjo002
            #add-point:ON CHANGE stjo002 name="input.g.page13.stjo002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjo003
            #add-point:BEFORE FIELD stjo003 name="input.b.page13.stjo003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjo003
            
            #add-point:AFTER FIELD stjo003 name="input.a.page13.stjo003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjo003
            #add-point:ON CHANGE stjo003 name="input.g.page13.stjo003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjo004
            #add-point:BEFORE FIELD stjo004 name="input.b.page13.stjo004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjo004
            
            #add-point:AFTER FIELD stjo004 name="input.a.page13.stjo004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjo004
            #add-point:ON CHANGE stjo004 name="input.g.page13.stjo004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjo005
            #add-point:BEFORE FIELD stjo005 name="input.b.page13.stjo005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjo005
            
            #add-point:AFTER FIELD stjo005 name="input.a.page13.stjo005"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjo005
            #add-point:ON CHANGE stjo005 name="input.g.page13.stjo005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjo006
            #add-point:BEFORE FIELD stjo006 name="input.b.page13.stjo006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjo006
            
            #add-point:AFTER FIELD stjo006 name="input.a.page13.stjo006"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjo006
            #add-point:ON CHANGE stjo006 name="input.g.page13.stjo006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjo007
            #add-point:BEFORE FIELD stjo007 name="input.b.page13.stjo007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjo007
            
            #add-point:AFTER FIELD stjo007 name="input.a.page13.stjo007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjo007
            #add-point:ON CHANGE stjo007 name="input.g.page13.stjo007"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page13.stjosite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjosite
            #add-point:ON ACTION controlp INFIELD stjosite name="input.c.page13.stjosite"
            
            #END add-point
 
 
         #Ctrlp:input.c.page13.stjounit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjounit
            #add-point:ON ACTION controlp INFIELD stjounit name="input.c.page13.stjounit"
            
            #END add-point
 
 
         #Ctrlp:input.c.page13.stjoseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjoseq
            #add-point:ON ACTION controlp INFIELD stjoseq name="input.c.page13.stjoseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page13.stjo002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjo002
            #add-point:ON ACTION controlp INFIELD stjo002 name="input.c.page13.stjo002"
            
            #END add-point
 
 
         #Ctrlp:input.c.page13.stjo003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjo003
            #add-point:ON ACTION controlp INFIELD stjo003 name="input.c.page13.stjo003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page13.stjo004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjo004
            #add-point:ON ACTION controlp INFIELD stjo004 name="input.c.page13.stjo004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page13.stjo005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjo005
            #add-point:ON ACTION controlp INFIELD stjo005 name="input.c.page13.stjo005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page13.stjo006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjo006
            #add-point:ON ACTION controlp INFIELD stjo006 name="input.c.page13.stjo006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page13.stjo007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjo007
            #add-point:ON ACTION controlp INFIELD stjo007 name="input.c.page13.stjo007"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page3 after_row name="input.body13.after_row"
            
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_stjf13_d[l_ac].* = g_stjf13_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm801_bcl3
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astm801_unlock_b("stjo_t","'3'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page3 after_row2 name="input.body13.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body13.after_input"
            
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_stjf13_d[li_reproduce_target].* = g_stjf13_d[li_reproduce].*
 
               LET g_stjf13_d[li_reproduce_target].stjoseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_stjf13_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_stjf13_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_stjf2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = FALSE, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = FALSE,
                 APPEND ROW = FALSE)
                 
         #自訂ACTION(detail_input,page_4)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body2.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stjf2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astm801_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'4',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_stjf2_d.getLength()
            #add-point:資料輸入前 name="input.body2.before_input"
            
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stjf2_d[l_ac].* TO NULL 
            INITIALIZE g_stjf2_d_t.* TO NULL 
            INITIALIZE g_stjf2_d_o.* TO NULL 
            #公用欄位給值(單身4)
            
            #自定義預設值(單身4)
                  LET g_stjf2_d[l_ac].stjh006 = "0"
 
            #add-point:modify段before備份 name="input.body2.insert.before_bak"
            
            #end add-point
            LET g_stjf2_d_t.* = g_stjf2_d[l_ac].*     #新輸入資料
            LET g_stjf2_d_o.* = g_stjf2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astm801_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body2.insert.after_set_entry_b"
            
            #end add-point
            CALL astm801_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stjf2_d[li_reproduce_target].* = g_stjf2_d[li_reproduce].*
 
               LET g_stjf2_d[li_reproduce_target].stjhseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body2.before_insert"
            
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body2.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[4] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 4
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astm801_cl USING g_enterprise,g_stje_m.stje001
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm801_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astm801_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_stjf2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stjf2_d[l_ac].stjhseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_stjf2_d_t.* = g_stjf2_d[l_ac].*  #BACKUP
               LET g_stjf2_d_o.* = g_stjf2_d[l_ac].*  #BACKUP
               CALL astm801_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body2.after_set_entry_b"
               
               #end add-point  
               CALL astm801_set_no_entry_b(l_cmd)
               IF NOT astm801_lock_b("stjh_t","'4'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astm801_bcl4 INTO g_stjf2_d[l_ac].stjhseq,g_stjf2_d[l_ac].stjh002,g_stjf2_d[l_ac].stjh003, 
                      g_stjf2_d[l_ac].stjh008,g_stjf2_d[l_ac].stjh004,g_stjf2_d[l_ac].stjh005,g_stjf2_d[l_ac].stjh006, 
                      g_stjf2_d[l_ac].stjh007,g_stjf2_d[l_ac].stjhsite,g_stjf2_d[l_ac].stjhunit
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stjf2_d_mask_o[l_ac].* =  g_stjf2_d[l_ac].*
                  CALL astm801_stjh_t_mask()
                  LET g_stjf2_d_mask_n[l_ac].* =  g_stjf2_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astm801_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body2.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body2.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body2.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身4刪除前 name="input.body2.b_delete"
               
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stje_m.stje001
               LET gs_keys[gs_keys.getLength()+1] = g_stjf2_d_t.stjhseq
            
               #刪除同層單身
               IF NOT astm801_delete_b('stjh_t',gs_keys,"'4'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm801_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astm801_key_delete_b(gs_keys,'stjh_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm801_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身4刪除中 name="input.body2.m_delete"
               
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astm801_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身4刪除後 name="input.body2.a_delete"
               
               #end add-point
               LET l_count = g_stjf_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body2.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stjf2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身4新增前 name="input.body2.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stjh_t 
             WHERE stjhent = g_enterprise AND stjh001 = g_stje_m.stje001
               AND stjhseq = g_stjf2_d[l_ac].stjhseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身4新增前 name="input.body2.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stje_m.stje001
               LET gs_keys[2] = g_stjf2_d[g_detail_idx].stjhseq
               CALL astm801_insert_b('stjh_t',gs_keys,"'4'")
                           
               #add-point:單身新增後4 name="input.body2.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_stjf_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stjh_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astm801_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body2.after_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_stjf2_d[l_ac].* = g_stjf2_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm801_bcl4
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_stjf2_d[l_ac].* = g_stjf2_d_t.*
            ELSE
               #add-point:單身page4修改前 name="input.body2.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身4)
               
               
               #將遮罩欄位還原
               CALL astm801_stjh_t_mask_restore('restore_mask_o')
                              
               UPDATE stjh_t SET (stjh001,stjhseq,stjh002,stjh003,stjh008,stjh004,stjh005,stjh006,stjh007, 
                   stjhsite,stjhunit) = (g_stje_m.stje001,g_stjf2_d[l_ac].stjhseq,g_stjf2_d[l_ac].stjh002, 
                   g_stjf2_d[l_ac].stjh003,g_stjf2_d[l_ac].stjh008,g_stjf2_d[l_ac].stjh004,g_stjf2_d[l_ac].stjh005, 
                   g_stjf2_d[l_ac].stjh006,g_stjf2_d[l_ac].stjh007,g_stjf2_d[l_ac].stjhsite,g_stjf2_d[l_ac].stjhunit)  
                   #自訂欄位頁簽
                WHERE stjhent = g_enterprise AND stjh001 = g_stje_m.stje001
                  AND stjhseq = g_stjf2_d_t.stjhseq #項次 
                  
               #add-point:單身page4修改中 name="input.body2.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_stjf2_d[l_ac].* = g_stjf2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stjh_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_stjf2_d[l_ac].* = g_stjf2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stjh_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stje_m.stje001
               LET gs_keys_bak[1] = g_stje001_t
               LET gs_keys[2] = g_stjf2_d[g_detail_idx].stjhseq
               LET gs_keys_bak[2] = g_stjf2_d_t.stjhseq
               CALL astm801_update_b('stjh_t',gs_keys,gs_keys_bak,"'4'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astm801_stjh_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_stjf2_d[g_detail_idx].stjhseq = g_stjf2_d_t.stjhseq 
                  ) THEN
                  LET gs_keys[01] = g_stje_m.stje001
                  LET gs_keys[gs_keys.getLength()+1] = g_stjf2_d_t.stjhseq
                  CALL astm801_key_update_b(gs_keys,'stjh_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stje_m),util.JSON.stringify(g_stjf2_d_t)
               LET g_log2 = util.JSON.stringify(g_stje_m),util.JSON.stringify(g_stjf2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page4修改後 name="input.body2.a_update"
               
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjhseq
            #add-point:BEFORE FIELD stjhseq name="input.b.page2.stjhseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjhseq
            
            #add-point:AFTER FIELD stjhseq name="input.a.page2.stjhseq"
            #應用 a05 樣板自動產生(Version:3)
            #確認資料無重複
            



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjhseq
            #add-point:ON CHANGE stjhseq name="input.g.page2.stjhseq"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjh002
            
            #add-point:AFTER FIELD stjh002 name="input.a.page2.stjh002"
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stjf2_d[l_ac].stjh002
            CALL ap_ref_array2(g_ref_fields,"SELECT stael003 FROM stael_t WHERE staelent='"||g_enterprise||"' AND stael001=? AND stael002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stjf2_d[l_ac].stjh002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stjf2_d[l_ac].stjh002_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjh002
            #add-point:BEFORE FIELD stjh002 name="input.b.page2.stjh002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjh002
            #add-point:ON CHANGE stjh002 name="input.g.page2.stjh002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stae004_4
            #add-point:BEFORE FIELD stae004_4 name="input.b.page2.stae004_4"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stae004_4
            
            #add-point:AFTER FIELD stae004_4 name="input.a.page2.stae004_4"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stae004_4
            #add-point:ON CHANGE stae004_4 name="input.g.page2.stae004_4"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjh003
            #add-point:BEFORE FIELD stjh003 name="input.b.page2.stjh003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjh003
            
            #add-point:AFTER FIELD stjh003 name="input.a.page2.stjh003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjh003
            #add-point:ON CHANGE stjh003 name="input.g.page2.stjh003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjh008
            #add-point:BEFORE FIELD stjh008 name="input.b.page2.stjh008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjh008
            
            #add-point:AFTER FIELD stjh008 name="input.a.page2.stjh008"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjh008
            #add-point:ON CHANGE stjh008 name="input.g.page2.stjh008"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjh004
            #add-point:BEFORE FIELD stjh004 name="input.b.page2.stjh004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjh004
            
            #add-point:AFTER FIELD stjh004 name="input.a.page2.stjh004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjh004
            #add-point:ON CHANGE stjh004 name="input.g.page2.stjh004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjh005
            #add-point:BEFORE FIELD stjh005 name="input.b.page2.stjh005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjh005
            
            #add-point:AFTER FIELD stjh005 name="input.a.page2.stjh005"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjh005
            #add-point:ON CHANGE stjh005 name="input.g.page2.stjh005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjh006
            #add-point:BEFORE FIELD stjh006 name="input.b.page2.stjh006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjh006
            
            #add-point:AFTER FIELD stjh006 name="input.a.page2.stjh006"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjh006
            #add-point:ON CHANGE stjh006 name="input.g.page2.stjh006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjh007
            #add-point:BEFORE FIELD stjh007 name="input.b.page2.stjh007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjh007
            
            #add-point:AFTER FIELD stjh007 name="input.a.page2.stjh007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjh007
            #add-point:ON CHANGE stjh007 name="input.g.page2.stjh007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjhsite
            #add-point:BEFORE FIELD stjhsite name="input.b.page2.stjhsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjhsite
            
            #add-point:AFTER FIELD stjhsite name="input.a.page2.stjhsite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjhsite
            #add-point:ON CHANGE stjhsite name="input.g.page2.stjhsite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjhunit
            #add-point:BEFORE FIELD stjhunit name="input.b.page2.stjhunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjhunit
            
            #add-point:AFTER FIELD stjhunit name="input.a.page2.stjhunit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjhunit
            #add-point:ON CHANGE stjhunit name="input.g.page2.stjhunit"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page2.stjhseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjhseq
            #add-point:ON ACTION controlp INFIELD stjhseq name="input.c.page2.stjhseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stjh002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjh002
            #add-point:ON ACTION controlp INFIELD stjh002 name="input.c.page2.stjh002"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_stjf2_d[l_ac].stjh002             #給予default值
            LET g_qryparam.default2 = "" #g_stjf2_d[l_ac].stael003 #說明
            LET g_qryparam.default3 = "" #g_stjf2_d[l_ac].stael004 #助記碼
            #給予arg
            LET g_qryparam.arg1 = "" #s

 
            CALL q_stae001()                                #呼叫開窗
 
            LET g_stjf2_d[l_ac].stjh002 = g_qryparam.return1              
            #LET g_stjf2_d[l_ac].stael003 = g_qryparam.return2 
            #LET g_stjf2_d[l_ac].stael004 = g_qryparam.return3 
            DISPLAY g_stjf2_d[l_ac].stjh002 TO stjh002              #
            #DISPLAY g_stjf2_d[l_ac].stael003 TO stael003 #說明
            #DISPLAY g_stjf2_d[l_ac].stael004 TO stael004 #助記碼
            NEXT FIELD stjh002                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.page2.stae004_4
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stae004_4
            #add-point:ON ACTION controlp INFIELD stae004_4 name="input.c.page2.stae004_4"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stjh003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjh003
            #add-point:ON ACTION controlp INFIELD stjh003 name="input.c.page2.stjh003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stjh008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjh008
            #add-point:ON ACTION controlp INFIELD stjh008 name="input.c.page2.stjh008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stjh004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjh004
            #add-point:ON ACTION controlp INFIELD stjh004 name="input.c.page2.stjh004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stjh005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjh005
            #add-point:ON ACTION controlp INFIELD stjh005 name="input.c.page2.stjh005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stjh006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjh006
            #add-point:ON ACTION controlp INFIELD stjh006 name="input.c.page2.stjh006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stjh007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjh007
            #add-point:ON ACTION controlp INFIELD stjh007 name="input.c.page2.stjh007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stjhsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjhsite
            #add-point:ON ACTION controlp INFIELD stjhsite name="input.c.page2.stjhsite"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stjhunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjhunit
            #add-point:ON ACTION controlp INFIELD stjhunit name="input.c.page2.stjhunit"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page4 after_row name="input.body2.after_row"
            
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_stjf2_d[l_ac].* = g_stjf2_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm801_bcl4
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astm801_unlock_b("stjh_t","'4'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page4 after_row2 name="input.body2.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body2.after_input"
            
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_stjf2_d[li_reproduce_target].* = g_stjf2_d[li_reproduce].*
 
               LET g_stjf2_d[li_reproduce_target].stjhseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_stjf2_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_stjf2_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_stjf3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = FALSE, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = FALSE,
                 APPEND ROW = FALSE)
                 
         #自訂ACTION(detail_input,page_5)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body3.before_input2"
            CALL astm801_stji_insert() RETURNING l_success
            IF NOT l_success THEN
               EXIT DIALOG
            END IF
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stjf3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astm801_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'5',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_stjf3_d.getLength()
            #add-point:資料輸入前 name="input.body3.before_input"
            
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stjf3_d[l_ac].* TO NULL 
            INITIALIZE g_stjf3_d_t.* TO NULL 
            INITIALIZE g_stjf3_d_o.* TO NULL 
            #公用欄位給值(單身5)
            
            #自定義預設值(單身5)
                  LET g_stjf3_d[l_ac].stji007 = "N"
      LET g_stjf3_d[l_ac].stji008 = "N"
 
            #add-point:modify段before備份 name="input.body3.insert.before_bak"
            
            #end add-point
            LET g_stjf3_d_t.* = g_stjf3_d[l_ac].*     #新輸入資料
            LET g_stjf3_d_o.* = g_stjf3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astm801_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body3.insert.after_set_entry_b"
            
            #end add-point
            CALL astm801_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stjf3_d[li_reproduce_target].* = g_stjf3_d[li_reproduce].*
 
               LET g_stjf3_d[li_reproduce_target].stjiseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body3.before_insert"
            
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body3.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[5] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 5
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astm801_cl USING g_enterprise,g_stje_m.stje001
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm801_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astm801_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_stjf3_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stjf3_d[l_ac].stjiseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_stjf3_d_t.* = g_stjf3_d[l_ac].*  #BACKUP
               LET g_stjf3_d_o.* = g_stjf3_d[l_ac].*  #BACKUP
               CALL astm801_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body3.after_set_entry_b"
               
               #end add-point  
               CALL astm801_set_no_entry_b(l_cmd)
               IF NOT astm801_lock_b("stji_t","'5'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astm801_bcl5 INTO g_stjf3_d[l_ac].stjiseq,g_stjf3_d[l_ac].stji002,g_stjf3_d[l_ac].stji003, 
                      g_stjf3_d[l_ac].stji010,g_stjf3_d[l_ac].stji004,g_stjf3_d[l_ac].stji005,g_stjf3_d[l_ac].stji006, 
                      g_stjf3_d[l_ac].stji007,g_stjf3_d[l_ac].stji008,g_stjf3_d[l_ac].stji009,g_stjf3_d[l_ac].stjisite, 
                      g_stjf3_d[l_ac].stjiunit
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stjf3_d_mask_o[l_ac].* =  g_stjf3_d[l_ac].*
                  CALL astm801_stji_t_mask()
                  LET g_stjf3_d_mask_n[l_ac].* =  g_stjf3_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astm801_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body3.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body3.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body3.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身5刪除前 name="input.body3.b_delete"
               
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stje_m.stje001
               LET gs_keys[gs_keys.getLength()+1] = g_stjf3_d_t.stjiseq
            
               #刪除同層單身
               IF NOT astm801_delete_b('stji_t',gs_keys,"'5'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm801_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astm801_key_delete_b(gs_keys,'stji_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm801_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身5刪除中 name="input.body3.m_delete"
               
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astm801_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身5刪除後 name="input.body3.a_delete"
               
               #end add-point
               LET l_count = g_stjf_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body3.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stjf3_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身5新增前 name="input.body3.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stji_t 
             WHERE stjient = g_enterprise AND stji001 = g_stje_m.stje001
               AND stjiseq = g_stjf3_d[l_ac].stjiseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身5新增前 name="input.body3.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stje_m.stje001
               LET gs_keys[2] = g_stjf3_d[g_detail_idx].stjiseq
               CALL astm801_insert_b('stji_t',gs_keys,"'5'")
                           
               #add-point:單身新增後5 name="input.body3.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_stjf_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stji_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astm801_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body3.after_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_stjf3_d[l_ac].* = g_stjf3_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm801_bcl5
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_stjf3_d[l_ac].* = g_stjf3_d_t.*
            ELSE
               #add-point:單身page5修改前 name="input.body3.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身5)
               
               
               #將遮罩欄位還原
               CALL astm801_stji_t_mask_restore('restore_mask_o')
                              
               UPDATE stji_t SET (stji001,stjiseq,stji002,stji003,stji010,stji004,stji005,stji006,stji007, 
                   stji008,stji009,stjisite,stjiunit) = (g_stje_m.stje001,g_stjf3_d[l_ac].stjiseq,g_stjf3_d[l_ac].stji002, 
                   g_stjf3_d[l_ac].stji003,g_stjf3_d[l_ac].stji010,g_stjf3_d[l_ac].stji004,g_stjf3_d[l_ac].stji005, 
                   g_stjf3_d[l_ac].stji006,g_stjf3_d[l_ac].stji007,g_stjf3_d[l_ac].stji008,g_stjf3_d[l_ac].stji009, 
                   g_stjf3_d[l_ac].stjisite,g_stjf3_d[l_ac].stjiunit) #自訂欄位頁簽
                WHERE stjient = g_enterprise AND stji001 = g_stje_m.stje001
                  AND stjiseq = g_stjf3_d_t.stjiseq #項次 
                  
               #add-point:單身page5修改中 name="input.body3.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_stjf3_d[l_ac].* = g_stjf3_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stji_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_stjf3_d[l_ac].* = g_stjf3_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stji_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stje_m.stje001
               LET gs_keys_bak[1] = g_stje001_t
               LET gs_keys[2] = g_stjf3_d[g_detail_idx].stjiseq
               LET gs_keys_bak[2] = g_stjf3_d_t.stjiseq
               CALL astm801_update_b('stji_t',gs_keys,gs_keys_bak,"'5'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astm801_stji_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_stjf3_d[g_detail_idx].stjiseq = g_stjf3_d_t.stjiseq 
                  ) THEN
                  LET gs_keys[01] = g_stje_m.stje001
                  LET gs_keys[gs_keys.getLength()+1] = g_stjf3_d_t.stjiseq
                  CALL astm801_key_update_b(gs_keys,'stji_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stje_m),util.JSON.stringify(g_stjf3_d_t)
               LET g_log2 = util.JSON.stringify(g_stje_m),util.JSON.stringify(g_stjf3_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page5修改後 name="input.body3.a_update"
               
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjiseq
            #add-point:BEFORE FIELD stjiseq name="input.b.page3.stjiseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjiseq
            
            #add-point:AFTER FIELD stjiseq name="input.a.page3.stjiseq"
            #應用 a05 樣板自動產生(Version:3)
            #確認資料無重複
            



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjiseq
            #add-point:ON CHANGE stjiseq name="input.g.page3.stjiseq"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stji002
            
            #add-point:AFTER FIELD stji002 name="input.a.page3.stji002"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stjf3_d[l_ac].stji002
            CALL ap_ref_array2(g_ref_fields,"SELECT stael003 FROM stael_t WHERE staelent='"||g_enterprise||"' AND stael001=? AND stael002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stjf3_d[l_ac].stji002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stjf3_d[l_ac].stji002_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stji002
            #add-point:BEFORE FIELD stji002 name="input.b.page3.stji002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stji002
            #add-point:ON CHANGE stji002 name="input.g.page3.stji002"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stji003
            
            #add-point:AFTER FIELD stji003 name="input.a.page3.stji003"
            IF NOT cl_null(g_stjf3_d[l_ac].stji003) THEN 
               #應用 a17 樣板自動產生(Version:3)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
 
               #設定g_chkparam.*的參數              
               LET g_chkparam.arg1 = g_stjf3_d[l_ac].stji003
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_staa001") THEN
                  #檢查成功時後續處理
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            END IF   
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stjf3_d[l_ac].stji003
            CALL ap_ref_array2(g_ref_fields,"SELECT staal003 FROM staal_t WHERE staalent='"||g_enterprise||"' AND staal001=? AND staal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stjf3_d[l_ac].stji003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stjf3_d[l_ac].stji003_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stji003
            #add-point:BEFORE FIELD stji003 name="input.b.page3.stji003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stji003
            #add-point:ON CHANGE stji003 name="input.g.page3.stji003"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stji010
            
            #add-point:AFTER FIELD stji010 name="input.a.page3.stji010"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stjf3_d[l_ac].stji010
            CALL ap_ref_array2(g_ref_fields,"SELECT oodbl004 FROM oodbl_t WHERE oodblent='"||g_enterprise||"' AND oodbl002=? AND oodb003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stjf3_d[l_ac].stji010_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stjf3_d[l_ac].stji010_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stji010
            #add-point:BEFORE FIELD stji010 name="input.b.page3.stji010"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stji010
            #add-point:ON CHANGE stji010 name="input.g.page3.stji010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stji004
            #add-point:BEFORE FIELD stji004 name="input.b.page3.stji004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stji004
            
            #add-point:AFTER FIELD stji004 name="input.a.page3.stji004"
            IF NOT cl_null(g_stjf3_d[l_ac].stji004) THEN
               IF g_stjf3_d[l_ac].stji009 = '2' THEN
                  IF g_stjf3_d[l_ac].stji009 <=0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "ast-00606"
                     LET g_errparam.extend = g_stje_m.stje008
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                      
                     LET g_stje_m.stje008 =  g_stje_m_t.stje008
                     NEXT FIELD CURRENT   
                  END IF
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stji004
            #add-point:ON CHANGE stji004 name="input.g.page3.stji004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stji005
            #add-point:BEFORE FIELD stji005 name="input.b.page3.stji005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stji005
            
            #add-point:AFTER FIELD stji005 name="input.a.page3.stji005"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stji005
            #add-point:ON CHANGE stji005 name="input.g.page3.stji005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stji006
            #add-point:BEFORE FIELD stji006 name="input.b.page3.stji006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stji006
            
            #add-point:AFTER FIELD stji006 name="input.a.page3.stji006"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stji006
            #add-point:ON CHANGE stji006 name="input.g.page3.stji006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stji007
            #add-point:BEFORE FIELD stji007 name="input.b.page3.stji007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stji007
            
            #add-point:AFTER FIELD stji007 name="input.a.page3.stji007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stji007
            #add-point:ON CHANGE stji007 name="input.g.page3.stji007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stji008
            #add-point:BEFORE FIELD stji008 name="input.b.page3.stji008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stji008
            
            #add-point:AFTER FIELD stji008 name="input.a.page3.stji008"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stji008
            #add-point:ON CHANGE stji008 name="input.g.page3.stji008"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stji009
            #add-point:BEFORE FIELD stji009 name="input.b.page3.stji009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stji009
            
            #add-point:AFTER FIELD stji009 name="input.a.page3.stji009"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stji009
            #add-point:ON CHANGE stji009 name="input.g.page3.stji009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjisite
            #add-point:BEFORE FIELD stjisite name="input.b.page3.stjisite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjisite
            
            #add-point:AFTER FIELD stjisite name="input.a.page3.stjisite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjisite
            #add-point:ON CHANGE stjisite name="input.g.page3.stjisite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjiunit
            #add-point:BEFORE FIELD stjiunit name="input.b.page3.stjiunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjiunit
            
            #add-point:AFTER FIELD stjiunit name="input.a.page3.stjiunit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjiunit
            #add-point:ON CHANGE stjiunit name="input.g.page3.stjiunit"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page3.stjiseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjiseq
            #add-point:ON ACTION controlp INFIELD stjiseq name="input.c.page3.stjiseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.stji002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stji002
            #add-point:ON ACTION controlp INFIELD stji002 name="input.c.page3.stji002"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_stjf3_d[l_ac].stji002             #給予default值
            LET g_qryparam.default2 = "" #g_stjf3_d[l_ac].stael003 #說明
            LET g_qryparam.default3 = "" #g_stjf3_d[l_ac].stael004 #助記碼
            #給予arg
            LET g_qryparam.arg1 = "" #s

 
            CALL q_stae001()                                #呼叫開窗
 
            LET g_stjf3_d[l_ac].stji002 = g_qryparam.return1              
            #LET g_stjf3_d[l_ac].stael003 = g_qryparam.return2 
            #LET g_stjf3_d[l_ac].stael004 = g_qryparam.return3 
            DISPLAY g_stjf3_d[l_ac].stji002 TO stji002              #
            #DISPLAY g_stjf3_d[l_ac].stael003 TO stael003 #說明
            #DISPLAY g_stjf3_d[l_ac].stael004 TO stael004 #助記碼
            NEXT FIELD stji002                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.page3.stji003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stji003
            #add-point:ON ACTION controlp INFIELD stji003 name="input.c.page3.stji003"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_stjf3_d[l_ac].stji003             #給予default值
            LET g_qryparam.default2 = "" #g_stjf3_d[l_ac].staal003 #說明
            #給予arg
            LET g_qryparam.arg1 = "" #s

 
            CALL q_staa001()                                #呼叫開窗
 
            LET g_stjf3_d[l_ac].stji003 = g_qryparam.return1              
            #LET g_stjf3_d[l_ac].staal003 = g_qryparam.return2 
            DISPLAY g_stjf3_d[l_ac].stji003 TO stji003              #
            #DISPLAY g_stjf3_d[l_ac].staal003 TO staal003 #說明
            NEXT FIELD stji003                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.page3.stji010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stji010
            #add-point:ON ACTION controlp INFIELD stji010 name="input.c.page3.stji010"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.stji004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stji004
            #add-point:ON ACTION controlp INFIELD stji004 name="input.c.page3.stji004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.stji005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stji005
            #add-point:ON ACTION controlp INFIELD stji005 name="input.c.page3.stji005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.stji006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stji006
            #add-point:ON ACTION controlp INFIELD stji006 name="input.c.page3.stji006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.stji007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stji007
            #add-point:ON ACTION controlp INFIELD stji007 name="input.c.page3.stji007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.stji008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stji008
            #add-point:ON ACTION controlp INFIELD stji008 name="input.c.page3.stji008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.stji009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stji009
            #add-point:ON ACTION controlp INFIELD stji009 name="input.c.page3.stji009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.stjisite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjisite
            #add-point:ON ACTION controlp INFIELD stjisite name="input.c.page3.stjisite"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.stjiunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjiunit
            #add-point:ON ACTION controlp INFIELD stjiunit name="input.c.page3.stjiunit"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page5 after_row name="input.body3.after_row"
            
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_stjf3_d[l_ac].* = g_stjf3_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm801_bcl5
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astm801_unlock_b("stji_t","'5'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page5 after_row2 name="input.body3.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body3.after_input"
            
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_stjf3_d[li_reproduce_target].* = g_stjf3_d[li_reproduce].*
 
               LET g_stjf3_d[li_reproduce_target].stjiseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_stjf3_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_stjf3_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_stjf4_d FROM s_detail4.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_6)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body4.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stjf4_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astm801_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'6',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_stjf4_d.getLength()
            #add-point:資料輸入前 name="input.body4.before_input"
            
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stjf4_d[l_ac].* TO NULL 
            INITIALIZE g_stjf4_d_t.* TO NULL 
            INITIALIZE g_stjf4_d_o.* TO NULL 
            #公用欄位給值(單身6)
            
            #自定義預設值(單身6)
                  LET g_stjf4_d[l_ac].stjl004 = "N"
      LET g_stjf4_d[l_ac].stjl005 = "N"
 
            #add-point:modify段before備份 name="input.body4.insert.before_bak"
            SELECT MAX(stjlseq) INTO g_stjf4_d[l_ac].stjlseq
              FROM stjl_t
             WHERE stjlent= g_enterprise
               AND stjl001= g_stje_m.stje001
            IF cl_null(g_stjf4_d[l_ac].stjlseq) THEN
               LET g_stjf4_d[l_ac].stjlseq=1
            ELSE
               LET g_stjf4_d[l_ac].stjlseq=g_stjf4_d[l_ac].stjlseq+1
            END IF 
            #end add-point
            LET g_stjf4_d_t.* = g_stjf4_d[l_ac].*     #新輸入資料
            LET g_stjf4_d_o.* = g_stjf4_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astm801_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body4.insert.after_set_entry_b"
            
            #end add-point
            CALL astm801_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stjf4_d[li_reproduce_target].* = g_stjf4_d[li_reproduce].*
 
               LET g_stjf4_d[li_reproduce_target].stjlseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body4.before_insert"
            
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body4.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[6] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 6
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astm801_cl USING g_enterprise,g_stje_m.stje001
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm801_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astm801_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_stjf4_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stjf4_d[l_ac].stjlseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_stjf4_d_t.* = g_stjf4_d[l_ac].*  #BACKUP
               LET g_stjf4_d_o.* = g_stjf4_d[l_ac].*  #BACKUP
               CALL astm801_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body4.after_set_entry_b"
               
               #end add-point  
               CALL astm801_set_no_entry_b(l_cmd)
               IF NOT astm801_lock_b("stjl_t","'6'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astm801_bcl6 INTO g_stjf4_d[l_ac].stjlseq,g_stjf4_d[l_ac].stjl002,g_stjf4_d[l_ac].stjl003, 
                      g_stjf4_d[l_ac].stjl004,g_stjf4_d[l_ac].stjl005,g_stjf4_d[l_ac].stjl006,g_stjf4_d[l_ac].stjl007, 
                      g_stjf4_d[l_ac].stjl008,g_stjf4_d[l_ac].stjlsite,g_stjf4_d[l_ac].stjlunit
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stjf4_d_mask_o[l_ac].* =  g_stjf4_d[l_ac].*
                  CALL astm801_stjl_t_mask()
                  LET g_stjf4_d_mask_n[l_ac].* =  g_stjf4_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astm801_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body4.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body4.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body4.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身6刪除前 name="input.body4.b_delete"
               
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stje_m.stje001
               LET gs_keys[gs_keys.getLength()+1] = g_stjf4_d_t.stjlseq
            
               #刪除同層單身
               IF NOT astm801_delete_b('stjl_t',gs_keys,"'6'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm801_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astm801_key_delete_b(gs_keys,'stjl_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm801_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身6刪除中 name="input.body4.m_delete"
               
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astm801_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身6刪除後 name="input.body4.a_delete"
               
               #end add-point
               LET l_count = g_stjf_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body4.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stjf4_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身6新增前 name="input.body4.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stjl_t 
             WHERE stjlent = g_enterprise AND stjl001 = g_stje_m.stje001
               AND stjlseq = g_stjf4_d[l_ac].stjlseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身6新增前 name="input.body4.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stje_m.stje001
               LET gs_keys[2] = g_stjf4_d[g_detail_idx].stjlseq
               CALL astm801_insert_b('stjl_t',gs_keys,"'6'")
                           
               #add-point:單身新增後6 name="input.body4.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_stjf_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stjl_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astm801_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body4.after_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_stjf4_d[l_ac].* = g_stjf4_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm801_bcl6
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_stjf4_d[l_ac].* = g_stjf4_d_t.*
            ELSE
               #add-point:單身page6修改前 name="input.body4.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身6)
               
               
               #將遮罩欄位還原
               CALL astm801_stjl_t_mask_restore('restore_mask_o')
                              
               UPDATE stjl_t SET (stjl001,stjlseq,stjl002,stjl003,stjl004,stjl005,stjl006,stjl007,stjl008, 
                   stjlsite,stjlunit) = (g_stje_m.stje001,g_stjf4_d[l_ac].stjlseq,g_stjf4_d[l_ac].stjl002, 
                   g_stjf4_d[l_ac].stjl003,g_stjf4_d[l_ac].stjl004,g_stjf4_d[l_ac].stjl005,g_stjf4_d[l_ac].stjl006, 
                   g_stjf4_d[l_ac].stjl007,g_stjf4_d[l_ac].stjl008,g_stjf4_d[l_ac].stjlsite,g_stjf4_d[l_ac].stjlunit)  
                   #自訂欄位頁簽
                WHERE stjlent = g_enterprise AND stjl001 = g_stje_m.stje001
                  AND stjlseq = g_stjf4_d_t.stjlseq #項次 
                  
               #add-point:單身page6修改中 name="input.body4.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_stjf4_d[l_ac].* = g_stjf4_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stjl_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_stjf4_d[l_ac].* = g_stjf4_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stjl_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stje_m.stje001
               LET gs_keys_bak[1] = g_stje001_t
               LET gs_keys[2] = g_stjf4_d[g_detail_idx].stjlseq
               LET gs_keys_bak[2] = g_stjf4_d_t.stjlseq
               CALL astm801_update_b('stjl_t',gs_keys,gs_keys_bak,"'6'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astm801_stjl_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_stjf4_d[g_detail_idx].stjlseq = g_stjf4_d_t.stjlseq 
                  ) THEN
                  LET gs_keys[01] = g_stje_m.stje001
                  LET gs_keys[gs_keys.getLength()+1] = g_stjf4_d_t.stjlseq
                  CALL astm801_key_update_b(gs_keys,'stjl_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stje_m),util.JSON.stringify(g_stjf4_d_t)
               LET g_log2 = util.JSON.stringify(g_stje_m),util.JSON.stringify(g_stjf4_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page6修改後 name="input.body4.a_update"
               
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjlseq
            #add-point:BEFORE FIELD stjlseq name="input.b.page4.stjlseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjlseq
            
            #add-point:AFTER FIELD stjlseq name="input.a.page4.stjlseq"
            #應用 a05 樣板自動產生(Version:3)
            #確認資料無重複


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjlseq
            #add-point:ON CHANGE stjlseq name="input.g.page4.stjlseq"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjl002
            #add-point:BEFORE FIELD stjl002 name="input.b.page4.stjl002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjl002
            
            #add-point:AFTER FIELD stjl002 name="input.a.page4.stjl002"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjl002
            #add-point:ON CHANGE stjl002 name="input.g.page4.stjl002"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjl003
            
            #add-point:AFTER FIELD stjl003 name="input.a.page4.stjl003"
            IF NOT cl_null(g_stjf4_d[l_ac].stjl003) THEN 
               #應用 a17 樣板自動產生(Version:3)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
 
               #設定g_chkparam.*的參數              
               LET g_chkparam.arg1 = g_stjf4_d[l_ac].stjl003
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_stae001") THEN
                  #檢查成功時後續處理
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
               IF g_stjf4_d[l_ac].stjl003 <> g_stjf4_d_t.stjl003 OR g_stjf4_d_t.stjl003 IS NULL THEN
                  SELECT stae011,stae007 INTO  g_stjf4_d[l_ac].stjl004,g_stjf4_d[l_ac].stjl005
                    FROM stae_t
                   WHERE staeent = g_enterprise
                     AND stae001 = g_stjf4_d[l_ac].stjl003
               END IF
            END IF   
            LET g_stjf4_d_t.stjl003 = g_stjf4_d[l_ac].stjl003
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stjf4_d[l_ac].stjl003
            CALL ap_ref_array2(g_ref_fields,"SELECT stael003 FROM stael_t WHERE staelent='"||g_enterprise||"' AND stael001=? AND stael002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stjf4_d[l_ac].stjl003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stjf4_d[l_ac].stjl003_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjl003
            #add-point:BEFORE FIELD stjl003 name="input.b.page4.stjl003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjl003
            #add-point:ON CHANGE stjl003 name="input.g.page4.stjl003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjl004
            #add-point:BEFORE FIELD stjl004 name="input.b.page4.stjl004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjl004
            
            #add-point:AFTER FIELD stjl004 name="input.a.page4.stjl004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjl004
            #add-point:ON CHANGE stjl004 name="input.g.page4.stjl004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjl005
            #add-point:BEFORE FIELD stjl005 name="input.b.page4.stjl005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjl005
            
            #add-point:AFTER FIELD stjl005 name="input.a.page4.stjl005"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjl005
            #add-point:ON CHANGE stjl005 name="input.g.page4.stjl005"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjl006
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_stjf4_d[l_ac].stjl006,"0","0","","","azz-00079",1) THEN
               NEXT FIELD stjl006
            END IF 
 
 
 
            #add-point:AFTER FIELD stjl006 name="input.a.page4.stjl006"
            IF NOT cl_null(g_stjf4_d[l_ac].stjl006) THEN 
               IF NOT cl_null(g_stjf4_d[l_ac].stjl007) THEN 
                  LET g_stjf4_d[l_ac].stjl008 = g_stjf4_d[l_ac].stjl006*g_stjf4_d[l_ac].stjl007
               END IF
            END IF 

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjl006
            #add-point:BEFORE FIELD stjl006 name="input.b.page4.stjl006"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjl006
            #add-point:ON CHANGE stjl006 name="input.g.page4.stjl006"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjl007
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_stjf4_d[l_ac].stjl007,"0","1","","","azz-00079",1) THEN
               NEXT FIELD stjl007
            END IF 
 
 
 
            #add-point:AFTER FIELD stjl007 name="input.a.page4.stjl007"
            IF NOT cl_null(g_stjf4_d[l_ac].stjl007) THEN 
               IF NOT cl_null(g_stjf4_d[l_ac].stjl006) THEN 
                  LET g_stjf4_d[l_ac].stjl008 = g_stjf4_d[l_ac].stjl006*g_stjf4_d[l_ac].stjl007
               END IF 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjl007
            #add-point:BEFORE FIELD stjl007 name="input.b.page4.stjl007"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjl007
            #add-point:ON CHANGE stjl007 name="input.g.page4.stjl007"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjl008
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_stjf4_d[l_ac].stjl008,"0","1","","","azz-00079",1) THEN
               NEXT FIELD stjl008
            END IF 
 
 
 
            #add-point:AFTER FIELD stjl008 name="input.a.page4.stjl008"
            IF NOT cl_null(g_stjf4_d[l_ac].stjl008) THEN 
               IF NOT cl_null(g_stjf4_d[l_ac].stjl007) THEN 
                  LET g_stjf4_d[l_ac].stjl006 = g_stjf4_d[l_ac].stjl008/g_stjf4_d[l_ac].stjl007
                  SELECT ROUND(g_stjf4_d[l_ac].stjl006,4) INTO g_stjf4_d[l_ac].stjl006 FROM dual
               END IF 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjl008
            #add-point:BEFORE FIELD stjl008 name="input.b.page4.stjl008"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjl008
            #add-point:ON CHANGE stjl008 name="input.g.page4.stjl008"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjlsite
            #add-point:BEFORE FIELD stjlsite name="input.b.page4.stjlsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjlsite
            
            #add-point:AFTER FIELD stjlsite name="input.a.page4.stjlsite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjlsite
            #add-point:ON CHANGE stjlsite name="input.g.page4.stjlsite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjlunit
            #add-point:BEFORE FIELD stjlunit name="input.b.page4.stjlunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjlunit
            
            #add-point:AFTER FIELD stjlunit name="input.a.page4.stjlunit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjlunit
            #add-point:ON CHANGE stjlunit name="input.g.page4.stjlunit"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page4.stjlseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjlseq
            #add-point:ON ACTION controlp INFIELD stjlseq name="input.c.page4.stjlseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.stjl002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjl002
            #add-point:ON ACTION controlp INFIELD stjl002 name="input.c.page4.stjl002"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.stjl003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjl003
            #add-point:ON ACTION controlp INFIELD stjl003 name="input.c.page4.stjl003"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_stjf4_d[l_ac].stjl003             #給予default值
            LET g_qryparam.default2 = "" #g_stjf4_d[l_ac].stael003 #說明
            LET g_qryparam.default3 = "" #g_stjf4_d[l_ac].stael004 #助記碼
            #給予arg
            LET g_qryparam.arg1 = "" #s

 
            CALL q_stae001()                                #呼叫開窗
 
            LET g_stjf4_d[l_ac].stjl003 = g_qryparam.return1              
            #LET g_stjf4_d[l_ac].stael003 = g_qryparam.return2 
            #LET g_stjf4_d[l_ac].stael004 = g_qryparam.return3 
            DISPLAY g_stjf4_d[l_ac].stjl003 TO stjl003              #
            #DISPLAY g_stjf4_d[l_ac].stael003 TO stael003 #說明
            #DISPLAY g_stjf4_d[l_ac].stael004 TO stael004 #助記碼
            NEXT FIELD stjl003                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.page4.stjl004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjl004
            #add-point:ON ACTION controlp INFIELD stjl004 name="input.c.page4.stjl004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.stjl005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjl005
            #add-point:ON ACTION controlp INFIELD stjl005 name="input.c.page4.stjl005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.stjl006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjl006
            #add-point:ON ACTION controlp INFIELD stjl006 name="input.c.page4.stjl006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.stjl007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjl007
            #add-point:ON ACTION controlp INFIELD stjl007 name="input.c.page4.stjl007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.stjl008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjl008
            #add-point:ON ACTION controlp INFIELD stjl008 name="input.c.page4.stjl008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.stjlsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjlsite
            #add-point:ON ACTION controlp INFIELD stjlsite name="input.c.page4.stjlsite"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.stjlunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjlunit
            #add-point:ON ACTION controlp INFIELD stjlunit name="input.c.page4.stjlunit"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page6 after_row name="input.body4.after_row"
            
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_stjf4_d[l_ac].* = g_stjf4_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm801_bcl6
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astm801_unlock_b("stjl_t","'6'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page6 after_row2 name="input.body4.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body4.after_input"
            
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_stjf4_d[li_reproduce_target].* = g_stjf4_d[li_reproduce].*
 
               LET g_stjf4_d[li_reproduce_target].stjlseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_stjf4_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_stjf4_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_stjf6_d FROM s_detail6.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_8)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body6.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stjf6_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astm801_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'8',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_stjf6_d.getLength()
            #add-point:資料輸入前 name="input.body6.before_input"
            
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stjf6_d[l_ac].* TO NULL 
            INITIALIZE g_stjf6_d_t.* TO NULL 
            INITIALIZE g_stjf6_d_o.* TO NULL 
            #公用欄位給值(單身8)
            
            #自定義預設值(單身8)
                  LET g_stjf6_d[l_ac].stjkacti = "Y"
      LET g_stjf6_d[l_ac].stjk004 = "N"
      LET g_stjf6_d[l_ac].stjk005 = "N"
 
            #add-point:modify段before備份 name="input.body6.insert.before_bak"
            SELECT MAX(stjkseq) INTO g_stjf6_d[l_ac].stjkseq
              FROM stjk_t
             WHERE stjkent= g_enterprise
               AND stjk001= g_stje_m.stje001
            IF cl_null(g_stjf6_d[l_ac].stjkseq) THEN
               LET g_stjf6_d[l_ac].stjkseq=1
            ELSE
               LET g_stjf6_d[l_ac].stjkseq=g_stjf6_d[l_ac].stjkseq+1
            END IF 
            #end add-point
            LET g_stjf6_d_t.* = g_stjf6_d[l_ac].*     #新輸入資料
            LET g_stjf6_d_o.* = g_stjf6_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astm801_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body6.insert.after_set_entry_b"
            
            #end add-point
            CALL astm801_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stjf6_d[li_reproduce_target].* = g_stjf6_d[li_reproduce].*
 
               LET g_stjf6_d[li_reproduce_target].stjkseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body6.before_insert"
            
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body6.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[8] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 8
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astm801_cl USING g_enterprise,g_stje_m.stje001
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm801_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astm801_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_stjf6_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stjf6_d[l_ac].stjkseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_stjf6_d_t.* = g_stjf6_d[l_ac].*  #BACKUP
               LET g_stjf6_d_o.* = g_stjf6_d[l_ac].*  #BACKUP
               CALL astm801_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body6.after_set_entry_b"
               
               #end add-point  
               CALL astm801_set_no_entry_b(l_cmd)
               IF NOT astm801_lock_b("stjk_t","'8'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astm801_bcl8 INTO g_stjf6_d[l_ac].stjkacti,g_stjf6_d[l_ac].stjkseq,g_stjf6_d[l_ac].stjk002, 
                      g_stjf6_d[l_ac].stjk004,g_stjf6_d[l_ac].stjk003,g_stjf6_d[l_ac].stjk005,g_stjf6_d[l_ac].stjksite, 
                      g_stjf6_d[l_ac].stjkunit
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stjf6_d_mask_o[l_ac].* =  g_stjf6_d[l_ac].*
                  CALL astm801_stjk_t_mask()
                  LET g_stjf6_d_mask_n[l_ac].* =  g_stjf6_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astm801_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body6.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body6.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body6.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身8刪除前 name="input.body6.b_delete"
               
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stje_m.stje001
               LET gs_keys[gs_keys.getLength()+1] = g_stjf6_d_t.stjkseq
            
               #刪除同層單身
               IF NOT astm801_delete_b('stjk_t',gs_keys,"'8'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm801_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astm801_key_delete_b(gs_keys,'stjk_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm801_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身8刪除中 name="input.body6.m_delete"
               
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astm801_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身8刪除後 name="input.body6.a_delete"
               
               #end add-point
               LET l_count = g_stjf_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body6.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stjf6_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身8新增前 name="input.body6.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stjk_t 
             WHERE stjkent = g_enterprise AND stjk001 = g_stje_m.stje001
               AND stjkseq = g_stjf6_d[l_ac].stjkseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身8新增前 name="input.body6.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stje_m.stje001
               LET gs_keys[2] = g_stjf6_d[g_detail_idx].stjkseq
               CALL astm801_insert_b('stjk_t',gs_keys,"'8'")
                           
               #add-point:單身新增後8 name="input.body6.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_stjf_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stjk_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astm801_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body6.after_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_stjf6_d[l_ac].* = g_stjf6_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm801_bcl8
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_stjf6_d[l_ac].* = g_stjf6_d_t.*
            ELSE
               #add-point:單身page8修改前 name="input.body6.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身8)
               
               
               #將遮罩欄位還原
               CALL astm801_stjk_t_mask_restore('restore_mask_o')
                              
               UPDATE stjk_t SET (stjk001,stjkacti,stjkseq,stjk002,stjk004,stjk003,stjk005,stjksite, 
                   stjkunit) = (g_stje_m.stje001,g_stjf6_d[l_ac].stjkacti,g_stjf6_d[l_ac].stjkseq,g_stjf6_d[l_ac].stjk002, 
                   g_stjf6_d[l_ac].stjk004,g_stjf6_d[l_ac].stjk003,g_stjf6_d[l_ac].stjk005,g_stjf6_d[l_ac].stjksite, 
                   g_stjf6_d[l_ac].stjkunit) #自訂欄位頁簽
                WHERE stjkent = g_enterprise AND stjk001 = g_stje_m.stje001
                  AND stjkseq = g_stjf6_d_t.stjkseq #項次 
                  
               #add-point:單身page8修改中 name="input.body6.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_stjf6_d[l_ac].* = g_stjf6_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stjk_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_stjf6_d[l_ac].* = g_stjf6_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stjk_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stje_m.stje001
               LET gs_keys_bak[1] = g_stje001_t
               LET gs_keys[2] = g_stjf6_d[g_detail_idx].stjkseq
               LET gs_keys_bak[2] = g_stjf6_d_t.stjkseq
               CALL astm801_update_b('stjk_t',gs_keys,gs_keys_bak,"'8'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astm801_stjk_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_stjf6_d[g_detail_idx].stjkseq = g_stjf6_d_t.stjkseq 
                  ) THEN
                  LET gs_keys[01] = g_stje_m.stje001
                  LET gs_keys[gs_keys.getLength()+1] = g_stjf6_d_t.stjkseq
                  CALL astm801_key_update_b(gs_keys,'stjk_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stje_m),util.JSON.stringify(g_stjf6_d_t)
               LET g_log2 = util.JSON.stringify(g_stje_m),util.JSON.stringify(g_stjf6_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page8修改後 name="input.body6.a_update"
               
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjkacti
            #add-point:BEFORE FIELD stjkacti name="input.b.page6.stjkacti"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjkacti
            
            #add-point:AFTER FIELD stjkacti name="input.a.page6.stjkacti"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjkacti
            #add-point:ON CHANGE stjkacti name="input.g.page6.stjkacti"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjkseq
            #add-point:BEFORE FIELD stjkseq name="input.b.page6.stjkseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjkseq
            
            #add-point:AFTER FIELD stjkseq name="input.a.page6.stjkseq"
            #應用 a05 樣板自動產生(Version:3)
            #確認資料無重複
            


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjkseq
            #add-point:ON CHANGE stjkseq name="input.g.page6.stjkseq"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjk002
            
            #add-point:AFTER FIELD stjk002 name="input.a.page6.stjk002"
            IF NOT cl_null(g_stjf6_d[l_ac].stjk002) THEN 
               #應用 a17 樣板自動產生(Version:3)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
 
               #設定g_chkparam.*的參數              
               LET g_chkparam.arg1 = g_stjf6_d[l_ac].stjk002
               LET g_chkparam.arg2 = cl_get_para(g_enterprise,g_site,'E-CIR-0001')     
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_rtax001_2") THEN
                  #檢查成功時後續處理
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            END IF   
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stjf6_d[l_ac].stjk002
            CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stjf6_d[l_ac].stjk002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stjf6_d[l_ac].stjk002_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjk002
            #add-point:BEFORE FIELD stjk002 name="input.b.page6.stjk002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjk002
            #add-point:ON CHANGE stjk002 name="input.g.page6.stjk002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjk004
            #add-point:BEFORE FIELD stjk004 name="input.b.page6.stjk004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjk004
            
            #add-point:AFTER FIELD stjk004 name="input.a.page6.stjk004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjk004
            #add-point:ON CHANGE stjk004 name="input.g.page6.stjk004"
            IF NOT cl_null(g_stjf6_d[l_ac].stjk004) THEN
               IF g_stjf6_d[l_ac].stjk004 = 'Y' THEN
                  #整单必须有且仅有一个主品类
                  LET l_cnt = 0
                  SELECT COUNT(*) INTO l_cnt 
                    FROM stjk_t 
                   WHERE stjkent = g_enterprise 
                     AND stjk001 = g_stje_m.stje001
                     AND stjk004 = 'Y'
                  IF l_cnt > 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'ast-00597'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_stjf6_d[l_ac].stjk004 = 'N'
                     NEXT FIELD  stjk004                          
                  END IF             
               END IF      
            END IF   
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjk003
            
            #add-point:AFTER FIELD stjk003 name="input.a.page6.stjk003"
            IF NOT cl_null(g_stjf6_d[l_ac].stjk003) THEN 
               #應用 a17 樣板自動產生(Version:3)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
 
               #設定g_chkparam.*的參數              
               LET g_chkparam.arg1 = g_stjf6_d[l_ac].stjk003
    
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_oocq002_2002") THEN
                  #檢查成功時後續處理
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            END IF  
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stjf6_d[l_ac].stjk003
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2002' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stjf6_d[l_ac].stjk003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stjf6_d[l_ac].stjk003_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjk003
            #add-point:BEFORE FIELD stjk003 name="input.b.page6.stjk003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjk003
            #add-point:ON CHANGE stjk003 name="input.g.page6.stjk003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjk005
            #add-point:BEFORE FIELD stjk005 name="input.b.page6.stjk005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjk005
            
            #add-point:AFTER FIELD stjk005 name="input.a.page6.stjk005"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjk005
            #add-point:ON CHANGE stjk005 name="input.g.page6.stjk005"
            IF NOT cl_null(g_stjf6_d[l_ac].stjk005) THEN
               IF g_stjf6_d[l_ac].stjk005 = 'Y' THEN
                  #整单必须有且仅有一个主品类
                  LET l_cnt = 0
                  SELECT COUNT(*) INTO l_cnt 
                    FROM stjk_t 
                   WHERE stjkent = g_enterprise 
                     AND stjk001 = g_stje_m.stje001
                     AND stjk005 = 'Y'
                  IF l_cnt > 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'ast-00598'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_stjf6_d[l_ac].stjk005 = 'N'
                     NEXT FIELD  stjk005                          
                  END IF             
               END IF      
            END IF   
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjksite
            #add-point:BEFORE FIELD stjksite name="input.b.page6.stjksite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjksite
            
            #add-point:AFTER FIELD stjksite name="input.a.page6.stjksite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjksite
            #add-point:ON CHANGE stjksite name="input.g.page6.stjksite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjkunit
            #add-point:BEFORE FIELD stjkunit name="input.b.page6.stjkunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjkunit
            
            #add-point:AFTER FIELD stjkunit name="input.a.page6.stjkunit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjkunit
            #add-point:ON CHANGE stjkunit name="input.g.page6.stjkunit"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page6.stjkacti
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjkacti
            #add-point:ON ACTION controlp INFIELD stjkacti name="input.c.page6.stjkacti"
            
            #END add-point
 
 
         #Ctrlp:input.c.page6.stjkseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjkseq
            #add-point:ON ACTION controlp INFIELD stjkseq name="input.c.page6.stjkseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page6.stjk002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjk002
            #add-point:ON ACTION controlp INFIELD stjk002 name="input.c.page6.stjk002"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_stjf6_d[l_ac].stjk002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = cl_get_para(g_enterprise,g_site,'E-CIR-0001')

 
            CALL q_rtax001_3()                                #呼叫開窗
 
            LET g_stjf6_d[l_ac].stjk002 = g_qryparam.return1              

            DISPLAY g_stjf6_d[l_ac].stjk002 TO stjk002              #

            NEXT FIELD stjk002                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.page6.stjk004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjk004
            #add-point:ON ACTION controlp INFIELD stjk004 name="input.c.page6.stjk004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page6.stjk003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjk003
            #add-point:ON ACTION controlp INFIELD stjk003 name="input.c.page6.stjk003"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_stjf6_d[l_ac].stjk003             #給予default值
            LET g_qryparam.default2 = "" #g_stjf6_d[l_ac].oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "" #s

 
            CALL q_oocq002_2002()                                #呼叫開窗
 
            LET g_stjf6_d[l_ac].stjk003 = g_qryparam.return1              
            #LET g_stjf6_d[l_ac].oocq002 = g_qryparam.return2 
            DISPLAY g_stjf6_d[l_ac].stjk003 TO stjk003              #
            #DISPLAY g_stjf6_d[l_ac].oocq002 TO oocq002 #應用分類碼
            NEXT FIELD stjk003                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.page6.stjk005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjk005
            #add-point:ON ACTION controlp INFIELD stjk005 name="input.c.page6.stjk005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page6.stjksite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjksite
            #add-point:ON ACTION controlp INFIELD stjksite name="input.c.page6.stjksite"
            
            #END add-point
 
 
         #Ctrlp:input.c.page6.stjkunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjkunit
            #add-point:ON ACTION controlp INFIELD stjkunit name="input.c.page6.stjkunit"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page8 after_row name="input.body6.after_row"
            #根据单身的主品类和主品牌更新单头的品类和品牌
            IF g_stjf6_d[l_ac].stjk004 = 'Y' THEN
               UPDATE stje_t SET stje027 = g_stjf6_d[l_ac].stjk002,
                                 stje028 = g_stjf6_d[l_ac].stjk002
                WHERE stjeent = g_enterprise
                  AND stje001 = g_stje_m.stje001
                IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "upd_stje"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  CLOSE astm801_bcl7
                  CALL s_transaction_end('N','0')
                  EXIT DIALOG 
                END IF 
            END IF  
            IF g_stjf6_d[l_ac].stjk005 = 'Y' THEN
               UPDATE stje_t SET stje029 = g_stjf6_d[l_ac].stjk003
                WHERE stjeent = g_enterprise
                  AND stje001 = g_stje_m.stje001
                IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "upd_stje"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  CLOSE astm801_bcl7
                  CALL s_transaction_end('N','0')
                  EXIT DIALOG 
                END IF 
            END IF     
            #刷新单头品类品牌
            SELECT stje027,stje028,stje029 INTO g_stje_m.stje027,g_stje_m.stje028,g_stje_m.stje029
              FROM stje_t
             WHERE stjeent = g_enterprise
               AND stje001 = g_stje_m.stje001
            DISPLAY g_stje_m.stje027,g_stje_m.stje028,g_stje_m.stje029    
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stje_m.stje027
            CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stje_m.stje027_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stje_m.stje027_desc 

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stje_m.stje028
            CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stje_m.stje028_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stje_m.stje028_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stje_m.stje029
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2002' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stje_m.stje029_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stje_m.stje029_desc
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_stjf6_d[l_ac].* = g_stjf6_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm801_bcl8
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astm801_unlock_b("stjk_t","'8'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page8 after_row2 name="input.body6.after_row2"
                      
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body6.after_input"
            
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_stjf6_d[li_reproduce_target].* = g_stjf6_d[li_reproduce].*
 
               LET g_stjf6_d[li_reproduce_target].stjkseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_stjf6_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_stjf6_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_stjf7_d FROM s_detail7.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_9)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body7.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stjf7_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astm801_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'9',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_stjf7_d.getLength()
            #add-point:資料輸入前 name="input.body7.before_input"
            
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stjf7_d[l_ac].* TO NULL 
            INITIALIZE g_stjf7_d_t.* TO NULL 
            INITIALIZE g_stjf7_d_o.* TO NULL 
            #公用欄位給值(單身9)
            
            #自定義預設值(單身9)
                  LET g_stjf7_d[l_ac].stjm007 = "0"
      LET g_stjf7_d[l_ac].stjm008 = "0"
      LET g_stjf7_d[l_ac].stjm009 = "0"
      LET g_stjf7_d[l_ac].stjm010 = "0"
      LET g_stjf7_d[l_ac].stjm011 = "0"
      LET g_stjf7_d[l_ac].stjm012 = "0"
      LET g_stjf7_d[l_ac].stjm013 = "0"
      LET g_stjf7_d[l_ac].stjm014 = "0"
      LET g_stjf7_d[l_ac].stjm015 = "N"
 
            #add-point:modify段before備份 name="input.body7.insert.before_bak"
            SELECT MAX(stjmseq) INTO g_stjf7_d[l_ac].stjmseq
              FROM stjm_t
             WHERE stjment= g_enterprise
               AND stjm001= g_stje_m.stje001
            IF cl_null(g_stjf7_d[l_ac].stjmseq) THEN
               LET g_stjf7_d[l_ac].stjmseq=1
            ELSE
               LET g_stjf7_d[l_ac].stjmseq=g_stjf7_d[l_ac].stjmseq+1
            END IF 
            #end add-point
            LET g_stjf7_d_t.* = g_stjf7_d[l_ac].*     #新輸入資料
            LET g_stjf7_d_o.* = g_stjf7_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astm801_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body7.insert.after_set_entry_b"
            
            #end add-point
            CALL astm801_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stjf7_d[li_reproduce_target].* = g_stjf7_d[li_reproduce].*
 
               LET g_stjf7_d[li_reproduce_target].stjmseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body7.before_insert"
            
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body7.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[9] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 9
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astm801_cl USING g_enterprise,g_stje_m.stje001
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm801_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astm801_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_stjf7_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stjf7_d[l_ac].stjmseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_stjf7_d_t.* = g_stjf7_d[l_ac].*  #BACKUP
               LET g_stjf7_d_o.* = g_stjf7_d[l_ac].*  #BACKUP
               CALL astm801_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body7.after_set_entry_b"
               
               #end add-point  
               CALL astm801_set_no_entry_b(l_cmd)
               IF NOT astm801_lock_b("stjm_t","'9'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astm801_bcl9 INTO g_stjf7_d[l_ac].stjmseq,g_stjf7_d[l_ac].stjm002,g_stjf7_d[l_ac].stjm003, 
                      g_stjf7_d[l_ac].stjm004,g_stjf7_d[l_ac].stjm005,g_stjf7_d[l_ac].stjm006,g_stjf7_d[l_ac].stjm007, 
                      g_stjf7_d[l_ac].stjm008,g_stjf7_d[l_ac].stjm009,g_stjf7_d[l_ac].stjm010,g_stjf7_d[l_ac].stjm011, 
                      g_stjf7_d[l_ac].stjm012,g_stjf7_d[l_ac].stjm013,g_stjf7_d[l_ac].stjm014,g_stjf7_d[l_ac].stjm015, 
                      g_stjf7_d[l_ac].stjm016,g_stjf7_d[l_ac].stjm018,g_stjf7_d[l_ac].stjm019,g_stjf7_d[l_ac].stjm017, 
                      g_stjf7_d[l_ac].stjmsite,g_stjf7_d[l_ac].stjmunit
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stjf7_d_mask_o[l_ac].* =  g_stjf7_d[l_ac].*
                  CALL astm801_stjm_t_mask()
                  LET g_stjf7_d_mask_n[l_ac].* =  g_stjf7_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astm801_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body7.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body7.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body7.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身9刪除前 name="input.body7.b_delete"
               
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stje_m.stje001
               LET gs_keys[gs_keys.getLength()+1] = g_stjf7_d_t.stjmseq
            
               #刪除同層單身
               IF NOT astm801_delete_b('stjm_t',gs_keys,"'9'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm801_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astm801_key_delete_b(gs_keys,'stjm_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm801_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身9刪除中 name="input.body7.m_delete"
               
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astm801_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身9刪除後 name="input.body7.a_delete"
               
               #end add-point
               LET l_count = g_stjf_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body7.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stjf7_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身9新增前 name="input.body7.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stjm_t 
             WHERE stjment = g_enterprise AND stjm001 = g_stje_m.stje001
               AND stjmseq = g_stjf7_d[l_ac].stjmseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身9新增前 name="input.body7.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stje_m.stje001
               LET gs_keys[2] = g_stjf7_d[g_detail_idx].stjmseq
               CALL astm801_insert_b('stjm_t',gs_keys,"'9'")
                           
               #add-point:單身新增後9 name="input.body7.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_stjf_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stjm_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astm801_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body7.after_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_stjf7_d[l_ac].* = g_stjf7_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm801_bcl9
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_stjf7_d[l_ac].* = g_stjf7_d_t.*
            ELSE
               #add-point:單身page9修改前 name="input.body7.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身9)
               
               
               #將遮罩欄位還原
               CALL astm801_stjm_t_mask_restore('restore_mask_o')
                              
               UPDATE stjm_t SET (stjm001,stjmseq,stjm002,stjm003,stjm004,stjm005,stjm006,stjm007,stjm008, 
                   stjm009,stjm010,stjm011,stjm012,stjm013,stjm014,stjm015,stjm016,stjm018,stjm019,stjm017, 
                   stjmsite,stjmunit) = (g_stje_m.stje001,g_stjf7_d[l_ac].stjmseq,g_stjf7_d[l_ac].stjm002, 
                   g_stjf7_d[l_ac].stjm003,g_stjf7_d[l_ac].stjm004,g_stjf7_d[l_ac].stjm005,g_stjf7_d[l_ac].stjm006, 
                   g_stjf7_d[l_ac].stjm007,g_stjf7_d[l_ac].stjm008,g_stjf7_d[l_ac].stjm009,g_stjf7_d[l_ac].stjm010, 
                   g_stjf7_d[l_ac].stjm011,g_stjf7_d[l_ac].stjm012,g_stjf7_d[l_ac].stjm013,g_stjf7_d[l_ac].stjm014, 
                   g_stjf7_d[l_ac].stjm015,g_stjf7_d[l_ac].stjm016,g_stjf7_d[l_ac].stjm018,g_stjf7_d[l_ac].stjm019, 
                   g_stjf7_d[l_ac].stjm017,g_stjf7_d[l_ac].stjmsite,g_stjf7_d[l_ac].stjmunit) #自訂欄位頁簽 
 
                WHERE stjment = g_enterprise AND stjm001 = g_stje_m.stje001
                  AND stjmseq = g_stjf7_d_t.stjmseq #項次 
                  
               #add-point:單身page9修改中 name="input.body7.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_stjf7_d[l_ac].* = g_stjf7_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stjm_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_stjf7_d[l_ac].* = g_stjf7_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stjm_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stje_m.stje001
               LET gs_keys_bak[1] = g_stje001_t
               LET gs_keys[2] = g_stjf7_d[g_detail_idx].stjmseq
               LET gs_keys_bak[2] = g_stjf7_d_t.stjmseq
               CALL astm801_update_b('stjm_t',gs_keys,gs_keys_bak,"'9'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astm801_stjm_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_stjf7_d[g_detail_idx].stjmseq = g_stjf7_d_t.stjmseq 
                  ) THEN
                  LET gs_keys[01] = g_stje_m.stje001
                  LET gs_keys[gs_keys.getLength()+1] = g_stjf7_d_t.stjmseq
                  CALL astm801_key_update_b(gs_keys,'stjm_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stje_m),util.JSON.stringify(g_stjf7_d_t)
               LET g_log2 = util.JSON.stringify(g_stje_m),util.JSON.stringify(g_stjf7_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page9修改後 name="input.body7.a_update"
               
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjmseq
            #add-point:BEFORE FIELD stjmseq name="input.b.page7.stjmseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjmseq
            
            #add-point:AFTER FIELD stjmseq name="input.a.page7.stjmseq"
            #應用 a05 樣板自動產生(Version:3)
            #確認資料無重複
            



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjmseq
            #add-point:ON CHANGE stjmseq name="input.g.page7.stjmseq"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm002
            #add-point:BEFORE FIELD stjm002 name="input.b.page7.stjm002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm002
            
            #add-point:AFTER FIELD stjm002 name="input.a.page7.stjm002"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjm002
            #add-point:ON CHANGE stjm002 name="input.g.page7.stjm002"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm003
            
            #add-point:AFTER FIELD stjm003 name="input.a.page7.stjm003"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stjf7_d[l_ac].stjm003
            CALL ap_ref_array2(g_ref_fields,"SELECT stael003 FROM stael_t WHERE staelent='"||g_enterprise||"' AND stael001=? AND stael002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stjf7_d[l_ac].stjm003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stjf7_d[l_ac].stjm003_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm003
            #add-point:BEFORE FIELD stjm003 name="input.b.page7.stjm003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjm003
            #add-point:ON CHANGE stjm003 name="input.g.page7.stjm003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm004
            #add-point:BEFORE FIELD stjm004 name="input.b.page7.stjm004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm004
            
            #add-point:AFTER FIELD stjm004 name="input.a.page7.stjm004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjm004
            #add-point:ON CHANGE stjm004 name="input.g.page7.stjm004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm005
            #add-point:BEFORE FIELD stjm005 name="input.b.page7.stjm005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm005
            
            #add-point:AFTER FIELD stjm005 name="input.a.page7.stjm005"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjm005
            #add-point:ON CHANGE stjm005 name="input.g.page7.stjm005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm006
            #add-point:BEFORE FIELD stjm006 name="input.b.page7.stjm006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm006
            
            #add-point:AFTER FIELD stjm006 name="input.a.page7.stjm006"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjm006
            #add-point:ON CHANGE stjm006 name="input.g.page7.stjm006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm007
            #add-point:BEFORE FIELD stjm007 name="input.b.page7.stjm007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm007
            
            #add-point:AFTER FIELD stjm007 name="input.a.page7.stjm007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjm007
            #add-point:ON CHANGE stjm007 name="input.g.page7.stjm007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm008
            #add-point:BEFORE FIELD stjm008 name="input.b.page7.stjm008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm008
            
            #add-point:AFTER FIELD stjm008 name="input.a.page7.stjm008"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjm008
            #add-point:ON CHANGE stjm008 name="input.g.page7.stjm008"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm009
            #add-point:BEFORE FIELD stjm009 name="input.b.page7.stjm009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm009
            
            #add-point:AFTER FIELD stjm009 name="input.a.page7.stjm009"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjm009
            #add-point:ON CHANGE stjm009 name="input.g.page7.stjm009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm010
            #add-point:BEFORE FIELD stjm010 name="input.b.page7.stjm010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm010
            
            #add-point:AFTER FIELD stjm010 name="input.a.page7.stjm010"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjm010
            #add-point:ON CHANGE stjm010 name="input.g.page7.stjm010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm011
            #add-point:BEFORE FIELD stjm011 name="input.b.page7.stjm011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm011
            
            #add-point:AFTER FIELD stjm011 name="input.a.page7.stjm011"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjm011
            #add-point:ON CHANGE stjm011 name="input.g.page7.stjm011"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm012
            #add-point:BEFORE FIELD stjm012 name="input.b.page7.stjm012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm012
            
            #add-point:AFTER FIELD stjm012 name="input.a.page7.stjm012"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjm012
            #add-point:ON CHANGE stjm012 name="input.g.page7.stjm012"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm013
            #add-point:BEFORE FIELD stjm013 name="input.b.page7.stjm013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm013
            
            #add-point:AFTER FIELD stjm013 name="input.a.page7.stjm013"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjm013
            #add-point:ON CHANGE stjm013 name="input.g.page7.stjm013"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm014
            #add-point:BEFORE FIELD stjm014 name="input.b.page7.stjm014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm014
            
            #add-point:AFTER FIELD stjm014 name="input.a.page7.stjm014"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjm014
            #add-point:ON CHANGE stjm014 name="input.g.page7.stjm014"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm015
            #add-point:BEFORE FIELD stjm015 name="input.b.page7.stjm015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm015
            
            #add-point:AFTER FIELD stjm015 name="input.a.page7.stjm015"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjm015
            #add-point:ON CHANGE stjm015 name="input.g.page7.stjm015"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm016
            #add-point:BEFORE FIELD stjm016 name="input.b.page7.stjm016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm016
            
            #add-point:AFTER FIELD stjm016 name="input.a.page7.stjm016"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjm016
            #add-point:ON CHANGE stjm016 name="input.g.page7.stjm016"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm018
            #add-point:BEFORE FIELD stjm018 name="input.b.page7.stjm018"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm018
            
            #add-point:AFTER FIELD stjm018 name="input.a.page7.stjm018"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjm018
            #add-point:ON CHANGE stjm018 name="input.g.page7.stjm018"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm019
            
            #add-point:AFTER FIELD stjm019 name="input.a.page7.stjm019"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stjf7_d[l_ac].stjm019
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stjf7_d[l_ac].stjm019_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stjf7_d[l_ac].stjm019_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm019
            #add-point:BEFORE FIELD stjm019 name="input.b.page7.stjm019"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjm019
            #add-point:ON CHANGE stjm019 name="input.g.page7.stjm019"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjm017
            #add-point:BEFORE FIELD stjm017 name="input.b.page7.stjm017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjm017
            
            #add-point:AFTER FIELD stjm017 name="input.a.page7.stjm017"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjm017
            #add-point:ON CHANGE stjm017 name="input.g.page7.stjm017"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjmsite
            #add-point:BEFORE FIELD stjmsite name="input.b.page7.stjmsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjmsite
            
            #add-point:AFTER FIELD stjmsite name="input.a.page7.stjmsite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjmsite
            #add-point:ON CHANGE stjmsite name="input.g.page7.stjmsite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjmunit
            #add-point:BEFORE FIELD stjmunit name="input.b.page7.stjmunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjmunit
            
            #add-point:AFTER FIELD stjmunit name="input.a.page7.stjmunit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjmunit
            #add-point:ON CHANGE stjmunit name="input.g.page7.stjmunit"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page7.stjmseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjmseq
            #add-point:ON ACTION controlp INFIELD stjmseq name="input.c.page7.stjmseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page7.stjm002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm002
            #add-point:ON ACTION controlp INFIELD stjm002 name="input.c.page7.stjm002"
            
            #END add-point
 
 
         #Ctrlp:input.c.page7.stjm003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm003
            #add-point:ON ACTION controlp INFIELD stjm003 name="input.c.page7.stjm003"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_stjf7_d[l_ac].stjm003             #給予default值
            LET g_qryparam.default2 = "" #g_stjf7_d[l_ac].stael003 #說明
            LET g_qryparam.default3 = "" #g_stjf7_d[l_ac].stael004 #助記碼
            #給予arg
            LET g_qryparam.arg1 = "" #s

 
            CALL q_stae001()                                #呼叫開窗
 
            LET g_stjf7_d[l_ac].stjm003 = g_qryparam.return1              
            #LET g_stjf7_d[l_ac].stael003 = g_qryparam.return2 
            #LET g_stjf7_d[l_ac].stael004 = g_qryparam.return3 
            DISPLAY g_stjf7_d[l_ac].stjm003 TO stjm003              #
            #DISPLAY g_stjf7_d[l_ac].stael003 TO stael003 #說明
            #DISPLAY g_stjf7_d[l_ac].stael004 TO stael004 #助記碼
            NEXT FIELD stjm003                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.page7.stjm004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm004
            #add-point:ON ACTION controlp INFIELD stjm004 name="input.c.page7.stjm004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page7.stjm005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm005
            #add-point:ON ACTION controlp INFIELD stjm005 name="input.c.page7.stjm005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page7.stjm006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm006
            #add-point:ON ACTION controlp INFIELD stjm006 name="input.c.page7.stjm006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page7.stjm007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm007
            #add-point:ON ACTION controlp INFIELD stjm007 name="input.c.page7.stjm007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page7.stjm008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm008
            #add-point:ON ACTION controlp INFIELD stjm008 name="input.c.page7.stjm008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page7.stjm009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm009
            #add-point:ON ACTION controlp INFIELD stjm009 name="input.c.page7.stjm009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page7.stjm010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm010
            #add-point:ON ACTION controlp INFIELD stjm010 name="input.c.page7.stjm010"
            
            #END add-point
 
 
         #Ctrlp:input.c.page7.stjm011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm011
            #add-point:ON ACTION controlp INFIELD stjm011 name="input.c.page7.stjm011"
            
            #END add-point
 
 
         #Ctrlp:input.c.page7.stjm012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm012
            #add-point:ON ACTION controlp INFIELD stjm012 name="input.c.page7.stjm012"
            
            #END add-point
 
 
         #Ctrlp:input.c.page7.stjm013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm013
            #add-point:ON ACTION controlp INFIELD stjm013 name="input.c.page7.stjm013"
            
            #END add-point
 
 
         #Ctrlp:input.c.page7.stjm014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm014
            #add-point:ON ACTION controlp INFIELD stjm014 name="input.c.page7.stjm014"
            
            #END add-point
 
 
         #Ctrlp:input.c.page7.stjm015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm015
            #add-point:ON ACTION controlp INFIELD stjm015 name="input.c.page7.stjm015"
            
            #END add-point
 
 
         #Ctrlp:input.c.page7.stjm016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm016
            #add-point:ON ACTION controlp INFIELD stjm016 name="input.c.page7.stjm016"
            
            #END add-point
 
 
         #Ctrlp:input.c.page7.stjm018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm018
            #add-point:ON ACTION controlp INFIELD stjm018 name="input.c.page7.stjm018"
            
            #END add-point
 
 
         #Ctrlp:input.c.page7.stjm019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm019
            #add-point:ON ACTION controlp INFIELD stjm019 name="input.c.page7.stjm019"
            
            #END add-point
 
 
         #Ctrlp:input.c.page7.stjm017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjm017
            #add-point:ON ACTION controlp INFIELD stjm017 name="input.c.page7.stjm017"
            
            #END add-point
 
 
         #Ctrlp:input.c.page7.stjmsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjmsite
            #add-point:ON ACTION controlp INFIELD stjmsite name="input.c.page7.stjmsite"
            
            #END add-point
 
 
         #Ctrlp:input.c.page7.stjmunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjmunit
            #add-point:ON ACTION controlp INFIELD stjmunit name="input.c.page7.stjmunit"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page9 after_row name="input.body7.after_row"
            
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_stjf7_d[l_ac].* = g_stjf7_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm801_bcl9
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astm801_unlock_b("stjm_t","'9'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page9 after_row2 name="input.body7.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body7.after_input"
            
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_stjf7_d[li_reproduce_target].* = g_stjf7_d[li_reproduce].*
 
               LET g_stjf7_d[li_reproduce_target].stjmseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_stjf7_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_stjf7_d.getLength()+1
            END IF
            
      END INPUT
 
      
      INPUT ARRAY g_stjf9_d FROM s_detail9.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_10)
         
        
         BEFORE INPUT
            #先將上層單身的idx放入g_detail_idx
            LET g_detail_idx_tmp = g_detail_idx
            LET g_detail_idx = g_detail_idx_list[1]
            #檢查上層單身是否為空
            IF g_detail_idx = 0 OR g_stjf_d.getLength() = 0 THEN
               NEXT FIELD stjfseq
            END IF
            #檢查上層單身是否有資料
            IF cl_null(g_stjf_d[g_detail_idx].stjfseq) THEN
               NEXT FIELD stjfseq
            END IF
            #add-point:資料輸入前 name="input.body9.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stjf9_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            #如果一直都在單身2則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'10',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_stjf9_d.getLength()
            #add-point:資料輸入前 name="input.body9.before_input"
            
            #end add-point
            
         BEFORE INSERT
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stjf9_d[l_ac].* TO NULL 
            INITIALIZE g_stjf9_d_t.* TO NULL 
            INITIALIZE g_stjf9_d_o.* TO NULL 
            #公用欄位給值(單身10)
            
            #自定義預設值(單身10)
            
            #add-point:modify段before備份 name="input.body9.insert.before_bak"
            SELECT MAX(stjgseq1) INTO g_stjf9_d[l_ac].stjgseq1
              FROM stjg_t
             WHERE stjgent= g_enterprise
               AND stjg001= g_stje_m.stje001
               AND stjgseq = g_stjf_d[g_detail_idx].stjfseq
            IF cl_null(g_stjf9_d[l_ac].stjgseq1) THEN
               LET g_stjf9_d[l_ac].stjgseq1=1
            ELSE
               LET g_stjf9_d[l_ac].stjgseq1=g_stjf9_d[l_ac].stjgseq1+1
            END IF 
            SELECT MAX(stjg003) INTO g_stjf9_d[l_ac].stjg002
              FROM stjg_t
             WHERE stjgent= g_enterprise
               AND stjg001= g_stje_m.stje001
               AND stjgseq = g_stjf_d[g_detail_idx].stjfseq
            IF cl_null(g_stjf9_d[l_ac].stjg002) THEN
               LET g_stjf9_d[l_ac].stjg002=1
            ELSE
               LET g_stjf9_d[l_ac].stjg002=g_stjf9_d[l_ac].stjg002+1
            END IF 
            #end add-point
            LET g_stjf9_d_t.* = g_stjf9_d[l_ac].*     #新輸入資料
            LET g_stjf9_d_o.* = g_stjf9_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astm801_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body9.insert.after_set_entry_b"
            
            #end add-point
            CALL astm801_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stjf9_d[li_reproduce_target].* = g_stjf9_d[li_reproduce].*
 
               LET g_stjf9_d[li_reproduce_target].stjgseq1 = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body9.before_insert"
            
            #end add-point  
            
         BEFORE ROW
            #add-point:modify段before row2 name="input.body9.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx2 = l_ac
            LET g_detail_idx_list[10] = l_ac
            LET g_current_page = 10
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astm801_cl USING g_enterprise,g_stje_m.stje001
            #(ver:78) ---start---
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm801_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE
               LET g_errparam.popup = TRUE 
               CLOSE astm801_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            #(ver:78) --- end ---
            OPEN astm801_bcl USING g_enterprise,g_stje_m.stje001,g_stjf_d[g_detail_idx].stjfseq
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm801_bcl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astm801_cl
               CLOSE astm801_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_stjf9_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stjf9_d[l_ac].stjgseq1 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_stjf9_d_t.* = g_stjf9_d[l_ac].*  #BACKUP
               LET g_stjf9_d_o.* = g_stjf9_d[l_ac].*  #BACKUP
               CALL astm801_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body9.after_set_entry_b"
               
               #end add-point  
               CALL astm801_set_no_entry_b(l_cmd)
               IF NOT astm801_lock_b("stjg_t","'10'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astm801_bcl10 INTO g_stjf9_d[l_ac].stjgsite,g_stjf9_d[l_ac].stjgunit,g_stjf9_d[l_ac].stjgseq1, 
                      g_stjf9_d[l_ac].stjg002,g_stjf9_d[l_ac].stjg003,g_stjf9_d[l_ac].stjg004,g_stjf9_d[l_ac].stjg006 
 
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stjf9_d_mask_o[l_ac].* =  g_stjf9_d[l_ac].*
                  CALL astm801_stjg_t_mask()
                  LET g_stjf9_d_mask_n[l_ac].* =  g_stjf9_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astm801_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body9.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body9.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body9.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身10刪除前 name="input.body9.b_delete"
               
               #end add-point    
 
               #取得該筆資料key值
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stje_m.stje001
               LET gs_keys[2] = g_stjf_d[g_detail_idx].stjfseq
               LET gs_keys[3] = g_stjf9_d_t.stjgseq1
 
 
               #刪除同層單身
               IF NOT astm801_delete_b('stjg_t',gs_keys,"'10'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm801_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身10刪除中 name="input.body9.m_delete"
               
               #end add-point   
               
               CALL s_transaction_end('Y','0')
               CLOSE astm801_bcl
                  
               LET g_rec_b = g_rec_b-1
               #add-point:單身10刪除後 name="input.body9.a_delete"
               
               #end add-point
 
               LET l_count = g_stjf_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body9.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stjf9_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
         
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身10新增前 name="input.body9.b_a_insert"
            
            #end add-point
    
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stjg_t 
             WHERE stjgent = g_enterprise AND stjg001 = g_stje_m.stje001 AND stjgseq = g_stjf_d[g_detail_idx].stjfseq  
                 AND stjgseq1 = g_stjf9_d[g_detail_idx2].stjgseq1
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身10新增前 name="input.body9.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stje_m.stje001
               LET gs_keys[2] = g_stjf_d[g_detail_idx].stjfseq
               LET gs_keys[3] = g_stjf9_d[g_detail_idx2].stjgseq1
               CALL astm801_insert_b('stjg_t',gs_keys,"'10'")
                           
               #add-point:單身新增後10 name="input.body9.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_stjf_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stjg_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astm801_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body9.after_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
            #還原g_detail_idx
            LET g_detail_idx = g_detail_idx_tmp
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_stjf9_d[l_ac].* = g_stjf9_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm801_bcl10
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_stjf9_d[l_ac].* = g_stjf9_d_t.*
            ELSE
               #add-point:單身page10修改前 name="input.body9.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身10)
               
               
               #將遮罩欄位還原
               CALL astm801_stjg_t_mask_restore('restore_mask_o')
               
               UPDATE stjg_t SET (stjg001,stjgseq,stjgsite,stjgunit,stjgseq1,stjg002,stjg003,stjg004, 
                   stjg006) = (g_stje_m.stje001,g_stjf_d[g_detail_idx].stjfseq,g_stjf9_d[l_ac].stjgsite, 
                   g_stjf9_d[l_ac].stjgunit,g_stjf9_d[l_ac].stjgseq1,g_stjf9_d[l_ac].stjg002,g_stjf9_d[l_ac].stjg003, 
                   g_stjf9_d[l_ac].stjg004,g_stjf9_d[l_ac].stjg006) #自訂欄位頁簽
                WHERE stjgent = g_enterprise AND stjg001 = g_stje001_t AND stjgseq = g_stjf_d[g_detail_idx].stjfseq  
                    AND stjgseq1 = g_stjf9_d_t.stjgseq1
                  
               #add-point:單身page10修改中 name="input.body9.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_stjf9_d[l_ac].* = g_stjf9_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stjg_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_stjf9_d[l_ac].* = g_stjf9_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stjg_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stje_m.stje001
               LET gs_keys_bak[1] = g_stje001_t
               LET gs_keys[2] = g_stjf_d[g_detail_idx].stjfseq
               LET gs_keys_bak[2] = g_stjf_d[g_detail_idx].stjfseq
               LET gs_keys[3] = g_stjf9_d[g_detail_idx2].stjgseq1
               LET gs_keys_bak[3] = g_stjf9_d_t.stjgseq1
               CALL astm801_update_b('stjg_t',gs_keys,gs_keys_bak,"'10'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astm801_stjg_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stje_m),util.JSON.stringify(g_stjf9_d_t)
               LET g_log2 = util.JSON.stringify(g_stje_m),util.JSON.stringify(g_stjf9_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page10修改後 name="input.body9.a_update"
               
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjgsite
            #add-point:BEFORE FIELD stjgsite name="input.b.page9.stjgsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjgsite
            
            #add-point:AFTER FIELD stjgsite name="input.a.page9.stjgsite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjgsite
            #add-point:ON CHANGE stjgsite name="input.g.page9.stjgsite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjgunit
            #add-point:BEFORE FIELD stjgunit name="input.b.page9.stjgunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjgunit
            
            #add-point:AFTER FIELD stjgunit name="input.a.page9.stjgunit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjgunit
            #add-point:ON CHANGE stjgunit name="input.g.page9.stjgunit"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjgseq1
            #add-point:BEFORE FIELD stjgseq1 name="input.b.page9.stjgseq1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjgseq1
            
            #add-point:AFTER FIELD stjgseq1 name="input.a.page9.stjgseq1"
            #應用 a05 樣板自動產生(Version:3)
            #確認資料無重複
            


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjgseq1
            #add-point:ON CHANGE stjgseq1 name="input.g.page9.stjgseq1"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjg002
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_stjf9_d[l_ac].stjg002,"0","0","","","azz-00079",1) THEN
               NEXT FIELD stjg002
            END IF 
 
 
 
            #add-point:AFTER FIELD stjg002 name="input.a.page9.stjg002"
            IF NOT cl_null(g_stjf9_d[l_ac].stjg002) THEN 
               LET l_cnt = 0 
               SELECT COUNT(*) INTO l_cnt 
                 FROM stjg_t
                WHERE stjgent = g_enterprise
                  AND stjg001 = g_stje_m.stje001
                  AND stjgseq = g_stjf_d[g_detail_idx].stjfseq
                  AND ((stjg002 <= g_stjf9_d[l_ac].stjg002 AND stjg003 >= g_stjf9_d[l_ac].stjg002))
                  AND stjgseq1 <> g_stjf9_d[l_ac].stjgseq1
               IF l_cnt > 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "ast-00611"
                  LET g_errparam.extend = g_stjf9_d[l_ac].stjg002
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                   
                  LET g_stjf9_d[l_ac].stjg002=  g_stjf9_d[l_ac].stjg002
                  NEXT FIELD CURRENT  
               END IF
            END IF 
            IF NOT cl_null(g_stjf9_d[l_ac].stjg002) AND NOT cl_null(g_stjf9_d[l_ac].stjg003) THEN
               IF g_stjf9_d[l_ac].stjg002 > g_stjf9_d[l_ac].stjg003 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "ast-00017"
                  LET g_errparam.extend = g_stjf9_d[l_ac].stjg002
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                   
                  LET g_stjf9_d[l_ac].stjg002=  g_stjf9_d[l_ac].stjg002
                  NEXT FIELD CURRENT  
               END IF
            END IF

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjg002
            #add-point:BEFORE FIELD stjg002 name="input.b.page9.stjg002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjg002
            #add-point:ON CHANGE stjg002 name="input.g.page9.stjg002"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjg003
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_stjf9_d[l_ac].stjg003,"0","0","","","azz-00079",1) THEN
               NEXT FIELD stjg003
            END IF 
 
 
 
            #add-point:AFTER FIELD stjg003 name="input.a.page9.stjg003"
            IF NOT cl_null(g_stjf9_d[l_ac].stjg003) THEN 
               LET l_cnt = 0 
               SELECT COUNT(*) INTO l_cnt 
                 FROM stjg_t
                WHERE stjgent = g_enterprise
                  AND stjg001 = g_stje_m.stje001
                  AND stjgseq = g_stjf_d[g_detail_idx].stjfseq
                  AND ((stjg002 <= g_stjf9_d[l_ac].stjg003 AND stjg003 >= g_stjf9_d[l_ac].stjg003))
                  AND stjgseq1 <> g_stjf9_d[l_ac].stjgseq1
               IF l_cnt > 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "ast-00611"
                  LET g_errparam.extend = g_stjf9_d[l_ac].stjg003
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                   
                  LET g_stjf9_d[l_ac].stjg003 =  g_stjf9_d[l_ac].stjg003
                  NEXT FIELD CURRENT  
               END IF
            END IF 
            IF NOT cl_null(g_stjf9_d[l_ac].stjg002) AND NOT cl_null(g_stjf9_d[l_ac].stjg003) THEN
               IF g_stjf9_d[l_ac].stjg002 > g_stjf9_d[l_ac].stjg003 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "ast-00017"
                  LET g_errparam.extend = g_stjf9_d[l_ac].stjg003
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                   
                  LET g_stjf9_d[l_ac].stjg003=  g_stjf9_d[l_ac].stjg003
                  NEXT FIELD CURRENT  
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjg003
            #add-point:BEFORE FIELD stjg003 name="input.b.page9.stjg003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjg003
            #add-point:ON CHANGE stjg003 name="input.g.page9.stjg003"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjg004
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_stjf9_d[l_ac].stjg004,"0","0","","","azz-00079",1) THEN
               NEXT FIELD stjg004
            END IF 
 
 
 
            #add-point:AFTER FIELD stjg004 name="input.a.page9.stjg004"
            IF NOT cl_null(g_stjf9_d[l_ac].stjg004) THEN 
               LET g_stjf9_d[l_ac].stjg006 = g_stjf9_d[l_ac].stjg004
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjg004
            #add-point:BEFORE FIELD stjg004 name="input.b.page9.stjg004"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjg004
            #add-point:ON CHANGE stjg004 name="input.g.page9.stjg004"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjg006
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_stjf9_d[l_ac].stjg006,"0","0","","","azz-00079",1) THEN
               NEXT FIELD stjg006
            END IF 
 
 
 
            #add-point:AFTER FIELD stjg006 name="input.a.page9.stjg006"
            IF NOT cl_null(g_stjf9_d[l_ac].stjg006) THEN 
            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjg006
            #add-point:BEFORE FIELD stjg006 name="input.b.page9.stjg006"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjg006
            #add-point:ON CHANGE stjg006 name="input.g.page9.stjg006"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page9.stjgsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjgsite
            #add-point:ON ACTION controlp INFIELD stjgsite name="input.c.page9.stjgsite"
            
            #END add-point
 
 
         #Ctrlp:input.c.page9.stjgunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjgunit
            #add-point:ON ACTION controlp INFIELD stjgunit name="input.c.page9.stjgunit"
            
            #END add-point
 
 
         #Ctrlp:input.c.page9.stjgseq1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjgseq1
            #add-point:ON ACTION controlp INFIELD stjgseq1 name="input.c.page9.stjgseq1"
            
            #END add-point
 
 
         #Ctrlp:input.c.page9.stjg002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjg002
            #add-point:ON ACTION controlp INFIELD stjg002 name="input.c.page9.stjg002"
            
            #END add-point
 
 
         #Ctrlp:input.c.page9.stjg003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjg003
            #add-point:ON ACTION controlp INFIELD stjg003 name="input.c.page9.stjg003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page9.stjg004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjg004
            #add-point:ON ACTION controlp INFIELD stjg004 name="input.c.page9.stjg004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page9.stjg006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjg006
            #add-point:ON ACTION controlp INFIELD stjg006 name="input.c.page9.stjg006"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page10_after_row name="input.body9.after_row"
            
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_stjf9_d[l_ac].* = g_stjf9_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm801_bcl10
               CLOSE astm801_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astm801_unlock_b("stjg_t","'10'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page10_after_row2 name="input.body9.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body9.after_input"
            
            #end add-point  
 
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_stjf9_d[li_reproduce_target].* = g_stjf9_d[li_reproduce].*
 
               LET g_stjf9_d[li_reproduce_target].stjgseq1 = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_stjf9_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_stjf9_d.getLength()+1
            END IF
        
      END INPUT
 
      DISPLAY ARRAY g_stjf5_d TO s_detail5.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL astm801_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail5")
            LET g_detail_idx = l_ac
            
            #add-point:page7, before row動作 name="input.body5.before_row"
            
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'7',"))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail5")
            CALL astm801_idx_chk()
            LET g_current_page = 7
      
         #add-point:page7自定義行為 name="input.body5.action"
         
         #end add-point
      
      END DISPLAY
 
 
 
{</section>}
 
{<section id="astm801.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      INPUT ARRAY g_stjf12_d FROM s_detail8.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"

            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stjf12_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astm801_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'10',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_stjf12_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"

            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"

            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[10] = l_ac
            LET g_current_page = 10
            CALL astm801_b_fill2_1()
 
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astm801_cl USING g_enterprise,g_stje_m.stje001
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm801_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE astm801_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_stjf12_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stjf12_d[l_ac].stjfseq_2 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_stjf12_d_t.* = g_stjf12_d[l_ac].*  #BACKUP
               LET g_stjf12_d_o.* = g_stjf12_d[l_ac].*  #BACKUP
               CALL astm801_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"

               #end add-point  
               CALL astm801_set_no_entry_b(l_cmd)
               IF NOT astm801_lock_b("stjf_t_1","'10'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astm801_bcl11 INTO g_stjf12_d[l_ac].stjfseq_2,g_stjf12_d[l_ac].stjf002_2, 
                                           g_stjf12_d[l_ac].stjf003_2,g_stjf12_d[l_ac].stjf004_2,g_stjf12_d[l_ac].stjf005_2,
                                           g_stjf12_d[l_ac].stjf006_2,g_stjf12_d[l_ac].stjf007_2,g_stjf12_d[l_ac].stjf008_2,
                                           g_stjf12_d[l_ac].stjf009_2,g_stjf12_d[l_ac].stjf010_2,g_stjf12_d[l_ac].stjf012_2,g_stjf12_d[l_ac].stjf019_2,
                                           g_stjf12_d[l_ac].stjf013_2,g_stjf12_d[l_ac].stjf014_2,g_stjf12_d[l_ac].stjf015_2,
                                           g_stjf12_d[l_ac].stjf016_2,g_stjf12_d[l_ac].stjf020_2
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_stjf_d_t.stjfseq,":",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stjf12_d_mask_o[l_ac].* =  g_stjf12_d[l_ac].*
                  CALL astm801_stjf_t_mask()
                  LET g_stjf12_d_mask_n[l_ac].* =  g_stjf12_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astm801_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            IF g_stjf12_d[l_ac].stjf016_2 = '1' THEN
               CALL cl_set_comp_visible('group_28',FALSE)
            ELSE
               CALL cl_set_comp_visible('group_28',TRUE)
            END IF 
            IF g_stjf12_d[l_ac].stjf003_2 IS NOT NULL THEN
               NEXT FIELD stjfsite_2
            END IF
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stjf12_d[l_ac].* TO NULL 
            INITIALIZE g_stjf12_d_t.* TO NULL 
            INITIALIZE g_stjf12_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
            LET g_stjf12_d[l_ac].stjf002_2 = "N"
            LET g_stjf12_d[l_ac].stjf009_2 = "2"
            LET g_stjf12_d[l_ac].stjf010_2 = "5"
            LET g_stjf12_d[l_ac].stjf016_2 = '1'
            LET g_stjf12_d[l_ac].stjf020_2 = "Y"
            LET g_stjf12_d[l_ac].stjf007_2 = "1"
            LET g_stjf12_d[l_ac].stjf008_2 = "1"
            LET g_stjf12_d[l_ac].stjf013_2 = "1"
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            SELECT MAX(stjfseq) INTO g_stjf12_d[l_ac].stjfseq_2
              FROM stjf_t
             WHERE stjfent= g_enterprise
               AND stjf001= g_stje_m.stje001
            IF cl_null(g_stjf12_d[l_ac].stjfseq_2) THEN
               LET g_stjf12_d[l_ac].stjfseq_2=1
            ELSE
               LET g_stjf12_d[l_ac].stjfseq_2=g_stjf12_d[l_ac].stjfseq_2+1
            END IF 
            IF g_stjf12_d[l_ac].stjf016_2 = '1' THEN
               CALL cl_set_comp_visible('group_28',FALSE)
            ELSE
               CALL cl_set_comp_visible('group_28',TRUE)
            END IF 
            #end add-point
            LET g_stjf12_d_t.* = g_stjf12_d[l_ac].*     #新輸入資料
            LET g_stjf12_d_o.* = g_stjf12_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astm801_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"

            #end add-point
            CALL astm801_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stjf12_d[li_reproduce_target].* = g_stjf12_d[li_reproduce].*
 
               LET g_stjf12_d[li_reproduce_target].stjfseq_2 = NULL
 
            END IF
            
            #add-point:modify段before insert name="input.body.before_insert"

            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"

            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stjf_t 
             WHERE stjfent = g_enterprise AND stjf001 = g_stje_m.stje001
 
               AND stjfseq = g_stjf12_d[l_ac].stjfseq_2
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"

               #end add-point
            
               #同步新增到同層的table
               INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stje_m.stje001
               LET gs_keys[2] = g_stjf12_d[g_detail_idx].stjfseq_2
               CALL astm801_insert_b('stjf_t',gs_keys,"'A'")
                           
               #add-point:單身新增後 name="input.body.a_insert"

               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_stjf12_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stjf_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astm801_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"

               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"

               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"

               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stje_m.stje001
 
               LET gs_keys[gs_keys.getLength()+1] = g_stjf12_d_t.stjfseq_2
 
            
               #刪除同層單身
               IF NOT astm801_delete_b('stjf_t',gs_keys,"'A'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm801_bcl11
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astm801_key_delete_b(gs_keys,'stjf_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm801_bcl11
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身刪除中 name="input.body.m_delete"
               
               #add-point:delete_b段刪除中 name="delete_b.m_delete"
               
               #end add-point    
              
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE astm801_bcl11
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"

               #end add-point
               LET l_count = g_stjf12_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"

               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stjf12_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjfseq_2
            #add-point:BEFORE FIELD stjfseq name="input.b.page1.stjfseq"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjfseq_2
            
            #add-point:AFTER FIELD stjfseq name="input.a.page1.stjfseq"
            #應用 a05 樣板自動產生(Version:3)
            #確認資料無重複
            



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjfseq_2
            #add-point:ON CHANGE stjfseq name="input.g.page1.stjfseq"

            #END add-point 
           
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf002_2
            #add-point:BEFORE FIELD stjf002 name="input.b.page1.stjf002"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf002_2
            
            #add-point:AFTER FIELD stjf002 name="input.a.page1.stjf002"

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjf002_2
            #add-point:ON CHANGE stjf002 name="input.g.page1.stjf002"

            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf003_2
            #add-point:BEFORE FIELD stjf003 name="input.b.page1.stjf003"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf003_2
            
            #add-point:AFTER FIELD stjf003 name="input.a.page1.stjf003"

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjf003_2
            #add-point:ON CHANGE stjf003 name="input.g.page1.stjf003"

            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf004_2
            
            #add-point:AFTER FIELD stjf004 name="input.a.page1.stjf004"
            IF NOT cl_null(g_stjf12_d[l_ac].stjf004_2) THEN 
               #應用 a17 樣板自動產生(Version:3)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
 
               #設定g_chkparam.*的參數              
               LET g_chkparam.arg1 = g_stjf12_d[l_ac].stjf004_2
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_stae001") THEN
                  #檢查成功時後續處理
                  #判断该费用编号要存在于单头的费用合同项里面
                  LET l_cnt = 0
                  SELECT COUNT(*) INTO l_cnt 
                    FROM sthb_t
                   WHERE sthbent = g_enterprise
                     AND sthb001 = g_stje_m.stje003
                     AND sthb002 = g_stjf12_d[l_ac].stjf004_2
                  IF l_cnt <= 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "ast-00607"
                     LET g_errparam.extend = g_stjf12_d[l_ac].stjf004_2
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                      
                     LET g_stjf12_d[l_ac].stjf004_2=  g_stjf12_d_t.stjf004_2
                     NEXT FIELD CURRENT  
                  END IF
                  #同一个费用只能是固定或者变动的
                  LET l_cnt = 0 
                  SELECT COUNT(*) INTO l_cnt 
                    FROM stjf_t
                   WHERE stjfent = g_enterprise
                     AND stjf004 = g_stjf12_d[l_ac].stjf004_2
                     AND stjf001 = g_stje_m.stje001
                     AND stjf009 IN ('1','3')
                  IF l_cnt > 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "ast-00612"
                     LET g_errparam.extend = g_stjf12_d[l_ac].stjf004_2
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                      
                     LET g_stjf12_d[l_ac].stjf004_2 = g_stjf12_d_t.stjf004_2
                     NEXT FIELD CURRENT  
                  END IF
                  #同一个费用，日期区间不能重叠
                  IF NOT cl_null(g_stjf12_d[l_ac].stjf004_2) AND NOT cl_null(g_stjf12_d[l_ac].stjf005_2) AND NOT cl_null(g_stjf12_d[l_ac].stjf006_2) THEN
                     LET l_cnt = 0 
                     SELECT COUNT(*) INTO l_cnt 
                       FROM stjf_t
                      WHERE stjfent = g_enterprise
                        AND stjf001 = g_stjf12_d[l_ac].stjf004_2
                        AND ((stjf005 >= g_stjf12_d[l_ac].stjf005_2 AND stjf005 <= g_stjf12_d[l_ac].stjf006_2) 
                         OR ( stjf006 <= g_stjf12_d[l_ac].stjf005_2 AND stjf006 >= g_stjf12_d[l_ac].stjf006_2))
                        AND stjfseq <> g_stjf_d[l_ac].stjfseq
                        AND stjf009 IN ('2')
                     IF l_cnt > 0 THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = "ast-00609"
                        LET g_errparam.extend = g_stjf12_d[l_ac].stjf004_2
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                         
                        LET g_stjf12_d[l_ac].stjf004_2 =  g_stjf12_d_t.stjf004_2
                        NEXT FIELD CURRENT  
                     END IF
                  END IF   
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            END IF  
            SELECT sthb006 INTO g_stjf12_d[l_ac].stjf002_2
              FROM sthb_t
             WHERE sthbent = g_enterprise
               AND sthb001 = g_stje_m.stje008
               AND sthb002 = g_stjf_d[l_ac].stjf004            
            SELECT stae004 INTO g_stjf12_d[l_ac].stae004_2
              FROM stae_t
             WHERE staeent = g_enterprise
               AND stae001 = g_stjf12_d[l_ac].stjf004_2
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stjf12_d[l_ac].stjf004_2
            CALL ap_ref_array2(g_ref_fields,"SELECT stael003 FROM stael_t WHERE staelent='"||g_enterprise||"' AND stael001=? AND stael002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stjf12_d[l_ac].stjf004_2_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stjf12_d[l_ac].stjf004_2_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf004_2
            #add-point:BEFORE FIELD stjf004 name="input.b.page1.stjf004"

            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjf004_2
            #add-point:ON CHANGE stjf004 name="input.g.page1.stjf004"

            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf005_2
            #add-point:BEFORE FIELD stjf005 name="input.b.page1.stjf005"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf005_2
            
            #add-point:AFTER FIELD stjf005 name="input.a.page1.stjf005"
            IF g_stjf12_d[l_ac].stjf005_2 IS NOT NULL THEN
               IF g_stjf12_d[l_ac].stjf005_2 < g_stje_m.stje011 OR g_stjf12_d[l_ac].stjf005_2 > g_stje_m.stje012 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "ast-00610"
                  LET g_errparam.extend = g_stjf12_d[l_ac].stjf005_2
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                   
                  LET g_stjf12_d[l_ac].stjf005_2 =  g_stjf12_d_t.stjf005_2
                  NEXT FIELD CURRENT 
               END IF
               IF g_stjf12_d[l_ac].stjf006_2 IS NOT NULL THEN
                  IF g_stjf12_d[l_ac].stjf005_2 > g_stjf12_d[l_ac].stjf006_2 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "amm-00080"
                  LET g_errparam.extend = g_stjf12_d[l_ac].stjf005_2
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                   
                  LET g_stjf12_d[l_ac].stjf005_2 = g_stjf12_d_t.stjf005_2
                  NEXT FIELD CURRENT 
               END IF
               END IF
            END IF
            #同一个费用，日期区间不能重叠
            IF NOT cl_null(g_stjf12_d[l_ac].stjf004_2 ) AND NOT cl_null(g_stjf12_d[l_ac].stjf005_2 ) AND NOT cl_null(g_stjf12_d[l_ac].stjf006_2 ) THEN
               LET l_cnt = 0 
               SELECT COUNT(*) INTO l_cnt 
                 FROM stjf_t
                WHERE stjfent = g_enterprise
                  AND stjf001 = g_stjf12_d[l_ac].stjf004_2 
                  AND ((stjf005 >= g_stjf12_d[l_ac].stjf005_2  AND stjf005 <= g_stjf12_d[l_ac].stjf006_2 ) 
                   OR ( stjf006 <= g_stjf12_d[l_ac].stjf006_2  AND stjf006 >= g_stjf12_d[l_ac].stjf005_2 ))
                  AND stjfseq <> g_stjf12_d[l_ac].stjfseq_2 
                  AND stjf009 IN ('2')
               IF l_cnt > 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "ast-00609"
                  LET g_errparam.extend = g_stjf12_d[l_ac].stjf005_2
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                   
                  LET g_stjf12_d[l_ac].stjf005_2 = g_stjf12_d_t.stjf005_2
                  NEXT FIELD CURRENT  
               END IF
            END IF   
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjf005_2
            #add-point:ON CHANGE stjf005 name="input.g.page1.stjf005"

            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf006_2
            #add-point:BEFORE FIELD stjf006 name="input.b.page1.stjf006"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf006_2
            
            #add-point:AFTER FIELD stjf006 name="input.a.page1.stjf006"
            IF g_stjf12_d[l_ac].stjf006_2 IS NOT NULL THEN
               IF g_stjf12_d[l_ac].stjf006_2 < g_stje_m.stje011 OR g_stjf12_d[l_ac].stjf006_2 > g_stje_m.stje012 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "ast-00610"
                  LET g_errparam.extend = g_stjf12_d[l_ac].stjf006_2
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                   
                  LET g_stjf12_d[l_ac].stjf006_2 =  g_stjf12_d_t.stjf006_2
                  NEXT FIELD CURRENT 
               END IF
               IF g_stjf12_d[l_ac].stjf005_2 IS NOT NULL THEN
                  IF g_stjf12_d[l_ac].stjf005_2 > g_stjf12_d[l_ac].stjf006_2 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "amm-00080"
                  LET g_errparam.extend = g_stjf12_d[l_ac].stjf006_2
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                   
                  LET g_stjf12_d[l_ac].stjf006_2 = g_stjf12_d_t.stjf006_2
                  NEXT FIELD CURRENT 
               END IF
               END IF
            END IF
            #同一个费用，日期区间不能重叠
            IF NOT cl_null(g_stjf12_d[l_ac].stjf004_2 ) AND NOT cl_null(g_stjf12_d[l_ac].stjf005_2 ) AND NOT cl_null(g_stjf12_d[l_ac].stjf006_2 ) THEN
               LET l_cnt = 0 
               SELECT COUNT(*) INTO l_cnt 
                 FROM stjf_t
                WHERE stjfent = g_enterprise
                  AND stjf001 = g_stjf12_d[l_ac].stjf004_2 
                  AND ((stjf005 >= g_stjf12_d[l_ac].stjf005_2  AND stjf005 <= g_stjf12_d[l_ac].stjf006_2 ) 
                   OR ( stjf006 <= g_stjf12_d[l_ac].stjf006_2  AND stjf006 >= g_stjf12_d[l_ac].stjf005_2 ))
                  AND stjfseq <> g_stjf12_d[l_ac].stjfseq_2 
                  AND stjf009 IN ('2')
               IF l_cnt > 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "ast-00609"
                  LET g_errparam.extend = g_stjf12_d[l_ac].stjf006_2
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                   
                  LET g_stjf12_d[l_ac].stjf006_2 = g_stjf12_d_t.stjf006_2
                  NEXT FIELD CURRENT  
               END IF
            END IF  
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjf006_2
            #add-point:ON CHANGE stjf006 name="input.g.page1.stjf006"

            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf007_2
            #add-point:BEFORE FIELD stjf007 name="input.b.page1.stjf007"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf007_2
            
            #add-point:AFTER FIELD stjf007 name="input.a.page1.stjf007"

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjf007_2
            #add-point:ON CHANGE stjf007 name="input.g.page1.stjf007"

            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf008_2
            #add-point:BEFORE FIELD stjf008 name="input.b.page1.stjf008"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf008_2
            
            #add-point:AFTER FIELD stjf008 name="input.a.page1.stjf008"

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjf008_2
            #add-point:ON CHANGE stjf008 name="input.g.page1.stjf008"

            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf009_2
            #add-point:BEFORE FIELD stjf009 name="input.b.page1.stjf009"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf009_2
            
            #add-point:AFTER FIELD stjf009 name="input.a.page1.stjf009"

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjf009_2
            #add-point:ON CHANGE stjf009 name="input.g.page1.stjf009"

            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf010_2
            
            #add-point:AFTER FIELD stjf010 name="input.a.page1.stjf010"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf010_2
            #add-point:BEFORE FIELD stjf010 name="input.b.page1.stjf010"

            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjf010_2
            #add-point:ON CHANGE stjf010 name="input.g.page1.stjf010"

            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf012_2
            #add-point:BEFORE FIELD stjf011 name="input.b.page1.stjf011"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf012_2
            
            #add-point:AFTER FIELD stjf011 name="input.a.page1.stjf011"
            IF NOT cl_ap_chk_range(g_stjf12_d[l_ac].stjf012_2,"0","0","","","azz-00079",1) THEN
               NEXT FIELD stjf012_2
            END IF 
 
 
 
            #add-point:AFTER FIELD stjf011 name="input.a.page1.stjf011"
            IF NOT cl_null(g_stjf12_d[l_ac].stjf012_2) THEN 
               LET g_stjf12_d[l_ac].stjf019_2 = g_stjf12_d[l_ac].stjf012_2
            END IF 
            
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjf012_2
            #add-point:ON CHANGE stjf011 name="input.g.page1.stjf011"

            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf013_2
            #add-point:BEFORE FIELD stjf016 name="input.b.page1.stjf016"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf013_2
            
            #add-point:AFTER FIELD stjf016 name="input.a.page1.stjf016"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjf013_2
            #add-point:ON CHANGE stjf016 name="input.g.page1.stjf016"
            IF g_stjf12_d[l_ac].stjf013_2 IS NOT NULL THEN
               IF g_stjf12_d[l_ac].stjf013_2 = '1' THEN
                  LET g_stjf12_d[l_ac].stjf014_2 = ''
                  LET g_stjf12_d[l_ac].stjf015_2 = ''
               END IF 
               IF g_stjf12_d[l_ac].stjf013_2 = '3' THEN
                  LET g_stjf12_d[l_ac].stjf015_2 = ''
               END IF
            END IF 
            CALL astm801_set_entry_b(l_cmd)
            CALL astm801_set_no_entry_b(l_cmd)
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf014_2
            #add-point:BEFORE FIELD stjf017 name="input.b.page1.stjf017"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf014_2
            
            #add-point:AFTER FIELD stjf017 name="input.a.page1.stjf017"

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjf014_2
            #add-point:ON CHANGE stjf017 name="input.g.page1.stjf017"

            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf015_2
            #add-point:BEFORE FIELD stjfsite name="input.b.page1.stjfsite"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf015_2
            
            #add-point:AFTER FIELD stjfsite name="input.a.page1.stjfsite"

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjf015_2
            #add-point:ON CHANGE stjfsite name="input.g.page1.stjfsite"

            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjf016_2
            #add-point:BEFORE FIELD stjfunit name="input.b.page1.stjfunit"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjf016_2
            
            #add-point:AFTER FIELD stjfunit name="input.a.page1.stjfunit"

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjf016_2
            #add-point:ON CHANGE stjfunit name="input.g.page1.stjfunit"
            IF g_stjf12_d[l_ac].stjf016_2 IS NOT NULL THEN
               IF g_stjf12_d[l_ac].stjf016_2 <> '1' THEN
                  LET g_stjf12_d[l_ac].stjf012_2 = ''
                  LET g_stjf12_d[l_ac].stjf019_2 = ''
               END IF 
            END IF 
            IF g_stjf12_d[l_ac].stjf016_2 = '1' THEN
               CALL cl_set_comp_visible('group_28',FALSE)
            ELSE
               CALL cl_set_comp_visible('group_28',TRUE)
            END IF 
            CALL astm801_set_entry_b(l_cmd)
            CALL astm801_set_no_entry_b(l_cmd)
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.stjfseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjfseq_2
            #add-point:ON ACTION controlp INFIELD stjfseq name="input.c.page1.stjfseq"

            #END add-point
        
 
         #Ctrlp:input.c.page1.stjf002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf002_2
            #add-point:ON ACTION controlp INFIELD stjf002 name="input.c.page1.stjf002"

            #END add-point
 
 
         #Ctrlp:input.c.page1.stjf003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf003_2
            #add-point:ON ACTION controlp INFIELD stjf003 name="input.c.page1.stjf003"

            #END add-point
 
 
         #Ctrlp:input.c.page1.stjf004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf004_2
            #add-point:ON ACTION controlp INFIELD stjf004 name="input.c.page1.stjf004"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_stjf12_d[l_ac].stjf004_2             #給予default值
            LET g_qryparam.default2 = "" #g_stjf_d[l_ac].stael003 #說明
            LET g_qryparam.default3 = "" #g_stjf_d[l_ac].stael004 #助記碼
            #給予arg
            LET g_qryparam.arg1 = "" #s

 
            CALL q_stae001()                                #呼叫開窗
 
            LET g_stjf12_d[l_ac].stjf004_2 = g_qryparam.return1              
            #LET g_stjf_d[l_ac].stael003 = g_qryparam.return2 
            #LET g_stjf_d[l_ac].stael004 = g_qryparam.return3 
            DISPLAY g_stjf12_d[l_ac].stjf004_2 TO stjf004_2              #
            #DISPLAY g_stjf_d[l_ac].stael003 TO stael003 #說明
            #DISPLAY g_stjf_d[l_ac].stael004 TO stael004 #助記碼
            NEXT FIELD stjf004_2                          #返回原欄位



            #END add-point
 
 
         #Ctrlp:input.c.page1.stjf005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf005_2
            #add-point:ON ACTION controlp INFIELD stjf005 name="input.c.page1.stjf005"

            #END add-point
 
 
         #Ctrlp:input.c.page1.stjf006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf006_2
            #add-point:ON ACTION controlp INFIELD stjf006 name="input.c.page1.stjf006"

            #END add-point
 
 
         #Ctrlp:input.c.page1.stjf007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf007_2
            #add-point:ON ACTION controlp INFIELD stjf007 name="input.c.page1.stjf007"

            #END add-point
 
 
         #Ctrlp:input.c.page1.stjf008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf008_2
            #add-point:ON ACTION controlp INFIELD stjf008 name="input.c.page1.stjf008"

            #END add-point
 
 
         #Ctrlp:input.c.page1.stjf009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf009_2
            #add-point:ON ACTION controlp INFIELD stjf009 name="input.c.page1.stjf009"

            #END add-point
 
 
         #Ctrlp:input.c.page1.stjf010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf010_2
            #add-point:ON ACTION controlp INFIELD stjf010 name="input.c.page1.stjf010"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段

            #END add-point
 
 
         #Ctrlp:input.c.page1.stjf011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf012_2
            #add-point:ON ACTION controlp INFIELD stjf011 name="input.c.page1.stjf011"

            #END add-point
 
 
         #Ctrlp:input.c.page1.stjf016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf013_2
            #add-point:ON ACTION controlp INFIELD stjf016 name="input.c.page1.stjf016"

            #END add-point
 
 
         #Ctrlp:input.c.page1.stjf017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf014_2
            #add-point:ON ACTION controlp INFIELD stjf017 name="input.c.page1.stjf017"

            #END add-point
 
 
         #Ctrlp:input.c.page1.stjfsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf015_2
            #add-point:ON ACTION controlp INFIELD stjfsite name="input.c.page1.stjfsite"

            #END add-point
 
 
         #Ctrlp:input.c.page1.stjfunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stjf016_2
            #add-point:ON ACTION controlp INFIELD stjfunit name="input.c.page1.stjfunit"

            #END add-point
     
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_stjf12_d[l_ac].* = g_stjf12_d_t.*
               CLOSE astm801_bcl11
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_stjf12_d[l_ac].stjfseq_2 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_stjf12_d[l_ac].* = g_stjf12_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"

               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               #CALL astm801_stjf_t_mask_restore('restore_mask_o')
      
               UPDATE stjf_t SET (stjf001,stjfseq,stjf002,stjf003,stjf004,stjf005,stjf006, 
                   stjf007,stjf008,stjf009,stjf010,stjf012,stjf019,stjf013,stjf014,stjf015,stjf016,stjf020,stjfsite,stjfunit) = (g_stje_m.stje001, 
                   g_stjf12_d[l_ac].stjfseq_2,g_stjf12_d[l_ac].stjf002_2,g_stjf12_d[l_ac].stjf003_2, 
                   g_stjf12_d[l_ac].stjf004_2,g_stjf12_d[l_ac].stjf005_2,g_stjf12_d[l_ac].stjf006_2,g_stjf12_d[l_ac].stjf007_2, 
                   g_stjf12_d[l_ac].stjf008_2,g_stjf12_d[l_ac].stjf009_2,g_stjf12_d[l_ac].stjf010_2,g_stjf12_d[l_ac].stjf012_2,g_stjf12_d[l_ac].stjf019_2, 
                   g_stjf12_d[l_ac].stjf013_2,g_stjf12_d[l_ac].stjf014_2,g_stjf12_d[l_ac].stjf015_2,g_stjf12_d[l_ac].stjf016_2,g_stjf12_d[l_ac].stjf020_2,
                   g_stje_m.stjesite,g_stje_m.stjesite) 

                WHERE stjfent = g_enterprise AND stjf001 = g_stje_m.stje001 
 
                  AND stjfseq = g_stjf12_d_t.stjfseq_2 #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"

               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stjf_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_stjf12_d[l_ac].* = g_stjf12_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stjf_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_stjf12_d[l_ac].* = g_stjf12_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stje_m.stje001
               LET gs_keys_bak[1] = g_stje001_t
               LET gs_keys[2] = g_stjf12_d[g_detail_idx].stjfseq_2
               LET gs_keys_bak[2] = g_stjf12_d_t.stjfseq_2
               #CALL astm801_update_b('stjf_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
 
               #將遮罩欄位進行遮蔽
               #CALL astm801_stjf_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_stjf12_d[g_detail_idx].stjfseq_2 = g_stjf12_d_t.stjfseq_2 
 
                  ) THEN
                  LET gs_keys[01] = g_stje_m.stje001
 
                  LET gs_keys[gs_keys.getLength()+1] = g_stjf12_d_t.stjfseq_2
 
                  CALL astm801_key_update_b(gs_keys,'stjf_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stje_m),util.JSON.stringify(g_stjf12_d_t)
               LET g_log2 = util.JSON.stringify(g_stje_m),util.JSON.stringify(g_stjf12_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"

               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            IF g_stjf12_d[l_ac].stjf016_2 = '1' THEN
               #删除单身
               DELETE FROM stjg_t
                WHERE stjgent = g_enterprise 
                  AND stjg001 = g_stje_m.stje001 
                  AND stjgseq = g_stjf12_d[l_ac].stjfseq_2
                   
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "stjg_t:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = FALSE 
                  CALL cl_err()
                  CLOSE astm801_bcl11
                  CALL s_transaction_end('N','0')
                  EXIT DIALOG 
               END IF
            END IF  
            #end add-point
            CALL astm801_unlock_b("stjf_t","'10'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            CALL astm801_b_fill()   
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"

            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_stjf12_d[li_reproduce_target].* = g_stjf12_d[li_reproduce].*
 
               LET g_stjf12_d[li_reproduce_target].stjfseq_2 = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_stjf12_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_stjf12_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_stjf15_d FROM s_detail10.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_9)
         
        
         BEFORE INPUT
            #先將上層單身的idx放入g_detail_idx
            LET g_detail_idx_tmp = g_detail_idx
            LET g_detail_idx = g_detail_idx_list[10]
            #檢查上層單身是否為空
            IF g_detail_idx = 0 OR g_stjf12_d.getLength() = 0 THEN
               NEXT FIELD stjfseq_2
            END IF
            #檢查上層單身是否有資料
            IF cl_null(g_stjf12_d[g_detail_idx].stjfseq_2) THEN
               NEXT FIELD stjfseq_2
            END IF
            #add-point:資料輸入前 name="input.body9.before_input2"

            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stjf15_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            #如果一直都在單身2則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'11',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_stjf15_d.getLength()
            #add-point:資料輸入前 name="input.body9.before_input"

            #end add-point
            
         BEFORE INSERT
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stjf15_d[l_ac].* TO NULL 
            INITIALIZE g_stjf15_d_t.* TO NULL 
            INITIALIZE g_stjf15_d_o.* TO NULL 
            #公用欄位給值(單身9)
            
            #自定義預設值(單身9)
            
            #add-point:modify段before備份 name="input.body9.insert.before_bak"
            SELECT MAX(stjgseq1) INTO g_stjf15_d[l_ac].stjgseq1_1
              FROM stjg_t
             WHERE stjgent= g_enterprise
               AND stjg001= g_stje_m.stje001
               AND stjgseq = g_stjf12_d[g_detail_idx].stjfseq_2
            IF cl_null(g_stjf15_d[l_ac].stjgseq1_1) THEN
               LET g_stjf15_d[l_ac].stjgseq1_1=1
            ELSE
               LET g_stjf15_d[l_ac].stjgseq1_1=g_stjf15_d[l_ac].stjgseq1_1+1
            END IF 
            SELECT MAX(stjg003) INTO g_stjf15_d[l_ac].stjg002_1
              FROM stjg_t
             WHERE stjgent= g_enterprise
               AND stjg001= g_stje_m.stje001
               AND stjgseq = g_stjf12_d[g_detail_idx].stjfseq_2
            IF cl_null(g_stjf15_d[l_ac].stjg002_1) THEN
               LET g_stjf15_d[l_ac].stjg002_1=1
            ELSE
               LET g_stjf15_d[l_ac].stjg002_1=g_stjf15_d[l_ac].stjg002_1+1
            END IF 
            #end add-point
            LET g_stjf15_d_t.* = g_stjf15_d[l_ac].*     #新輸入資料
            LET g_stjf15_d_o.* = g_stjf15_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astm801_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body9.insert.after_set_entry_b"

            #end add-point
            CALL astm801_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stjf15_d[li_reproduce_target].* = g_stjf15_d[li_reproduce].*
 
               LET g_stjf15_d[li_reproduce_target].stjgseq1_1 = NULL
            END IF
            
            #add-point:modify段before insert name="input.body9.before_insert"

            #end add-point  
            
         BEFORE ROW
            #add-point:modify段before row2 name="input.body9.before_row2"

            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx2 = l_ac
            LET g_detail_idx_list[11] = l_ac
            LET g_current_page = 11
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astm801_cl USING g_enterprise,g_stje_m.stje001
            OPEN astm801_bcl11 USING g_enterprise,g_stje_m.stje001,g_stjf12_d[g_detail_idx].stjfseq_2
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm801_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE astm801_cl
               CLOSE astm801_bcl11
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_stjf15_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stjf15_d[l_ac].stjgseq1_1 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_stjf15_d_t.* = g_stjf15_d[l_ac].*  #BACKUP
               LET g_stjf15_d_o.* = g_stjf15_d[l_ac].*  #BACKUP
               CALL astm801_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body9.after_set_entry_b"

               #end add-point  
               CALL astm801_set_no_entry_b(l_cmd)
               IF NOT astm801_lock_b("stjg_t_1","'11'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astm801_bcl12 INTO g_stjf15_d[l_ac].stjgseq1_1,
                  g_stjf15_d[l_ac].stjg002_1,g_stjf15_d[l_ac].stjg003_1,g_stjf15_d[l_ac].stjg005_1,g_stjf15_d[l_ac].stjg007_1 

                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stjf15_d_mask_o[l_ac].* =  g_stjf15_d[l_ac].*
                  CALL astm801_stjg_t_mask()
                  LET g_stjf15_d_mask_n[l_ac].* =  g_stjf15_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astm801_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body9.before_row"

            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body9.after_delete_d"

               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body9.b_delete_ask"

               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身9刪除前 name="input.body9.b_delete"

               #end add-point    
 
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stje_m.stje001
               LET gs_keys[2] = g_stjf12_d[g_detail_idx].stjfseq_2
               LET gs_keys[3] = g_stjf15_d_t.stjgseq1_1
 
 
               #刪除同層單身
               IF NOT astm801_delete_b('stjg_t',gs_keys,"'11'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm801_bcl11
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身9刪除中 name="input.body9.m_delete"

               #end add-point   
               
               CALL s_transaction_end('Y','0')
               CLOSE astm801_bcl11
                  
               LET g_rec_b = g_rec_b-1
               #add-point:單身9刪除後 name="input.body9.a_delete"

               #end add-point
 
               LET l_count = g_stjf12_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body9.after_delete"

               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stjf15_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
         
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身9新增前 name="input.body9.b_a_insert"

            #end add-point
    
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stjg_t 
             WHERE stjgent = g_enterprise AND stjg001 = g_stje_m.stje001 AND stjgseq = g_stjf12_d[g_detail_idx].stjfseq_2  
                 AND stjgseq1 = g_stjf15_d[g_detail_idx2].stjgseq1_1
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身9新增前 name="input.body9.b_insert"

               #end add-point
            
               INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stje_m.stje001
               LET gs_keys[2] = g_stjf12_d[g_detail_idx].stjfseq_2
               LET gs_keys[3] = g_stjf15_d[g_detail_idx2].stjgseq1_1
               CALL astm801_insert_b('stjg_t',gs_keys,"'B'")
                           
               #add-point:單身新增後9 name="input.body9.a_insert"

               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_stjf12_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stjg_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astm801_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body9.after_insert"

               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
            #還原g_detail_idx
            LET g_detail_idx = g_detail_idx_tmp
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_stjf15_d[l_ac].* = g_stjf15_d_t.*
               CLOSE astm801_bcl12
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_stjf15_d[l_ac].* = g_stjf15_d_t.*
            ELSE
               #add-point:單身page9修改前 name="input.body9.b_update"

               #end add-point
               
               #寫入修改者/修改日期資訊(單身9)
               
               
               #將遮罩欄位還原
               #CALL astm801_stjg_t_mask_restore('restore_mask_o')
               
               UPDATE stjg_t SET (stjg001,stjgseq,stjgseq1,stjg001,stjg002,stjg003, 
                   stjg005,stjg007) = (g_stje_m.stje001,g_stjf12_d[g_detail_idx].stjfseq_2,g_stjf15_d[l_ac].stjgseq1_1,
                   g_stje_m.stje001,g_stjf15_d[l_ac].stjg002_1, 
                   g_stjf15_d[l_ac].stjg003_1,g_stjf15_d[l_ac].stjg005_1,g_stjf15_d[l_ac].stjg007_1) #自訂欄位頁簽
                WHERE stjgent = g_enterprise AND stjg001 = g_stje001_t AND stjgseq = g_stjf12_d[g_detail_idx].stjfseq_2  
                    AND stjgseq1 = g_stjf15_d_t.stjgseq1_1
                  
               #add-point:單身page9修改中 name="input.body9.m_update"

               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stjg_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_stjf15_d[l_ac].* = g_stjf15_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stjg_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_stjf15_d[l_ac].* = g_stjf15_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stje_m.stje001
               LET gs_keys_bak[1] = g_stje001_t
               LET gs_keys[2] = g_stjf12_d[g_detail_idx].stjfseq_2
               LET gs_keys_bak[2] = g_stjf12_d[g_detail_idx].stjfseq_2
               LET gs_keys[3] = g_stjf15_d[g_detail_idx2].stjgseq1_1
               LET gs_keys_bak[3] = g_stjf15_d_t.stjgseq1_1
               #CALL astm801_update_b('stjg_t',gs_keys,gs_keys_bak,"'9'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               #CALL astm801_stjg_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stje_m),util.JSON.stringify(g_stjf15_d_t)
               LET g_log2 = util.JSON.stringify(g_stje_m),util.JSON.stringify(g_stjf15_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page9修改後 name="input.body9.a_update"

               #end add-point
            END IF
        
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjgseq1_1
            #add-point:BEFORE FIELD stjgseq1 name="input.b.page9.stjgseq1"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjgseq1_1
            
            #add-point:AFTER FIELD stjgseq1 name="input.a.page9.stjgseq1"
            #應用 a05 樣板自動產生(Version:3)
            #確認資料無重複
            



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjgseq1_1
            #add-point:ON CHANGE stjgseq1 name="input.g.page9.stjgseq1"

            #END add-point 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjg002_1
            #add-point:BEFORE FIELD stjg002 name="input.b.page9.stjg002"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjg002_1
            
            #add-point:AFTER FIELD stjg002 name="input.a.page9.stjg002"
            IF NOT cl_ap_chk_range(g_stjf15_d[l_ac].stjg002_1,"0","0","","","azz-00079",1) THEN
               NEXT FIELD stjg002_1
            END IF 
            IF NOT cl_null(g_stjf15_d[l_ac].stjg002_1) THEN 
               LET l_cnt = 0 
               SELECT COUNT(*) INTO l_cnt 
                 FROM stjg_t
                WHERE stjgent = g_enterprise
                  AND stjg001 = g_stje_m.stje001
                  AND stjgseq = g_stjf12_d[g_detail_idx].stjfseq_2
                  AND ((stjg002 <= g_stjf15_d[l_ac].stjg002_1 AND stjg003 >= g_stjf15_d[l_ac].stjg002_1))
                  AND stjgseq1 <> g_stjf15_d[l_ac].stjgseq1_1
               IF l_cnt > 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "ast-00611"
                  LET g_errparam.extend = g_stjf15_d[l_ac].stjg002_1
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                   
                  LET g_stjf15_d[l_ac].stjg002_1=  g_stjf15_d_t.stjg002_1
                  NEXT FIELD CURRENT  
               END IF
            END IF    
            IF NOT cl_null(g_stjf15_d[l_ac].stjg002_1) AND NOT cl_null(g_stjf15_d[l_ac].stjg003_1) THEN
               IF g_stjf15_d[l_ac].stjg002_1 > g_stjf15_d[l_ac].stjg003_1 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "ast-00017"
                  LET g_errparam.extend = g_stjf15_d[l_ac].stjg002_1
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                   
                  LET g_stjf15_d[l_ac].stjg002_1 = g_stjf15_d_t.stjg002_1
                  NEXT FIELD CURRENT  
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjg002_1
            #add-point:ON CHANGE stjg002 name="input.g.page9.stjg002"

            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjg003_1
            #add-point:BEFORE FIELD stjg003 name="input.b.page9.stjg003"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjg003_1
            
            #add-point:AFTER FIELD stjg003 name="input.a.page9.stjg003"
            IF NOT cl_ap_chk_range(g_stjf15_d[l_ac].stjg003_1,"0","0","","","azz-00079",1) THEN
               NEXT FIELD stjg003_1
            END IF 
 
 
 
            #add-point:AFTER FIELD stjg003 name="input.a.page9.stjg003"
            IF NOT cl_null(g_stjf15_d[l_ac].stjg003_1) THEN 
               LET l_cnt = 0 
               SELECT COUNT(*) INTO l_cnt 
                 FROM stjg_t
                WHERE stjgent = g_enterprise
                  AND stjg001 = g_stje_m.stje001
                  AND stjgseq = g_stjf12_d[g_detail_idx].stjfseq_2
                  AND ((stjg002 <= g_stjf15_d[l_ac].stjg003_1 AND stjg003 >= g_stjf15_d[l_ac].stjg003_1))
                  AND stjgseq1 <> g_stjf15_d[l_ac].stjgseq1_1
               IF l_cnt > 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "ast-00611"
                  LET g_errparam.extend = g_stjf15_d[l_ac].stjg003_1
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                   
                  LET g_stjf15_d[l_ac].stjg003_1 =  g_stjf15_d_t.stjg003_1
                  NEXT FIELD CURRENT  
               END IF
            END IF 
            IF NOT cl_null(g_stjf15_d[l_ac].stjg002_1) AND NOT cl_null(g_stjf15_d[l_ac].stjg003_1) THEN
               IF g_stjf15_d[l_ac].stjg002_1 > g_stjf15_d[l_ac].stjg003_1 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "ast-00017"
                  LET g_errparam.extend = g_stjf15_d[l_ac].stjg003_1
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                   
                  LET g_stjf15_d[l_ac].stjg003_1 = g_stjf15_d_t.stjg003_1
                  NEXT FIELD CURRENT  
               END IF
            END IF            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjg003_1
            #add-point:ON CHANGE stjg003 name="input.g.page9.stjg003"

            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stjg005_1
            #add-point:BEFORE FIELD stjg004 name="input.b.page9.stjg004"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stjg005_1
            
            #add-point:AFTER FIELD stjg004 name="input.a.page9.stjg004"
            IF NOT cl_ap_chk_range(g_stjf15_d[l_ac].stjg005_1,"0","0","","","azz-00079",1) THEN
               NEXT FIELD stjg005_1
            END IF 
 
 
 
            #add-point:AFTER FIELD stjg004 name="input.a.page9.stjg004"
            IF NOT cl_null(g_stjf15_d[l_ac].stjg005_1) THEN 
               LET g_stjf15_d[l_ac].stjg007_1 = g_stjf15_d[l_ac].stjg005_1
            END IF
            #END add-point
            
         AFTER FIELD stjg007_1
            
            #add-point:AFTER FIELD stjg004 name="input.a.page9.stjg004"
            IF NOT cl_ap_chk_range(g_stjf15_d[l_ac].stjg007_1,"0","0","","","azz-00079",1) THEN
               NEXT FIELD stjg007_1
            END IF 
 
 
 
            #add-point:AFTER FIELD stjg004 name="input.a.page9.stjg004"
            
            #END add-point
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stjg005_1
            #add-point:ON CHANGE stjg004 name="input.g.page9.stjg004"

            #END add-point 
  
 
         AFTER ROW
            #add-point:單身page9_after_row name="input.body9.after_row"

            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_stjf15_d[l_ac].* = g_stjf15_d_t.*
               END IF
               CLOSE astm801_bcl12
               CLOSE astm801_bcl11
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astm801_unlock_b("stjg_t","'11'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page9_after_row2 name="input.body9.after_row2"

            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body9.after_input"

            #end add-point  
 
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_stjf15_d[li_reproduce_target].* = g_stjf15_d[li_reproduce].*
 
               LET g_stjf15_d[li_reproduce_target].stjgseq1_1 = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_stjf15_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_stjf15_d.getLength()+1
            END IF
        
      END INPUT
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         CALL DIALOG.setCurrentRow("s_detail8",g_idx_group.getValue("'10',"))
         CALL DIALOG.setCurrentRow("s_detail10",g_idx_group.getValue("'11',"))
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1',"))      
         CALL DIALOG.setCurrentRow("s_detail11",g_idx_group.getValue("'2',"))
         CALL DIALOG.setCurrentRow("s_detail13",g_idx_group.getValue("'3',"))
         CALL DIALOG.setCurrentRow("s_detail2",g_idx_group.getValue("'4',"))
         CALL DIALOG.setCurrentRow("s_detail3",g_idx_group.getValue("'5',"))
         CALL DIALOG.setCurrentRow("s_detail4",g_idx_group.getValue("'6',"))
         CALL DIALOG.setCurrentRow("s_detail5",g_idx_group.getValue("'7',"))
         CALL DIALOG.setCurrentRow("s_detail6",g_idx_group.getValue("'8',"))
         CALL DIALOG.setCurrentRow("s_detail7",g_idx_group.getValue("'9',"))
         CALL DIALOG.setCurrentRow("s_detail9",g_idx_group.getValue("'10',"))
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            
            #end add-point  
            NEXT FIELD stje001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD stjfseq
               WHEN "s_detail11"
                  NEXT FIELD stjnsite
               WHEN "s_detail13"
                  NEXT FIELD stjosite
               WHEN "s_detail2"
                  NEXT FIELD stjhseq
               WHEN "s_detail3"
                  NEXT FIELD stjiseq
               WHEN "s_detail4"
                  NEXT FIELD stjlseq
               WHEN "s_detail5"
                  NEXT FIELD stjjacti
               WHEN "s_detail6"
                  NEXT FIELD stjkacti
               WHEN "s_detail7"
                  NEXT FIELD stjmseq
               WHEN "s_detail9"
                  NEXT FIELD stjgsite
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
         LET g_detail_idx_list[4] = 1
         LET g_detail_idx_list[5] = 1
         LET g_detail_idx_list[6] = 1
         LET g_detail_idx_list[7] = 1
         LET g_detail_idx_list[8] = 1
         LET g_detail_idx_list[9] = 1
         LET g_detail_idx_list[10] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail11",1)
         CALL g_curr_diag.setCurrentRow("s_detail13",1)
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
         CALL g_curr_diag.setCurrentRow("s_detail4",1)
         CALL g_curr_diag.setCurrentRow("s_detail5",1)
         CALL g_curr_diag.setCurrentRow("s_detail6",1)
         CALL g_curr_diag.setCurrentRow("s_detail7",1)
         CALL g_curr_diag.setCurrentRow("s_detail9",1)
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
         LET g_detail_idx_list[4] = 1
         LET g_detail_idx_list[5] = 1
         LET g_detail_idx_list[6] = 1
         LET g_detail_idx_list[7] = 1
         LET g_detail_idx_list[8] = 1
         LET g_detail_idx_list[9] = 1
         LET g_detail_idx_list[10] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail11",1)
         CALL g_curr_diag.setCurrentRow("s_detail13",1)
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
         CALL g_curr_diag.setCurrentRow("s_detail4",1)
         CALL g_curr_diag.setCurrentRow("s_detail5",1)
         CALL g_curr_diag.setCurrentRow("s_detail6",1)
         CALL g_curr_diag.setCurrentRow("s_detail7",1)
         CALL g_curr_diag.setCurrentRow("s_detail9",1)
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   
   #end add-point    
 
END FUNCTION
 
{</section>}
 
{<section id="astm801.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION astm801_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL astm801_b_fill() #單身填充
      CALL astm801_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL astm801_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
   
   #end add-point
   
   #遮罩相關處理
   LET g_stje_m_mask_o.* =  g_stje_m.*
   CALL astm801_stje_t_mask()
   LET g_stje_m_mask_n.* =  g_stje_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_stje_m.stjesite,g_stje_m.stjesite_desc,g_stje_m.stje004,g_stje_m.stje001,g_stje_m.stje002, 
       g_stje_m.stje003,g_stje_m.stje003_desc,g_stje_m.stje005,g_stje_m.stje006,g_stje_m.stjestus,g_stje_m.stje007, 
       g_stje_m.stje007_desc,g_stje_m.stje008,g_stje_m.stje008_desc,g_stje_m.stje010,g_stje_m.stje009, 
       g_stje_m.stje011,g_stje_m.stje012,g_stje_m.stje013,g_stje_m.stje014,g_stje_m.stje015,g_stje_m.stje016, 
       g_stje_m.stje017,g_stje_m.stje017_desc,g_stje_m.stje018,g_stje_m.stje018_desc,g_stje_m.stje049, 
       g_stje_m.stje019,g_stje_m.stje019_desc,g_stje_m.stje020,g_stje_m.stje020_desc,g_stje_m.stje021, 
       g_stje_m.stje021_desc,g_stje_m.stje022,g_stje_m.stje022_desc,g_stje_m.stje027,g_stje_m.stje027_desc, 
       g_stje_m.stje028,g_stje_m.stje028_desc,g_stje_m.stje029,g_stje_m.stje029_desc,g_stje_m.stje026, 
       g_stje_m.stje023,g_stje_m.stje024,g_stje_m.stje025,g_stje_m.stje030,g_stje_m.stje030_desc,g_stje_m.stje031, 
       g_stje_m.stje031_desc,g_stje_m.stje032,g_stje_m.stje032_desc,g_stje_m.stje033,g_stje_m.stje034, 
       g_stje_m.stje034_desc,g_stje_m.stje035,g_stje_m.stje035_desc,g_stje_m.stje036,g_stje_m.stje036_desc, 
       g_stje_m.stje037,g_stje_m.stje038,g_stje_m.stje038_desc,g_stje_m.stje039,g_stje_m.stje039_desc, 
       g_stje_m.stje040,g_stje_m.stje041,g_stje_m.stje042,g_stje_m.stje043,g_stje_m.stje044,g_stje_m.stje045, 
       g_stje_m.stje046,g_stje_m.stje047,g_stje_m.stje048,g_stje_m.stje050,g_stje_m.stje051,g_stje_m.stje051_desc, 
       g_stje_m.stje052,g_stje_m.stje053,g_stje_m.stje053_desc,g_stje_m.stjeownid,g_stje_m.stjeownid_desc, 
       g_stje_m.stjeowndp,g_stje_m.stjeowndp_desc,g_stje_m.stjecrtid,g_stje_m.stjecrtid_desc,g_stje_m.stjecrtdp, 
       g_stje_m.stjecrtdp_desc,g_stje_m.stjecrtdt,g_stje_m.stjemodid,g_stje_m.stjemodid_desc,g_stje_m.stjemoddt, 
       g_stje_m.stjecnfid,g_stje_m.stjecnfid_desc,g_stje_m.stjecnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_stje_m.stjestus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_stjf_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
      
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_stjf11_d.getLength()
      #add-point:show段單身reference name="show.body11.reference"
      
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_stjf13_d.getLength()
      #add-point:show段單身reference name="show.body13.reference"
      
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_stjf2_d.getLength()
      #add-point:show段單身reference name="show.body2.reference"
      
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_stjf3_d.getLength()
      #add-point:show段單身reference name="show.body3.reference"
      
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_stjf4_d.getLength()
      #add-point:show段單身reference name="show.body4.reference"
      
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_stjf5_d.getLength()
      #add-point:show段單身reference name="show.body5.reference"
      
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_stjf6_d.getLength()
      #add-point:show段單身reference name="show.body6.reference"
      
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_stjf7_d.getLength()
      #add-point:show段單身reference name="show.body7.reference"
      
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_stjf9_d.getLength()
      #add-point:show段單身reference name="show.body9.reference"
      
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other name="show.other"
   
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL astm801_detail_show()
 
   #add-point:show段之後 name="show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="astm801.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION astm801_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="astm801.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION astm801_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   
   #end add-point   
   DEFINE l_newno     LIKE stje_t.stje001 
   DEFINE l_oldno     LIKE stje_t.stje001 
 
   DEFINE l_master    RECORD LIKE stje_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE stjf_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE stjn_t.* #此變數樣板目前無使用
 
   DEFINE l_detail3    RECORD LIKE stjo_t.* #此變數樣板目前無使用
 
   DEFINE l_detail4    RECORD LIKE stjh_t.* #此變數樣板目前無使用
 
   DEFINE l_detail5    RECORD LIKE stji_t.* #此變數樣板目前無使用
 
   DEFINE l_detail6    RECORD LIKE stjl_t.* #此變數樣板目前無使用
 
   DEFINE l_detail7    RECORD LIKE stjj_t.* #此變數樣板目前無使用
 
   DEFINE l_detail8    RECORD LIKE stjk_t.* #此變數樣板目前無使用
 
   DEFINE l_detail9    RECORD LIKE stjm_t.* #此變數樣板目前無使用
 
 
   DEFINE l_detail10    RECORD LIKE stjg_t.* #此變數樣板目前無使用
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_stje_m.stje001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_stje001_t = g_stje_m.stje001
 
    
   LET g_stje_m.stje001 = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_stje_m.stjeownid = g_user
      LET g_stje_m.stjeowndp = g_dept
      LET g_stje_m.stjecrtid = g_user
      LET g_stje_m.stjecrtdp = g_dept 
      LET g_stje_m.stjecrtdt = cl_get_current()
      LET g_stje_m.stjemodid = g_user
      LET g_stje_m.stjemoddt = cl_get_current()
      LET g_stje_m.stjestus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_stje_m.stjestus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
   
   
   CALL astm801_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_stje_m.* TO NULL
      INITIALIZE g_stjf_d TO NULL
      INITIALIZE g_stjf11_d TO NULL
      INITIALIZE g_stjf13_d TO NULL
      INITIALIZE g_stjf2_d TO NULL
      INITIALIZE g_stjf3_d TO NULL
      INITIALIZE g_stjf4_d TO NULL
      INITIALIZE g_stjf5_d TO NULL
      INITIALIZE g_stjf6_d TO NULL
      INITIALIZE g_stjf7_d TO NULL
      INITIALIZE g_stjf9_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      
      #end add-point
      CALL astm801_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code = 9001 
      LET g_errparam.popup = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL astm801_set_act_visible()   
   CALL astm801_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_stje001_t = g_stje_m.stje001
 
   
   #組合新增資料的條件
   LET g_add_browse = " stjeent = " ||g_enterprise|| " AND",
                      " stje001 = '", g_stje_m.stje001, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL astm801_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   CALL astm801_idx_chk()
   
   LET g_data_owner = g_stje_m.stjeownid      
   LET g_data_dept  = g_stje_m.stjeowndp
   
   #功能已完成,通報訊息中心
   CALL astm801_msgcentre_notify('reproduce')
 
END FUNCTION
 
{</section>}
 
{<section id="astm801.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION astm801_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE stjf_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE stjn_t.* #此變數樣板目前無使用
 
   DEFINE l_detail3    RECORD LIKE stjo_t.* #此變數樣板目前無使用
 
   DEFINE l_detail4    RECORD LIKE stjh_t.* #此變數樣板目前無使用
 
   DEFINE l_detail5    RECORD LIKE stji_t.* #此變數樣板目前無使用
 
   DEFINE l_detail6    RECORD LIKE stjl_t.* #此變數樣板目前無使用
 
   DEFINE l_detail7    RECORD LIKE stjj_t.* #此變數樣板目前無使用
 
   DEFINE l_detail8    RECORD LIKE stjk_t.* #此變數樣板目前無使用
 
   DEFINE l_detail9    RECORD LIKE stjm_t.* #此變數樣板目前無使用
 
 
   DEFINE l_detail10    RECORD LIKE stjg_t.* #此變數樣板目前無使用
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE astm801_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stjf_t
    WHERE stjfent = g_enterprise AND stjf001 = g_stje001_t
 
    INTO TEMP astm801_detail
 
   #將key修正為調整後   
   UPDATE astm801_detail 
      #更新key欄位
      SET stjf001 = g_stje_m.stje001
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO stjf_t SELECT * FROM astm801_detail
   
   IF SQLCA.SQLCODE THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astm801_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table2.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stjn_t 
    WHERE stjnent = g_enterprise AND stjn001 = g_stje001_t
 
    INTO TEMP astm801_detail
 
   #將key修正為調整後   
   UPDATE astm801_detail SET stjn001 = g_stje_m.stje001
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table2.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO stjn_t SELECT * FROM astm801_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table2.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astm801_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table2.a_insert"
   
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table3.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stjo_t 
    WHERE stjoent = g_enterprise AND stjo001 = g_stje001_t
 
    INTO TEMP astm801_detail
 
   #將key修正為調整後   
   UPDATE astm801_detail SET stjo001 = g_stje_m.stje001
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table3.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO stjo_t SELECT * FROM astm801_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table3.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astm801_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table3.a_insert"
   
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table4.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stjh_t 
    WHERE stjhent = g_enterprise AND stjh001 = g_stje001_t
 
    INTO TEMP astm801_detail
 
   #將key修正為調整後   
   UPDATE astm801_detail SET stjh001 = g_stje_m.stje001
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table4.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO stjh_t SELECT * FROM astm801_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table4.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astm801_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table4.a_insert"
   
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table5.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stji_t 
    WHERE stjient = g_enterprise AND stji001 = g_stje001_t
 
    INTO TEMP astm801_detail
 
   #將key修正為調整後   
   UPDATE astm801_detail SET stji001 = g_stje_m.stje001
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table5.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO stji_t SELECT * FROM astm801_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table5.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astm801_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table5.a_insert"
   
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table6.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stjl_t 
    WHERE stjlent = g_enterprise AND stjl001 = g_stje001_t
 
    INTO TEMP astm801_detail
 
   #將key修正為調整後   
   UPDATE astm801_detail SET stjl001 = g_stje_m.stje001
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table6.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO stjl_t SELECT * FROM astm801_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table6.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astm801_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table6.a_insert"
   
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table7.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stjj_t 
    WHERE stjjent = g_enterprise AND stjj001 = g_stje001_t
 
    INTO TEMP astm801_detail
 
   #將key修正為調整後   
   UPDATE astm801_detail SET stjj001 = g_stje_m.stje001
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table7.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO stjj_t SELECT * FROM astm801_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table7.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astm801_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table7.a_insert"
   
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table8.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stjk_t 
    WHERE stjkent = g_enterprise AND stjk001 = g_stje001_t
 
    INTO TEMP astm801_detail
 
   #將key修正為調整後   
   UPDATE astm801_detail SET stjk001 = g_stje_m.stje001
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table8.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO stjk_t SELECT * FROM astm801_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table8.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astm801_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table8.a_insert"
   
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table9.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stjm_t 
    WHERE stjment = g_enterprise AND stjm001 = g_stje001_t
 
    INTO TEMP astm801_detail
 
   #將key修正為調整後   
   UPDATE astm801_detail SET stjm001 = g_stje_m.stje001
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table9.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO stjm_t SELECT * FROM astm801_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table9.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astm801_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table9.a_insert"
   
   #end add-point
 
 
   
   #add-point:單身複製前 name="detail_reproduce.body.table10.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stjg_t 
    WHERE stjgent = g_enterprise AND stjg001 = g_stje001_t
 
    INTO TEMP astm801_detail
 
   #將key修正為調整後   
   UPDATE astm801_detail SET stjg001 = g_stje_m.stje001
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table10.b_update"
   
   #end add-point    
  
   #將資料塞回原table   
   INSERT INTO stjg_t SELECT * FROM astm801_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table10.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astm801_detail
   
   LET g_data_owner = g_stje_m.stjeownid      
   LET g_data_dept  = g_stje_m.stjeowndp
   
   #add-point:單身複製後 name="detail_reproduce.body.table10.a_insert"
   
   #end add-point
 
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_stje001_t = g_stje_m.stje001
 
   
END FUNCTION
 
{</section>}
 
{<section id="astm801.delete" >}
#+ 資料刪除
PRIVATE FUNCTION astm801_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_stje_m.stje001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN astm801_cl USING g_enterprise,g_stje_m.stje001
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN astm801_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE astm801_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE astm801_master_referesh USING g_stje_m.stje001 INTO g_stje_m.stjesite,g_stje_m.stje004,g_stje_m.stje001, 
       g_stje_m.stje002,g_stje_m.stje003,g_stje_m.stje005,g_stje_m.stje006,g_stje_m.stjestus,g_stje_m.stje007, 
       g_stje_m.stje008,g_stje_m.stje010,g_stje_m.stje009,g_stje_m.stje011,g_stje_m.stje012,g_stje_m.stje013, 
       g_stje_m.stje014,g_stje_m.stje015,g_stje_m.stje016,g_stje_m.stje017,g_stje_m.stje018,g_stje_m.stje049, 
       g_stje_m.stje019,g_stje_m.stje020,g_stje_m.stje021,g_stje_m.stje022,g_stje_m.stje027,g_stje_m.stje028, 
       g_stje_m.stje029,g_stje_m.stje026,g_stje_m.stje023,g_stje_m.stje024,g_stje_m.stje025,g_stje_m.stje030, 
       g_stje_m.stje031,g_stje_m.stje032,g_stje_m.stje033,g_stje_m.stje034,g_stje_m.stje035,g_stje_m.stje036, 
       g_stje_m.stje037,g_stje_m.stje038,g_stje_m.stje039,g_stje_m.stje040,g_stje_m.stje041,g_stje_m.stje042, 
       g_stje_m.stje043,g_stje_m.stje044,g_stje_m.stje045,g_stje_m.stje046,g_stje_m.stje047,g_stje_m.stje048, 
       g_stje_m.stje050,g_stje_m.stje051,g_stje_m.stje052,g_stje_m.stje053,g_stje_m.stjeownid,g_stje_m.stjeowndp, 
       g_stje_m.stjecrtid,g_stje_m.stjecrtdp,g_stje_m.stjecrtdt,g_stje_m.stjemodid,g_stje_m.stjemoddt, 
       g_stje_m.stjecnfid,g_stje_m.stjecnfdt,g_stje_m.stjesite_desc,g_stje_m.stje003_desc,g_stje_m.stje007_desc, 
       g_stje_m.stje008_desc,g_stje_m.stje017_desc,g_stje_m.stje018_desc,g_stje_m.stje019_desc,g_stje_m.stje020_desc, 
       g_stje_m.stje021_desc,g_stje_m.stje022_desc,g_stje_m.stje027_desc,g_stje_m.stje028_desc,g_stje_m.stje029_desc, 
       g_stje_m.stje030_desc,g_stje_m.stje031_desc,g_stje_m.stje032_desc,g_stje_m.stje034_desc,g_stje_m.stje035_desc, 
       g_stje_m.stje036_desc,g_stje_m.stje038_desc,g_stje_m.stje039_desc,g_stje_m.stje051_desc,g_stje_m.stje053_desc, 
       g_stje_m.stjeownid_desc,g_stje_m.stjeowndp_desc,g_stje_m.stjemodid_desc
   
   
   #檢查是否允許此動作
   IF NOT astm801_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_stje_m_mask_o.* =  g_stje_m.*
   CALL astm801_stje_t_mask()
   LET g_stje_m_mask_n.* =  g_stje_m.*
   
   CALL astm801_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL astm801_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_stje001_t = g_stje_m.stje001
 
 
      DELETE FROM stje_t
       WHERE stjeent = g_enterprise AND stje001 = g_stje_m.stje001
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      
      #end add-point
       
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_stje_m.stje001,":",SQLERRMESSAGE  
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      #end add-point
      
      DELETE FROM stjf_t
       WHERE stjfent = g_enterprise AND stjf001 = g_stje_m.stje001
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
      
      #end add-point
         
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stjf_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      
      #end add-point
      
            
                                                               
      #add-point:單身刪除前 name="delete.body.b_delete2"
      
      #end add-point
      DELETE FROM stjn_t
       WHERE stjnent = g_enterprise AND
             stjn001 = g_stje_m.stje001
      #add-point:單身刪除中 name="delete.body.m_delete2"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stjn_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete2"
      
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete3"
      
      #end add-point
      DELETE FROM stjo_t
       WHERE stjoent = g_enterprise AND
             stjo001 = g_stje_m.stje001
      #add-point:單身刪除中 name="delete.body.m_delete3"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stjo_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete3"
      
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete4"
      
      #end add-point
      DELETE FROM stjh_t
       WHERE stjhent = g_enterprise AND
             stjh001 = g_stje_m.stje001
      #add-point:單身刪除中 name="delete.body.m_delete4"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stjh_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete4"
      
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete5"
      
      #end add-point
      DELETE FROM stji_t
       WHERE stjient = g_enterprise AND
             stji001 = g_stje_m.stje001
      #add-point:單身刪除中 name="delete.body.m_delete5"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stji_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete5"
      
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete6"
      
      #end add-point
      DELETE FROM stjl_t
       WHERE stjlent = g_enterprise AND
             stjl001 = g_stje_m.stje001
      #add-point:單身刪除中 name="delete.body.m_delete6"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stjl_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete6"
      
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete7"
      
      #end add-point
      DELETE FROM stjj_t
       WHERE stjjent = g_enterprise AND
             stjj001 = g_stje_m.stje001
      #add-point:單身刪除中 name="delete.body.m_delete7"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stjj_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete7"
      
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete8"
      
      #end add-point
      DELETE FROM stjk_t
       WHERE stjkent = g_enterprise AND
             stjk001 = g_stje_m.stje001
      #add-point:單身刪除中 name="delete.body.m_delete8"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stjk_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete8"
      
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete9"
      
      #end add-point
      DELETE FROM stjm_t
       WHERE stjment = g_enterprise AND
             stjm001 = g_stje_m.stje001
      #add-point:單身刪除中 name="delete.body.m_delete9"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stjm_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete9"
      
      #end add-point
 
 
 
      #add-point:單身刪除前 name="delete.body.b_delete10"
      
      #end add-point
      DELETE FROM stjg_t
       WHERE stjgent = g_enterprise AND
             stjg001 = g_stje_m.stje001
      #add-point:單身刪除中 name="delete.body.m_delete10"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stjg_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete10"
      
      #end add-point
 
 
      
      #修改歷程記錄(刪除)
      LET g_log1 = util.JSON.stringify(g_stje_m)   #(ver:78)
      IF NOT cl_log_modified_record(g_log1,'') THEN    #(ver:78)
         CLOSE astm801_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_stjf_d.clear() 
      CALL g_stjf11_d.clear()       
      CALL g_stjf13_d.clear()       
      CALL g_stjf2_d.clear()       
      CALL g_stjf3_d.clear()       
      CALL g_stjf4_d.clear()       
      CALL g_stjf5_d.clear()       
      CALL g_stjf6_d.clear()       
      CALL g_stjf7_d.clear()       
      CALL g_stjf9_d.clear()       
 
     
      CALL astm801_ui_browser_refresh()  
      #CALL astm801_ui_headershow()  
      #CALL astm801_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
      
      
      
      
      
      
      
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL astm801_browser_fill("")
         CALL astm801_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE astm801_cl
 
   #功能已完成,通報訊息中心
   CALL astm801_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="astm801.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION astm801_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #清空第一階單身
   CALL g_stjf_d.clear()
   CALL g_stjf11_d.clear()
   CALL g_stjf13_d.clear()
   CALL g_stjf2_d.clear()
   CALL g_stjf3_d.clear()
   CALL g_stjf4_d.clear()
   CALL g_stjf5_d.clear()
   CALL g_stjf6_d.clear()
   CALL g_stjf7_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   CALL g_stjf12_d.clear()
   CALL g_stjf15_d.clear()
   CALL g_stjf14_d.clear()
   #end add-point
   
   #判斷是否填充
   IF astm801_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stjfseq,stjf002,stjf003,stjf021,stjf004,stjf022,stjf005,stjf006, 
             stjf007,stjf008,stjf009,stjf010,stjf011,stjf018,stjf016,stjf017,stjf020,stjf023,stjf024, 
             stjf025,stjfsite,stjfunit ,t1.stael003 ,t2.mhadl006 ,t3.ooefl003 FROM stjf_t",   
                     " INNER JOIN stje_t ON stjeent = " ||g_enterprise|| " AND stje001 = stjf001 ",
 
                     #"",
                     " LEFT JOIN stjg_t ON stjfent = stjgent AND stjf001 = stjg001 AND stjfseq = stjgseq ",
                     "",
                     #下層單身所需的join條件
                     " ",
 
 
                                    " LEFT JOIN stael_t t1 ON t1.staelent="||g_enterprise||" AND t1.stael001=stjf004 AND t1.stael002='"||g_dlang||"' ",
               " LEFT JOIN mhadl_t t2 ON t2.mhadlent="||g_enterprise||" AND t2.mhadl004=stjf022 AND t2.mhadl005='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent="||g_enterprise||" AND t3.ooefl001=stjf024 AND t3.ooefl002='"||g_dlang||"' ",
 
                     " WHERE stjfent=? AND stjf001=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         LET g_sql = g_sql," AND stjf009 IN ('1','3') "  
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
            IF NOT cl_null(g_wc2_table10) THEN 
      LET g_sql = g_sql CLIPPED," AND ", g_wc2_table10 CLIPPED
   END IF 
 
         
         LET g_sql = g_sql, " ORDER BY stjf_t.stjfseq"
         
         #add-point:單身填充控制 name="b_fill.sql"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astm801_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR astm801_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
   #  OPEN b_fill_cs USING g_enterprise,g_stje_m.stje001   #(ver:78)
                                               
      FOREACH b_fill_cs USING g_enterprise,g_stje_m.stje001 INTO g_stjf_d[l_ac].stjfseq,g_stjf_d[l_ac].stjf002, 
          g_stjf_d[l_ac].stjf003,g_stjf_d[l_ac].stjf021,g_stjf_d[l_ac].stjf004,g_stjf_d[l_ac].stjf022, 
          g_stjf_d[l_ac].stjf005,g_stjf_d[l_ac].stjf006,g_stjf_d[l_ac].stjf007,g_stjf_d[l_ac].stjf008, 
          g_stjf_d[l_ac].stjf009,g_stjf_d[l_ac].stjf010,g_stjf_d[l_ac].stjf011,g_stjf_d[l_ac].stjf018, 
          g_stjf_d[l_ac].stjf016,g_stjf_d[l_ac].stjf017,g_stjf_d[l_ac].stjf020,g_stjf_d[l_ac].stjf023, 
          g_stjf_d[l_ac].stjf024,g_stjf_d[l_ac].stjf025,g_stjf_d[l_ac].stjfsite,g_stjf_d[l_ac].stjfunit, 
          g_stjf_d[l_ac].stjf004_desc,g_stjf_d[l_ac].stjf022_desc,g_stjf_d[l_ac].stjf024_desc   #(ver:78) 
 
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         #带出费用性质
         SELECT stae004 INTO g_stjf_d[l_ac].stae004
           FROM stae_t
          WHERE staeent = g_enterprise
            AND stae001 = g_stjf_d[l_ac].stjf004 
         IF g_stjf_d[l_ac].stjf023 = '3' THEN
            CALL s_desc_get_trading_partner_full_desc(g_stjf_d[l_ac].stjf024) RETURNING g_stjf_d[l_ac].stjf024_desc
         END IF            
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code = 9035 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
   #判斷是否填充
   IF astm801_fill_chk(2) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body2.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stjnsite,stjnunit,stjnseq,stjn002,stjn004,stjn003,stjn005,stjn006, 
             stjn007,stjn008,stjn009,stjn010 ,t4.stael003 FROM stjn_t",   
                     " INNER JOIN  stje_t ON stjeent = " ||g_enterprise|| " AND stje001 = stjn001 ",
 
                     "",
                     
                                    " LEFT JOIN stael_t t4 ON t4.staelent="||g_enterprise||" AND t4.stael001=stjn005 AND t4.stael002='"||g_dlang||"' ",
 
                     " WHERE stjnent=? AND stjn001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body2.fill_sql"
         LET g_sql = g_sql CLIPPED," AND 1=2 " 
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stjn_t.stjnseq"
         
         #add-point:單身填充控制 name="b_fill.sql2"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astm801_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR astm801_pb2
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs2 USING g_enterprise,g_stje_m.stje001   #(ver:78)
                                               
      FOREACH b_fill_cs2 USING g_enterprise,g_stje_m.stje001 INTO g_stjf11_d[l_ac].stjnsite,g_stjf11_d[l_ac].stjnunit, 
          g_stjf11_d[l_ac].stjnseq,g_stjf11_d[l_ac].stjn002,g_stjf11_d[l_ac].stjn004,g_stjf11_d[l_ac].stjn003, 
          g_stjf11_d[l_ac].stjn005,g_stjf11_d[l_ac].stjn006,g_stjf11_d[l_ac].stjn007,g_stjf11_d[l_ac].stjn008, 
          g_stjf11_d[l_ac].stjn009,g_stjf11_d[l_ac].stjn010,g_stjf11_d[l_ac].stjn005_desc   #(ver:78) 
 
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill2.fill"
         
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF astm801_fill_chk(3) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body3.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stjosite,stjounit,stjoseq,stjo002,stjo003,stjo004,stjo005,stjo006, 
             stjo007  FROM stjo_t",   
                     " INNER JOIN  stje_t ON stjeent = " ||g_enterprise|| " AND stje001 = stjo001 ",
 
                     "",
                     
                     
                     " WHERE stjoent=? AND stjo001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body3.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table3) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stjo_t.stjoseq"
         
         #add-point:單身填充控制 name="b_fill.sql3"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astm801_pb3 FROM g_sql
         DECLARE b_fill_cs3 CURSOR FOR astm801_pb3
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs3 USING g_enterprise,g_stje_m.stje001   #(ver:78)
                                               
      FOREACH b_fill_cs3 USING g_enterprise,g_stje_m.stje001 INTO g_stjf13_d[l_ac].stjosite,g_stjf13_d[l_ac].stjounit, 
          g_stjf13_d[l_ac].stjoseq,g_stjf13_d[l_ac].stjo002,g_stjf13_d[l_ac].stjo003,g_stjf13_d[l_ac].stjo004, 
          g_stjf13_d[l_ac].stjo005,g_stjf13_d[l_ac].stjo006,g_stjf13_d[l_ac].stjo007   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill3.fill"
      
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF astm801_fill_chk(4) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body4.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stjhseq,stjh002,stjh003,stjh008,stjh004,stjh005,stjh006,stjh007, 
             stjhsite,stjhunit ,t5.stael003 FROM stjh_t",   
                     " INNER JOIN  stje_t ON stjeent = " ||g_enterprise|| " AND stje001 = stjh001 ",
 
                     "",
                     
                                    " LEFT JOIN stael_t t5 ON t5.staelent="||g_enterprise||" AND t5.stael001=stjh002 AND t5.stael002='"||g_dlang||"' ",
 
                     " WHERE stjhent=? AND stjh001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body4.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table4) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table4 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stjh_t.stjhseq"
         
         #add-point:單身填充控制 name="b_fill.sql4"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astm801_pb4 FROM g_sql
         DECLARE b_fill_cs4 CURSOR FOR astm801_pb4
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs4 USING g_enterprise,g_stje_m.stje001   #(ver:78)
                                               
      FOREACH b_fill_cs4 USING g_enterprise,g_stje_m.stje001 INTO g_stjf2_d[l_ac].stjhseq,g_stjf2_d[l_ac].stjh002, 
          g_stjf2_d[l_ac].stjh003,g_stjf2_d[l_ac].stjh008,g_stjf2_d[l_ac].stjh004,g_stjf2_d[l_ac].stjh005, 
          g_stjf2_d[l_ac].stjh006,g_stjf2_d[l_ac].stjh007,g_stjf2_d[l_ac].stjhsite,g_stjf2_d[l_ac].stjhunit, 
          g_stjf2_d[l_ac].stjh002_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill4.fill"
         #带出费用性质
         SELECT stae004 INTO g_stjf2_d[l_ac].stae004
           FROM stae_t
          WHERE staeent = g_enterprise
            AND stae001 = g_stjf2_d[l_ac].stjh002
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF astm801_fill_chk(5) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body5.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stjiseq,stji002,stji003,stji010,stji004,stji005,stji006,stji007, 
             stji008,stji009,stjisite,stjiunit ,t6.stael003 ,t7.staal003 ,t8.oodbl004 FROM stji_t",  
               
                     " INNER JOIN  stje_t ON stjeent = " ||g_enterprise|| " AND stje001 = stji001 ",
 
                     "",
                     
                                    " LEFT JOIN stael_t t6 ON t6.staelent="||g_enterprise||" AND t6.stael001=stji002 AND t6.stael002='"||g_dlang||"' ",
               " LEFT JOIN staal_t t7 ON t7.staalent="||g_enterprise||" AND t7.staal001=stji003 AND t7.staal002='"||g_dlang||"' ",
               " LEFT JOIN oodbl_t t8 ON t8.oodblent="||g_enterprise||" AND t8.oodbl002=stji010 AND oodb003='"||g_dlang||"' ",
 
                     " WHERE stjient=? AND stji001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body5.fill_sql"
         LET g_sql = "SELECT  DISTINCT stjiseq,stji002,stji003,stji010,stji004,stji005,stji006,stji007, 
             stji008,stji009,stjisite,stjiunit ,t6.stael003 ,t7.staal003 ,'' FROM stji_t",  
               
                     " INNER JOIN  stje_t ON stjeent = '" ||g_enterprise|| "' AND stje001 = stji001 ",
 
                     "",
                     
                                    " LEFT JOIN stael_t t6 ON t6.staelent='"||g_enterprise||"' AND t6.stael001=stji002 AND t6.stael002='"||g_dlang||"' ",
               " LEFT JOIN staal_t t7 ON t7.staalent='"||g_enterprise||"' AND t7.staal001=stji003 AND t7.staal002='"||g_dlang||"' ",
 
                     " WHERE stjient=? AND stji001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #end add-point
         IF NOT cl_null(g_wc2_table5) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table5 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stji_t.stjiseq"
         
         #add-point:單身填充控制 name="b_fill.sql5"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astm801_pb5 FROM g_sql
         DECLARE b_fill_cs5 CURSOR FOR astm801_pb5
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs5 USING g_enterprise,g_stje_m.stje001   #(ver:78)
                                               
      FOREACH b_fill_cs5 USING g_enterprise,g_stje_m.stje001 INTO g_stjf3_d[l_ac].stjiseq,g_stjf3_d[l_ac].stji002, 
          g_stjf3_d[l_ac].stji003,g_stjf3_d[l_ac].stji010,g_stjf3_d[l_ac].stji004,g_stjf3_d[l_ac].stji005, 
          g_stjf3_d[l_ac].stji006,g_stjf3_d[l_ac].stji007,g_stjf3_d[l_ac].stji008,g_stjf3_d[l_ac].stji009, 
          g_stjf3_d[l_ac].stjisite,g_stjf3_d[l_ac].stjiunit,g_stjf3_d[l_ac].stji002_desc,g_stjf3_d[l_ac].stji003_desc, 
          g_stjf3_d[l_ac].stji010_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill5.fill"
         #带出费用性质
         SELECT stae004 INTO g_stjf3_d[l_ac].stae004
           FROM stae_t
          WHERE staeent = g_enterprise
            AND stae001 = g_stjf3_d[l_ac].stji002
         CALL s_desc_get_tax_desc1(g_stje_m.stjesite,g_stjf3_d[l_ac].stji010)  RETURNING g_stjf3_d[l_ac].stji010_desc #add by geza 20160615      
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF astm801_fill_chk(6) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body6.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stjlseq,stjl002,stjl003,stjl004,stjl005,stjl006,stjl007,stjl008, 
             stjlsite,stjlunit ,t9.stael003 FROM stjl_t",   
                     " INNER JOIN  stje_t ON stjeent = " ||g_enterprise|| " AND stje001 = stjl001 ",
 
                     "",
                     
                                    " LEFT JOIN stael_t t9 ON t9.staelent="||g_enterprise||" AND t9.stael001=stjl003 AND t9.stael002='"||g_dlang||"' ",
 
                     " WHERE stjlent=? AND stjl001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body6.fill_sql"
 
         #end add-point
         IF NOT cl_null(g_wc2_table6) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table6 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stjl_t.stjlseq"
         
         #add-point:單身填充控制 name="b_fill.sql6"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astm801_pb6 FROM g_sql
         DECLARE b_fill_cs6 CURSOR FOR astm801_pb6
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs6 USING g_enterprise,g_stje_m.stje001   #(ver:78)
                                               
      FOREACH b_fill_cs6 USING g_enterprise,g_stje_m.stje001 INTO g_stjf4_d[l_ac].stjlseq,g_stjf4_d[l_ac].stjl002, 
          g_stjf4_d[l_ac].stjl003,g_stjf4_d[l_ac].stjl004,g_stjf4_d[l_ac].stjl005,g_stjf4_d[l_ac].stjl006, 
          g_stjf4_d[l_ac].stjl007,g_stjf4_d[l_ac].stjl008,g_stjf4_d[l_ac].stjlsite,g_stjf4_d[l_ac].stjlunit, 
          g_stjf4_d[l_ac].stjl003_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill6.fill"
         
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF astm801_fill_chk(7) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body7.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stjjacti,stjjseq,stjj002,stjj003,stjj004,stjj005,stjj006,stjj007, 
             stjj008,stjj009,stjjsite,stjjunit ,t10.mhadl006 ,t11.mhaal003 ,t12.mhabl004 ,t13.mhacl005 FROM stjj_t", 
                
                     " INNER JOIN  stje_t ON stjeent = " ||g_enterprise|| " AND stje001 = stjj001 ",
 
                     "",
                     
                                    " LEFT JOIN mhadl_t t10 ON t10.mhadlent="||g_enterprise||" AND t10.mhadl001=stjj006 AND t10.mhadl002=stjj007 AND t10.mhadl003=stjj008 AND t10.mhadl004=stjj002 AND t10.mhadl005='"||g_dlang||"' ",
               " LEFT JOIN mhaal_t t11 ON t11.mhaalent="||g_enterprise||" AND t11.mhaal001=stjj006 AND t11.mhaal002='"||g_dlang||"' ",
               " LEFT JOIN mhabl_t t12 ON t12.mhablent="||g_enterprise||" AND t12.mhabl001=stjj006 AND t12.mhabl002=stjj007 AND t12.mhabl003='"||g_dlang||"' ",
               " LEFT JOIN mhacl_t t13 ON t13.mhaclent="||g_enterprise||" AND t13.mhacl001=stjj006 AND t13.mhacl002=stjj007 AND t13.mhacl003=stjj008 AND t13.mhacl004='"||g_dlang||"' ",
 
                     " WHERE stjjent=? AND stjj001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body7.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table7) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table7 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stjj_t.stjjseq"
         
         #add-point:單身填充控制 name="b_fill.sql7"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astm801_pb7 FROM g_sql
         DECLARE b_fill_cs7 CURSOR FOR astm801_pb7
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs7 USING g_enterprise,g_stje_m.stje001   #(ver:78)
                                               
      FOREACH b_fill_cs7 USING g_enterprise,g_stje_m.stje001 INTO g_stjf5_d[l_ac].stjjacti,g_stjf5_d[l_ac].stjjseq, 
          g_stjf5_d[l_ac].stjj002,g_stjf5_d[l_ac].stjj003,g_stjf5_d[l_ac].stjj004,g_stjf5_d[l_ac].stjj005, 
          g_stjf5_d[l_ac].stjj006,g_stjf5_d[l_ac].stjj007,g_stjf5_d[l_ac].stjj008,g_stjf5_d[l_ac].stjj009, 
          g_stjf5_d[l_ac].stjjsite,g_stjf5_d[l_ac].stjjunit,g_stjf5_d[l_ac].stjj002_desc,g_stjf5_d[l_ac].stjj006_desc, 
          g_stjf5_d[l_ac].stjj007_desc,g_stjf5_d[l_ac].stjj008_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill7.fill"
         
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF astm801_fill_chk(8) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body8.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stjkacti,stjkseq,stjk002,stjk004,stjk003,stjk005,stjksite,stjkunit , 
             t14.rtaxl003 ,t15.oocql004 FROM stjk_t",   
                     " INNER JOIN  stje_t ON stjeent = " ||g_enterprise|| " AND stje001 = stjk001 ",
 
                     "",
                     
                                    " LEFT JOIN rtaxl_t t14 ON t14.rtaxlent="||g_enterprise||" AND t14.rtaxl001=stjk002 AND t14.rtaxl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t15 ON t15.oocqlent="||g_enterprise||" AND t15.oocql001='2002' AND t15.oocql002=stjk003 AND t15.oocql003='"||g_dlang||"' ",
 
                     " WHERE stjkent=? AND stjk001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body8.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table8) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table8 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stjk_t.stjkseq"
         
         #add-point:單身填充控制 name="b_fill.sql8"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astm801_pb8 FROM g_sql
         DECLARE b_fill_cs8 CURSOR FOR astm801_pb8
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs8 USING g_enterprise,g_stje_m.stje001   #(ver:78)
                                               
      FOREACH b_fill_cs8 USING g_enterprise,g_stje_m.stje001 INTO g_stjf6_d[l_ac].stjkacti,g_stjf6_d[l_ac].stjkseq, 
          g_stjf6_d[l_ac].stjk002,g_stjf6_d[l_ac].stjk004,g_stjf6_d[l_ac].stjk003,g_stjf6_d[l_ac].stjk005, 
          g_stjf6_d[l_ac].stjksite,g_stjf6_d[l_ac].stjkunit,g_stjf6_d[l_ac].stjk002_desc,g_stjf6_d[l_ac].stjk003_desc  
            #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill8.fill"
         
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF astm801_fill_chk(9) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body9.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stjmseq,stjm002,stjm003,stjm004,stjm005,stjm006,stjm007,stjm008, 
             stjm009,stjm010,stjm011,stjm012,stjm013,stjm014,stjm015,stjm016,stjm018,stjm019,stjm017, 
             stjmsite,stjmunit ,t16.stael003 ,t17.ooefl003 FROM stjm_t",   
                     " INNER JOIN  stje_t ON stjeent = " ||g_enterprise|| " AND stje001 = stjm001 ",
 
                     "",
                     
                                    " LEFT JOIN stael_t t16 ON t16.staelent="||g_enterprise||" AND t16.stael001=stjm003 AND t16.stael002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t17 ON t17.ooeflent="||g_enterprise||" AND t17.ooefl001=stjm019 AND t17.ooefl002='"||g_dlang||"' ",
 
                     " WHERE stjment=? AND stjm001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body9.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table9) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table9 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stjm_t.stjmseq"
         
         #add-point:單身填充控制 name="b_fill.sql9"
         LET g_sql = "SELECT  DISTINCT stjmseq,stjm002,stjm003,stjm004,stjm005,stjm006,stjm007,stjm008, 
             stjm009,stjm010,stjm011,stjm012,stjm013,stjm014,stjm015,stjm016,stjm018,stjm019,stjm017, 
             stjmsite,stjmunit ,t16.stael003 ,t17.ooefl003 FROM stjm_t",   
                     " INNER JOIN  stje_t ON stjeent = '" ||g_enterprise|| "' AND stje001 = stjm001 ",
 
                     "",
                     
                                    " LEFT JOIN stael_t t16 ON t16.staelent='"||g_enterprise||"' AND t16.stael001=stjm003 AND t16.stael002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t17 ON t17.ooeflent='"||g_enterprise||"' AND t17.ooefl001=stjm019 AND t17.ooefl002='"||g_dlang||"' ",
 
                     " WHERE stjment=? AND stjm001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body9.fill_sql"

         #end add-point
         IF NOT cl_null(g_wc2_table9) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table9 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stjm003,stjm004"
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astm801_pb9 FROM g_sql
         DECLARE b_fill_cs9 CURSOR FOR astm801_pb9
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs9 USING g_enterprise,g_stje_m.stje001   #(ver:78)
                                               
      FOREACH b_fill_cs9 USING g_enterprise,g_stje_m.stje001 INTO g_stjf7_d[l_ac].stjmseq,g_stjf7_d[l_ac].stjm002, 
          g_stjf7_d[l_ac].stjm003,g_stjf7_d[l_ac].stjm004,g_stjf7_d[l_ac].stjm005,g_stjf7_d[l_ac].stjm006, 
          g_stjf7_d[l_ac].stjm007,g_stjf7_d[l_ac].stjm008,g_stjf7_d[l_ac].stjm009,g_stjf7_d[l_ac].stjm010, 
          g_stjf7_d[l_ac].stjm011,g_stjf7_d[l_ac].stjm012,g_stjf7_d[l_ac].stjm013,g_stjf7_d[l_ac].stjm014, 
          g_stjf7_d[l_ac].stjm015,g_stjf7_d[l_ac].stjm016,g_stjf7_d[l_ac].stjm018,g_stjf7_d[l_ac].stjm019, 
          g_stjf7_d[l_ac].stjm017,g_stjf7_d[l_ac].stjmsite,g_stjf7_d[l_ac].stjmunit,g_stjf7_d[l_ac].stjm003_desc, 
          g_stjf7_d[l_ac].stjm019_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill9.fill"
         IF g_stjf7_d[l_ac].stjm018 = '3' THEN
            CALL s_desc_get_trading_partner_full_desc(g_stjf7_d[l_ac].stjm019) RETURNING g_stjf7_d[l_ac].stjm019_desc
         END IF
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   IF astm801_fill_chk(12) THEN
      #切換上下筆時不重組SQL
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  DISTINCT stjfseq,stjf002,stjf003,stjf021,stjf004,stjf005,stjf006,stjf007, 
                      stjf008,stjf009,stjf010,stjf012,stjf019,stjf013,stjf014,stjf015,stjf016,stjf020,stjf023,stjf024,stjf025,t1.stael003,t2.ooefl003  FROM stjf_t", 
                
                     " INNER JOIN stje_t ON stje001 = stjf001 ",
                     " LEFT JOIN stjg_t ON stjfent = stjgent AND stjf001 = stjg001 AND stjfseq = stjgseq ",
                     " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=stjf024 AND t2.ooefl002='"||g_dlang||"' ",
                     " LEFT JOIN stael_t t1 ON t1.staelent='"||g_enterprise||"' AND t1.stael001=stjf004 AND t1.stael002='"||g_dlang||"' ",
               
                     " WHERE stjfent=? AND stjf001=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         LET g_sql = g_sql CLIPPED, " AND stjf009 = '2' " 
         #end add-point
         IF NOT cl_null(g_wc2_table12) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table12 CLIPPED
         END IF
         
         #子單身的WC
         IF NOT cl_null(g_wc2_table13) THEN 
            LET g_sql = g_sql CLIPPED," AND ", g_wc2_table13 CLIPPED
         END IF 
 
         
         LET g_sql = g_sql, " ORDER BY stjf_t.stjfseq"
         
         #add-point:單身填充控制 name="b_fill.sql"

         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astm801_pb12 FROM g_sql
         DECLARE b_fill_cs12 CURSOR FOR astm801_pb12
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs12 USING g_enterprise,g_stje_m.stje001
                                               
      FOREACH b_fill_cs12 INTO g_stjf12_d[l_ac].stjfseq_2,g_stjf12_d[l_ac].stjf002_2,g_stjf12_d[l_ac].stjf003_2,g_stjf12_d[l_ac].stjf021_2, 
                             g_stjf12_d[l_ac].stjf004_2,g_stjf12_d[l_ac].stjf005_2,g_stjf12_d[l_ac].stjf006_2,g_stjf12_d[l_ac].stjf007_2, 
                             g_stjf12_d[l_ac].stjf008_2,g_stjf12_d[l_ac].stjf009_2,g_stjf12_d[l_ac].stjf010_2,g_stjf12_d[l_ac].stjf012_2,g_stjf12_d[l_ac].stjf019_2, 
                             g_stjf12_d[l_ac].stjf013_2,g_stjf12_d[l_ac].stjf014_2,g_stjf12_d[l_ac].stjf015_2,g_stjf12_d[l_ac].stjf016_2,g_stjf12_d[l_ac].stjf020_2, 
                             g_stjf12_d[l_ac].stjf023_2,g_stjf12_d[l_ac].stjf024_2,g_stjf12_d[l_ac].stjf025_2,g_stjf12_d[l_ac].stjf004_2_desc,
                             g_stjf12_d[l_ac].stjf024_2_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         #带出费用性质
         SELECT stae004 INTO g_stjf12_d[l_ac].stae004_2
           FROM stae_t
          WHERE staeent = g_enterprise
            AND stae001 = g_stjf12_d[l_ac].stjf004_2
         IF g_stjf12_d[l_ac].stjf023_2= '3' THEN
            CALL s_desc_get_trading_partner_full_desc(g_stjf12_d[l_ac].stjf024_2) RETURNING g_stjf12_d[l_ac].stjf024_2_desc
         END IF   
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
   CALL g_stjf12_d.deleteElement(g_stjf12_d.getLength())
   FREE astm801_pb12
   
   
   IF astm801_fill_chk(14) THEN
      #切換上下筆時不重組SQL
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
#         LET g_sql = "SELECT DISTINCT stjf004,stael003,stae004,stae012,stjf002,SUM(stjm007),SUM(stjm008),SUM(stjm009),SUM(stjm010),
#                                SUM(stjm011),SUM(stjm012),SUM(stjm013),SUM(stjm014) FROM stjf_t",   
#                     "  LEFT JOIN stae_t ON staeent = stjfent AND stae001 = stjf004 ",
#                     "  LEFT JOIN stael_t ON staelent = stjfent AND stael001 = stjf004 AND stael002='"||g_dlang||"',stjm_t",
#                     " WHERE stjfent=? AND stjf001=?",
#                     "   AND stjfent = stjment AND stjf001 = stjm001 AND stjf004 = stjm003 ", 
#                     " GROUP BY stjf004,stael003,stae004,stae012,stjf002 ",
#                     " ORDER BY stjf004" 
         LET g_sql = "SELECT DISTINCT stjm003,stael003,stae004,stae012,sthb006,SUM(stjm007),SUM(stjm008),SUM(stjm009),SUM(stjm010),
                                SUM(stjm011),SUM(stjm012),SUM(stjm013),SUM(stjm014) FROM stje_t,stjm_t",
                     "  LEFT JOIN stae_t ON staeent = stjment AND stae001 = stjm003 ",
                     "  LEFT JOIN stael_t ON staelent = stjment AND stael001 = stjm003 AND stael002='"||g_dlang||"',sthb_t",
                     " WHERE stjment=? AND stjm001=?",
                     "   AND stjeent = stjment AND stje001 = stjm001",
                     "   AND sthbent = stjment AND sthb001 = stje003 AND sthb002 = stjm003 ",
                     " GROUP BY stjm003,stael003,stae004,stae012,sthb006 ",
                     " ORDER BY stjm003"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         
         #add-point:單身填充控制 name="b_fill.sql"

         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astm801_pb14 FROM g_sql
         DECLARE b_fill_cs14 CURSOR FOR astm801_pb14
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs14 USING g_enterprise,g_stje_m.stje001
                                               
      FOREACH b_fill_cs14 INTO g_stjf14_d[l_ac].stjf004_1,g_stjf14_d[l_ac].stjf004_1_desc,g_stjf14_d[l_ac].stae004_1,
                               g_stjf14_d[l_ac].stae012_1,g_stjf14_d[l_ac].stjf002_1,g_stjf14_d[l_ac].stjm007_1, 
                               g_stjf14_d[l_ac].stjm008_1,g_stjf14_d[l_ac].stjm009_1,g_stjf14_d[l_ac].stjm010_1,g_stjf14_d[l_ac].stjm011_1, 
                               g_stjf14_d[l_ac].stjm012_1,g_stjf14_d[l_ac].stjm013_1,g_stjf14_d[l_ac].stjm014_1
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         LET g_stjf14_d[l_ac].stjfseq_1=l_ac
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
   CALL g_stjf14_d.deleteElement(g_stjf14_d.getLength())
   FREE astm801_pb14
   CALL astm801_b_fill2_1()   
   CALL astm801_b_fill_1()
   CALL g_stjf11_d.appendElement()  
   #end add-point
   
   CALL g_stjf_d.deleteElement(g_stjf_d.getLength())
   CALL g_stjf11_d.deleteElement(g_stjf11_d.getLength())
   CALL g_stjf13_d.deleteElement(g_stjf13_d.getLength())
   CALL g_stjf2_d.deleteElement(g_stjf2_d.getLength())
   CALL g_stjf3_d.deleteElement(g_stjf3_d.getLength())
   CALL g_stjf4_d.deleteElement(g_stjf4_d.getLength())
   CALL g_stjf5_d.deleteElement(g_stjf5_d.getLength())
   CALL g_stjf6_d.deleteElement(g_stjf6_d.getLength())
   CALL g_stjf7_d.deleteElement(g_stjf7_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE astm801_pb
   FREE astm801_pb2
 
   FREE astm801_pb3
 
   FREE astm801_pb4
 
   FREE astm801_pb5
 
   FREE astm801_pb6
 
   FREE astm801_pb7
 
   FREE astm801_pb8
 
   FREE astm801_pb9
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_stjf_d.getLength()
      LET g_stjf_d_mask_o[l_ac].* =  g_stjf_d[l_ac].*
      CALL astm801_stjf_t_mask()
      LET g_stjf_d_mask_n[l_ac].* =  g_stjf_d[l_ac].*
   END FOR
   
   LET g_stjf11_d_mask_o.* =  g_stjf11_d.*
   FOR l_ac = 1 TO g_stjf11_d.getLength()
      LET g_stjf11_d_mask_o[l_ac].* =  g_stjf11_d[l_ac].*
      CALL astm801_stjn_t_mask()
      LET g_stjf11_d_mask_n[l_ac].* =  g_stjf11_d[l_ac].*
   END FOR
   LET g_stjf13_d_mask_o.* =  g_stjf13_d.*
   FOR l_ac = 1 TO g_stjf13_d.getLength()
      LET g_stjf13_d_mask_o[l_ac].* =  g_stjf13_d[l_ac].*
      CALL astm801_stjo_t_mask()
      LET g_stjf13_d_mask_n[l_ac].* =  g_stjf13_d[l_ac].*
   END FOR
   LET g_stjf2_d_mask_o.* =  g_stjf2_d.*
   FOR l_ac = 1 TO g_stjf2_d.getLength()
      LET g_stjf2_d_mask_o[l_ac].* =  g_stjf2_d[l_ac].*
      CALL astm801_stjh_t_mask()
      LET g_stjf2_d_mask_n[l_ac].* =  g_stjf2_d[l_ac].*
   END FOR
   LET g_stjf3_d_mask_o.* =  g_stjf3_d.*
   FOR l_ac = 1 TO g_stjf3_d.getLength()
      LET g_stjf3_d_mask_o[l_ac].* =  g_stjf3_d[l_ac].*
      CALL astm801_stji_t_mask()
      LET g_stjf3_d_mask_n[l_ac].* =  g_stjf3_d[l_ac].*
   END FOR
   LET g_stjf4_d_mask_o.* =  g_stjf4_d.*
   FOR l_ac = 1 TO g_stjf4_d.getLength()
      LET g_stjf4_d_mask_o[l_ac].* =  g_stjf4_d[l_ac].*
      CALL astm801_stjl_t_mask()
      LET g_stjf4_d_mask_n[l_ac].* =  g_stjf4_d[l_ac].*
   END FOR
   LET g_stjf5_d_mask_o.* =  g_stjf5_d.*
   FOR l_ac = 1 TO g_stjf5_d.getLength()
      LET g_stjf5_d_mask_o[l_ac].* =  g_stjf5_d[l_ac].*
      CALL astm801_stjj_t_mask()
      LET g_stjf5_d_mask_n[l_ac].* =  g_stjf5_d[l_ac].*
   END FOR
   LET g_stjf6_d_mask_o.* =  g_stjf6_d.*
   FOR l_ac = 1 TO g_stjf6_d.getLength()
      LET g_stjf6_d_mask_o[l_ac].* =  g_stjf6_d[l_ac].*
      CALL astm801_stjk_t_mask()
      LET g_stjf6_d_mask_n[l_ac].* =  g_stjf6_d[l_ac].*
   END FOR
   LET g_stjf7_d_mask_o.* =  g_stjf7_d.*
   FOR l_ac = 1 TO g_stjf7_d.getLength()
      LET g_stjf7_d_mask_o[l_ac].* =  g_stjf7_d[l_ac].*
      CALL astm801_stjm_t_mask()
      LET g_stjf7_d_mask_n[l_ac].* =  g_stjf7_d[l_ac].*
   END FOR
   LET g_stjf9_d_mask_o.* =  g_stjf9_d.*
   FOR l_ac = 1 TO g_stjf9_d.getLength()
      LET g_stjf9_d_mask_o[l_ac].* =  g_stjf9_d[l_ac].*
      CALL astm801_stjg_t_mask()
      LET g_stjf9_d_mask_n[l_ac].* =  g_stjf9_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
 
{</section>}
 
{<section id="astm801.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION astm801_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      
      #end add-point    
      DELETE FROM stjf_t
       WHERE stjfent = g_enterprise AND
         stjf001 = ps_keys_bak[1] AND stjfseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_stjf_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete2"
      
      #end add-point    
      DELETE FROM stjn_t
       WHERE stjnent = g_enterprise AND
             stjn001 = ps_keys_bak[1] AND stjnseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete2"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stjn_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_stjf11_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete2"
      
      #end add-point    
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete3"
      
      #end add-point    
      DELETE FROM stjo_t
       WHERE stjoent = g_enterprise AND
             stjo001 = ps_keys_bak[1] AND stjoseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete3"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stjo_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_stjf13_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete3"
      
      #end add-point    
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete4"
      
      #end add-point    
      DELETE FROM stjh_t
       WHERE stjhent = g_enterprise AND
             stjh001 = ps_keys_bak[1] AND stjhseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete4"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stjh_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_stjf2_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete4"
      
      #end add-point    
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete5"
      
      #end add-point    
      DELETE FROM stji_t
       WHERE stjient = g_enterprise AND
             stji001 = ps_keys_bak[1] AND stjiseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete5"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stji_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'5'" THEN 
         CALL g_stjf3_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete5"
      
      #end add-point    
   END IF
 
   LET ls_group = "'6',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete6"
      
      #end add-point    
      DELETE FROM stjl_t
       WHERE stjlent = g_enterprise AND
             stjl001 = ps_keys_bak[1] AND stjlseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete6"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stjl_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'6'" THEN 
         CALL g_stjf4_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete6"
      
      #end add-point    
   END IF
 
   LET ls_group = "'7',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete7"
      
      #end add-point    
      DELETE FROM stjj_t
       WHERE stjjent = g_enterprise AND
             stjj001 = ps_keys_bak[1] AND stjjseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete7"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stjj_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'7'" THEN 
         CALL g_stjf5_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete7"
      
      #end add-point    
   END IF
 
   LET ls_group = "'8',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete8"
      
      #end add-point    
      DELETE FROM stjk_t
       WHERE stjkent = g_enterprise AND
             stjk001 = ps_keys_bak[1] AND stjkseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete8"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stjk_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'8'" THEN 
         CALL g_stjf6_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete8"
      
      #end add-point    
   END IF
 
   LET ls_group = "'9',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete9"
      
      #end add-point    
      DELETE FROM stjm_t
       WHERE stjment = g_enterprise AND
             stjm001 = ps_keys_bak[1] AND stjmseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete9"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stjm_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'9'" THEN 
         CALL g_stjf7_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete9"
      
      #end add-point    
   END IF
 
 
   
   LET ls_group = "'10',"
   #判斷是否是同一群組的table2
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete10"
      
      #end add-point    
      DELETE FROM stjg_t
       WHERE stjgent = g_enterprise AND
             stjg001 = ps_keys_bak[1] AND stjgseq = ps_keys_bak[2] AND stjgseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中 name="delete_b.m_delete10"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stjg_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
    
      LET li_idx = g_detail_idx2
      IF ps_page <> "'10'" THEN 
         CALL g_stjf9_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete10"
      
      #end add-point    
   END IF
 
 
   
   #add-point:delete_b段other name="delete_b.other"
   LET ls_group = "'A',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"

      #end add-point    
      DELETE FROM stjf_t
       WHERE stjfent = g_enterprise AND
         stjf001 = ps_keys_bak[1] AND stjfseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"

      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'A'" THEN 
         CALL g_stjf12_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'11',"
   #判斷是否是同一群組的table2
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete9"

      #end add-point    
      DELETE FROM stjg_t
       WHERE stjgent = g_enterprise AND
             stjg001 = ps_keys_bak[1] AND stjgseq = ps_keys_bak[2] AND stjgseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中 name="delete_b.m_delete9"

      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stjg_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
    
      LET li_idx = g_detail_idx2
      IF ps_page <> "'11'" THEN 
         CALL g_stjf15_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete9"

      #end add-point    
   END IF
 
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="astm801.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION astm801_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      
      #end add-point 
      INSERT INTO stjf_t
                  (stjfent,
                   stjf001,
                   stjfseq
                   ,stjf002,stjf003,stjf021,stjf004,stjf022,stjf005,stjf006,stjf007,stjf008,stjf009,stjf010,stjf011,stjf018,stjf016,stjf017,stjf020,stjf023,stjf024,stjf025,stjfsite,stjfunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stjf_d[g_detail_idx].stjf002,g_stjf_d[g_detail_idx].stjf003,g_stjf_d[g_detail_idx].stjf021, 
                       g_stjf_d[g_detail_idx].stjf004,g_stjf_d[g_detail_idx].stjf022,g_stjf_d[g_detail_idx].stjf005, 
                       g_stjf_d[g_detail_idx].stjf006,g_stjf_d[g_detail_idx].stjf007,g_stjf_d[g_detail_idx].stjf008, 
                       g_stjf_d[g_detail_idx].stjf009,g_stjf_d[g_detail_idx].stjf010,g_stjf_d[g_detail_idx].stjf011, 
                       g_stjf_d[g_detail_idx].stjf018,g_stjf_d[g_detail_idx].stjf016,g_stjf_d[g_detail_idx].stjf017, 
                       g_stjf_d[g_detail_idx].stjf020,g_stjf_d[g_detail_idx].stjf023,g_stjf_d[g_detail_idx].stjf024, 
                       g_stjf_d[g_detail_idx].stjf025,g_stjf_d[g_detail_idx].stjfsite,g_stjf_d[g_detail_idx].stjfunit) 
 
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      
      #end add-point 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stjf_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_stjf_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert2"
      
      #end add-point 
      INSERT INTO stjn_t
                  (stjnent,
                   stjn001,
                   stjnseq
                   ,stjnsite,stjnunit,stjn002,stjn004,stjn003,stjn005,stjn006,stjn007,stjn008,stjn009,stjn010) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stjf11_d[g_detail_idx].stjnsite,g_stjf11_d[g_detail_idx].stjnunit,g_stjf11_d[g_detail_idx].stjn002, 
                       g_stjf11_d[g_detail_idx].stjn004,g_stjf11_d[g_detail_idx].stjn003,g_stjf11_d[g_detail_idx].stjn005, 
                       g_stjf11_d[g_detail_idx].stjn006,g_stjf11_d[g_detail_idx].stjn007,g_stjf11_d[g_detail_idx].stjn008, 
                       g_stjf11_d[g_detail_idx].stjn009,g_stjf11_d[g_detail_idx].stjn010)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert2"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stjn_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_stjf11_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert2"
      
      #end add-point
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert3"
      
      #end add-point 
      INSERT INTO stjo_t
                  (stjoent,
                   stjo001,
                   stjoseq
                   ,stjosite,stjounit,stjo002,stjo003,stjo004,stjo005,stjo006,stjo007) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stjf13_d[g_detail_idx].stjosite,g_stjf13_d[g_detail_idx].stjounit,g_stjf13_d[g_detail_idx].stjo002, 
                       g_stjf13_d[g_detail_idx].stjo003,g_stjf13_d[g_detail_idx].stjo004,g_stjf13_d[g_detail_idx].stjo005, 
                       g_stjf13_d[g_detail_idx].stjo006,g_stjf13_d[g_detail_idx].stjo007)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert3"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stjo_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_stjf13_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert3"
      
      #end add-point
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert4"
      
      #end add-point 
      INSERT INTO stjh_t
                  (stjhent,
                   stjh001,
                   stjhseq
                   ,stjh002,stjh003,stjh008,stjh004,stjh005,stjh006,stjh007,stjhsite,stjhunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stjf2_d[g_detail_idx].stjh002,g_stjf2_d[g_detail_idx].stjh003,g_stjf2_d[g_detail_idx].stjh008, 
                       g_stjf2_d[g_detail_idx].stjh004,g_stjf2_d[g_detail_idx].stjh005,g_stjf2_d[g_detail_idx].stjh006, 
                       g_stjf2_d[g_detail_idx].stjh007,g_stjf2_d[g_detail_idx].stjhsite,g_stjf2_d[g_detail_idx].stjhunit) 
 
      #add-point:insert_b段資料新增中 name="insert_b.m_insert4"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stjh_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_stjf2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert4"
      
      #end add-point
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert5"
      
      #end add-point 
      INSERT INTO stji_t
                  (stjient,
                   stji001,
                   stjiseq
                   ,stji002,stji003,stji010,stji004,stji005,stji006,stji007,stji008,stji009,stjisite,stjiunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stjf3_d[g_detail_idx].stji002,g_stjf3_d[g_detail_idx].stji003,g_stjf3_d[g_detail_idx].stji010, 
                       g_stjf3_d[g_detail_idx].stji004,g_stjf3_d[g_detail_idx].stji005,g_stjf3_d[g_detail_idx].stji006, 
                       g_stjf3_d[g_detail_idx].stji007,g_stjf3_d[g_detail_idx].stji008,g_stjf3_d[g_detail_idx].stji009, 
                       g_stjf3_d[g_detail_idx].stjisite,g_stjf3_d[g_detail_idx].stjiunit)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert5"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stji_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'5'" THEN 
         CALL g_stjf3_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert5"
      
      #end add-point
   END IF
 
   LET ls_group = "'6',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert6"
      
      #end add-point 
      INSERT INTO stjl_t
                  (stjlent,
                   stjl001,
                   stjlseq
                   ,stjl002,stjl003,stjl004,stjl005,stjl006,stjl007,stjl008,stjlsite,stjlunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stjf4_d[g_detail_idx].stjl002,g_stjf4_d[g_detail_idx].stjl003,g_stjf4_d[g_detail_idx].stjl004, 
                       g_stjf4_d[g_detail_idx].stjl005,g_stjf4_d[g_detail_idx].stjl006,g_stjf4_d[g_detail_idx].stjl007, 
                       g_stjf4_d[g_detail_idx].stjl008,g_stjf4_d[g_detail_idx].stjlsite,g_stjf4_d[g_detail_idx].stjlunit) 
 
      #add-point:insert_b段資料新增中 name="insert_b.m_insert6"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stjl_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'6'" THEN 
         CALL g_stjf4_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert6"
      
      #end add-point
   END IF
 
   LET ls_group = "'7',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert7"
      
      #end add-point 
      INSERT INTO stjj_t
                  (stjjent,
                   stjj001,
                   stjjseq
                   ,stjjacti,stjj002,stjj003,stjj004,stjj005,stjj006,stjj007,stjj008,stjj009,stjjsite,stjjunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stjf5_d[g_detail_idx].stjjacti,g_stjf5_d[g_detail_idx].stjj002,g_stjf5_d[g_detail_idx].stjj003, 
                       g_stjf5_d[g_detail_idx].stjj004,g_stjf5_d[g_detail_idx].stjj005,g_stjf5_d[g_detail_idx].stjj006, 
                       g_stjf5_d[g_detail_idx].stjj007,g_stjf5_d[g_detail_idx].stjj008,g_stjf5_d[g_detail_idx].stjj009, 
                       g_stjf5_d[g_detail_idx].stjjsite,g_stjf5_d[g_detail_idx].stjjunit)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert7"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stjj_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'7'" THEN 
         CALL g_stjf5_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert7"
      
      #end add-point
   END IF
 
   LET ls_group = "'8',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert8"
      
      #end add-point 
      INSERT INTO stjk_t
                  (stjkent,
                   stjk001,
                   stjkseq
                   ,stjkacti,stjk002,stjk004,stjk003,stjk005,stjksite,stjkunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stjf6_d[g_detail_idx].stjkacti,g_stjf6_d[g_detail_idx].stjk002,g_stjf6_d[g_detail_idx].stjk004, 
                       g_stjf6_d[g_detail_idx].stjk003,g_stjf6_d[g_detail_idx].stjk005,g_stjf6_d[g_detail_idx].stjksite, 
                       g_stjf6_d[g_detail_idx].stjkunit)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert8"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stjk_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'8'" THEN 
         CALL g_stjf6_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert8"
      
      #end add-point
   END IF
 
   LET ls_group = "'9',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert9"
      
      #end add-point 
      INSERT INTO stjm_t
                  (stjment,
                   stjm001,
                   stjmseq
                   ,stjm002,stjm003,stjm004,stjm005,stjm006,stjm007,stjm008,stjm009,stjm010,stjm011,stjm012,stjm013,stjm014,stjm015,stjm016,stjm018,stjm019,stjm017,stjmsite,stjmunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stjf7_d[g_detail_idx].stjm002,g_stjf7_d[g_detail_idx].stjm003,g_stjf7_d[g_detail_idx].stjm004, 
                       g_stjf7_d[g_detail_idx].stjm005,g_stjf7_d[g_detail_idx].stjm006,g_stjf7_d[g_detail_idx].stjm007, 
                       g_stjf7_d[g_detail_idx].stjm008,g_stjf7_d[g_detail_idx].stjm009,g_stjf7_d[g_detail_idx].stjm010, 
                       g_stjf7_d[g_detail_idx].stjm011,g_stjf7_d[g_detail_idx].stjm012,g_stjf7_d[g_detail_idx].stjm013, 
                       g_stjf7_d[g_detail_idx].stjm014,g_stjf7_d[g_detail_idx].stjm015,g_stjf7_d[g_detail_idx].stjm016, 
                       g_stjf7_d[g_detail_idx].stjm018,g_stjf7_d[g_detail_idx].stjm019,g_stjf7_d[g_detail_idx].stjm017, 
                       g_stjf7_d[g_detail_idx].stjmsite,g_stjf7_d[g_detail_idx].stjmunit)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert9"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stjm_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'9'" THEN 
         CALL g_stjf7_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert9"
      
      #end add-point
   END IF
 
 
   
   LET ls_group = "'10',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert10"
      
      #end add-point 
      INSERT INTO stjg_t
                  (stjgent,
                   stjg001,stjgseq,
                   stjgseq1
                   ,stjgsite,stjgunit,stjg002,stjg003,stjg004,stjg006) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_stjf9_d[g_detail_idx2].stjgsite,g_stjf9_d[g_detail_idx2].stjgunit,g_stjf9_d[g_detail_idx2].stjg002, 
                       g_stjf9_d[g_detail_idx2].stjg003,g_stjf9_d[g_detail_idx2].stjg004,g_stjf9_d[g_detail_idx2].stjg006) 
 
      #add-point:insert_b段資料新增中 name="insert_b.m_insert10"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stjg_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx2
      IF ps_page <> "'10'" THEN 
         CALL g_stjf9_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert10"
      
      #end add-point
   END IF
 
 
   
   #add-point:insert_b段other name="insert_b.other"
   LET ls_group = "'A',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"

      #end add-point 
      INSERT INTO stjf_t
                  (stjfent,
                   stjf001,
                   stjfseq,stjfsite,stjfunit,stjf002,stjf003,stjf004,stjf005,stjf006,stjf007,stjf008,stjf009,stjf010,stjf012,stjf019,stjf013,stjf014,stjf015,stjf016,stjf020) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],g_stje_m.stjesite,g_stje_m.stjesite,
                    g_stjf12_d[g_detail_idx].stjf002_2,g_stjf12_d[g_detail_idx].stjf003_2, 
                    g_stjf12_d[g_detail_idx].stjf004_2,g_stjf12_d[g_detail_idx].stjf005_2,g_stjf12_d[g_detail_idx].stjf006_2, 
                    g_stjf12_d[g_detail_idx].stjf007_2,g_stjf12_d[g_detail_idx].stjf008_2,g_stjf12_d[g_detail_idx].stjf009_2, 
                    g_stjf12_d[g_detail_idx].stjf010_2,g_stjf12_d[g_detail_idx].stjf012_2,g_stjf12_d[g_detail_idx].stjf019_2,g_stjf12_d[g_detail_idx].stjf013_2,
                    g_stjf12_d[g_detail_idx].stjf014_2,g_stjf12_d[g_detail_idx].stjf015_2,g_stjf12_d[g_detail_idx].stjf016_2,g_stjf12_d[g_detail_idx].stjf020_2) 

      #add-point:insert_b段資料新增中 name="insert_b.m_insert"

      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stjf_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'A'" THEN 
         CALL g_stjf12_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"

      #end add-point 
   END IF
   
   LET ls_group = "'B',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert9"

      #end add-point 
      INSERT INTO stjg_t
                  (stjgent,
                   stjg001,stjgseq,
                   stjgseq1
                   ,stjgsite,stjgunit,stjg001,stjg002,stjg003,stjg005,stjg007) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_stje_m.stjesite,g_stje_m.stjesite,g_stje_m.stje001, 
                       g_stjf15_d[g_detail_idx2].stjg002_1,g_stjf15_d[g_detail_idx2].stjg003_1,g_stjf15_d[g_detail_idx2].stjg005_1,g_stjf15_d[g_detail_idx2].stjg007_1) 

      #add-point:insert_b段資料新增中 name="insert_b.m_insert9"

      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stjg_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx2
      IF ps_page <> "'B'" THEN 
         CALL g_stjf15_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert9"

      #end add-point
   END IF
   #end add-point     
   
END FUNCTION
 
{</section>}
 
{<section id="astm801.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION astm801_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stjf_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      
      #end add-point 
      
      #將遮罩欄位還原
      CALL astm801_stjf_t_mask_restore('restore_mask_o')
               
      UPDATE stjf_t 
         SET (stjf001,
              stjfseq
              ,stjf002,stjf003,stjf021,stjf004,stjf022,stjf005,stjf006,stjf007,stjf008,stjf009,stjf010,stjf011,stjf018,stjf016,stjf017,stjf020,stjf023,stjf024,stjf025,stjfsite,stjfunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stjf_d[g_detail_idx].stjf002,g_stjf_d[g_detail_idx].stjf003,g_stjf_d[g_detail_idx].stjf021, 
                  g_stjf_d[g_detail_idx].stjf004,g_stjf_d[g_detail_idx].stjf022,g_stjf_d[g_detail_idx].stjf005, 
                  g_stjf_d[g_detail_idx].stjf006,g_stjf_d[g_detail_idx].stjf007,g_stjf_d[g_detail_idx].stjf008, 
                  g_stjf_d[g_detail_idx].stjf009,g_stjf_d[g_detail_idx].stjf010,g_stjf_d[g_detail_idx].stjf011, 
                  g_stjf_d[g_detail_idx].stjf018,g_stjf_d[g_detail_idx].stjf016,g_stjf_d[g_detail_idx].stjf017, 
                  g_stjf_d[g_detail_idx].stjf020,g_stjf_d[g_detail_idx].stjf023,g_stjf_d[g_detail_idx].stjf024, 
                  g_stjf_d[g_detail_idx].stjf025,g_stjf_d[g_detail_idx].stjfsite,g_stjf_d[g_detail_idx].stjfunit)  
 
         WHERE stjfent = g_enterprise AND stjf001 = ps_keys_bak[1] AND stjfseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
      
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stjf_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stjf_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astm801_stjf_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stjn_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update2"
      
      #end add-point  
      
      #將遮罩欄位還原
      CALL astm801_stjn_t_mask_restore('restore_mask_o')
               
      UPDATE stjn_t 
         SET (stjn001,
              stjnseq
              ,stjnsite,stjnunit,stjn002,stjn004,stjn003,stjn005,stjn006,stjn007,stjn008,stjn009,stjn010) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stjf11_d[g_detail_idx].stjnsite,g_stjf11_d[g_detail_idx].stjnunit,g_stjf11_d[g_detail_idx].stjn002, 
                  g_stjf11_d[g_detail_idx].stjn004,g_stjf11_d[g_detail_idx].stjn003,g_stjf11_d[g_detail_idx].stjn005, 
                  g_stjf11_d[g_detail_idx].stjn006,g_stjf11_d[g_detail_idx].stjn007,g_stjf11_d[g_detail_idx].stjn008, 
                  g_stjf11_d[g_detail_idx].stjn009,g_stjf11_d[g_detail_idx].stjn010) 
         WHERE stjnent = g_enterprise AND stjn001 = ps_keys_bak[1] AND stjnseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update2"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stjn_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stjn_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astm801_stjn_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update2"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stjo_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update3"
      
      #end add-point  
      
      #將遮罩欄位還原
      CALL astm801_stjo_t_mask_restore('restore_mask_o')
               
      UPDATE stjo_t 
         SET (stjo001,
              stjoseq
              ,stjosite,stjounit,stjo002,stjo003,stjo004,stjo005,stjo006,stjo007) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stjf13_d[g_detail_idx].stjosite,g_stjf13_d[g_detail_idx].stjounit,g_stjf13_d[g_detail_idx].stjo002, 
                  g_stjf13_d[g_detail_idx].stjo003,g_stjf13_d[g_detail_idx].stjo004,g_stjf13_d[g_detail_idx].stjo005, 
                  g_stjf13_d[g_detail_idx].stjo006,g_stjf13_d[g_detail_idx].stjo007) 
         WHERE stjoent = g_enterprise AND stjo001 = ps_keys_bak[1] AND stjoseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update3"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stjo_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stjo_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astm801_stjo_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update3"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stjh_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update4"
      
      #end add-point  
      
      #將遮罩欄位還原
      CALL astm801_stjh_t_mask_restore('restore_mask_o')
               
      UPDATE stjh_t 
         SET (stjh001,
              stjhseq
              ,stjh002,stjh003,stjh008,stjh004,stjh005,stjh006,stjh007,stjhsite,stjhunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stjf2_d[g_detail_idx].stjh002,g_stjf2_d[g_detail_idx].stjh003,g_stjf2_d[g_detail_idx].stjh008, 
                  g_stjf2_d[g_detail_idx].stjh004,g_stjf2_d[g_detail_idx].stjh005,g_stjf2_d[g_detail_idx].stjh006, 
                  g_stjf2_d[g_detail_idx].stjh007,g_stjf2_d[g_detail_idx].stjhsite,g_stjf2_d[g_detail_idx].stjhunit)  
 
         WHERE stjhent = g_enterprise AND stjh001 = ps_keys_bak[1] AND stjhseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update4"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stjh_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stjh_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astm801_stjh_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update4"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stji_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update5"
      
      #end add-point  
      
      #將遮罩欄位還原
      CALL astm801_stji_t_mask_restore('restore_mask_o')
               
      UPDATE stji_t 
         SET (stji001,
              stjiseq
              ,stji002,stji003,stji010,stji004,stji005,stji006,stji007,stji008,stji009,stjisite,stjiunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stjf3_d[g_detail_idx].stji002,g_stjf3_d[g_detail_idx].stji003,g_stjf3_d[g_detail_idx].stji010, 
                  g_stjf3_d[g_detail_idx].stji004,g_stjf3_d[g_detail_idx].stji005,g_stjf3_d[g_detail_idx].stji006, 
                  g_stjf3_d[g_detail_idx].stji007,g_stjf3_d[g_detail_idx].stji008,g_stjf3_d[g_detail_idx].stji009, 
                  g_stjf3_d[g_detail_idx].stjisite,g_stjf3_d[g_detail_idx].stjiunit) 
         WHERE stjient = g_enterprise AND stji001 = ps_keys_bak[1] AND stjiseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update5"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stji_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stji_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astm801_stji_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update5"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'6',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stjl_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update6"
      
      #end add-point  
      
      #將遮罩欄位還原
      CALL astm801_stjl_t_mask_restore('restore_mask_o')
               
      UPDATE stjl_t 
         SET (stjl001,
              stjlseq
              ,stjl002,stjl003,stjl004,stjl005,stjl006,stjl007,stjl008,stjlsite,stjlunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stjf4_d[g_detail_idx].stjl002,g_stjf4_d[g_detail_idx].stjl003,g_stjf4_d[g_detail_idx].stjl004, 
                  g_stjf4_d[g_detail_idx].stjl005,g_stjf4_d[g_detail_idx].stjl006,g_stjf4_d[g_detail_idx].stjl007, 
                  g_stjf4_d[g_detail_idx].stjl008,g_stjf4_d[g_detail_idx].stjlsite,g_stjf4_d[g_detail_idx].stjlunit)  
 
         WHERE stjlent = g_enterprise AND stjl001 = ps_keys_bak[1] AND stjlseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update6"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stjl_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stjl_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astm801_stjl_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update6"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'7',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stjj_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update7"
      
      #end add-point  
      
      #將遮罩欄位還原
      CALL astm801_stjj_t_mask_restore('restore_mask_o')
               
      UPDATE stjj_t 
         SET (stjj001,
              stjjseq
              ,stjjacti,stjj002,stjj003,stjj004,stjj005,stjj006,stjj007,stjj008,stjj009,stjjsite,stjjunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stjf5_d[g_detail_idx].stjjacti,g_stjf5_d[g_detail_idx].stjj002,g_stjf5_d[g_detail_idx].stjj003, 
                  g_stjf5_d[g_detail_idx].stjj004,g_stjf5_d[g_detail_idx].stjj005,g_stjf5_d[g_detail_idx].stjj006, 
                  g_stjf5_d[g_detail_idx].stjj007,g_stjf5_d[g_detail_idx].stjj008,g_stjf5_d[g_detail_idx].stjj009, 
                  g_stjf5_d[g_detail_idx].stjjsite,g_stjf5_d[g_detail_idx].stjjunit) 
         WHERE stjjent = g_enterprise AND stjj001 = ps_keys_bak[1] AND stjjseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update7"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stjj_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stjj_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astm801_stjj_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update7"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'8',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stjk_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update8"
      
      #end add-point  
      
      #將遮罩欄位還原
      CALL astm801_stjk_t_mask_restore('restore_mask_o')
               
      UPDATE stjk_t 
         SET (stjk001,
              stjkseq
              ,stjkacti,stjk002,stjk004,stjk003,stjk005,stjksite,stjkunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stjf6_d[g_detail_idx].stjkacti,g_stjf6_d[g_detail_idx].stjk002,g_stjf6_d[g_detail_idx].stjk004, 
                  g_stjf6_d[g_detail_idx].stjk003,g_stjf6_d[g_detail_idx].stjk005,g_stjf6_d[g_detail_idx].stjksite, 
                  g_stjf6_d[g_detail_idx].stjkunit) 
         WHERE stjkent = g_enterprise AND stjk001 = ps_keys_bak[1] AND stjkseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update8"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stjk_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stjk_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astm801_stjk_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update8"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'9',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stjm_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update9"
      
      #end add-point  
      
      #將遮罩欄位還原
      CALL astm801_stjm_t_mask_restore('restore_mask_o')
               
      UPDATE stjm_t 
         SET (stjm001,
              stjmseq
              ,stjm002,stjm003,stjm004,stjm005,stjm006,stjm007,stjm008,stjm009,stjm010,stjm011,stjm012,stjm013,stjm014,stjm015,stjm016,stjm018,stjm019,stjm017,stjmsite,stjmunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stjf7_d[g_detail_idx].stjm002,g_stjf7_d[g_detail_idx].stjm003,g_stjf7_d[g_detail_idx].stjm004, 
                  g_stjf7_d[g_detail_idx].stjm005,g_stjf7_d[g_detail_idx].stjm006,g_stjf7_d[g_detail_idx].stjm007, 
                  g_stjf7_d[g_detail_idx].stjm008,g_stjf7_d[g_detail_idx].stjm009,g_stjf7_d[g_detail_idx].stjm010, 
                  g_stjf7_d[g_detail_idx].stjm011,g_stjf7_d[g_detail_idx].stjm012,g_stjf7_d[g_detail_idx].stjm013, 
                  g_stjf7_d[g_detail_idx].stjm014,g_stjf7_d[g_detail_idx].stjm015,g_stjf7_d[g_detail_idx].stjm016, 
                  g_stjf7_d[g_detail_idx].stjm018,g_stjf7_d[g_detail_idx].stjm019,g_stjf7_d[g_detail_idx].stjm017, 
                  g_stjf7_d[g_detail_idx].stjmsite,g_stjf7_d[g_detail_idx].stjmunit) 
         WHERE stjment = g_enterprise AND stjm001 = ps_keys_bak[1] AND stjmseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update9"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stjm_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stjm_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astm801_stjm_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update9"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
 
   
   LET ls_group = "'10',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stjg_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update10"
      
      #end add-point
      
      #將遮罩欄位還原
      CALL astm801_stjg_t_mask_restore('restore_mask_o')
               
      UPDATE stjg_t 
         SET (stjg001,stjgseq,
              stjgseq1
              ,stjgsite,stjgunit,stjg002,stjg003,stjg004,stjg006) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_stjf9_d[g_detail_idx2].stjgsite,g_stjf9_d[g_detail_idx2].stjgunit,g_stjf9_d[g_detail_idx2].stjg002, 
                  g_stjf9_d[g_detail_idx2].stjg003,g_stjf9_d[g_detail_idx2].stjg004,g_stjf9_d[g_detail_idx2].stjg006)  
 
         WHERE stjgent = g_enterprise AND stjg001 = ps_keys_bak[1] AND stjgseq = ps_keys_bak[2] AND stjgseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中 name="update_b.m_update10"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stjg_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stjg_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astm801_stjg_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update10"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
 
   
   #add-point:update_b段other name="update_b.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="astm801.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION astm801_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
   #如果是上層單身則進行update
   IF ps_table = 'stjf_t' THEN
      #add-point:update_b段修改前 name="key_update_b.before_update10"
      
      #end add-point
      
      UPDATE stjg_t 
         SET (stjg001,stjgseq) 
              = 
             (g_stje_m.stje001,g_stjf_d[g_detail_idx].stjfseq) 
         WHERE stjgent = g_enterprise AND
               stjg001 = ps_keys_bak[1] AND stjgseq = ps_keys_bak[2]
 
      #add-point:update_b段修改中 name="key_update_b.m_update10"
      
      #end add-point
              
      CASE
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stjg_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
            #若有多語言table資料一同更新
            
      END CASE
      
      #add-point:update_b段修改後 name="key_update_b.after_update10"
      
      #end add-point
   END IF
 
 
   
END FUNCTION
 
{</section>}
 
{<section id="astm801.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION astm801_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
   #如果是上層單身則進行delete
   IF ps_table = 'stjf_t' THEN
      #add-point:delete_b段修改前 name="key_delete_b.before_delete10"
      
      #end add-point
      
      DELETE FROM stjg_t 
            WHERE stjgent = g_enterprise AND
                  stjg001 = ps_keys_bak[1] AND stjgseq = ps_keys_bak[2]
 
      #add-point:delete_b段修改中 name="key_delete_b.m_delete10"
      
      #end add-point
              
      CASE
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stjg_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            RETURN FALSE
         OTHERWISE
      END CASE
 
       
 
      #add-point:delete_b段修改後 name="key_delete_b.after_delete10"
      
      #end add-point
   END IF
 
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="astm801.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION astm801_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
    
   #先刷新資料
   #CALL astm801_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "stjf_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN astm801_bcl USING g_enterprise,
                                       g_stje_m.stje001,g_stjf_d[g_detail_idx].stjfseq     
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astm801_bcl:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "stjn_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astm801_bcl2 USING g_enterprise,
                                             g_stje_m.stje001,g_stjf11_d[g_detail_idx].stjnseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astm801_bcl2:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "stjo_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astm801_bcl3 USING g_enterprise,
                                             g_stje_m.stje001,g_stjf13_d[g_detail_idx].stjoseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astm801_bcl3:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'4',"
   #僅鎖定自身table
   LET ls_group = "stjh_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astm801_bcl4 USING g_enterprise,
                                             g_stje_m.stje001,g_stjf2_d[g_detail_idx].stjhseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astm801_bcl4:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'5',"
   #僅鎖定自身table
   LET ls_group = "stji_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astm801_bcl5 USING g_enterprise,
                                             g_stje_m.stje001,g_stjf3_d[g_detail_idx].stjiseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astm801_bcl5:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'6',"
   #僅鎖定自身table
   LET ls_group = "stjl_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astm801_bcl6 USING g_enterprise,
                                             g_stje_m.stje001,g_stjf4_d[g_detail_idx].stjlseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astm801_bcl6:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'7',"
   #僅鎖定自身table
   LET ls_group = "stjj_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astm801_bcl7 USING g_enterprise,
                                             g_stje_m.stje001,g_stjf5_d[g_detail_idx].stjjseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astm801_bcl7:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'8',"
   #僅鎖定自身table
   LET ls_group = "stjk_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astm801_bcl8 USING g_enterprise,
                                             g_stje_m.stje001,g_stjf6_d[g_detail_idx].stjkseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astm801_bcl8:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'9',"
   #僅鎖定自身table
   LET ls_group = "stjm_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astm801_bcl9 USING g_enterprise,
                                             g_stje_m.stje001,g_stjf7_d[g_detail_idx].stjmseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astm801_bcl9:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
   #鎖定整組table
   #LET ls_group = "'10',"
   #僅鎖定自身table
   LET ls_group = "stjg_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astm801_bcl10 USING g_enterprise,
                                             g_stje_m.stje001,g_stjf_d[g_detail_idx].stjfseq,
                                             g_stjf9_d[g_detail_idx2].stjgseq1
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astm801_bcl10:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
   #add-point:lock_b段other name="lock_b.other"
   LET ls_group = "stjf_t_1"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN astm801_bcl11 USING g_enterprise,
                                       g_stje_m.stje001,g_stjf12_d[g_detail_idx].stjfseq_2     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astm801_bcl11:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
   
   #鎖定整組table
   #LET ls_group = "'9',"
   #僅鎖定自身table
   LET ls_group = "stjg_t_1"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astm801_bcl12 USING g_enterprise,
                                             g_stje_m.stje001,g_stjf12_d[g_detail_idx].stjfseq_2,
                                             g_stjf15_d[g_detail_idx2].stjgseq1_1
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astm801_bcl12:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="astm801.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION astm801_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astm801_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astm801_bcl2
   END IF
 
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astm801_bcl3
   END IF
 
   LET ls_group = "'4',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astm801_bcl4
   END IF
 
   LET ls_group = "'5',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astm801_bcl5
   END IF
 
   LET ls_group = "'6',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astm801_bcl6
   END IF
 
   LET ls_group = "'7',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astm801_bcl7
   END IF
 
   LET ls_group = "'8',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astm801_bcl8
   END IF
 
   LET ls_group = "'9',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astm801_bcl9
   END IF
 
 
   
   LET ls_group = "'10',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astm801_bcl10
   END IF
 
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   LET ls_group = "'10',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astm801_bcl11
   END IF
   LET ls_group = "'11',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astm801_bcl12
   END IF
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="astm801.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION astm801_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   CALL cl_set_comp_entry("",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("stje001",TRUE)
      CALL cl_set_comp_entry("",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
 
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   CALL cl_set_comp_entry("stje041,stje042,stje043,stje044,stje045,stje046",TRUE)
   CALL cl_set_comp_entry("stje008",TRUE)
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="astm801.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION astm801_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("stje001",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("",FALSE)
   END IF 
 
#  IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正) #(ver:78)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("",FALSE)
      END IF
#  END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   IF NOT s_aooi500_comp_entry(g_prog,'stjesite') OR g_site_flag THEN
      CALL cl_set_comp_entry("stjesite",FALSE)
   END IF 
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("stje008",FALSE)
   END IF
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="astm801.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION astm801_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   CALL cl_set_comp_entry("stjf011,stjf018",TRUE)
   CALL cl_set_comp_entry("stjf012_2,stjf019_2",TRUE)
   CALL cl_set_comp_entry("stjf014_2,stjf015_2",TRUE)
   #end add-point  
END FUNCTION
 
{</section>}
 
{<section id="astm801.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION astm801_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   IF g_stjf_d[l_ac].stjf016 <> '1' THEN
      CALL cl_set_comp_entry("stjf011,stjf018",FALSE)
   END IF
   IF g_stjf12_d[l_ac].stjf016_2 <> '1' THEN
      CALL cl_set_comp_entry("stjf012_2,stjf019_2",FALSE)
   END IF
   IF g_stjf12_d[l_ac].stjf013_2 = '1' THEN
      CALL cl_set_comp_entry("stjf014_2,stjf015_2",FALSE)
   END IF
   IF g_stjf12_d[l_ac].stjf013_2 = '3' THEN
      CALL cl_set_comp_entry("stjf015_2",FALSE)
   END IF
   #end add-point     
END FUNCTION
 
{</section>}
 
{<section id="astm801.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION astm801_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="astm801.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION astm801_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   #應用 a63 樣板自動產生(Version:2)
   IF g_stje_m.stjestus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF



   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="astm801.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION astm801_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="astm801.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION astm801_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="astm801.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION astm801_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " stje001 = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
         INITIALIZE g_wc2_table2 TO NULL
 
         INITIALIZE g_wc2_table3 TO NULL
 
         INITIALIZE g_wc2_table4 TO NULL
 
         INITIALIZE g_wc2_table5 TO NULL
 
         INITIALIZE g_wc2_table6 TO NULL
 
         INITIALIZE g_wc2_table7 TO NULL
 
         INITIALIZE g_wc2_table8 TO NULL
 
         INITIALIZE g_wc2_table9 TO NULL
 
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "stje_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "stjf_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "stjn_t" 
                  LET g_wc2_table2 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "stjo_t" 
                  LET g_wc2_table3 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "stjh_t" 
                  LET g_wc2_table4 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "stji_t" 
                  LET g_wc2_table5 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "stjl_t" 
                  LET g_wc2_table6 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "stjj_t" 
                  LET g_wc2_table7 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "stjk_t" 
                  LET g_wc2_table8 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "stjm_t" 
                  LET g_wc2_table9 = la_wc[li_idx].wc
 
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
            OR NOT cl_null(g_wc2_table2)
 
            OR NOT cl_null(g_wc2_table3)
 
            OR NOT cl_null(g_wc2_table4)
 
            OR NOT cl_null(g_wc2_table5)
 
            OR NOT cl_null(g_wc2_table6)
 
            OR NOT cl_null(g_wc2_table7)
 
            OR NOT cl_null(g_wc2_table8)
 
            OR NOT cl_null(g_wc2_table9)
 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
            IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
            END IF
 
            IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
            END IF
 
            IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
            END IF
 
            IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
            END IF
 
            IF g_wc2_table6 <> " 1=1" AND NOT cl_null(g_wc2_table6) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
            END IF
 
            IF g_wc2_table7 <> " 1=1" AND NOT cl_null(g_wc2_table7) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
            END IF
 
            IF g_wc2_table8 <> " 1=1" AND NOT cl_null(g_wc2_table8) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table8
            END IF
 
            IF g_wc2_table9 <> " 1=1" AND NOT cl_null(g_wc2_table9) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table9
            END IF
 
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
 
{</section>}
 
{<section id="astm801.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION astm801_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   RETURN
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_stje_m.stje001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN astm801_cl USING g_enterprise,g_stje_m.stje001
   IF STATUS THEN
      CLOSE astm801_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN astm801_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE astm801_master_referesh USING g_stje_m.stje001 INTO g_stje_m.stjesite,g_stje_m.stje004,g_stje_m.stje001, 
       g_stje_m.stje002,g_stje_m.stje003,g_stje_m.stje005,g_stje_m.stje006,g_stje_m.stjestus,g_stje_m.stje007, 
       g_stje_m.stje008,g_stje_m.stje010,g_stje_m.stje009,g_stje_m.stje011,g_stje_m.stje012,g_stje_m.stje013, 
       g_stje_m.stje014,g_stje_m.stje015,g_stje_m.stje016,g_stje_m.stje017,g_stje_m.stje018,g_stje_m.stje049, 
       g_stje_m.stje019,g_stje_m.stje020,g_stje_m.stje021,g_stje_m.stje022,g_stje_m.stje027,g_stje_m.stje028, 
       g_stje_m.stje029,g_stje_m.stje026,g_stje_m.stje023,g_stje_m.stje024,g_stje_m.stje025,g_stje_m.stje030, 
       g_stje_m.stje031,g_stje_m.stje032,g_stje_m.stje033,g_stje_m.stje034,g_stje_m.stje035,g_stje_m.stje036, 
       g_stje_m.stje037,g_stje_m.stje038,g_stje_m.stje039,g_stje_m.stje040,g_stje_m.stje041,g_stje_m.stje042, 
       g_stje_m.stje043,g_stje_m.stje044,g_stje_m.stje045,g_stje_m.stje046,g_stje_m.stje047,g_stje_m.stje048, 
       g_stje_m.stje050,g_stje_m.stje051,g_stje_m.stje052,g_stje_m.stje053,g_stje_m.stjeownid,g_stje_m.stjeowndp, 
       g_stje_m.stjecrtid,g_stje_m.stjecrtdp,g_stje_m.stjecrtdt,g_stje_m.stjemodid,g_stje_m.stjemoddt, 
       g_stje_m.stjecnfid,g_stje_m.stjecnfdt,g_stje_m.stjesite_desc,g_stje_m.stje003_desc,g_stje_m.stje007_desc, 
       g_stje_m.stje008_desc,g_stje_m.stje017_desc,g_stje_m.stje018_desc,g_stje_m.stje019_desc,g_stje_m.stje020_desc, 
       g_stje_m.stje021_desc,g_stje_m.stje022_desc,g_stje_m.stje027_desc,g_stje_m.stje028_desc,g_stje_m.stje029_desc, 
       g_stje_m.stje030_desc,g_stje_m.stje031_desc,g_stje_m.stje032_desc,g_stje_m.stje034_desc,g_stje_m.stje035_desc, 
       g_stje_m.stje036_desc,g_stje_m.stje038_desc,g_stje_m.stje039_desc,g_stje_m.stje051_desc,g_stje_m.stje053_desc, 
       g_stje_m.stjeownid_desc,g_stje_m.stjeowndp_desc,g_stje_m.stjemodid_desc
   
 
   #檢查是否允許此動作
   IF NOT astm801_action_chk() THEN
      CLOSE astm801_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_stje_m.stjesite,g_stje_m.stjesite_desc,g_stje_m.stje004,g_stje_m.stje001,g_stje_m.stje002, 
       g_stje_m.stje003,g_stje_m.stje003_desc,g_stje_m.stje005,g_stje_m.stje006,g_stje_m.stjestus,g_stje_m.stje007, 
       g_stje_m.stje007_desc,g_stje_m.stje008,g_stje_m.stje008_desc,g_stje_m.stje010,g_stje_m.stje009, 
       g_stje_m.stje011,g_stje_m.stje012,g_stje_m.stje013,g_stje_m.stje014,g_stje_m.stje015,g_stje_m.stje016, 
       g_stje_m.stje017,g_stje_m.stje017_desc,g_stje_m.stje018,g_stje_m.stje018_desc,g_stje_m.stje049, 
       g_stje_m.stje019,g_stje_m.stje019_desc,g_stje_m.stje020,g_stje_m.stje020_desc,g_stje_m.stje021, 
       g_stje_m.stje021_desc,g_stje_m.stje022,g_stje_m.stje022_desc,g_stje_m.stje027,g_stje_m.stje027_desc, 
       g_stje_m.stje028,g_stje_m.stje028_desc,g_stje_m.stje029,g_stje_m.stje029_desc,g_stje_m.stje026, 
       g_stje_m.stje023,g_stje_m.stje024,g_stje_m.stje025,g_stje_m.stje030,g_stje_m.stje030_desc,g_stje_m.stje031, 
       g_stje_m.stje031_desc,g_stje_m.stje032,g_stje_m.stje032_desc,g_stje_m.stje033,g_stje_m.stje034, 
       g_stje_m.stje034_desc,g_stje_m.stje035,g_stje_m.stje035_desc,g_stje_m.stje036,g_stje_m.stje036_desc, 
       g_stje_m.stje037,g_stje_m.stje038,g_stje_m.stje038_desc,g_stje_m.stje039,g_stje_m.stje039_desc, 
       g_stje_m.stje040,g_stje_m.stje041,g_stje_m.stje042,g_stje_m.stje043,g_stje_m.stje044,g_stje_m.stje045, 
       g_stje_m.stje046,g_stje_m.stje047,g_stje_m.stje048,g_stje_m.stje050,g_stje_m.stje051,g_stje_m.stje051_desc, 
       g_stje_m.stje052,g_stje_m.stje053,g_stje_m.stje053_desc,g_stje_m.stjeownid,g_stje_m.stjeownid_desc, 
       g_stje_m.stjeowndp,g_stje_m.stjeowndp_desc,g_stje_m.stjecrtid,g_stje_m.stjecrtid_desc,g_stje_m.stjecrtdp, 
       g_stje_m.stjecrtdp_desc,g_stje_m.stjecrtdt,g_stje_m.stjemodid,g_stje_m.stjemodid_desc,g_stje_m.stjemoddt, 
       g_stje_m.stjecnfid,g_stje_m.stjecnfid_desc,g_stje_m.stjecnfdt
 
   CASE g_stje_m.stjestus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_stje_m.stjestus
            
            WHEN "N"
               HIDE OPTION "open"
            WHEN "X"
               HIDE OPTION "void"
            WHEN "Y"
               HIDE OPTION "valid"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      
      #end add-point
      
      
	  
      ON ACTION open
         IF cl_auth_chk_act("open") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.open"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION void
         IF cl_auth_chk_act("void") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.void"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION valid
         IF cl_auth_chk_act("valid") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.valid"
            
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "X"
      AND lc_state <> "Y"
      ) OR 
      g_stje_m.stjestus = lc_state OR cl_null(lc_state) THEN
      CLOSE astm801_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   
   #end add-point
   
   LET g_stje_m.stjemodid = g_user
   LET g_stje_m.stjemoddt = cl_get_current()
   LET g_stje_m.stjestus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE stje_t 
      SET (stjestus,stjemodid,stjemoddt) 
        = (g_stje_m.stjestus,g_stje_m.stjemodid,g_stje_m.stjemoddt)     
    WHERE stjeent = g_enterprise AND stje001 = g_stje_m.stje001
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE astm801_master_referesh USING g_stje_m.stje001 INTO g_stje_m.stjesite,g_stje_m.stje004, 
          g_stje_m.stje001,g_stje_m.stje002,g_stje_m.stje003,g_stje_m.stje005,g_stje_m.stje006,g_stje_m.stjestus, 
          g_stje_m.stje007,g_stje_m.stje008,g_stje_m.stje010,g_stje_m.stje009,g_stje_m.stje011,g_stje_m.stje012, 
          g_stje_m.stje013,g_stje_m.stje014,g_stje_m.stje015,g_stje_m.stje016,g_stje_m.stje017,g_stje_m.stje018, 
          g_stje_m.stje049,g_stje_m.stje019,g_stje_m.stje020,g_stje_m.stje021,g_stje_m.stje022,g_stje_m.stje027, 
          g_stje_m.stje028,g_stje_m.stje029,g_stje_m.stje026,g_stje_m.stje023,g_stje_m.stje024,g_stje_m.stje025, 
          g_stje_m.stje030,g_stje_m.stje031,g_stje_m.stje032,g_stje_m.stje033,g_stje_m.stje034,g_stje_m.stje035, 
          g_stje_m.stje036,g_stje_m.stje037,g_stje_m.stje038,g_stje_m.stje039,g_stje_m.stje040,g_stje_m.stje041, 
          g_stje_m.stje042,g_stje_m.stje043,g_stje_m.stje044,g_stje_m.stje045,g_stje_m.stje046,g_stje_m.stje047, 
          g_stje_m.stje048,g_stje_m.stje050,g_stje_m.stje051,g_stje_m.stje052,g_stje_m.stje053,g_stje_m.stjeownid, 
          g_stje_m.stjeowndp,g_stje_m.stjecrtid,g_stje_m.stjecrtdp,g_stje_m.stjecrtdt,g_stje_m.stjemodid, 
          g_stje_m.stjemoddt,g_stje_m.stjecnfid,g_stje_m.stjecnfdt,g_stje_m.stjesite_desc,g_stje_m.stje003_desc, 
          g_stje_m.stje007_desc,g_stje_m.stje008_desc,g_stje_m.stje017_desc,g_stje_m.stje018_desc,g_stje_m.stje019_desc, 
          g_stje_m.stje020_desc,g_stje_m.stje021_desc,g_stje_m.stje022_desc,g_stje_m.stje027_desc,g_stje_m.stje028_desc, 
          g_stje_m.stje029_desc,g_stje_m.stje030_desc,g_stje_m.stje031_desc,g_stje_m.stje032_desc,g_stje_m.stje034_desc, 
          g_stje_m.stje035_desc,g_stje_m.stje036_desc,g_stje_m.stje038_desc,g_stje_m.stje039_desc,g_stje_m.stje051_desc, 
          g_stje_m.stje053_desc,g_stje_m.stjeownid_desc,g_stje_m.stjeowndp_desc,g_stje_m.stjemodid_desc 
 
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_stje_m.stjesite,g_stje_m.stjesite_desc,g_stje_m.stje004,g_stje_m.stje001,g_stje_m.stje002, 
          g_stje_m.stje003,g_stje_m.stje003_desc,g_stje_m.stje005,g_stje_m.stje006,g_stje_m.stjestus, 
          g_stje_m.stje007,g_stje_m.stje007_desc,g_stje_m.stje008,g_stje_m.stje008_desc,g_stje_m.stje010, 
          g_stje_m.stje009,g_stje_m.stje011,g_stje_m.stje012,g_stje_m.stje013,g_stje_m.stje014,g_stje_m.stje015, 
          g_stje_m.stje016,g_stje_m.stje017,g_stje_m.stje017_desc,g_stje_m.stje018,g_stje_m.stje018_desc, 
          g_stje_m.stje049,g_stje_m.stje019,g_stje_m.stje019_desc,g_stje_m.stje020,g_stje_m.stje020_desc, 
          g_stje_m.stje021,g_stje_m.stje021_desc,g_stje_m.stje022,g_stje_m.stje022_desc,g_stje_m.stje027, 
          g_stje_m.stje027_desc,g_stje_m.stje028,g_stje_m.stje028_desc,g_stje_m.stje029,g_stje_m.stje029_desc, 
          g_stje_m.stje026,g_stje_m.stje023,g_stje_m.stje024,g_stje_m.stje025,g_stje_m.stje030,g_stje_m.stje030_desc, 
          g_stje_m.stje031,g_stje_m.stje031_desc,g_stje_m.stje032,g_stje_m.stje032_desc,g_stje_m.stje033, 
          g_stje_m.stje034,g_stje_m.stje034_desc,g_stje_m.stje035,g_stje_m.stje035_desc,g_stje_m.stje036, 
          g_stje_m.stje036_desc,g_stje_m.stje037,g_stje_m.stje038,g_stje_m.stje038_desc,g_stje_m.stje039, 
          g_stje_m.stje039_desc,g_stje_m.stje040,g_stje_m.stje041,g_stje_m.stje042,g_stje_m.stje043, 
          g_stje_m.stje044,g_stje_m.stje045,g_stje_m.stje046,g_stje_m.stje047,g_stje_m.stje048,g_stje_m.stje050, 
          g_stje_m.stje051,g_stje_m.stje051_desc,g_stje_m.stje052,g_stje_m.stje053,g_stje_m.stje053_desc, 
          g_stje_m.stjeownid,g_stje_m.stjeownid_desc,g_stje_m.stjeowndp,g_stje_m.stjeowndp_desc,g_stje_m.stjecrtid, 
          g_stje_m.stjecrtid_desc,g_stje_m.stjecrtdp,g_stje_m.stjecrtdp_desc,g_stje_m.stjecrtdt,g_stje_m.stjemodid, 
          g_stje_m.stjemodid_desc,g_stje_m.stjemoddt,g_stje_m.stjecnfid,g_stje_m.stjecnfid_desc,g_stje_m.stjecnfdt 
 
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   
   #end add-point  
 
   CLOSE astm801_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL astm801_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="astm801.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION astm801_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_stjf_d.getLength() THEN
         LET g_detail_idx = g_stjf_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stjf_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stjf_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail11")
      IF g_detail_idx > g_stjf11_d.getLength() THEN
         LET g_detail_idx = g_stjf11_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stjf11_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stjf11_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail13")
      IF g_detail_idx > g_stjf13_d.getLength() THEN
         LET g_detail_idx = g_stjf13_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stjf13_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stjf13_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 4 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_stjf2_d.getLength() THEN
         LET g_detail_idx = g_stjf2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stjf2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stjf2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 5 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_stjf3_d.getLength() THEN
         LET g_detail_idx = g_stjf3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stjf3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stjf3_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 6 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail4")
      IF g_detail_idx > g_stjf4_d.getLength() THEN
         LET g_detail_idx = g_stjf4_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stjf4_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stjf4_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 7 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail5")
      IF g_detail_idx > g_stjf5_d.getLength() THEN
         LET g_detail_idx = g_stjf5_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stjf5_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stjf5_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 8 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail6")
      IF g_detail_idx > g_stjf6_d.getLength() THEN
         LET g_detail_idx = g_stjf6_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stjf6_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stjf6_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 9 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail7")
      IF g_detail_idx > g_stjf7_d.getLength() THEN
         LET g_detail_idx = g_stjf7_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stjf7_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stjf7_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 10 THEN
      LET g_detail_idx2 = g_curr_diag.getCurrentRow("s_detail9")
      IF g_detail_idx2 > g_stjf9_d.getLength() THEN
         LET g_detail_idx2 = g_stjf9_d.getLength()
      END IF
      IF g_detail_idx2 = 0 AND g_stjf9_d.getLength() <> 0 THEN
         LET g_detail_idx2 = 1
      END IF
      DISPLAY g_detail_idx2 TO FORMONLY.idx
      DISPLAY g_stjf9_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   IF g_current_page = 10 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail8")
      IF g_detail_idx > g_stjf12_d.getLength() THEN
         LET g_detail_idx = g_stjf12_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stjf12_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stjf12_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 11 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail10")
      IF g_detail_idx > g_stjf15_d.getLength() THEN
         LET g_detail_idx = g_stjf15_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stjf15_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stjf15_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 12 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail12")
      IF g_detail_idx > g_stjf14_d.getLength() THEN
         LET g_detail_idx = g_stjf14_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stjf14_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stjf14_d.getLength() TO FORMONLY.cnt
   END IF
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="astm801.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION astm801_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
   IF astm801_fill_chk(10) THEN
      IF (pi_idx = 10 OR pi_idx = 0 ) AND g_stjf_d.getLength() > 0 THEN
               CALL g_stjf9_d.clear()
 
         
         #取得該單身上階單身的idx
         LET g_detail_idx = g_detail_idx_list[1]
         
         LET g_sql = "SELECT  DISTINCT stjgsite,stjgunit,stjgseq1,stjg002,stjg003,stjg004,stjg006  FROM stjg_t", 
                 
                     "",
                     
                     " WHERE stjgent=? AND stjg001=? AND stjgseq=?"
         
         IF NOT cl_null(g_wc2_table10) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table10 CLIPPED
         END IF
         
         LET g_sql = g_sql, " ORDER BY  stjg_t.stjgseq1" 
                            
         #add-point:單身填充前 name="b_fill2.before_fill10"
         IF g_stjf_d[g_detail_idx].stjf016 = '1' THEN
            CALL cl_set_comp_visible('group_26',FALSE)
         ELSE
            CALL cl_set_comp_visible('group_26',TRUE)
         END IF 
         #end add-point
         
         #先清空資料
               CALL g_stjf9_d.clear()
 
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astm801_pb10 FROM g_sql
         DECLARE b_fill_curs10 CURSOR FOR astm801_pb10
         
      #  OPEN b_fill_curs10 USING g_enterprise,g_stje_m.stje001,g_stjf_d[g_detail_idx].stjfseq   #(ver:78) 
 
         LET l_ac = 1
         FOREACH b_fill_curs10 USING g_enterprise,g_stje_m.stje001,g_stjf_d[g_detail_idx].stjfseq INTO g_stjf9_d[l_ac].stjgsite, 
             g_stjf9_d[l_ac].stjgunit,g_stjf9_d[l_ac].stjgseq1,g_stjf9_d[l_ac].stjg002,g_stjf9_d[l_ac].stjg003, 
             g_stjf9_d[l_ac].stjg004,g_stjf9_d[l_ac].stjg006   #(ver:78)
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               EXIT FOREACH
            END IF
            
            #add-point:b_fill段資料填充 name="b_fill2.fill10"
            
            #end add-point
           
            IF l_ac > g_max_rec THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code = 9035 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               EXIT FOREACH
            END IF
            
            LET l_ac = l_ac + 1
            
         END FOREACH
               CALL g_stjf9_d.deleteElement(g_stjf9_d.getLength())
 
      END IF
   END IF
 
 
      
   LET g_stjf9_d_mask_o.* =  g_stjf9_d.*
   FOR l_ac = 1 TO g_stjf9_d.getLength()
      LET g_stjf9_d_mask_o[l_ac].* =  g_stjf9_d[l_ac].*
      CALL astm801_stjg_t_mask()
      LET g_stjf9_d_mask_n[l_ac].* =  g_stjf9_d[l_ac].*
   END FOR
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
    
   LET l_ac = li_ac
   
   CALL astm801_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
 
{</section>}
 
{<section id="astm801.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION astm801_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1')  AND 
      (cl_null(g_wc2_table4) OR g_wc2_table4.trim() = '1=1')  AND 
      (cl_null(g_wc2_table5) OR g_wc2_table5.trim() = '1=1')  AND 
      (cl_null(g_wc2_table6) OR g_wc2_table6.trim() = '1=1')  AND 
      (cl_null(g_wc2_table7) OR g_wc2_table7.trim() = '1=1')  AND 
      (cl_null(g_wc2_table8) OR g_wc2_table8.trim() = '1=1')  AND 
      (cl_null(g_wc2_table9) OR g_wc2_table9.trim() = '1=1')  AND 
      (cl_null(g_wc2_table10) OR g_wc2_table10.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="astm801.status_show" >}
PRIVATE FUNCTION astm801_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="astm801.mask_functions" >}
&include "erp/ast/astm801_mask.4gl"
 
{</section>}
 
{<section id="astm801.signature" >}
   
 
{</section>}
 
{<section id="astm801.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION astm801_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_stje_m.stje001
   LET g_pk_array[1].column = 'stje001'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="astm801.other_dialog" readonly="Y" >}
   
 
{</section>}
 
{<section id="astm801.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION astm801_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL astm801_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_stje_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="astm801.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION astm801_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="astm801.other_function" readonly="Y" >}

################################################################################
# Descriptions...: 变动费用分段扣率显示
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astm801_b_fill2_1()

   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"

   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"

   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
   IF astm801_fill_chk(13) THEN
      IF (pi_idx = 13 OR pi_idx = 0 ) AND g_stjf12_d.getLength() > 0 THEN
         CALL g_stjf15_d.clear()
 
         
         #取得該單身上階單身的idx
         LET g_detail_idx = g_detail_idx_list[10]
         
         LET g_sql = "SELECT  DISTINCT stjgseq1,stjg002,stjg003,stjg005,stjg007  FROM stjg_t", 
                 
                     
                     " WHERE stjgent=? AND stjg001=? AND stjgseq=?"
         
         IF NOT cl_null(g_wc2_table13) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table13 CLIPPED
         END IF
         
         LET g_sql = g_sql, " ORDER BY  stjg_t.stjgseq1" 
                            
         #add-point:單身填充前 name="b_fill2.before_fill9"
         IF g_stjf12_d[g_detail_idx].stjf016_2 = '1' THEN
            CALL cl_set_comp_visible('group_28',FALSE)
         ELSE
            CALL cl_set_comp_visible('group_28',TRUE)
         END IF 
         #end add-point
         
         #先清空資料
         CALL g_stjf15_d.clear()
 
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astm801_pb13 FROM g_sql
         DECLARE b_fill_curs13 CURSOR FOR astm801_pb13
         
         OPEN b_fill_curs13 USING g_enterprise,g_stje_m.stje001,g_stjf12_d[g_detail_idx].stjfseq_2
         LET l_ac = 1
         FOREACH b_fill_curs13 INTO g_stjf15_d[l_ac].stjgseq1_1,g_stjf15_d[l_ac].stjg002_1,
                                    g_stjf15_d[l_ac].stjg003_1,g_stjf15_d[l_ac].stjg005_1,g_stjf15_d[l_ac].stjg007_1  

            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               EXIT FOREACH
            END IF
            
            #add-point:b_fill段資料填充 name="b_fill2.fill9"

            #end add-point
           
            IF l_ac > g_max_rec THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               EXIT FOREACH
            END IF
            
            LET l_ac = l_ac + 1
            
         END FOREACH
         CALL g_stjf15_d.deleteElement(g_stjf15_d.getLength())
 
      END IF
   END IF
 
 
      
   LET g_stjf15_d_mask_o.* =  g_stjf15_d.*
   FOR l_ac = 1 TO g_stjf15_d.getLength()
      LET g_stjf15_d_mask_o[l_ac].* =  g_stjf15_d[l_ac].*
      CALL astm801_stjg_t_mask()
      LET g_stjf15_d_mask_n[l_ac].* =  g_stjf15_d[l_ac].*
   END FOR
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"

   #end add-point
    
   LET l_ac = li_ac
   
   CALL astm801_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
END FUNCTION

################################################################################

################################################################################
PRIVATE FUNCTION astm801_stjesite_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stje_m.stjesite
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_stje_m.stjesite_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stje_m.stjesite_desc
END FUNCTION

################################################################################
 
################################################################################
PRIVATE FUNCTION astm801_stje038_ref()
  SELECT oodbl004 INTO g_stje_m.stje038_desc
    FROM oodbl_t,ooef_t
   WHERE oodblent = g_enterprise
     AND oodbl001 = ooef019 
     AND oodbl002 = g_stje_m.stje038
     AND oodbl003 = g_dlang
     AND ooefent = g_enterprise
     AND ooef001 = g_stje_m.stjesite    
   DISPLAY BY NAME g_stje_m.stje038_desc
END FUNCTION

################################################################################
# Descriptions...: 铺位带值
# Memo...........:
# Date & Author..: 20160331 By geza
# Modify.........:
################################################################################
PRIVATE FUNCTION astm801_stje008_init()
   #抓楼栋，楼层，区域，铺位用途,门牌号,管理品类
   SELECT mhbe003,mhbe004,mhbe005,mhbe010,mhbe011,mhbe009
     INTO g_stje_m.stje019,g_stje_m.stje020,g_stje_m.stje021,g_stje_m.stje022,g_stje_m.stje010,g_stje_m.stje027
     FROM mhbe_t
    WHERE mhbeent = g_enterprise
      AND mhbe001 = g_stje_m.stje008
      AND mhbesite = g_stje_m.stjesite 
      AND mhbestus = 'Y'
   DISPLAY BY NAME g_stje_m.stje019,g_stje_m.stje020,g_stje_m.stje021,g_stje_m.stje022,g_stje_m.stje010,g_stje_m.stje027,g_stje_m.stje028    
    
   LET g_stje_m.stje028 = g_stje_m.stje027   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stje_m.stje027
   CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_stje_m.stje027_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stje_m.stje027_desc
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stje_m.stje028
   CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_stje_m.stje028_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stje_m.stje028_desc
   
   CALL astm801_stje019_ref()
   CALL astm801_stje020_ref()
   CALL astm801_stje021_ref()
   CALL astm801_stje022_ref()
   #抓合同项方案
   #如果铺位不为空，方案为空，按照门店+楼栋/楼层/铺位用途的维度自动抓方案，先按最明细的维度抓，
   #抓取顺序：门店+楼栋/楼层/铺位用途；
   #门店+楼栋+铺位用途；
   #门店+铺位用途；
   #门店；按照这个顺序抓，抓到为止，否则没有设置合同费用项方案
   IF g_stje_m.stje003 IS NULL THEN
      SELECT stha001 INTO g_stje_m.stje003
        FROM stha_t
       WHERE sthaent = g_enterprise
         AND sthastus = 'Y'
         AND sthasite = g_stje_m.stjesite 
         AND stha002 = g_stje_m.stje019
         AND stha003 = g_stje_m.stje020
         AND ((stha004 = g_stje_m.stje022 AND g_stje_m.stje022 IS NOT NULL) OR (stha004 IS NULL AND g_stje_m.stje022 IS NULL))
         AND rownum =1 
      IF g_stje_m.stje003 IS NULL THEN
         SELECT stha001 INTO g_stje_m.stje003
           FROM stha_t
          WHERE sthaent = g_enterprise
            AND sthastus = 'Y'
            AND sthasite = g_stje_m.stjesite 
            AND stha002 = g_stje_m.stje019
            AND ((stha004 = g_stje_m.stje022 AND g_stje_m.stje022 IS NOT NULL) OR (stha004 IS NULL AND g_stje_m.stje022 IS NULL)) 
            AND rownum =1 
          IF g_stje_m.stje003 IS NULL THEN
             SELECT stha001 INTO g_stje_m.stje003
               FROM stha_t
              WHERE sthaent = g_enterprise
                AND sthastus = 'Y'
                AND sthasite = g_stje_m.stjesite 
                AND ((stha004 = g_stje_m.stje022 AND g_stje_m.stje022 IS NOT NULL) OR (stha004 IS NULL AND g_stje_m.stje022 IS NULL)) 
                AND rownum =1 
             IF g_stje_m.stje003 IS NULL THEN
                SELECT stha001 INTO g_stje_m.stje003
                  FROM stha_t
                 WHERE sthaent = g_enterprise
                   AND sthastus = 'Y'
                   AND sthasite = g_stje_m.stjesite  
                   AND rownum =1                      
             END IF   
          END IF  
      END IF  
      DISPLAY BY NAME g_stje_m.stje003
      CALL astm801_stje003_ref()      
   END IF
END FUNCTION

################################################################################

################################################################################
PRIVATE FUNCTION astm801_stje019_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stje_m.stje019
   CALL ap_ref_array2(g_ref_fields,"SELECT mhaal003 FROM mhaal_t WHERE mhaalent='"||g_enterprise||"' AND mhaal001=? AND mhaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_stje_m.stje019_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stje_m.stje019_desc
END FUNCTION

################################################################################

################################################################################
PRIVATE FUNCTION astm801_stje020_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stje_m.stje019
   LET g_ref_fields[2] = g_stje_m.stje020
   CALL ap_ref_array2(g_ref_fields,"SELECT mhabl004 FROM mhabl_t WHERE mhablent='"||g_enterprise||"' AND mhabl001=?  AND mhabl002=? AND mhabl003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_stje_m.stje020_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stje_m.stje020_desc
END FUNCTION

################################################################################

################################################################################
PRIVATE FUNCTION astm801_stje021_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stje_m.stje019
   LET g_ref_fields[2] = g_stje_m.stje020
   LET g_ref_fields[3] = g_stje_m.stje021
   CALL ap_ref_array2(g_ref_fields,"SELECT mhacl005 FROM mhacl_t WHERE mhaclent='"||g_enterprise||"' AND mhacl001=? AND mhacl002=? AND mhacl003=? AND mhacl004='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_stje_m.stje021_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stje_m.stje021_desc
END FUNCTION

################################################################################

################################################################################
PRIVATE FUNCTION astm801_stje022_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stje_m.stje022
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2144' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_stje_m.stje022_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stje_m.stje022_desc
END FUNCTION

################################################################################
# Descriptions...: 供应商带值
# Memo...........:
# Date & Author..: 20160401 By geza
# Modify.........:
################################################################################
PRIVATE FUNCTION astm801_stje007_other()
DEFINE l_staj006   LIKE staj_t.staj006  #幣別   
DEFINE l_staj007   LIKE staj_t.staj007  #稅別
DEFINE l_staj008   LIKE staj_t.staj008  #付款方式
DEFINE l_staj024   LIKE staj_t.staj024  #交易條件
DEFINE l_staj025   LIKE staj_t.staj025  #發票類型
DEFINE l_staj029   LIKE staj_t.staj029  #內外購
DEFINE l_staj030   LIKE staj_t.staj030  #匯率計算基準
DEFINE l_ooef019   LIKE ooef_t.ooef019 #稅區
DEFINE l_success   LIKE type_t.num5
          #币别，税别，付款条件，交易条件，发票类型，匯率計算基準
   SELECT pmab033,pmab034,pmab037,pmab053,pmab056,pmab058
     INTO g_stje_m.stje036,g_stje_m.stje038,g_stje_m.stje034,g_stje_m.stje035,g_stje_m.stje039,g_stje_m.stje037
     FROM pmab_t
    WHERE pmabent = g_enterprise AND pmab001 = g_stje_m.stje007
      AND pmabsite = 'ALL'

    
    DISPLAY BY NAME g_stje_m.stje036,g_stje_m.stje038,
                    g_stje_m.stje034,g_stje_m.stje035,
                    g_stje_m.stje039,g_stje_m.stje037
                    
    CALL astm801_stje035_ref()
    CALL astm801_stje034_ref()
    CALL astm801_stje036_ref()
    CALL astm801_stje038_ref()
    CALL s_desc_get_invoice_type_desc1(g_stje_m.stjesite,g_stje_m.stje039) RETURNING g_stje_m.stje039_desc
    DISPLAY BY NAME g_stje_m.stje039_desc 
    #含发票否
    LET l_ooef019 = ''
    CALL s_tax_get_ooef019(g_stje_m.stjesite) RETURNING l_success,l_ooef019
    SELECT isacud001 INTO g_stje_m.stje040
      FROM isac_t
     WHERE isacent = g_enterprise
       AND isac001 = l_ooef019
       AND isac002 = g_stje_m.stje039
    IF cl_null(g_stje_m.stje040) THEN 
       LET g_stje_m.stje040 = 'N'
    END IF 
    DISPLAY BY NAME g_stje_m.stje040
END FUNCTION

################################################################################

################################################################################
PRIVATE FUNCTION astm801_stje035_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stje_m.stje035
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='238' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_stje_m.stje035_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stje_m.stje035_desc
END FUNCTION

################################################################################

################################################################################
PRIVATE FUNCTION astm801_stje034_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stje_m.stje034
   CALL ap_ref_array2(g_ref_fields,"SELECT ooibl004 FROM ooibl_t WHERE ooiblent='"||g_enterprise||"' AND ooibl002=? AND ooibl003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_stje_m.stje034_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stje_m.stje034_desc
END FUNCTION

################################################################################

################################################################################
PRIVATE FUNCTION astm801_stje036_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stje_m.stje036
   CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_stje_m.stje036_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stje_m.stje036_desc
END FUNCTION

################################################################################
# Descriptions...: 新增定义账期单身
# Date & Author..: 20160401 By geza
# Modify.........:
################################################################################
PRIVATE FUNCTION astm801_stji_insert()
DEFINE r_success   LIKE type_t.num5   
DEFINE l_sql       STRING   
   WHENEVER ERROR CALL cl_err_msg_log
   CALL s_transaction_begin()
   LET r_success = TRUE
   #删除费用编号不存在于stif但是在stji_t的资料
   DELETE FROM stji_t
    WHERE stjient = g_enterprise
      AND stji001 = g_stje_m.stje001
      AND NOT EXISTS (SELECT 1 FROM stjf_t WHERE stjfent = g_enterprise AND stjf001 = g_stje_m.stje001 AND stjf004 = stji002)
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "ins_stji:astm801_ins_stji" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET r_success = FALSE  
   END IF 
   LET l_sql = " INSERT INTO stji_t ( ",
               "             stjient, ",
               "             stjisite, ",
               "             stjiunit, ",
               "             stjiseq, ",   #项次
               "             stji001, ",   #合同
               "             stji002, ",   #费用编号
               "             stji003, ",   #结算方式
               "             stji004, ",   #出账期
               "             stji005, ",   #出账日
               "             stji006, ",   #核算制度
               "             stji007, ",   #纳入结算单否
               "             stji008, ",   #票扣否
               "             stji009 ) ",  #类型
               " SELECT DISTINCT '",g_enterprise,"', ",                
               "                 '",g_stje_m.stjesite,"', ",
               "                 '",g_stje_m.stjesite,"', ",
               "                 ROW_NUMBER() over(order by stjf004)+COALESCE((SELECT MAX(stjiseq) FROM stji_t WHERE stjient = ",g_enterprise,"  AND stji001 = '",g_stje_m.stje001,"' ),0), ",  #项次
               "                 '",g_stje_m.stje001,"', ",    #合同
               "                 stjf004, ",                   #费用编号
               "                 '",g_stje_m.stje031,"', ",    #结算方式
               "                 1, ",                         #出账期 
               "                 1, ",                         #出账日 
               "                 stae005, ",                   #核算制度
               "                 stae011, ",                   #纳入结算单否 
               "                 stae007, ",                   #票扣否
               "                 CASE stjf009 WHEN '2' THEN '2' ELSE '1' END  ",  #类型 
               "   FROM stjf_t LEFT JOIN stae_t ON (stjfent=staeent AND stjf004=stae001) ",
               "  WHERE stjfent = ",g_enterprise," ",
               "    AND stjf001 = '",g_stje_m.stje001,"' ",
               "    AND NOT EXISTS (SELECT 1 FROM stji_t WHERE stjient = stjfent AND stji001 = stjf001 AND stjf004 = stji002)"
   PREPARE astm801_ins_stji FROM l_sql 
   EXECUTE astm801_ins_stji
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "ins_stji:astm801_ins_stji" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET r_success = FALSE
   END IF 
   
   CALL s_transaction_end('Y','0')   
 
   RETURN r_success
END FUNCTION

################################################################################
# Descriptions...: 插入场地信息
# Memo...........:
# Date & Author..: 20160405 By geza
# Modify.........:
################################################################################
PRIVATE FUNCTION astm801_stjj_insert()
DEFINE r_success   LIKE type_t.num5   
DEFINE l_sql       STRING   
   WHENEVER ERROR CALL cl_err_msg_log

   LET r_success = TRUE
   LET l_sql = " INSERT INTO stjj_t ( ",
               "             stjjent, ",
               "             stjjsite, ",
               "             stjjunit, ",
               "             stjjseq, ",   #项次
               "             stjjacti, ",  #有效否
               "             stjj001, ",   #合同
               "             stjj002, ",   #场地编号
               "             stjj003, ",   #建筑面积
               "             stjj004, ",   #测量面积
               "             stjj005, ",   #经营面积
               "             stjj006, ",   #楼栋编号
               "             stjj007, ",   #楼层编号
               "             stjj008, ",   #区域编号
               "             stjj009 ) ",  #合同版本
               " SELECT DISTINCT '",g_enterprise,"', ",                
               "                 '",g_stje_m.stjesite,"', ",
               "                 '",g_stje_m.stjesite,"', ",
               "                 ROW_NUMBER() over(order by mhbf001,mhbf002), ",  #项次
               "                 mhbfstus, ",                  #有效否
               "                 '",g_stje_m.stje001,"', ",    #合同
               "                 mhbf002, ",                   #场地编号
               "                 mhbf007, ",                   #建筑面积
               "                 mhbf008, ",                   #测量面积 
               "                 mhbf009, ",                   #经营面积 
               "                 mhbf004, ",                   #楼栋编号
               "                 mhbf005, ",                   #楼层编号 
               "                 mhbf006, ",                   #区域编号
               "                 mhbf003  ",                   #合同版本 
               "   FROM mhbf_t  ",
               "  WHERE mhbfent = ",g_enterprise," ",
               "    AND mhbf001 = '",g_stje_m.stje008,"' "               
   PREPARE astm801_ins_stjj FROM l_sql 
   EXECUTE astm801_ins_stjj
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "ins_stji:astm801_ins_stjj" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      
      LET r_success = FALSE
   END IF 
   #更新单头的面积
   UPDATE stje_t SET stje023 = (SELECT SUM(stjj003) FROM stjj_t WHERE stjjent =g_enterprise AND stjj001 = g_stje_m.stje001),
                     stje024 = (SELECT SUM(stjj004) FROM stjj_t WHERE stjjent =g_enterprise AND stjj001 = g_stje_m.stje001),
                     stje025 = (SELECT SUM(stjj005) FROM stjj_t WHERE stjjent =g_enterprise AND stjj001 = g_stje_m.stje001)
    WHERE stjeent = g_enterprise AND stje001 = g_stje_m.stje001                         
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "update stje_t" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      
      LET r_success = FALSE
   END IF
   
   RETURN r_success
END FUNCTION

################################################################################
 
################################################################################
PRIVATE FUNCTION astm801_stje003_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stje_m.stje003
   CALL ap_ref_array2(g_ref_fields,"SELECT sthal003 FROM sthal_t WHERE sthalent='"||g_enterprise||"' AND sthal001=? AND sthal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_stje_m.stje003_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_stje_m.stje003_desc
END FUNCTION

################################################################################
# Descriptions...: 维护盖章日期
# Memo...........:
# Usage..........: CALL astm801_upd_stje047()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 20160426 By geza
# Modify.........:
################################################################################
PRIVATE FUNCTION astm801_upd_stje047()
DEFINE l_stjemoddt  LIKE stje_t.stjemoddt
   IF g_stje_m.stje001 IS NULL THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN
   END IF
   
   IF g_stje_m.stje005 NOT MATCHES '[2345]' THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "ast-00634"
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN
   END IF
   
   IF g_stje_m.stje047 IS NOT NULL THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "ast-00718"
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN
   END IF
   
   CALL s_transaction_begin()
   OPEN astm801_cl USING g_enterprise,g_stje_m.stje001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = "OPEN astm801_cl:"
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CLOSE astm801_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF

   #顯示最新的資料
   EXECUTE astm801_master_referesh USING g_stje_m.stje001 INTO g_stje_m.stjesite,g_stje_m.stje004,g_stje_m.stje001, 
       g_stje_m.stje002,g_stje_m.stje003,g_stje_m.stje005,g_stje_m.stje006,g_stje_m.stjestus,g_stje_m.stje007, 
       g_stje_m.stje008,g_stje_m.stje010,g_stje_m.stje009,g_stje_m.stje011,g_stje_m.stje012,g_stje_m.stje013, 
       g_stje_m.stje014,g_stje_m.stje015,g_stje_m.stje016,g_stje_m.stje017,g_stje_m.stje018,g_stje_m.stje049, 
       g_stje_m.stje019,g_stje_m.stje020,g_stje_m.stje021,g_stje_m.stje022,g_stje_m.stje027,g_stje_m.stje028, 
       g_stje_m.stje029,g_stje_m.stje026,g_stje_m.stje023,g_stje_m.stje024,g_stje_m.stje025,g_stje_m.stje030, 
       g_stje_m.stje031,g_stje_m.stje032,g_stje_m.stje033,g_stje_m.stje034,g_stje_m.stje035,g_stje_m.stje036, 
       g_stje_m.stje037,g_stje_m.stje038,g_stje_m.stje039,g_stje_m.stje040,g_stje_m.stje041,g_stje_m.stje042, 
       g_stje_m.stje043,g_stje_m.stje044,g_stje_m.stje045,g_stje_m.stje046,g_stje_m.stje047,g_stje_m.stje048, 
       g_stje_m.stje050,g_stje_m.stje051,g_stje_m.stje052,g_stje_m.stje053,g_stje_m.stjeownid,g_stje_m.stjeowndp, 
       g_stje_m.stjecrtid,g_stje_m.stjecrtdp,g_stje_m.stjecrtdt,g_stje_m.stjemodid,g_stje_m.stjemoddt, 
       g_stje_m.stjecnfid,g_stje_m.stjecnfdt,g_stje_m.stjesite_desc,g_stje_m.stje007_desc,g_stje_m.stje008_desc, 
       g_stje_m.stje017_desc,g_stje_m.stje018_desc,g_stje_m.stje019_desc,g_stje_m.stje020_desc,g_stje_m.stje021_desc, 
       g_stje_m.stje022_desc,g_stje_m.stje027_desc,g_stje_m.stje028_desc,g_stje_m.stje029_desc,g_stje_m.stje030_desc, 
       g_stje_m.stje031_desc,g_stje_m.stje032_desc,g_stje_m.stje034_desc,g_stje_m.stje035_desc,g_stje_m.stje036_desc, 
       g_stje_m.stje038_desc,g_stje_m.stje039_desc,g_stje_m.stje051_desc,g_stje_m.stje053_desc,g_stje_m.stjeownid_desc, 
       g_stje_m.stjeowndp_desc,g_stje_m.stjemodid_desc
   CALL astm801_show()
   
   INPUT BY NAME g_stje_m.stje047,g_stje_m.stje049  ATTRIBUTE(WITHOUT DEFAULTS)

      AFTER FIELD stje047
      
      AFTER INPUT
         #若取消則直接結束
         IF INT_FLAG THEN
            LET INT_FLAG = FALSE
            CLOSE astm801_cl
            CALL s_transaction_end('N','0')
            RETURN
         END IF
   END INPUT
   
   LET l_stjemoddt = cl_get_current()
   UPDATE stje_t
      SET stje047 = g_stje_m.stje047,
          stje049 = g_stje_m.stje049,
          stjemodid = g_user,
          stjemoddt = l_stjemoddt
    WHERE stjeent = g_enterprise
      AND stje001 = g_stje_m.stje001

   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "Upd stje_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CLOSE astm801_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   CLOSE astm801_cl
   CALL s_transaction_end('Y','0')
   SELECT stje047,stje049,stjemodid,stjemoddt INTO g_stje_m.stje047,g_stje_m.stje049,g_stje_m.stjemodid,g_stje_m.stjemoddt
     FROM stje_t
    WHERE stjeent = g_enterprise
      AND stje001 = g_stje_m.stje001
   DISPLAY BY NAME g_stje_m.stje047,g_stje_m.stje049,g_stje_m.stjemodid,g_stje_m.stjemoddt
END FUNCTION

################################################################################
# Descriptions...: 铺位清退
# Memo...........:
# Usage..........: CALL astm801_upd_stje045()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 20160426 By geza
# Modify.........:
################################################################################
PRIVATE FUNCTION astm801_upd_stje045()
DEFINE l_stjemoddt  LIKE stje_t.stjemoddt
DEFINE l_cnt        LIKE type_t.num5  
   IF g_stje_m.stje001 IS NULL THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN
   END IF
   
   IF g_stje_m.stje005 NOT MATCHES '[234]' THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "ast-00719"
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN
   END IF
   
#   IF g_stje_m.stje045 IS NOT NULL THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code = "ast-00718"
#      LET g_errparam.extend = ""
#      LET g_errparam.popup = TRUE
#      CALL cl_err()
#      RETURN
#   END IF
   
   CALL s_transaction_begin()
   OPEN astm801_cl USING g_enterprise,g_stje_m.stje001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = "OPEN astm801_cl:"
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CLOSE astm801_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF

   #顯示最新的資料
   EXECUTE astm801_master_referesh USING g_stje_m.stje001 INTO g_stje_m.stjesite,g_stje_m.stje004,g_stje_m.stje001, 
       g_stje_m.stje002,g_stje_m.stje003,g_stje_m.stje005,g_stje_m.stje006,g_stje_m.stjestus,g_stje_m.stje007, 
       g_stje_m.stje008,g_stje_m.stje010,g_stje_m.stje009,g_stje_m.stje011,g_stje_m.stje012,g_stje_m.stje013, 
       g_stje_m.stje014,g_stje_m.stje015,g_stje_m.stje016,g_stje_m.stje017,g_stje_m.stje018,g_stje_m.stje049, 
       g_stje_m.stje019,g_stje_m.stje020,g_stje_m.stje021,g_stje_m.stje022,g_stje_m.stje027,g_stje_m.stje028, 
       g_stje_m.stje029,g_stje_m.stje026,g_stje_m.stje023,g_stje_m.stje024,g_stje_m.stje025,g_stje_m.stje030, 
       g_stje_m.stje031,g_stje_m.stje032,g_stje_m.stje033,g_stje_m.stje034,g_stje_m.stje035,g_stje_m.stje036, 
       g_stje_m.stje037,g_stje_m.stje038,g_stje_m.stje039,g_stje_m.stje040,g_stje_m.stje041,g_stje_m.stje042, 
       g_stje_m.stje043,g_stje_m.stje044,g_stje_m.stje045,g_stje_m.stje046,g_stje_m.stje047,g_stje_m.stje048, 
       g_stje_m.stje050,g_stje_m.stje051,g_stje_m.stje052,g_stje_m.stje053,g_stje_m.stjeownid,g_stje_m.stjeowndp, 
       g_stje_m.stjecrtid,g_stje_m.stjecrtdp,g_stje_m.stjecrtdt,g_stje_m.stjemodid,g_stje_m.stjemoddt, 
       g_stje_m.stjecnfid,g_stje_m.stjecnfdt,g_stje_m.stjesite_desc,g_stje_m.stje007_desc,g_stje_m.stje008_desc, 
       g_stje_m.stje017_desc,g_stje_m.stje018_desc,g_stje_m.stje019_desc,g_stje_m.stje020_desc,g_stje_m.stje021_desc, 
       g_stje_m.stje022_desc,g_stje_m.stje027_desc,g_stje_m.stje028_desc,g_stje_m.stje029_desc,g_stje_m.stje030_desc, 
       g_stje_m.stje031_desc,g_stje_m.stje032_desc,g_stje_m.stje034_desc,g_stje_m.stje035_desc,g_stje_m.stje036_desc, 
       g_stje_m.stje038_desc,g_stje_m.stje039_desc,g_stje_m.stje051_desc,g_stje_m.stje053_desc,g_stje_m.stjeownid_desc, 
       g_stje_m.stjeowndp_desc,g_stje_m.stjemodid_desc
   CALL astm801_show()
   
   INPUT BY NAME g_stje_m.stje045  ATTRIBUTE(WITHOUT DEFAULTS)

      AFTER FIELD stje045
         IF g_stje_m.stje045 IS NOT NULL THEN
            #mark by geza 20160816 #160728-00006#26(S)
#            IF g_stje_m.stje045 < g_today THEN
#               INITIALIZE g_errparam TO NULL
#               LET g_errparam.code = "ast-00720"
#               LET g_errparam.extend = g_stje_m.stje045
#               LET g_errparam.popup = TRUE
#               CALL cl_err()
#               NEXT FIELD CURRENT 
#            END IF
            #mark by geza 20160816 #160728-00006#26(E)
            #add by geza 20160816 #160728-00006#26(S)
            #astm801，清退日期可以小于今天，且大于清退日期没有销售和收款记录
            LET l_cnt = 0
            SELECT COUNT(*) INTO l_cnt
              FROM rtja_t
             WHERE rtjaent = g_enterprise
               AND rtja105 = g_stje_m.stje001
               AND rtjastus <> 'X'
               AND rtjadocdt > g_stje_m.stje045
            IF l_cnt > 0 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "" 
               LET g_errparam.replace[1] = g_stje_m.stje001
               LET g_errparam.code   = "ast-00840"
               LET g_errparam.popup  = TRUE
               CALL cl_err()
               NEXT FIELD stje045
            END IF
            LET l_cnt = 0
            SELECT COUNT(*) INTO l_cnt
              FROM rtjf_t,rtja_t
             WHERE rtjfent = g_enterprise
               AND rtjfent = rtjaent 
               AND rtjfdocno = rtjadocno
               AND rtja105 = g_stje_m.stje001
               AND rtjastus <> 'X'
               AND rtjf025 > g_stje_m.stje045
            IF l_cnt > 0 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "" 
               LET g_errparam.replace[1] = g_stje_m.stje001
               LET g_errparam.code   = "ast-00840"
               LET g_errparam.popup  = TRUE
               CALL cl_err()
               NEXT FIELD stje045
            END IF
            #add by geza 20160816 #160728-00006#26(E)
            IF g_stje_m.stje045 < g_stje_m.stje042 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "ast-00720"
               LET g_errparam.extend = g_stje_m.stje045
               LET g_errparam.popup = TRUE
               CALL cl_err()
               NEXT FIELD CURRENT 
            END IF 
            IF g_stje_m.stje043 IS NOT NULL THEN
               IF g_stje_m.stje045 > g_stje_m.stje043 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "ast-00720"
                  LET g_errparam.extend = g_stje_m.stje045
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  NEXT FIELD CURRENT 
               END IF
            ELSE
               IF g_stje_m.stje045 > g_stje_m.stje012 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "ast-00720"
                  LET g_errparam.extend = g_stje_m.stje045
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  NEXT FIELD CURRENT 
               END IF 
            END IF
         END IF
      AFTER INPUT
         #若取消則直接結束
         IF INT_FLAG THEN
            LET INT_FLAG = FALSE
            CLOSE astm801_cl
            CALL s_transaction_end('N','0')
            RETURN
         END IF
   END INPUT
      
   LET l_stjemoddt = cl_get_current()
   UPDATE stje_t
      SET stje045 = g_stje_m.stje045,
          stje005 = '6',
          stjemodid = g_user,
          stjemoddt = l_stjemoddt
    WHERE stjeent = g_enterprise
      AND stje001 = g_stje_m.stje001

   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "Upd stje_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CLOSE astm801_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   CLOSE astm801_cl
   CALL s_transaction_end('Y','0')
   SELECT stje045,stje005,stjemodid,stjemoddt INTO g_stje_m.stje045,g_stje_m.stje005,g_stje_m.stjemodid,g_stje_m.stjemoddt
     FROM stje_t
    WHERE stjeent = g_enterprise
      AND stje001 = g_stje_m.stje001
   DISPLAY BY NAME g_stje_m.stje045,g_stje_m.stje005,g_stje_m.stjemodid,g_stje_m.stjemoddt
END FUNCTION

################################################################################
# Descriptions...: 取消铺位清退
# Memo...........:
# Usage..........: CALL astm801_upd_stje045_cancel()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 20160426 By geza
# Modify.........:
################################################################################
PRIVATE FUNCTION astm801_upd_stje045_cancel()
DEFINE l_stjemoddt  LIKE stje_t.stjemoddt
DEFINE l_stje005    LIKE stje_t.stje005
DEFINE l_cnt        LIKE type_t.num5
DEFINE l_success    LIKE type_t.num5
DEFINE l_errno      LIKE type_t.chr1000
   IF g_stje_m.stje001 IS NULL THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN
   END IF
   
   IF g_stje_m.stje005 <> '6'  THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "ast-00721"
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN
   END IF
   #该合同在合同申请档有已经审核的终止申请单或者astt805存在审核的单据不能取消清退
   LET l_cnt = 0 
   SELECT COUNT(*) INTO l_cnt
     FROM stie_t
    WHERE stieent = g_enterprise
      AND stie001 = g_stje_m.stje001
      AND stie000 = 'D'
      AND stiestus <> 'TR' AND stiestus <> 'FR' 
   IF l_cnt > 0  THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "ast-00722"
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN
   END IF 
   LET l_cnt = 0 
   SELECT COUNT(*) INTO l_cnt
     FROM stem_t
    WHERE stement = g_enterprise
      AND stem001 = g_stje_m.stje001
      AND stem000 = 'astt805'
      AND stemstus <> 'X' 
   IF l_cnt > 0  THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "ast-00723"
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN
   END IF  
   #清退日期+1天~租赁结束日期之间，有没有其他合同或者预租协议有签约此铺位，如果有不可以取消清退！
   #判断是否有重叠的合同和预租协议
   CALL s_astt801_astt812_chk('D','',g_stje_m.stje001) RETURNING l_success,l_errno
   IF NOT l_success THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = l_errno
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN
   END IF
#   LET l_cnt = 0 
#   IF g_stje_m.stje043 IS NOT NULL THEN
#      SELECT COUNT(*) INTO l_cnt
#        FROM stje_t
#       WHERE stjeent = g_enterprise
#         AND stje001 <> g_stje_m.stje001
#         AND stje008 = g_stje_m.stje008
#         AND ((stje011 >= g_stje_m.stje011 AND stje011 <= g_stje_m.stje043) 
#          OR ( stje012 >= g_stje_m.stje011 AND stje012 <= g_stje_m.stje043)
#          OR ( stje043 >= g_stje_m.stje011 AND stje043 <= g_stje_m.stje043 AND stje043 IS NOT NULL)
#          )
#   ELSE
#      SELECT COUNT(*) INTO l_cnt
#        FROM stje_t
#       WHERE stjeent = g_enterprise
#         AND stje001 <> g_stje_m.stje001
#         AND stje008 = g_stje_m.stje008
#         AND ((stje011 >= g_stje_m.stje011 AND stje011 <= g_stje_m.stje012) 
#          OR ( stje012 >= g_stje_m.stje011 AND stje012 <= g_stje_m.stje012)
#          OR ( stje043 >= g_stje_m.stje011 AND stje043 <= g_stje_m.stje012 AND stje043 IS NOT NULL) )  
#   END IF
#   IF l_cnt > 0  THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code = "ast-00724"
#      LET g_errparam.extend = ""
#      LET g_errparam.popup = TRUE
#      CALL cl_err()
#      RETURN
#   END IF  
#   
#   LET l_cnt = 0 
#   IF g_stje_m.stje043 IS NOT NULL THEN
#      SELECT COUNT(*) INTO l_cnt
#        FROM stic_t
#       WHERE sticent = g_enterprise
#         AND stic002 <> g_stje_m.stje007
#         AND stic010 = g_stje_m.stje008
#         AND ((stic004 >= g_stje_m.stje011 AND stic004 <= g_stje_m.stje043) 
#          OR ( stic005 >= g_stje_m.stje011 AND stic005 <= g_stje_m.stje043))
#   ELSE
#      SELECT COUNT(*) INTO l_cnt
#        FROM stic_t
#       WHERE sticent = g_enterprise
#         AND stic002 <> g_stje_m.stje007
#         AND stic010 = g_stje_m.stje008
#         AND ((stic004 >= g_stje_m.stje011 AND stic004 <= g_stje_m.stje012) 
#          OR ( stic005 >= g_stje_m.stje011 AND stic005 <= g_stje_m.stje012))
#   END IF
#   IF l_cnt > 0  THEN
#      INITIALIZE g_errparam TO NULL
#      LET g_errparam.code = "ast-00725"
#      LET g_errparam.extend = ""
#      LET g_errparam.popup = TRUE
#      CALL cl_err()
#      RETURN
#   END IF
   
   CALL s_transaction_begin()
            
   LET l_stjemoddt = cl_get_current()
   #如果合同租赁开始日期大于今天，合同状态更新为2.合同已审核；
   #如果延期日期不为空，合同状态更新为4.合同已延期；
   #其他情况更新为3.合同已生效；
   LET l_stje005 = '3'
   IF g_stje_m.stje011 >= g_today THEN
      LET l_stje005 = '2'
   END IF
   IF g_stje_m.stje043 IS NOT NULL THEN
      LET l_stje005 = '4'
   END IF
   UPDATE stje_t
      SET stje045 = '',
          stje005 = l_stje005,
          stjemodid = g_user,
          stjemoddt = l_stjemoddt
    WHERE stjeent = g_enterprise
      AND stje001 = g_stje_m.stje001

   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "Upd stje_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CLOSE astm801_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   CALL s_transaction_end('Y','0')
   SELECT stje045,stje005,stjemodid,stjemoddt INTO g_stje_m.stje045,g_stje_m.stje005,g_stje_m.stjemodid,g_stje_m.stjemoddt
     FROM stje_t
    WHERE stjeent = g_enterprise
      AND stje001 = g_stje_m.stje001
   DISPLAY BY NAME g_stje_m.stje045,g_stje_m.stje005,g_stje_m.stjemodid,g_stje_m.stjemoddt
END FUNCTION

################################################################################
# Descriptions...: 日核算显示
# Memo...........:
# Usage..........: CALL astm801_b_fill_1()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 20160427 By geza
# Modify.........:
################################################################################
PRIVATE FUNCTION astm801_b_fill_1()
DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"

   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"

   #end add-point
   CALL g_stjf11_d.clear()
   LET li_ac = l_ac 
   
#   IF g_detail_idx <= 0 THEN
#      RETURN
#   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
          
   #取得該單身上階單身的idx
   LET g_detail_idx = g_detail_idx_list[9]
   
   IF g_detail_idx IS NULL OR g_detail_idx <= 0 THEN
      LET g_detail_idx = 1
   END IF
   
   LET g_sql = "SELECT  DISTINCT stjnsite,stjnunit,stjnseq,stjn002,stjn004,stjn003,stjn005,stjn006, 
             stjn007,stjn008,stjn009,stjn010,t2.stael003 FROM stjn_t",                        
               " LEFT JOIN stael_t t2 ON t2.staelent='"||g_enterprise||"' AND t2.stael001=stjn005 AND t2.stael002='"||g_dlang||"' ", 
                     " WHERE stjnent=? AND stjn001=?"  
   IF g_stjf7_d.getLength() > 0 AND g_stjf7_d[g_detail_idx].stjmseq IS NOT NULL THEN
      LET g_sql = g_sql CLIPPED," AND stjn002 BETWEEN '",g_stjf7_d[g_detail_idx].stjm005,"' AND '",g_stjf7_d[g_detail_idx].stjm006,"' AND stjn005 = '",g_stjf7_d[g_detail_idx].stjm003,"'"
   END IF
   IF NOT cl_null(g_wc2_table2) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
   END IF
   LET g_sql = g_sql, " ORDER BY stjn_t.stjnseq"

   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE astm801_stjn FROM g_sql
   DECLARE b_fill_stjn CURSOR FOR astm801_stjn
    
   LET l_ac = 1
   
   OPEN b_fill_stjn USING g_enterprise,g_stje_m.stje001
                                            
   FOREACH b_fill_stjn INTO g_stjf11_d[l_ac].stjnsite,g_stjf11_d[l_ac].stjnunit,g_stjf11_d[l_ac].stjnseq, 
          g_stjf11_d[l_ac].stjn002,g_stjf11_d[l_ac].stjn004,g_stjf11_d[l_ac].stjn003,g_stjf11_d[l_ac].stjn005, 
          g_stjf11_d[l_ac].stjn006,g_stjf11_d[l_ac].stjn007,g_stjf11_d[l_ac].stjn008,g_stjf11_d[l_ac].stjn009, 
          g_stjf11_d[l_ac].stjn010,g_stjf11_d[l_ac].stjn005_desc
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF   
  
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = l_ac
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
      
      LET l_ac = l_ac + 1
      
   END FOREACH
   CALL g_stjf11_d.deleteElement(g_stjf11_d.getLength())
      
   LET g_stjf11_d_mask_o.* =  g_stjf11_d.*
   FOR l_ac = 1 TO g_stjf11_d.getLength()
      LET g_stjf11_d_mask_o[l_ac].* =  g_stjf11_d[l_ac].*
      CALL astm801_stjn_t_mask()
      LET g_stjf11_d_mask_o[l_ac].* =  g_stjf11_d[l_ac].*
   END FOR
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"

   #end add-point
    
   LET l_ac = li_ac
   
   CALL astm801_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
#   DISPLAY ARRAY g_stjf11_d TO s_detail11.* ATTRIBUTES(COUNT=g_rec_b)  
#             
#      BEFORE DISPLAY
#         EXIT DISPLAY
#   END DISPLAY
   
END FUNCTION

 
{</section>}
 
