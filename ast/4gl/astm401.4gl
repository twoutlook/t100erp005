#該程式未解開Section, 採用最新樣板產出!
{<section id="astm401.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0007(2017-01-16 11:52:10), PR版次:0007(1900-01-01 00:00:00)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000138
#+ Filename...: astm401
#+ Description: 專櫃合約維護作業
#+ Creator....: 01533(2015-05-05 22:16:09)
#+ Modifier...: 06540 -SD/PR- 00000
 
{</section>}
 
{<section id="astm401.global" >}
#應用 t01 樣板自動產生(Version:79)
#add-point:填寫註解說明 name="global.memo" 
#Memos
#161006-00008#3   2016/10/18 by sakura 整批修改組織
#161024-00025#4   2016/10/24 by 08172   组织调整
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_stfa_m        RECORD
       stfaunit LIKE stfa_t.stfaunit, 
   stfaunit_desc LIKE type_t.chr80, 
   stfasite LIKE stfa_t.stfasite, 
   stfasite_desc LIKE type_t.chr80, 
   stfa001 LIKE stfa_t.stfa001, 
   stfa002 LIKE stfa_t.stfa002, 
   stfa003 LIKE stfa_t.stfa003, 
   stfa004 LIKE stfa_t.stfa004, 
   stfa009 LIKE stfa_t.stfa009, 
   stfastus LIKE stfa_t.stfastus, 
   stfa010 LIKE stfa_t.stfa010, 
   stfa010_desc LIKE type_t.chr80, 
   stfa010_desc_desc LIKE type_t.chr80, 
   stfa005 LIKE stfa_t.stfa005, 
   stfal003 LIKE type_t.chr500, 
   stfal004 LIKE type_t.chr500, 
   stfa007 LIKE stfa_t.stfa007, 
   stfa008 LIKE stfa_t.stfa008, 
   stfa047 LIKE stfa_t.stfa047, 
   stfa047_desc LIKE type_t.chr80, 
   stfa048 LIKE stfa_t.stfa048, 
   stfa048_desc LIKE type_t.chr80, 
   stfa044 LIKE stfa_t.stfa044, 
   stfa044_desc LIKE type_t.chr80, 
   stfa051 LIKE stfa_t.stfa051, 
   stfa051_desc LIKE type_t.chr80, 
   stfa011 LIKE stfa_t.stfa011, 
   stfa011_desc LIKE type_t.chr80, 
   stfa012 LIKE stfa_t.stfa012, 
   stfa012_desc LIKE type_t.chr80, 
   stfa033 LIKE stfa_t.stfa033, 
   stfa033_desc LIKE type_t.chr80, 
   stfa034 LIKE stfa_t.stfa034, 
   stfa034_desc LIKE type_t.chr80, 
   stfa036 LIKE stfa_t.stfa036, 
   stfa036_desc LIKE type_t.chr80, 
   stfa037 LIKE stfa_t.stfa037, 
   stfa037_desc LIKE type_t.chr80, 
   stfa038 LIKE stfa_t.stfa038, 
   stfa038_desc LIKE type_t.chr80, 
   stfa045 LIKE type_t.chr500, 
   stfa045_desc LIKE type_t.chr80, 
   stfa046 LIKE type_t.chr500, 
   stfa029 LIKE stfa_t.stfa029, 
   stfa030 LIKE stfa_t.stfa030, 
   stfa032 LIKE stfa_t.stfa032, 
   stfa032_desc LIKE type_t.chr80, 
   stfa035 LIKE stfa_t.stfa035, 
   stfa035_desc LIKE type_t.chr80, 
   stfa050 LIKE stfa_t.stfa050, 
   stfa028 LIKE stfa_t.stfa028, 
   stfa057 LIKE type_t.chr1, 
   stfa058 LIKE type_t.chr1, 
   stfa039 LIKE stfa_t.stfa039, 
   stfa040 LIKE stfa_t.stfa040, 
   stfa052 LIKE stfa_t.stfa052, 
   next_b LIKE type_t.dat, 
   stfa013 LIKE stfa_t.stfa013, 
   stfa013_desc LIKE type_t.chr80, 
   stfa014 LIKE stfa_t.stfa014, 
   stfa014_desc LIKE type_t.chr80, 
   stfa015 LIKE stfa_t.stfa015, 
   stfa015_desc LIKE type_t.chr80, 
   stfa016 LIKE stfa_t.stfa016, 
   stfa006 LIKE stfa_t.stfa006, 
   stfa006_desc LIKE type_t.chr80, 
   stfa053 LIKE stfa_t.stfa053, 
   stfa055 LIKE stfa_t.stfa055, 
   stfa017 LIKE stfa_t.stfa017, 
   stfa021 LIKE stfa_t.stfa021, 
   stfa024 LIKE stfa_t.stfa024, 
   stfa018 LIKE stfa_t.stfa018, 
   stfa022 LIKE stfa_t.stfa022, 
   stfa025 LIKE stfa_t.stfa025, 
   stfa019 LIKE stfa_t.stfa019, 
   stfa023 LIKE stfa_t.stfa023, 
   stfa026 LIKE stfa_t.stfa026, 
   stfa020 LIKE stfa_t.stfa020, 
   stfa049 LIKE stfa_t.stfa049, 
   stfa056 LIKE stfa_t.stfa056, 
   stfa054 LIKE stfa_t.stfa054, 
   stfa027 LIKE stfa_t.stfa027, 
   stfa031 LIKE stfa_t.stfa031, 
   stfa043 LIKE stfa_t.stfa043, 
   stfaownid LIKE stfa_t.stfaownid, 
   stfaownid_desc LIKE type_t.chr80, 
   stfaowndp LIKE stfa_t.stfaowndp, 
   stfaowndp_desc LIKE type_t.chr80, 
   stfacrtid LIKE stfa_t.stfacrtid, 
   stfacrtid_desc LIKE type_t.chr80, 
   stfacrtdp LIKE stfa_t.stfacrtdp, 
   stfacrtdp_desc LIKE type_t.chr80, 
   stfacrtdt LIKE stfa_t.stfacrtdt, 
   stfamodid LIKE stfa_t.stfamodid, 
   stfamodid_desc LIKE type_t.chr80, 
   stfamoddt LIKE stfa_t.stfamoddt, 
   stfacnfid LIKE stfa_t.stfacnfid, 
   stfacnfid_desc LIKE type_t.chr80, 
   stfacnfdt LIKE stfa_t.stfacnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_stfb_d        RECORD
       stfbseq LIKE stfb_t.stfbseq, 
   stfb002 LIKE stfb_t.stfb002, 
   stfb002_desc LIKE type_t.chr500, 
   stfb018 LIKE stfb_t.stfb018, 
   stfb019 LIKE stfb_t.stfb019, 
   stfb003 LIKE stfb_t.stfb003, 
   stfb004 LIKE stfb_t.stfb004, 
   stfb005 LIKE stfb_t.stfb005, 
   stfb006 LIKE stfb_t.stfb006, 
   stfb007 LIKE stfb_t.stfb007, 
   stfb020 LIKE stfb_t.stfb020, 
   stfb008 LIKE stfb_t.stfb008, 
   stfb008_desc LIKE type_t.chr500, 
   stfb009 LIKE stfb_t.stfb009, 
   stfb009_desc LIKE type_t.chr500, 
   stfb010 LIKE stfb_t.stfb010, 
   stfb011 LIKE stfb_t.stfb011, 
   stfb012 LIKE stfb_t.stfb012, 
   stfb013 LIKE stfb_t.stfb013, 
   stfb014 LIKE stfb_t.stfb014, 
   stfb026 LIKE stfb_t.stfb026, 
   stfb015 LIKE stfb_t.stfb015, 
   stfb016 LIKE stfb_t.stfb016, 
   stfb017 LIKE stfb_t.stfb017, 
   stfb021 LIKE stfb_t.stfb021, 
   stfb022 LIKE stfb_t.stfb022, 
   stfb023 LIKE stfb_t.stfb023, 
   stfb024 LIKE stfb_t.stfb024, 
   stfb025 LIKE stfb_t.stfb025, 
   stfbsite LIKE stfb_t.stfbsite, 
   stfbunit LIKE stfb_t.stfbunit
       END RECORD
PRIVATE TYPE type_g_stfb10_d RECORD
       stfkunit LIKE type_t.chr10, 
   stfksite LIKE type_t.chr10, 
   stfkseq LIKE type_t.chr500, 
   stfk002 LIKE type_t.chr10, 
   stfk002_desc LIKE type_t.chr500, 
   stfk020 LIKE type_t.chr1, 
   stfk021 LIKE type_t.chr1, 
   stfk003 LIKE type_t.chr10, 
   stfk004 LIKE type_t.chr10, 
   stfk018 LIKE type_t.chr10, 
   stfk019 LIKE type_t.chr10, 
   stfk019_desc LIKE type_t.chr500, 
   stfk005 LIKE type_t.chr10, 
   stfk006 LIKE type_t.chr10, 
   stfk007 LIKE type_t.chr10, 
   stfk008 LIKE type_t.chr10, 
   stfk008_desc LIKE type_t.chr500, 
   stfk009 LIKE type_t.chr10, 
   stfk009_desc LIKE type_t.chr500, 
   stfk010 LIKE type_t.num20_6, 
   stfk011 LIKE type_t.num20_6, 
   stfk012 LIKE type_t.num20_6, 
   stfk013 LIKE stfk_t.stfk013, 
   stfk014 LIKE stfk_t.stfk014, 
   stfkacti LIKE type_t.chr1, 
   stfk015 LIKE stfk_t.stfk015, 
   stfk016 LIKE stfk_t.stfk016, 
   stfk017 LIKE stfk_t.stfk017, 
   stfk022 LIKE stfk_t.stfk022, 
   stfk023 LIKE stfk_t.stfk023, 
   stfk024 LIKE stfk_t.stfk024, 
   stfk025 LIKE stfk_t.stfk025, 
   stfk026 LIKE stfk_t.stfk026
       END RECORD
PRIVATE TYPE type_g_stfb11_d RECORD
       stflunit LIKE type_t.chr10, 
   stflsite LIKE type_t.chr10, 
   stflacti LIKE type_t.chr1, 
   stflseq LIKE type_t.num10, 
   stfl002 LIKE type_t.chr10, 
   stfl002_desc LIKE type_t.chr500, 
   stfl003 LIKE type_t.chr10, 
   stfl004 LIKE type_t.chr10, 
   stfl005 LIKE type_t.chr1, 
   stfl006 LIKE type_t.chr1, 
   stfl007 LIKE type_t.num20_6, 
   stfl008 LIKE type_t.num10, 
   stfl009 LIKE type_t.num20_6
       END RECORD
PRIVATE TYPE type_g_stfb12_d RECORD
       stfwunit LIKE stfw_t.stfwunit, 
   stfwsite LIKE stfw_t.stfwsite, 
   stfwseq LIKE stfw_t.stfwseq, 
   stfw002 LIKE stfw_t.stfw002, 
   stfw003 LIKE stfw_t.stfw003, 
   stfw004 LIKE stfw_t.stfw004, 
   stfw004_desc LIKE type_t.chr500, 
   stfw005 LIKE stfw_t.stfw005, 
   stfw006 LIKE stfw_t.stfw006, 
   stfw007 LIKE stfw_t.stfw007, 
   stfw008 LIKE stfw_t.stfw008, 
   stfwacti LIKE stfw_t.stfwacti
       END RECORD
PRIVATE TYPE type_g_stfb2_d RECORD
       stfcseq LIKE stfc_t.stfcseq, 
   stfcacti LIKE stfc_t.stfcacti, 
   stfc024 LIKE stfc_t.stfc024, 
   stfc002 LIKE stfc_t.stfc002, 
   stfc003 LIKE stfc_t.stfc003, 
   stfc025 LIKE stfc_t.stfc025, 
   stfc004 LIKE stfc_t.stfc004, 
   stfc004_desc LIKE type_t.chr500, 
   stfc005 LIKE stfc_t.stfc005, 
   stfc005_desc LIKE type_t.chr500, 
   stfc006 LIKE stfc_t.stfc006, 
   stfc006_desc LIKE type_t.chr500, 
   stfc007 LIKE stfc_t.stfc007, 
   stfc007_desc LIKE type_t.chr500, 
   stfc008 LIKE stfc_t.stfc008, 
   stfc009 LIKE stfc_t.stfc009, 
   stfc009_desc LIKE type_t.chr500, 
   stfc026 LIKE stfc_t.stfc026, 
   stfc027 LIKE stfc_t.stfc027, 
   stfc010 LIKE stfc_t.stfc010, 
   stfc011 LIKE stfc_t.stfc011, 
   stfc012 LIKE stfc_t.stfc012, 
   stfc013 LIKE stfc_t.stfc013, 
   stfc014 LIKE stfc_t.stfc014, 
   stfc015 LIKE stfc_t.stfc015, 
   stfc015_desc LIKE type_t.chr500, 
   stfc016 LIKE stfc_t.stfc016, 
   stfc016_desc LIKE type_t.chr500, 
   stfc017 LIKE stfc_t.stfc017, 
   stfc018 LIKE stfc_t.stfc018, 
   stfc019 LIKE stfc_t.stfc019, 
   stfc020 LIKE stfc_t.stfc020, 
   stfc021 LIKE stfc_t.stfc021, 
   stfc022 LIKE stfc_t.stfc022, 
   stfc023 LIKE stfc_t.stfc023, 
   stfcsite LIKE stfc_t.stfcsite, 
   stfcunit LIKE stfc_t.stfcunit
       END RECORD
PRIVATE TYPE type_g_stfb3_d RECORD
       stfe002 LIKE stfe_t.stfe002, 
   stfeseq LIKE stfe_t.stfeseq, 
   stfe003 LIKE stfe_t.stfe003, 
   stfe003_desc LIKE type_t.chr500, 
   stfe004 LIKE stfe_t.stfe004, 
   stfe005 LIKE stfe_t.stfe005, 
   stfe006 LIKE stfe_t.stfe006, 
   stfe012 LIKE stfe_t.stfe012, 
   stfe007 LIKE stfe_t.stfe007, 
   stfe008 LIKE stfe_t.stfe008, 
   stfe009 LIKE stfe_t.stfe009, 
   stfe010 LIKE stfe_t.stfe010, 
   stfe011 LIKE stfe_t.stfe011, 
   stfesite LIKE stfe_t.stfesite, 
   stfeunit LIKE stfe_t.stfeunit
       END RECORD
PRIVATE TYPE type_g_stfb4_d RECORD
       stfgseq LIKE stfg_t.stfgseq, 
   stfg003 LIKE stfg_t.stfg003, 
   stfg003_desc LIKE type_t.chr500, 
   stfg002 LIKE stfg_t.stfg002, 
   stfg002_desc LIKE type_t.chr500, 
   stfg004 LIKE stfg_t.stfg004, 
   stfg005 LIKE stfg_t.stfg005, 
   stfgacti LIKE stfg_t.stfgacti, 
   stfgsite LIKE stfg_t.stfgsite, 
   stfgunit LIKE stfg_t.stfgunit
       END RECORD
PRIVATE TYPE type_g_stfb5_d RECORD
       stfhseq LIKE stfh_t.stfhseq, 
   stfh002 LIKE stfh_t.stfh002, 
   stfh003 LIKE stfh_t.stfh003, 
   stfhacti LIKE stfh_t.stfhacti, 
   stfhsite LIKE stfh_t.stfhsite, 
   stfhunit LIKE stfh_t.stfhunit
       END RECORD
PRIVATE TYPE type_g_stfb6_d RECORD
       stfiseq LIKE stfi_t.stfiseq, 
   stfi002 LIKE stfi_t.stfi002, 
   stfi003 LIKE stfi_t.stfi003, 
   stfi003_desc LIKE type_t.chr500, 
   stfi005 LIKE stfi_t.stfi005, 
   stfi006 LIKE stfi_t.stfi006, 
   stfi004 LIKE stfi_t.stfi004, 
   stfi007 LIKE stfi_t.stfi007, 
   stfi010 LIKE stfi_t.stfi010, 
   stfi010_desc LIKE type_t.chr500, 
   stfi008 LIKE stfi_t.stfi008, 
   stfi009 LIKE stfi_t.stfi009, 
   stfiacti LIKE stfi_t.stfiacti, 
   stfi011 LIKE stfi_t.stfi011, 
   stfi012 LIKE stfi_t.stfi012, 
   stfisite LIKE stfi_t.stfisite, 
   stfiunit LIKE stfi_t.stfiunit
       END RECORD
PRIVATE TYPE type_g_stfb7_d RECORD
       stfjseq LIKE stfj_t.stfjseq, 
   stfj002 LIKE stfj_t.stfj002, 
   stfj003 LIKE stfj_t.stfj003, 
   stfj004 LIKE stfj_t.stfj004, 
   stfj005 LIKE stfj_t.stfj005, 
   stfj006 LIKE stfj_t.stfj006, 
   stfjsite LIKE stfj_t.stfjsite, 
   stfjunit LIKE stfj_t.stfjunit
       END RECORD
PRIVATE TYPE type_g_stfb8_d RECORD
       stfdseq1 LIKE stfd_t.stfdseq1, 
   stfd002 LIKE stfd_t.stfd002, 
   stfd003 LIKE stfd_t.stfd003, 
   stfd003_desc LIKE type_t.chr500, 
   stfd004 LIKE stfd_t.stfd004, 
   stfd004_desc LIKE type_t.chr500, 
   stfd005 LIKE stfd_t.stfd005, 
   stfd006 LIKE stfd_t.stfd006, 
   stfd007 LIKE stfd_t.stfd007, 
   stfd008 LIKE stfd_t.stfd008, 
   stfd009 LIKE stfd_t.stfd009, 
   stfdsite LIKE stfd_t.stfdsite, 
   stfdunit LIKE stfd_t.stfdunit
       END RECORD
PRIVATE TYPE type_g_stfb9_d RECORD
       stffseq LIKE stff_t.stffseq, 
   stff002 LIKE stff_t.stff002, 
   stff003 LIKE stff_t.stff003, 
   stff004 LIKE stff_t.stff004, 
   stff005 LIKE stff_t.stff005, 
   stff005_desc LIKE type_t.chr500, 
   stff006 LIKE stff_t.stff006, 
   stff007 LIKE stff_t.stff007, 
   stff010 LIKE stff_t.stff010, 
   stff008 LIKE stff_t.stff008, 
   stff011 LIKE stff_t.stff011, 
   stff009 LIKE stff_t.stff009, 
   stffsite LIKE stff_t.stffsite, 
   stffunit LIKE stff_t.stffunit
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_stfa001 LIKE stfa_t.stfa001,
      b_stfa002 LIKE stfa_t.stfa002,
      b_stfa003 LIKE stfa_t.stfa003,
      b_stfa004 LIKE stfa_t.stfa004,
      b_stfa005 LIKE stfa_t.stfa005,
   b_stfa005_desc LIKE type_t.chr80,
      b_stfa006 LIKE stfa_t.stfa006,
      b_stfa007 LIKE stfa_t.stfa007,
      b_stfa008 LIKE stfa_t.stfa008,
      b_stfa009 LIKE stfa_t.stfa009,
      b_stfa010 LIKE stfa_t.stfa010,
   b_stfa010_desc LIKE type_t.chr80,
      b_stfa011 LIKE stfa_t.stfa011,
      b_stfa012 LIKE stfa_t.stfa012,
      b_stfa013 LIKE stfa_t.stfa013,
      b_stfa014 LIKE stfa_t.stfa014,
      b_stfa015 LIKE stfa_t.stfa015,
      b_stfa016 LIKE stfa_t.stfa016,
      b_stfa017 LIKE stfa_t.stfa017,
      b_stfa018 LIKE stfa_t.stfa018,
      b_stfa019 LIKE stfa_t.stfa019,
      b_stfa020 LIKE stfa_t.stfa020,
      b_stfa021 LIKE stfa_t.stfa021,
      b_stfa022 LIKE stfa_t.stfa022,
      b_stfa023 LIKE stfa_t.stfa023,
      b_stfa024 LIKE stfa_t.stfa024,
      b_stfa025 LIKE stfa_t.stfa025,
      b_stfa026 LIKE stfa_t.stfa026,
      b_stfa027 LIKE stfa_t.stfa027,
      b_stfa028 LIKE stfa_t.stfa028,
      b_stfa029 LIKE stfa_t.stfa029,
      b_stfa030 LIKE stfa_t.stfa030,
      b_stfa031 LIKE stfa_t.stfa031,
      b_stfa032 LIKE stfa_t.stfa032,
      b_stfa033 LIKE stfa_t.stfa033,
      b_stfa034 LIKE stfa_t.stfa034,
      b_stfa035 LIKE stfa_t.stfa035,
      b_stfa036 LIKE stfa_t.stfa036,
      b_stfa037 LIKE stfa_t.stfa037,
      b_stfa038 LIKE stfa_t.stfa038,
      b_stfa039 LIKE stfa_t.stfa039,
      b_stfa040 LIKE stfa_t.stfa040,
      b_stfa042 LIKE stfa_t.stfa042,
      b_stfa044 LIKE stfa_t.stfa044,
      b_stfa045 LIKE stfa_t.stfa045,
      b_stfa046 LIKE stfa_t.stfa046,
      b_stfa047 LIKE stfa_t.stfa047,
      b_stfa048 LIKE stfa_t.stfa048,
      b_stfa049 LIKE stfa_t.stfa049,
      b_stfasite LIKE stfa_t.stfasite,
      b_stfaunit LIKE stfa_t.stfaunit
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE g_sys_0060     LIKE type_t.chr1
#end add-point
       
#模組變數(Module Variables)
DEFINE g_stfa_m          type_g_stfa_m
DEFINE g_stfa_m_t        type_g_stfa_m
DEFINE g_stfa_m_o        type_g_stfa_m
DEFINE g_stfa_m_mask_o   type_g_stfa_m #轉換遮罩前資料
DEFINE g_stfa_m_mask_n   type_g_stfa_m #轉換遮罩後資料
 
   DEFINE g_stfa001_t LIKE stfa_t.stfa001
 
 
DEFINE g_stfb_d          DYNAMIC ARRAY OF type_g_stfb_d
DEFINE g_stfb_d_t        type_g_stfb_d
DEFINE g_stfb_d_o        type_g_stfb_d
DEFINE g_stfb_d_mask_o   DYNAMIC ARRAY OF type_g_stfb_d #轉換遮罩前資料
DEFINE g_stfb_d_mask_n   DYNAMIC ARRAY OF type_g_stfb_d #轉換遮罩後資料
DEFINE g_stfb10_d          DYNAMIC ARRAY OF type_g_stfb10_d
DEFINE g_stfb10_d_t        type_g_stfb10_d
DEFINE g_stfb10_d_o        type_g_stfb10_d
DEFINE g_stfb10_d_mask_o   DYNAMIC ARRAY OF type_g_stfb10_d #轉換遮罩前資料
DEFINE g_stfb10_d_mask_n   DYNAMIC ARRAY OF type_g_stfb10_d #轉換遮罩後資料
DEFINE g_stfb11_d          DYNAMIC ARRAY OF type_g_stfb11_d
DEFINE g_stfb11_d_t        type_g_stfb11_d
DEFINE g_stfb11_d_o        type_g_stfb11_d
DEFINE g_stfb11_d_mask_o   DYNAMIC ARRAY OF type_g_stfb11_d #轉換遮罩前資料
DEFINE g_stfb11_d_mask_n   DYNAMIC ARRAY OF type_g_stfb11_d #轉換遮罩後資料
DEFINE g_stfb12_d          DYNAMIC ARRAY OF type_g_stfb12_d
DEFINE g_stfb12_d_t        type_g_stfb12_d
DEFINE g_stfb12_d_o        type_g_stfb12_d
DEFINE g_stfb12_d_mask_o   DYNAMIC ARRAY OF type_g_stfb12_d #轉換遮罩前資料
DEFINE g_stfb12_d_mask_n   DYNAMIC ARRAY OF type_g_stfb12_d #轉換遮罩後資料
DEFINE g_stfb2_d          DYNAMIC ARRAY OF type_g_stfb2_d
DEFINE g_stfb2_d_t        type_g_stfb2_d
DEFINE g_stfb2_d_o        type_g_stfb2_d
DEFINE g_stfb2_d_mask_o   DYNAMIC ARRAY OF type_g_stfb2_d #轉換遮罩前資料
DEFINE g_stfb2_d_mask_n   DYNAMIC ARRAY OF type_g_stfb2_d #轉換遮罩後資料
DEFINE g_stfb3_d          DYNAMIC ARRAY OF type_g_stfb3_d
DEFINE g_stfb3_d_t        type_g_stfb3_d
DEFINE g_stfb3_d_o        type_g_stfb3_d
DEFINE g_stfb3_d_mask_o   DYNAMIC ARRAY OF type_g_stfb3_d #轉換遮罩前資料
DEFINE g_stfb3_d_mask_n   DYNAMIC ARRAY OF type_g_stfb3_d #轉換遮罩後資料
DEFINE g_stfb4_d          DYNAMIC ARRAY OF type_g_stfb4_d
DEFINE g_stfb4_d_t        type_g_stfb4_d
DEFINE g_stfb4_d_o        type_g_stfb4_d
DEFINE g_stfb4_d_mask_o   DYNAMIC ARRAY OF type_g_stfb4_d #轉換遮罩前資料
DEFINE g_stfb4_d_mask_n   DYNAMIC ARRAY OF type_g_stfb4_d #轉換遮罩後資料
DEFINE g_stfb5_d          DYNAMIC ARRAY OF type_g_stfb5_d
DEFINE g_stfb5_d_t        type_g_stfb5_d
DEFINE g_stfb5_d_o        type_g_stfb5_d
DEFINE g_stfb5_d_mask_o   DYNAMIC ARRAY OF type_g_stfb5_d #轉換遮罩前資料
DEFINE g_stfb5_d_mask_n   DYNAMIC ARRAY OF type_g_stfb5_d #轉換遮罩後資料
DEFINE g_stfb6_d          DYNAMIC ARRAY OF type_g_stfb6_d
DEFINE g_stfb6_d_t        type_g_stfb6_d
DEFINE g_stfb6_d_o        type_g_stfb6_d
DEFINE g_stfb6_d_mask_o   DYNAMIC ARRAY OF type_g_stfb6_d #轉換遮罩前資料
DEFINE g_stfb6_d_mask_n   DYNAMIC ARRAY OF type_g_stfb6_d #轉換遮罩後資料
DEFINE g_stfb7_d          DYNAMIC ARRAY OF type_g_stfb7_d
DEFINE g_stfb7_d_t        type_g_stfb7_d
DEFINE g_stfb7_d_o        type_g_stfb7_d
DEFINE g_stfb7_d_mask_o   DYNAMIC ARRAY OF type_g_stfb7_d #轉換遮罩前資料
DEFINE g_stfb7_d_mask_n   DYNAMIC ARRAY OF type_g_stfb7_d #轉換遮罩後資料
DEFINE g_stfb8_d          DYNAMIC ARRAY OF type_g_stfb8_d
DEFINE g_stfb8_d_t        type_g_stfb8_d
DEFINE g_stfb8_d_o        type_g_stfb8_d
DEFINE g_stfb8_d_mask_o   DYNAMIC ARRAY OF type_g_stfb8_d #轉換遮罩前資料
DEFINE g_stfb8_d_mask_n   DYNAMIC ARRAY OF type_g_stfb8_d #轉換遮罩後資料
DEFINE g_stfb9_d          DYNAMIC ARRAY OF type_g_stfb9_d
DEFINE g_stfb9_d_t        type_g_stfb9_d
DEFINE g_stfb9_d_o        type_g_stfb9_d
DEFINE g_stfb9_d_mask_o   DYNAMIC ARRAY OF type_g_stfb9_d #轉換遮罩前資料
DEFINE g_stfb9_d_mask_n   DYNAMIC ARRAY OF type_g_stfb9_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
DEFINE g_master_multi_table_t    RECORD
      stfal001 LIKE stfal_t.stfal001,
      stfal003 LIKE stfal_t.stfal003,
      stfal004 LIKE stfal_t.stfal004
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
DEFINE g_wc2_table4   STRING
 
DEFINE g_wc2_table5   STRING
 
DEFINE g_wc2_table6   STRING
 
DEFINE g_wc2_table7   STRING
 
DEFINE g_wc2_table8   STRING
 
DEFINE g_wc2_table9   STRING
 
DEFINE g_wc2_table10   STRING
 
DEFINE g_wc2_table11   STRING
 
 
DEFINE g_wc2_table12   STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="astm401.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   DEFINE l_success LIKE type_t.num5
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ast","")
 
   #add-point:作業初始化 name="main.init"
   
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT stfaunit,'',stfasite,'',stfa001,stfa002,stfa003,stfa004,stfa009,stfastus, 
       stfa010,'','',stfa005,'','',stfa007,stfa008,stfa047,'',stfa048,'',stfa044,'',stfa051,'',stfa011, 
       '',stfa012,'',stfa033,'',stfa034,'',stfa036,'',stfa037,'',stfa038,'','','','',stfa029,stfa030, 
       stfa032,'',stfa035,'',stfa050,stfa028,'','',stfa039,stfa040,stfa052,'',stfa013,'',stfa014,'', 
       stfa015,'',stfa016,stfa006,'',stfa053,stfa055,stfa017,stfa021,stfa024,stfa018,stfa022,stfa025, 
       stfa019,stfa023,stfa026,stfa020,stfa049,stfa056,stfa054,stfa027,stfa031,stfa043,stfaownid,'', 
       stfaowndp,'',stfacrtid,'',stfacrtdp,'',stfacrtdt,stfamodid,'',stfamoddt,stfacnfid,'',stfacnfdt", 
        
                      " FROM stfa_t",
                      " WHERE stfaent= ? AND stfa001=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm401_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.stfaunit,t0.stfasite,t0.stfa001,t0.stfa002,t0.stfa003,t0.stfa004, 
       t0.stfa009,t0.stfastus,t0.stfa010,t0.stfa005,t0.stfa007,t0.stfa008,t0.stfa047,t0.stfa048,t0.stfa044, 
       t0.stfa051,t0.stfa011,t0.stfa012,t0.stfa033,t0.stfa034,t0.stfa036,t0.stfa037,t0.stfa038,t0.stfa045, 
       t0.stfa046,t0.stfa029,t0.stfa030,t0.stfa032,t0.stfa035,t0.stfa050,t0.stfa028,t0.stfa057,t0.stfa058, 
       t0.stfa039,t0.stfa040,t0.stfa052,t0.stfa013,t0.stfa014,t0.stfa015,t0.stfa016,t0.stfa006,t0.stfa053, 
       t0.stfa055,t0.stfa017,t0.stfa021,t0.stfa024,t0.stfa018,t0.stfa022,t0.stfa025,t0.stfa019,t0.stfa023, 
       t0.stfa026,t0.stfa020,t0.stfa049,t0.stfa056,t0.stfa054,t0.stfa027,t0.stfa031,t0.stfa043,t0.stfaownid, 
       t0.stfaowndp,t0.stfacrtid,t0.stfacrtdp,t0.stfacrtdt,t0.stfamodid,t0.stfamoddt,t0.stfacnfid,t0.stfacnfdt, 
       t1.ooefl003 ,t2.ooefl003 ,t3.pmaal004 ,t4.pmaal003 ,t5.mhaal003 ,t6.mhabl004 ,t7.ooefl003 ,t8.rtaxl003 , 
       t9.rtaxl003 ,t10.oocql004 ,t11.ooail003 ,t12.ooibl004 ,t13.ooag011 ,t14.ooefl003 ,t15.ooag011 , 
       t16.ooefl003 ,t17.ooag011 ,t18.ooag011",
               " FROM stfa_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.stfaunit AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=t0.stfasite AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t3 ON t3.pmaalent="||g_enterprise||" AND t3.pmaal001=t0.stfa010 AND t3.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t4 ON t4.pmaalent="||g_enterprise||" AND t4.pmaal001=t0.stfa010 AND t4.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN mhaal_t t5 ON t5.mhaalent="||g_enterprise||" AND t5.mhaal001=t0.stfa047 AND t5.mhaal002='"||g_dlang||"' ",
               " LEFT JOIN mhabl_t t6 ON t6.mhablent="||g_enterprise||" AND t6.mhabl001=t0.stfa047 AND t6.mhabl002=t0.stfa048 AND t6.mhabl003='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent="||g_enterprise||" AND t7.ooefl001=t0.stfa044 AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN rtaxl_t t8 ON t8.rtaxlent="||g_enterprise||" AND t8.rtaxl001=t0.stfa051 AND t8.rtaxl002='"||g_dlang||"' ",
               " LEFT JOIN rtaxl_t t9 ON t9.rtaxlent="||g_enterprise||" AND t9.rtaxl001=t0.stfa011 AND t9.rtaxl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t10 ON t10.oocqlent="||g_enterprise||" AND t10.oocql001='2002' AND t10.oocql002=t0.stfa012 AND t10.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooail_t t11 ON t11.ooailent="||g_enterprise||" AND t11.ooail001=t0.stfa032 AND t11.ooail002='"||g_dlang||"' ",
               " LEFT JOIN ooibl_t t12 ON t12.ooiblent="||g_enterprise||" AND t12.ooibl002=t0.stfa035 AND t12.ooibl003='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t13 ON t13.ooagent="||g_enterprise||" AND t13.ooag001=t0.stfaownid  ",
               " LEFT JOIN ooefl_t t14 ON t14.ooeflent="||g_enterprise||" AND t14.ooefl001=t0.stfaowndp AND t14.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t15 ON t15.ooagent="||g_enterprise||" AND t15.ooag001=t0.stfacrtid  ",
               " LEFT JOIN ooefl_t t16 ON t16.ooeflent="||g_enterprise||" AND t16.ooefl001=t0.stfacrtdp AND t16.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t17 ON t17.ooagent="||g_enterprise||" AND t17.ooag001=t0.stfamodid  ",
               " LEFT JOIN ooag_t t18 ON t18.ooagent="||g_enterprise||" AND t18.ooag001=t0.stfacnfid  ",
 
               " WHERE t0.stfaent = " ||g_enterprise|| " AND t0.stfa001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
 
   #end add-point
   PREPARE astm401_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_astm401 WITH FORM cl_ap_formpath("ast",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL astm401_init()   
 
      #進入選單 Menu (="N")
      CALL astm401_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      CALL s_aooi500_drop_temp() RETURNING l_success
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_astm401
      
   END IF 
   
   CLOSE astm401_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="astm401.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION astm401_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   DEFINE l_success LIKE type_t.num5
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
   LET g_detail_idx_list[4] = 1
   LET g_detail_idx_list[5] = 1
   LET g_detail_idx_list[6] = 1
   LET g_detail_idx_list[7] = 1
   LET g_detail_idx_list[8] = 1
   LET g_detail_idx_list[9] = 1
   LET g_detail_idx_list[10] = 1
   LET g_detail_idx_list[11] = 1
   LET g_detail_idx_list[12] = 1
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('stfastus','50','N,Y,X')
 
      CALL cl_set_combo_scc('stfa003','6014') 
   CALL cl_set_combo_scc('stfa004','6785') 
   CALL cl_set_combo_scc('stfa029','6202') 
   CALL cl_set_combo_scc('stfa030','6786') 
   CALL cl_set_combo_scc('stfa031','36') 
   CALL cl_set_combo_scc('stfb004','6006') 
   CALL cl_set_combo_scc('stfb005','6007') 
   CALL cl_set_combo_scc('stfb006','6008') 
   CALL cl_set_combo_scc('stfb007','6009') 
   CALL cl_set_combo_scc('stfw002','6868') 
   CALL cl_set_combo_scc('stfw007','6869') 
   CALL cl_set_combo_scc('stfc024','6781') 
   CALL cl_set_combo_scc('stfc011','6006') 
   CALL cl_set_combo_scc('stfc012','6007') 
   CALL cl_set_combo_scc('stfc013','6008') 
   CALL cl_set_combo_scc('stfc014','6009') 
   CALL cl_set_combo_scc('stfe004','6793') 
   CALL cl_set_combo_scc('stfe005','6011') 
   CALL cl_set_combo_scc('stfe006','6794') 
   CALL cl_set_combo_scc('stfe012','6851') 
   CALL cl_set_combo_scc('stfi002','6880') 
   CALL cl_set_combo_scc('stff010','6864') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1',","1")
   CALL g_idx_group.addAttribute("'2',","1")
   CALL g_idx_group.addAttribute("'3',","1")
   CALL g_idx_group.addAttribute("'4',","1")
   CALL g_idx_group.addAttribute("'5',","1")
   CALL g_idx_group.addAttribute("'6',","1")
   CALL g_idx_group.addAttribute("'7',","1")
   CALL g_idx_group.addAttribute("'8',","1")
   CALL g_idx_group.addAttribute("'9',","1")
   CALL g_idx_group.addAttribute("'10',","1")
   CALL g_idx_group.addAttribute("'12',","1")
   CALL g_idx_group.addAttribute("'11',","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   CALL cl_set_combo_scc('stfa046','6201')
   CALL cl_set_combo_scc('b_stfa004','6785')
   CALL cl_set_combo_scc('b_stfa046','6201') 
   CALL cl_set_combo_scc('b_stfa029','6202') 
   CALL cl_set_combo_scc('b_stfa030','6786') 
   CALL cl_set_combo_scc('b_stfa031','36')
   CALL cl_set_combo_scc('stfk004','6006') 
   CALL cl_set_combo_scc('stfk005','6007') 
   CALL cl_set_combo_scc('stfk006','6008') 
   CALL cl_set_combo_scc('stfk007','6009')
   CALL cl_set_combo_scc('stfk018','8310')
   CALL cl_set_combo_scc('stfl003','6848')
   CALL cl_set_combo_scc_part('stfe005','6011','1,2,3')
   CALL cl_set_combo_scc('stfa056','6889')    #add by dengdd 151230
   CALL s_aooi500_create_temp() RETURNING l_success  
   #联营合同是否呈现租赁合同
   CALL cl_get_para(g_enterprise,g_site,'E-CIR-0060') RETURNING g_sys_0060
   IF g_sys_0060 = 'Y' THEN 
      CALL cl_set_combo_scc_part('stfa003','6013','4,5')
      CALL cl_set_combo_scc_part('b_stfa003','6013','4,5')
   ELSE
      CALL cl_set_combo_scc_part('stfa003','6013','4')
      CALL cl_set_combo_scc_part('b_stfa003','6013','4')
   END IF 
   
   CALL cl_set_act_visible("cancellation,uncancellation",TRUE)
   #end add-point
   
   #初始化搜尋條件
   CALL astm401_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="astm401.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION astm401_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   DEFINE l_stfa004  LIKE stfa_t.stfa004 #lanjj add on 2016-09-08
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_stfa_m.* TO NULL
         CALL g_stfb_d.clear()
         CALL g_stfb10_d.clear()
         CALL g_stfb11_d.clear()
         CALL g_stfb12_d.clear()
         CALL g_stfb2_d.clear()
         CALL g_stfb3_d.clear()
         CALL g_stfb4_d.clear()
         CALL g_stfb5_d.clear()
         CALL g_stfb6_d.clear()
         CALL g_stfb7_d.clear()
         CALL g_stfb8_d.clear()
         CALL g_stfb9_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL astm401_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL astm401_fetch('') # reload data
               LET l_ac = 1
               CALL astm401_ui_detailshow() #Setting the current row 
         
               CALL astm401_idx_chk()
               #NEXT FIELD stfbseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_stfb_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astm401_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL astm401_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_stfb10_d TO s_detail10.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astm401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail10")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[2] = l_ac
               CALL g_idx_group.addAttribute("'2',",l_ac)
               
               #add-point:page2, before row動作 name="ui_dialog.body10.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail10")
               LET g_current_page = 2
               #顯示單身筆數
               CALL astm401_idx_chk()
               #add-point:page2自定義行為 name="ui_dialog.body10.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為 name="ui_dialog.body10.action"
            
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_stfb11_d TO s_detail11.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astm401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail11")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[3] = l_ac
               CALL g_idx_group.addAttribute("'3',",l_ac)
               
               #add-point:page3, before row動作 name="ui_dialog.body11.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail11")
               LET g_current_page = 3
               #顯示單身筆數
               CALL astm401_idx_chk()
               #add-point:page3自定義行為 name="ui_dialog.body11.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為 name="ui_dialog.body11.action"
            
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_stfb12_d TO s_detail12.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astm401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail12")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[4] = l_ac
               CALL g_idx_group.addAttribute("'4',",l_ac)
               
               #add-point:page4, before row動作 name="ui_dialog.body12.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'4',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail12")
               LET g_current_page = 4
               #顯示單身筆數
               CALL astm401_idx_chk()
               #add-point:page4自定義行為 name="ui_dialog.body12.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_4)
            
         
            #add-point:page4自定義行為 name="ui_dialog.body12.action"
            
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_stfb2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astm401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[5] = l_ac
               CALL g_idx_group.addAttribute("'5',",l_ac)
               CALL astm401_b_fill2('12')
 
               #add-point:page5, before row動作 name="ui_dialog.body2.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'5',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 5
               #顯示單身筆數
               CALL astm401_idx_chk()
               #add-point:page5自定義行為 name="ui_dialog.body2.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_5)
            
         
            #add-point:page5自定義行為 name="ui_dialog.body2.action"
            
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_stfb3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astm401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[6] = l_ac
               CALL g_idx_group.addAttribute("'6',",l_ac)
               
               #add-point:page6, before row動作 name="ui_dialog.body3.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'6',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 6
               #顯示單身筆數
               CALL astm401_idx_chk()
               #add-point:page6自定義行為 name="ui_dialog.body3.before_display"
 
               #end add-point
      
            #自訂ACTION(detail_show,page_6)
            
         
            #add-point:page6自定義行為 name="ui_dialog.body3.action"
            
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_stfb4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astm401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[7] = l_ac
               CALL g_idx_group.addAttribute("'7',",l_ac)
               
               #add-point:page7, before row動作 name="ui_dialog.body4.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'7',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_current_page = 7
               #顯示單身筆數
               CALL astm401_idx_chk()
               #add-point:page7自定義行為 name="ui_dialog.body4.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_7)
            
         
            #add-point:page7自定義行為 name="ui_dialog.body4.action"
            
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_stfb5_d TO s_detail5.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astm401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[8] = l_ac
               CALL g_idx_group.addAttribute("'8',",l_ac)
               
               #add-point:page8, before row動作 name="ui_dialog.body5.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'8',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail5")
               LET g_current_page = 8
               #顯示單身筆數
               CALL astm401_idx_chk()
               #add-point:page8自定義行為 name="ui_dialog.body5.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_8)
            
         
            #add-point:page8自定義行為 name="ui_dialog.body5.action"
            
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_stfb6_d TO s_detail6.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astm401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail6")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[9] = l_ac
               CALL g_idx_group.addAttribute("'9',",l_ac)
               
               #add-point:page9, before row動作 name="ui_dialog.body6.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'9',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail6")
               LET g_current_page = 9
               #顯示單身筆數
               CALL astm401_idx_chk()
               #add-point:page9自定義行為 name="ui_dialog.body6.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_9)
            
         
            #add-point:page9自定義行為 name="ui_dialog.body6.action"
            
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_stfb7_d TO s_detail7.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astm401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail7")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[10] = l_ac
               CALL g_idx_group.addAttribute("'10',",l_ac)
               
               #add-point:page10, before row動作 name="ui_dialog.body7.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'10',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail7")
               LET g_current_page = 10
               #顯示單身筆數
               CALL astm401_idx_chk()
               #add-point:page10自定義行為 name="ui_dialog.body7.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_10)
            
         
            #add-point:page10自定義行為 name="ui_dialog.body7.action"
            
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_stfb9_d TO s_detail9.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astm401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail9")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[12] = l_ac
               CALL g_idx_group.addAttribute("'11',",l_ac)
               
               #add-point:page12, before row動作 name="ui_dialog.body9.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'11',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail9")
               LET g_current_page = 12
               #顯示單身筆數
               CALL astm401_idx_chk()
               #add-point:page12自定義行為 name="ui_dialog.body9.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_12)
            
         
            #add-point:page12自定義行為 name="ui_dialog.body9.action"
            
            #end add-point
         
         END DISPLAY
 
         
         #第二階單身段落
         DISPLAY ARRAY g_stfb8_d TO s_detail8.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL astm401_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail8")
               LET g_detail_idx2 = l_ac
               LET g_detail_idx_list[11] = l_ac
               CALL g_idx_group.addAttribute("'12',",l_ac)
               
               #add-point:page11, before row動作 name="ui_dialog.body8.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在下階單身則控制筆數位置
               IF g_loc = 'd' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'12',"))
               END IF
               LET g_loc = 'd'
               LET l_ac = DIALOG.getCurrentRow("s_detail8")
               LET g_current_page = 11
               #顯示單身筆數
               CALL astm401_idx_chk()
               #add-point:page11自定義行為 name="ui_dialog.body8.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_11)
            
         
            #add-point:page11自定義行為 name="ui_dialog.body8.action"
            
            #end add-point
         
         END DISPLAY
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL astm401_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL astm401_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL astm401_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL astm401_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL astm401_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL astm401_set_act_visible()   
            CALL astm401_set_act_no_visible()
            IF NOT (g_stfa_m.stfa001 IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " stfaent = " ||g_enterprise|| " AND",
                                  " stfa001 = '", g_stfa_m.stfa001, "' "
 
               #填到對應位置
               CALL astm401_browser_fill("")
            END IF
         
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
               INITIALIZE g_wc2_table4 TO NULL
 
               INITIALIZE g_wc2_table5 TO NULL
 
               INITIALIZE g_wc2_table6 TO NULL
 
               INITIALIZE g_wc2_table7 TO NULL
 
               INITIALIZE g_wc2_table8 TO NULL
 
               INITIALIZE g_wc2_table9 TO NULL
 
               INITIALIZE g_wc2_table10 TO NULL
 
               INITIALIZE g_wc2_table11 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "stfa_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "stfb_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "stfk_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stfl_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stfw_t" 
                        LET g_wc2_table4 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stfc_t" 
                        LET g_wc2_table5 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stfe_t" 
                        LET g_wc2_table6 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stfg_t" 
                        LET g_wc2_table7 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stfh_t" 
                        LET g_wc2_table8 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stfi_t" 
                        LET g_wc2_table9 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stfj_t" 
                        LET g_wc2_table10 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stff_t" 
                        LET g_wc2_table11 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
                  OR NOT cl_null(g_wc2_table4)
 
                  OR NOT cl_null(g_wc2_table5)
 
                  OR NOT cl_null(g_wc2_table6)
 
                  OR NOT cl_null(g_wc2_table7)
 
                  OR NOT cl_null(g_wc2_table8)
 
                  OR NOT cl_null(g_wc2_table9)
 
                  OR NOT cl_null(g_wc2_table10)
 
                  OR NOT cl_null(g_wc2_table11)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
                  IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
                  END IF
 
                  IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
                  END IF
 
                  IF g_wc2_table6 <> " 1=1" AND NOT cl_null(g_wc2_table6) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
                  END IF
 
                  IF g_wc2_table7 <> " 1=1" AND NOT cl_null(g_wc2_table7) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
                  END IF
 
                  IF g_wc2_table8 <> " 1=1" AND NOT cl_null(g_wc2_table8) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table8
                  END IF
 
                  IF g_wc2_table9 <> " 1=1" AND NOT cl_null(g_wc2_table9) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table9
                  END IF
 
                  IF g_wc2_table10 <> " 1=1" AND NOT cl_null(g_wc2_table10) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table10
                  END IF
 
                  IF g_wc2_table11 <> " 1=1" AND NOT cl_null(g_wc2_table11) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table11
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL astm401_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
               INITIALIZE g_wc2_table4 TO NULL
 
               INITIALIZE g_wc2_table5 TO NULL
 
               INITIALIZE g_wc2_table6 TO NULL
 
               INITIALIZE g_wc2_table7 TO NULL
 
               INITIALIZE g_wc2_table8 TO NULL
 
               INITIALIZE g_wc2_table9 TO NULL
 
               INITIALIZE g_wc2_table10 TO NULL
 
               INITIALIZE g_wc2_table11 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "stfa_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "stfb_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "stfk_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stfl_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stfw_t" 
                        LET g_wc2_table4 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stfc_t" 
                        LET g_wc2_table5 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stfe_t" 
                        LET g_wc2_table6 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stfg_t" 
                        LET g_wc2_table7 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stfh_t" 
                        LET g_wc2_table8 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stfi_t" 
                        LET g_wc2_table9 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stfj_t" 
                        LET g_wc2_table10 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "stff_t" 
                        LET g_wc2_table11 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
                  OR NOT cl_null(g_wc2_table4)
 
                  OR NOT cl_null(g_wc2_table5)
 
                  OR NOT cl_null(g_wc2_table6)
 
                  OR NOT cl_null(g_wc2_table7)
 
                  OR NOT cl_null(g_wc2_table8)
 
                  OR NOT cl_null(g_wc2_table9)
 
                  OR NOT cl_null(g_wc2_table10)
 
                  OR NOT cl_null(g_wc2_table11)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
                  IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
                  END IF
 
                  IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
                  END IF
 
                  IF g_wc2_table6 <> " 1=1" AND NOT cl_null(g_wc2_table6) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
                  END IF
 
                  IF g_wc2_table7 <> " 1=1" AND NOT cl_null(g_wc2_table7) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
                  END IF
 
                  IF g_wc2_table8 <> " 1=1" AND NOT cl_null(g_wc2_table8) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table8
                  END IF
 
                  IF g_wc2_table9 <> " 1=1" AND NOT cl_null(g_wc2_table9) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table9
                  END IF
 
                  IF g_wc2_table10 <> " 1=1" AND NOT cl_null(g_wc2_table10) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table10
                  END IF
 
                  IF g_wc2_table11 <> " 1=1" AND NOT cl_null(g_wc2_table11) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table11
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL astm401_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code = "-100" 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL astm401_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               
               #end add-point
               CALL astm401_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL astm401_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astm401_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL astm401_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astm401_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL astm401_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astm401_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL astm401_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astm401_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL astm401_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL astm401_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_stfb_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_stfb10_d)
                  LET g_export_id[2]   = "s_detail10"
                  LET g_export_node[3] = base.typeInfo.create(g_stfb11_d)
                  LET g_export_id[3]   = "s_detail11"
                  LET g_export_node[4] = base.typeInfo.create(g_stfb12_d)
                  LET g_export_id[4]   = "s_detail12"
                  LET g_export_node[5] = base.typeInfo.create(g_stfb2_d)
                  LET g_export_id[5]   = "s_detail2"
                  LET g_export_node[6] = base.typeInfo.create(g_stfb3_d)
                  LET g_export_id[6]   = "s_detail3"
                  LET g_export_node[7] = base.typeInfo.create(g_stfb4_d)
                  LET g_export_id[7]   = "s_detail4"
                  LET g_export_node[8] = base.typeInfo.create(g_stfb5_d)
                  LET g_export_id[8]   = "s_detail5"
                  LET g_export_node[9] = base.typeInfo.create(g_stfb6_d)
                  LET g_export_id[9]   = "s_detail6"
                  LET g_export_node[10] = base.typeInfo.create(g_stfb7_d)
                  LET g_export_id[10]   = "s_detail7"
                  LET g_export_node[11] = base.typeInfo.create(g_stfb8_d)
                  LET g_export_id[11]   = "s_detail8"
                  LET g_export_node[12] = base.typeInfo.create(g_stfb9_d)
                  LET g_export_id[12]   = "s_detail9"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD stfbseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION uncancellation
            LET g_action_choice="uncancellation"
            IF cl_auth_chk_act("uncancellation") THEN
               
               #add-point:ON ACTION uncancellation name="menu.uncancellation"
               CALL astm401_cancel_or_not('uncancel') #lanjj add on 2016-07-21
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION astm401_02
            LET g_action_choice="astm401_02"
            IF cl_auth_chk_act("astm401_02") THEN
               
               #add-point:ON ACTION astm401_02 name="menu.astm401_02"
               #lanjj add on 2016-09-08，“专柜清退”按钮增加管控：仅合同状态小于6的资料才能点击。start
               LET l_stfa004 = ''
               SELECT stfa004 INTO l_stfa004
                 FROM stfa_t
                WHERE stfaent = g_enterprise
                  AND stfa001 = g_stfa_m.stfa001
               IF l_stfa004 < 6 THEN
                  CALL astm401_02_input()
               ELSE 
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "仅合同状态小于6的合同资料才能做清退" 
                  LET g_errparam.code   = "adz-00482"
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err() 
               END IF 
               #lanjj add on 2016-09-08，“专柜清退”按钮增加管控：仅合同状态小于6的资料才能点击。end
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION astm401_04
            LET g_action_choice="astm401_04"
            IF cl_auth_chk_act("astm401_04") THEN
               
               #add-point:ON ACTION astm401_04 name="menu.astm401_04"
               
               #lanjj add on 2016-09-08，“取消清退”按钮增加管控：仅有合同状态等于6且清退日期大于当前日期的的资料才能点击。start
               LET l_stfa004 = ''
               SELECT stfa004 INTO l_stfa004
                 FROM stfa_t
                WHERE stfaent = g_enterprise
                  AND stfa001 = g_stfa_m.stfa001
               IF l_stfa004 = 6 AND g_stfa_m.stfa024 > g_today THEN
                  CALL astm401_04()
               ELSE 
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "仅有合同状态等于6且清退日期小于当前日期的的合同资料才能取消清退" 
                  LET g_errparam.code   = "adz-00482"
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err() 
               END IF 
               #lanjj add on 2016-09-08，“取消清退”按钮增加管控：仅有合同状态等于6且清退日期小于当前日期的的资料才能点击。end
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION cancellation
            LET g_action_choice="cancellation"
            IF cl_auth_chk_act("cancellation") THEN
               
               #add-point:ON ACTION cancellation name="menu.cancellation"
               CALL astm401_cancel_or_not('cancel') #lanjj add on 2016-07-21
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION astm401_03
            LET g_action_choice="astm401_03"
            IF cl_auth_chk_act("astm401_03") THEN
               
               #add-point:ON ACTION astm401_03 name="menu.astm401_03"
               CALL astm401_03()
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL astm401_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail10",1)
               CALL g_curr_diag.setCurrentRow("s_detail11",1)
               CALL g_curr_diag.setCurrentRow("s_detail12",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
               CALL g_curr_diag.setCurrentRow("s_detail3",1)
               CALL g_curr_diag.setCurrentRow("s_detail4",1)
               CALL g_curr_diag.setCurrentRow("s_detail5",1)
               CALL g_curr_diag.setCurrentRow("s_detail6",1)
               CALL g_curr_diag.setCurrentRow("s_detail7",1)
               CALL g_curr_diag.setCurrentRow("s_detail8",1)
               CALL g_curr_diag.setCurrentRow("s_detail9",1)
 
 
 
 
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION upd_stfj
            LET g_action_choice="upd_stfj"
            IF cl_auth_chk_act("upd_stfj") THEN
               
               #add-point:ON ACTION upd_stfj name="menu.upd_stfj"
               #lanjj add on 2016-10-29 start
               IF NOT cl_null(g_stfa_m.stfa001) AND g_stfa_m.stfastus = 'Y' THEN
                  CALL s_transaction_begin()  
                  IF astm401_upd_stfj() THEN
                     CALL s_transaction_end('Y','0')
                  ELSE 
                     CALL s_transaction_end('N','0')
                  END IF 
                  CALL astm401_b_fill()
               END IF
               #lanjj add on 2016-10-29 end
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION astm401_01
            LET g_action_choice="astm401_01"
            IF cl_auth_chk_act("astm401_01") THEN
               
               #add-point:ON ACTION astm401_01 name="menu.astm401_01"
               CALL astm401_01_input()
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION batch_mod_fee
            LET g_action_choice="batch_mod_fee"
            IF cl_auth_chk_act("batch_mod_fee") THEN
               
               #add-point:ON ACTION batch_mod_fee name="menu.batch_mod_fee"
               
               #END add-point
               
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL astm401_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL astm401_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL astm401_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow('')
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
 
      #(ver:79) ---add start---
      #add-point:ui_dialog段 after dialog name="ui_dialog.exit_dialog"
      
      #end add-point
      #(ver:79) --- add end ---
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
 
{</section>}
 
{<section id="astm401.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION astm401_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   DEFINE l_where           STRING
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   IF cl_null(g_wc)  THEN LET g_wc  = " 1=1" END IF
   CALL s_aooi500_sql_where(g_prog,'stfasite') RETURNING l_where
   IF g_sys_0060 = 'Y' THEN 
      LET g_wc = g_wc," AND (",l_where," OR stfaunit = '",g_site,"')"
   ELSE
      LET g_wc = g_wc," AND stfa003 = '4' AND (",l_where," OR stfaunit = '",g_site,"')"  
   END IF    
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT stfa001 ",
                      " FROM stfa_t ",
                      " ",
                      " LEFT JOIN stfb_t ON stfbent = stfaent AND stfa001 = stfb001 ", "  ",
                      #add-point:browser_fill段sql(stfb_t1) name="browser_fill.cnt.join.}"
                      
                      #end add-point
                      " LEFT JOIN stfk_t ON stfkent = stfaent AND stfa001 = stfk001", "  ",
                      #add-point:browser_fill段sql(stfk_t1) name="browser_fill.cnt.join.stfk_t1"
                      
                      #end add-point
 
                      " LEFT JOIN stfl_t ON stflent = stfaent AND stfa001 = stfl001", "  ",
                      #add-point:browser_fill段sql(stfl_t1) name="browser_fill.cnt.join.stfl_t1"
                      
                      #end add-point
 
                      " LEFT JOIN stfw_t ON stfwent = stfaent AND stfa001 = stfw001", "  ",
                      #add-point:browser_fill段sql(stfw_t1) name="browser_fill.cnt.join.stfw_t1"
                      
                      #end add-point
 
                      " LEFT JOIN stfc_t ON stfcent = stfaent AND stfa001 = stfc001", "  ",
                      #add-point:browser_fill段sql(stfc_t1) name="browser_fill.cnt.join.stfc_t1"
                      
                      #end add-point
 
                      " LEFT JOIN stfe_t ON stfeent = stfaent AND stfa001 = stfe001", "  ",
                      #add-point:browser_fill段sql(stfe_t1) name="browser_fill.cnt.join.stfe_t1"
                      
                      #end add-point
 
                      " LEFT JOIN stfg_t ON stfgent = stfaent AND stfa001 = stfg001", "  ",
                      #add-point:browser_fill段sql(stfg_t1) name="browser_fill.cnt.join.stfg_t1"
                      
                      #end add-point
 
                      " LEFT JOIN stfh_t ON stfhent = stfaent AND stfa001 = stfh001", "  ",
                      #add-point:browser_fill段sql(stfh_t1) name="browser_fill.cnt.join.stfh_t1"
                      
                      #end add-point
 
                      " LEFT JOIN stfi_t ON stfient = stfaent AND stfa001 = stfi001", "  ",
                      #add-point:browser_fill段sql(stfi_t1) name="browser_fill.cnt.join.stfi_t1"
                      
                      #end add-point
 
                      " LEFT JOIN stfj_t ON stfjent = stfaent AND stfa001 = stfj001", "  ",
                      #add-point:browser_fill段sql(stfj_t1) name="browser_fill.cnt.join.stfj_t1"
                      
                      #end add-point
 
                      " LEFT JOIN stff_t ON stffent = stfaent AND stfa001 = stff001", "  ",
                      #add-point:browser_fill段sql(stff_t1) name="browser_fill.cnt.join.stff_t1"
                      " AND stffent = stfeent AND stff001 = stfe001 AND stff003 = stfeseq AND stff002 = stfe002 ",
                      #end add-point
 
 
                      " LEFT JOIN stfd_t ON stfdent = stfaent AND stfc001 = stfd001 AND stfcseq = stfdseq", "  ",
                      #add-point:browser_fill段sql(stfd_t1) name="browser_fill.cnt.join.stfd_t1"
                      
                      #end add-point
 
 
                      " LEFT JOIN stfal_t ON stfalent = "||g_enterprise||" AND stfa001 = stfal001 AND stfal002 = '",g_dlang,"' ", 
                      " ", 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
                      " ",                      
 
 
                      " ",
 
 
                      " WHERE stfaent = " ||g_enterprise|| " AND stfbent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("stfa_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT stfa001 ",
                      " FROM stfa_t ", 
                      "  ",
                      "  LEFT JOIN stfal_t ON stfalent = "||g_enterprise||" AND stfa001 = stfal001 AND stfal002 = '",g_dlang,"' ",
                      " WHERE stfaent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("stfa_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   IF cl_null(g_wc2_table1) THEN
      LET g_wc2_table1 = " 1=1"
   END IF
   IF cl_null(g_wc2_table2) THEN
      LET g_wc2_table2 = " 1=1"
   END IF
   IF cl_null(g_wc2_table3) THEN
      LET g_wc2_table3 = " 1=1"
   END IF
   IF cl_null(g_wc2_table4) THEN
      LET g_wc2_table4 = " 1=1"
   END IF
   IF cl_null(g_wc2_table5) THEN
      LET g_wc2_table5 = " 1=1"
   END IF
   IF cl_null(g_wc2_table6) THEN
      LET g_wc2_table6 = " 1=1"
   END IF
   IF cl_null(g_wc2_table7) THEN
      LET g_wc2_table7 = " 1=1"
   END IF
   IF cl_null(g_wc2_table8) THEN
      LET g_wc2_table8 = " 1=1"
   END IF
   IF cl_null(g_wc2_table9) THEN
      LET g_wc2_table9 = " 1=1"
   END IF
   IF cl_null(g_wc2_table10) THEN
      LET g_wc2_table10 = " 1=1"
   END IF
   IF cl_null(g_wc2_table11) THEN
      LET g_wc2_table11 = " 1=1"
   END IF
   #單身有輸入搜尋條件                      
   LET l_sub_sql = " SELECT UNIQUE stfa001 ",
                   " FROM stfa_t "
   IF g_wc2_table1 <> " 1=1" THEN 
      LET l_sub_sql = l_sub_sql," LEFT JOIN stfb_t ON stfbent = stfaent AND stfa001 = stfb001 "
   END IF 
   IF g_wc2_table2 <> " 1=1" THEN 
      LET l_sub_sql = l_sub_sql," LEFT JOIN stfk_t ON stfkent = stfaent AND stfa001 = stfk001"
   END IF 
   IF g_wc2_table3 <> " 1=1" THEN 
      LET l_sub_sql = l_sub_sql," LEFT JOIN stfl_t ON stflent = stfaent AND stfa001 = stfl001"
   END IF
   IF g_wc2_table4 <> " 1=1" THEN 
      LET l_sub_sql = l_sub_sql," LEFT JOIN stfw_t ON stfwent = stfaent AND stfa001 = stfw001"
   END IF         
   IF g_wc2_table5 <> " 1=1" THEN 
      LET l_sub_sql = l_sub_sql," LEFT JOIN stfc_t ON stfcent = stfaent AND stfa001 = stfc001"
   END IF   
   IF g_wc2_table6 <> " 1=1" THEN 
      LET l_sub_sql = l_sub_sql," LEFT JOIN stfe_t ON stfeent = stfaent AND stfa001 = stfe001"
   END IF   
   IF g_wc2_table7 <> " 1=1" THEN 
      LET l_sub_sql = l_sub_sql," LEFT JOIN stfg_t ON stfgent = stfaent AND stfa001 = stfg001"
   END IF   
   IF g_wc2_table8 <> " 1=1" THEN 
      LET l_sub_sql = l_sub_sql," LEFT JOIN stfh_t ON stfhent = stfaent AND stfa001 = stfh001"
   END IF   
   IF g_wc2_table9 <> " 1=1" THEN 
      LET l_sub_sql = l_sub_sql," LEFT JOIN stfi_t ON stfient = stfaent AND stfa001 = stfi001"
   END IF   
   IF g_wc2_table10 <> " 1=1" THEN 
      LET l_sub_sql = l_sub_sql," LEFT JOIN stfj_t ON stfjent = stfaent AND stfa001 = stfj001"
   END IF   
   IF g_wc2_table11 <> " 1=1" THEN 
      LET l_sub_sql = l_sub_sql," LEFT JOIN stff_t ON stffent = stfaent AND stfa001 = stff001"
   END IF
   IF g_wc2_table12 <> " 1=1" THEN 
      LET l_sub_sql = l_sub_sql," LEFT JOIN stfd_t ON stfdent = stfaent AND stfc001 = stfd001 AND stfcseq = stfdseq "
   END IF
   LET l_sub_sql = l_sub_sql," LEFT JOIN stfal_t ON stfalent = '"||g_enterprise||"' AND stfa001 = stfal001 AND stfal002 = '",g_dlang,"' ", 
                             " WHERE stfaent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("stfa_t")
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code = 9035 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_stfa_m.* TO NULL
      CALL g_stfb_d.clear()        
      CALL g_stfb10_d.clear() 
      CALL g_stfb11_d.clear() 
      CALL g_stfb12_d.clear() 
      CALL g_stfb2_d.clear() 
      CALL g_stfb3_d.clear() 
      CALL g_stfb4_d.clear() 
      CALL g_stfb5_d.clear() 
      CALL g_stfb6_d.clear() 
      CALL g_stfb7_d.clear() 
      CALL g_stfb8_d.clear() 
      CALL g_stfb9_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.stfa001,t0.stfa002,t0.stfa003,t0.stfa004,t0.stfa005,t0.stfa006,t0.stfa007,t0.stfa008,t0.stfa009,t0.stfa010,t0.stfa011,t0.stfa012,t0.stfa013,t0.stfa014,t0.stfa015,t0.stfa016,t0.stfa017,t0.stfa018,t0.stfa019,t0.stfa020,t0.stfa021,t0.stfa022,t0.stfa023,t0.stfa024,t0.stfa025,t0.stfa026,t0.stfa027,t0.stfa028,t0.stfa029,t0.stfa030,t0.stfa031,t0.stfa032,t0.stfa033,t0.stfa034,t0.stfa035,t0.stfa036,t0.stfa037,t0.stfa038,t0.stfa039,t0.stfa040,t0.stfa042,t0.stfa044,t0.stfa045,t0.stfa046,t0.stfa047,t0.stfa048,t0.stfa049,t0.stfasite,t0.stfaunit Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.stfastus,t0.stfa001,t0.stfa002,t0.stfa003,t0.stfa004,t0.stfa005, 
          t0.stfa006,t0.stfa007,t0.stfa008,t0.stfa009,t0.stfa010,t0.stfa011,t0.stfa012,t0.stfa013,t0.stfa014, 
          t0.stfa015,t0.stfa016,t0.stfa017,t0.stfa018,t0.stfa019,t0.stfa020,t0.stfa021,t0.stfa022,t0.stfa023, 
          t0.stfa024,t0.stfa025,t0.stfa026,t0.stfa027,t0.stfa028,t0.stfa029,t0.stfa030,t0.stfa031,t0.stfa032, 
          t0.stfa033,t0.stfa034,t0.stfa035,t0.stfa036,t0.stfa037,t0.stfa038,t0.stfa039,t0.stfa040,t0.stfa042, 
          t0.stfa044,t0.stfa045,t0.stfa046,t0.stfa047,t0.stfa048,t0.stfa049,t0.stfasite,t0.stfaunit, 
          t1.stfal003 ,t2.pmaal004 ",
                  " FROM stfa_t t0",
                  "  ",
                  "  LEFT JOIN stfb_t ON stfbent = stfaent AND stfa001 = stfb001 ", "  ", 
                  #add-point:browser_fill段sql(stfb_t1) name="browser_fill.join.stfb_t1"
               ""
               IF g_wc2 <> " 1=1" THEN
               LET g_sql=g_sql,
                  #end add-point
                  "  LEFT JOIN stfk_t ON stfkent = stfaent AND stfa001 = stfk001", "  ", 
                  #add-point:browser_fill段sql(stfk_t1) name="browser_fill.join.stfk_t1"
                  
                  #end add-point
 
                  "  LEFT JOIN stfl_t ON stflent = stfaent AND stfa001 = stfl001", "  ", 
                  #add-point:browser_fill段sql(stfl_t1) name="browser_fill.join.stfl_t1"
                  
                  #end add-point
 
                  "  LEFT JOIN stfw_t ON stfwent = stfaent AND stfa001 = stfw001", "  ", 
                  #add-point:browser_fill段sql(stfw_t1) name="browser_fill.join.stfw_t1"
                  
                  #end add-point
 
                  "  LEFT JOIN stfc_t ON stfcent = stfaent AND stfa001 = stfc001", "  ", 
                  #add-point:browser_fill段sql(stfc_t1) name="browser_fill.join.stfc_t1"
                  
                  #end add-point
 
                  "  LEFT JOIN stfe_t ON stfeent = stfaent AND stfa001 = stfe001", "  ", 
                  #add-point:browser_fill段sql(stfe_t1) name="browser_fill.join.stfe_t1"
                  
                  #end add-point
 
                  "  LEFT JOIN stfg_t ON stfgent = stfaent AND stfa001 = stfg001", "  ", 
                  #add-point:browser_fill段sql(stfg_t1) name="browser_fill.join.stfg_t1"
                  
                  #end add-point
 
                  "  LEFT JOIN stfh_t ON stfhent = stfaent AND stfa001 = stfh001", "  ", 
                  #add-point:browser_fill段sql(stfh_t1) name="browser_fill.join.stfh_t1"
                  
                  #end add-point
 
                  "  LEFT JOIN stfi_t ON stfient = stfaent AND stfa001 = stfi001", "  ", 
                  #add-point:browser_fill段sql(stfi_t1) name="browser_fill.join.stfi_t1"
                  
                  #end add-point
 
                  "  LEFT JOIN stfj_t ON stfjent = stfaent AND stfa001 = stfj001", "  ", 
                  #add-point:browser_fill段sql(stfj_t1) name="browser_fill.join.stfj_t1"
                  
                  #end add-point
 
                  "  LEFT JOIN stff_t ON stffent = stfaent AND stfa001 = stff001", "  ", 
                  #add-point:browser_fill段sql(stff_t1) name="browser_fill.join.stff_t1"
               " AND stffent = stfeent AND stff001 = stfe001 AND stff003 = stfeseq AND stff002 = stfe002 ",
                  #end add-point
 
 
                  "  LEFT JOIN stfd_t ON stfdent = stfaent AND stfc001 = stfd001 AND stfcseq = stfdseq", "  ", 
                  #add-point:browser_fill段sql(stfd_t1) name="browser_fill.join.stfd_t1"
               ""
               END IF
               LET g_sql = g_sql,
                  #end add-point
 
 
                  " ", 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
                  " ",                      
 
 
                  " ",
 
 
                                 " LEFT JOIN stfal_t t1 ON t1.stfalent="||g_enterprise||" AND t1.stfal001=t0.stfa005 AND t1.stfal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t2 ON t2.pmaalent="||g_enterprise||" AND t2.pmaal001=t0.stfa010 AND t2.pmaal002='"||g_dlang||"' ",
 
                  " WHERE t0.stfaent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("stfa_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.stfastus,t0.stfa001,t0.stfa002,t0.stfa003,t0.stfa004,t0.stfa005, 
          t0.stfa006,t0.stfa007,t0.stfa008,t0.stfa009,t0.stfa010,t0.stfa011,t0.stfa012,t0.stfa013,t0.stfa014, 
          t0.stfa015,t0.stfa016,t0.stfa017,t0.stfa018,t0.stfa019,t0.stfa020,t0.stfa021,t0.stfa022,t0.stfa023, 
          t0.stfa024,t0.stfa025,t0.stfa026,t0.stfa027,t0.stfa028,t0.stfa029,t0.stfa030,t0.stfa031,t0.stfa032, 
          t0.stfa033,t0.stfa034,t0.stfa035,t0.stfa036,t0.stfa037,t0.stfa038,t0.stfa039,t0.stfa040,t0.stfa042, 
          t0.stfa044,t0.stfa045,t0.stfa046,t0.stfa047,t0.stfa048,t0.stfa049,t0.stfasite,t0.stfaunit, 
          t1.stfal003 ,t2.pmaal004 ",
                  " FROM stfa_t t0",
                  "  ",
                                 " LEFT JOIN stfal_t t1 ON t1.stfalent="||g_enterprise||" AND t1.stfal001=t0.stfa005 AND t1.stfal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t2 ON t2.pmaalent="||g_enterprise||" AND t2.pmaal001=t0.stfa010 AND t2.pmaal002='"||g_dlang||"' ",
 
                  " WHERE t0.stfaent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("stfa_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   LET g_sql = " SELECT DISTINCT t0.stfastus,t0.stfa001,t0.stfa002,t0.stfa003,t0.stfa004,t0.stfa005, 
                                 t0.stfa006,t0.stfa007,t0.stfa008,t0.stfa009,t0.stfa010,t0.stfa011,t0.stfa012,t0.stfa013,t0.stfa014, 
                                 t0.stfa015,t0.stfa016,t0.stfa017,t0.stfa018,t0.stfa019,t0.stfa020,t0.stfa021,t0.stfa022,t0.stfa023, 
                                 t0.stfa024,t0.stfa025,t0.stfa026,t0.stfa027,t0.stfa028,t0.stfa029,t0.stfa030,t0.stfa031,t0.stfa032, 
                                 t0.stfa033,t0.stfa034,t0.stfa035,t0.stfa036,t0.stfa037,t0.stfa038,t0.stfa039,t0.stfa040,t0.stfa042, 
                                 t0.stfa044,t0.stfa045,t0.stfa046,t0.stfa047,t0.stfa048,t0.stfa049,t0.stfasite,t0.stfaunit,t1.stfal003,t1.pmaal004 ", 
               " FROM stfa_t t0 "
   IF g_wc2_table1 <> " 1=1" THEN 
      LET g_sql = g_sql,"  LEFT JOIN stfb_t ON stfbent = stfaent AND stfa001 = stfb001 "
   END IF
   IF g_wc2_table2 <> " 1=1" THEN 
      LET g_sql = g_sql,"  LEFT JOIN stfk_t ON stfkent = stfaent AND stfa001 = stfk001"
   END IF 
   IF g_wc2_table3 <> " 1=1" THEN 
      LET g_sql = g_sql,"  LEFT JOIN stfl_t ON stflent = stfaent AND stfa001 = stfl001"
   END IF 
   IF g_wc2_table4 <> " 1=1" THEN 
      LET g_sql = g_sql,"  LEFT JOIN stfw_t ON stfwent = stfaent AND stfa001 = stfw001"
   END IF 
   IF g_wc2_table5 <> " 1=1" THEN 
      LET g_sql = g_sql,"  LEFT JOIN stfc_t ON stfcent = stfaent AND stfa001 = stfc001"
   END IF 
   IF g_wc2_table6 <> " 1=1" THEN 
      LET g_sql = g_sql,"  LEFT JOIN stfe_t ON stfeent = stfaent AND stfa001 = stfe001"
   END IF 
   IF g_wc2_table7 <> " 1=1" THEN 
      LET g_sql = g_sql,"  LEFT JOIN stfg_t ON stfgent = stfaent AND stfa001 = stfg001"
   END IF 
   IF g_wc2_table8 <> " 1=1" THEN 
      LET g_sql = g_sql,"  LEFT JOIN stfh_t ON stfhent = stfaent AND stfa001 = stfh001"
   END IF 
   IF g_wc2_table9 <> " 1=1" THEN 
      LET g_sql = g_sql,"  LEFT JOIN stfi_t ON stfient = stfaent AND stfa001 = stfi001"
   END IF 
   IF g_wc2_table10 <> " 1=1" THEN 
      LET g_sql = g_sql,"  LEFT JOIN stfj_t ON stfjent = stfaent AND stfa001 = stfj001"
   END IF 
   IF g_wc2_table11 <> " 1=1" THEN 
      LET g_sql = g_sql,"  LEFT JOIN stff_t ON stffent = stfaent AND stfa001 = stff001"
   END IF 
   IF g_wc2_table12 <> " 1=1" THEN 
      LET g_sql = g_sql,"  LEFT JOIN stfd_t ON stfdent = stfaent AND stfc001 = stfd001 AND stfcseq = stfdseq"
   END IF 
   LET g_sql = g_sql," LEFT JOIN stfal_t t1 ON t1.stfalent='"||g_enterprise||"' AND t1.stfal001=t0.stfa001 AND stfal002='"||g_lang||"' ",
                     " LEFT JOIN pmaal_t t1 ON t1.pmaalent='"||g_enterprise||"' AND t1.pmaal001=t0.stfa010 AND t1.pmaal002='"||g_dlang||"' ",
                     " WHERE t0.stfaent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("stfa_t")
   #end add-point
   LET g_sql = g_sql, " ORDER BY stfa001 ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"stfa_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_stfa001,g_browser[g_cnt].b_stfa002, 
          g_browser[g_cnt].b_stfa003,g_browser[g_cnt].b_stfa004,g_browser[g_cnt].b_stfa005,g_browser[g_cnt].b_stfa006, 
          g_browser[g_cnt].b_stfa007,g_browser[g_cnt].b_stfa008,g_browser[g_cnt].b_stfa009,g_browser[g_cnt].b_stfa010, 
          g_browser[g_cnt].b_stfa011,g_browser[g_cnt].b_stfa012,g_browser[g_cnt].b_stfa013,g_browser[g_cnt].b_stfa014, 
          g_browser[g_cnt].b_stfa015,g_browser[g_cnt].b_stfa016,g_browser[g_cnt].b_stfa017,g_browser[g_cnt].b_stfa018, 
          g_browser[g_cnt].b_stfa019,g_browser[g_cnt].b_stfa020,g_browser[g_cnt].b_stfa021,g_browser[g_cnt].b_stfa022, 
          g_browser[g_cnt].b_stfa023,g_browser[g_cnt].b_stfa024,g_browser[g_cnt].b_stfa025,g_browser[g_cnt].b_stfa026, 
          g_browser[g_cnt].b_stfa027,g_browser[g_cnt].b_stfa028,g_browser[g_cnt].b_stfa029,g_browser[g_cnt].b_stfa030, 
          g_browser[g_cnt].b_stfa031,g_browser[g_cnt].b_stfa032,g_browser[g_cnt].b_stfa033,g_browser[g_cnt].b_stfa034, 
          g_browser[g_cnt].b_stfa035,g_browser[g_cnt].b_stfa036,g_browser[g_cnt].b_stfa037,g_browser[g_cnt].b_stfa038, 
          g_browser[g_cnt].b_stfa039,g_browser[g_cnt].b_stfa040,g_browser[g_cnt].b_stfa042,g_browser[g_cnt].b_stfa044, 
          g_browser[g_cnt].b_stfa045,g_browser[g_cnt].b_stfa046,g_browser[g_cnt].b_stfa047,g_browser[g_cnt].b_stfa048, 
          g_browser[g_cnt].b_stfa049,g_browser[g_cnt].b_stfasite,g_browser[g_cnt].b_stfaunit,g_browser[g_cnt].b_stfa005_desc, 
          g_browser[g_cnt].b_stfa010_desc
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         
         #end add-point
      
         #遮罩相關處理
         CALL astm401_browser_mask()
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/open.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/valid.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/void.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_stfa001) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
 
END FUNCTION
 
{</section>}
 
{<section id="astm401.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION astm401_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_stfa_m.stfa001 = g_browser[g_current_idx].b_stfa001   
 
   EXECUTE astm401_master_referesh USING g_stfa_m.stfa001 INTO g_stfa_m.stfaunit,g_stfa_m.stfasite,g_stfa_m.stfa001, 
       g_stfa_m.stfa002,g_stfa_m.stfa003,g_stfa_m.stfa004,g_stfa_m.stfa009,g_stfa_m.stfastus,g_stfa_m.stfa010, 
       g_stfa_m.stfa005,g_stfa_m.stfa007,g_stfa_m.stfa008,g_stfa_m.stfa047,g_stfa_m.stfa048,g_stfa_m.stfa044, 
       g_stfa_m.stfa051,g_stfa_m.stfa011,g_stfa_m.stfa012,g_stfa_m.stfa033,g_stfa_m.stfa034,g_stfa_m.stfa036, 
       g_stfa_m.stfa037,g_stfa_m.stfa038,g_stfa_m.stfa045,g_stfa_m.stfa046,g_stfa_m.stfa029,g_stfa_m.stfa030, 
       g_stfa_m.stfa032,g_stfa_m.stfa035,g_stfa_m.stfa050,g_stfa_m.stfa028,g_stfa_m.stfa057,g_stfa_m.stfa058, 
       g_stfa_m.stfa039,g_stfa_m.stfa040,g_stfa_m.stfa052,g_stfa_m.stfa013,g_stfa_m.stfa014,g_stfa_m.stfa015, 
       g_stfa_m.stfa016,g_stfa_m.stfa006,g_stfa_m.stfa053,g_stfa_m.stfa055,g_stfa_m.stfa017,g_stfa_m.stfa021, 
       g_stfa_m.stfa024,g_stfa_m.stfa018,g_stfa_m.stfa022,g_stfa_m.stfa025,g_stfa_m.stfa019,g_stfa_m.stfa023, 
       g_stfa_m.stfa026,g_stfa_m.stfa020,g_stfa_m.stfa049,g_stfa_m.stfa056,g_stfa_m.stfa054,g_stfa_m.stfa027, 
       g_stfa_m.stfa031,g_stfa_m.stfa043,g_stfa_m.stfaownid,g_stfa_m.stfaowndp,g_stfa_m.stfacrtid,g_stfa_m.stfacrtdp, 
       g_stfa_m.stfacrtdt,g_stfa_m.stfamodid,g_stfa_m.stfamoddt,g_stfa_m.stfacnfid,g_stfa_m.stfacnfdt, 
       g_stfa_m.stfaunit_desc,g_stfa_m.stfasite_desc,g_stfa_m.stfa010_desc,g_stfa_m.stfa010_desc_desc, 
       g_stfa_m.stfa047_desc,g_stfa_m.stfa048_desc,g_stfa_m.stfa044_desc,g_stfa_m.stfa051_desc,g_stfa_m.stfa011_desc, 
       g_stfa_m.stfa012_desc,g_stfa_m.stfa032_desc,g_stfa_m.stfa035_desc,g_stfa_m.stfaownid_desc,g_stfa_m.stfaowndp_desc, 
       g_stfa_m.stfacrtid_desc,g_stfa_m.stfacrtdp_desc,g_stfa_m.stfamodid_desc,g_stfa_m.stfacnfid_desc 
 
   
   CALL astm401_stfa_t_mask()
   CALL astm401_show()
      
END FUNCTION
 
{</section>}
 
{<section id="astm401.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION astm401_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail10",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail11",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail12",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail5",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail6",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail7",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail8",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail9",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="astm401.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION astm401_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_stfa001 = g_stfa_m.stfa001 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="astm401.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION astm401_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_stfa_m.* TO NULL
   CALL g_stfb_d.clear()        
   CALL g_stfb10_d.clear() 
   CALL g_stfb11_d.clear() 
   CALL g_stfb12_d.clear() 
   CALL g_stfb2_d.clear() 
   CALL g_stfb3_d.clear() 
   CALL g_stfb4_d.clear() 
   CALL g_stfb5_d.clear() 
   CALL g_stfb6_d.clear() 
   CALL g_stfb7_d.clear() 
   CALL g_stfb8_d.clear() 
   CALL g_stfb9_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
   INITIALIZE g_wc2_table4 TO NULL
 
   INITIALIZE g_wc2_table5 TO NULL
 
   INITIALIZE g_wc2_table6 TO NULL
 
   INITIALIZE g_wc2_table7 TO NULL
 
   INITIALIZE g_wc2_table8 TO NULL
 
   INITIALIZE g_wc2_table9 TO NULL
 
   INITIALIZE g_wc2_table10 TO NULL
 
   INITIALIZE g_wc2_table11 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON stfaunit,stfasite,stfa001,stfa002,stfa003,stfa004,stfa009,stfastus,stfa010, 
          stfa005,stfal003,stfal004,stfa007,stfa008,stfa047,stfa048,stfa044,stfa051,stfa011,stfa012, 
          stfa033,stfa034,stfa036,stfa037,stfa038,stfa029,stfa030,stfa032,stfa035,stfa050,stfa028,stfa057, 
          stfa058,stfa039,stfa040,stfa052,stfa013,stfa014,stfa015,stfa016,stfa006,stfa053,stfa055,stfa017, 
          stfa021,stfa024,stfa018,stfa022,stfa025,stfa019,stfa023,stfa026,stfa020,stfa049,stfa056,stfa054, 
          stfa027,stfa031,stfa043,stfaownid,stfaowndp,stfacrtid,stfacrtdp,stfacrtdt,stfamodid,stfamoddt, 
          stfacnfid,stfacnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<stfacrtdt>>----
         AFTER FIELD stfacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<stfamoddt>>----
         AFTER FIELD stfamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<stfacnfdt>>----
         AFTER FIELD stfacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<stfapstdt>>----
 
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.stfaunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfaunit
            #add-point:ON ACTION controlp INFIELD stfaunit name="construct.c.stfaunit"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'steasite',g_site,'c')
            CALL q_ooef001_24()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfaunit  #顯示到畫面上
            NEXT FIELD stfaunit                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfaunit
            #add-point:BEFORE FIELD stfaunit name="construct.b.stfaunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfaunit
            
            #add-point:AFTER FIELD stfaunit name="construct.a.stfaunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfasite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfasite
            #add-point:ON ACTION controlp INFIELD stfasite name="construct.c.stfasite"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'steasite',g_site,'c')
            CALL q_ooef001_24()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfasite  #顯示到畫面上
            NEXT FIELD stfasite                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfasite
            #add-point:BEFORE FIELD stfasite name="construct.b.stfasite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfasite
            
            #add-point:AFTER FIELD stfasite name="construct.a.stfasite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa001
            #add-point:ON ACTION controlp INFIELD stfa001 name="construct.c.stfa001"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stfa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa001  #顯示到畫面上
            NEXT FIELD stfa001                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa001
            #add-point:BEFORE FIELD stfa001 name="construct.b.stfa001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa001
            
            #add-point:AFTER FIELD stfa001 name="construct.a.stfa001"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa002
            #add-point:BEFORE FIELD stfa002 name="construct.b.stfa002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa002
            
            #add-point:AFTER FIELD stfa002 name="construct.a.stfa002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa002
            #add-point:ON ACTION controlp INFIELD stfa002 name="construct.c.stfa002"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa003
            #add-point:BEFORE FIELD stfa003 name="construct.b.stfa003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa003
            
            #add-point:AFTER FIELD stfa003 name="construct.a.stfa003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa003
            #add-point:ON ACTION controlp INFIELD stfa003 name="construct.c.stfa003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa004
            #add-point:BEFORE FIELD stfa004 name="construct.b.stfa004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa004
            
            #add-point:AFTER FIELD stfa004 name="construct.a.stfa004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa004
            #add-point:ON ACTION controlp INFIELD stfa004 name="construct.c.stfa004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa009
            #add-point:BEFORE FIELD stfa009 name="construct.b.stfa009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa009
            
            #add-point:AFTER FIELD stfa009 name="construct.a.stfa009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa009
            #add-point:ON ACTION controlp INFIELD stfa009 name="construct.c.stfa009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfastus
            #add-point:BEFORE FIELD stfastus name="construct.b.stfastus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfastus
            
            #add-point:AFTER FIELD stfastus name="construct.a.stfastus"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfastus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfastus
            #add-point:ON ACTION controlp INFIELD stfastus name="construct.c.stfastus"
            
            #END add-point
 
 
         #Ctrlp:construct.c.stfa010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa010
            #add-point:ON ACTION controlp INFIELD stfa010 name="construct.c.stfa010"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "('1','3')"
            CALL q_pmaa001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa010  #顯示到畫面上
            NEXT FIELD stfa010                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa010
            #add-point:BEFORE FIELD stfa010 name="construct.b.stfa010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa010
            
            #add-point:AFTER FIELD stfa010 name="construct.a.stfa010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa005
            #add-point:ON ACTION controlp INFIELD stfa005 name="construct.c.stfa005"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'steasite',g_site,'c')
            CALL q_mhae001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa005  #顯示到畫面上
            NEXT FIELD stfa005                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa005
            #add-point:BEFORE FIELD stfa005 name="construct.b.stfa005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa005
            
            #add-point:AFTER FIELD stfa005 name="construct.a.stfa005"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfal003
            #add-point:BEFORE FIELD stfal003 name="construct.b.stfal003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfal003
            
            #add-point:AFTER FIELD stfal003 name="construct.a.stfal003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfal003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfal003
            #add-point:ON ACTION controlp INFIELD stfal003 name="construct.c.stfal003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfal004
            #add-point:BEFORE FIELD stfal004 name="construct.b.stfal004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfal004
            
            #add-point:AFTER FIELD stfal004 name="construct.a.stfal004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfal004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfal004
            #add-point:ON ACTION controlp INFIELD stfal004 name="construct.c.stfal004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa007
            #add-point:BEFORE FIELD stfa007 name="construct.b.stfa007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa007
            
            #add-point:AFTER FIELD stfa007 name="construct.a.stfa007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa007
            #add-point:ON ACTION controlp INFIELD stfa007 name="construct.c.stfa007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa008
            #add-point:BEFORE FIELD stfa008 name="construct.b.stfa008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa008
            
            #add-point:AFTER FIELD stfa008 name="construct.a.stfa008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa008
            #add-point:ON ACTION controlp INFIELD stfa008 name="construct.c.stfa008"
            
            #END add-point
 
 
         #Ctrlp:construct.c.stfa047
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa047
            #add-point:ON ACTION controlp INFIELD stfa047 name="construct.c.stfa047"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_mhaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa047  #顯示到畫面上
            NEXT FIELD stfa047                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa047
            #add-point:BEFORE FIELD stfa047 name="construct.b.stfa047"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa047
            
            #add-point:AFTER FIELD stfa047 name="construct.a.stfa047"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa048
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa048
            #add-point:ON ACTION controlp INFIELD stfa048 name="construct.c.stfa048"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_mhab002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa048  #顯示到畫面上
            NEXT FIELD stfa048                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa048
            #add-point:BEFORE FIELD stfa048 name="construct.b.stfa048"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa048
            
            #add-point:AFTER FIELD stfa048 name="construct.a.stfa048"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa044
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa044
            #add-point:ON ACTION controlp INFIELD stfa044 name="construct.c.stfa044"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa044  #顯示到畫面上
            NEXT FIELD stfa044                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa044
            #add-point:BEFORE FIELD stfa044 name="construct.b.stfa044"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa044
            
            #add-point:AFTER FIELD stfa044 name="construct.a.stfa044"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa051
            #add-point:BEFORE FIELD stfa051 name="construct.b.stfa051"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa051
            
            #add-point:AFTER FIELD stfa051 name="construct.a.stfa051"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa051
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa051
            #add-point:ON ACTION controlp INFIELD stfa051 name="construct.c.stfa051"
            
            #END add-point
 
 
         #Ctrlp:construct.c.stfa011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa011
            #add-point:ON ACTION controlp INFIELD stfa011 name="construct.c.stfa011"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_rtax001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa011  #顯示到畫面上
            NEXT FIELD stfa011                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa011
            #add-point:BEFORE FIELD stfa011 name="construct.b.stfa011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa011
            
            #add-point:AFTER FIELD stfa011 name="construct.a.stfa011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa012
            #add-point:ON ACTION controlp INFIELD stfa012 name="construct.c.stfa012"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002_2002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa012  #顯示到畫面上
            NEXT FIELD stfa012                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa012
            #add-point:BEFORE FIELD stfa012 name="construct.b.stfa012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa012
            
            #add-point:AFTER FIELD stfa012 name="construct.a.stfa012"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa033
            #add-point:BEFORE FIELD stfa033 name="construct.b.stfa033"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa033
            
            #add-point:AFTER FIELD stfa033 name="construct.a.stfa033"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa033
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa033
            #add-point:ON ACTION controlp INFIELD stfa033 name="construct.c.stfa033"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_oodb002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa033  #顯示到畫面上
            NEXT FIELD stfa033                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa034
            #add-point:BEFORE FIELD stfa034 name="construct.b.stfa034"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa034
            
            #add-point:AFTER FIELD stfa034 name="construct.a.stfa034"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa034
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa034
            #add-point:ON ACTION controlp INFIELD stfa034 name="construct.c.stfa034"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_oodb002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa034  #顯示到畫面上
            NEXT FIELD stfa034                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa036
            #add-point:BEFORE FIELD stfa036 name="construct.b.stfa036"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa036
            
            #add-point:AFTER FIELD stfa036 name="construct.a.stfa036"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa036
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa036
            #add-point:ON ACTION controlp INFIELD stfa036 name="construct.c.stfa036"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_staa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa036  #顯示到畫面上
            NEXT FIELD stfa036                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa037
            #add-point:BEFORE FIELD stfa037 name="construct.b.stfa037"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa037
            
            #add-point:AFTER FIELD stfa037 name="construct.a.stfa037"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa037
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa037
            #add-point:ON ACTION controlp INFIELD stfa037 name="construct.c.stfa037"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "2060"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa037  #顯示到畫面上
            NEXT FIELD stfa037                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa038
            #add-point:BEFORE FIELD stfa038 name="construct.b.stfa038"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa038
            
            #add-point:AFTER FIELD stfa038 name="construct.a.stfa038"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa038
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa038
            #add-point:ON ACTION controlp INFIELD stfa038 name="construct.c.stfa038"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001_23()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa038  #顯示到畫面上
            NEXT FIELD stfa038                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa029
            #add-point:BEFORE FIELD stfa029 name="construct.b.stfa029"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa029
            
            #add-point:AFTER FIELD stfa029 name="construct.a.stfa029"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa029
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa029
            #add-point:ON ACTION controlp INFIELD stfa029 name="construct.c.stfa029"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa030
            #add-point:BEFORE FIELD stfa030 name="construct.b.stfa030"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa030
            
            #add-point:AFTER FIELD stfa030 name="construct.a.stfa030"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa030
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa030
            #add-point:ON ACTION controlp INFIELD stfa030 name="construct.c.stfa030"
            
            #END add-point
 
 
         #Ctrlp:construct.c.stfa032
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa032
            #add-point:ON ACTION controlp INFIELD stfa032 name="construct.c.stfa032"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_aooi001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa032  #顯示到畫面上
            NEXT FIELD stfa032                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa032
            #add-point:BEFORE FIELD stfa032 name="construct.b.stfa032"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa032
            
            #add-point:AFTER FIELD stfa032 name="construct.a.stfa032"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa035
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa035
            #add-point:ON ACTION controlp INFIELD stfa035 name="construct.c.stfa035"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooib002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa035  #顯示到畫面上
            NEXT FIELD stfa035                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa035
            #add-point:BEFORE FIELD stfa035 name="construct.b.stfa035"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa035
            
            #add-point:AFTER FIELD stfa035 name="construct.a.stfa035"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa050
            #add-point:BEFORE FIELD stfa050 name="construct.b.stfa050"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa050
            
            #add-point:AFTER FIELD stfa050 name="construct.a.stfa050"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa050
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa050
            #add-point:ON ACTION controlp INFIELD stfa050 name="construct.c.stfa050"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa028
            #add-point:BEFORE FIELD stfa028 name="construct.b.stfa028"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa028
            
            #add-point:AFTER FIELD stfa028 name="construct.a.stfa028"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa028
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa028
            #add-point:ON ACTION controlp INFIELD stfa028 name="construct.c.stfa028"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa057
            #add-point:BEFORE FIELD stfa057 name="construct.b.stfa057"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa057
            
            #add-point:AFTER FIELD stfa057 name="construct.a.stfa057"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa057
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa057
            #add-point:ON ACTION controlp INFIELD stfa057 name="construct.c.stfa057"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa058
            #add-point:BEFORE FIELD stfa058 name="construct.b.stfa058"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa058
            
            #add-point:AFTER FIELD stfa058 name="construct.a.stfa058"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa058
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa058
            #add-point:ON ACTION controlp INFIELD stfa058 name="construct.c.stfa058"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa039
            #add-point:BEFORE FIELD stfa039 name="construct.b.stfa039"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa039
            
            #add-point:AFTER FIELD stfa039 name="construct.a.stfa039"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa039
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa039
            #add-point:ON ACTION controlp INFIELD stfa039 name="construct.c.stfa039"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa040
            #add-point:BEFORE FIELD stfa040 name="construct.b.stfa040"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa040
            
            #add-point:AFTER FIELD stfa040 name="construct.a.stfa040"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa040
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa040
            #add-point:ON ACTION controlp INFIELD stfa040 name="construct.c.stfa040"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa052
            #add-point:BEFORE FIELD stfa052 name="construct.b.stfa052"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa052
            
            #add-point:AFTER FIELD stfa052 name="construct.a.stfa052"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa052
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa052
            #add-point:ON ACTION controlp INFIELD stfa052 name="construct.c.stfa052"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa013
            #add-point:BEFORE FIELD stfa013 name="construct.b.stfa013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa013
            
            #add-point:AFTER FIELD stfa013 name="construct.a.stfa013"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa013
            #add-point:ON ACTION controlp INFIELD stfa013 name="construct.c.stfa013"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa013  #顯示到畫面上
            NEXT FIELD stfa013                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa014
            #add-point:BEFORE FIELD stfa014 name="construct.b.stfa014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa014
            
            #add-point:AFTER FIELD stfa014 name="construct.a.stfa014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa014
            #add-point:ON ACTION controlp INFIELD stfa014 name="construct.c.stfa014"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            #161024-00025#4 -s by 08172
            LET g_qryparam.where = " ooef003='Y'"
            CALL q_ooef001_24()
#            CALL q_ooef001_2()                           #呼叫開窗
            #161024-00025#4 -e by 08172
            DISPLAY g_qryparam.return1 TO stfa014  #顯示到畫面上
            NEXT FIELD stfa014                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa015
            #add-point:BEFORE FIELD stfa015 name="construct.b.stfa015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa015
            
            #add-point:AFTER FIELD stfa015 name="construct.a.stfa015"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa015
            #add-point:ON ACTION controlp INFIELD stfa015 name="construct.c.stfa015"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa015  #顯示到畫面上
            NEXT FIELD stfa015                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa016
            #add-point:BEFORE FIELD stfa016 name="construct.b.stfa016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa016
            
            #add-point:AFTER FIELD stfa016 name="construct.a.stfa016"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa016
            #add-point:ON ACTION controlp INFIELD stfa016 name="construct.c.stfa016"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa006
            #add-point:BEFORE FIELD stfa006 name="construct.b.stfa006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa006
            
            #add-point:AFTER FIELD stfa006 name="construct.a.stfa006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa006
            #add-point:ON ACTION controlp INFIELD stfa006 name="construct.c.stfa006"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002_2126()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa006  #顯示到畫面上
            NEXT FIELD stfa006                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa053
            #add-point:BEFORE FIELD stfa053 name="construct.b.stfa053"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa053
            
            #add-point:AFTER FIELD stfa053 name="construct.a.stfa053"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa053
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa053
            #add-point:ON ACTION controlp INFIELD stfa053 name="construct.c.stfa053"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa055
            #add-point:BEFORE FIELD stfa055 name="construct.b.stfa055"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa055
            
            #add-point:AFTER FIELD stfa055 name="construct.a.stfa055"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa055
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa055
            #add-point:ON ACTION controlp INFIELD stfa055 name="construct.c.stfa055"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa017
            #add-point:BEFORE FIELD stfa017 name="construct.b.stfa017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa017
            
            #add-point:AFTER FIELD stfa017 name="construct.a.stfa017"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa017
            #add-point:ON ACTION controlp INFIELD stfa017 name="construct.c.stfa017"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa021
            #add-point:BEFORE FIELD stfa021 name="construct.b.stfa021"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa021
            
            #add-point:AFTER FIELD stfa021 name="construct.a.stfa021"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa021
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa021
            #add-point:ON ACTION controlp INFIELD stfa021 name="construct.c.stfa021"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa024
            #add-point:BEFORE FIELD stfa024 name="construct.b.stfa024"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa024
            
            #add-point:AFTER FIELD stfa024 name="construct.a.stfa024"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa024
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa024
            #add-point:ON ACTION controlp INFIELD stfa024 name="construct.c.stfa024"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa018
            #add-point:BEFORE FIELD stfa018 name="construct.b.stfa018"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa018
            
            #add-point:AFTER FIELD stfa018 name="construct.a.stfa018"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa018
            #add-point:ON ACTION controlp INFIELD stfa018 name="construct.c.stfa018"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa022
            #add-point:BEFORE FIELD stfa022 name="construct.b.stfa022"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa022
            
            #add-point:AFTER FIELD stfa022 name="construct.a.stfa022"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa022
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa022
            #add-point:ON ACTION controlp INFIELD stfa022 name="construct.c.stfa022"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa025
            #add-point:BEFORE FIELD stfa025 name="construct.b.stfa025"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa025
            
            #add-point:AFTER FIELD stfa025 name="construct.a.stfa025"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa025
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa025
            #add-point:ON ACTION controlp INFIELD stfa025 name="construct.c.stfa025"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa019
            #add-point:BEFORE FIELD stfa019 name="construct.b.stfa019"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa019
            
            #add-point:AFTER FIELD stfa019 name="construct.a.stfa019"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa019
            #add-point:ON ACTION controlp INFIELD stfa019 name="construct.c.stfa019"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa023
            #add-point:BEFORE FIELD stfa023 name="construct.b.stfa023"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa023
            
            #add-point:AFTER FIELD stfa023 name="construct.a.stfa023"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa023
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa023
            #add-point:ON ACTION controlp INFIELD stfa023 name="construct.c.stfa023"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa026
            #add-point:BEFORE FIELD stfa026 name="construct.b.stfa026"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa026
            
            #add-point:AFTER FIELD stfa026 name="construct.a.stfa026"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa026
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa026
            #add-point:ON ACTION controlp INFIELD stfa026 name="construct.c.stfa026"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa020
            #add-point:BEFORE FIELD stfa020 name="construct.b.stfa020"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa020
            
            #add-point:AFTER FIELD stfa020 name="construct.a.stfa020"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa020
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa020
            #add-point:ON ACTION controlp INFIELD stfa020 name="construct.c.stfa020"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa049
            #add-point:BEFORE FIELD stfa049 name="construct.b.stfa049"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa049
            
            #add-point:AFTER FIELD stfa049 name="construct.a.stfa049"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa049
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa049
            #add-point:ON ACTION controlp INFIELD stfa049 name="construct.c.stfa049"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa056
            #add-point:BEFORE FIELD stfa056 name="construct.b.stfa056"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa056
            
            #add-point:AFTER FIELD stfa056 name="construct.a.stfa056"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa056
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa056
            #add-point:ON ACTION controlp INFIELD stfa056 name="construct.c.stfa056"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa054
            #add-point:BEFORE FIELD stfa054 name="construct.b.stfa054"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa054
            
            #add-point:AFTER FIELD stfa054 name="construct.a.stfa054"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa054
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa054
            #add-point:ON ACTION controlp INFIELD stfa054 name="construct.c.stfa054"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa027
            #add-point:BEFORE FIELD stfa027 name="construct.b.stfa027"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa027
            
            #add-point:AFTER FIELD stfa027 name="construct.a.stfa027"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa027
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa027
            #add-point:ON ACTION controlp INFIELD stfa027 name="construct.c.stfa027"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa031
            #add-point:BEFORE FIELD stfa031 name="construct.b.stfa031"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa031
            
            #add-point:AFTER FIELD stfa031 name="construct.a.stfa031"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa031
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa031
            #add-point:ON ACTION controlp INFIELD stfa031 name="construct.c.stfa031"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa043
            #add-point:BEFORE FIELD stfa043 name="construct.b.stfa043"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa043
            
            #add-point:AFTER FIELD stfa043 name="construct.a.stfa043"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa043
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa043
            #add-point:ON ACTION controlp INFIELD stfa043 name="construct.c.stfa043"
            
            #END add-point
 
 
         #Ctrlp:construct.c.stfaownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfaownid
            #add-point:ON ACTION controlp INFIELD stfaownid name="construct.c.stfaownid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfaownid  #顯示到畫面上
            NEXT FIELD stfaownid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfaownid
            #add-point:BEFORE FIELD stfaownid name="construct.b.stfaownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfaownid
            
            #add-point:AFTER FIELD stfaownid name="construct.a.stfaownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfaowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfaowndp
            #add-point:ON ACTION controlp INFIELD stfaowndp name="construct.c.stfaowndp"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfaowndp  #顯示到畫面上
            NEXT FIELD stfaowndp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfaowndp
            #add-point:BEFORE FIELD stfaowndp name="construct.b.stfaowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfaowndp
            
            #add-point:AFTER FIELD stfaowndp name="construct.a.stfaowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfacrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfacrtid
            #add-point:ON ACTION controlp INFIELD stfacrtid name="construct.c.stfacrtid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfacrtid  #顯示到畫面上
            NEXT FIELD stfacrtid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfacrtid
            #add-point:BEFORE FIELD stfacrtid name="construct.b.stfacrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfacrtid
            
            #add-point:AFTER FIELD stfacrtid name="construct.a.stfacrtid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfacrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfacrtdp
            #add-point:ON ACTION controlp INFIELD stfacrtdp name="construct.c.stfacrtdp"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfacrtdp  #顯示到畫面上
            NEXT FIELD stfacrtdp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfacrtdp
            #add-point:BEFORE FIELD stfacrtdp name="construct.b.stfacrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfacrtdp
            
            #add-point:AFTER FIELD stfacrtdp name="construct.a.stfacrtdp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfacrtdt
            #add-point:BEFORE FIELD stfacrtdt name="construct.b.stfacrtdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.stfamodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfamodid
            #add-point:ON ACTION controlp INFIELD stfamodid name="construct.c.stfamodid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfamodid  #顯示到畫面上
            NEXT FIELD stfamodid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfamodid
            #add-point:BEFORE FIELD stfamodid name="construct.b.stfamodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfamodid
            
            #add-point:AFTER FIELD stfamodid name="construct.a.stfamodid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfamoddt
            #add-point:BEFORE FIELD stfamoddt name="construct.b.stfamoddt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.stfacnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfacnfid
            #add-point:ON ACTION controlp INFIELD stfacnfid name="construct.c.stfacnfid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfacnfid  #顯示到畫面上
            NEXT FIELD stfacnfid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfacnfid
            #add-point:BEFORE FIELD stfacnfid name="construct.b.stfacnfid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfacnfid
            
            #add-point:AFTER FIELD stfacnfid name="construct.a.stfacnfid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfacnfdt
            #add-point:BEFORE FIELD stfacnfdt name="construct.b.stfacnfdt"
            
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON stfbseq,stfb002,stfb018,stfb019,stfb003,stfb004,stfb005,stfb006,stfb007, 
          stfb020,stfb008,stfb009,stfb010,stfb011,stfb012,stfb013,stfb014,stfb026,stfb015,stfb016,stfb017, 
          stfb021,stfb022,stfb023,stfb024,stfb025,stfbsite,stfbunit
           FROM s_detail1[1].stfbseq,s_detail1[1].stfb002,s_detail1[1].stfb018,s_detail1[1].stfb019, 
               s_detail1[1].stfb003,s_detail1[1].stfb004,s_detail1[1].stfb005,s_detail1[1].stfb006,s_detail1[1].stfb007, 
               s_detail1[1].stfb020,s_detail1[1].stfb008,s_detail1[1].stfb009,s_detail1[1].stfb010,s_detail1[1].stfb011, 
               s_detail1[1].stfb012,s_detail1[1].stfb013,s_detail1[1].stfb014,s_detail1[1].stfb026,s_detail1[1].stfb015, 
               s_detail1[1].stfb016,s_detail1[1].stfb017,s_detail1[1].stfb021,s_detail1[1].stfb022,s_detail1[1].stfb023, 
               s_detail1[1].stfb024,s_detail1[1].stfb025,s_detail1[1].stfbsite,s_detail1[1].stfbunit 
 
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfbseq
            #add-point:BEFORE FIELD stfbseq name="construct.b.page1.stfbseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfbseq
            
            #add-point:AFTER FIELD stfbseq name="construct.a.page1.stfbseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stfbseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfbseq
            #add-point:ON ACTION controlp INFIELD stfbseq name="construct.c.page1.stfbseq"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.stfb002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb002
            #add-point:ON ACTION controlp INFIELD stfb002 name="construct.c.page1.stfb002"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stae001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfb002  #顯示到畫面上
            NEXT FIELD stfb002                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb002
            #add-point:BEFORE FIELD stfb002 name="construct.b.page1.stfb002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb002
            
            #add-point:AFTER FIELD stfb002 name="construct.a.page1.stfb002"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb018
            #add-point:BEFORE FIELD stfb018 name="construct.b.page1.stfb018"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb018
            
            #add-point:AFTER FIELD stfb018 name="construct.a.page1.stfb018"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stfb018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb018
            #add-point:ON ACTION controlp INFIELD stfb018 name="construct.c.page1.stfb018"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb019
            #add-point:BEFORE FIELD stfb019 name="construct.b.page1.stfb019"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb019
            
            #add-point:AFTER FIELD stfb019 name="construct.a.page1.stfb019"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stfb019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb019
            #add-point:ON ACTION controlp INFIELD stfb019 name="construct.c.page1.stfb019"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb003
            #add-point:BEFORE FIELD stfb003 name="construct.b.page1.stfb003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb003
            
            #add-point:AFTER FIELD stfb003 name="construct.a.page1.stfb003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stfb003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb003
            #add-point:ON ACTION controlp INFIELD stfb003 name="construct.c.page1.stfb003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb004
            #add-point:BEFORE FIELD stfb004 name="construct.b.page1.stfb004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb004
            
            #add-point:AFTER FIELD stfb004 name="construct.a.page1.stfb004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stfb004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb004
            #add-point:ON ACTION controlp INFIELD stfb004 name="construct.c.page1.stfb004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb005
            #add-point:BEFORE FIELD stfb005 name="construct.b.page1.stfb005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb005
            
            #add-point:AFTER FIELD stfb005 name="construct.a.page1.stfb005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stfb005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb005
            #add-point:ON ACTION controlp INFIELD stfb005 name="construct.c.page1.stfb005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb006
            #add-point:BEFORE FIELD stfb006 name="construct.b.page1.stfb006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb006
            
            #add-point:AFTER FIELD stfb006 name="construct.a.page1.stfb006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stfb006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb006
            #add-point:ON ACTION controlp INFIELD stfb006 name="construct.c.page1.stfb006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb007
            #add-point:BEFORE FIELD stfb007 name="construct.b.page1.stfb007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb007
            
            #add-point:AFTER FIELD stfb007 name="construct.a.page1.stfb007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stfb007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb007
            #add-point:ON ACTION controlp INFIELD stfb007 name="construct.c.page1.stfb007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb020
            #add-point:BEFORE FIELD stfb020 name="construct.b.page1.stfb020"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb020
            
            #add-point:AFTER FIELD stfb020 name="construct.a.page1.stfb020"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stfb020
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb020
            #add-point:ON ACTION controlp INFIELD stfb020 name="construct.c.page1.stfb020"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.stfb008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb008
            #add-point:ON ACTION controlp INFIELD stfb008 name="construct.c.page1.stfb008"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stab001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfb008  #顯示到畫面上
            NEXT FIELD stfb008                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb008
            #add-point:BEFORE FIELD stfb008 name="construct.b.page1.stfb008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb008
            
            #add-point:AFTER FIELD stfb008 name="construct.a.page1.stfb008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stfb009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb009
            #add-point:ON ACTION controlp INFIELD stfb009 name="construct.c.page1.stfb009"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stab001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfb009  #顯示到畫面上
            NEXT FIELD stfb009                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb009
            #add-point:BEFORE FIELD stfb009 name="construct.b.page1.stfb009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb009
            
            #add-point:AFTER FIELD stfb009 name="construct.a.page1.stfb009"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb010
            #add-point:BEFORE FIELD stfb010 name="construct.b.page1.stfb010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb010
            
            #add-point:AFTER FIELD stfb010 name="construct.a.page1.stfb010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stfb010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb010
            #add-point:ON ACTION controlp INFIELD stfb010 name="construct.c.page1.stfb010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb011
            #add-point:BEFORE FIELD stfb011 name="construct.b.page1.stfb011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb011
            
            #add-point:AFTER FIELD stfb011 name="construct.a.page1.stfb011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stfb011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb011
            #add-point:ON ACTION controlp INFIELD stfb011 name="construct.c.page1.stfb011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb012
            #add-point:BEFORE FIELD stfb012 name="construct.b.page1.stfb012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb012
            
            #add-point:AFTER FIELD stfb012 name="construct.a.page1.stfb012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stfb012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb012
            #add-point:ON ACTION controlp INFIELD stfb012 name="construct.c.page1.stfb012"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb013
            #add-point:BEFORE FIELD stfb013 name="construct.b.page1.stfb013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb013
            
            #add-point:AFTER FIELD stfb013 name="construct.a.page1.stfb013"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stfb013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb013
            #add-point:ON ACTION controlp INFIELD stfb013 name="construct.c.page1.stfb013"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb014
            #add-point:BEFORE FIELD stfb014 name="construct.b.page1.stfb014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb014
            
            #add-point:AFTER FIELD stfb014 name="construct.a.page1.stfb014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stfb014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb014
            #add-point:ON ACTION controlp INFIELD stfb014 name="construct.c.page1.stfb014"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb026
            #add-point:BEFORE FIELD stfb026 name="construct.b.page1.stfb026"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb026
            
            #add-point:AFTER FIELD stfb026 name="construct.a.page1.stfb026"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stfb026
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb026
            #add-point:ON ACTION controlp INFIELD stfb026 name="construct.c.page1.stfb026"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb015
            #add-point:BEFORE FIELD stfb015 name="construct.b.page1.stfb015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb015
            
            #add-point:AFTER FIELD stfb015 name="construct.a.page1.stfb015"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stfb015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb015
            #add-point:ON ACTION controlp INFIELD stfb015 name="construct.c.page1.stfb015"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb016
            #add-point:BEFORE FIELD stfb016 name="construct.b.page1.stfb016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb016
            
            #add-point:AFTER FIELD stfb016 name="construct.a.page1.stfb016"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stfb016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb016
            #add-point:ON ACTION controlp INFIELD stfb016 name="construct.c.page1.stfb016"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb017
            #add-point:BEFORE FIELD stfb017 name="construct.b.page1.stfb017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb017
            
            #add-point:AFTER FIELD stfb017 name="construct.a.page1.stfb017"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stfb017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb017
            #add-point:ON ACTION controlp INFIELD stfb017 name="construct.c.page1.stfb017"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb021
            #add-point:BEFORE FIELD stfb021 name="construct.b.page1.stfb021"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb021
            
            #add-point:AFTER FIELD stfb021 name="construct.a.page1.stfb021"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stfb021
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb021
            #add-point:ON ACTION controlp INFIELD stfb021 name="construct.c.page1.stfb021"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb022
            #add-point:BEFORE FIELD stfb022 name="construct.b.page1.stfb022"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb022
            
            #add-point:AFTER FIELD stfb022 name="construct.a.page1.stfb022"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stfb022
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb022
            #add-point:ON ACTION controlp INFIELD stfb022 name="construct.c.page1.stfb022"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb023
            #add-point:BEFORE FIELD stfb023 name="construct.b.page1.stfb023"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb023
            
            #add-point:AFTER FIELD stfb023 name="construct.a.page1.stfb023"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stfb023
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb023
            #add-point:ON ACTION controlp INFIELD stfb023 name="construct.c.page1.stfb023"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.stfb024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb024
            #add-point:ON ACTION controlp INFIELD stfb024 name="construct.c.page1.stfb024"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stfb024()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfb024  #顯示到畫面上
            NEXT FIELD stfb024                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb024
            #add-point:BEFORE FIELD stfb024 name="construct.b.page1.stfb024"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb024
            
            #add-point:AFTER FIELD stfb024 name="construct.a.page1.stfb024"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb025
            #add-point:BEFORE FIELD stfb025 name="construct.b.page1.stfb025"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb025
            
            #add-point:AFTER FIELD stfb025 name="construct.a.page1.stfb025"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stfb025
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb025
            #add-point:ON ACTION controlp INFIELD stfb025 name="construct.c.page1.stfb025"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfbsite
            #add-point:BEFORE FIELD stfbsite name="construct.b.page1.stfbsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfbsite
            
            #add-point:AFTER FIELD stfbsite name="construct.a.page1.stfbsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stfbsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfbsite
            #add-point:ON ACTION controlp INFIELD stfbsite name="construct.c.page1.stfbsite"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfbunit
            #add-point:BEFORE FIELD stfbunit name="construct.b.page1.stfbunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfbunit
            
            #add-point:AFTER FIELD stfbunit name="construct.a.page1.stfbunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.stfbunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfbunit
            #add-point:ON ACTION controlp INFIELD stfbunit name="construct.c.page1.stfbunit"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON stfkunit,stfksite,stfk002,stfk020,stfk021,stfk003,stfk004,stfk018,stfk019, 
          stfk005,stfk006,stfk007,stfk008,stfk009,stfk010,stfk011,stfk012,stfk013,stfk014,stfkacti,stfk015, 
          stfk016,stfk017,stfk022,stfk023,stfk024,stfk025,stfk026
           FROM s_detail10[1].stfkunit,s_detail10[1].stfksite,s_detail10[1].stfk002,s_detail10[1].stfk020, 
               s_detail10[1].stfk021,s_detail10[1].stfk003,s_detail10[1].stfk004,s_detail10[1].stfk018, 
               s_detail10[1].stfk019,s_detail10[1].stfk005,s_detail10[1].stfk006,s_detail10[1].stfk007, 
               s_detail10[1].stfk008,s_detail10[1].stfk009,s_detail10[1].stfk010,s_detail10[1].stfk011, 
               s_detail10[1].stfk012,s_detail10[1].stfk013,s_detail10[1].stfk014,s_detail10[1].stfkacti, 
               s_detail10[1].stfk015,s_detail10[1].stfk016,s_detail10[1].stfk017,s_detail10[1].stfk022, 
               s_detail10[1].stfk023,s_detail10[1].stfk024,s_detail10[1].stfk025,s_detail10[1].stfk026 
 
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body2.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfkunit
            #add-point:BEFORE FIELD stfkunit name="construct.b.page10.stfkunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfkunit
            
            #add-point:AFTER FIELD stfkunit name="construct.a.page10.stfkunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stfkunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfkunit
            #add-point:ON ACTION controlp INFIELD stfkunit name="construct.c.page10.stfkunit"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfksite
            #add-point:BEFORE FIELD stfksite name="construct.b.page10.stfksite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfksite
            
            #add-point:AFTER FIELD stfksite name="construct.a.page10.stfksite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stfksite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfksite
            #add-point:ON ACTION controlp INFIELD stfksite name="construct.c.page10.stfksite"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page10.stfk002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk002
            #add-point:ON ACTION controlp INFIELD stfk002 name="construct.c.page10.stfk002"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stae001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfk002  #顯示到畫面上
            NEXT FIELD stfk002                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk002
            #add-point:BEFORE FIELD stfk002 name="construct.b.page10.stfk002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk002
            
            #add-point:AFTER FIELD stfk002 name="construct.a.page10.stfk002"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk020
            #add-point:BEFORE FIELD stfk020 name="construct.b.page10.stfk020"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk020
            
            #add-point:AFTER FIELD stfk020 name="construct.a.page10.stfk020"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stfk020
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk020
            #add-point:ON ACTION controlp INFIELD stfk020 name="construct.c.page10.stfk020"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk021
            #add-point:BEFORE FIELD stfk021 name="construct.b.page10.stfk021"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk021
            
            #add-point:AFTER FIELD stfk021 name="construct.a.page10.stfk021"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stfk021
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk021
            #add-point:ON ACTION controlp INFIELD stfk021 name="construct.c.page10.stfk021"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk003
            #add-point:BEFORE FIELD stfk003 name="construct.b.page10.stfk003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk003
            
            #add-point:AFTER FIELD stfk003 name="construct.a.page10.stfk003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stfk003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk003
            #add-point:ON ACTION controlp INFIELD stfk003 name="construct.c.page10.stfk003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk004
            #add-point:BEFORE FIELD stfk004 name="construct.b.page10.stfk004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk004
            
            #add-point:AFTER FIELD stfk004 name="construct.a.page10.stfk004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stfk004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk004
            #add-point:ON ACTION controlp INFIELD stfk004 name="construct.c.page10.stfk004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk018
            #add-point:BEFORE FIELD stfk018 name="construct.b.page10.stfk018"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk018
            
            #add-point:AFTER FIELD stfk018 name="construct.a.page10.stfk018"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stfk018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk018
            #add-point:ON ACTION controlp INFIELD stfk018 name="construct.c.page10.stfk018"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " ooia008 = '1' "
            CALL q_ooia001()     
            DISPLAY g_qryparam.return1  TO stfk018
            NEXT FIELD stfk018
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk019
            #add-point:BEFORE FIELD stfk019 name="construct.b.page10.stfk019"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk019
            
            #add-point:AFTER FIELD stfk019 name="construct.a.page10.stfk019"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stfk019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk019
            #add-point:ON ACTION controlp INFIELD stfk019 name="construct.c.page10.stfk019"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " ooia008 = '1' "
            CALL q_ooia001()     
            DISPLAY g_qryparam.return1  TO stfk019
            NEXT FIELD stfk019
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk005
            #add-point:BEFORE FIELD stfk005 name="construct.b.page10.stfk005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk005
            
            #add-point:AFTER FIELD stfk005 name="construct.a.page10.stfk005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stfk005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk005
            #add-point:ON ACTION controlp INFIELD stfk005 name="construct.c.page10.stfk005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk006
            #add-point:BEFORE FIELD stfk006 name="construct.b.page10.stfk006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk006
            
            #add-point:AFTER FIELD stfk006 name="construct.a.page10.stfk006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stfk006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk006
            #add-point:ON ACTION controlp INFIELD stfk006 name="construct.c.page10.stfk006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk007
            #add-point:BEFORE FIELD stfk007 name="construct.b.page10.stfk007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk007
            
            #add-point:AFTER FIELD stfk007 name="construct.a.page10.stfk007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stfk007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk007
            #add-point:ON ACTION controlp INFIELD stfk007 name="construct.c.page10.stfk007"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page10.stfk008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk008
            #add-point:ON ACTION controlp INFIELD stfk008 name="construct.c.page10.stfk008"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stab001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfk008  #顯示到畫面上
            NEXT FIELD stfk008                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk008
            #add-point:BEFORE FIELD stfk008 name="construct.b.page10.stfk008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk008
            
            #add-point:AFTER FIELD stfk008 name="construct.a.page10.stfk008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stfk009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk009
            #add-point:ON ACTION controlp INFIELD stfk009 name="construct.c.page10.stfk009"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stab001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfk009  #顯示到畫面上
            NEXT FIELD stfk009                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk009
            #add-point:BEFORE FIELD stfk009 name="construct.b.page10.stfk009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk009
            
            #add-point:AFTER FIELD stfk009 name="construct.a.page10.stfk009"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk010
            #add-point:BEFORE FIELD stfk010 name="construct.b.page10.stfk010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk010
            
            #add-point:AFTER FIELD stfk010 name="construct.a.page10.stfk010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stfk010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk010
            #add-point:ON ACTION controlp INFIELD stfk010 name="construct.c.page10.stfk010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk011
            #add-point:BEFORE FIELD stfk011 name="construct.b.page10.stfk011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk011
            
            #add-point:AFTER FIELD stfk011 name="construct.a.page10.stfk011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stfk011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk011
            #add-point:ON ACTION controlp INFIELD stfk011 name="construct.c.page10.stfk011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk012
            #add-point:BEFORE FIELD stfk012 name="construct.b.page10.stfk012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk012
            
            #add-point:AFTER FIELD stfk012 name="construct.a.page10.stfk012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stfk012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk012
            #add-point:ON ACTION controlp INFIELD stfk012 name="construct.c.page10.stfk012"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk013
            #add-point:BEFORE FIELD stfk013 name="construct.b.page10.stfk013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk013
            
            #add-point:AFTER FIELD stfk013 name="construct.a.page10.stfk013"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stfk013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk013
            #add-point:ON ACTION controlp INFIELD stfk013 name="construct.c.page10.stfk013"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk014
            #add-point:BEFORE FIELD stfk014 name="construct.b.page10.stfk014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk014
            
            #add-point:AFTER FIELD stfk014 name="construct.a.page10.stfk014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stfk014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk014
            #add-point:ON ACTION controlp INFIELD stfk014 name="construct.c.page10.stfk014"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfkacti
            #add-point:BEFORE FIELD stfkacti name="construct.b.page10.stfkacti"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfkacti
            
            #add-point:AFTER FIELD stfkacti name="construct.a.page10.stfkacti"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stfkacti
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfkacti
            #add-point:ON ACTION controlp INFIELD stfkacti name="construct.c.page10.stfkacti"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk015
            #add-point:BEFORE FIELD stfk015 name="construct.b.page10.stfk015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk015
            
            #add-point:AFTER FIELD stfk015 name="construct.a.page10.stfk015"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stfk015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk015
            #add-point:ON ACTION controlp INFIELD stfk015 name="construct.c.page10.stfk015"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk016
            #add-point:BEFORE FIELD stfk016 name="construct.b.page10.stfk016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk016
            
            #add-point:AFTER FIELD stfk016 name="construct.a.page10.stfk016"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stfk016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk016
            #add-point:ON ACTION controlp INFIELD stfk016 name="construct.c.page10.stfk016"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk017
            #add-point:BEFORE FIELD stfk017 name="construct.b.page10.stfk017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk017
            
            #add-point:AFTER FIELD stfk017 name="construct.a.page10.stfk017"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stfk017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk017
            #add-point:ON ACTION controlp INFIELD stfk017 name="construct.c.page10.stfk017"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk022
            #add-point:BEFORE FIELD stfk022 name="construct.b.page10.stfk022"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk022
            
            #add-point:AFTER FIELD stfk022 name="construct.a.page10.stfk022"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stfk022
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk022
            #add-point:ON ACTION controlp INFIELD stfk022 name="construct.c.page10.stfk022"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk023
            #add-point:BEFORE FIELD stfk023 name="construct.b.page10.stfk023"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk023
            
            #add-point:AFTER FIELD stfk023 name="construct.a.page10.stfk023"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stfk023
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk023
            #add-point:ON ACTION controlp INFIELD stfk023 name="construct.c.page10.stfk023"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk024
            #add-point:BEFORE FIELD stfk024 name="construct.b.page10.stfk024"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk024
            
            #add-point:AFTER FIELD stfk024 name="construct.a.page10.stfk024"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stfk024
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk024
            #add-point:ON ACTION controlp INFIELD stfk024 name="construct.c.page10.stfk024"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page10.stfk025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk025
            #add-point:ON ACTION controlp INFIELD stfk025 name="construct.c.page10.stfk025"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stfk025()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfk025  #顯示到畫面上
            NEXT FIELD stfk025                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk025
            #add-point:BEFORE FIELD stfk025 name="construct.b.page10.stfk025"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk025
            
            #add-point:AFTER FIELD stfk025 name="construct.a.page10.stfk025"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk026
            #add-point:BEFORE FIELD stfk026 name="construct.b.page10.stfk026"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk026
            
            #add-point:AFTER FIELD stfk026 name="construct.a.page10.stfk026"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page10.stfk026
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk026
            #add-point:ON ACTION controlp INFIELD stfk026 name="construct.c.page10.stfk026"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON stflunit,stflsite,stflacti,stflseq,stfl002,stfl003,stfl004,stfl005,stfl006, 
          stfl007,stfl008,stfl009
           FROM s_detail11[1].stflunit,s_detail11[1].stflsite,s_detail11[1].stflacti,s_detail11[1].stflseq, 
               s_detail11[1].stfl002,s_detail11[1].stfl003,s_detail11[1].stfl004,s_detail11[1].stfl005, 
               s_detail11[1].stfl006,s_detail11[1].stfl007,s_detail11[1].stfl008,s_detail11[1].stfl009 
 
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body3.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stflunit
            #add-point:BEFORE FIELD stflunit name="construct.b.page11.stflunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stflunit
            
            #add-point:AFTER FIELD stflunit name="construct.a.page11.stflunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page11.stflunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stflunit
            #add-point:ON ACTION controlp INFIELD stflunit name="construct.c.page11.stflunit"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stflsite
            #add-point:BEFORE FIELD stflsite name="construct.b.page11.stflsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stflsite
            
            #add-point:AFTER FIELD stflsite name="construct.a.page11.stflsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page11.stflsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stflsite
            #add-point:ON ACTION controlp INFIELD stflsite name="construct.c.page11.stflsite"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stflacti
            #add-point:BEFORE FIELD stflacti name="construct.b.page11.stflacti"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stflacti
            
            #add-point:AFTER FIELD stflacti name="construct.a.page11.stflacti"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page11.stflacti
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stflacti
            #add-point:ON ACTION controlp INFIELD stflacti name="construct.c.page11.stflacti"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stflseq
            #add-point:BEFORE FIELD stflseq name="construct.b.page11.stflseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stflseq
            
            #add-point:AFTER FIELD stflseq name="construct.a.page11.stflseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page11.stflseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stflseq
            #add-point:ON ACTION controlp INFIELD stflseq name="construct.c.page11.stflseq"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page11.stfl002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfl002
            #add-point:ON ACTION controlp INFIELD stfl002 name="construct.c.page11.stfl002"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stae001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfl002  #顯示到畫面上
            NEXT FIELD stfl002                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfl002
            #add-point:BEFORE FIELD stfl002 name="construct.b.page11.stfl002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfl002
            
            #add-point:AFTER FIELD stfl002 name="construct.a.page11.stfl002"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfl003
            #add-point:BEFORE FIELD stfl003 name="construct.b.page11.stfl003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfl003
            
            #add-point:AFTER FIELD stfl003 name="construct.a.page11.stfl003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page11.stfl003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfl003
            #add-point:ON ACTION controlp INFIELD stfl003 name="construct.c.page11.stfl003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfl004
            #add-point:BEFORE FIELD stfl004 name="construct.b.page11.stfl004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfl004
            
            #add-point:AFTER FIELD stfl004 name="construct.a.page11.stfl004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page11.stfl004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfl004
            #add-point:ON ACTION controlp INFIELD stfl004 name="construct.c.page11.stfl004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfl005
            #add-point:BEFORE FIELD stfl005 name="construct.b.page11.stfl005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfl005
            
            #add-point:AFTER FIELD stfl005 name="construct.a.page11.stfl005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page11.stfl005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfl005
            #add-point:ON ACTION controlp INFIELD stfl005 name="construct.c.page11.stfl005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfl006
            #add-point:BEFORE FIELD stfl006 name="construct.b.page11.stfl006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfl006
            
            #add-point:AFTER FIELD stfl006 name="construct.a.page11.stfl006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page11.stfl006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfl006
            #add-point:ON ACTION controlp INFIELD stfl006 name="construct.c.page11.stfl006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfl007
            #add-point:BEFORE FIELD stfl007 name="construct.b.page11.stfl007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfl007
            
            #add-point:AFTER FIELD stfl007 name="construct.a.page11.stfl007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page11.stfl007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfl007
            #add-point:ON ACTION controlp INFIELD stfl007 name="construct.c.page11.stfl007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfl008
            #add-point:BEFORE FIELD stfl008 name="construct.b.page11.stfl008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfl008
            
            #add-point:AFTER FIELD stfl008 name="construct.a.page11.stfl008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page11.stfl008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfl008
            #add-point:ON ACTION controlp INFIELD stfl008 name="construct.c.page11.stfl008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfl009
            #add-point:BEFORE FIELD stfl009 name="construct.b.page11.stfl009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfl009
            
            #add-point:AFTER FIELD stfl009 name="construct.a.page11.stfl009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page11.stfl009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfl009
            #add-point:ON ACTION controlp INFIELD stfl009 name="construct.c.page11.stfl009"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table4 ON stfwunit,stfwsite,stfwseq,stfw002,stfw003,stfw004,stfw005,stfw006,stfw007, 
          stfw008,stfwacti
           FROM s_detail12[1].stfwunit,s_detail12[1].stfwsite,s_detail12[1].stfwseq,s_detail12[1].stfw002, 
               s_detail12[1].stfw003,s_detail12[1].stfw004,s_detail12[1].stfw005,s_detail12[1].stfw006, 
               s_detail12[1].stfw007,s_detail12[1].stfw008,s_detail12[1].stfwacti
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body4.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 4)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfwunit
            #add-point:BEFORE FIELD stfwunit name="construct.b.page12.stfwunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfwunit
            
            #add-point:AFTER FIELD stfwunit name="construct.a.page12.stfwunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page12.stfwunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfwunit
            #add-point:ON ACTION controlp INFIELD stfwunit name="construct.c.page12.stfwunit"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfwsite
            #add-point:BEFORE FIELD stfwsite name="construct.b.page12.stfwsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfwsite
            
            #add-point:AFTER FIELD stfwsite name="construct.a.page12.stfwsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page12.stfwsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfwsite
            #add-point:ON ACTION controlp INFIELD stfwsite name="construct.c.page12.stfwsite"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfwseq
            #add-point:BEFORE FIELD stfwseq name="construct.b.page12.stfwseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfwseq
            
            #add-point:AFTER FIELD stfwseq name="construct.a.page12.stfwseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page12.stfwseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfwseq
            #add-point:ON ACTION controlp INFIELD stfwseq name="construct.c.page12.stfwseq"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfw002
            #add-point:BEFORE FIELD stfw002 name="construct.b.page12.stfw002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfw002
            
            #add-point:AFTER FIELD stfw002 name="construct.a.page12.stfw002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page12.stfw002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfw002
            #add-point:ON ACTION controlp INFIELD stfw002 name="construct.c.page12.stfw002"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page12.stfw003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfw003
            #add-point:ON ACTION controlp INFIELD stfw003 name="construct.c.page12.stfw003"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stfw003()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfw003  #顯示到畫面上
            NEXT FIELD stfw003                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfw003
            #add-point:BEFORE FIELD stfw003 name="construct.b.page12.stfw003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfw003
            
            #add-point:AFTER FIELD stfw003 name="construct.a.page12.stfw003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page12.stfw004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfw004
            #add-point:ON ACTION controlp INFIELD stfw004 name="construct.c.page12.stfw004"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stfw004()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfw004  #顯示到畫面上
            NEXT FIELD stfw004                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfw004
            #add-point:BEFORE FIELD stfw004 name="construct.b.page12.stfw004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfw004
            
            #add-point:AFTER FIELD stfw004 name="construct.a.page12.stfw004"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfw005
            #add-point:BEFORE FIELD stfw005 name="construct.b.page12.stfw005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfw005
            
            #add-point:AFTER FIELD stfw005 name="construct.a.page12.stfw005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page12.stfw005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfw005
            #add-point:ON ACTION controlp INFIELD stfw005 name="construct.c.page12.stfw005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfw006
            #add-point:BEFORE FIELD stfw006 name="construct.b.page12.stfw006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfw006
            
            #add-point:AFTER FIELD stfw006 name="construct.a.page12.stfw006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page12.stfw006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfw006
            #add-point:ON ACTION controlp INFIELD stfw006 name="construct.c.page12.stfw006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfw007
            #add-point:BEFORE FIELD stfw007 name="construct.b.page12.stfw007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfw007
            
            #add-point:AFTER FIELD stfw007 name="construct.a.page12.stfw007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page12.stfw007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfw007
            #add-point:ON ACTION controlp INFIELD stfw007 name="construct.c.page12.stfw007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfw008
            #add-point:BEFORE FIELD stfw008 name="construct.b.page12.stfw008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfw008
            
            #add-point:AFTER FIELD stfw008 name="construct.a.page12.stfw008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page12.stfw008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfw008
            #add-point:ON ACTION controlp INFIELD stfw008 name="construct.c.page12.stfw008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfwacti
            #add-point:BEFORE FIELD stfwacti name="construct.b.page12.stfwacti"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfwacti
            
            #add-point:AFTER FIELD stfwacti name="construct.a.page12.stfwacti"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page12.stfwacti
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfwacti
            #add-point:ON ACTION controlp INFIELD stfwacti name="construct.c.page12.stfwacti"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table5 ON stfcseq,stfcacti,stfc024,stfc002,stfc003,stfc025,stfc004,stfc005,stfc006, 
          stfc006_desc,stfc007,stfc007_desc,stfc008,stfc009,stfc026,stfc027,stfc010,stfc011,stfc012, 
          stfc013,stfc014,stfc015,stfc016,stfc017,stfc018,stfc019,stfc020,stfc021,stfc022,stfc023,stfcsite, 
          stfcunit
           FROM s_detail2[1].stfcseq,s_detail2[1].stfcacti,s_detail2[1].stfc024,s_detail2[1].stfc002, 
               s_detail2[1].stfc003,s_detail2[1].stfc025,s_detail2[1].stfc004,s_detail2[1].stfc005,s_detail2[1].stfc006, 
               s_detail2[1].stfc006_desc,s_detail2[1].stfc007,s_detail2[1].stfc007_desc,s_detail2[1].stfc008, 
               s_detail2[1].stfc009,s_detail2[1].stfc026,s_detail2[1].stfc027,s_detail2[1].stfc010,s_detail2[1].stfc011, 
               s_detail2[1].stfc012,s_detail2[1].stfc013,s_detail2[1].stfc014,s_detail2[1].stfc015,s_detail2[1].stfc016, 
               s_detail2[1].stfc017,s_detail2[1].stfc018,s_detail2[1].stfc019,s_detail2[1].stfc020,s_detail2[1].stfc021, 
               s_detail2[1].stfc022,s_detail2[1].stfc023,s_detail2[1].stfcsite,s_detail2[1].stfcunit 
 
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body5.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 5)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfcseq
            #add-point:BEFORE FIELD stfcseq name="construct.b.page2.stfcseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfcseq
            
            #add-point:AFTER FIELD stfcseq name="construct.a.page2.stfcseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stfcseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfcseq
            #add-point:ON ACTION controlp INFIELD stfcseq name="construct.c.page2.stfcseq"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfcacti
            #add-point:BEFORE FIELD stfcacti name="construct.b.page2.stfcacti"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfcacti
            
            #add-point:AFTER FIELD stfcacti name="construct.a.page2.stfcacti"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stfcacti
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfcacti
            #add-point:ON ACTION controlp INFIELD stfcacti name="construct.c.page2.stfcacti"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc024
            #add-point:BEFORE FIELD stfc024 name="construct.b.page2.stfc024"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc024
            
            #add-point:AFTER FIELD stfc024 name="construct.a.page2.stfc024"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stfc024
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc024
            #add-point:ON ACTION controlp INFIELD stfc024 name="construct.c.page2.stfc024"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.stfc002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc002
            #add-point:ON ACTION controlp INFIELD stfc002 name="construct.c.page2.stfc002"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_inay001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfc002  #顯示到畫面上
            NEXT FIELD stfc002                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc002
            #add-point:BEFORE FIELD stfc002 name="construct.b.page2.stfc002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc002
            
            #add-point:AFTER FIELD stfc002 name="construct.a.page2.stfc002"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc003
            #add-point:BEFORE FIELD stfc003 name="construct.b.page2.stfc003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc003
            
            #add-point:AFTER FIELD stfc003 name="construct.a.page2.stfc003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stfc003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc003
            #add-point:ON ACTION controlp INFIELD stfc003 name="construct.c.page2.stfc003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc025
            #add-point:BEFORE FIELD stfc025 name="construct.b.page2.stfc025"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc025
            
            #add-point:AFTER FIELD stfc025 name="construct.a.page2.stfc025"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stfc025
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc025
            #add-point:ON ACTION controlp INFIELD stfc025 name="construct.c.page2.stfc025"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.stfc004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc004
            #add-point:ON ACTION controlp INFIELD stfc004 name="construct.c.page2.stfc004"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_rtax001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfc004  #顯示到畫面上
            NEXT FIELD stfc004                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc004
            #add-point:BEFORE FIELD stfc004 name="construct.b.page2.stfc004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc004
            
            #add-point:AFTER FIELD stfc004 name="construct.a.page2.stfc004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stfc005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc005
            #add-point:ON ACTION controlp INFIELD stfc005 name="construct.c.page2.stfc005"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002_2002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfc005  #顯示到畫面上
            NEXT FIELD stfc005                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc005
            #add-point:BEFORE FIELD stfc005 name="construct.b.page2.stfc005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc005
            
            #add-point:AFTER FIELD stfc005 name="construct.a.page2.stfc005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stfc006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc006
            #add-point:ON ACTION controlp INFIELD stfc006 name="construct.c.page2.stfc006"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_oodb002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfc006  #顯示到畫面上
            NEXT FIELD stfc006                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc006
            #add-point:BEFORE FIELD stfc006 name="construct.b.page2.stfc006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc006
            
            #add-point:AFTER FIELD stfc006 name="construct.a.page2.stfc006"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc006_desc
            #add-point:BEFORE FIELD stfc006_desc name="construct.b.page2.stfc006_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc006_desc
            
            #add-point:AFTER FIELD stfc006_desc name="construct.a.page2.stfc006_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stfc006_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc006_desc
            #add-point:ON ACTION controlp INFIELD stfc006_desc name="construct.c.page2.stfc006_desc"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.stfc007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc007
            #add-point:ON ACTION controlp INFIELD stfc007 name="construct.c.page2.stfc007"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_oodb002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfc007  #顯示到畫面上
            NEXT FIELD stfc007                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc007
            #add-point:BEFORE FIELD stfc007 name="construct.b.page2.stfc007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc007
            
            #add-point:AFTER FIELD stfc007 name="construct.a.page2.stfc007"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc007_desc
            #add-point:BEFORE FIELD stfc007_desc name="construct.b.page2.stfc007_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc007_desc
            
            #add-point:AFTER FIELD stfc007_desc name="construct.a.page2.stfc007_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stfc007_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc007_desc
            #add-point:ON ACTION controlp INFIELD stfc007_desc name="construct.c.page2.stfc007_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc008
            #add-point:BEFORE FIELD stfc008 name="construct.b.page2.stfc008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc008
            
            #add-point:AFTER FIELD stfc008 name="construct.a.page2.stfc008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stfc008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc008
            #add-point:ON ACTION controlp INFIELD stfc008 name="construct.c.page2.stfc008"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.stfc009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc009
            #add-point:ON ACTION controlp INFIELD stfc009 name="construct.c.page2.stfc009"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stae001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfc009  #顯示到畫面上
            NEXT FIELD stfc009                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc009
            #add-point:BEFORE FIELD stfc009 name="construct.b.page2.stfc009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc009
            
            #add-point:AFTER FIELD stfc009 name="construct.a.page2.stfc009"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc026
            #add-point:BEFORE FIELD stfc026 name="construct.b.page2.stfc026"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc026
            
            #add-point:AFTER FIELD stfc026 name="construct.a.page2.stfc026"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stfc026
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc026
            #add-point:ON ACTION controlp INFIELD stfc026 name="construct.c.page2.stfc026"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc027
            #add-point:BEFORE FIELD stfc027 name="construct.b.page2.stfc027"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc027
            
            #add-point:AFTER FIELD stfc027 name="construct.a.page2.stfc027"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stfc027
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc027
            #add-point:ON ACTION controlp INFIELD stfc027 name="construct.c.page2.stfc027"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc010
            #add-point:BEFORE FIELD stfc010 name="construct.b.page2.stfc010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc010
            
            #add-point:AFTER FIELD stfc010 name="construct.a.page2.stfc010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stfc010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc010
            #add-point:ON ACTION controlp INFIELD stfc010 name="construct.c.page2.stfc010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc011
            #add-point:BEFORE FIELD stfc011 name="construct.b.page2.stfc011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc011
            
            #add-point:AFTER FIELD stfc011 name="construct.a.page2.stfc011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stfc011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc011
            #add-point:ON ACTION controlp INFIELD stfc011 name="construct.c.page2.stfc011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc012
            #add-point:BEFORE FIELD stfc012 name="construct.b.page2.stfc012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc012
            
            #add-point:AFTER FIELD stfc012 name="construct.a.page2.stfc012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stfc012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc012
            #add-point:ON ACTION controlp INFIELD stfc012 name="construct.c.page2.stfc012"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc013
            #add-point:BEFORE FIELD stfc013 name="construct.b.page2.stfc013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc013
            
            #add-point:AFTER FIELD stfc013 name="construct.a.page2.stfc013"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stfc013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc013
            #add-point:ON ACTION controlp INFIELD stfc013 name="construct.c.page2.stfc013"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc014
            #add-point:BEFORE FIELD stfc014 name="construct.b.page2.stfc014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc014
            
            #add-point:AFTER FIELD stfc014 name="construct.a.page2.stfc014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stfc014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc014
            #add-point:ON ACTION controlp INFIELD stfc014 name="construct.c.page2.stfc014"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.stfc015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc015
            #add-point:ON ACTION controlp INFIELD stfc015 name="construct.c.page2.stfc015"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stab001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfc015  #顯示到畫面上
            NEXT FIELD stfc015                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc015
            #add-point:BEFORE FIELD stfc015 name="construct.b.page2.stfc015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc015
            
            #add-point:AFTER FIELD stfc015 name="construct.a.page2.stfc015"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stfc016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc016
            #add-point:ON ACTION controlp INFIELD stfc016 name="construct.c.page2.stfc016"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stab001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfc016  #顯示到畫面上
            NEXT FIELD stfc016                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc016
            #add-point:BEFORE FIELD stfc016 name="construct.b.page2.stfc016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc016
            
            #add-point:AFTER FIELD stfc016 name="construct.a.page2.stfc016"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc017
            #add-point:BEFORE FIELD stfc017 name="construct.b.page2.stfc017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc017
            
            #add-point:AFTER FIELD stfc017 name="construct.a.page2.stfc017"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stfc017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc017
            #add-point:ON ACTION controlp INFIELD stfc017 name="construct.c.page2.stfc017"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc018
            #add-point:BEFORE FIELD stfc018 name="construct.b.page2.stfc018"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc018
            
            #add-point:AFTER FIELD stfc018 name="construct.a.page2.stfc018"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stfc018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc018
            #add-point:ON ACTION controlp INFIELD stfc018 name="construct.c.page2.stfc018"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc019
            #add-point:BEFORE FIELD stfc019 name="construct.b.page2.stfc019"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc019
            
            #add-point:AFTER FIELD stfc019 name="construct.a.page2.stfc019"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stfc019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc019
            #add-point:ON ACTION controlp INFIELD stfc019 name="construct.c.page2.stfc019"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc020
            #add-point:BEFORE FIELD stfc020 name="construct.b.page2.stfc020"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc020
            
            #add-point:AFTER FIELD stfc020 name="construct.a.page2.stfc020"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stfc020
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc020
            #add-point:ON ACTION controlp INFIELD stfc020 name="construct.c.page2.stfc020"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc021
            #add-point:BEFORE FIELD stfc021 name="construct.b.page2.stfc021"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc021
            
            #add-point:AFTER FIELD stfc021 name="construct.a.page2.stfc021"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stfc021
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc021
            #add-point:ON ACTION controlp INFIELD stfc021 name="construct.c.page2.stfc021"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc022
            #add-point:BEFORE FIELD stfc022 name="construct.b.page2.stfc022"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc022
            
            #add-point:AFTER FIELD stfc022 name="construct.a.page2.stfc022"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stfc022
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc022
            #add-point:ON ACTION controlp INFIELD stfc022 name="construct.c.page2.stfc022"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc023
            #add-point:BEFORE FIELD stfc023 name="construct.b.page2.stfc023"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc023
            
            #add-point:AFTER FIELD stfc023 name="construct.a.page2.stfc023"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stfc023
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc023
            #add-point:ON ACTION controlp INFIELD stfc023 name="construct.c.page2.stfc023"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfcsite
            #add-point:BEFORE FIELD stfcsite name="construct.b.page2.stfcsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfcsite
            
            #add-point:AFTER FIELD stfcsite name="construct.a.page2.stfcsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stfcsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfcsite
            #add-point:ON ACTION controlp INFIELD stfcsite name="construct.c.page2.stfcsite"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfcunit
            #add-point:BEFORE FIELD stfcunit name="construct.b.page2.stfcunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfcunit
            
            #add-point:AFTER FIELD stfcunit name="construct.a.page2.stfcunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.stfcunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfcunit
            #add-point:ON ACTION controlp INFIELD stfcunit name="construct.c.page2.stfcunit"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table6 ON stfe002,stfeseq,stfe003,stfe004,stfe005,stfe006,stfe012,stfe007,stfe008, 
          stfe009,stfe010,stfe011,stfesite,stfeunit
           FROM s_detail3[1].stfe002,s_detail3[1].stfeseq,s_detail3[1].stfe003,s_detail3[1].stfe004, 
               s_detail3[1].stfe005,s_detail3[1].stfe006,s_detail3[1].stfe012,s_detail3[1].stfe007,s_detail3[1].stfe008, 
               s_detail3[1].stfe009,s_detail3[1].stfe010,s_detail3[1].stfe011,s_detail3[1].stfesite, 
               s_detail3[1].stfeunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body6.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 6)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfe002
            #add-point:BEFORE FIELD stfe002 name="construct.b.page3.stfe002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfe002
            
            #add-point:AFTER FIELD stfe002 name="construct.a.page3.stfe002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.stfe002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfe002
            #add-point:ON ACTION controlp INFIELD stfe002 name="construct.c.page3.stfe002"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfeseq
            #add-point:BEFORE FIELD stfeseq name="construct.b.page3.stfeseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfeseq
            
            #add-point:AFTER FIELD stfeseq name="construct.a.page3.stfeseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.stfeseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfeseq
            #add-point:ON ACTION controlp INFIELD stfeseq name="construct.c.page3.stfeseq"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page3.stfe003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfe003
            #add-point:ON ACTION controlp INFIELD stfe003 name="construct.c.page3.stfe003"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stae001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfe003  #顯示到畫面上
            NEXT FIELD stfe003                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfe003
            #add-point:BEFORE FIELD stfe003 name="construct.b.page3.stfe003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfe003
            
            #add-point:AFTER FIELD stfe003 name="construct.a.page3.stfe003"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfe004
            #add-point:BEFORE FIELD stfe004 name="construct.b.page3.stfe004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfe004
            
            #add-point:AFTER FIELD stfe004 name="construct.a.page3.stfe004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.stfe004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfe004
            #add-point:ON ACTION controlp INFIELD stfe004 name="construct.c.page3.stfe004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfe005
            #add-point:BEFORE FIELD stfe005 name="construct.b.page3.stfe005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfe005
            
            #add-point:AFTER FIELD stfe005 name="construct.a.page3.stfe005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.stfe005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfe005
            #add-point:ON ACTION controlp INFIELD stfe005 name="construct.c.page3.stfe005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfe006
            #add-point:BEFORE FIELD stfe006 name="construct.b.page3.stfe006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfe006
            
            #add-point:AFTER FIELD stfe006 name="construct.a.page3.stfe006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.stfe006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfe006
            #add-point:ON ACTION controlp INFIELD stfe006 name="construct.c.page3.stfe006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfe012
            #add-point:BEFORE FIELD stfe012 name="construct.b.page3.stfe012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfe012
            
            #add-point:AFTER FIELD stfe012 name="construct.a.page3.stfe012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.stfe012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfe012
            #add-point:ON ACTION controlp INFIELD stfe012 name="construct.c.page3.stfe012"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfe007
            #add-point:BEFORE FIELD stfe007 name="construct.b.page3.stfe007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfe007
            
            #add-point:AFTER FIELD stfe007 name="construct.a.page3.stfe007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.stfe007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfe007
            #add-point:ON ACTION controlp INFIELD stfe007 name="construct.c.page3.stfe007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfe008
            #add-point:BEFORE FIELD stfe008 name="construct.b.page3.stfe008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfe008
            
            #add-point:AFTER FIELD stfe008 name="construct.a.page3.stfe008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.stfe008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfe008
            #add-point:ON ACTION controlp INFIELD stfe008 name="construct.c.page3.stfe008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfe009
            #add-point:BEFORE FIELD stfe009 name="construct.b.page3.stfe009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfe009
            
            #add-point:AFTER FIELD stfe009 name="construct.a.page3.stfe009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.stfe009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfe009
            #add-point:ON ACTION controlp INFIELD stfe009 name="construct.c.page3.stfe009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfe010
            #add-point:BEFORE FIELD stfe010 name="construct.b.page3.stfe010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfe010
            
            #add-point:AFTER FIELD stfe010 name="construct.a.page3.stfe010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.stfe010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfe010
            #add-point:ON ACTION controlp INFIELD stfe010 name="construct.c.page3.stfe010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfe011
            #add-point:BEFORE FIELD stfe011 name="construct.b.page3.stfe011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfe011
            
            #add-point:AFTER FIELD stfe011 name="construct.a.page3.stfe011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.stfe011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfe011
            #add-point:ON ACTION controlp INFIELD stfe011 name="construct.c.page3.stfe011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfesite
            #add-point:BEFORE FIELD stfesite name="construct.b.page3.stfesite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfesite
            
            #add-point:AFTER FIELD stfesite name="construct.a.page3.stfesite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.stfesite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfesite
            #add-point:ON ACTION controlp INFIELD stfesite name="construct.c.page3.stfesite"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfeunit
            #add-point:BEFORE FIELD stfeunit name="construct.b.page3.stfeunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfeunit
            
            #add-point:AFTER FIELD stfeunit name="construct.a.page3.stfeunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.stfeunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfeunit
            #add-point:ON ACTION controlp INFIELD stfeunit name="construct.c.page3.stfeunit"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table7 ON stfgseq,stfg003,stfg003_desc,stfg002,stfg002_desc,stfg004,stfg005,stfgacti, 
          stfgsite,stfgunit
           FROM s_detail4[1].stfgseq,s_detail4[1].stfg003,s_detail4[1].stfg003_desc,s_detail4[1].stfg002, 
               s_detail4[1].stfg002_desc,s_detail4[1].stfg004,s_detail4[1].stfg005,s_detail4[1].stfgacti, 
               s_detail4[1].stfgsite,s_detail4[1].stfgunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body7.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 7)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfgseq
            #add-point:BEFORE FIELD stfgseq name="construct.b.page4.stfgseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfgseq
            
            #add-point:AFTER FIELD stfgseq name="construct.a.page4.stfgseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.stfgseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfgseq
            #add-point:ON ACTION controlp INFIELD stfgseq name="construct.c.page4.stfgseq"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page4.stfg003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfg003
            #add-point:ON ACTION controlp INFIELD stfg003 name="construct.c.page4.stfg003"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_mhac003()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfg003  #顯示到畫面上
            NEXT FIELD stfg003                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfg003
            #add-point:BEFORE FIELD stfg003 name="construct.b.page4.stfg003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfg003
            
            #add-point:AFTER FIELD stfg003 name="construct.a.page4.stfg003"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfg003_desc
            #add-point:BEFORE FIELD stfg003_desc name="construct.b.page4.stfg003_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfg003_desc
            
            #add-point:AFTER FIELD stfg003_desc name="construct.a.page4.stfg003_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.stfg003_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfg003_desc
            #add-point:ON ACTION controlp INFIELD stfg003_desc name="construct.c.page4.stfg003_desc"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page4.stfg002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfg002
            #add-point:ON ACTION controlp INFIELD stfg002 name="construct.c.page4.stfg002"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_mhad001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfg002  #顯示到畫面上
            NEXT FIELD stfg002                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfg002
            #add-point:BEFORE FIELD stfg002 name="construct.b.page4.stfg002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfg002
            
            #add-point:AFTER FIELD stfg002 name="construct.a.page4.stfg002"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfg002_desc
            #add-point:BEFORE FIELD stfg002_desc name="construct.b.page4.stfg002_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfg002_desc
            
            #add-point:AFTER FIELD stfg002_desc name="construct.a.page4.stfg002_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.stfg002_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfg002_desc
            #add-point:ON ACTION controlp INFIELD stfg002_desc name="construct.c.page4.stfg002_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfg004
            #add-point:BEFORE FIELD stfg004 name="construct.b.page4.stfg004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfg004
            
            #add-point:AFTER FIELD stfg004 name="construct.a.page4.stfg004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.stfg004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfg004
            #add-point:ON ACTION controlp INFIELD stfg004 name="construct.c.page4.stfg004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfg005
            #add-point:BEFORE FIELD stfg005 name="construct.b.page4.stfg005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfg005
            
            #add-point:AFTER FIELD stfg005 name="construct.a.page4.stfg005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.stfg005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfg005
            #add-point:ON ACTION controlp INFIELD stfg005 name="construct.c.page4.stfg005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfgacti
            #add-point:BEFORE FIELD stfgacti name="construct.b.page4.stfgacti"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfgacti
            
            #add-point:AFTER FIELD stfgacti name="construct.a.page4.stfgacti"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.stfgacti
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfgacti
            #add-point:ON ACTION controlp INFIELD stfgacti name="construct.c.page4.stfgacti"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfgsite
            #add-point:BEFORE FIELD stfgsite name="construct.b.page4.stfgsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfgsite
            
            #add-point:AFTER FIELD stfgsite name="construct.a.page4.stfgsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.stfgsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfgsite
            #add-point:ON ACTION controlp INFIELD stfgsite name="construct.c.page4.stfgsite"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfgunit
            #add-point:BEFORE FIELD stfgunit name="construct.b.page4.stfgunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfgunit
            
            #add-point:AFTER FIELD stfgunit name="construct.a.page4.stfgunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page4.stfgunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfgunit
            #add-point:ON ACTION controlp INFIELD stfgunit name="construct.c.page4.stfgunit"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table8 ON stfhseq,stfh002,stfh003,stfhacti,stfhsite,stfhunit
           FROM s_detail5[1].stfhseq,s_detail5[1].stfh002,s_detail5[1].stfh003,s_detail5[1].stfhacti, 
               s_detail5[1].stfhsite,s_detail5[1].stfhunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body8.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 8)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfhseq
            #add-point:BEFORE FIELD stfhseq name="construct.b.page5.stfhseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfhseq
            
            #add-point:AFTER FIELD stfhseq name="construct.a.page5.stfhseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.stfhseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfhseq
            #add-point:ON ACTION controlp INFIELD stfhseq name="construct.c.page5.stfhseq"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfh002
            #add-point:BEFORE FIELD stfh002 name="construct.b.page5.stfh002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfh002
            
            #add-point:AFTER FIELD stfh002 name="construct.a.page5.stfh002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.stfh002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfh002
            #add-point:ON ACTION controlp INFIELD stfh002 name="construct.c.page5.stfh002"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfh003
            #add-point:BEFORE FIELD stfh003 name="construct.b.page5.stfh003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfh003
            
            #add-point:AFTER FIELD stfh003 name="construct.a.page5.stfh003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.stfh003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfh003
            #add-point:ON ACTION controlp INFIELD stfh003 name="construct.c.page5.stfh003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfhacti
            #add-point:BEFORE FIELD stfhacti name="construct.b.page5.stfhacti"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfhacti
            
            #add-point:AFTER FIELD stfhacti name="construct.a.page5.stfhacti"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.stfhacti
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfhacti
            #add-point:ON ACTION controlp INFIELD stfhacti name="construct.c.page5.stfhacti"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfhsite
            #add-point:BEFORE FIELD stfhsite name="construct.b.page5.stfhsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfhsite
            
            #add-point:AFTER FIELD stfhsite name="construct.a.page5.stfhsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.stfhsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfhsite
            #add-point:ON ACTION controlp INFIELD stfhsite name="construct.c.page5.stfhsite"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfhunit
            #add-point:BEFORE FIELD stfhunit name="construct.b.page5.stfhunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfhunit
            
            #add-point:AFTER FIELD stfhunit name="construct.a.page5.stfhunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page5.stfhunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfhunit
            #add-point:ON ACTION controlp INFIELD stfhunit name="construct.c.page5.stfhunit"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table9 ON stfiseq,stfi002,stfi003,stfi005,stfi006,stfi004,stfi007,stfi010,stfi008, 
          stfi009,stfiacti,stfi011,stfi012,stfisite,stfiunit
           FROM s_detail6[1].stfiseq,s_detail6[1].stfi002,s_detail6[1].stfi003,s_detail6[1].stfi005, 
               s_detail6[1].stfi006,s_detail6[1].stfi004,s_detail6[1].stfi007,s_detail6[1].stfi010,s_detail6[1].stfi008, 
               s_detail6[1].stfi009,s_detail6[1].stfiacti,s_detail6[1].stfi011,s_detail6[1].stfi012, 
               s_detail6[1].stfisite,s_detail6[1].stfiunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body9.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 9)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfiseq
            #add-point:BEFORE FIELD stfiseq name="construct.b.page6.stfiseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfiseq
            
            #add-point:AFTER FIELD stfiseq name="construct.a.page6.stfiseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.stfiseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfiseq
            #add-point:ON ACTION controlp INFIELD stfiseq name="construct.c.page6.stfiseq"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfi002
            #add-point:BEFORE FIELD stfi002 name="construct.b.page6.stfi002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfi002
            
            #add-point:AFTER FIELD stfi002 name="construct.a.page6.stfi002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.stfi002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfi002
            #add-point:ON ACTION controlp INFIELD stfi002 name="construct.c.page6.stfi002"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page6.stfi003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfi003
            #add-point:ON ACTION controlp INFIELD stfi003 name="construct.c.page6.stfi003"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_stae001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfi003  #顯示到畫面上
            NEXT FIELD stfi003                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfi003
            #add-point:BEFORE FIELD stfi003 name="construct.b.page6.stfi003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfi003
            
            #add-point:AFTER FIELD stfi003 name="construct.a.page6.stfi003"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfi005
            #add-point:BEFORE FIELD stfi005 name="construct.b.page6.stfi005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfi005
            
            #add-point:AFTER FIELD stfi005 name="construct.a.page6.stfi005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.stfi005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfi005
            #add-point:ON ACTION controlp INFIELD stfi005 name="construct.c.page6.stfi005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfi006
            #add-point:BEFORE FIELD stfi006 name="construct.b.page6.stfi006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfi006
            
            #add-point:AFTER FIELD stfi006 name="construct.a.page6.stfi006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.stfi006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfi006
            #add-point:ON ACTION controlp INFIELD stfi006 name="construct.c.page6.stfi006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfi004
            #add-point:BEFORE FIELD stfi004 name="construct.b.page6.stfi004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfi004
            
            #add-point:AFTER FIELD stfi004 name="construct.a.page6.stfi004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.stfi004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfi004
            #add-point:ON ACTION controlp INFIELD stfi004 name="construct.c.page6.stfi004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfi007
            #add-point:BEFORE FIELD stfi007 name="construct.b.page6.stfi007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfi007
            
            #add-point:AFTER FIELD stfi007 name="construct.a.page6.stfi007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.stfi007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfi007
            #add-point:ON ACTION controlp INFIELD stfi007 name="construct.c.page6.stfi007"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page6.stfi010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfi010
            #add-point:ON ACTION controlp INFIELD stfi010 name="construct.c.page6.stfi010"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "2132"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfi010  #顯示到畫面上
            NEXT FIELD stfi010                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfi010
            #add-point:BEFORE FIELD stfi010 name="construct.b.page6.stfi010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfi010
            
            #add-point:AFTER FIELD stfi010 name="construct.a.page6.stfi010"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfi008
            #add-point:BEFORE FIELD stfi008 name="construct.b.page6.stfi008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfi008
            
            #add-point:AFTER FIELD stfi008 name="construct.a.page6.stfi008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.stfi008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfi008
            #add-point:ON ACTION controlp INFIELD stfi008 name="construct.c.page6.stfi008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfi009
            #add-point:BEFORE FIELD stfi009 name="construct.b.page6.stfi009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfi009
            
            #add-point:AFTER FIELD stfi009 name="construct.a.page6.stfi009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.stfi009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfi009
            #add-point:ON ACTION controlp INFIELD stfi009 name="construct.c.page6.stfi009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfiacti
            #add-point:BEFORE FIELD stfiacti name="construct.b.page6.stfiacti"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfiacti
            
            #add-point:AFTER FIELD stfiacti name="construct.a.page6.stfiacti"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.stfiacti
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfiacti
            #add-point:ON ACTION controlp INFIELD stfiacti name="construct.c.page6.stfiacti"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfi011
            #add-point:BEFORE FIELD stfi011 name="construct.b.page6.stfi011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfi011
            
            #add-point:AFTER FIELD stfi011 name="construct.a.page6.stfi011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.stfi011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfi011
            #add-point:ON ACTION controlp INFIELD stfi011 name="construct.c.page6.stfi011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfi012
            #add-point:BEFORE FIELD stfi012 name="construct.b.page6.stfi012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfi012
            
            #add-point:AFTER FIELD stfi012 name="construct.a.page6.stfi012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.stfi012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfi012
            #add-point:ON ACTION controlp INFIELD stfi012 name="construct.c.page6.stfi012"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfisite
            #add-point:BEFORE FIELD stfisite name="construct.b.page6.stfisite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfisite
            
            #add-point:AFTER FIELD stfisite name="construct.a.page6.stfisite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.stfisite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfisite
            #add-point:ON ACTION controlp INFIELD stfisite name="construct.c.page6.stfisite"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfiunit
            #add-point:BEFORE FIELD stfiunit name="construct.b.page6.stfiunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfiunit
            
            #add-point:AFTER FIELD stfiunit name="construct.a.page6.stfiunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page6.stfiunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfiunit
            #add-point:ON ACTION controlp INFIELD stfiunit name="construct.c.page6.stfiunit"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table10 ON stfjseq,stfj002,stfj003,stfj004,stfj005,stfj006,stfjsite,stfjunit
           FROM s_detail7[1].stfjseq,s_detail7[1].stfj002,s_detail7[1].stfj003,s_detail7[1].stfj004, 
               s_detail7[1].stfj005,s_detail7[1].stfj006,s_detail7[1].stfjsite,s_detail7[1].stfjunit 
 
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body10.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 10)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfjseq
            #add-point:BEFORE FIELD stfjseq name="construct.b.page7.stfjseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfjseq
            
            #add-point:AFTER FIELD stfjseq name="construct.a.page7.stfjseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.stfjseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfjseq
            #add-point:ON ACTION controlp INFIELD stfjseq name="construct.c.page7.stfjseq"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfj002
            #add-point:BEFORE FIELD stfj002 name="construct.b.page7.stfj002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfj002
            
            #add-point:AFTER FIELD stfj002 name="construct.a.page7.stfj002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.stfj002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfj002
            #add-point:ON ACTION controlp INFIELD stfj002 name="construct.c.page7.stfj002"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfj003
            #add-point:BEFORE FIELD stfj003 name="construct.b.page7.stfj003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfj003
            
            #add-point:AFTER FIELD stfj003 name="construct.a.page7.stfj003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.stfj003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfj003
            #add-point:ON ACTION controlp INFIELD stfj003 name="construct.c.page7.stfj003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfj004
            #add-point:BEFORE FIELD stfj004 name="construct.b.page7.stfj004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfj004
            
            #add-point:AFTER FIELD stfj004 name="construct.a.page7.stfj004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.stfj004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfj004
            #add-point:ON ACTION controlp INFIELD stfj004 name="construct.c.page7.stfj004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfj005
            #add-point:BEFORE FIELD stfj005 name="construct.b.page7.stfj005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfj005
            
            #add-point:AFTER FIELD stfj005 name="construct.a.page7.stfj005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.stfj005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfj005
            #add-point:ON ACTION controlp INFIELD stfj005 name="construct.c.page7.stfj005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfj006
            #add-point:BEFORE FIELD stfj006 name="construct.b.page7.stfj006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfj006
            
            #add-point:AFTER FIELD stfj006 name="construct.a.page7.stfj006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.stfj006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfj006
            #add-point:ON ACTION controlp INFIELD stfj006 name="construct.c.page7.stfj006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfjsite
            #add-point:BEFORE FIELD stfjsite name="construct.b.page7.stfjsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfjsite
            
            #add-point:AFTER FIELD stfjsite name="construct.a.page7.stfjsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.stfjsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfjsite
            #add-point:ON ACTION controlp INFIELD stfjsite name="construct.c.page7.stfjsite"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfjunit
            #add-point:BEFORE FIELD stfjunit name="construct.b.page7.stfjunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfjunit
            
            #add-point:AFTER FIELD stfjunit name="construct.a.page7.stfjunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page7.stfjunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfjunit
            #add-point:ON ACTION controlp INFIELD stfjunit name="construct.c.page7.stfjunit"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table11 ON stffseq,stff002,stff003,stff004,stff005,stff006,stff007,stff010,stff008, 
          stff011,stff009,stffsite,stffunit
           FROM s_detail9[1].stffseq,s_detail9[1].stff002,s_detail9[1].stff003,s_detail9[1].stff004, 
               s_detail9[1].stff005,s_detail9[1].stff006,s_detail9[1].stff007,s_detail9[1].stff010,s_detail9[1].stff008, 
               s_detail9[1].stff011,s_detail9[1].stff009,s_detail9[1].stffsite,s_detail9[1].stffunit 
 
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body11.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 11)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stffseq
            #add-point:BEFORE FIELD stffseq name="construct.b.page9.stffseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stffseq
            
            #add-point:AFTER FIELD stffseq name="construct.a.page9.stffseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.stffseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stffseq
            #add-point:ON ACTION controlp INFIELD stffseq name="construct.c.page9.stffseq"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stff002
            #add-point:BEFORE FIELD stff002 name="construct.b.page9.stff002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stff002
            
            #add-point:AFTER FIELD stff002 name="construct.a.page9.stff002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.stff002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stff002
            #add-point:ON ACTION controlp INFIELD stff002 name="construct.c.page9.stff002"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stff003
            #add-point:BEFORE FIELD stff003 name="construct.b.page9.stff003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stff003
            
            #add-point:AFTER FIELD stff003 name="construct.a.page9.stff003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.stff003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stff003
            #add-point:ON ACTION controlp INFIELD stff003 name="construct.c.page9.stff003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stff004
            #add-point:BEFORE FIELD stff004 name="construct.b.page9.stff004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stff004
            
            #add-point:AFTER FIELD stff004 name="construct.a.page9.stff004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.stff004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stff004
            #add-point:ON ACTION controlp INFIELD stff004 name="construct.c.page9.stff004"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page9.stff005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stff005
            #add-point:ON ACTION controlp INFIELD stff005 name="construct.c.page9.stff005"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_inay001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stff005  #顯示到畫面上
            NEXT FIELD stff005                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stff005
            #add-point:BEFORE FIELD stff005 name="construct.b.page9.stff005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stff005
            
            #add-point:AFTER FIELD stff005 name="construct.a.page9.stff005"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stff006
            #add-point:BEFORE FIELD stff006 name="construct.b.page9.stff006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stff006
            
            #add-point:AFTER FIELD stff006 name="construct.a.page9.stff006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.stff006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stff006
            #add-point:ON ACTION controlp INFIELD stff006 name="construct.c.page9.stff006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stff007
            #add-point:BEFORE FIELD stff007 name="construct.b.page9.stff007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stff007
            
            #add-point:AFTER FIELD stff007 name="construct.a.page9.stff007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.stff007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stff007
            #add-point:ON ACTION controlp INFIELD stff007 name="construct.c.page9.stff007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stff010
            #add-point:BEFORE FIELD stff010 name="construct.b.page9.stff010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stff010
            
            #add-point:AFTER FIELD stff010 name="construct.a.page9.stff010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.stff010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stff010
            #add-point:ON ACTION controlp INFIELD stff010 name="construct.c.page9.stff010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stff008
            #add-point:BEFORE FIELD stff008 name="construct.b.page9.stff008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stff008
            
            #add-point:AFTER FIELD stff008 name="construct.a.page9.stff008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.stff008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stff008
            #add-point:ON ACTION controlp INFIELD stff008 name="construct.c.page9.stff008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stff011
            #add-point:BEFORE FIELD stff011 name="construct.b.page9.stff011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stff011
            
            #add-point:AFTER FIELD stff011 name="construct.a.page9.stff011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.stff011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stff011
            #add-point:ON ACTION controlp INFIELD stff011 name="construct.c.page9.stff011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stff009
            #add-point:BEFORE FIELD stff009 name="construct.b.page9.stff009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stff009
            
            #add-point:AFTER FIELD stff009 name="construct.a.page9.stff009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.stff009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stff009
            #add-point:ON ACTION controlp INFIELD stff009 name="construct.c.page9.stff009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stffsite
            #add-point:BEFORE FIELD stffsite name="construct.b.page9.stffsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stffsite
            
            #add-point:AFTER FIELD stffsite name="construct.a.page9.stffsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.stffsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stffsite
            #add-point:ON ACTION controlp INFIELD stffsite name="construct.c.page9.stffsite"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stffunit
            #add-point:BEFORE FIELD stffunit name="construct.b.page9.stffunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stffunit
            
            #add-point:AFTER FIELD stffunit name="construct.a.page9.stffunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page9.stffunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stffunit
            #add-point:ON ACTION controlp INFIELD stffunit name="construct.c.page9.stffunit"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
 
      
      CONSTRUCT g_wc2_table12 ON stfdseq1,stfd002,stfd003,stfd004,stfd005,stfd006,stfd007,stfd008,stfd009, 
          stfdsite,stfdunit
           FROM s_detail8[1].stfdseq1,s_detail8[1].stfd002,s_detail8[1].stfd003,s_detail8[1].stfd004, 
               s_detail8[1].stfd005,s_detail8[1].stfd006,s_detail8[1].stfd007,s_detail8[1].stfd008,s_detail8[1].stfd009, 
               s_detail8[1].stfdsite,s_detail8[1].stfdunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body12.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 12)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfdseq1
            #add-point:BEFORE FIELD stfdseq1 name="construct.b.page8.stfdseq1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfdseq1
            
            #add-point:AFTER FIELD stfdseq1 name="construct.a.page8.stfdseq1"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.stfdseq1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfdseq1
            #add-point:ON ACTION controlp INFIELD stfdseq1 name="construct.c.page8.stfdseq1"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfd002
            #add-point:BEFORE FIELD stfd002 name="construct.b.page8.stfd002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfd002
            
            #add-point:AFTER FIELD stfd002 name="construct.a.page8.stfd002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.stfd002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfd002
            #add-point:ON ACTION controlp INFIELD stfd002 name="construct.c.page8.stfd002"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page8.stfd003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfd003
            #add-point:ON ACTION controlp INFIELD stfd003 name="construct.c.page8.stfd003"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_inay001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfd003  #顯示到畫面上
            NEXT FIELD stfd003                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfd003
            #add-point:BEFORE FIELD stfd003 name="construct.b.page8.stfd003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfd003
            
            #add-point:AFTER FIELD stfd003 name="construct.a.page8.stfd003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.stfd004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfd004
            #add-point:ON ACTION controlp INFIELD stfd004 name="construct.c.page8.stfd004"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "2024"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfd004  #顯示到畫面上
            NEXT FIELD stfd004                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfd004
            #add-point:BEFORE FIELD stfd004 name="construct.b.page8.stfd004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfd004
            
            #add-point:AFTER FIELD stfd004 name="construct.a.page8.stfd004"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfd005
            #add-point:BEFORE FIELD stfd005 name="construct.b.page8.stfd005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfd005
            
            #add-point:AFTER FIELD stfd005 name="construct.a.page8.stfd005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.stfd005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfd005
            #add-point:ON ACTION controlp INFIELD stfd005 name="construct.c.page8.stfd005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfd006
            #add-point:BEFORE FIELD stfd006 name="construct.b.page8.stfd006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfd006
            
            #add-point:AFTER FIELD stfd006 name="construct.a.page8.stfd006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.stfd006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfd006
            #add-point:ON ACTION controlp INFIELD stfd006 name="construct.c.page8.stfd006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfd007
            #add-point:BEFORE FIELD stfd007 name="construct.b.page8.stfd007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfd007
            
            #add-point:AFTER FIELD stfd007 name="construct.a.page8.stfd007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.stfd007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfd007
            #add-point:ON ACTION controlp INFIELD stfd007 name="construct.c.page8.stfd007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfd008
            #add-point:BEFORE FIELD stfd008 name="construct.b.page8.stfd008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfd008
            
            #add-point:AFTER FIELD stfd008 name="construct.a.page8.stfd008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.stfd008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfd008
            #add-point:ON ACTION controlp INFIELD stfd008 name="construct.c.page8.stfd008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfd009
            #add-point:BEFORE FIELD stfd009 name="construct.b.page8.stfd009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfd009
            
            #add-point:AFTER FIELD stfd009 name="construct.a.page8.stfd009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.stfd009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfd009
            #add-point:ON ACTION controlp INFIELD stfd009 name="construct.c.page8.stfd009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfdsite
            #add-point:BEFORE FIELD stfdsite name="construct.b.page8.stfdsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfdsite
            
            #add-point:AFTER FIELD stfdsite name="construct.a.page8.stfdsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.stfdsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfdsite
            #add-point:ON ACTION controlp INFIELD stfdsite name="construct.c.page8.stfdsite"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfdunit
            #add-point:BEFORE FIELD stfdunit name="construct.b.page8.stfdunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfdunit
            
            #add-point:AFTER FIELD stfdunit name="construct.a.page8.stfdunit"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page8.stfdunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfdunit
            #add-point:ON ACTION controlp INFIELD stfdunit name="construct.c.page8.stfdunit"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
 
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
            INITIALIZE g_wc2_table2 TO NULL
 
            INITIALIZE g_wc2_table3 TO NULL
 
            INITIALIZE g_wc2_table4 TO NULL
 
            INITIALIZE g_wc2_table5 TO NULL
 
            INITIALIZE g_wc2_table6 TO NULL
 
            INITIALIZE g_wc2_table7 TO NULL
 
            INITIALIZE g_wc2_table8 TO NULL
 
            INITIALIZE g_wc2_table9 TO NULL
 
            INITIALIZE g_wc2_table10 TO NULL
 
            INITIALIZE g_wc2_table11 TO NULL
 
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "stfa_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "stfb_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "stfk_t" 
                     LET g_wc2_table2 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "stfl_t" 
                     LET g_wc2_table3 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "stfw_t" 
                     LET g_wc2_table4 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "stfc_t" 
                     LET g_wc2_table5 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "stfe_t" 
                     LET g_wc2_table6 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "stfg_t" 
                     LET g_wc2_table7 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "stfh_t" 
                     LET g_wc2_table8 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "stfi_t" 
                     LET g_wc2_table9 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "stfj_t" 
                     LET g_wc2_table10 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "stff_t" 
                     LET g_wc2_table11 = la_wc[li_idx].wc
 
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
   IF g_wc2_table4 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
   END IF
 
   IF g_wc2_table5 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
   END IF
 
   IF g_wc2_table6 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
   END IF
 
   IF g_wc2_table7 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
   END IF
 
   IF g_wc2_table8 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table8
   END IF
 
   IF g_wc2_table9 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table9
   END IF
 
   IF g_wc2_table10 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table10
   END IF
 
   IF g_wc2_table11 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table11
   END IF
 
 
 
   IF g_wc2_table12 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table12
   END IF
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="astm401.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION astm401_filter()
   #add-point:filter段define name="filter.define_customerization"
   
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON stfa001,stfa002,stfa003,stfa004,stfa005,stfa006,stfa007,stfa008,stfa009, 
          stfa010,stfa011,stfa012,stfa013,stfa014,stfa015,stfa016,stfa017,stfa018,stfa019,stfa020,stfa021, 
          stfa022,stfa023,stfa024,stfa025,stfa026,stfa027,stfa028,stfa029,stfa030,stfa031,stfa032,stfa033, 
          stfa034,stfa035,stfa036,stfa037,stfa038,stfa039,stfa040,stfa042,stfa044,stfa045,stfa046,stfa047, 
          stfa048,stfa049,stfasite,stfaunit
                          FROM s_browse[1].b_stfa001,s_browse[1].b_stfa002,s_browse[1].b_stfa003,s_browse[1].b_stfa004, 
                              s_browse[1].b_stfa005,s_browse[1].b_stfa006,s_browse[1].b_stfa007,s_browse[1].b_stfa008, 
                              s_browse[1].b_stfa009,s_browse[1].b_stfa010,s_browse[1].b_stfa011,s_browse[1].b_stfa012, 
                              s_browse[1].b_stfa013,s_browse[1].b_stfa014,s_browse[1].b_stfa015,s_browse[1].b_stfa016, 
                              s_browse[1].b_stfa017,s_browse[1].b_stfa018,s_browse[1].b_stfa019,s_browse[1].b_stfa020, 
                              s_browse[1].b_stfa021,s_browse[1].b_stfa022,s_browse[1].b_stfa023,s_browse[1].b_stfa024, 
                              s_browse[1].b_stfa025,s_browse[1].b_stfa026,s_browse[1].b_stfa027,s_browse[1].b_stfa028, 
                              s_browse[1].b_stfa029,s_browse[1].b_stfa030,s_browse[1].b_stfa031,s_browse[1].b_stfa032, 
                              s_browse[1].b_stfa033,s_browse[1].b_stfa034,s_browse[1].b_stfa035,s_browse[1].b_stfa036, 
                              s_browse[1].b_stfa037,s_browse[1].b_stfa038,s_browse[1].b_stfa039,s_browse[1].b_stfa040, 
                              s_browse[1].b_stfa042,s_browse[1].b_stfa044,s_browse[1].b_stfa045,s_browse[1].b_stfa046, 
                              s_browse[1].b_stfa047,s_browse[1].b_stfa048,s_browse[1].b_stfa049,s_browse[1].b_stfasite, 
                              s_browse[1].b_stfaunit
 
         BEFORE CONSTRUCT
               DISPLAY astm401_filter_parser('stfa001') TO s_browse[1].b_stfa001
            DISPLAY astm401_filter_parser('stfa002') TO s_browse[1].b_stfa002
            DISPLAY astm401_filter_parser('stfa003') TO s_browse[1].b_stfa003
            DISPLAY astm401_filter_parser('stfa004') TO s_browse[1].b_stfa004
            DISPLAY astm401_filter_parser('stfa005') TO s_browse[1].b_stfa005
            DISPLAY astm401_filter_parser('stfa006') TO s_browse[1].b_stfa006
            DISPLAY astm401_filter_parser('stfa007') TO s_browse[1].b_stfa007
            DISPLAY astm401_filter_parser('stfa008') TO s_browse[1].b_stfa008
            DISPLAY astm401_filter_parser('stfa009') TO s_browse[1].b_stfa009
            DISPLAY astm401_filter_parser('stfa010') TO s_browse[1].b_stfa010
            DISPLAY astm401_filter_parser('stfa011') TO s_browse[1].b_stfa011
            DISPLAY astm401_filter_parser('stfa012') TO s_browse[1].b_stfa012
            DISPLAY astm401_filter_parser('stfa013') TO s_browse[1].b_stfa013
            DISPLAY astm401_filter_parser('stfa014') TO s_browse[1].b_stfa014
            DISPLAY astm401_filter_parser('stfa015') TO s_browse[1].b_stfa015
            DISPLAY astm401_filter_parser('stfa016') TO s_browse[1].b_stfa016
            DISPLAY astm401_filter_parser('stfa017') TO s_browse[1].b_stfa017
            DISPLAY astm401_filter_parser('stfa018') TO s_browse[1].b_stfa018
            DISPLAY astm401_filter_parser('stfa019') TO s_browse[1].b_stfa019
            DISPLAY astm401_filter_parser('stfa020') TO s_browse[1].b_stfa020
            DISPLAY astm401_filter_parser('stfa021') TO s_browse[1].b_stfa021
            DISPLAY astm401_filter_parser('stfa022') TO s_browse[1].b_stfa022
            DISPLAY astm401_filter_parser('stfa023') TO s_browse[1].b_stfa023
            DISPLAY astm401_filter_parser('stfa024') TO s_browse[1].b_stfa024
            DISPLAY astm401_filter_parser('stfa025') TO s_browse[1].b_stfa025
            DISPLAY astm401_filter_parser('stfa026') TO s_browse[1].b_stfa026
            DISPLAY astm401_filter_parser('stfa027') TO s_browse[1].b_stfa027
            DISPLAY astm401_filter_parser('stfa028') TO s_browse[1].b_stfa028
            DISPLAY astm401_filter_parser('stfa029') TO s_browse[1].b_stfa029
            DISPLAY astm401_filter_parser('stfa030') TO s_browse[1].b_stfa030
            DISPLAY astm401_filter_parser('stfa031') TO s_browse[1].b_stfa031
            DISPLAY astm401_filter_parser('stfa032') TO s_browse[1].b_stfa032
            DISPLAY astm401_filter_parser('stfa033') TO s_browse[1].b_stfa033
            DISPLAY astm401_filter_parser('stfa034') TO s_browse[1].b_stfa034
            DISPLAY astm401_filter_parser('stfa035') TO s_browse[1].b_stfa035
            DISPLAY astm401_filter_parser('stfa036') TO s_browse[1].b_stfa036
            DISPLAY astm401_filter_parser('stfa037') TO s_browse[1].b_stfa037
            DISPLAY astm401_filter_parser('stfa038') TO s_browse[1].b_stfa038
            DISPLAY astm401_filter_parser('stfa039') TO s_browse[1].b_stfa039
            DISPLAY astm401_filter_parser('stfa040') TO s_browse[1].b_stfa040
            DISPLAY astm401_filter_parser('stfa042') TO s_browse[1].b_stfa042
            DISPLAY astm401_filter_parser('stfa044') TO s_browse[1].b_stfa044
            DISPLAY astm401_filter_parser('stfa045') TO s_browse[1].b_stfa045
            DISPLAY astm401_filter_parser('stfa046') TO s_browse[1].b_stfa046
            DISPLAY astm401_filter_parser('stfa047') TO s_browse[1].b_stfa047
            DISPLAY astm401_filter_parser('stfa048') TO s_browse[1].b_stfa048
            DISPLAY astm401_filter_parser('stfa049') TO s_browse[1].b_stfa049
            DISPLAY astm401_filter_parser('stfasite') TO s_browse[1].b_stfasite
            DISPLAY astm401_filter_parser('stfaunit') TO s_browse[1].b_stfaunit
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL astm401_filter_show('stfa001')
   CALL astm401_filter_show('stfa002')
   CALL astm401_filter_show('stfa003')
   CALL astm401_filter_show('stfa004')
   CALL astm401_filter_show('stfa005')
   CALL astm401_filter_show('stfa006')
   CALL astm401_filter_show('stfa007')
   CALL astm401_filter_show('stfa008')
   CALL astm401_filter_show('stfa009')
   CALL astm401_filter_show('stfa010')
   CALL astm401_filter_show('stfa011')
   CALL astm401_filter_show('stfa012')
   CALL astm401_filter_show('stfa013')
   CALL astm401_filter_show('stfa014')
   CALL astm401_filter_show('stfa015')
   CALL astm401_filter_show('stfa016')
   CALL astm401_filter_show('stfa017')
   CALL astm401_filter_show('stfa018')
   CALL astm401_filter_show('stfa019')
   CALL astm401_filter_show('stfa020')
   CALL astm401_filter_show('stfa021')
   CALL astm401_filter_show('stfa022')
   CALL astm401_filter_show('stfa023')
   CALL astm401_filter_show('stfa024')
   CALL astm401_filter_show('stfa025')
   CALL astm401_filter_show('stfa026')
   CALL astm401_filter_show('stfa027')
   CALL astm401_filter_show('stfa028')
   CALL astm401_filter_show('stfa029')
   CALL astm401_filter_show('stfa030')
   CALL astm401_filter_show('stfa031')
   CALL astm401_filter_show('stfa032')
   CALL astm401_filter_show('stfa033')
   CALL astm401_filter_show('stfa034')
   CALL astm401_filter_show('stfa035')
   CALL astm401_filter_show('stfa036')
   CALL astm401_filter_show('stfa037')
   CALL astm401_filter_show('stfa038')
   CALL astm401_filter_show('stfa039')
   CALL astm401_filter_show('stfa040')
   CALL astm401_filter_show('stfa042')
   CALL astm401_filter_show('stfa044')
   CALL astm401_filter_show('stfa045')
   CALL astm401_filter_show('stfa046')
   CALL astm401_filter_show('stfa047')
   CALL astm401_filter_show('stfa048')
   CALL astm401_filter_show('stfa049')
   CALL astm401_filter_show('stfasite')
   CALL astm401_filter_show('stfaunit')
 
END FUNCTION
 
{</section>}
 
{<section id="astm401.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION astm401_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="astm401.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION astm401_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = astm401_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="astm401.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION astm401_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_stfb_d.clear()
   CALL g_stfb10_d.clear()
   CALL g_stfb11_d.clear()
   CALL g_stfb12_d.clear()
   CALL g_stfb2_d.clear()
   CALL g_stfb3_d.clear()
   CALL g_stfb4_d.clear()
   CALL g_stfb5_d.clear()
   CALL g_stfb6_d.clear()
   CALL g_stfb7_d.clear()
   CALL g_stfb8_d.clear()
   CALL g_stfb9_d.clear()
 
   
   #add-point:query段other name="query.other"
   
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL astm401_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL astm401_browser_fill("")
      CALL astm401_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
   LET g_detail_idx_list[4] = 1
   LET g_detail_idx_list[5] = 1
   LET g_detail_idx_list[6] = 1
   LET g_detail_idx_list[7] = 1
   LET g_detail_idx_list[8] = 1
   LET g_detail_idx_list[9] = 1
   LET g_detail_idx_list[10] = 1
   LET g_detail_idx_list[11] = 1
   LET g_detail_idx_list[12] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL astm401_filter_show('stfa001')
   CALL astm401_filter_show('stfa002')
   CALL astm401_filter_show('stfa003')
   CALL astm401_filter_show('stfa004')
   CALL astm401_filter_show('stfa005')
   CALL astm401_filter_show('stfa006')
   CALL astm401_filter_show('stfa007')
   CALL astm401_filter_show('stfa008')
   CALL astm401_filter_show('stfa009')
   CALL astm401_filter_show('stfa010')
   CALL astm401_filter_show('stfa011')
   CALL astm401_filter_show('stfa012')
   CALL astm401_filter_show('stfa013')
   CALL astm401_filter_show('stfa014')
   CALL astm401_filter_show('stfa015')
   CALL astm401_filter_show('stfa016')
   CALL astm401_filter_show('stfa017')
   CALL astm401_filter_show('stfa018')
   CALL astm401_filter_show('stfa019')
   CALL astm401_filter_show('stfa020')
   CALL astm401_filter_show('stfa021')
   CALL astm401_filter_show('stfa022')
   CALL astm401_filter_show('stfa023')
   CALL astm401_filter_show('stfa024')
   CALL astm401_filter_show('stfa025')
   CALL astm401_filter_show('stfa026')
   CALL astm401_filter_show('stfa027')
   CALL astm401_filter_show('stfa028')
   CALL astm401_filter_show('stfa029')
   CALL astm401_filter_show('stfa030')
   CALL astm401_filter_show('stfa031')
   CALL astm401_filter_show('stfa032')
   CALL astm401_filter_show('stfa033')
   CALL astm401_filter_show('stfa034')
   CALL astm401_filter_show('stfa035')
   CALL astm401_filter_show('stfa036')
   CALL astm401_filter_show('stfa037')
   CALL astm401_filter_show('stfa038')
   CALL astm401_filter_show('stfa039')
   CALL astm401_filter_show('stfa040')
   CALL astm401_filter_show('stfa042')
   CALL astm401_filter_show('stfa044')
   CALL astm401_filter_show('stfa045')
   CALL astm401_filter_show('stfa046')
   CALL astm401_filter_show('stfa047')
   CALL astm401_filter_show('stfa048')
   CALL astm401_filter_show('stfa049')
   CALL astm401_filter_show('stfasite')
   CALL astm401_filter_show('stfaunit')
   CALL astm401_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "-100" 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
   ELSE
      CALL astm401_fetch("F") 
      #顯示單身筆數
      CALL astm401_idx_chk()
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="astm401.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION astm401_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
   CALL g_stfb8_d.clear()
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_stfa_m.stfa001 = g_browser[g_current_idx].b_stfa001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE astm401_master_referesh USING g_stfa_m.stfa001 INTO g_stfa_m.stfaunit,g_stfa_m.stfasite,g_stfa_m.stfa001, 
       g_stfa_m.stfa002,g_stfa_m.stfa003,g_stfa_m.stfa004,g_stfa_m.stfa009,g_stfa_m.stfastus,g_stfa_m.stfa010, 
       g_stfa_m.stfa005,g_stfa_m.stfa007,g_stfa_m.stfa008,g_stfa_m.stfa047,g_stfa_m.stfa048,g_stfa_m.stfa044, 
       g_stfa_m.stfa051,g_stfa_m.stfa011,g_stfa_m.stfa012,g_stfa_m.stfa033,g_stfa_m.stfa034,g_stfa_m.stfa036, 
       g_stfa_m.stfa037,g_stfa_m.stfa038,g_stfa_m.stfa045,g_stfa_m.stfa046,g_stfa_m.stfa029,g_stfa_m.stfa030, 
       g_stfa_m.stfa032,g_stfa_m.stfa035,g_stfa_m.stfa050,g_stfa_m.stfa028,g_stfa_m.stfa057,g_stfa_m.stfa058, 
       g_stfa_m.stfa039,g_stfa_m.stfa040,g_stfa_m.stfa052,g_stfa_m.stfa013,g_stfa_m.stfa014,g_stfa_m.stfa015, 
       g_stfa_m.stfa016,g_stfa_m.stfa006,g_stfa_m.stfa053,g_stfa_m.stfa055,g_stfa_m.stfa017,g_stfa_m.stfa021, 
       g_stfa_m.stfa024,g_stfa_m.stfa018,g_stfa_m.stfa022,g_stfa_m.stfa025,g_stfa_m.stfa019,g_stfa_m.stfa023, 
       g_stfa_m.stfa026,g_stfa_m.stfa020,g_stfa_m.stfa049,g_stfa_m.stfa056,g_stfa_m.stfa054,g_stfa_m.stfa027, 
       g_stfa_m.stfa031,g_stfa_m.stfa043,g_stfa_m.stfaownid,g_stfa_m.stfaowndp,g_stfa_m.stfacrtid,g_stfa_m.stfacrtdp, 
       g_stfa_m.stfacrtdt,g_stfa_m.stfamodid,g_stfa_m.stfamoddt,g_stfa_m.stfacnfid,g_stfa_m.stfacnfdt, 
       g_stfa_m.stfaunit_desc,g_stfa_m.stfasite_desc,g_stfa_m.stfa010_desc,g_stfa_m.stfa010_desc_desc, 
       g_stfa_m.stfa047_desc,g_stfa_m.stfa048_desc,g_stfa_m.stfa044_desc,g_stfa_m.stfa051_desc,g_stfa_m.stfa011_desc, 
       g_stfa_m.stfa012_desc,g_stfa_m.stfa032_desc,g_stfa_m.stfa035_desc,g_stfa_m.stfaownid_desc,g_stfa_m.stfaowndp_desc, 
       g_stfa_m.stfacrtid_desc,g_stfa_m.stfacrtdp_desc,g_stfa_m.stfamodid_desc,g_stfa_m.stfacnfid_desc 
 
   
   #遮罩相關處理
   LET g_stfa_m_mask_o.* =  g_stfa_m.*
   CALL astm401_stfa_t_mask()
   LET g_stfa_m_mask_n.* =  g_stfa_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL astm401_set_act_visible()   
   CALL astm401_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
   
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
   
   #保存單頭舊值
   LET g_stfa_m_t.* = g_stfa_m.*
   LET g_stfa_m_o.* = g_stfa_m.*
   
   LET g_data_owner = g_stfa_m.stfaownid      
   LET g_data_dept  = g_stfa_m.stfaowndp
   
   #重新顯示   
   CALL astm401_show()
 
   
 
END FUNCTION
 
{</section>}
 
{<section id="astm401.insert" >}
#+ 資料新增
PRIVATE FUNCTION astm401_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_stfb_d.clear()   
   CALL g_stfb10_d.clear()  
   CALL g_stfb11_d.clear()  
   CALL g_stfb12_d.clear()  
   CALL g_stfb2_d.clear()  
   CALL g_stfb3_d.clear()  
   CALL g_stfb4_d.clear()  
   CALL g_stfb5_d.clear()  
   CALL g_stfb6_d.clear()  
   CALL g_stfb7_d.clear()  
   CALL g_stfb8_d.clear()  
   CALL g_stfb9_d.clear()  
 
 
   INITIALIZE g_stfa_m.* TO NULL             #DEFAULT 設定
   
   LET g_stfa001_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_stfa_m.stfaownid = g_user
      LET g_stfa_m.stfaowndp = g_dept
      LET g_stfa_m.stfacrtid = g_user
      LET g_stfa_m.stfacrtdp = g_dept 
      LET g_stfa_m.stfacrtdt = cl_get_current()
      LET g_stfa_m.stfamodid = g_user
      LET g_stfa_m.stfamoddt = cl_get_current()
      LET g_stfa_m.stfastus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
      
  
      #add-point:單頭預設值 name="insert.default"
      
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_stfa_m_t.* = g_stfa_m.*
      LET g_stfa_m_o.* = g_stfa_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_stfa_m.stfastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         
      END CASE
 
 
 
    
      CALL astm401_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_stfa_m.* TO NULL
         INITIALIZE g_stfb_d TO NULL
         INITIALIZE g_stfb10_d TO NULL
         INITIALIZE g_stfb11_d TO NULL
         INITIALIZE g_stfb12_d TO NULL
         INITIALIZE g_stfb2_d TO NULL
         INITIALIZE g_stfb3_d TO NULL
         INITIALIZE g_stfb4_d TO NULL
         INITIALIZE g_stfb5_d TO NULL
         INITIALIZE g_stfb6_d TO NULL
         INITIALIZE g_stfb7_d TO NULL
         INITIALIZE g_stfb8_d TO NULL
         INITIALIZE g_stfb9_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         
         #end add-point 
         CALL astm401_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_stfb_d.clear()
      #CALL g_stfb10_d.clear()
      #CALL g_stfb11_d.clear()
      #CALL g_stfb12_d.clear()
      #CALL g_stfb2_d.clear()
      #CALL g_stfb3_d.clear()
      #CALL g_stfb4_d.clear()
      #CALL g_stfb5_d.clear()
      #CALL g_stfb6_d.clear()
      #CALL g_stfb7_d.clear()
      #CALL g_stfb8_d.clear()
      #CALL g_stfb9_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL astm401_set_act_visible()   
   CALL astm401_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_stfa001_t = g_stfa_m.stfa001
 
   
   #組合新增資料的條件
   LET g_add_browse = " stfaent = " ||g_enterprise|| " AND",
                      " stfa001 = '", g_stfa_m.stfa001, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL astm401_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE astm401_cl
   
   CALL astm401_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE astm401_master_referesh USING g_stfa_m.stfa001 INTO g_stfa_m.stfaunit,g_stfa_m.stfasite,g_stfa_m.stfa001, 
       g_stfa_m.stfa002,g_stfa_m.stfa003,g_stfa_m.stfa004,g_stfa_m.stfa009,g_stfa_m.stfastus,g_stfa_m.stfa010, 
       g_stfa_m.stfa005,g_stfa_m.stfa007,g_stfa_m.stfa008,g_stfa_m.stfa047,g_stfa_m.stfa048,g_stfa_m.stfa044, 
       g_stfa_m.stfa051,g_stfa_m.stfa011,g_stfa_m.stfa012,g_stfa_m.stfa033,g_stfa_m.stfa034,g_stfa_m.stfa036, 
       g_stfa_m.stfa037,g_stfa_m.stfa038,g_stfa_m.stfa045,g_stfa_m.stfa046,g_stfa_m.stfa029,g_stfa_m.stfa030, 
       g_stfa_m.stfa032,g_stfa_m.stfa035,g_stfa_m.stfa050,g_stfa_m.stfa028,g_stfa_m.stfa057,g_stfa_m.stfa058, 
       g_stfa_m.stfa039,g_stfa_m.stfa040,g_stfa_m.stfa052,g_stfa_m.stfa013,g_stfa_m.stfa014,g_stfa_m.stfa015, 
       g_stfa_m.stfa016,g_stfa_m.stfa006,g_stfa_m.stfa053,g_stfa_m.stfa055,g_stfa_m.stfa017,g_stfa_m.stfa021, 
       g_stfa_m.stfa024,g_stfa_m.stfa018,g_stfa_m.stfa022,g_stfa_m.stfa025,g_stfa_m.stfa019,g_stfa_m.stfa023, 
       g_stfa_m.stfa026,g_stfa_m.stfa020,g_stfa_m.stfa049,g_stfa_m.stfa056,g_stfa_m.stfa054,g_stfa_m.stfa027, 
       g_stfa_m.stfa031,g_stfa_m.stfa043,g_stfa_m.stfaownid,g_stfa_m.stfaowndp,g_stfa_m.stfacrtid,g_stfa_m.stfacrtdp, 
       g_stfa_m.stfacrtdt,g_stfa_m.stfamodid,g_stfa_m.stfamoddt,g_stfa_m.stfacnfid,g_stfa_m.stfacnfdt, 
       g_stfa_m.stfaunit_desc,g_stfa_m.stfasite_desc,g_stfa_m.stfa010_desc,g_stfa_m.stfa010_desc_desc, 
       g_stfa_m.stfa047_desc,g_stfa_m.stfa048_desc,g_stfa_m.stfa044_desc,g_stfa_m.stfa051_desc,g_stfa_m.stfa011_desc, 
       g_stfa_m.stfa012_desc,g_stfa_m.stfa032_desc,g_stfa_m.stfa035_desc,g_stfa_m.stfaownid_desc,g_stfa_m.stfaowndp_desc, 
       g_stfa_m.stfacrtid_desc,g_stfa_m.stfacrtdp_desc,g_stfa_m.stfamodid_desc,g_stfa_m.stfacnfid_desc 
 
   
   
   #遮罩相關處理
   LET g_stfa_m_mask_o.* =  g_stfa_m.*
   CALL astm401_stfa_t_mask()
   LET g_stfa_m_mask_n.* =  g_stfa_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_stfa_m.stfaunit,g_stfa_m.stfaunit_desc,g_stfa_m.stfasite,g_stfa_m.stfasite_desc, 
       g_stfa_m.stfa001,g_stfa_m.stfa002,g_stfa_m.stfa003,g_stfa_m.stfa004,g_stfa_m.stfa009,g_stfa_m.stfastus, 
       g_stfa_m.stfa010,g_stfa_m.stfa010_desc,g_stfa_m.stfa010_desc_desc,g_stfa_m.stfa005,g_stfa_m.stfal003, 
       g_stfa_m.stfal004,g_stfa_m.stfa007,g_stfa_m.stfa008,g_stfa_m.stfa047,g_stfa_m.stfa047_desc,g_stfa_m.stfa048, 
       g_stfa_m.stfa048_desc,g_stfa_m.stfa044,g_stfa_m.stfa044_desc,g_stfa_m.stfa051,g_stfa_m.stfa051_desc, 
       g_stfa_m.stfa011,g_stfa_m.stfa011_desc,g_stfa_m.stfa012,g_stfa_m.stfa012_desc,g_stfa_m.stfa033, 
       g_stfa_m.stfa033_desc,g_stfa_m.stfa034,g_stfa_m.stfa034_desc,g_stfa_m.stfa036,g_stfa_m.stfa036_desc, 
       g_stfa_m.stfa037,g_stfa_m.stfa037_desc,g_stfa_m.stfa038,g_stfa_m.stfa038_desc,g_stfa_m.stfa045, 
       g_stfa_m.stfa045_desc,g_stfa_m.stfa046,g_stfa_m.stfa029,g_stfa_m.stfa030,g_stfa_m.stfa032,g_stfa_m.stfa032_desc, 
       g_stfa_m.stfa035,g_stfa_m.stfa035_desc,g_stfa_m.stfa050,g_stfa_m.stfa028,g_stfa_m.stfa057,g_stfa_m.stfa058, 
       g_stfa_m.stfa039,g_stfa_m.stfa040,g_stfa_m.stfa052,g_stfa_m.next_b,g_stfa_m.stfa013,g_stfa_m.stfa013_desc, 
       g_stfa_m.stfa014,g_stfa_m.stfa014_desc,g_stfa_m.stfa015,g_stfa_m.stfa015_desc,g_stfa_m.stfa016, 
       g_stfa_m.stfa006,g_stfa_m.stfa006_desc,g_stfa_m.stfa053,g_stfa_m.stfa055,g_stfa_m.stfa017,g_stfa_m.stfa021, 
       g_stfa_m.stfa024,g_stfa_m.stfa018,g_stfa_m.stfa022,g_stfa_m.stfa025,g_stfa_m.stfa019,g_stfa_m.stfa023, 
       g_stfa_m.stfa026,g_stfa_m.stfa020,g_stfa_m.stfa049,g_stfa_m.stfa056,g_stfa_m.stfa054,g_stfa_m.stfa027, 
       g_stfa_m.stfa031,g_stfa_m.stfa043,g_stfa_m.stfaownid,g_stfa_m.stfaownid_desc,g_stfa_m.stfaowndp, 
       g_stfa_m.stfaowndp_desc,g_stfa_m.stfacrtid,g_stfa_m.stfacrtid_desc,g_stfa_m.stfacrtdp,g_stfa_m.stfacrtdp_desc, 
       g_stfa_m.stfacrtdt,g_stfa_m.stfamodid,g_stfa_m.stfamodid_desc,g_stfa_m.stfamoddt,g_stfa_m.stfacnfid, 
       g_stfa_m.stfacnfid_desc,g_stfa_m.stfacnfdt
   
   #add-point:新增結束後 name="insert.after"
   
   #end add-point 
   
   LET g_data_owner = g_stfa_m.stfaownid      
   LET g_data_dept  = g_stfa_m.stfaowndp
   
   #功能已完成,通報訊息中心
   CALL astm401_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="astm401.modify" >}
#+ 資料修改
PRIVATE FUNCTION astm401_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
   DEFINE l_wc2_table3   STRING
 
   DEFINE l_wc2_table4   STRING
 
   DEFINE l_wc2_table5   STRING
 
   DEFINE l_wc2_table6   STRING
 
   DEFINE l_wc2_table7   STRING
 
   DEFINE l_wc2_table8   STRING
 
   DEFINE l_wc2_table9   STRING
 
   DEFINE l_wc2_table10   STRING
 
   DEFINE l_wc2_table11   STRING
 
 
   DEFINE l_wc2_table12   STRING
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   #保存單頭舊值
   LET g_stfa_m_t.* = g_stfa_m.*
   LET g_stfa_m_o.* = g_stfa_m.*
   
   IF g_stfa_m.stfa001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_stfa001_t = g_stfa_m.stfa001
 
   CALL s_transaction_begin()
   
   OPEN astm401_cl USING g_enterprise,g_stfa_m.stfa001
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN astm401_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE astm401_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE astm401_master_referesh USING g_stfa_m.stfa001 INTO g_stfa_m.stfaunit,g_stfa_m.stfasite,g_stfa_m.stfa001, 
       g_stfa_m.stfa002,g_stfa_m.stfa003,g_stfa_m.stfa004,g_stfa_m.stfa009,g_stfa_m.stfastus,g_stfa_m.stfa010, 
       g_stfa_m.stfa005,g_stfa_m.stfa007,g_stfa_m.stfa008,g_stfa_m.stfa047,g_stfa_m.stfa048,g_stfa_m.stfa044, 
       g_stfa_m.stfa051,g_stfa_m.stfa011,g_stfa_m.stfa012,g_stfa_m.stfa033,g_stfa_m.stfa034,g_stfa_m.stfa036, 
       g_stfa_m.stfa037,g_stfa_m.stfa038,g_stfa_m.stfa045,g_stfa_m.stfa046,g_stfa_m.stfa029,g_stfa_m.stfa030, 
       g_stfa_m.stfa032,g_stfa_m.stfa035,g_stfa_m.stfa050,g_stfa_m.stfa028,g_stfa_m.stfa057,g_stfa_m.stfa058, 
       g_stfa_m.stfa039,g_stfa_m.stfa040,g_stfa_m.stfa052,g_stfa_m.stfa013,g_stfa_m.stfa014,g_stfa_m.stfa015, 
       g_stfa_m.stfa016,g_stfa_m.stfa006,g_stfa_m.stfa053,g_stfa_m.stfa055,g_stfa_m.stfa017,g_stfa_m.stfa021, 
       g_stfa_m.stfa024,g_stfa_m.stfa018,g_stfa_m.stfa022,g_stfa_m.stfa025,g_stfa_m.stfa019,g_stfa_m.stfa023, 
       g_stfa_m.stfa026,g_stfa_m.stfa020,g_stfa_m.stfa049,g_stfa_m.stfa056,g_stfa_m.stfa054,g_stfa_m.stfa027, 
       g_stfa_m.stfa031,g_stfa_m.stfa043,g_stfa_m.stfaownid,g_stfa_m.stfaowndp,g_stfa_m.stfacrtid,g_stfa_m.stfacrtdp, 
       g_stfa_m.stfacrtdt,g_stfa_m.stfamodid,g_stfa_m.stfamoddt,g_stfa_m.stfacnfid,g_stfa_m.stfacnfdt, 
       g_stfa_m.stfaunit_desc,g_stfa_m.stfasite_desc,g_stfa_m.stfa010_desc,g_stfa_m.stfa010_desc_desc, 
       g_stfa_m.stfa047_desc,g_stfa_m.stfa048_desc,g_stfa_m.stfa044_desc,g_stfa_m.stfa051_desc,g_stfa_m.stfa011_desc, 
       g_stfa_m.stfa012_desc,g_stfa_m.stfa032_desc,g_stfa_m.stfa035_desc,g_stfa_m.stfaownid_desc,g_stfa_m.stfaowndp_desc, 
       g_stfa_m.stfacrtid_desc,g_stfa_m.stfacrtdp_desc,g_stfa_m.stfamodid_desc,g_stfa_m.stfacnfid_desc 
 
   
   #檢查是否允許此動作
   IF NOT astm401_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_stfa_m_mask_o.* =  g_stfa_m.*
   CALL astm401_stfa_t_mask()
   LET g_stfa_m_mask_n.* =  g_stfa_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
   #LET l_wc2_table3 = g_wc2_table3
   #LET l_wc2_table3 = " 1=1"
 
   #LET l_wc2_table4 = g_wc2_table4
   #LET l_wc2_table4 = " 1=1"
 
   #LET l_wc2_table5 = g_wc2_table5
   #LET l_wc2_table5 = " 1=1"
 
   #LET l_wc2_table6 = g_wc2_table6
   #LET l_wc2_table6 = " 1=1"
 
   #LET l_wc2_table7 = g_wc2_table7
   #LET l_wc2_table7 = " 1=1"
 
   #LET l_wc2_table8 = g_wc2_table8
   #LET l_wc2_table8 = " 1=1"
 
   #LET l_wc2_table9 = g_wc2_table9
   #LET l_wc2_table9 = " 1=1"
 
   #LET l_wc2_table10 = g_wc2_table10
   #LET l_wc2_table10 = " 1=1"
 
   #LET l_wc2_table11 = g_wc2_table11
   #LET l_wc2_table11 = " 1=1"
 
 
   #LET l_wc2_table12 = g_wc2_table12
   #LET l_wc2_table12 = " 1=1"
 
 
   
   CALL astm401_show()
   #add-point:modify段show之後 name="modify.after_show"
   
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
   #LET  g_wc2_table3 = l_wc2_table3 
 
   #LET  g_wc2_table4 = l_wc2_table4 
 
   #LET  g_wc2_table5 = l_wc2_table5 
 
   #LET  g_wc2_table6 = l_wc2_table6 
 
   #LET  g_wc2_table7 = l_wc2_table7 
 
   #LET  g_wc2_table8 = l_wc2_table8 
 
   #LET  g_wc2_table9 = l_wc2_table9 
 
   #LET  g_wc2_table10 = l_wc2_table10 
 
   #LET  g_wc2_table11 = l_wc2_table11 
 
 
   #LET  g_wc2_table12 = l_wc2_table12 
 
 
    
   WHILE TRUE
      LET g_stfa001_t = g_stfa_m.stfa001
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_stfa_m.stfamodid = g_user 
LET g_stfa_m.stfamoddt = cl_get_current()
LET g_stfa_m.stfamodid_desc = cl_get_username(g_stfa_m.stfamodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL astm401_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE stfa_t SET (stfamodid,stfamoddt) = (g_stfa_m.stfamodid,g_stfa_m.stfamoddt)
          WHERE stfaent = g_enterprise AND stfa001 = g_stfa001_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_stfa_m.* = g_stfa_m_t.*
            CALL astm401_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_stfa_m.stfa001 != g_stfa_m_t.stfa001
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         
         #end add-point
         
         #更新單身key值
         UPDATE stfb_t SET stfb001 = g_stfa_m.stfa001
 
          WHERE stfbent = g_enterprise AND stfb001 = g_stfa_m_t.stfa001
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stfb_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfb_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update2"
         
         #end add-point
         
         UPDATE stfk_t
            SET stfk001 = g_stfa_m.stfa001
 
          WHERE stfkent = g_enterprise AND
                stfk001 = g_stfa001_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update2"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stfk_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfk_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update2"
         
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update3"
         
         #end add-point
         
         UPDATE stfl_t
            SET stfl001 = g_stfa_m.stfa001
 
          WHERE stflent = g_enterprise AND
                stfl001 = g_stfa001_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update3"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stfl_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfl_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update3"
         
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update4"
         
         #end add-point
         
         UPDATE stfw_t
            SET stfw001 = g_stfa_m.stfa001
 
          WHERE stfwent = g_enterprise AND
                stfw001 = g_stfa001_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update4"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stfw_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfw_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update4"
         
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update5"
         
         #end add-point
         
         UPDATE stfc_t
            SET stfc001 = g_stfa_m.stfa001
 
          WHERE stfcent = g_enterprise AND
                stfc001 = g_stfa001_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update5"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stfc_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfc_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update5"
         
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update6"
         
         #end add-point
         
         UPDATE stfe_t
            SET stfe001 = g_stfa_m.stfa001
 
          WHERE stfeent = g_enterprise AND
                stfe001 = g_stfa001_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update6"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stfe_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfe_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update6"
         
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update7"
         
         #end add-point
         
         UPDATE stfg_t
            SET stfg001 = g_stfa_m.stfa001
 
          WHERE stfgent = g_enterprise AND
                stfg001 = g_stfa001_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update7"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stfg_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfg_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update7"
         
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update8"
         
         #end add-point
         
         UPDATE stfh_t
            SET stfh001 = g_stfa_m.stfa001
 
          WHERE stfhent = g_enterprise AND
                stfh001 = g_stfa001_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update8"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stfh_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfh_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update8"
         
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update9"
         
         #end add-point
         
         UPDATE stfi_t
            SET stfi001 = g_stfa_m.stfa001
 
          WHERE stfient = g_enterprise AND
                stfi001 = g_stfa001_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update9"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stfi_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfi_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update9"
         
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update10"
         
         #end add-point
         
         UPDATE stfj_t
            SET stfj001 = g_stfa_m.stfa001
 
          WHERE stfjent = g_enterprise AND
                stfj001 = g_stfa001_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update10"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stfj_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfj_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update10"
         
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update11"
         
         #end add-point
         
         UPDATE stff_t
            SET stff001 = g_stfa_m.stfa001
 
          WHERE stffent = g_enterprise AND
                stff001 = g_stfa001_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update11"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "stff_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stff_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update11"
         
         #end add-point
 
 
         
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update12"
         
         #end add-point
         UPDATE stfd_t
            SET stfd001 = g_stfa_m.stfa001
 
          WHERE stfdent = g_enterprise AND
                stfd001 = g_stfa001_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update12"
         
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfd_t" 
               LET g_errparam.code = "std-00009" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfd_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update12"
         
         #end add-point
 
 
         
         #UPDATE 多語言table key值
         
         
         
         
         
         
         
         
         
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL astm401_set_act_visible()   
   CALL astm401_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " stfaent = " ||g_enterprise|| " AND",
                      " stfa001 = '", g_stfa_m.stfa001, "' "
 
   #填到對應位置
   CALL astm401_browser_fill("")
 
   CLOSE astm401_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL astm401_msgcentre_notify('modify')
 
END FUNCTION 
 
{</section>}
 
{<section id="astm401.input" >}
#+ 資料輸入
PRIVATE FUNCTION astm401_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_stfa_m.stfaunit,g_stfa_m.stfaunit_desc,g_stfa_m.stfasite,g_stfa_m.stfasite_desc, 
       g_stfa_m.stfa001,g_stfa_m.stfa002,g_stfa_m.stfa003,g_stfa_m.stfa004,g_stfa_m.stfa009,g_stfa_m.stfastus, 
       g_stfa_m.stfa010,g_stfa_m.stfa010_desc,g_stfa_m.stfa010_desc_desc,g_stfa_m.stfa005,g_stfa_m.stfal003, 
       g_stfa_m.stfal004,g_stfa_m.stfa007,g_stfa_m.stfa008,g_stfa_m.stfa047,g_stfa_m.stfa047_desc,g_stfa_m.stfa048, 
       g_stfa_m.stfa048_desc,g_stfa_m.stfa044,g_stfa_m.stfa044_desc,g_stfa_m.stfa051,g_stfa_m.stfa051_desc, 
       g_stfa_m.stfa011,g_stfa_m.stfa011_desc,g_stfa_m.stfa012,g_stfa_m.stfa012_desc,g_stfa_m.stfa033, 
       g_stfa_m.stfa033_desc,g_stfa_m.stfa034,g_stfa_m.stfa034_desc,g_stfa_m.stfa036,g_stfa_m.stfa036_desc, 
       g_stfa_m.stfa037,g_stfa_m.stfa037_desc,g_stfa_m.stfa038,g_stfa_m.stfa038_desc,g_stfa_m.stfa045, 
       g_stfa_m.stfa045_desc,g_stfa_m.stfa046,g_stfa_m.stfa029,g_stfa_m.stfa030,g_stfa_m.stfa032,g_stfa_m.stfa032_desc, 
       g_stfa_m.stfa035,g_stfa_m.stfa035_desc,g_stfa_m.stfa050,g_stfa_m.stfa028,g_stfa_m.stfa057,g_stfa_m.stfa058, 
       g_stfa_m.stfa039,g_stfa_m.stfa040,g_stfa_m.stfa052,g_stfa_m.next_b,g_stfa_m.stfa013,g_stfa_m.stfa013_desc, 
       g_stfa_m.stfa014,g_stfa_m.stfa014_desc,g_stfa_m.stfa015,g_stfa_m.stfa015_desc,g_stfa_m.stfa016, 
       g_stfa_m.stfa006,g_stfa_m.stfa006_desc,g_stfa_m.stfa053,g_stfa_m.stfa055,g_stfa_m.stfa017,g_stfa_m.stfa021, 
       g_stfa_m.stfa024,g_stfa_m.stfa018,g_stfa_m.stfa022,g_stfa_m.stfa025,g_stfa_m.stfa019,g_stfa_m.stfa023, 
       g_stfa_m.stfa026,g_stfa_m.stfa020,g_stfa_m.stfa049,g_stfa_m.stfa056,g_stfa_m.stfa054,g_stfa_m.stfa027, 
       g_stfa_m.stfa031,g_stfa_m.stfa043,g_stfa_m.stfaownid,g_stfa_m.stfaownid_desc,g_stfa_m.stfaowndp, 
       g_stfa_m.stfaowndp_desc,g_stfa_m.stfacrtid,g_stfa_m.stfacrtid_desc,g_stfa_m.stfacrtdp,g_stfa_m.stfacrtdp_desc, 
       g_stfa_m.stfacrtdt,g_stfa_m.stfamodid,g_stfa_m.stfamodid_desc,g_stfa_m.stfamoddt,g_stfa_m.stfacnfid, 
       g_stfa_m.stfacnfid_desc,g_stfa_m.stfacnfdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT stfbseq,stfb002,stfb018,stfb019,stfb003,stfb004,stfb005,stfb006,stfb007, 
       stfb020,stfb008,stfb009,stfb010,stfb011,stfb012,stfb013,stfb014,stfb026,stfb015,stfb016,stfb017, 
       stfb021,stfb022,stfb023,stfb024,stfb025,stfbsite,stfbunit FROM stfb_t WHERE stfbent=? AND stfb001=?  
       AND stfbseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm401_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql name="input.define_sql2"
   
   #end add-point    
   LET g_forupd_sql = "SELECT stfkunit,stfksite,stfkseq,stfk002,stfk020,stfk021,stfk003,stfk004,stfk018, 
       stfk019,stfk005,stfk006,stfk007,stfk008,stfk009,stfk010,stfk011,stfk012,stfk013,stfk014,stfkacti, 
       stfk015,stfk016,stfk017,stfk022,stfk023,stfk024,stfk025,stfk026 FROM stfk_t WHERE stfkent=? AND  
       stfk001=? AND stfkseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql2"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm401_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql3"
   
   #end add-point    
   LET g_forupd_sql = "SELECT stflunit,stflsite,stflacti,stflseq,stfl002,stfl003,stfl004,stfl005,stfl006, 
       stfl007,stfl008,stfl009 FROM stfl_t WHERE stflent=? AND stfl001=? AND stflseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql3"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm401_bcl3 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql4"
   
   #end add-point    
   LET g_forupd_sql = "SELECT stfwunit,stfwsite,stfwseq,stfw002,stfw003,stfw004,stfw005,stfw006,stfw007, 
       stfw008,stfwacti FROM stfw_t WHERE stfwent=? AND stfw001=? AND stfwseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql4"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm401_bcl4 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql5"
   
   #end add-point    
   LET g_forupd_sql = "SELECT stfcseq,stfcacti,stfc024,stfc002,stfc003,stfc025,stfc004,stfc005,stfc006, 
       stfc007,stfc008,stfc009,stfc026,stfc027,stfc010,stfc011,stfc012,stfc013,stfc014,stfc015,stfc016, 
       stfc017,stfc018,stfc019,stfc020,stfc021,stfc022,stfc023,stfcsite,stfcunit FROM stfc_t WHERE stfcent=?  
       AND stfc001=? AND stfcseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql5"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm401_bcl5 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql6"
   
   #end add-point    
   LET g_forupd_sql = "SELECT stfe002,stfeseq,stfe003,stfe004,stfe005,stfe006,stfe012,stfe007,stfe008, 
       stfe009,stfe010,stfe011,stfesite,stfeunit FROM stfe_t WHERE stfeent=? AND stfe001=? AND stfeseq=?  
       AND stfe002=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql6"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm401_bcl6 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql7"
   
   #end add-point    
   LET g_forupd_sql = "SELECT stfgseq,stfg003,stfg002,stfg004,stfg005,stfgacti,stfgsite,stfgunit FROM  
       stfg_t WHERE stfgent=? AND stfg001=? AND stfgseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql7"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm401_bcl7 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql8"
   
   #end add-point    
   LET g_forupd_sql = "SELECT stfhseq,stfh002,stfh003,stfhacti,stfhsite,stfhunit FROM stfh_t WHERE stfhent=?  
       AND stfh001=? AND stfhseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql8"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm401_bcl8 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql9"
   
   #end add-point    
   LET g_forupd_sql = "SELECT stfiseq,stfi002,stfi003,stfi005,stfi006,stfi004,stfi007,stfi010,stfi008, 
       stfi009,stfiacti,stfi011,stfi012,stfisite,stfiunit FROM stfi_t WHERE stfient=? AND stfi001=?  
       AND stfiseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql9"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm401_bcl9 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql10"
   
   #end add-point    
   LET g_forupd_sql = "SELECT stfjseq,stfj002,stfj003,stfj004,stfj005,stfj006,stfjsite,stfjunit FROM  
       stfj_t WHERE stfjent=? AND stfj001=? AND stfjseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql10"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm401_bcl10 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql name="input.define_sql11"
   
   #end add-point    
   LET g_forupd_sql = "SELECT stffseq,stff002,stff003,stff004,stff005,stff006,stff007,stff010,stff008, 
       stff011,stff009,stffsite,stffunit FROM stff_t WHERE stffent=? AND stff001=? AND stffseq=? AND  
       stff002=? AND stff003=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql11"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm401_bcl11 CURSOR FROM g_forupd_sql
 
 
   
   #add-point:input段define_sql name="input.define_sql12"
   
   #end add-point 
   LET g_forupd_sql = "SELECT stfdseq1,stfd002,stfd003,stfd004,stfd005,stfd006,stfd007,stfd008,stfd009, 
       stfdsite,stfdunit FROM stfd_t WHERE stfdent=? AND stfd001=? AND stfdseq=? AND stfdseq1=? FOR  
       UPDATE"
   #add-point:input段define_sql name="input.after_define_sql12"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE astm401_bcl12 CURSOR FROM g_forupd_sql
 
 
 
   #add-point:input段define_sql name="input.other_sql"
   
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL astm401_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL astm401_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_stfa_m.stfaunit,g_stfa_m.stfasite,g_stfa_m.stfa001,g_stfa_m.stfa002,g_stfa_m.stfa003, 
       g_stfa_m.stfa004,g_stfa_m.stfa009,g_stfa_m.stfastus,g_stfa_m.stfa010,g_stfa_m.stfa005,g_stfa_m.stfal003, 
       g_stfa_m.stfal004,g_stfa_m.stfa007,g_stfa_m.stfa008,g_stfa_m.stfa047,g_stfa_m.stfa048,g_stfa_m.stfa044, 
       g_stfa_m.stfa051,g_stfa_m.stfa011,g_stfa_m.stfa012,g_stfa_m.stfa033,g_stfa_m.stfa034,g_stfa_m.stfa036, 
       g_stfa_m.stfa037,g_stfa_m.stfa038,g_stfa_m.stfa029,g_stfa_m.stfa030,g_stfa_m.stfa032,g_stfa_m.stfa035, 
       g_stfa_m.stfa050,g_stfa_m.stfa028,g_stfa_m.stfa057,g_stfa_m.stfa058,g_stfa_m.stfa039,g_stfa_m.stfa040, 
       g_stfa_m.stfa052,g_stfa_m.next_b,g_stfa_m.stfa013,g_stfa_m.stfa014,g_stfa_m.stfa015,g_stfa_m.stfa016, 
       g_stfa_m.stfa006,g_stfa_m.stfa053,g_stfa_m.stfa055,g_stfa_m.stfa017,g_stfa_m.stfa021,g_stfa_m.stfa024, 
       g_stfa_m.stfa018,g_stfa_m.stfa022,g_stfa_m.stfa025,g_stfa_m.stfa019,g_stfa_m.stfa023,g_stfa_m.stfa026, 
       g_stfa_m.stfa020,g_stfa_m.stfa049,g_stfa_m.stfa056,g_stfa_m.stfa054,g_stfa_m.stfa027,g_stfa_m.stfa031, 
       g_stfa_m.stfa043
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="astm401.input.head" >}
      #單頭段
      INPUT BY NAME g_stfa_m.stfaunit,g_stfa_m.stfasite,g_stfa_m.stfa001,g_stfa_m.stfa002,g_stfa_m.stfa003, 
          g_stfa_m.stfa004,g_stfa_m.stfa009,g_stfa_m.stfastus,g_stfa_m.stfa010,g_stfa_m.stfa005,g_stfa_m.stfal003, 
          g_stfa_m.stfal004,g_stfa_m.stfa007,g_stfa_m.stfa008,g_stfa_m.stfa047,g_stfa_m.stfa048,g_stfa_m.stfa044, 
          g_stfa_m.stfa051,g_stfa_m.stfa011,g_stfa_m.stfa012,g_stfa_m.stfa033,g_stfa_m.stfa034,g_stfa_m.stfa036, 
          g_stfa_m.stfa037,g_stfa_m.stfa038,g_stfa_m.stfa029,g_stfa_m.stfa030,g_stfa_m.stfa032,g_stfa_m.stfa035, 
          g_stfa_m.stfa050,g_stfa_m.stfa028,g_stfa_m.stfa057,g_stfa_m.stfa058,g_stfa_m.stfa039,g_stfa_m.stfa040, 
          g_stfa_m.stfa052,g_stfa_m.next_b,g_stfa_m.stfa013,g_stfa_m.stfa014,g_stfa_m.stfa015,g_stfa_m.stfa016, 
          g_stfa_m.stfa006,g_stfa_m.stfa053,g_stfa_m.stfa055,g_stfa_m.stfa017,g_stfa_m.stfa021,g_stfa_m.stfa024, 
          g_stfa_m.stfa018,g_stfa_m.stfa022,g_stfa_m.stfa025,g_stfa_m.stfa019,g_stfa_m.stfa023,g_stfa_m.stfa026, 
          g_stfa_m.stfa020,g_stfa_m.stfa049,g_stfa_m.stfa056,g_stfa_m.stfa054,g_stfa_m.stfa027,g_stfa_m.stfa031, 
          g_stfa_m.stfa043 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item name="input.master_input.update_item"
               
               #END add-point
            END IF
 
 
 
 
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN astm401_cl USING g_enterprise,g_stfa_m.stfa001
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm401_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astm401_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            LET g_master_multi_table_t.stfal001 = g_stfa_m.stfa001
LET g_master_multi_table_t.stfal003 = g_stfa_m.stfal003
LET g_master_multi_table_t.stfal004 = g_stfa_m.stfal004
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.stfal001 = ''
LET g_master_multi_table_t.stfal003 = ''
LET g_master_multi_table_t.stfal004 = ''
 
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL astm401_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            
            #end add-point
            CALL astm401_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfaunit
            
            #add-point:AFTER FIELD stfaunit name="input.a.stfaunit"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfaunit
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfaunit_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfaunit_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfaunit
            #add-point:BEFORE FIELD stfaunit name="input.b.stfaunit"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfaunit
            #add-point:ON CHANGE stfaunit name="input.g.stfaunit"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfasite
            
            #add-point:AFTER FIELD stfasite name="input.a.stfasite"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfasite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfasite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfasite_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfasite
            #add-point:BEFORE FIELD stfasite name="input.b.stfasite"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfasite
            #add-point:ON CHANGE stfasite name="input.g.stfasite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa001
            #add-point:BEFORE FIELD stfa001 name="input.b.stfa001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa001
            
            #add-point:AFTER FIELD stfa001 name="input.a.stfa001"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_stfa_m.stfa001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_stfa_m.stfa001 != g_stfa001_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stfa_t WHERE "||"stfaent = '" ||g_enterprise|| "' AND "||"stfa001 = '"||g_stfa_m.stfa001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa001
            #add-point:ON CHANGE stfa001 name="input.g.stfa001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa002
            #add-point:BEFORE FIELD stfa002 name="input.b.stfa002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa002
            
            #add-point:AFTER FIELD stfa002 name="input.a.stfa002"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa002
            #add-point:ON CHANGE stfa002 name="input.g.stfa002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa003
            #add-point:BEFORE FIELD stfa003 name="input.b.stfa003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa003
            
            #add-point:AFTER FIELD stfa003 name="input.a.stfa003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa003
            #add-point:ON CHANGE stfa003 name="input.g.stfa003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa004
            #add-point:BEFORE FIELD stfa004 name="input.b.stfa004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa004
            
            #add-point:AFTER FIELD stfa004 name="input.a.stfa004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa004
            #add-point:ON CHANGE stfa004 name="input.g.stfa004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa009
            #add-point:BEFORE FIELD stfa009 name="input.b.stfa009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa009
            
            #add-point:AFTER FIELD stfa009 name="input.a.stfa009"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa009
            #add-point:ON CHANGE stfa009 name="input.g.stfa009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfastus
            #add-point:BEFORE FIELD stfastus name="input.b.stfastus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfastus
            
            #add-point:AFTER FIELD stfastus name="input.a.stfastus"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfastus
            #add-point:ON CHANGE stfastus name="input.g.stfastus"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa010
            
            #add-point:AFTER FIELD stfa010 name="input.a.stfa010"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfa010
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa010_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa010_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa010
            #add-point:BEFORE FIELD stfa010 name="input.b.stfa010"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa010
            #add-point:ON CHANGE stfa010 name="input.g.stfa010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa005
            #add-point:BEFORE FIELD stfa005 name="input.b.stfa005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa005
            
            #add-point:AFTER FIELD stfa005 name="input.a.stfa005"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa005
            #add-point:ON CHANGE stfa005 name="input.g.stfa005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfal003
            #add-point:BEFORE FIELD stfal003 name="input.b.stfal003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfal003
            
            #add-point:AFTER FIELD stfal003 name="input.a.stfal003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfal003
            #add-point:ON CHANGE stfal003 name="input.g.stfal003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfal004
            #add-point:BEFORE FIELD stfal004 name="input.b.stfal004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfal004
            
            #add-point:AFTER FIELD stfal004 name="input.a.stfal004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfal004
            #add-point:ON CHANGE stfal004 name="input.g.stfal004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa007
            #add-point:BEFORE FIELD stfa007 name="input.b.stfa007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa007
            
            #add-point:AFTER FIELD stfa007 name="input.a.stfa007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa007
            #add-point:ON CHANGE stfa007 name="input.g.stfa007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa008
            #add-point:BEFORE FIELD stfa008 name="input.b.stfa008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa008
            
            #add-point:AFTER FIELD stfa008 name="input.a.stfa008"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa008
            #add-point:ON CHANGE stfa008 name="input.g.stfa008"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa047
            
            #add-point:AFTER FIELD stfa047 name="input.a.stfa047"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfa047
            CALL ap_ref_array2(g_ref_fields,"SELECT mhaal003 FROM mhaal_t WHERE mhaalent='"||g_enterprise||"' AND mhaal001=? AND mhaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa047_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa047_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa047
            #add-point:BEFORE FIELD stfa047 name="input.b.stfa047"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa047
            #add-point:ON CHANGE stfa047 name="input.g.stfa047"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa048
            
            #add-point:AFTER FIELD stfa048 name="input.a.stfa048"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfa047
            LET g_ref_fields[2] = g_stfa_m.stfa048
            CALL ap_ref_array2(g_ref_fields,"SELECT mhabl004 FROM mhabl_t WHERE mhablent='"||g_enterprise||"' AND mhabl001=? AND mhabl002=? AND mhabl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa048_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa048_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa048
            #add-point:BEFORE FIELD stfa048 name="input.b.stfa048"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa048
            #add-point:ON CHANGE stfa048 name="input.g.stfa048"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa044
            
            #add-point:AFTER FIELD stfa044 name="input.a.stfa044"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfa044
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa044_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa044_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa044
            #add-point:BEFORE FIELD stfa044 name="input.b.stfa044"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa044
            #add-point:ON CHANGE stfa044 name="input.g.stfa044"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa051
            
            #add-point:AFTER FIELD stfa051 name="input.a.stfa051"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfa051
            CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa051_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa051_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa051
            #add-point:BEFORE FIELD stfa051 name="input.b.stfa051"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa051
            #add-point:ON CHANGE stfa051 name="input.g.stfa051"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa011
            
            #add-point:AFTER FIELD stfa011 name="input.a.stfa011"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfa011
            CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa011_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa011_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa011
            #add-point:BEFORE FIELD stfa011 name="input.b.stfa011"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa011
            #add-point:ON CHANGE stfa011 name="input.g.stfa011"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa012
            
            #add-point:AFTER FIELD stfa012 name="input.a.stfa012"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfa012
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2002' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa012_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa012_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa012
            #add-point:BEFORE FIELD stfa012 name="input.b.stfa012"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa012
            #add-point:ON CHANGE stfa012 name="input.g.stfa012"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa033
            
            #add-point:AFTER FIELD stfa033 name="input.a.stfa033"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfa033
            CALL ap_ref_array2(g_ref_fields,"SELECT oodbl004 FROM oodbl_t WHERE oodblent='"||g_enterprise||"' AND oodbl002=? AND oodbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa033_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa033_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa033
            #add-point:BEFORE FIELD stfa033 name="input.b.stfa033"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa033
            #add-point:ON CHANGE stfa033 name="input.g.stfa033"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa034
            
            #add-point:AFTER FIELD stfa034 name="input.a.stfa034"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfa034
            CALL ap_ref_array2(g_ref_fields,"SELECT oodbl004 FROM oodbl_t WHERE oodblent='"||g_enterprise||"' AND oodbl002=? AND oodbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa034_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa034_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa034
            #add-point:BEFORE FIELD stfa034 name="input.b.stfa034"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa034
            #add-point:ON CHANGE stfa034 name="input.g.stfa034"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa036
            
            #add-point:AFTER FIELD stfa036 name="input.a.stfa036"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfa036
            CALL ap_ref_array2(g_ref_fields,"SELECT staal003 FROM staal_t WHERE staalent='"||g_enterprise||"' AND staal001=? AND staal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa036_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa036_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa036
            #add-point:BEFORE FIELD stfa036 name="input.b.stfa036"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa036
            #add-point:ON CHANGE stfa036 name="input.g.stfa036"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa037
            
            #add-point:AFTER FIELD stfa037 name="input.a.stfa037"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfa037
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2060' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa037_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa037_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa037
            #add-point:BEFORE FIELD stfa037 name="input.b.stfa037"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa037
            #add-point:ON CHANGE stfa037 name="input.g.stfa037"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa038
            
            #add-point:AFTER FIELD stfa038 name="input.a.stfa038"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfa038
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa038_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa038_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa038
            #add-point:BEFORE FIELD stfa038 name="input.b.stfa038"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa038
            #add-point:ON CHANGE stfa038 name="input.g.stfa038"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa029
            #add-point:BEFORE FIELD stfa029 name="input.b.stfa029"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa029
            
            #add-point:AFTER FIELD stfa029 name="input.a.stfa029"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa029
            #add-point:ON CHANGE stfa029 name="input.g.stfa029"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa030
            #add-point:BEFORE FIELD stfa030 name="input.b.stfa030"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa030
            
            #add-point:AFTER FIELD stfa030 name="input.a.stfa030"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa030
            #add-point:ON CHANGE stfa030 name="input.g.stfa030"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa032
            
            #add-point:AFTER FIELD stfa032 name="input.a.stfa032"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfa032
            CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa032_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa032_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa032
            #add-point:BEFORE FIELD stfa032 name="input.b.stfa032"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa032
            #add-point:ON CHANGE stfa032 name="input.g.stfa032"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa035
            
            #add-point:AFTER FIELD stfa035 name="input.a.stfa035"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfa035
            CALL ap_ref_array2(g_ref_fields,"SELECT ooibl004 FROM ooibl_t WHERE ooiblent='"||g_enterprise||"' AND ooibl002=? AND ooibl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa035_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa035_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa035
            #add-point:BEFORE FIELD stfa035 name="input.b.stfa035"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa035
            #add-point:ON CHANGE stfa035 name="input.g.stfa035"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa050
            #add-point:BEFORE FIELD stfa050 name="input.b.stfa050"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa050
            
            #add-point:AFTER FIELD stfa050 name="input.a.stfa050"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa050
            #add-point:ON CHANGE stfa050 name="input.g.stfa050"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa028
            #add-point:BEFORE FIELD stfa028 name="input.b.stfa028"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa028
            
            #add-point:AFTER FIELD stfa028 name="input.a.stfa028"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa028
            #add-point:ON CHANGE stfa028 name="input.g.stfa028"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa057
            #add-point:BEFORE FIELD stfa057 name="input.b.stfa057"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa057
            
            #add-point:AFTER FIELD stfa057 name="input.a.stfa057"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa057
            #add-point:ON CHANGE stfa057 name="input.g.stfa057"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa058
            #add-point:BEFORE FIELD stfa058 name="input.b.stfa058"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa058
            
            #add-point:AFTER FIELD stfa058 name="input.a.stfa058"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa058
            #add-point:ON CHANGE stfa058 name="input.g.stfa058"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa039
            #add-point:BEFORE FIELD stfa039 name="input.b.stfa039"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa039
            
            #add-point:AFTER FIELD stfa039 name="input.a.stfa039"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa039
            #add-point:ON CHANGE stfa039 name="input.g.stfa039"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa040
            #add-point:BEFORE FIELD stfa040 name="input.b.stfa040"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa040
            
            #add-point:AFTER FIELD stfa040 name="input.a.stfa040"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa040
            #add-point:ON CHANGE stfa040 name="input.g.stfa040"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa052
            #add-point:BEFORE FIELD stfa052 name="input.b.stfa052"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa052
            
            #add-point:AFTER FIELD stfa052 name="input.a.stfa052"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa052
            #add-point:ON CHANGE stfa052 name="input.g.stfa052"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD next_b
            #add-point:BEFORE FIELD next_b name="input.b.next_b"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD next_b
            
            #add-point:AFTER FIELD next_b name="input.a.next_b"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE next_b
            #add-point:ON CHANGE next_b name="input.g.next_b"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa013
            
            #add-point:AFTER FIELD stfa013 name="input.a.stfa013"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfa013
            CALL ap_ref_array2(g_ref_fields,"SELECT stagl003 FROM stagl_t WHERE staglent='"||g_enterprise||"' AND stagl001=? AND stagl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa013_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa013_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa013
            #add-point:BEFORE FIELD stfa013 name="input.b.stfa013"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa013
            #add-point:ON CHANGE stfa013 name="input.g.stfa013"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa014
            
            #add-point:AFTER FIELD stfa014 name="input.a.stfa014"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfa014
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa014_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa014_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa014
            #add-point:BEFORE FIELD stfa014 name="input.b.stfa014"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa014
            #add-point:ON CHANGE stfa014 name="input.g.stfa014"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa015
            
            #add-point:AFTER FIELD stfa015 name="input.a.stfa015"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfa_m.stfa015
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa015_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa015_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa015
            #add-point:BEFORE FIELD stfa015 name="input.b.stfa015"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa015
            #add-point:ON CHANGE stfa015 name="input.g.stfa015"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa016
            #add-point:BEFORE FIELD stfa016 name="input.b.stfa016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa016
            
            #add-point:AFTER FIELD stfa016 name="input.a.stfa016"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa016
            #add-point:ON CHANGE stfa016 name="input.g.stfa016"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa006
            
            #add-point:AFTER FIELD stfa006 name="input.a.stfa006"
            INITIALIZE g_ref_fields TO NULL
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2126'stfa006 AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfa_m.stfa006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfa_m.stfa006_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa006
            #add-point:BEFORE FIELD stfa006 name="input.b.stfa006"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa006
            #add-point:ON CHANGE stfa006 name="input.g.stfa006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa053
            #add-point:BEFORE FIELD stfa053 name="input.b.stfa053"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa053
            
            #add-point:AFTER FIELD stfa053 name="input.a.stfa053"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa053
            #add-point:ON CHANGE stfa053 name="input.g.stfa053"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa055
            #add-point:BEFORE FIELD stfa055 name="input.b.stfa055"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa055
            
            #add-point:AFTER FIELD stfa055 name="input.a.stfa055"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa055
            #add-point:ON CHANGE stfa055 name="input.g.stfa055"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa017
            #add-point:BEFORE FIELD stfa017 name="input.b.stfa017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa017
            
            #add-point:AFTER FIELD stfa017 name="input.a.stfa017"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa017
            #add-point:ON CHANGE stfa017 name="input.g.stfa017"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa021
            #add-point:BEFORE FIELD stfa021 name="input.b.stfa021"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa021
            
            #add-point:AFTER FIELD stfa021 name="input.a.stfa021"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa021
            #add-point:ON CHANGE stfa021 name="input.g.stfa021"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa024
            #add-point:BEFORE FIELD stfa024 name="input.b.stfa024"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa024
            
            #add-point:AFTER FIELD stfa024 name="input.a.stfa024"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa024
            #add-point:ON CHANGE stfa024 name="input.g.stfa024"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa018
            #add-point:BEFORE FIELD stfa018 name="input.b.stfa018"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa018
            
            #add-point:AFTER FIELD stfa018 name="input.a.stfa018"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa018
            #add-point:ON CHANGE stfa018 name="input.g.stfa018"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa022
            #add-point:BEFORE FIELD stfa022 name="input.b.stfa022"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa022
            
            #add-point:AFTER FIELD stfa022 name="input.a.stfa022"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa022
            #add-point:ON CHANGE stfa022 name="input.g.stfa022"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa025
            #add-point:BEFORE FIELD stfa025 name="input.b.stfa025"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa025
            
            #add-point:AFTER FIELD stfa025 name="input.a.stfa025"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa025
            #add-point:ON CHANGE stfa025 name="input.g.stfa025"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa019
            #add-point:BEFORE FIELD stfa019 name="input.b.stfa019"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa019
            
            #add-point:AFTER FIELD stfa019 name="input.a.stfa019"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa019
            #add-point:ON CHANGE stfa019 name="input.g.stfa019"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa023
            #add-point:BEFORE FIELD stfa023 name="input.b.stfa023"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa023
            
            #add-point:AFTER FIELD stfa023 name="input.a.stfa023"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa023
            #add-point:ON CHANGE stfa023 name="input.g.stfa023"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa026
            #add-point:BEFORE FIELD stfa026 name="input.b.stfa026"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa026
            
            #add-point:AFTER FIELD stfa026 name="input.a.stfa026"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa026
            #add-point:ON CHANGE stfa026 name="input.g.stfa026"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa020
            #add-point:BEFORE FIELD stfa020 name="input.b.stfa020"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa020
            
            #add-point:AFTER FIELD stfa020 name="input.a.stfa020"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa020
            #add-point:ON CHANGE stfa020 name="input.g.stfa020"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa049
            #add-point:BEFORE FIELD stfa049 name="input.b.stfa049"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa049
            
            #add-point:AFTER FIELD stfa049 name="input.a.stfa049"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa049
            #add-point:ON CHANGE stfa049 name="input.g.stfa049"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa056
            #add-point:BEFORE FIELD stfa056 name="input.b.stfa056"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa056
            
            #add-point:AFTER FIELD stfa056 name="input.a.stfa056"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa056
            #add-point:ON CHANGE stfa056 name="input.g.stfa056"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa054
            #add-point:BEFORE FIELD stfa054 name="input.b.stfa054"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa054
            
            #add-point:AFTER FIELD stfa054 name="input.a.stfa054"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa054
            #add-point:ON CHANGE stfa054 name="input.g.stfa054"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa027
            #add-point:BEFORE FIELD stfa027 name="input.b.stfa027"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa027
            
            #add-point:AFTER FIELD stfa027 name="input.a.stfa027"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa027
            #add-point:ON CHANGE stfa027 name="input.g.stfa027"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa031
            #add-point:BEFORE FIELD stfa031 name="input.b.stfa031"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa031
            
            #add-point:AFTER FIELD stfa031 name="input.a.stfa031"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa031
            #add-point:ON CHANGE stfa031 name="input.g.stfa031"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa043
            #add-point:BEFORE FIELD stfa043 name="input.b.stfa043"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa043
            
            #add-point:AFTER FIELD stfa043 name="input.a.stfa043"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfa043
            #add-point:ON CHANGE stfa043 name="input.g.stfa043"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.stfaunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfaunit
            #add-point:ON ACTION controlp INFIELD stfaunit name="input.c.stfaunit"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfasite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfasite
            #add-point:ON ACTION controlp INFIELD stfasite name="input.c.stfasite"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa001
            #add-point:ON ACTION controlp INFIELD stfa001 name="input.c.stfa001"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa002
            #add-point:ON ACTION controlp INFIELD stfa002 name="input.c.stfa002"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa003
            #add-point:ON ACTION controlp INFIELD stfa003 name="input.c.stfa003"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa004
            #add-point:ON ACTION controlp INFIELD stfa004 name="input.c.stfa004"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa009
            #add-point:ON ACTION controlp INFIELD stfa009 name="input.c.stfa009"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfastus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfastus
            #add-point:ON ACTION controlp INFIELD stfastus name="input.c.stfastus"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa010
            #add-point:ON ACTION controlp INFIELD stfa010 name="input.c.stfa010"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa005
            #add-point:ON ACTION controlp INFIELD stfa005 name="input.c.stfa005"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfal003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfal003
            #add-point:ON ACTION controlp INFIELD stfal003 name="input.c.stfal003"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfal004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfal004
            #add-point:ON ACTION controlp INFIELD stfal004 name="input.c.stfal004"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa007
            #add-point:ON ACTION controlp INFIELD stfa007 name="input.c.stfa007"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa008
            #add-point:ON ACTION controlp INFIELD stfa008 name="input.c.stfa008"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa047
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa047
            #add-point:ON ACTION controlp INFIELD stfa047 name="input.c.stfa047"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa048
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa048
            #add-point:ON ACTION controlp INFIELD stfa048 name="input.c.stfa048"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa044
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa044
            #add-point:ON ACTION controlp INFIELD stfa044 name="input.c.stfa044"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa051
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa051
            #add-point:ON ACTION controlp INFIELD stfa051 name="input.c.stfa051"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa011
            #add-point:ON ACTION controlp INFIELD stfa011 name="input.c.stfa011"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa012
            #add-point:ON ACTION controlp INFIELD stfa012 name="input.c.stfa012"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa033
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa033
            #add-point:ON ACTION controlp INFIELD stfa033 name="input.c.stfa033"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa034
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa034
            #add-point:ON ACTION controlp INFIELD stfa034 name="input.c.stfa034"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa036
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa036
            #add-point:ON ACTION controlp INFIELD stfa036 name="input.c.stfa036"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa037
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa037
            #add-point:ON ACTION controlp INFIELD stfa037 name="input.c.stfa037"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa038
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa038
            #add-point:ON ACTION controlp INFIELD stfa038 name="input.c.stfa038"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa029
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa029
            #add-point:ON ACTION controlp INFIELD stfa029 name="input.c.stfa029"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa030
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa030
            #add-point:ON ACTION controlp INFIELD stfa030 name="input.c.stfa030"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa032
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa032
            #add-point:ON ACTION controlp INFIELD stfa032 name="input.c.stfa032"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa035
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa035
            #add-point:ON ACTION controlp INFIELD stfa035 name="input.c.stfa035"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa050
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa050
            #add-point:ON ACTION controlp INFIELD stfa050 name="input.c.stfa050"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa028
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa028
            #add-point:ON ACTION controlp INFIELD stfa028 name="input.c.stfa028"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa057
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa057
            #add-point:ON ACTION controlp INFIELD stfa057 name="input.c.stfa057"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa058
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa058
            #add-point:ON ACTION controlp INFIELD stfa058 name="input.c.stfa058"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa039
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa039
            #add-point:ON ACTION controlp INFIELD stfa039 name="input.c.stfa039"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa040
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa040
            #add-point:ON ACTION controlp INFIELD stfa040 name="input.c.stfa040"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa052
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa052
            #add-point:ON ACTION controlp INFIELD stfa052 name="input.c.stfa052"
            
            #END add-point
 
 
         #Ctrlp:input.c.next_b
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD next_b
            #add-point:ON ACTION controlp INFIELD next_b name="input.c.next_b"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa013
            #add-point:ON ACTION controlp INFIELD stfa013 name="input.c.stfa013"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa014
            #add-point:ON ACTION controlp INFIELD stfa014 name="input.c.stfa014"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa015
            #add-point:ON ACTION controlp INFIELD stfa015 name="input.c.stfa015"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa016
            #add-point:ON ACTION controlp INFIELD stfa016 name="input.c.stfa016"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa006
            #add-point:ON ACTION controlp INFIELD stfa006 name="input.c.stfa006"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa053
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa053
            #add-point:ON ACTION controlp INFIELD stfa053 name="input.c.stfa053"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa055
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa055
            #add-point:ON ACTION controlp INFIELD stfa055 name="input.c.stfa055"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa017
            #add-point:ON ACTION controlp INFIELD stfa017 name="input.c.stfa017"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa021
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa021
            #add-point:ON ACTION controlp INFIELD stfa021 name="input.c.stfa021"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa024
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa024
            #add-point:ON ACTION controlp INFIELD stfa024 name="input.c.stfa024"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa018
            #add-point:ON ACTION controlp INFIELD stfa018 name="input.c.stfa018"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa022
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa022
            #add-point:ON ACTION controlp INFIELD stfa022 name="input.c.stfa022"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa025
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa025
            #add-point:ON ACTION controlp INFIELD stfa025 name="input.c.stfa025"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa019
            #add-point:ON ACTION controlp INFIELD stfa019 name="input.c.stfa019"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa023
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa023
            #add-point:ON ACTION controlp INFIELD stfa023 name="input.c.stfa023"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa026
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa026
            #add-point:ON ACTION controlp INFIELD stfa026 name="input.c.stfa026"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa020
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa020
            #add-point:ON ACTION controlp INFIELD stfa020 name="input.c.stfa020"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa049
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa049
            #add-point:ON ACTION controlp INFIELD stfa049 name="input.c.stfa049"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa056
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa056
            #add-point:ON ACTION controlp INFIELD stfa056 name="input.c.stfa056"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa054
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa054
            #add-point:ON ACTION controlp INFIELD stfa054 name="input.c.stfa054"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa027
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa027
            #add-point:ON ACTION controlp INFIELD stfa027 name="input.c.stfa027"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa031
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa031
            #add-point:ON ACTION controlp INFIELD stfa031 name="input.c.stfa031"
            
            #END add-point
 
 
         #Ctrlp:input.c.stfa043
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa043
            #add-point:ON ACTION controlp INFIELD stfa043 name="input.c.stfa043"
            
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_stfa_m.stfa001
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               
               #end add-point
               
               INSERT INTO stfa_t (stfaent,stfaunit,stfasite,stfa001,stfa002,stfa003,stfa004,stfa009, 
                   stfastus,stfa010,stfa005,stfa007,stfa008,stfa047,stfa048,stfa044,stfa051,stfa011, 
                   stfa012,stfa033,stfa034,stfa036,stfa037,stfa038,stfa045,stfa046,stfa029,stfa030,stfa032, 
                   stfa035,stfa050,stfa028,stfa057,stfa058,stfa039,stfa040,stfa052,stfa013,stfa014,stfa015, 
                   stfa016,stfa006,stfa053,stfa055,stfa017,stfa021,stfa024,stfa018,stfa022,stfa025,stfa019, 
                   stfa023,stfa026,stfa020,stfa049,stfa056,stfa054,stfa027,stfa031,stfa043,stfaownid, 
                   stfaowndp,stfacrtid,stfacrtdp,stfacrtdt,stfamodid,stfamoddt,stfacnfid,stfacnfdt)
               VALUES (g_enterprise,g_stfa_m.stfaunit,g_stfa_m.stfasite,g_stfa_m.stfa001,g_stfa_m.stfa002, 
                   g_stfa_m.stfa003,g_stfa_m.stfa004,g_stfa_m.stfa009,g_stfa_m.stfastus,g_stfa_m.stfa010, 
                   g_stfa_m.stfa005,g_stfa_m.stfa007,g_stfa_m.stfa008,g_stfa_m.stfa047,g_stfa_m.stfa048, 
                   g_stfa_m.stfa044,g_stfa_m.stfa051,g_stfa_m.stfa011,g_stfa_m.stfa012,g_stfa_m.stfa033, 
                   g_stfa_m.stfa034,g_stfa_m.stfa036,g_stfa_m.stfa037,g_stfa_m.stfa038,g_stfa_m.stfa045, 
                   g_stfa_m.stfa046,g_stfa_m.stfa029,g_stfa_m.stfa030,g_stfa_m.stfa032,g_stfa_m.stfa035, 
                   g_stfa_m.stfa050,g_stfa_m.stfa028,g_stfa_m.stfa057,g_stfa_m.stfa058,g_stfa_m.stfa039, 
                   g_stfa_m.stfa040,g_stfa_m.stfa052,g_stfa_m.stfa013,g_stfa_m.stfa014,g_stfa_m.stfa015, 
                   g_stfa_m.stfa016,g_stfa_m.stfa006,g_stfa_m.stfa053,g_stfa_m.stfa055,g_stfa_m.stfa017, 
                   g_stfa_m.stfa021,g_stfa_m.stfa024,g_stfa_m.stfa018,g_stfa_m.stfa022,g_stfa_m.stfa025, 
                   g_stfa_m.stfa019,g_stfa_m.stfa023,g_stfa_m.stfa026,g_stfa_m.stfa020,g_stfa_m.stfa049, 
                   g_stfa_m.stfa056,g_stfa_m.stfa054,g_stfa_m.stfa027,g_stfa_m.stfa031,g_stfa_m.stfa043, 
                   g_stfa_m.stfaownid,g_stfa_m.stfaowndp,g_stfa_m.stfacrtid,g_stfa_m.stfacrtdp,g_stfa_m.stfacrtdt, 
                   g_stfa_m.stfamodid,g_stfa_m.stfamoddt,g_stfa_m.stfacnfid,g_stfa_m.stfacnfdt) 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_stfa_m:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_stfa_m.stfa001 = g_master_multi_table_t.stfal001 AND
         g_stfa_m.stfal003 = g_master_multi_table_t.stfal003 AND 
         g_stfa_m.stfal004 = g_master_multi_table_t.stfal004  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'stfalent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_stfa_m.stfa001
            LET l_field_keys[02] = 'stfal001'
            LET l_var_keys_bak[02] = g_master_multi_table_t.stfal001
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'stfal002'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_stfa_m.stfal003
            LET l_fields[01] = 'stfal003'
            LET l_vars[02] = g_stfa_m.stfal004
            LET l_fields[02] = 'stfal004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'stfal_t')
         END IF 
 
               
               #add-point:單頭新增後 name="input.head.a_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL astm401_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL astm401_b_fill()
                  CALL astm401_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
               
               #將遮罩欄位還原
               CALL astm401_stfa_t_mask_restore('restore_mask_o')
               
               UPDATE stfa_t SET (stfaunit,stfasite,stfa001,stfa002,stfa003,stfa004,stfa009,stfastus, 
                   stfa010,stfa005,stfa007,stfa008,stfa047,stfa048,stfa044,stfa051,stfa011,stfa012,stfa033, 
                   stfa034,stfa036,stfa037,stfa038,stfa045,stfa046,stfa029,stfa030,stfa032,stfa035,stfa050, 
                   stfa028,stfa057,stfa058,stfa039,stfa040,stfa052,stfa013,stfa014,stfa015,stfa016,stfa006, 
                   stfa053,stfa055,stfa017,stfa021,stfa024,stfa018,stfa022,stfa025,stfa019,stfa023,stfa026, 
                   stfa020,stfa049,stfa056,stfa054,stfa027,stfa031,stfa043,stfaownid,stfaowndp,stfacrtid, 
                   stfacrtdp,stfacrtdt,stfamodid,stfamoddt,stfacnfid,stfacnfdt) = (g_stfa_m.stfaunit, 
                   g_stfa_m.stfasite,g_stfa_m.stfa001,g_stfa_m.stfa002,g_stfa_m.stfa003,g_stfa_m.stfa004, 
                   g_stfa_m.stfa009,g_stfa_m.stfastus,g_stfa_m.stfa010,g_stfa_m.stfa005,g_stfa_m.stfa007, 
                   g_stfa_m.stfa008,g_stfa_m.stfa047,g_stfa_m.stfa048,g_stfa_m.stfa044,g_stfa_m.stfa051, 
                   g_stfa_m.stfa011,g_stfa_m.stfa012,g_stfa_m.stfa033,g_stfa_m.stfa034,g_stfa_m.stfa036, 
                   g_stfa_m.stfa037,g_stfa_m.stfa038,g_stfa_m.stfa045,g_stfa_m.stfa046,g_stfa_m.stfa029, 
                   g_stfa_m.stfa030,g_stfa_m.stfa032,g_stfa_m.stfa035,g_stfa_m.stfa050,g_stfa_m.stfa028, 
                   g_stfa_m.stfa057,g_stfa_m.stfa058,g_stfa_m.stfa039,g_stfa_m.stfa040,g_stfa_m.stfa052, 
                   g_stfa_m.stfa013,g_stfa_m.stfa014,g_stfa_m.stfa015,g_stfa_m.stfa016,g_stfa_m.stfa006, 
                   g_stfa_m.stfa053,g_stfa_m.stfa055,g_stfa_m.stfa017,g_stfa_m.stfa021,g_stfa_m.stfa024, 
                   g_stfa_m.stfa018,g_stfa_m.stfa022,g_stfa_m.stfa025,g_stfa_m.stfa019,g_stfa_m.stfa023, 
                   g_stfa_m.stfa026,g_stfa_m.stfa020,g_stfa_m.stfa049,g_stfa_m.stfa056,g_stfa_m.stfa054, 
                   g_stfa_m.stfa027,g_stfa_m.stfa031,g_stfa_m.stfa043,g_stfa_m.stfaownid,g_stfa_m.stfaowndp, 
                   g_stfa_m.stfacrtid,g_stfa_m.stfacrtdp,g_stfa_m.stfacrtdt,g_stfa_m.stfamodid,g_stfa_m.stfamoddt, 
                   g_stfa_m.stfacnfid,g_stfa_m.stfacnfdt)
                WHERE stfaent = g_enterprise AND stfa001 = g_stfa001_t
 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "stfa_t:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_stfa_m.stfa001 = g_master_multi_table_t.stfal001 AND
         g_stfa_m.stfal003 = g_master_multi_table_t.stfal003 AND 
         g_stfa_m.stfal004 = g_master_multi_table_t.stfal004  THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'stfalent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_stfa_m.stfa001
            LET l_field_keys[02] = 'stfal001'
            LET l_var_keys_bak[02] = g_master_multi_table_t.stfal001
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'stfal002'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_stfa_m.stfal003
            LET l_fields[01] = 'stfal003'
            LET l_vars[02] = g_stfa_m.stfal004
            LET l_fields[02] = 'stfal004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'stfal_t')
         END IF 
 
               
               #將遮罩欄位進行遮蔽
               CALL astm401_stfa_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_stfa_m_t)
               LET g_log2 = util.JSON.stringify(g_stfa_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_stfa001_t = g_stfa_m.stfa001
 
            
      END INPUT
   
 
{</section>}
 
{<section id="astm401.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_stfb_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stfb_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astm401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_stfb_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astm401_cl USING g_enterprise,g_stfa_m.stfa001
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm401_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astm401_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_stfb_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stfb_d[l_ac].stfbseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_stfb_d_t.* = g_stfb_d[l_ac].*  #BACKUP
               LET g_stfb_d_o.* = g_stfb_d[l_ac].*  #BACKUP
               CALL astm401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               
               #end add-point  
               CALL astm401_set_no_entry_b(l_cmd)
               IF NOT astm401_lock_b("stfb_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astm401_bcl INTO g_stfb_d[l_ac].stfbseq,g_stfb_d[l_ac].stfb002,g_stfb_d[l_ac].stfb018, 
                      g_stfb_d[l_ac].stfb019,g_stfb_d[l_ac].stfb003,g_stfb_d[l_ac].stfb004,g_stfb_d[l_ac].stfb005, 
                      g_stfb_d[l_ac].stfb006,g_stfb_d[l_ac].stfb007,g_stfb_d[l_ac].stfb020,g_stfb_d[l_ac].stfb008, 
                      g_stfb_d[l_ac].stfb009,g_stfb_d[l_ac].stfb010,g_stfb_d[l_ac].stfb011,g_stfb_d[l_ac].stfb012, 
                      g_stfb_d[l_ac].stfb013,g_stfb_d[l_ac].stfb014,g_stfb_d[l_ac].stfb026,g_stfb_d[l_ac].stfb015, 
                      g_stfb_d[l_ac].stfb016,g_stfb_d[l_ac].stfb017,g_stfb_d[l_ac].stfb021,g_stfb_d[l_ac].stfb022, 
                      g_stfb_d[l_ac].stfb023,g_stfb_d[l_ac].stfb024,g_stfb_d[l_ac].stfb025,g_stfb_d[l_ac].stfbsite, 
                      g_stfb_d[l_ac].stfbunit
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_stfb_d_t.stfbseq,":",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stfb_d_mask_o[l_ac].* =  g_stfb_d[l_ac].*
                  CALL astm401_stfb_t_mask()
                  LET g_stfb_d_mask_n[l_ac].* =  g_stfb_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astm401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stfb_d[l_ac].* TO NULL 
            INITIALIZE g_stfb_d_t.* TO NULL 
            INITIALIZE g_stfb_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_stfb_d[l_ac].stfb007 = "Y"
      LET g_stfb_d[l_ac].stfb010 = "0"
 
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            
            #end add-point
            LET g_stfb_d_t.* = g_stfb_d[l_ac].*     #新輸入資料
            LET g_stfb_d_o.* = g_stfb_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astm401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            
            #end add-point
            CALL astm401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stfb_d[li_reproduce_target].* = g_stfb_d[li_reproduce].*
 
               LET g_stfb_d[li_reproduce_target].stfbseq = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
            
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stfb_t 
             WHERE stfbent = g_enterprise AND stfb001 = g_stfa_m.stfa001
 
               AND stfbseq = g_stfb_d[l_ac].stfbseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys[2] = g_stfb_d[g_detail_idx].stfbseq
               CALL astm401_insert_b('stfb_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               INITIALIZE g_stfb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfb_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astm401_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stfa_m.stfa001
 
               LET gs_keys[gs_keys.getLength()+1] = g_stfb_d_t.stfbseq
 
            
               #刪除同層單身
               IF NOT astm401_delete_b('stfb_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astm401_key_delete_b(gs_keys,'stfb_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
               
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE astm401_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               
               #end add-point
               LET l_count = g_stfb_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stfb_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfbseq
            #add-point:BEFORE FIELD stfbseq name="input.b.page1.stfbseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfbseq
            
            #add-point:AFTER FIELD stfbseq name="input.a.page1.stfbseq"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stfa_m.stfa001 IS NOT NULL AND g_stfb_d[g_detail_idx].stfbseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stfa_m.stfa001 != g_stfa001_t OR g_stfb_d[g_detail_idx].stfbseq != g_stfb_d_t.stfbseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stfb_t WHERE "||"stfbent = '" ||g_enterprise|| "' AND "||"stfb001 = '"||g_stfa_m.stfa001 ||"' AND "|| "stfbseq = '"||g_stfb_d[g_detail_idx].stfbseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfbseq
            #add-point:ON CHANGE stfbseq name="input.g.page1.stfbseq"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb002
            
            #add-point:AFTER FIELD stfb002 name="input.a.page1.stfb002"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfb_d[l_ac].stfb002
            CALL ap_ref_array2(g_ref_fields,"SELECT stael003 FROM stael_t WHERE staelent='"||g_enterprise||"' AND stael001=? AND stael002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfb_d[l_ac].stfb002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfb_d[l_ac].stfb002_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb002
            #add-point:BEFORE FIELD stfb002 name="input.b.page1.stfb002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfb002
            #add-point:ON CHANGE stfb002 name="input.g.page1.stfb002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb018
            #add-point:BEFORE FIELD stfb018 name="input.b.page1.stfb018"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb018
            
            #add-point:AFTER FIELD stfb018 name="input.a.page1.stfb018"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfb018
            #add-point:ON CHANGE stfb018 name="input.g.page1.stfb018"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb019
            #add-point:BEFORE FIELD stfb019 name="input.b.page1.stfb019"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb019
            
            #add-point:AFTER FIELD stfb019 name="input.a.page1.stfb019"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfb019
            #add-point:ON CHANGE stfb019 name="input.g.page1.stfb019"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb003
            #add-point:BEFORE FIELD stfb003 name="input.b.page1.stfb003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb003
            
            #add-point:AFTER FIELD stfb003 name="input.a.page1.stfb003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfb003
            #add-point:ON CHANGE stfb003 name="input.g.page1.stfb003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb004
            #add-point:BEFORE FIELD stfb004 name="input.b.page1.stfb004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb004
            
            #add-point:AFTER FIELD stfb004 name="input.a.page1.stfb004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfb004
            #add-point:ON CHANGE stfb004 name="input.g.page1.stfb004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb005
            #add-point:BEFORE FIELD stfb005 name="input.b.page1.stfb005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb005
            
            #add-point:AFTER FIELD stfb005 name="input.a.page1.stfb005"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfb005
            #add-point:ON CHANGE stfb005 name="input.g.page1.stfb005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb006
            #add-point:BEFORE FIELD stfb006 name="input.b.page1.stfb006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb006
            
            #add-point:AFTER FIELD stfb006 name="input.a.page1.stfb006"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfb006
            #add-point:ON CHANGE stfb006 name="input.g.page1.stfb006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb007
            #add-point:BEFORE FIELD stfb007 name="input.b.page1.stfb007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb007
            
            #add-point:AFTER FIELD stfb007 name="input.a.page1.stfb007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfb007
            #add-point:ON CHANGE stfb007 name="input.g.page1.stfb007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb020
            #add-point:BEFORE FIELD stfb020 name="input.b.page1.stfb020"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb020
            
            #add-point:AFTER FIELD stfb020 name="input.a.page1.stfb020"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfb020
            #add-point:ON CHANGE stfb020 name="input.g.page1.stfb020"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb008
            
            #add-point:AFTER FIELD stfb008 name="input.a.page1.stfb008"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfb_d[l_ac].stfb008
            CALL ap_ref_array2(g_ref_fields,"SELECT stabl003 FROM stabl_t WHERE stablent='"||g_enterprise||"' AND stabl001=? AND stabl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfb_d[l_ac].stfb008_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfb_d[l_ac].stfb008_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb008
            #add-point:BEFORE FIELD stfb008 name="input.b.page1.stfb008"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfb008
            #add-point:ON CHANGE stfb008 name="input.g.page1.stfb008"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb009
            
            #add-point:AFTER FIELD stfb009 name="input.a.page1.stfb009"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfb_d[l_ac].stfb009
            CALL ap_ref_array2(g_ref_fields,"SELECT stabl003 FROM stabl_t WHERE stablent='"||g_enterprise||"' AND stabl001=? AND stabl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfb_d[l_ac].stfb009_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfb_d[l_ac].stfb009_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb009
            #add-point:BEFORE FIELD stfb009 name="input.b.page1.stfb009"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfb009
            #add-point:ON CHANGE stfb009 name="input.g.page1.stfb009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb010
            #add-point:BEFORE FIELD stfb010 name="input.b.page1.stfb010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb010
            
            #add-point:AFTER FIELD stfb010 name="input.a.page1.stfb010"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfb010
            #add-point:ON CHANGE stfb010 name="input.g.page1.stfb010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb011
            #add-point:BEFORE FIELD stfb011 name="input.b.page1.stfb011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb011
            
            #add-point:AFTER FIELD stfb011 name="input.a.page1.stfb011"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfb011
            #add-point:ON CHANGE stfb011 name="input.g.page1.stfb011"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb012
            #add-point:BEFORE FIELD stfb012 name="input.b.page1.stfb012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb012
            
            #add-point:AFTER FIELD stfb012 name="input.a.page1.stfb012"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfb012
            #add-point:ON CHANGE stfb012 name="input.g.page1.stfb012"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb013
            #add-point:BEFORE FIELD stfb013 name="input.b.page1.stfb013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb013
            
            #add-point:AFTER FIELD stfb013 name="input.a.page1.stfb013"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfb013
            #add-point:ON CHANGE stfb013 name="input.g.page1.stfb013"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb014
            #add-point:BEFORE FIELD stfb014 name="input.b.page1.stfb014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb014
            
            #add-point:AFTER FIELD stfb014 name="input.a.page1.stfb014"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfb014
            #add-point:ON CHANGE stfb014 name="input.g.page1.stfb014"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb026
            #add-point:BEFORE FIELD stfb026 name="input.b.page1.stfb026"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb026
            
            #add-point:AFTER FIELD stfb026 name="input.a.page1.stfb026"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfb026
            #add-point:ON CHANGE stfb026 name="input.g.page1.stfb026"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb015
            #add-point:BEFORE FIELD stfb015 name="input.b.page1.stfb015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb015
            
            #add-point:AFTER FIELD stfb015 name="input.a.page1.stfb015"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfb015
            #add-point:ON CHANGE stfb015 name="input.g.page1.stfb015"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb016
            #add-point:BEFORE FIELD stfb016 name="input.b.page1.stfb016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb016
            
            #add-point:AFTER FIELD stfb016 name="input.a.page1.stfb016"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfb016
            #add-point:ON CHANGE stfb016 name="input.g.page1.stfb016"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb017
            #add-point:BEFORE FIELD stfb017 name="input.b.page1.stfb017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb017
            
            #add-point:AFTER FIELD stfb017 name="input.a.page1.stfb017"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfb017
            #add-point:ON CHANGE stfb017 name="input.g.page1.stfb017"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb021
            #add-point:BEFORE FIELD stfb021 name="input.b.page1.stfb021"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb021
            
            #add-point:AFTER FIELD stfb021 name="input.a.page1.stfb021"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfb021
            #add-point:ON CHANGE stfb021 name="input.g.page1.stfb021"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb022
            #add-point:BEFORE FIELD stfb022 name="input.b.page1.stfb022"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb022
            
            #add-point:AFTER FIELD stfb022 name="input.a.page1.stfb022"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfb022
            #add-point:ON CHANGE stfb022 name="input.g.page1.stfb022"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb023
            #add-point:BEFORE FIELD stfb023 name="input.b.page1.stfb023"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb023
            
            #add-point:AFTER FIELD stfb023 name="input.a.page1.stfb023"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfb023
            #add-point:ON CHANGE stfb023 name="input.g.page1.stfb023"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb024
            #add-point:BEFORE FIELD stfb024 name="input.b.page1.stfb024"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb024
            
            #add-point:AFTER FIELD stfb024 name="input.a.page1.stfb024"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfb024
            #add-point:ON CHANGE stfb024 name="input.g.page1.stfb024"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfb025
            #add-point:BEFORE FIELD stfb025 name="input.b.page1.stfb025"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfb025
            
            #add-point:AFTER FIELD stfb025 name="input.a.page1.stfb025"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfb025
            #add-point:ON CHANGE stfb025 name="input.g.page1.stfb025"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfbsite
            #add-point:BEFORE FIELD stfbsite name="input.b.page1.stfbsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfbsite
            
            #add-point:AFTER FIELD stfbsite name="input.a.page1.stfbsite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfbsite
            #add-point:ON CHANGE stfbsite name="input.g.page1.stfbsite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfbunit
            #add-point:BEFORE FIELD stfbunit name="input.b.page1.stfbunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfbunit
            
            #add-point:AFTER FIELD stfbunit name="input.a.page1.stfbunit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfbunit
            #add-point:ON CHANGE stfbunit name="input.g.page1.stfbunit"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.stfbseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfbseq
            #add-point:ON ACTION controlp INFIELD stfbseq name="input.c.page1.stfbseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stfb002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb002
            #add-point:ON ACTION controlp INFIELD stfb002 name="input.c.page1.stfb002"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stfb018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb018
            #add-point:ON ACTION controlp INFIELD stfb018 name="input.c.page1.stfb018"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stfb019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb019
            #add-point:ON ACTION controlp INFIELD stfb019 name="input.c.page1.stfb019"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stfb003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb003
            #add-point:ON ACTION controlp INFIELD stfb003 name="input.c.page1.stfb003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stfb004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb004
            #add-point:ON ACTION controlp INFIELD stfb004 name="input.c.page1.stfb004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stfb005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb005
            #add-point:ON ACTION controlp INFIELD stfb005 name="input.c.page1.stfb005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stfb006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb006
            #add-point:ON ACTION controlp INFIELD stfb006 name="input.c.page1.stfb006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stfb007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb007
            #add-point:ON ACTION controlp INFIELD stfb007 name="input.c.page1.stfb007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stfb020
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb020
            #add-point:ON ACTION controlp INFIELD stfb020 name="input.c.page1.stfb020"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stfb008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb008
            #add-point:ON ACTION controlp INFIELD stfb008 name="input.c.page1.stfb008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stfb009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb009
            #add-point:ON ACTION controlp INFIELD stfb009 name="input.c.page1.stfb009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stfb010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb010
            #add-point:ON ACTION controlp INFIELD stfb010 name="input.c.page1.stfb010"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stfb011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb011
            #add-point:ON ACTION controlp INFIELD stfb011 name="input.c.page1.stfb011"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stfb012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb012
            #add-point:ON ACTION controlp INFIELD stfb012 name="input.c.page1.stfb012"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stfb013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb013
            #add-point:ON ACTION controlp INFIELD stfb013 name="input.c.page1.stfb013"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stfb014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb014
            #add-point:ON ACTION controlp INFIELD stfb014 name="input.c.page1.stfb014"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stfb026
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb026
            #add-point:ON ACTION controlp INFIELD stfb026 name="input.c.page1.stfb026"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stfb015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb015
            #add-point:ON ACTION controlp INFIELD stfb015 name="input.c.page1.stfb015"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stfb016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb016
            #add-point:ON ACTION controlp INFIELD stfb016 name="input.c.page1.stfb016"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stfb017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb017
            #add-point:ON ACTION controlp INFIELD stfb017 name="input.c.page1.stfb017"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stfb021
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb021
            #add-point:ON ACTION controlp INFIELD stfb021 name="input.c.page1.stfb021"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stfb022
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb022
            #add-point:ON ACTION controlp INFIELD stfb022 name="input.c.page1.stfb022"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stfb023
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb023
            #add-point:ON ACTION controlp INFIELD stfb023 name="input.c.page1.stfb023"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stfb024
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb024
            #add-point:ON ACTION controlp INFIELD stfb024 name="input.c.page1.stfb024"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stfb025
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfb025
            #add-point:ON ACTION controlp INFIELD stfb025 name="input.c.page1.stfb025"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stfbsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfbsite
            #add-point:ON ACTION controlp INFIELD stfbsite name="input.c.page1.stfbsite"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.stfbunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfbunit
            #add-point:ON ACTION controlp INFIELD stfbunit name="input.c.page1.stfbunit"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_stfb_d[l_ac].* = g_stfb_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm401_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_stfb_d[l_ac].stfbseq 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_stfb_d[l_ac].* = g_stfb_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL astm401_stfb_t_mask_restore('restore_mask_o')
      
               UPDATE stfb_t SET (stfb001,stfbseq,stfb002,stfb018,stfb019,stfb003,stfb004,stfb005,stfb006, 
                   stfb007,stfb020,stfb008,stfb009,stfb010,stfb011,stfb012,stfb013,stfb014,stfb026,stfb015, 
                   stfb016,stfb017,stfb021,stfb022,stfb023,stfb024,stfb025,stfbsite,stfbunit) = (g_stfa_m.stfa001, 
                   g_stfb_d[l_ac].stfbseq,g_stfb_d[l_ac].stfb002,g_stfb_d[l_ac].stfb018,g_stfb_d[l_ac].stfb019, 
                   g_stfb_d[l_ac].stfb003,g_stfb_d[l_ac].stfb004,g_stfb_d[l_ac].stfb005,g_stfb_d[l_ac].stfb006, 
                   g_stfb_d[l_ac].stfb007,g_stfb_d[l_ac].stfb020,g_stfb_d[l_ac].stfb008,g_stfb_d[l_ac].stfb009, 
                   g_stfb_d[l_ac].stfb010,g_stfb_d[l_ac].stfb011,g_stfb_d[l_ac].stfb012,g_stfb_d[l_ac].stfb013, 
                   g_stfb_d[l_ac].stfb014,g_stfb_d[l_ac].stfb026,g_stfb_d[l_ac].stfb015,g_stfb_d[l_ac].stfb016, 
                   g_stfb_d[l_ac].stfb017,g_stfb_d[l_ac].stfb021,g_stfb_d[l_ac].stfb022,g_stfb_d[l_ac].stfb023, 
                   g_stfb_d[l_ac].stfb024,g_stfb_d[l_ac].stfb025,g_stfb_d[l_ac].stfbsite,g_stfb_d[l_ac].stfbunit) 
 
                WHERE stfbent = g_enterprise AND stfb001 = g_stfa_m.stfa001 
 
                  AND stfbseq = g_stfb_d_t.stfbseq #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_stfb_d[l_ac].* = g_stfb_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfb_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_stfb_d[l_ac].* = g_stfb_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfb_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys_bak[1] = g_stfa001_t
               LET gs_keys[2] = g_stfb_d[g_detail_idx].stfbseq
               LET gs_keys_bak[2] = g_stfb_d_t.stfbseq
               CALL astm401_update_b('stfb_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL astm401_stfb_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_stfb_d[g_detail_idx].stfbseq = g_stfb_d_t.stfbseq 
 
                  ) THEN
                  LET gs_keys[01] = g_stfa_m.stfa001
 
                  LET gs_keys[gs_keys.getLength()+1] = g_stfb_d_t.stfbseq
 
                  CALL astm401_key_update_b(gs_keys,'stfb_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb_d_t)
               LET g_log2 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            
            #end add-point
            CALL astm401_unlock_b("stfb_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_stfb_d[li_reproduce_target].* = g_stfb_d[li_reproduce].*
 
               LET g_stfb_d[li_reproduce_target].stfbseq = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_stfb_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_stfb_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_stfb10_d FROM s_detail10.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body10.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stfb10_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astm401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_stfb10_d.getLength()
            #add-point:資料輸入前 name="input.body10.before_input"
            
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stfb10_d[l_ac].* TO NULL 
            INITIALIZE g_stfb10_d_t.* TO NULL 
            INITIALIZE g_stfb10_d_o.* TO NULL 
            #公用欄位給值(單身2)
            
            #自定義預設值(單身2)
                  LET g_stfb10_d[l_ac].stfk010 = "0"
 
            #add-point:modify段before備份 name="input.body10.insert.before_bak"
            
            #end add-point
            LET g_stfb10_d_t.* = g_stfb10_d[l_ac].*     #新輸入資料
            LET g_stfb10_d_o.* = g_stfb10_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astm401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body10.insert.after_set_entry_b"
            
            #end add-point
            CALL astm401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stfb10_d[li_reproduce_target].* = g_stfb10_d[li_reproduce].*
 
               LET g_stfb10_d[li_reproduce_target].stfkseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body10.before_insert"
            
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body10.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[2] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 2
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astm401_cl USING g_enterprise,g_stfa_m.stfa001
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm401_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astm401_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_stfb10_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stfb10_d[l_ac].stfkseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_stfb10_d_t.* = g_stfb10_d[l_ac].*  #BACKUP
               LET g_stfb10_d_o.* = g_stfb10_d[l_ac].*  #BACKUP
               CALL astm401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body10.after_set_entry_b"
               
               #end add-point  
               CALL astm401_set_no_entry_b(l_cmd)
               IF NOT astm401_lock_b("stfk_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astm401_bcl2 INTO g_stfb10_d[l_ac].stfkunit,g_stfb10_d[l_ac].stfksite,g_stfb10_d[l_ac].stfkseq, 
                      g_stfb10_d[l_ac].stfk002,g_stfb10_d[l_ac].stfk020,g_stfb10_d[l_ac].stfk021,g_stfb10_d[l_ac].stfk003, 
                      g_stfb10_d[l_ac].stfk004,g_stfb10_d[l_ac].stfk018,g_stfb10_d[l_ac].stfk019,g_stfb10_d[l_ac].stfk005, 
                      g_stfb10_d[l_ac].stfk006,g_stfb10_d[l_ac].stfk007,g_stfb10_d[l_ac].stfk008,g_stfb10_d[l_ac].stfk009, 
                      g_stfb10_d[l_ac].stfk010,g_stfb10_d[l_ac].stfk011,g_stfb10_d[l_ac].stfk012,g_stfb10_d[l_ac].stfk013, 
                      g_stfb10_d[l_ac].stfk014,g_stfb10_d[l_ac].stfkacti,g_stfb10_d[l_ac].stfk015,g_stfb10_d[l_ac].stfk016, 
                      g_stfb10_d[l_ac].stfk017,g_stfb10_d[l_ac].stfk022,g_stfb10_d[l_ac].stfk023,g_stfb10_d[l_ac].stfk024, 
                      g_stfb10_d[l_ac].stfk025,g_stfb10_d[l_ac].stfk026
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stfb10_d_mask_o[l_ac].* =  g_stfb10_d[l_ac].*
                  CALL astm401_stfk_t_mask()
                  LET g_stfb10_d_mask_n[l_ac].* =  g_stfb10_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astm401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body10.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body10.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body10.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前 name="input.body10.b_delete"
               
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stfa_m.stfa001
               LET gs_keys[gs_keys.getLength()+1] = g_stfb10_d_t.stfkseq
            
               #刪除同層單身
               IF NOT astm401_delete_b('stfk_t',gs_keys,"'2'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astm401_key_delete_b(gs_keys,'stfk_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身2刪除中 name="input.body10.m_delete"
               
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astm401_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身2刪除後 name="input.body10.a_delete"
               
               #end add-point
               LET l_count = g_stfb_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body10.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stfb10_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前 name="input.body10.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stfk_t 
             WHERE stfkent = g_enterprise AND stfk001 = g_stfa_m.stfa001
               AND stfkseq = g_stfb10_d[l_ac].stfkseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前 name="input.body10.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys[2] = g_stfb10_d[g_detail_idx].stfkseq
               CALL astm401_insert_b('stfk_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2 name="input.body10.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_stfb_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfk_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astm401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body10.after_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_stfb10_d[l_ac].* = g_stfb10_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm401_bcl2
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_stfb10_d[l_ac].* = g_stfb10_d_t.*
            ELSE
               #add-point:單身page2修改前 name="input.body10.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               #將遮罩欄位還原
               CALL astm401_stfk_t_mask_restore('restore_mask_o')
                              
               UPDATE stfk_t SET (stfk001,stfkunit,stfksite,stfkseq,stfk002,stfk020,stfk021,stfk003, 
                   stfk004,stfk018,stfk019,stfk005,stfk006,stfk007,stfk008,stfk009,stfk010,stfk011,stfk012, 
                   stfk013,stfk014,stfkacti,stfk015,stfk016,stfk017,stfk022,stfk023,stfk024,stfk025, 
                   stfk026) = (g_stfa_m.stfa001,g_stfb10_d[l_ac].stfkunit,g_stfb10_d[l_ac].stfksite, 
                   g_stfb10_d[l_ac].stfkseq,g_stfb10_d[l_ac].stfk002,g_stfb10_d[l_ac].stfk020,g_stfb10_d[l_ac].stfk021, 
                   g_stfb10_d[l_ac].stfk003,g_stfb10_d[l_ac].stfk004,g_stfb10_d[l_ac].stfk018,g_stfb10_d[l_ac].stfk019, 
                   g_stfb10_d[l_ac].stfk005,g_stfb10_d[l_ac].stfk006,g_stfb10_d[l_ac].stfk007,g_stfb10_d[l_ac].stfk008, 
                   g_stfb10_d[l_ac].stfk009,g_stfb10_d[l_ac].stfk010,g_stfb10_d[l_ac].stfk011,g_stfb10_d[l_ac].stfk012, 
                   g_stfb10_d[l_ac].stfk013,g_stfb10_d[l_ac].stfk014,g_stfb10_d[l_ac].stfkacti,g_stfb10_d[l_ac].stfk015, 
                   g_stfb10_d[l_ac].stfk016,g_stfb10_d[l_ac].stfk017,g_stfb10_d[l_ac].stfk022,g_stfb10_d[l_ac].stfk023, 
                   g_stfb10_d[l_ac].stfk024,g_stfb10_d[l_ac].stfk025,g_stfb10_d[l_ac].stfk026) #自訂欄位頁簽 
 
                WHERE stfkent = g_enterprise AND stfk001 = g_stfa_m.stfa001
                  AND stfkseq = g_stfb10_d_t.stfkseq #項次 
                  
               #add-point:單身page2修改中 name="input.body10.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_stfb10_d[l_ac].* = g_stfb10_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfk_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_stfb10_d[l_ac].* = g_stfb10_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfk_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys_bak[1] = g_stfa001_t
               LET gs_keys[2] = g_stfb10_d[g_detail_idx].stfkseq
               LET gs_keys_bak[2] = g_stfb10_d_t.stfkseq
               CALL astm401_update_b('stfk_t',gs_keys,gs_keys_bak,"'2'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astm401_stfk_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_stfb10_d[g_detail_idx].stfkseq = g_stfb10_d_t.stfkseq 
                  ) THEN
                  LET gs_keys[01] = g_stfa_m.stfa001
                  LET gs_keys[gs_keys.getLength()+1] = g_stfb10_d_t.stfkseq
                  CALL astm401_key_update_b(gs_keys,'stfk_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb10_d_t)
               LET g_log2 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb10_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後 name="input.body10.a_update"
               
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfkunit
            #add-point:BEFORE FIELD stfkunit name="input.b.page10.stfkunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfkunit
            
            #add-point:AFTER FIELD stfkunit name="input.a.page10.stfkunit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfkunit
            #add-point:ON CHANGE stfkunit name="input.g.page10.stfkunit"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfksite
            #add-point:BEFORE FIELD stfksite name="input.b.page10.stfksite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfksite
            
            #add-point:AFTER FIELD stfksite name="input.a.page10.stfksite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfksite
            #add-point:ON CHANGE stfksite name="input.g.page10.stfksite"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk002
            
            #add-point:AFTER FIELD stfk002 name="input.a.page10.stfk002"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfb10_d[l_ac].stfk002
            CALL ap_ref_array2(g_ref_fields,"SELECT stael003 FROM stael_t WHERE staelent='"||g_enterprise||"' AND stael001=? AND stael002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfb10_d[l_ac].stfk002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfb10_d[l_ac].stfk002_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk002
            #add-point:BEFORE FIELD stfk002 name="input.b.page10.stfk002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfk002
            #add-point:ON CHANGE stfk002 name="input.g.page10.stfk002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk020
            #add-point:BEFORE FIELD stfk020 name="input.b.page10.stfk020"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk020
            
            #add-point:AFTER FIELD stfk020 name="input.a.page10.stfk020"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfk020
            #add-point:ON CHANGE stfk020 name="input.g.page10.stfk020"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk021
            #add-point:BEFORE FIELD stfk021 name="input.b.page10.stfk021"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk021
            
            #add-point:AFTER FIELD stfk021 name="input.a.page10.stfk021"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfk021
            #add-point:ON CHANGE stfk021 name="input.g.page10.stfk021"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk003
            #add-point:BEFORE FIELD stfk003 name="input.b.page10.stfk003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk003
            
            #add-point:AFTER FIELD stfk003 name="input.a.page10.stfk003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfk003
            #add-point:ON CHANGE stfk003 name="input.g.page10.stfk003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk004
            #add-point:BEFORE FIELD stfk004 name="input.b.page10.stfk004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk004
            
            #add-point:AFTER FIELD stfk004 name="input.a.page10.stfk004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfk004
            #add-point:ON CHANGE stfk004 name="input.g.page10.stfk004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk018
            #add-point:BEFORE FIELD stfk018 name="input.b.page10.stfk018"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk018
            
            #add-point:AFTER FIELD stfk018 name="input.a.page10.stfk018"



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfk018
            #add-point:ON CHANGE stfk018 name="input.g.page10.stfk018"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk019
            
            #add-point:AFTER FIELD stfk019 name="input.a.page10.stfk019"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfb10_d[l_ac].stfk019
            CALL ap_ref_array2(g_ref_fields,"SELECT ooial003 FROM ooial_t WHERE ooialent='"||g_enterprise||"' AND ooial001=? AND ooial002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfb10_d[l_ac].stfk019_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfb10_d[l_ac].stfk019_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk019
            #add-point:BEFORE FIELD stfk019 name="input.b.page10.stfk019"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfk019
            #add-point:ON CHANGE stfk019 name="input.g.page10.stfk019"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk005
            #add-point:BEFORE FIELD stfk005 name="input.b.page10.stfk005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk005
            
            #add-point:AFTER FIELD stfk005 name="input.a.page10.stfk005"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfk005
            #add-point:ON CHANGE stfk005 name="input.g.page10.stfk005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk006
            #add-point:BEFORE FIELD stfk006 name="input.b.page10.stfk006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk006
            
            #add-point:AFTER FIELD stfk006 name="input.a.page10.stfk006"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfk006
            #add-point:ON CHANGE stfk006 name="input.g.page10.stfk006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk007
            #add-point:BEFORE FIELD stfk007 name="input.b.page10.stfk007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk007
            
            #add-point:AFTER FIELD stfk007 name="input.a.page10.stfk007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfk007
            #add-point:ON CHANGE stfk007 name="input.g.page10.stfk007"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk008
            
            #add-point:AFTER FIELD stfk008 name="input.a.page10.stfk008"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfb10_d[l_ac].stfk008
            CALL ap_ref_array2(g_ref_fields,"SELECT stabl003 FROM stabl_t WHERE stablent='"||g_enterprise||"' AND stabl001=? AND stabl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfb10_d[l_ac].stfk008_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfb10_d[l_ac].stfk008_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk008
            #add-point:BEFORE FIELD stfk008 name="input.b.page10.stfk008"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfk008
            #add-point:ON CHANGE stfk008 name="input.g.page10.stfk008"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk009
            
            #add-point:AFTER FIELD stfk009 name="input.a.page10.stfk009"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfb10_d[l_ac].stfk009
            CALL ap_ref_array2(g_ref_fields,"SELECT stabl003 FROM stabl_t WHERE stablent='"||g_enterprise||"' AND stabl001=? AND stabl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfb10_d[l_ac].stfk009_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfb10_d[l_ac].stfk009_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk009
            #add-point:BEFORE FIELD stfk009 name="input.b.page10.stfk009"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfk009
            #add-point:ON CHANGE stfk009 name="input.g.page10.stfk009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk010
            #add-point:BEFORE FIELD stfk010 name="input.b.page10.stfk010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk010
            
            #add-point:AFTER FIELD stfk010 name="input.a.page10.stfk010"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfk010
            #add-point:ON CHANGE stfk010 name="input.g.page10.stfk010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk011
            #add-point:BEFORE FIELD stfk011 name="input.b.page10.stfk011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk011
            
            #add-point:AFTER FIELD stfk011 name="input.a.page10.stfk011"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfk011
            #add-point:ON CHANGE stfk011 name="input.g.page10.stfk011"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk012
            #add-point:BEFORE FIELD stfk012 name="input.b.page10.stfk012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk012
            
            #add-point:AFTER FIELD stfk012 name="input.a.page10.stfk012"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfk012
            #add-point:ON CHANGE stfk012 name="input.g.page10.stfk012"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk013
            #add-point:BEFORE FIELD stfk013 name="input.b.page10.stfk013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk013
            
            #add-point:AFTER FIELD stfk013 name="input.a.page10.stfk013"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfk013
            #add-point:ON CHANGE stfk013 name="input.g.page10.stfk013"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk014
            #add-point:BEFORE FIELD stfk014 name="input.b.page10.stfk014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk014
            
            #add-point:AFTER FIELD stfk014 name="input.a.page10.stfk014"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfk014
            #add-point:ON CHANGE stfk014 name="input.g.page10.stfk014"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfkacti
            #add-point:BEFORE FIELD stfkacti name="input.b.page10.stfkacti"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfkacti
            
            #add-point:AFTER FIELD stfkacti name="input.a.page10.stfkacti"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfkacti
            #add-point:ON CHANGE stfkacti name="input.g.page10.stfkacti"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk015
            #add-point:BEFORE FIELD stfk015 name="input.b.page10.stfk015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk015
            
            #add-point:AFTER FIELD stfk015 name="input.a.page10.stfk015"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfk015
            #add-point:ON CHANGE stfk015 name="input.g.page10.stfk015"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk016
            #add-point:BEFORE FIELD stfk016 name="input.b.page10.stfk016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk016
            
            #add-point:AFTER FIELD stfk016 name="input.a.page10.stfk016"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfk016
            #add-point:ON CHANGE stfk016 name="input.g.page10.stfk016"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk017
            #add-point:BEFORE FIELD stfk017 name="input.b.page10.stfk017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk017
            
            #add-point:AFTER FIELD stfk017 name="input.a.page10.stfk017"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfk017
            #add-point:ON CHANGE stfk017 name="input.g.page10.stfk017"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk022
            #add-point:BEFORE FIELD stfk022 name="input.b.page10.stfk022"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk022
            
            #add-point:AFTER FIELD stfk022 name="input.a.page10.stfk022"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfk022
            #add-point:ON CHANGE stfk022 name="input.g.page10.stfk022"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk023
            #add-point:BEFORE FIELD stfk023 name="input.b.page10.stfk023"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk023
            
            #add-point:AFTER FIELD stfk023 name="input.a.page10.stfk023"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfk023
            #add-point:ON CHANGE stfk023 name="input.g.page10.stfk023"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk024
            #add-point:BEFORE FIELD stfk024 name="input.b.page10.stfk024"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk024
            
            #add-point:AFTER FIELD stfk024 name="input.a.page10.stfk024"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfk024
            #add-point:ON CHANGE stfk024 name="input.g.page10.stfk024"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk025
            #add-point:BEFORE FIELD stfk025 name="input.b.page10.stfk025"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk025
            
            #add-point:AFTER FIELD stfk025 name="input.a.page10.stfk025"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfk025
            #add-point:ON CHANGE stfk025 name="input.g.page10.stfk025"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfk026
            #add-point:BEFORE FIELD stfk026 name="input.b.page10.stfk026"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfk026
            
            #add-point:AFTER FIELD stfk026 name="input.a.page10.stfk026"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfk026
            #add-point:ON CHANGE stfk026 name="input.g.page10.stfk026"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page10.stfkunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfkunit
            #add-point:ON ACTION controlp INFIELD stfkunit name="input.c.page10.stfkunit"
            
            #END add-point
 
 
         #Ctrlp:input.c.page10.stfksite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfksite
            #add-point:ON ACTION controlp INFIELD stfksite name="input.c.page10.stfksite"
            
            #END add-point
 
 
         #Ctrlp:input.c.page10.stfk002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk002
            #add-point:ON ACTION controlp INFIELD stfk002 name="input.c.page10.stfk002"
            
            #END add-point
 
 
         #Ctrlp:input.c.page10.stfk020
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk020
            #add-point:ON ACTION controlp INFIELD stfk020 name="input.c.page10.stfk020"
            
            #END add-point
 
 
         #Ctrlp:input.c.page10.stfk021
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk021
            #add-point:ON ACTION controlp INFIELD stfk021 name="input.c.page10.stfk021"
            
            #END add-point
 
 
         #Ctrlp:input.c.page10.stfk003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk003
            #add-point:ON ACTION controlp INFIELD stfk003 name="input.c.page10.stfk003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page10.stfk004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk004
            #add-point:ON ACTION controlp INFIELD stfk004 name="input.c.page10.stfk004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page10.stfk018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk018
            #add-point:ON ACTION controlp INFIELD stfk018 name="input.c.page10.stfk018"
            
            #END add-point
 
 
         #Ctrlp:input.c.page10.stfk019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk019
            #add-point:ON ACTION controlp INFIELD stfk019 name="input.c.page10.stfk019"
            
            #END add-point
 
 
         #Ctrlp:input.c.page10.stfk005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk005
            #add-point:ON ACTION controlp INFIELD stfk005 name="input.c.page10.stfk005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page10.stfk006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk006
            #add-point:ON ACTION controlp INFIELD stfk006 name="input.c.page10.stfk006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page10.stfk007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk007
            #add-point:ON ACTION controlp INFIELD stfk007 name="input.c.page10.stfk007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page10.stfk008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk008
            #add-point:ON ACTION controlp INFIELD stfk008 name="input.c.page10.stfk008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page10.stfk009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk009
            #add-point:ON ACTION controlp INFIELD stfk009 name="input.c.page10.stfk009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page10.stfk010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk010
            #add-point:ON ACTION controlp INFIELD stfk010 name="input.c.page10.stfk010"
            
            #END add-point
 
 
         #Ctrlp:input.c.page10.stfk011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk011
            #add-point:ON ACTION controlp INFIELD stfk011 name="input.c.page10.stfk011"
            
            #END add-point
 
 
         #Ctrlp:input.c.page10.stfk012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk012
            #add-point:ON ACTION controlp INFIELD stfk012 name="input.c.page10.stfk012"
            
            #END add-point
 
 
         #Ctrlp:input.c.page10.stfk013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk013
            #add-point:ON ACTION controlp INFIELD stfk013 name="input.c.page10.stfk013"
            
            #END add-point
 
 
         #Ctrlp:input.c.page10.stfk014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk014
            #add-point:ON ACTION controlp INFIELD stfk014 name="input.c.page10.stfk014"
            
            #END add-point
 
 
         #Ctrlp:input.c.page10.stfkacti
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfkacti
            #add-point:ON ACTION controlp INFIELD stfkacti name="input.c.page10.stfkacti"
            
            #END add-point
 
 
         #Ctrlp:input.c.page10.stfk015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk015
            #add-point:ON ACTION controlp INFIELD stfk015 name="input.c.page10.stfk015"
            
            #END add-point
 
 
         #Ctrlp:input.c.page10.stfk016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk016
            #add-point:ON ACTION controlp INFIELD stfk016 name="input.c.page10.stfk016"
            
            #END add-point
 
 
         #Ctrlp:input.c.page10.stfk017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk017
            #add-point:ON ACTION controlp INFIELD stfk017 name="input.c.page10.stfk017"
            
            #END add-point
 
 
         #Ctrlp:input.c.page10.stfk022
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk022
            #add-point:ON ACTION controlp INFIELD stfk022 name="input.c.page10.stfk022"
            
            #END add-point
 
 
         #Ctrlp:input.c.page10.stfk023
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk023
            #add-point:ON ACTION controlp INFIELD stfk023 name="input.c.page10.stfk023"
            
            #END add-point
 
 
         #Ctrlp:input.c.page10.stfk024
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk024
            #add-point:ON ACTION controlp INFIELD stfk024 name="input.c.page10.stfk024"
            
            #END add-point
 
 
         #Ctrlp:input.c.page10.stfk025
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk025
            #add-point:ON ACTION controlp INFIELD stfk025 name="input.c.page10.stfk025"
            
            #END add-point
 
 
         #Ctrlp:input.c.page10.stfk026
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfk026
            #add-point:ON ACTION controlp INFIELD stfk026 name="input.c.page10.stfk026"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row name="input.body10.after_row"
            
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_stfb10_d[l_ac].* = g_stfb10_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm401_bcl2
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astm401_unlock_b("stfk_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2 name="input.body10.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body10.after_input"
            
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_stfb10_d[li_reproduce_target].* = g_stfb10_d[li_reproduce].*
 
               LET g_stfb10_d[li_reproduce_target].stfkseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_stfb10_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_stfb10_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_stfb11_d FROM s_detail11.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_3)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body11.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stfb11_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astm401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'3',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_stfb11_d.getLength()
            #add-point:資料輸入前 name="input.body11.before_input"
            
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stfb11_d[l_ac].* TO NULL 
            INITIALIZE g_stfb11_d_t.* TO NULL 
            INITIALIZE g_stfb11_d_o.* TO NULL 
            #公用欄位給值(單身3)
            
            #自定義預設值(單身3)
                  LET g_stfb11_d[l_ac].stfl007 = "0"
      LET g_stfb11_d[l_ac].stfl009 = "0"
 
            #add-point:modify段before備份 name="input.body11.insert.before_bak"
            
            #end add-point
            LET g_stfb11_d_t.* = g_stfb11_d[l_ac].*     #新輸入資料
            LET g_stfb11_d_o.* = g_stfb11_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astm401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body11.insert.after_set_entry_b"
            
            #end add-point
            CALL astm401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stfb11_d[li_reproduce_target].* = g_stfb11_d[li_reproduce].*
 
               LET g_stfb11_d[li_reproduce_target].stflseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body11.before_insert"
            
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body11.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[3] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 3
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astm401_cl USING g_enterprise,g_stfa_m.stfa001
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm401_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astm401_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_stfb11_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stfb11_d[l_ac].stflseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_stfb11_d_t.* = g_stfb11_d[l_ac].*  #BACKUP
               LET g_stfb11_d_o.* = g_stfb11_d[l_ac].*  #BACKUP
               CALL astm401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body11.after_set_entry_b"
               
               #end add-point  
               CALL astm401_set_no_entry_b(l_cmd)
               IF NOT astm401_lock_b("stfl_t","'3'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astm401_bcl3 INTO g_stfb11_d[l_ac].stflunit,g_stfb11_d[l_ac].stflsite,g_stfb11_d[l_ac].stflacti, 
                      g_stfb11_d[l_ac].stflseq,g_stfb11_d[l_ac].stfl002,g_stfb11_d[l_ac].stfl003,g_stfb11_d[l_ac].stfl004, 
                      g_stfb11_d[l_ac].stfl005,g_stfb11_d[l_ac].stfl006,g_stfb11_d[l_ac].stfl007,g_stfb11_d[l_ac].stfl008, 
                      g_stfb11_d[l_ac].stfl009
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stfb11_d_mask_o[l_ac].* =  g_stfb11_d[l_ac].*
                  CALL astm401_stfl_t_mask()
                  LET g_stfb11_d_mask_n[l_ac].* =  g_stfb11_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astm401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body11.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body11.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body11.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前 name="input.body11.b_delete"
               
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stfa_m.stfa001
               LET gs_keys[gs_keys.getLength()+1] = g_stfb11_d_t.stflseq
            
               #刪除同層單身
               IF NOT astm401_delete_b('stfl_t',gs_keys,"'3'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astm401_key_delete_b(gs_keys,'stfl_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身3刪除中 name="input.body11.m_delete"
               
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astm401_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身3刪除後 name="input.body11.a_delete"
               
               #end add-point
               LET l_count = g_stfb_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body11.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stfb11_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身3新增前 name="input.body11.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stfl_t 
             WHERE stflent = g_enterprise AND stfl001 = g_stfa_m.stfa001
               AND stflseq = g_stfb11_d[l_ac].stflseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前 name="input.body11.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys[2] = g_stfb11_d[g_detail_idx].stflseq
               CALL astm401_insert_b('stfl_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3 name="input.body11.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_stfb_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfl_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astm401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body11.after_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_stfb11_d[l_ac].* = g_stfb11_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm401_bcl3
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_stfb11_d[l_ac].* = g_stfb11_d_t.*
            ELSE
               #add-point:單身page3修改前 name="input.body11.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身3)
               
               
               #將遮罩欄位還原
               CALL astm401_stfl_t_mask_restore('restore_mask_o')
                              
               UPDATE stfl_t SET (stfl001,stflunit,stflsite,stflacti,stflseq,stfl002,stfl003,stfl004, 
                   stfl005,stfl006,stfl007,stfl008,stfl009) = (g_stfa_m.stfa001,g_stfb11_d[l_ac].stflunit, 
                   g_stfb11_d[l_ac].stflsite,g_stfb11_d[l_ac].stflacti,g_stfb11_d[l_ac].stflseq,g_stfb11_d[l_ac].stfl002, 
                   g_stfb11_d[l_ac].stfl003,g_stfb11_d[l_ac].stfl004,g_stfb11_d[l_ac].stfl005,g_stfb11_d[l_ac].stfl006, 
                   g_stfb11_d[l_ac].stfl007,g_stfb11_d[l_ac].stfl008,g_stfb11_d[l_ac].stfl009) #自訂欄位頁簽 
 
                WHERE stflent = g_enterprise AND stfl001 = g_stfa_m.stfa001
                  AND stflseq = g_stfb11_d_t.stflseq #項次 
                  
               #add-point:單身page3修改中 name="input.body11.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_stfb11_d[l_ac].* = g_stfb11_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfl_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_stfb11_d[l_ac].* = g_stfb11_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfl_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys_bak[1] = g_stfa001_t
               LET gs_keys[2] = g_stfb11_d[g_detail_idx].stflseq
               LET gs_keys_bak[2] = g_stfb11_d_t.stflseq
               CALL astm401_update_b('stfl_t',gs_keys,gs_keys_bak,"'3'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astm401_stfl_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_stfb11_d[g_detail_idx].stflseq = g_stfb11_d_t.stflseq 
                  ) THEN
                  LET gs_keys[01] = g_stfa_m.stfa001
                  LET gs_keys[gs_keys.getLength()+1] = g_stfb11_d_t.stflseq
                  CALL astm401_key_update_b(gs_keys,'stfl_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb11_d_t)
               LET g_log2 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb11_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page3修改後 name="input.body11.a_update"
               
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stflunit
            #add-point:BEFORE FIELD stflunit name="input.b.page11.stflunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stflunit
            
            #add-point:AFTER FIELD stflunit name="input.a.page11.stflunit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stflunit
            #add-point:ON CHANGE stflunit name="input.g.page11.stflunit"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stflsite
            #add-point:BEFORE FIELD stflsite name="input.b.page11.stflsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stflsite
            
            #add-point:AFTER FIELD stflsite name="input.a.page11.stflsite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stflsite
            #add-point:ON CHANGE stflsite name="input.g.page11.stflsite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stflacti
            #add-point:BEFORE FIELD stflacti name="input.b.page11.stflacti"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stflacti
            
            #add-point:AFTER FIELD stflacti name="input.a.page11.stflacti"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stflacti
            #add-point:ON CHANGE stflacti name="input.g.page11.stflacti"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stflseq
            #add-point:BEFORE FIELD stflseq name="input.b.page11.stflseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stflseq
            
            #add-point:AFTER FIELD stflseq name="input.a.page11.stflseq"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stfa_m.stfa001 IS NOT NULL AND g_stfb11_d[g_detail_idx].stflseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stfa_m.stfa001 != g_stfa001_t OR g_stfb11_d[g_detail_idx].stflseq != g_stfb11_d_t.stflseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stfl_t WHERE "||"stflent = '" ||g_enterprise|| "' AND "||"stfl001 = '"||g_stfa_m.stfa001 ||"' AND "|| "stflseq = '"||g_stfb11_d[g_detail_idx].stflseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stflseq
            #add-point:ON CHANGE stflseq name="input.g.page11.stflseq"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfl002
            
            #add-point:AFTER FIELD stfl002 name="input.a.page11.stfl002"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfb11_d[l_ac].stfl002
            CALL ap_ref_array2(g_ref_fields,"SELECT stael003 FROM stael_t WHERE staelent='"||g_enterprise||"' AND stael001=? AND stael002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfb11_d[l_ac].stfl002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfb11_d[l_ac].stfl002_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfl002
            #add-point:BEFORE FIELD stfl002 name="input.b.page11.stfl002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfl002
            #add-point:ON CHANGE stfl002 name="input.g.page11.stfl002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfl003
            #add-point:BEFORE FIELD stfl003 name="input.b.page11.stfl003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfl003
            
            #add-point:AFTER FIELD stfl003 name="input.a.page11.stfl003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfl003
            #add-point:ON CHANGE stfl003 name="input.g.page11.stfl003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfl004
            #add-point:BEFORE FIELD stfl004 name="input.b.page11.stfl004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfl004
            
            #add-point:AFTER FIELD stfl004 name="input.a.page11.stfl004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfl004
            #add-point:ON CHANGE stfl004 name="input.g.page11.stfl004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfl005
            #add-point:BEFORE FIELD stfl005 name="input.b.page11.stfl005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfl005
            
            #add-point:AFTER FIELD stfl005 name="input.a.page11.stfl005"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfl005
            #add-point:ON CHANGE stfl005 name="input.g.page11.stfl005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfl006
            #add-point:BEFORE FIELD stfl006 name="input.b.page11.stfl006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfl006
            
            #add-point:AFTER FIELD stfl006 name="input.a.page11.stfl006"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfl006
            #add-point:ON CHANGE stfl006 name="input.g.page11.stfl006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfl007
            #add-point:BEFORE FIELD stfl007 name="input.b.page11.stfl007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfl007
            
            #add-point:AFTER FIELD stfl007 name="input.a.page11.stfl007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfl007
            #add-point:ON CHANGE stfl007 name="input.g.page11.stfl007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfl008
            #add-point:BEFORE FIELD stfl008 name="input.b.page11.stfl008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfl008
            
            #add-point:AFTER FIELD stfl008 name="input.a.page11.stfl008"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfl008
            #add-point:ON CHANGE stfl008 name="input.g.page11.stfl008"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfl009
            #add-point:BEFORE FIELD stfl009 name="input.b.page11.stfl009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfl009
            
            #add-point:AFTER FIELD stfl009 name="input.a.page11.stfl009"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfl009
            #add-point:ON CHANGE stfl009 name="input.g.page11.stfl009"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page11.stflunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stflunit
            #add-point:ON ACTION controlp INFIELD stflunit name="input.c.page11.stflunit"
            
            #END add-point
 
 
         #Ctrlp:input.c.page11.stflsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stflsite
            #add-point:ON ACTION controlp INFIELD stflsite name="input.c.page11.stflsite"
            
            #END add-point
 
 
         #Ctrlp:input.c.page11.stflacti
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stflacti
            #add-point:ON ACTION controlp INFIELD stflacti name="input.c.page11.stflacti"
            
            #END add-point
 
 
         #Ctrlp:input.c.page11.stflseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stflseq
            #add-point:ON ACTION controlp INFIELD stflseq name="input.c.page11.stflseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page11.stfl002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfl002
            #add-point:ON ACTION controlp INFIELD stfl002 name="input.c.page11.stfl002"
            
            #END add-point
 
 
         #Ctrlp:input.c.page11.stfl003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfl003
            #add-point:ON ACTION controlp INFIELD stfl003 name="input.c.page11.stfl003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page11.stfl004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfl004
            #add-point:ON ACTION controlp INFIELD stfl004 name="input.c.page11.stfl004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page11.stfl005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfl005
            #add-point:ON ACTION controlp INFIELD stfl005 name="input.c.page11.stfl005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page11.stfl006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfl006
            #add-point:ON ACTION controlp INFIELD stfl006 name="input.c.page11.stfl006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page11.stfl007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfl007
            #add-point:ON ACTION controlp INFIELD stfl007 name="input.c.page11.stfl007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page11.stfl008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfl008
            #add-point:ON ACTION controlp INFIELD stfl008 name="input.c.page11.stfl008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page11.stfl009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfl009
            #add-point:ON ACTION controlp INFIELD stfl009 name="input.c.page11.stfl009"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page3 after_row name="input.body11.after_row"
            
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_stfb11_d[l_ac].* = g_stfb11_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm401_bcl3
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astm401_unlock_b("stfl_t","'3'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page3 after_row2 name="input.body11.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body11.after_input"
            
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_stfb11_d[li_reproduce_target].* = g_stfb11_d[li_reproduce].*
 
               LET g_stfb11_d[li_reproduce_target].stflseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_stfb11_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_stfb11_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_stfb12_d FROM s_detail12.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_4)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body12.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stfb12_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astm401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'4',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_stfb12_d.getLength()
            #add-point:資料輸入前 name="input.body12.before_input"
            
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stfb12_d[l_ac].* TO NULL 
            INITIALIZE g_stfb12_d_t.* TO NULL 
            INITIALIZE g_stfb12_d_o.* TO NULL 
            #公用欄位給值(單身4)
            
            #自定義預設值(單身4)
            
            #add-point:modify段before備份 name="input.body12.insert.before_bak"
            
            #end add-point
            LET g_stfb12_d_t.* = g_stfb12_d[l_ac].*     #新輸入資料
            LET g_stfb12_d_o.* = g_stfb12_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astm401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body12.insert.after_set_entry_b"
            
            #end add-point
            CALL astm401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stfb12_d[li_reproduce_target].* = g_stfb12_d[li_reproduce].*
 
               LET g_stfb12_d[li_reproduce_target].stfwseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body12.before_insert"
            
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body12.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[4] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 4
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astm401_cl USING g_enterprise,g_stfa_m.stfa001
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm401_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astm401_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_stfb12_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stfb12_d[l_ac].stfwseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_stfb12_d_t.* = g_stfb12_d[l_ac].*  #BACKUP
               LET g_stfb12_d_o.* = g_stfb12_d[l_ac].*  #BACKUP
               CALL astm401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body12.after_set_entry_b"
               
               #end add-point  
               CALL astm401_set_no_entry_b(l_cmd)
               IF NOT astm401_lock_b("stfw_t","'4'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astm401_bcl4 INTO g_stfb12_d[l_ac].stfwunit,g_stfb12_d[l_ac].stfwsite,g_stfb12_d[l_ac].stfwseq, 
                      g_stfb12_d[l_ac].stfw002,g_stfb12_d[l_ac].stfw003,g_stfb12_d[l_ac].stfw004,g_stfb12_d[l_ac].stfw005, 
                      g_stfb12_d[l_ac].stfw006,g_stfb12_d[l_ac].stfw007,g_stfb12_d[l_ac].stfw008,g_stfb12_d[l_ac].stfwacti 
 
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stfb12_d_mask_o[l_ac].* =  g_stfb12_d[l_ac].*
                  CALL astm401_stfw_t_mask()
                  LET g_stfb12_d_mask_n[l_ac].* =  g_stfb12_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astm401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body12.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body12.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body12.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身4刪除前 name="input.body12.b_delete"
               
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stfa_m.stfa001
               LET gs_keys[gs_keys.getLength()+1] = g_stfb12_d_t.stfwseq
            
               #刪除同層單身
               IF NOT astm401_delete_b('stfw_t',gs_keys,"'4'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astm401_key_delete_b(gs_keys,'stfw_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身4刪除中 name="input.body12.m_delete"
               
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astm401_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身4刪除後 name="input.body12.a_delete"
               
               #end add-point
               LET l_count = g_stfb_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body12.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stfb12_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身4新增前 name="input.body12.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stfw_t 
             WHERE stfwent = g_enterprise AND stfw001 = g_stfa_m.stfa001
               AND stfwseq = g_stfb12_d[l_ac].stfwseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身4新增前 name="input.body12.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys[2] = g_stfb12_d[g_detail_idx].stfwseq
               CALL astm401_insert_b('stfw_t',gs_keys,"'4'")
                           
               #add-point:單身新增後4 name="input.body12.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_stfb_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfw_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astm401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body12.after_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_stfb12_d[l_ac].* = g_stfb12_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm401_bcl4
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_stfb12_d[l_ac].* = g_stfb12_d_t.*
            ELSE
               #add-point:單身page4修改前 name="input.body12.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身4)
               
               
               #將遮罩欄位還原
               CALL astm401_stfw_t_mask_restore('restore_mask_o')
                              
               UPDATE stfw_t SET (stfw001,stfwunit,stfwsite,stfwseq,stfw002,stfw003,stfw004,stfw005, 
                   stfw006,stfw007,stfw008,stfwacti) = (g_stfa_m.stfa001,g_stfb12_d[l_ac].stfwunit,g_stfb12_d[l_ac].stfwsite, 
                   g_stfb12_d[l_ac].stfwseq,g_stfb12_d[l_ac].stfw002,g_stfb12_d[l_ac].stfw003,g_stfb12_d[l_ac].stfw004, 
                   g_stfb12_d[l_ac].stfw005,g_stfb12_d[l_ac].stfw006,g_stfb12_d[l_ac].stfw007,g_stfb12_d[l_ac].stfw008, 
                   g_stfb12_d[l_ac].stfwacti) #自訂欄位頁簽
                WHERE stfwent = g_enterprise AND stfw001 = g_stfa_m.stfa001
                  AND stfwseq = g_stfb12_d_t.stfwseq #項次 
                  
               #add-point:單身page4修改中 name="input.body12.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_stfb12_d[l_ac].* = g_stfb12_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfw_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_stfb12_d[l_ac].* = g_stfb12_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfw_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys_bak[1] = g_stfa001_t
               LET gs_keys[2] = g_stfb12_d[g_detail_idx].stfwseq
               LET gs_keys_bak[2] = g_stfb12_d_t.stfwseq
               CALL astm401_update_b('stfw_t',gs_keys,gs_keys_bak,"'4'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astm401_stfw_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_stfb12_d[g_detail_idx].stfwseq = g_stfb12_d_t.stfwseq 
                  ) THEN
                  LET gs_keys[01] = g_stfa_m.stfa001
                  LET gs_keys[gs_keys.getLength()+1] = g_stfb12_d_t.stfwseq
                  CALL astm401_key_update_b(gs_keys,'stfw_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb12_d_t)
               LET g_log2 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb12_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page4修改後 name="input.body12.a_update"
               
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfwunit
            #add-point:BEFORE FIELD stfwunit name="input.b.page12.stfwunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfwunit
            
            #add-point:AFTER FIELD stfwunit name="input.a.page12.stfwunit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfwunit
            #add-point:ON CHANGE stfwunit name="input.g.page12.stfwunit"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfwsite
            #add-point:BEFORE FIELD stfwsite name="input.b.page12.stfwsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfwsite
            
            #add-point:AFTER FIELD stfwsite name="input.a.page12.stfwsite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfwsite
            #add-point:ON CHANGE stfwsite name="input.g.page12.stfwsite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfwseq
            #add-point:BEFORE FIELD stfwseq name="input.b.page12.stfwseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfwseq
            
            #add-point:AFTER FIELD stfwseq name="input.a.page12.stfwseq"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stfa_m.stfa001 IS NOT NULL AND g_stfb12_d[g_detail_idx].stfwseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stfa_m.stfa001 != g_stfa001_t OR g_stfb12_d[g_detail_idx].stfwseq != g_stfb12_d_t.stfwseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stfw_t WHERE "||"stfwent = '" ||g_enterprise|| "' AND "||"stfw001 = '"||g_stfa_m.stfa001 ||"' AND "|| "stfwseq = '"||g_stfb12_d[g_detail_idx].stfwseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfwseq
            #add-point:ON CHANGE stfwseq name="input.g.page12.stfwseq"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfw002
            #add-point:BEFORE FIELD stfw002 name="input.b.page12.stfw002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfw002
            
            #add-point:AFTER FIELD stfw002 name="input.a.page12.stfw002"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfw002
            #add-point:ON CHANGE stfw002 name="input.g.page12.stfw002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfw003
            #add-point:BEFORE FIELD stfw003 name="input.b.page12.stfw003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfw003
            
            #add-point:AFTER FIELD stfw003 name="input.a.page12.stfw003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfw003
            #add-point:ON CHANGE stfw003 name="input.g.page12.stfw003"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfw004
            
            #add-point:AFTER FIELD stfw004 name="input.a.page12.stfw004"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfw004
            #add-point:BEFORE FIELD stfw004 name="input.b.page12.stfw004"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfw004
            #add-point:ON CHANGE stfw004 name="input.g.page12.stfw004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfw005
            #add-point:BEFORE FIELD stfw005 name="input.b.page12.stfw005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfw005
            
            #add-point:AFTER FIELD stfw005 name="input.a.page12.stfw005"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfw005
            #add-point:ON CHANGE stfw005 name="input.g.page12.stfw005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfw006
            #add-point:BEFORE FIELD stfw006 name="input.b.page12.stfw006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfw006
            
            #add-point:AFTER FIELD stfw006 name="input.a.page12.stfw006"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfw006
            #add-point:ON CHANGE stfw006 name="input.g.page12.stfw006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfw007
            #add-point:BEFORE FIELD stfw007 name="input.b.page12.stfw007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfw007
            
            #add-point:AFTER FIELD stfw007 name="input.a.page12.stfw007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfw007
            #add-point:ON CHANGE stfw007 name="input.g.page12.stfw007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfw008
            #add-point:BEFORE FIELD stfw008 name="input.b.page12.stfw008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfw008
            
            #add-point:AFTER FIELD stfw008 name="input.a.page12.stfw008"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfw008
            #add-point:ON CHANGE stfw008 name="input.g.page12.stfw008"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfwacti
            #add-point:BEFORE FIELD stfwacti name="input.b.page12.stfwacti"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfwacti
            
            #add-point:AFTER FIELD stfwacti name="input.a.page12.stfwacti"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfwacti
            #add-point:ON CHANGE stfwacti name="input.g.page12.stfwacti"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page12.stfwunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfwunit
            #add-point:ON ACTION controlp INFIELD stfwunit name="input.c.page12.stfwunit"
            
            #END add-point
 
 
         #Ctrlp:input.c.page12.stfwsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfwsite
            #add-point:ON ACTION controlp INFIELD stfwsite name="input.c.page12.stfwsite"
            
            #END add-point
 
 
         #Ctrlp:input.c.page12.stfwseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfwseq
            #add-point:ON ACTION controlp INFIELD stfwseq name="input.c.page12.stfwseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page12.stfw002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfw002
            #add-point:ON ACTION controlp INFIELD stfw002 name="input.c.page12.stfw002"
            
            #END add-point
 
 
         #Ctrlp:input.c.page12.stfw003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfw003
            #add-point:ON ACTION controlp INFIELD stfw003 name="input.c.page12.stfw003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page12.stfw004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfw004
            #add-point:ON ACTION controlp INFIELD stfw004 name="input.c.page12.stfw004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page12.stfw005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfw005
            #add-point:ON ACTION controlp INFIELD stfw005 name="input.c.page12.stfw005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page12.stfw006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfw006
            #add-point:ON ACTION controlp INFIELD stfw006 name="input.c.page12.stfw006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page12.stfw007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfw007
            #add-point:ON ACTION controlp INFIELD stfw007 name="input.c.page12.stfw007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page12.stfw008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfw008
            #add-point:ON ACTION controlp INFIELD stfw008 name="input.c.page12.stfw008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page12.stfwacti
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfwacti
            #add-point:ON ACTION controlp INFIELD stfwacti name="input.c.page12.stfwacti"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page4 after_row name="input.body12.after_row"
            
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_stfb12_d[l_ac].* = g_stfb12_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm401_bcl4
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astm401_unlock_b("stfw_t","'4'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page4 after_row2 name="input.body12.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body12.after_input"
            
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_stfb12_d[li_reproduce_target].* = g_stfb12_d[li_reproduce].*
 
               LET g_stfb12_d[li_reproduce_target].stfwseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_stfb12_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_stfb12_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_stfb2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_5)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body2.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stfb2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astm401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'5',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_stfb2_d.getLength()
            #add-point:資料輸入前 name="input.body2.before_input"
            
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stfb2_d[l_ac].* TO NULL 
            INITIALIZE g_stfb2_d_t.* TO NULL 
            INITIALIZE g_stfb2_d_o.* TO NULL 
            #公用欄位給值(單身5)
            
            #自定義預設值(單身5)
                  LET g_stfb2_d[l_ac].stfc017 = "0"
 
            #add-point:modify段before備份 name="input.body2.insert.before_bak"
            
            #end add-point
            LET g_stfb2_d_t.* = g_stfb2_d[l_ac].*     #新輸入資料
            LET g_stfb2_d_o.* = g_stfb2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astm401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body2.insert.after_set_entry_b"
            
            #end add-point
            CALL astm401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stfb2_d[li_reproduce_target].* = g_stfb2_d[li_reproduce].*
 
               LET g_stfb2_d[li_reproduce_target].stfcseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body2.before_insert"
            
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body2.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[5] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 5
            CALL astm401_b_fill2('12')
  
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astm401_cl USING g_enterprise,g_stfa_m.stfa001
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm401_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astm401_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_stfb2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stfb2_d[l_ac].stfcseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_stfb2_d_t.* = g_stfb2_d[l_ac].*  #BACKUP
               LET g_stfb2_d_o.* = g_stfb2_d[l_ac].*  #BACKUP
               CALL astm401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body2.after_set_entry_b"
               
               #end add-point  
               CALL astm401_set_no_entry_b(l_cmd)
               IF NOT astm401_lock_b("stfc_t","'5'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astm401_bcl5 INTO g_stfb2_d[l_ac].stfcseq,g_stfb2_d[l_ac].stfcacti,g_stfb2_d[l_ac].stfc024, 
                      g_stfb2_d[l_ac].stfc002,g_stfb2_d[l_ac].stfc003,g_stfb2_d[l_ac].stfc025,g_stfb2_d[l_ac].stfc004, 
                      g_stfb2_d[l_ac].stfc005,g_stfb2_d[l_ac].stfc006,g_stfb2_d[l_ac].stfc007,g_stfb2_d[l_ac].stfc008, 
                      g_stfb2_d[l_ac].stfc009,g_stfb2_d[l_ac].stfc026,g_stfb2_d[l_ac].stfc027,g_stfb2_d[l_ac].stfc010, 
                      g_stfb2_d[l_ac].stfc011,g_stfb2_d[l_ac].stfc012,g_stfb2_d[l_ac].stfc013,g_stfb2_d[l_ac].stfc014, 
                      g_stfb2_d[l_ac].stfc015,g_stfb2_d[l_ac].stfc016,g_stfb2_d[l_ac].stfc017,g_stfb2_d[l_ac].stfc018, 
                      g_stfb2_d[l_ac].stfc019,g_stfb2_d[l_ac].stfc020,g_stfb2_d[l_ac].stfc021,g_stfb2_d[l_ac].stfc022, 
                      g_stfb2_d[l_ac].stfc023,g_stfb2_d[l_ac].stfcsite,g_stfb2_d[l_ac].stfcunit
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stfb2_d_mask_o[l_ac].* =  g_stfb2_d[l_ac].*
                  CALL astm401_stfc_t_mask()
                  LET g_stfb2_d_mask_n[l_ac].* =  g_stfb2_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astm401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body2.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body2.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body2.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身5刪除前 name="input.body2.b_delete"
               
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stfa_m.stfa001
               LET gs_keys[gs_keys.getLength()+1] = g_stfb2_d_t.stfcseq
            
               #刪除同層單身
               IF NOT astm401_delete_b('stfc_t',gs_keys,"'5'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astm401_key_delete_b(gs_keys,'stfc_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身5刪除中 name="input.body2.m_delete"
               
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astm401_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身5刪除後 name="input.body2.a_delete"
               
               #end add-point
               LET l_count = g_stfb_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body2.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stfb2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身5新增前 name="input.body2.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stfc_t 
             WHERE stfcent = g_enterprise AND stfc001 = g_stfa_m.stfa001
               AND stfcseq = g_stfb2_d[l_ac].stfcseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身5新增前 name="input.body2.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys[2] = g_stfb2_d[g_detail_idx].stfcseq
               CALL astm401_insert_b('stfc_t',gs_keys,"'5'")
                           
               #add-point:單身新增後5 name="input.body2.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_stfb_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfc_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astm401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body2.after_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_stfb2_d[l_ac].* = g_stfb2_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm401_bcl5
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_stfb2_d[l_ac].* = g_stfb2_d_t.*
            ELSE
               #add-point:單身page5修改前 name="input.body2.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身5)
               
               
               #將遮罩欄位還原
               CALL astm401_stfc_t_mask_restore('restore_mask_o')
                              
               UPDATE stfc_t SET (stfc001,stfcseq,stfcacti,stfc024,stfc002,stfc003,stfc025,stfc004,stfc005, 
                   stfc006,stfc007,stfc008,stfc009,stfc026,stfc027,stfc010,stfc011,stfc012,stfc013,stfc014, 
                   stfc015,stfc016,stfc017,stfc018,stfc019,stfc020,stfc021,stfc022,stfc023,stfcsite, 
                   stfcunit) = (g_stfa_m.stfa001,g_stfb2_d[l_ac].stfcseq,g_stfb2_d[l_ac].stfcacti,g_stfb2_d[l_ac].stfc024, 
                   g_stfb2_d[l_ac].stfc002,g_stfb2_d[l_ac].stfc003,g_stfb2_d[l_ac].stfc025,g_stfb2_d[l_ac].stfc004, 
                   g_stfb2_d[l_ac].stfc005,g_stfb2_d[l_ac].stfc006,g_stfb2_d[l_ac].stfc007,g_stfb2_d[l_ac].stfc008, 
                   g_stfb2_d[l_ac].stfc009,g_stfb2_d[l_ac].stfc026,g_stfb2_d[l_ac].stfc027,g_stfb2_d[l_ac].stfc010, 
                   g_stfb2_d[l_ac].stfc011,g_stfb2_d[l_ac].stfc012,g_stfb2_d[l_ac].stfc013,g_stfb2_d[l_ac].stfc014, 
                   g_stfb2_d[l_ac].stfc015,g_stfb2_d[l_ac].stfc016,g_stfb2_d[l_ac].stfc017,g_stfb2_d[l_ac].stfc018, 
                   g_stfb2_d[l_ac].stfc019,g_stfb2_d[l_ac].stfc020,g_stfb2_d[l_ac].stfc021,g_stfb2_d[l_ac].stfc022, 
                   g_stfb2_d[l_ac].stfc023,g_stfb2_d[l_ac].stfcsite,g_stfb2_d[l_ac].stfcunit) #自訂欄位頁簽 
 
                WHERE stfcent = g_enterprise AND stfc001 = g_stfa_m.stfa001
                  AND stfcseq = g_stfb2_d_t.stfcseq #項次 
                  
               #add-point:單身page5修改中 name="input.body2.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_stfb2_d[l_ac].* = g_stfb2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfc_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_stfb2_d[l_ac].* = g_stfb2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfc_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys_bak[1] = g_stfa001_t
               LET gs_keys[2] = g_stfb2_d[g_detail_idx].stfcseq
               LET gs_keys_bak[2] = g_stfb2_d_t.stfcseq
               CALL astm401_update_b('stfc_t',gs_keys,gs_keys_bak,"'5'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astm401_stfc_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_stfb2_d[g_detail_idx].stfcseq = g_stfb2_d_t.stfcseq 
                  ) THEN
                  LET gs_keys[01] = g_stfa_m.stfa001
                  LET gs_keys[gs_keys.getLength()+1] = g_stfb2_d_t.stfcseq
                  CALL astm401_key_update_b(gs_keys,'stfc_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb2_d_t)
               LET g_log2 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page5修改後 name="input.body2.a_update"
               
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfcseq
            #add-point:BEFORE FIELD stfcseq name="input.b.page2.stfcseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfcseq
            
            #add-point:AFTER FIELD stfcseq name="input.a.page2.stfcseq"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stfa_m.stfa001 IS NOT NULL AND g_stfb2_d[g_detail_idx].stfcseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stfa_m.stfa001 != g_stfa001_t OR g_stfb2_d[g_detail_idx].stfcseq != g_stfb2_d_t.stfcseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stfc_t WHERE "||"stfcent = '" ||g_enterprise|| "' AND "||"stfc001 = '"||g_stfa_m.stfa001 ||"' AND "|| "stfcseq = '"||g_stfb2_d[g_detail_idx].stfcseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfcseq
            #add-point:ON CHANGE stfcseq name="input.g.page2.stfcseq"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfcacti
            #add-point:BEFORE FIELD stfcacti name="input.b.page2.stfcacti"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfcacti
            
            #add-point:AFTER FIELD stfcacti name="input.a.page2.stfcacti"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfcacti
            #add-point:ON CHANGE stfcacti name="input.g.page2.stfcacti"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc024
            #add-point:BEFORE FIELD stfc024 name="input.b.page2.stfc024"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc024
            
            #add-point:AFTER FIELD stfc024 name="input.a.page2.stfc024"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfc024
            #add-point:ON CHANGE stfc024 name="input.g.page2.stfc024"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc002
            #add-point:BEFORE FIELD stfc002 name="input.b.page2.stfc002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc002
            
            #add-point:AFTER FIELD stfc002 name="input.a.page2.stfc002"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfc002
            #add-point:ON CHANGE stfc002 name="input.g.page2.stfc002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc003
            #add-point:BEFORE FIELD stfc003 name="input.b.page2.stfc003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc003
            
            #add-point:AFTER FIELD stfc003 name="input.a.page2.stfc003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfc003
            #add-point:ON CHANGE stfc003 name="input.g.page2.stfc003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc025
            #add-point:BEFORE FIELD stfc025 name="input.b.page2.stfc025"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc025
            
            #add-point:AFTER FIELD stfc025 name="input.a.page2.stfc025"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfc025
            #add-point:ON CHANGE stfc025 name="input.g.page2.stfc025"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc004
            
            #add-point:AFTER FIELD stfc004 name="input.a.page2.stfc004"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfb2_d[l_ac].stfc004
            CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfb2_d[l_ac].stfc004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfb2_d[l_ac].stfc004_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc004
            #add-point:BEFORE FIELD stfc004 name="input.b.page2.stfc004"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfc004
            #add-point:ON CHANGE stfc004 name="input.g.page2.stfc004"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc005
            
            #add-point:AFTER FIELD stfc005 name="input.a.page2.stfc005"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfb2_d[l_ac].stfc005
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2002' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfb2_d[l_ac].stfc005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfb2_d[l_ac].stfc005_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc005
            #add-point:BEFORE FIELD stfc005 name="input.b.page2.stfc005"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfc005
            #add-point:ON CHANGE stfc005 name="input.g.page2.stfc005"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc006
            
            #add-point:AFTER FIELD stfc006 name="input.a.page2.stfc006"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc006
            #add-point:BEFORE FIELD stfc006 name="input.b.page2.stfc006"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfc006
            #add-point:ON CHANGE stfc006 name="input.g.page2.stfc006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc006_desc
            #add-point:BEFORE FIELD stfc006_desc name="input.b.page2.stfc006_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc006_desc
            
            #add-point:AFTER FIELD stfc006_desc name="input.a.page2.stfc006_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfc006_desc
            #add-point:ON CHANGE stfc006_desc name="input.g.page2.stfc006_desc"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc007
            
            #add-point:AFTER FIELD stfc007 name="input.a.page2.stfc007"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc007
            #add-point:BEFORE FIELD stfc007 name="input.b.page2.stfc007"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfc007
            #add-point:ON CHANGE stfc007 name="input.g.page2.stfc007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc007_desc
            #add-point:BEFORE FIELD stfc007_desc name="input.b.page2.stfc007_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc007_desc
            
            #add-point:AFTER FIELD stfc007_desc name="input.a.page2.stfc007_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfc007_desc
            #add-point:ON CHANGE stfc007_desc name="input.g.page2.stfc007_desc"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc008
            #add-point:BEFORE FIELD stfc008 name="input.b.page2.stfc008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc008
            
            #add-point:AFTER FIELD stfc008 name="input.a.page2.stfc008"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfc008
            #add-point:ON CHANGE stfc008 name="input.g.page2.stfc008"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc009
            
            #add-point:AFTER FIELD stfc009 name="input.a.page2.stfc009"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfb2_d[l_ac].stfc009
            CALL ap_ref_array2(g_ref_fields,"SELECT stael003 FROM stael_t WHERE staelent='"||g_enterprise||"' AND stael001=? AND stael002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfb2_d[l_ac].stfc009_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfb2_d[l_ac].stfc009_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc009
            #add-point:BEFORE FIELD stfc009 name="input.b.page2.stfc009"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfc009
            #add-point:ON CHANGE stfc009 name="input.g.page2.stfc009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc026
            #add-point:BEFORE FIELD stfc026 name="input.b.page2.stfc026"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc026
            
            #add-point:AFTER FIELD stfc026 name="input.a.page2.stfc026"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfc026
            #add-point:ON CHANGE stfc026 name="input.g.page2.stfc026"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc027
            #add-point:BEFORE FIELD stfc027 name="input.b.page2.stfc027"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc027
            
            #add-point:AFTER FIELD stfc027 name="input.a.page2.stfc027"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfc027
            #add-point:ON CHANGE stfc027 name="input.g.page2.stfc027"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc010
            #add-point:BEFORE FIELD stfc010 name="input.b.page2.stfc010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc010
            
            #add-point:AFTER FIELD stfc010 name="input.a.page2.stfc010"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfc010
            #add-point:ON CHANGE stfc010 name="input.g.page2.stfc010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc011
            #add-point:BEFORE FIELD stfc011 name="input.b.page2.stfc011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc011
            
            #add-point:AFTER FIELD stfc011 name="input.a.page2.stfc011"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfc011
            #add-point:ON CHANGE stfc011 name="input.g.page2.stfc011"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc012
            #add-point:BEFORE FIELD stfc012 name="input.b.page2.stfc012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc012
            
            #add-point:AFTER FIELD stfc012 name="input.a.page2.stfc012"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfc012
            #add-point:ON CHANGE stfc012 name="input.g.page2.stfc012"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc013
            #add-point:BEFORE FIELD stfc013 name="input.b.page2.stfc013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc013
            
            #add-point:AFTER FIELD stfc013 name="input.a.page2.stfc013"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfc013
            #add-point:ON CHANGE stfc013 name="input.g.page2.stfc013"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc014
            #add-point:BEFORE FIELD stfc014 name="input.b.page2.stfc014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc014
            
            #add-point:AFTER FIELD stfc014 name="input.a.page2.stfc014"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfc014
            #add-point:ON CHANGE stfc014 name="input.g.page2.stfc014"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc015
            
            #add-point:AFTER FIELD stfc015 name="input.a.page2.stfc015"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfb2_d[l_ac].stfc015
            CALL ap_ref_array2(g_ref_fields,"SELECT stabl003 FROM stabl_t WHERE stablent='"||g_enterprise||"' AND stabl001=? AND stabl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfb2_d[l_ac].stfc015_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfb2_d[l_ac].stfc015_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc015
            #add-point:BEFORE FIELD stfc015 name="input.b.page2.stfc015"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfc015
            #add-point:ON CHANGE stfc015 name="input.g.page2.stfc015"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc016
            
            #add-point:AFTER FIELD stfc016 name="input.a.page2.stfc016"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfb2_d[l_ac].stfc016
            CALL ap_ref_array2(g_ref_fields,"SELECT stabl003 FROM stabl_t WHERE stablent='"||g_enterprise||"' AND stabl001=? AND stabl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfb2_d[l_ac].stfc016_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfb2_d[l_ac].stfc016_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc016
            #add-point:BEFORE FIELD stfc016 name="input.b.page2.stfc016"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfc016
            #add-point:ON CHANGE stfc016 name="input.g.page2.stfc016"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc017
            #add-point:BEFORE FIELD stfc017 name="input.b.page2.stfc017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc017
            
            #add-point:AFTER FIELD stfc017 name="input.a.page2.stfc017"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfc017
            #add-point:ON CHANGE stfc017 name="input.g.page2.stfc017"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc018
            #add-point:BEFORE FIELD stfc018 name="input.b.page2.stfc018"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc018
            
            #add-point:AFTER FIELD stfc018 name="input.a.page2.stfc018"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfc018
            #add-point:ON CHANGE stfc018 name="input.g.page2.stfc018"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc019
            #add-point:BEFORE FIELD stfc019 name="input.b.page2.stfc019"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc019
            
            #add-point:AFTER FIELD stfc019 name="input.a.page2.stfc019"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfc019
            #add-point:ON CHANGE stfc019 name="input.g.page2.stfc019"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc020
            #add-point:BEFORE FIELD stfc020 name="input.b.page2.stfc020"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc020
            
            #add-point:AFTER FIELD stfc020 name="input.a.page2.stfc020"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfc020
            #add-point:ON CHANGE stfc020 name="input.g.page2.stfc020"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc021
            #add-point:BEFORE FIELD stfc021 name="input.b.page2.stfc021"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc021
            
            #add-point:AFTER FIELD stfc021 name="input.a.page2.stfc021"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfc021
            #add-point:ON CHANGE stfc021 name="input.g.page2.stfc021"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc022
            #add-point:BEFORE FIELD stfc022 name="input.b.page2.stfc022"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc022
            
            #add-point:AFTER FIELD stfc022 name="input.a.page2.stfc022"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfc022
            #add-point:ON CHANGE stfc022 name="input.g.page2.stfc022"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfc023
            #add-point:BEFORE FIELD stfc023 name="input.b.page2.stfc023"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfc023
            
            #add-point:AFTER FIELD stfc023 name="input.a.page2.stfc023"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfc023
            #add-point:ON CHANGE stfc023 name="input.g.page2.stfc023"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfcsite
            #add-point:BEFORE FIELD stfcsite name="input.b.page2.stfcsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfcsite
            
            #add-point:AFTER FIELD stfcsite name="input.a.page2.stfcsite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfcsite
            #add-point:ON CHANGE stfcsite name="input.g.page2.stfcsite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfcunit
            #add-point:BEFORE FIELD stfcunit name="input.b.page2.stfcunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfcunit
            
            #add-point:AFTER FIELD stfcunit name="input.a.page2.stfcunit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfcunit
            #add-point:ON CHANGE stfcunit name="input.g.page2.stfcunit"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page2.stfcseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfcseq
            #add-point:ON ACTION controlp INFIELD stfcseq name="input.c.page2.stfcseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stfcacti
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfcacti
            #add-point:ON ACTION controlp INFIELD stfcacti name="input.c.page2.stfcacti"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stfc024
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc024
            #add-point:ON ACTION controlp INFIELD stfc024 name="input.c.page2.stfc024"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stfc002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc002
            #add-point:ON ACTION controlp INFIELD stfc002 name="input.c.page2.stfc002"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stfc003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc003
            #add-point:ON ACTION controlp INFIELD stfc003 name="input.c.page2.stfc003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stfc025
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc025
            #add-point:ON ACTION controlp INFIELD stfc025 name="input.c.page2.stfc025"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stfc004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc004
            #add-point:ON ACTION controlp INFIELD stfc004 name="input.c.page2.stfc004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stfc005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc005
            #add-point:ON ACTION controlp INFIELD stfc005 name="input.c.page2.stfc005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stfc006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc006
            #add-point:ON ACTION controlp INFIELD stfc006 name="input.c.page2.stfc006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stfc006_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc006_desc
            #add-point:ON ACTION controlp INFIELD stfc006_desc name="input.c.page2.stfc006_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stfc007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc007
            #add-point:ON ACTION controlp INFIELD stfc007 name="input.c.page2.stfc007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stfc007_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc007_desc
            #add-point:ON ACTION controlp INFIELD stfc007_desc name="input.c.page2.stfc007_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stfc008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc008
            #add-point:ON ACTION controlp INFIELD stfc008 name="input.c.page2.stfc008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stfc009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc009
            #add-point:ON ACTION controlp INFIELD stfc009 name="input.c.page2.stfc009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stfc026
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc026
            #add-point:ON ACTION controlp INFIELD stfc026 name="input.c.page2.stfc026"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stfc027
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc027
            #add-point:ON ACTION controlp INFIELD stfc027 name="input.c.page2.stfc027"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stfc010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc010
            #add-point:ON ACTION controlp INFIELD stfc010 name="input.c.page2.stfc010"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stfc011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc011
            #add-point:ON ACTION controlp INFIELD stfc011 name="input.c.page2.stfc011"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stfc012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc012
            #add-point:ON ACTION controlp INFIELD stfc012 name="input.c.page2.stfc012"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stfc013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc013
            #add-point:ON ACTION controlp INFIELD stfc013 name="input.c.page2.stfc013"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stfc014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc014
            #add-point:ON ACTION controlp INFIELD stfc014 name="input.c.page2.stfc014"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stfc015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc015
            #add-point:ON ACTION controlp INFIELD stfc015 name="input.c.page2.stfc015"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stfc016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc016
            #add-point:ON ACTION controlp INFIELD stfc016 name="input.c.page2.stfc016"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stfc017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc017
            #add-point:ON ACTION controlp INFIELD stfc017 name="input.c.page2.stfc017"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stfc018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc018
            #add-point:ON ACTION controlp INFIELD stfc018 name="input.c.page2.stfc018"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stfc019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc019
            #add-point:ON ACTION controlp INFIELD stfc019 name="input.c.page2.stfc019"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stfc020
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc020
            #add-point:ON ACTION controlp INFIELD stfc020 name="input.c.page2.stfc020"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stfc021
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc021
            #add-point:ON ACTION controlp INFIELD stfc021 name="input.c.page2.stfc021"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stfc022
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc022
            #add-point:ON ACTION controlp INFIELD stfc022 name="input.c.page2.stfc022"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stfc023
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfc023
            #add-point:ON ACTION controlp INFIELD stfc023 name="input.c.page2.stfc023"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stfcsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfcsite
            #add-point:ON ACTION controlp INFIELD stfcsite name="input.c.page2.stfcsite"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.stfcunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfcunit
            #add-point:ON ACTION controlp INFIELD stfcunit name="input.c.page2.stfcunit"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page5 after_row name="input.body2.after_row"
            
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_stfb2_d[l_ac].* = g_stfb2_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm401_bcl5
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astm401_unlock_b("stfc_t","'5'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page5 after_row2 name="input.body2.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body2.after_input"
            
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_stfb2_d[li_reproduce_target].* = g_stfb2_d[li_reproduce].*
 
               LET g_stfb2_d[li_reproduce_target].stfcseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_stfb2_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_stfb2_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_stfb3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_6)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body3.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stfb3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astm401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'6',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_stfb3_d.getLength()
            #add-point:資料輸入前 name="input.body3.before_input"
            
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stfb3_d[l_ac].* TO NULL 
            INITIALIZE g_stfb3_d_t.* TO NULL 
            INITIALIZE g_stfb3_d_o.* TO NULL 
            #公用欄位給值(單身6)
            
            #自定義預設值(單身6)
                  LET g_stfb3_d[l_ac].stfe012 = "1"
      LET g_stfb3_d[l_ac].stfe007 = "0"
 
            #add-point:modify段before備份 name="input.body3.insert.before_bak"
            
            #end add-point
            LET g_stfb3_d_t.* = g_stfb3_d[l_ac].*     #新輸入資料
            LET g_stfb3_d_o.* = g_stfb3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astm401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body3.insert.after_set_entry_b"
            
            #end add-point
            CALL astm401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stfb3_d[li_reproduce_target].* = g_stfb3_d[li_reproduce].*
 
               LET g_stfb3_d[li_reproduce_target].stfeseq = NULL
               LET g_stfb3_d[li_reproduce_target].stfe002 = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body3.before_insert"
            
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body3.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[6] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 6
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astm401_cl USING g_enterprise,g_stfa_m.stfa001
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm401_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astm401_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_stfb3_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stfb3_d[l_ac].stfeseq IS NOT NULL
               AND g_stfb3_d[l_ac].stfe002 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_stfb3_d_t.* = g_stfb3_d[l_ac].*  #BACKUP
               LET g_stfb3_d_o.* = g_stfb3_d[l_ac].*  #BACKUP
               CALL astm401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body3.after_set_entry_b"
               
               #end add-point  
               CALL astm401_set_no_entry_b(l_cmd)
               IF NOT astm401_lock_b("stfe_t","'6'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astm401_bcl6 INTO g_stfb3_d[l_ac].stfe002,g_stfb3_d[l_ac].stfeseq,g_stfb3_d[l_ac].stfe003, 
                      g_stfb3_d[l_ac].stfe004,g_stfb3_d[l_ac].stfe005,g_stfb3_d[l_ac].stfe006,g_stfb3_d[l_ac].stfe012, 
                      g_stfb3_d[l_ac].stfe007,g_stfb3_d[l_ac].stfe008,g_stfb3_d[l_ac].stfe009,g_stfb3_d[l_ac].stfe010, 
                      g_stfb3_d[l_ac].stfe011,g_stfb3_d[l_ac].stfesite,g_stfb3_d[l_ac].stfeunit
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stfb3_d_mask_o[l_ac].* =  g_stfb3_d[l_ac].*
                  CALL astm401_stfe_t_mask()
                  LET g_stfb3_d_mask_n[l_ac].* =  g_stfb3_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astm401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body3.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body3.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body3.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身6刪除前 name="input.body3.b_delete"
               
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stfa_m.stfa001
               LET gs_keys[gs_keys.getLength()+1] = g_stfb3_d_t.stfeseq
               LET gs_keys[gs_keys.getLength()+1] = g_stfb3_d_t.stfe002
            
               #刪除同層單身
               IF NOT astm401_delete_b('stfe_t',gs_keys,"'6'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astm401_key_delete_b(gs_keys,'stfe_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身6刪除中 name="input.body3.m_delete"
               
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astm401_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身6刪除後 name="input.body3.a_delete"
               
               #end add-point
               LET l_count = g_stfb_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body3.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stfb3_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身6新增前 name="input.body3.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stfe_t 
             WHERE stfeent = g_enterprise AND stfe001 = g_stfa_m.stfa001
               AND stfeseq = g_stfb3_d[l_ac].stfeseq
               AND stfe002 = g_stfb3_d[l_ac].stfe002
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身6新增前 name="input.body3.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys[2] = g_stfb3_d[g_detail_idx].stfeseq
               LET gs_keys[3] = g_stfb3_d[g_detail_idx].stfe002
               CALL astm401_insert_b('stfe_t',gs_keys,"'6'")
                           
               #add-point:單身新增後6 name="input.body3.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_stfb_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfe_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astm401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body3.after_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_stfb3_d[l_ac].* = g_stfb3_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm401_bcl6
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_stfb3_d[l_ac].* = g_stfb3_d_t.*
            ELSE
               #add-point:單身page6修改前 name="input.body3.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身6)
               
               
               #將遮罩欄位還原
               CALL astm401_stfe_t_mask_restore('restore_mask_o')
                              
               UPDATE stfe_t SET (stfe001,stfe002,stfeseq,stfe003,stfe004,stfe005,stfe006,stfe012,stfe007, 
                   stfe008,stfe009,stfe010,stfe011,stfesite,stfeunit) = (g_stfa_m.stfa001,g_stfb3_d[l_ac].stfe002, 
                   g_stfb3_d[l_ac].stfeseq,g_stfb3_d[l_ac].stfe003,g_stfb3_d[l_ac].stfe004,g_stfb3_d[l_ac].stfe005, 
                   g_stfb3_d[l_ac].stfe006,g_stfb3_d[l_ac].stfe012,g_stfb3_d[l_ac].stfe007,g_stfb3_d[l_ac].stfe008, 
                   g_stfb3_d[l_ac].stfe009,g_stfb3_d[l_ac].stfe010,g_stfb3_d[l_ac].stfe011,g_stfb3_d[l_ac].stfesite, 
                   g_stfb3_d[l_ac].stfeunit) #自訂欄位頁簽
                WHERE stfeent = g_enterprise AND stfe001 = g_stfa_m.stfa001
                  AND stfeseq = g_stfb3_d_t.stfeseq #項次 
                  AND stfe002 = g_stfb3_d_t.stfe002
                  
               #add-point:單身page6修改中 name="input.body3.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_stfb3_d[l_ac].* = g_stfb3_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfe_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_stfb3_d[l_ac].* = g_stfb3_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfe_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys_bak[1] = g_stfa001_t
               LET gs_keys[2] = g_stfb3_d[g_detail_idx].stfeseq
               LET gs_keys_bak[2] = g_stfb3_d_t.stfeseq
               LET gs_keys[3] = g_stfb3_d[g_detail_idx].stfe002
               LET gs_keys_bak[3] = g_stfb3_d_t.stfe002
               CALL astm401_update_b('stfe_t',gs_keys,gs_keys_bak,"'6'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astm401_stfe_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_stfb3_d[g_detail_idx].stfeseq = g_stfb3_d_t.stfeseq 
                  AND g_stfb3_d[g_detail_idx].stfe002 = g_stfb3_d_t.stfe002 
                  ) THEN
                  LET gs_keys[01] = g_stfa_m.stfa001
                  LET gs_keys[gs_keys.getLength()+1] = g_stfb3_d_t.stfeseq
                  LET gs_keys[gs_keys.getLength()+1] = g_stfb3_d_t.stfe002
                  CALL astm401_key_update_b(gs_keys,'stfe_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb3_d_t)
               LET g_log2 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb3_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page6修改後 name="input.body3.a_update"
               
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfe002
            #add-point:BEFORE FIELD stfe002 name="input.b.page3.stfe002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfe002
            
            #add-point:AFTER FIELD stfe002 name="input.a.page3.stfe002"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stfa_m.stfa001 IS NOT NULL AND g_stfb3_d[g_detail_idx].stfeseq IS NOT NULL AND g_stfb3_d[g_detail_idx].stfe002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stfa_m.stfa001 != g_stfa001_t OR g_stfb3_d[g_detail_idx].stfeseq != g_stfb3_d_t.stfeseq OR g_stfb3_d[g_detail_idx].stfe002 != g_stfb3_d_t.stfe002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stfe_t WHERE "||"stfeent = '" ||g_enterprise|| "' AND "||"stfe001 = '"||g_stfa_m.stfa001 ||"' AND "|| "stfeseq = '"||g_stfb3_d[g_detail_idx].stfeseq ||"' AND "|| "stfe002 = '"||g_stfb3_d[g_detail_idx].stfe002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfe002
            #add-point:ON CHANGE stfe002 name="input.g.page3.stfe002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfeseq
            #add-point:BEFORE FIELD stfeseq name="input.b.page3.stfeseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfeseq
            
            #add-point:AFTER FIELD stfeseq name="input.a.page3.stfeseq"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stfa_m.stfa001 IS NOT NULL AND g_stfb3_d[g_detail_idx].stfeseq IS NOT NULL AND g_stfb3_d[g_detail_idx].stfe002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stfa_m.stfa001 != g_stfa001_t OR g_stfb3_d[g_detail_idx].stfeseq != g_stfb3_d_t.stfeseq OR g_stfb3_d[g_detail_idx].stfe002 != g_stfb3_d_t.stfe002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stfe_t WHERE "||"stfeent = '" ||g_enterprise|| "' AND "||"stfe001 = '"||g_stfa_m.stfa001 ||"' AND "|| "stfeseq = '"||g_stfb3_d[g_detail_idx].stfeseq ||"' AND "|| "stfe002 = '"||g_stfb3_d[g_detail_idx].stfe002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfeseq
            #add-point:ON CHANGE stfeseq name="input.g.page3.stfeseq"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfe003
            
            #add-point:AFTER FIELD stfe003 name="input.a.page3.stfe003"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfb3_d[l_ac].stfe003
            CALL ap_ref_array2(g_ref_fields,"SELECT stael003 FROM stael_t WHERE staelent='"||g_enterprise||"' AND stael001=? AND stael002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfb3_d[l_ac].stfe003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfb3_d[l_ac].stfe003_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfe003
            #add-point:BEFORE FIELD stfe003 name="input.b.page3.stfe003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfe003
            #add-point:ON CHANGE stfe003 name="input.g.page3.stfe003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfe004
            #add-point:BEFORE FIELD stfe004 name="input.b.page3.stfe004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfe004
            
            #add-point:AFTER FIELD stfe004 name="input.a.page3.stfe004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfe004
            #add-point:ON CHANGE stfe004 name="input.g.page3.stfe004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfe005
            #add-point:BEFORE FIELD stfe005 name="input.b.page3.stfe005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfe005
            
            #add-point:AFTER FIELD stfe005 name="input.a.page3.stfe005"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfe005
            #add-point:ON CHANGE stfe005 name="input.g.page3.stfe005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfe006
            #add-point:BEFORE FIELD stfe006 name="input.b.page3.stfe006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfe006
            
            #add-point:AFTER FIELD stfe006 name="input.a.page3.stfe006"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfe006
            #add-point:ON CHANGE stfe006 name="input.g.page3.stfe006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfe012
            #add-point:BEFORE FIELD stfe012 name="input.b.page3.stfe012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfe012
            
            #add-point:AFTER FIELD stfe012 name="input.a.page3.stfe012"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfe012
            #add-point:ON CHANGE stfe012 name="input.g.page3.stfe012"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfe007
            #add-point:BEFORE FIELD stfe007 name="input.b.page3.stfe007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfe007
            
            #add-point:AFTER FIELD stfe007 name="input.a.page3.stfe007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfe007
            #add-point:ON CHANGE stfe007 name="input.g.page3.stfe007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfe008
            #add-point:BEFORE FIELD stfe008 name="input.b.page3.stfe008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfe008
            
            #add-point:AFTER FIELD stfe008 name="input.a.page3.stfe008"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfe008
            #add-point:ON CHANGE stfe008 name="input.g.page3.stfe008"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfe009
            #add-point:BEFORE FIELD stfe009 name="input.b.page3.stfe009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfe009
            
            #add-point:AFTER FIELD stfe009 name="input.a.page3.stfe009"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfe009
            #add-point:ON CHANGE stfe009 name="input.g.page3.stfe009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfe010
            #add-point:BEFORE FIELD stfe010 name="input.b.page3.stfe010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfe010
            
            #add-point:AFTER FIELD stfe010 name="input.a.page3.stfe010"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfe010
            #add-point:ON CHANGE stfe010 name="input.g.page3.stfe010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfe011
            #add-point:BEFORE FIELD stfe011 name="input.b.page3.stfe011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfe011
            
            #add-point:AFTER FIELD stfe011 name="input.a.page3.stfe011"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfe011
            #add-point:ON CHANGE stfe011 name="input.g.page3.stfe011"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfesite
            #add-point:BEFORE FIELD stfesite name="input.b.page3.stfesite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfesite
            
            #add-point:AFTER FIELD stfesite name="input.a.page3.stfesite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfesite
            #add-point:ON CHANGE stfesite name="input.g.page3.stfesite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfeunit
            #add-point:BEFORE FIELD stfeunit name="input.b.page3.stfeunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfeunit
            
            #add-point:AFTER FIELD stfeunit name="input.a.page3.stfeunit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfeunit
            #add-point:ON CHANGE stfeunit name="input.g.page3.stfeunit"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page3.stfe002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfe002
            #add-point:ON ACTION controlp INFIELD stfe002 name="input.c.page3.stfe002"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.stfeseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfeseq
            #add-point:ON ACTION controlp INFIELD stfeseq name="input.c.page3.stfeseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.stfe003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfe003
            #add-point:ON ACTION controlp INFIELD stfe003 name="input.c.page3.stfe003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.stfe004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfe004
            #add-point:ON ACTION controlp INFIELD stfe004 name="input.c.page3.stfe004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.stfe005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfe005
            #add-point:ON ACTION controlp INFIELD stfe005 name="input.c.page3.stfe005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.stfe006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfe006
            #add-point:ON ACTION controlp INFIELD stfe006 name="input.c.page3.stfe006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.stfe012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfe012
            #add-point:ON ACTION controlp INFIELD stfe012 name="input.c.page3.stfe012"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.stfe007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfe007
            #add-point:ON ACTION controlp INFIELD stfe007 name="input.c.page3.stfe007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.stfe008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfe008
            #add-point:ON ACTION controlp INFIELD stfe008 name="input.c.page3.stfe008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.stfe009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfe009
            #add-point:ON ACTION controlp INFIELD stfe009 name="input.c.page3.stfe009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.stfe010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfe010
            #add-point:ON ACTION controlp INFIELD stfe010 name="input.c.page3.stfe010"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.stfe011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfe011
            #add-point:ON ACTION controlp INFIELD stfe011 name="input.c.page3.stfe011"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.stfesite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfesite
            #add-point:ON ACTION controlp INFIELD stfesite name="input.c.page3.stfesite"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.stfeunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfeunit
            #add-point:ON ACTION controlp INFIELD stfeunit name="input.c.page3.stfeunit"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page6 after_row name="input.body3.after_row"
            
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_stfb3_d[l_ac].* = g_stfb3_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm401_bcl6
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astm401_unlock_b("stfe_t","'6'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page6 after_row2 name="input.body3.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body3.after_input"
            
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_stfb3_d[li_reproduce_target].* = g_stfb3_d[li_reproduce].*
 
               LET g_stfb3_d[li_reproduce_target].stfeseq = NULL
               LET g_stfb3_d[li_reproduce_target].stfe002 = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_stfb3_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_stfb3_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_stfb4_d FROM s_detail4.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_7)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body4.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stfb4_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astm401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'7',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_stfb4_d.getLength()
            #add-point:資料輸入前 name="input.body4.before_input"
            
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stfb4_d[l_ac].* TO NULL 
            INITIALIZE g_stfb4_d_t.* TO NULL 
            INITIALIZE g_stfb4_d_o.* TO NULL 
            #公用欄位給值(單身7)
            
            #自定義預設值(單身7)
                  LET g_stfb4_d[l_ac].stfg004 = "0"
      LET g_stfb4_d[l_ac].stfg005 = "0"
 
            #add-point:modify段before備份 name="input.body4.insert.before_bak"
            
            #end add-point
            LET g_stfb4_d_t.* = g_stfb4_d[l_ac].*     #新輸入資料
            LET g_stfb4_d_o.* = g_stfb4_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astm401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body4.insert.after_set_entry_b"
            
            #end add-point
            CALL astm401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stfb4_d[li_reproduce_target].* = g_stfb4_d[li_reproduce].*
 
               LET g_stfb4_d[li_reproduce_target].stfgseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body4.before_insert"
            
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body4.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[7] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 7
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astm401_cl USING g_enterprise,g_stfa_m.stfa001
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm401_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astm401_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_stfb4_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stfb4_d[l_ac].stfgseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_stfb4_d_t.* = g_stfb4_d[l_ac].*  #BACKUP
               LET g_stfb4_d_o.* = g_stfb4_d[l_ac].*  #BACKUP
               CALL astm401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body4.after_set_entry_b"
               
               #end add-point  
               CALL astm401_set_no_entry_b(l_cmd)
               IF NOT astm401_lock_b("stfg_t","'7'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astm401_bcl7 INTO g_stfb4_d[l_ac].stfgseq,g_stfb4_d[l_ac].stfg003,g_stfb4_d[l_ac].stfg002, 
                      g_stfb4_d[l_ac].stfg004,g_stfb4_d[l_ac].stfg005,g_stfb4_d[l_ac].stfgacti,g_stfb4_d[l_ac].stfgsite, 
                      g_stfb4_d[l_ac].stfgunit
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stfb4_d_mask_o[l_ac].* =  g_stfb4_d[l_ac].*
                  CALL astm401_stfg_t_mask()
                  LET g_stfb4_d_mask_n[l_ac].* =  g_stfb4_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astm401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body4.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body4.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body4.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身7刪除前 name="input.body4.b_delete"
               
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stfa_m.stfa001
               LET gs_keys[gs_keys.getLength()+1] = g_stfb4_d_t.stfgseq
            
               #刪除同層單身
               IF NOT astm401_delete_b('stfg_t',gs_keys,"'7'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astm401_key_delete_b(gs_keys,'stfg_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身7刪除中 name="input.body4.m_delete"
               
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astm401_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身7刪除後 name="input.body4.a_delete"
               
               #end add-point
               LET l_count = g_stfb_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body4.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stfb4_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身7新增前 name="input.body4.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stfg_t 
             WHERE stfgent = g_enterprise AND stfg001 = g_stfa_m.stfa001
               AND stfgseq = g_stfb4_d[l_ac].stfgseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身7新增前 name="input.body4.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys[2] = g_stfb4_d[g_detail_idx].stfgseq
               CALL astm401_insert_b('stfg_t',gs_keys,"'7'")
                           
               #add-point:單身新增後7 name="input.body4.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_stfb_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfg_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astm401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body4.after_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_stfb4_d[l_ac].* = g_stfb4_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm401_bcl7
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_stfb4_d[l_ac].* = g_stfb4_d_t.*
            ELSE
               #add-point:單身page7修改前 name="input.body4.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身7)
               
               
               #將遮罩欄位還原
               CALL astm401_stfg_t_mask_restore('restore_mask_o')
                              
               UPDATE stfg_t SET (stfg001,stfgseq,stfg003,stfg002,stfg004,stfg005,stfgacti,stfgsite, 
                   stfgunit) = (g_stfa_m.stfa001,g_stfb4_d[l_ac].stfgseq,g_stfb4_d[l_ac].stfg003,g_stfb4_d[l_ac].stfg002, 
                   g_stfb4_d[l_ac].stfg004,g_stfb4_d[l_ac].stfg005,g_stfb4_d[l_ac].stfgacti,g_stfb4_d[l_ac].stfgsite, 
                   g_stfb4_d[l_ac].stfgunit) #自訂欄位頁簽
                WHERE stfgent = g_enterprise AND stfg001 = g_stfa_m.stfa001
                  AND stfgseq = g_stfb4_d_t.stfgseq #項次 
                  
               #add-point:單身page7修改中 name="input.body4.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_stfb4_d[l_ac].* = g_stfb4_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfg_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_stfb4_d[l_ac].* = g_stfb4_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfg_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys_bak[1] = g_stfa001_t
               LET gs_keys[2] = g_stfb4_d[g_detail_idx].stfgseq
               LET gs_keys_bak[2] = g_stfb4_d_t.stfgseq
               CALL astm401_update_b('stfg_t',gs_keys,gs_keys_bak,"'7'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astm401_stfg_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_stfb4_d[g_detail_idx].stfgseq = g_stfb4_d_t.stfgseq 
                  ) THEN
                  LET gs_keys[01] = g_stfa_m.stfa001
                  LET gs_keys[gs_keys.getLength()+1] = g_stfb4_d_t.stfgseq
                  CALL astm401_key_update_b(gs_keys,'stfg_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb4_d_t)
               LET g_log2 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb4_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page7修改後 name="input.body4.a_update"
               
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfgseq
            #add-point:BEFORE FIELD stfgseq name="input.b.page4.stfgseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfgseq
            
            #add-point:AFTER FIELD stfgseq name="input.a.page4.stfgseq"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stfa_m.stfa001 IS NOT NULL AND g_stfb4_d[g_detail_idx].stfgseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stfa_m.stfa001 != g_stfa001_t OR g_stfb4_d[g_detail_idx].stfgseq != g_stfb4_d_t.stfgseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stfg_t WHERE "||"stfgent = '" ||g_enterprise|| "' AND "||"stfg001 = '"||g_stfa_m.stfa001 ||"' AND "|| "stfgseq = '"||g_stfb4_d[g_detail_idx].stfgseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfgseq
            #add-point:ON CHANGE stfgseq name="input.g.page4.stfgseq"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfg003
            
            #add-point:AFTER FIELD stfg003 name="input.a.page4.stfg003"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfg003
            #add-point:BEFORE FIELD stfg003 name="input.b.page4.stfg003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfg003
            #add-point:ON CHANGE stfg003 name="input.g.page4.stfg003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfg003_desc
            #add-point:BEFORE FIELD stfg003_desc name="input.b.page4.stfg003_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfg003_desc
            
            #add-point:AFTER FIELD stfg003_desc name="input.a.page4.stfg003_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfg003_desc
            #add-point:ON CHANGE stfg003_desc name="input.g.page4.stfg003_desc"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfg002
            
            #add-point:AFTER FIELD stfg002 name="input.a.page4.stfg002"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfg002
            #add-point:BEFORE FIELD stfg002 name="input.b.page4.stfg002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfg002
            #add-point:ON CHANGE stfg002 name="input.g.page4.stfg002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfg002_desc
            #add-point:BEFORE FIELD stfg002_desc name="input.b.page4.stfg002_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfg002_desc
            
            #add-point:AFTER FIELD stfg002_desc name="input.a.page4.stfg002_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfg002_desc
            #add-point:ON CHANGE stfg002_desc name="input.g.page4.stfg002_desc"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfg004
            #add-point:BEFORE FIELD stfg004 name="input.b.page4.stfg004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfg004
            
            #add-point:AFTER FIELD stfg004 name="input.a.page4.stfg004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfg004
            #add-point:ON CHANGE stfg004 name="input.g.page4.stfg004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfg005
            #add-point:BEFORE FIELD stfg005 name="input.b.page4.stfg005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfg005
            
            #add-point:AFTER FIELD stfg005 name="input.a.page4.stfg005"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfg005
            #add-point:ON CHANGE stfg005 name="input.g.page4.stfg005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfgacti
            #add-point:BEFORE FIELD stfgacti name="input.b.page4.stfgacti"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfgacti
            
            #add-point:AFTER FIELD stfgacti name="input.a.page4.stfgacti"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfgacti
            #add-point:ON CHANGE stfgacti name="input.g.page4.stfgacti"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfgsite
            #add-point:BEFORE FIELD stfgsite name="input.b.page4.stfgsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfgsite
            
            #add-point:AFTER FIELD stfgsite name="input.a.page4.stfgsite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfgsite
            #add-point:ON CHANGE stfgsite name="input.g.page4.stfgsite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfgunit
            #add-point:BEFORE FIELD stfgunit name="input.b.page4.stfgunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfgunit
            
            #add-point:AFTER FIELD stfgunit name="input.a.page4.stfgunit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfgunit
            #add-point:ON CHANGE stfgunit name="input.g.page4.stfgunit"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page4.stfgseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfgseq
            #add-point:ON ACTION controlp INFIELD stfgseq name="input.c.page4.stfgseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.stfg003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfg003
            #add-point:ON ACTION controlp INFIELD stfg003 name="input.c.page4.stfg003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.stfg003_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfg003_desc
            #add-point:ON ACTION controlp INFIELD stfg003_desc name="input.c.page4.stfg003_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.stfg002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfg002
            #add-point:ON ACTION controlp INFIELD stfg002 name="input.c.page4.stfg002"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.stfg002_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfg002_desc
            #add-point:ON ACTION controlp INFIELD stfg002_desc name="input.c.page4.stfg002_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.stfg004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfg004
            #add-point:ON ACTION controlp INFIELD stfg004 name="input.c.page4.stfg004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.stfg005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfg005
            #add-point:ON ACTION controlp INFIELD stfg005 name="input.c.page4.stfg005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.stfgacti
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfgacti
            #add-point:ON ACTION controlp INFIELD stfgacti name="input.c.page4.stfgacti"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.stfgsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfgsite
            #add-point:ON ACTION controlp INFIELD stfgsite name="input.c.page4.stfgsite"
            
            #END add-point
 
 
         #Ctrlp:input.c.page4.stfgunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfgunit
            #add-point:ON ACTION controlp INFIELD stfgunit name="input.c.page4.stfgunit"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page7 after_row name="input.body4.after_row"
            
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_stfb4_d[l_ac].* = g_stfb4_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm401_bcl7
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astm401_unlock_b("stfg_t","'7'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page7 after_row2 name="input.body4.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body4.after_input"
            
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_stfb4_d[li_reproduce_target].* = g_stfb4_d[li_reproduce].*
 
               LET g_stfb4_d[li_reproduce_target].stfgseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_stfb4_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_stfb4_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_stfb5_d FROM s_detail5.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_8)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body5.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stfb5_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astm401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'8',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_stfb5_d.getLength()
            #add-point:資料輸入前 name="input.body5.before_input"
            
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stfb5_d[l_ac].* TO NULL 
            INITIALIZE g_stfb5_d_t.* TO NULL 
            INITIALIZE g_stfb5_d_o.* TO NULL 
            #公用欄位給值(單身8)
            
            #自定義預設值(單身8)
            
            #add-point:modify段before備份 name="input.body5.insert.before_bak"
            
            #end add-point
            LET g_stfb5_d_t.* = g_stfb5_d[l_ac].*     #新輸入資料
            LET g_stfb5_d_o.* = g_stfb5_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astm401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body5.insert.after_set_entry_b"
            
            #end add-point
            CALL astm401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stfb5_d[li_reproduce_target].* = g_stfb5_d[li_reproduce].*
 
               LET g_stfb5_d[li_reproduce_target].stfhseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body5.before_insert"
            
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body5.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[8] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 8
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astm401_cl USING g_enterprise,g_stfa_m.stfa001
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm401_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astm401_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_stfb5_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stfb5_d[l_ac].stfhseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_stfb5_d_t.* = g_stfb5_d[l_ac].*  #BACKUP
               LET g_stfb5_d_o.* = g_stfb5_d[l_ac].*  #BACKUP
               CALL astm401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body5.after_set_entry_b"
               
               #end add-point  
               CALL astm401_set_no_entry_b(l_cmd)
               IF NOT astm401_lock_b("stfh_t","'8'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astm401_bcl8 INTO g_stfb5_d[l_ac].stfhseq,g_stfb5_d[l_ac].stfh002,g_stfb5_d[l_ac].stfh003, 
                      g_stfb5_d[l_ac].stfhacti,g_stfb5_d[l_ac].stfhsite,g_stfb5_d[l_ac].stfhunit
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stfb5_d_mask_o[l_ac].* =  g_stfb5_d[l_ac].*
                  CALL astm401_stfh_t_mask()
                  LET g_stfb5_d_mask_n[l_ac].* =  g_stfb5_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astm401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body5.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body5.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body5.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身8刪除前 name="input.body5.b_delete"
               
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stfa_m.stfa001
               LET gs_keys[gs_keys.getLength()+1] = g_stfb5_d_t.stfhseq
            
               #刪除同層單身
               IF NOT astm401_delete_b('stfh_t',gs_keys,"'8'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astm401_key_delete_b(gs_keys,'stfh_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身8刪除中 name="input.body5.m_delete"
               
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astm401_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身8刪除後 name="input.body5.a_delete"
               
               #end add-point
               LET l_count = g_stfb_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body5.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stfb5_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身8新增前 name="input.body5.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stfh_t 
             WHERE stfhent = g_enterprise AND stfh001 = g_stfa_m.stfa001
               AND stfhseq = g_stfb5_d[l_ac].stfhseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身8新增前 name="input.body5.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys[2] = g_stfb5_d[g_detail_idx].stfhseq
               CALL astm401_insert_b('stfh_t',gs_keys,"'8'")
                           
               #add-point:單身新增後8 name="input.body5.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_stfb_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfh_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astm401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body5.after_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_stfb5_d[l_ac].* = g_stfb5_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm401_bcl8
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_stfb5_d[l_ac].* = g_stfb5_d_t.*
            ELSE
               #add-point:單身page8修改前 name="input.body5.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身8)
               
               
               #將遮罩欄位還原
               CALL astm401_stfh_t_mask_restore('restore_mask_o')
                              
               UPDATE stfh_t SET (stfh001,stfhseq,stfh002,stfh003,stfhacti,stfhsite,stfhunit) = (g_stfa_m.stfa001, 
                   g_stfb5_d[l_ac].stfhseq,g_stfb5_d[l_ac].stfh002,g_stfb5_d[l_ac].stfh003,g_stfb5_d[l_ac].stfhacti, 
                   g_stfb5_d[l_ac].stfhsite,g_stfb5_d[l_ac].stfhunit) #自訂欄位頁簽
                WHERE stfhent = g_enterprise AND stfh001 = g_stfa_m.stfa001
                  AND stfhseq = g_stfb5_d_t.stfhseq #項次 
                  
               #add-point:單身page8修改中 name="input.body5.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_stfb5_d[l_ac].* = g_stfb5_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfh_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_stfb5_d[l_ac].* = g_stfb5_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfh_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys_bak[1] = g_stfa001_t
               LET gs_keys[2] = g_stfb5_d[g_detail_idx].stfhseq
               LET gs_keys_bak[2] = g_stfb5_d_t.stfhseq
               CALL astm401_update_b('stfh_t',gs_keys,gs_keys_bak,"'8'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astm401_stfh_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_stfb5_d[g_detail_idx].stfhseq = g_stfb5_d_t.stfhseq 
                  ) THEN
                  LET gs_keys[01] = g_stfa_m.stfa001
                  LET gs_keys[gs_keys.getLength()+1] = g_stfb5_d_t.stfhseq
                  CALL astm401_key_update_b(gs_keys,'stfh_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb5_d_t)
               LET g_log2 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb5_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page8修改後 name="input.body5.a_update"
               
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfhseq
            #add-point:BEFORE FIELD stfhseq name="input.b.page5.stfhseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfhseq
            
            #add-point:AFTER FIELD stfhseq name="input.a.page5.stfhseq"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stfa_m.stfa001 IS NOT NULL AND g_stfb5_d[g_detail_idx].stfhseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stfa_m.stfa001 != g_stfa001_t OR g_stfb5_d[g_detail_idx].stfhseq != g_stfb5_d_t.stfhseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stfh_t WHERE "||"stfhent = '" ||g_enterprise|| "' AND "||"stfh001 = '"||g_stfa_m.stfa001 ||"' AND "|| "stfhseq = '"||g_stfb5_d[g_detail_idx].stfhseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfhseq
            #add-point:ON CHANGE stfhseq name="input.g.page5.stfhseq"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfh002
            #add-point:BEFORE FIELD stfh002 name="input.b.page5.stfh002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfh002
            
            #add-point:AFTER FIELD stfh002 name="input.a.page5.stfh002"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfh002
            #add-point:ON CHANGE stfh002 name="input.g.page5.stfh002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfh003
            #add-point:BEFORE FIELD stfh003 name="input.b.page5.stfh003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfh003
            
            #add-point:AFTER FIELD stfh003 name="input.a.page5.stfh003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfh003
            #add-point:ON CHANGE stfh003 name="input.g.page5.stfh003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfhacti
            #add-point:BEFORE FIELD stfhacti name="input.b.page5.stfhacti"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfhacti
            
            #add-point:AFTER FIELD stfhacti name="input.a.page5.stfhacti"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfhacti
            #add-point:ON CHANGE stfhacti name="input.g.page5.stfhacti"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfhsite
            #add-point:BEFORE FIELD stfhsite name="input.b.page5.stfhsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfhsite
            
            #add-point:AFTER FIELD stfhsite name="input.a.page5.stfhsite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfhsite
            #add-point:ON CHANGE stfhsite name="input.g.page5.stfhsite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfhunit
            #add-point:BEFORE FIELD stfhunit name="input.b.page5.stfhunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfhunit
            
            #add-point:AFTER FIELD stfhunit name="input.a.page5.stfhunit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfhunit
            #add-point:ON CHANGE stfhunit name="input.g.page5.stfhunit"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page5.stfhseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfhseq
            #add-point:ON ACTION controlp INFIELD stfhseq name="input.c.page5.stfhseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page5.stfh002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfh002
            #add-point:ON ACTION controlp INFIELD stfh002 name="input.c.page5.stfh002"
            
            #END add-point
 
 
         #Ctrlp:input.c.page5.stfh003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfh003
            #add-point:ON ACTION controlp INFIELD stfh003 name="input.c.page5.stfh003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page5.stfhacti
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfhacti
            #add-point:ON ACTION controlp INFIELD stfhacti name="input.c.page5.stfhacti"
            
            #END add-point
 
 
         #Ctrlp:input.c.page5.stfhsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfhsite
            #add-point:ON ACTION controlp INFIELD stfhsite name="input.c.page5.stfhsite"
            
            #END add-point
 
 
         #Ctrlp:input.c.page5.stfhunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfhunit
            #add-point:ON ACTION controlp INFIELD stfhunit name="input.c.page5.stfhunit"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page8 after_row name="input.body5.after_row"
            
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_stfb5_d[l_ac].* = g_stfb5_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm401_bcl8
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astm401_unlock_b("stfh_t","'8'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page8 after_row2 name="input.body5.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body5.after_input"
            
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_stfb5_d[li_reproduce_target].* = g_stfb5_d[li_reproduce].*
 
               LET g_stfb5_d[li_reproduce_target].stfhseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_stfb5_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_stfb5_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_stfb6_d FROM s_detail6.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_9)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body6.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stfb6_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astm401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'9',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_stfb6_d.getLength()
            #add-point:資料輸入前 name="input.body6.before_input"
            
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stfb6_d[l_ac].* TO NULL 
            INITIALIZE g_stfb6_d_t.* TO NULL 
            INITIALIZE g_stfb6_d_o.* TO NULL 
            #公用欄位給值(單身9)
            
            #自定義預設值(單身9)
                  LET g_stfb6_d[l_ac].stfi004 = "0"
      LET g_stfb6_d[l_ac].stfi012 = "0"
 
            #add-point:modify段before備份 name="input.body6.insert.before_bak"
            
            #end add-point
            LET g_stfb6_d_t.* = g_stfb6_d[l_ac].*     #新輸入資料
            LET g_stfb6_d_o.* = g_stfb6_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astm401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body6.insert.after_set_entry_b"
            
            #end add-point
            CALL astm401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stfb6_d[li_reproduce_target].* = g_stfb6_d[li_reproduce].*
 
               LET g_stfb6_d[li_reproduce_target].stfiseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body6.before_insert"
            
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body6.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[9] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 9
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astm401_cl USING g_enterprise,g_stfa_m.stfa001
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm401_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astm401_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_stfb6_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stfb6_d[l_ac].stfiseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_stfb6_d_t.* = g_stfb6_d[l_ac].*  #BACKUP
               LET g_stfb6_d_o.* = g_stfb6_d[l_ac].*  #BACKUP
               CALL astm401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body6.after_set_entry_b"
               
               #end add-point  
               CALL astm401_set_no_entry_b(l_cmd)
               IF NOT astm401_lock_b("stfi_t","'9'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astm401_bcl9 INTO g_stfb6_d[l_ac].stfiseq,g_stfb6_d[l_ac].stfi002,g_stfb6_d[l_ac].stfi003, 
                      g_stfb6_d[l_ac].stfi005,g_stfb6_d[l_ac].stfi006,g_stfb6_d[l_ac].stfi004,g_stfb6_d[l_ac].stfi007, 
                      g_stfb6_d[l_ac].stfi010,g_stfb6_d[l_ac].stfi008,g_stfb6_d[l_ac].stfi009,g_stfb6_d[l_ac].stfiacti, 
                      g_stfb6_d[l_ac].stfi011,g_stfb6_d[l_ac].stfi012,g_stfb6_d[l_ac].stfisite,g_stfb6_d[l_ac].stfiunit 
 
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stfb6_d_mask_o[l_ac].* =  g_stfb6_d[l_ac].*
                  CALL astm401_stfi_t_mask()
                  LET g_stfb6_d_mask_n[l_ac].* =  g_stfb6_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astm401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body6.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body6.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body6.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身9刪除前 name="input.body6.b_delete"
               
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stfa_m.stfa001
               LET gs_keys[gs_keys.getLength()+1] = g_stfb6_d_t.stfiseq
            
               #刪除同層單身
               IF NOT astm401_delete_b('stfi_t',gs_keys,"'9'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astm401_key_delete_b(gs_keys,'stfi_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身9刪除中 name="input.body6.m_delete"
               
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astm401_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身9刪除後 name="input.body6.a_delete"
               
               #end add-point
               LET l_count = g_stfb_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body6.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stfb6_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身9新增前 name="input.body6.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stfi_t 
             WHERE stfient = g_enterprise AND stfi001 = g_stfa_m.stfa001
               AND stfiseq = g_stfb6_d[l_ac].stfiseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身9新增前 name="input.body6.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys[2] = g_stfb6_d[g_detail_idx].stfiseq
               CALL astm401_insert_b('stfi_t',gs_keys,"'9'")
                           
               #add-point:單身新增後9 name="input.body6.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_stfb_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfi_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astm401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body6.after_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_stfb6_d[l_ac].* = g_stfb6_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm401_bcl9
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_stfb6_d[l_ac].* = g_stfb6_d_t.*
            ELSE
               #add-point:單身page9修改前 name="input.body6.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身9)
               
               
               #將遮罩欄位還原
               CALL astm401_stfi_t_mask_restore('restore_mask_o')
                              
               UPDATE stfi_t SET (stfi001,stfiseq,stfi002,stfi003,stfi005,stfi006,stfi004,stfi007,stfi010, 
                   stfi008,stfi009,stfiacti,stfi011,stfi012,stfisite,stfiunit) = (g_stfa_m.stfa001,g_stfb6_d[l_ac].stfiseq, 
                   g_stfb6_d[l_ac].stfi002,g_stfb6_d[l_ac].stfi003,g_stfb6_d[l_ac].stfi005,g_stfb6_d[l_ac].stfi006, 
                   g_stfb6_d[l_ac].stfi004,g_stfb6_d[l_ac].stfi007,g_stfb6_d[l_ac].stfi010,g_stfb6_d[l_ac].stfi008, 
                   g_stfb6_d[l_ac].stfi009,g_stfb6_d[l_ac].stfiacti,g_stfb6_d[l_ac].stfi011,g_stfb6_d[l_ac].stfi012, 
                   g_stfb6_d[l_ac].stfisite,g_stfb6_d[l_ac].stfiunit) #自訂欄位頁簽
                WHERE stfient = g_enterprise AND stfi001 = g_stfa_m.stfa001
                  AND stfiseq = g_stfb6_d_t.stfiseq #項次 
                  
               #add-point:單身page9修改中 name="input.body6.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_stfb6_d[l_ac].* = g_stfb6_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfi_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_stfb6_d[l_ac].* = g_stfb6_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfi_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys_bak[1] = g_stfa001_t
               LET gs_keys[2] = g_stfb6_d[g_detail_idx].stfiseq
               LET gs_keys_bak[2] = g_stfb6_d_t.stfiseq
               CALL astm401_update_b('stfi_t',gs_keys,gs_keys_bak,"'9'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astm401_stfi_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_stfb6_d[g_detail_idx].stfiseq = g_stfb6_d_t.stfiseq 
                  ) THEN
                  LET gs_keys[01] = g_stfa_m.stfa001
                  LET gs_keys[gs_keys.getLength()+1] = g_stfb6_d_t.stfiseq
                  CALL astm401_key_update_b(gs_keys,'stfi_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb6_d_t)
               LET g_log2 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb6_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page9修改後 name="input.body6.a_update"
               
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfiseq
            #add-point:BEFORE FIELD stfiseq name="input.b.page6.stfiseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfiseq
            
            #add-point:AFTER FIELD stfiseq name="input.a.page6.stfiseq"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stfa_m.stfa001 IS NOT NULL AND g_stfb6_d[g_detail_idx].stfiseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stfa_m.stfa001 != g_stfa001_t OR g_stfb6_d[g_detail_idx].stfiseq != g_stfb6_d_t.stfiseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stfi_t WHERE "||"stfient = '" ||g_enterprise|| "' AND "||"stfi001 = '"||g_stfa_m.stfa001 ||"' AND "|| "stfiseq = '"||g_stfb6_d[g_detail_idx].stfiseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfiseq
            #add-point:ON CHANGE stfiseq name="input.g.page6.stfiseq"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfi002
            #add-point:BEFORE FIELD stfi002 name="input.b.page6.stfi002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfi002
            
            #add-point:AFTER FIELD stfi002 name="input.a.page6.stfi002"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfi002
            #add-point:ON CHANGE stfi002 name="input.g.page6.stfi002"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfi003
            
            #add-point:AFTER FIELD stfi003 name="input.a.page6.stfi003"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfb6_d[l_ac].stfi003
            CALL ap_ref_array2(g_ref_fields,"SELECT stael003 FROM stael_t WHERE staelent='"||g_enterprise||"' AND stael001=? AND stael002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfb6_d[l_ac].stfi003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfb6_d[l_ac].stfi003_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfi003
            #add-point:BEFORE FIELD stfi003 name="input.b.page6.stfi003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfi003
            #add-point:ON CHANGE stfi003 name="input.g.page6.stfi003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfi005
            #add-point:BEFORE FIELD stfi005 name="input.b.page6.stfi005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfi005
            
            #add-point:AFTER FIELD stfi005 name="input.a.page6.stfi005"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfi005
            #add-point:ON CHANGE stfi005 name="input.g.page6.stfi005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfi006
            #add-point:BEFORE FIELD stfi006 name="input.b.page6.stfi006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfi006
            
            #add-point:AFTER FIELD stfi006 name="input.a.page6.stfi006"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfi006
            #add-point:ON CHANGE stfi006 name="input.g.page6.stfi006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfi004
            #add-point:BEFORE FIELD stfi004 name="input.b.page6.stfi004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfi004
            
            #add-point:AFTER FIELD stfi004 name="input.a.page6.stfi004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfi004
            #add-point:ON CHANGE stfi004 name="input.g.page6.stfi004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfi007
            #add-point:BEFORE FIELD stfi007 name="input.b.page6.stfi007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfi007
            
            #add-point:AFTER FIELD stfi007 name="input.a.page6.stfi007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfi007
            #add-point:ON CHANGE stfi007 name="input.g.page6.stfi007"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfi010
            
            #add-point:AFTER FIELD stfi010 name="input.a.page6.stfi010"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfb6_d[l_ac].stfi010
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2132' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfb6_d[l_ac].stfi010_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfb6_d[l_ac].stfi010_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfi010
            #add-point:BEFORE FIELD stfi010 name="input.b.page6.stfi010"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfi010
            #add-point:ON CHANGE stfi010 name="input.g.page6.stfi010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfi008
            #add-point:BEFORE FIELD stfi008 name="input.b.page6.stfi008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfi008
            
            #add-point:AFTER FIELD stfi008 name="input.a.page6.stfi008"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfi008
            #add-point:ON CHANGE stfi008 name="input.g.page6.stfi008"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfi009
            #add-point:BEFORE FIELD stfi009 name="input.b.page6.stfi009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfi009
            
            #add-point:AFTER FIELD stfi009 name="input.a.page6.stfi009"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfi009
            #add-point:ON CHANGE stfi009 name="input.g.page6.stfi009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfiacti
            #add-point:BEFORE FIELD stfiacti name="input.b.page6.stfiacti"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfiacti
            
            #add-point:AFTER FIELD stfiacti name="input.a.page6.stfiacti"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfiacti
            #add-point:ON CHANGE stfiacti name="input.g.page6.stfiacti"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfisite
            #add-point:BEFORE FIELD stfisite name="input.b.page6.stfisite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfisite
            
            #add-point:AFTER FIELD stfisite name="input.a.page6.stfisite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfisite
            #add-point:ON CHANGE stfisite name="input.g.page6.stfisite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfiunit
            #add-point:BEFORE FIELD stfiunit name="input.b.page6.stfiunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfiunit
            
            #add-point:AFTER FIELD stfiunit name="input.a.page6.stfiunit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfiunit
            #add-point:ON CHANGE stfiunit name="input.g.page6.stfiunit"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page6.stfiseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfiseq
            #add-point:ON ACTION controlp INFIELD stfiseq name="input.c.page6.stfiseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page6.stfi002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfi002
            #add-point:ON ACTION controlp INFIELD stfi002 name="input.c.page6.stfi002"
            
            #END add-point
 
 
         #Ctrlp:input.c.page6.stfi003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfi003
            #add-point:ON ACTION controlp INFIELD stfi003 name="input.c.page6.stfi003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page6.stfi005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfi005
            #add-point:ON ACTION controlp INFIELD stfi005 name="input.c.page6.stfi005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page6.stfi006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfi006
            #add-point:ON ACTION controlp INFIELD stfi006 name="input.c.page6.stfi006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page6.stfi004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfi004
            #add-point:ON ACTION controlp INFIELD stfi004 name="input.c.page6.stfi004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page6.stfi007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfi007
            #add-point:ON ACTION controlp INFIELD stfi007 name="input.c.page6.stfi007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page6.stfi010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfi010
            #add-point:ON ACTION controlp INFIELD stfi010 name="input.c.page6.stfi010"
            
            #END add-point
 
 
         #Ctrlp:input.c.page6.stfi008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfi008
            #add-point:ON ACTION controlp INFIELD stfi008 name="input.c.page6.stfi008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page6.stfi009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfi009
            #add-point:ON ACTION controlp INFIELD stfi009 name="input.c.page6.stfi009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page6.stfiacti
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfiacti
            #add-point:ON ACTION controlp INFIELD stfiacti name="input.c.page6.stfiacti"
            
            #END add-point
 
 
         #Ctrlp:input.c.page6.stfisite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfisite
            #add-point:ON ACTION controlp INFIELD stfisite name="input.c.page6.stfisite"
            
            #END add-point
 
 
         #Ctrlp:input.c.page6.stfiunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfiunit
            #add-point:ON ACTION controlp INFIELD stfiunit name="input.c.page6.stfiunit"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page9 after_row name="input.body6.after_row"
            
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_stfb6_d[l_ac].* = g_stfb6_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm401_bcl9
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astm401_unlock_b("stfi_t","'9'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page9 after_row2 name="input.body6.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body6.after_input"
            
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_stfb6_d[li_reproduce_target].* = g_stfb6_d[li_reproduce].*
 
               LET g_stfb6_d[li_reproduce_target].stfiseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_stfb6_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_stfb6_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_stfb7_d FROM s_detail7.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_10)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body7.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stfb7_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astm401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'10',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_stfb7_d.getLength()
            #add-point:資料輸入前 name="input.body7.before_input"
            
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stfb7_d[l_ac].* TO NULL 
            INITIALIZE g_stfb7_d_t.* TO NULL 
            INITIALIZE g_stfb7_d_o.* TO NULL 
            #公用欄位給值(單身10)
            
            #自定義預設值(單身10)
            
            #add-point:modify段before備份 name="input.body7.insert.before_bak"
            
            #end add-point
            LET g_stfb7_d_t.* = g_stfb7_d[l_ac].*     #新輸入資料
            LET g_stfb7_d_o.* = g_stfb7_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astm401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body7.insert.after_set_entry_b"
            
            #end add-point
            CALL astm401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stfb7_d[li_reproduce_target].* = g_stfb7_d[li_reproduce].*
 
               LET g_stfb7_d[li_reproduce_target].stfjseq = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body7.before_insert"
            
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body7.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[10] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 10
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astm401_cl USING g_enterprise,g_stfa_m.stfa001
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm401_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astm401_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_stfb7_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stfb7_d[l_ac].stfjseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_stfb7_d_t.* = g_stfb7_d[l_ac].*  #BACKUP
               LET g_stfb7_d_o.* = g_stfb7_d[l_ac].*  #BACKUP
               CALL astm401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body7.after_set_entry_b"
               
               #end add-point  
               CALL astm401_set_no_entry_b(l_cmd)
               IF NOT astm401_lock_b("stfj_t","'10'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astm401_bcl10 INTO g_stfb7_d[l_ac].stfjseq,g_stfb7_d[l_ac].stfj002,g_stfb7_d[l_ac].stfj003, 
                      g_stfb7_d[l_ac].stfj004,g_stfb7_d[l_ac].stfj005,g_stfb7_d[l_ac].stfj006,g_stfb7_d[l_ac].stfjsite, 
                      g_stfb7_d[l_ac].stfjunit
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stfb7_d_mask_o[l_ac].* =  g_stfb7_d[l_ac].*
                  CALL astm401_stfj_t_mask()
                  LET g_stfb7_d_mask_n[l_ac].* =  g_stfb7_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astm401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body7.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body7.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body7.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身10刪除前 name="input.body7.b_delete"
               
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stfa_m.stfa001
               LET gs_keys[gs_keys.getLength()+1] = g_stfb7_d_t.stfjseq
            
               #刪除同層單身
               IF NOT astm401_delete_b('stfj_t',gs_keys,"'10'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astm401_key_delete_b(gs_keys,'stfj_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身10刪除中 name="input.body7.m_delete"
               
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astm401_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身10刪除後 name="input.body7.a_delete"
               
               #end add-point
               LET l_count = g_stfb_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body7.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stfb7_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身10新增前 name="input.body7.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stfj_t 
             WHERE stfjent = g_enterprise AND stfj001 = g_stfa_m.stfa001
               AND stfjseq = g_stfb7_d[l_ac].stfjseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身10新增前 name="input.body7.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys[2] = g_stfb7_d[g_detail_idx].stfjseq
               CALL astm401_insert_b('stfj_t',gs_keys,"'10'")
                           
               #add-point:單身新增後10 name="input.body7.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_stfb_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfj_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astm401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body7.after_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_stfb7_d[l_ac].* = g_stfb7_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm401_bcl10
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_stfb7_d[l_ac].* = g_stfb7_d_t.*
            ELSE
               #add-point:單身page10修改前 name="input.body7.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身10)
               
               
               #將遮罩欄位還原
               CALL astm401_stfj_t_mask_restore('restore_mask_o')
                              
               UPDATE stfj_t SET (stfj001,stfjseq,stfj002,stfj003,stfj004,stfj005,stfj006,stfjsite,stfjunit) = (g_stfa_m.stfa001, 
                   g_stfb7_d[l_ac].stfjseq,g_stfb7_d[l_ac].stfj002,g_stfb7_d[l_ac].stfj003,g_stfb7_d[l_ac].stfj004, 
                   g_stfb7_d[l_ac].stfj005,g_stfb7_d[l_ac].stfj006,g_stfb7_d[l_ac].stfjsite,g_stfb7_d[l_ac].stfjunit)  
                   #自訂欄位頁簽
                WHERE stfjent = g_enterprise AND stfj001 = g_stfa_m.stfa001
                  AND stfjseq = g_stfb7_d_t.stfjseq #項次 
                  
               #add-point:單身page10修改中 name="input.body7.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_stfb7_d[l_ac].* = g_stfb7_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfj_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_stfb7_d[l_ac].* = g_stfb7_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfj_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys_bak[1] = g_stfa001_t
               LET gs_keys[2] = g_stfb7_d[g_detail_idx].stfjseq
               LET gs_keys_bak[2] = g_stfb7_d_t.stfjseq
               CALL astm401_update_b('stfj_t',gs_keys,gs_keys_bak,"'10'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astm401_stfj_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_stfb7_d[g_detail_idx].stfjseq = g_stfb7_d_t.stfjseq 
                  ) THEN
                  LET gs_keys[01] = g_stfa_m.stfa001
                  LET gs_keys[gs_keys.getLength()+1] = g_stfb7_d_t.stfjseq
                  CALL astm401_key_update_b(gs_keys,'stfj_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb7_d_t)
               LET g_log2 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb7_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page10修改後 name="input.body7.a_update"
               
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfjseq
            #add-point:BEFORE FIELD stfjseq name="input.b.page7.stfjseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfjseq
            
            #add-point:AFTER FIELD stfjseq name="input.a.page7.stfjseq"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stfa_m.stfa001 IS NOT NULL AND g_stfb7_d[g_detail_idx].stfjseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stfa_m.stfa001 != g_stfa001_t OR g_stfb7_d[g_detail_idx].stfjseq != g_stfb7_d_t.stfjseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stfj_t WHERE "||"stfjent = '" ||g_enterprise|| "' AND "||"stfj001 = '"||g_stfa_m.stfa001 ||"' AND "|| "stfjseq = '"||g_stfb7_d[g_detail_idx].stfjseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfjseq
            #add-point:ON CHANGE stfjseq name="input.g.page7.stfjseq"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfj002
            #add-point:BEFORE FIELD stfj002 name="input.b.page7.stfj002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfj002
            
            #add-point:AFTER FIELD stfj002 name="input.a.page7.stfj002"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfj002
            #add-point:ON CHANGE stfj002 name="input.g.page7.stfj002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfj003
            #add-point:BEFORE FIELD stfj003 name="input.b.page7.stfj003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfj003
            
            #add-point:AFTER FIELD stfj003 name="input.a.page7.stfj003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfj003
            #add-point:ON CHANGE stfj003 name="input.g.page7.stfj003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfj004
            #add-point:BEFORE FIELD stfj004 name="input.b.page7.stfj004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfj004
            
            #add-point:AFTER FIELD stfj004 name="input.a.page7.stfj004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfj004
            #add-point:ON CHANGE stfj004 name="input.g.page7.stfj004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfj005
            #add-point:BEFORE FIELD stfj005 name="input.b.page7.stfj005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfj005
            
            #add-point:AFTER FIELD stfj005 name="input.a.page7.stfj005"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfj005
            #add-point:ON CHANGE stfj005 name="input.g.page7.stfj005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfj006
            #add-point:BEFORE FIELD stfj006 name="input.b.page7.stfj006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfj006
            
            #add-point:AFTER FIELD stfj006 name="input.a.page7.stfj006"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfj006
            #add-point:ON CHANGE stfj006 name="input.g.page7.stfj006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfjsite
            #add-point:BEFORE FIELD stfjsite name="input.b.page7.stfjsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfjsite
            
            #add-point:AFTER FIELD stfjsite name="input.a.page7.stfjsite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfjsite
            #add-point:ON CHANGE stfjsite name="input.g.page7.stfjsite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfjunit
            #add-point:BEFORE FIELD stfjunit name="input.b.page7.stfjunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfjunit
            
            #add-point:AFTER FIELD stfjunit name="input.a.page7.stfjunit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfjunit
            #add-point:ON CHANGE stfjunit name="input.g.page7.stfjunit"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page7.stfjseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfjseq
            #add-point:ON ACTION controlp INFIELD stfjseq name="input.c.page7.stfjseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page7.stfj002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfj002
            #add-point:ON ACTION controlp INFIELD stfj002 name="input.c.page7.stfj002"
            
            #END add-point
 
 
         #Ctrlp:input.c.page7.stfj003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfj003
            #add-point:ON ACTION controlp INFIELD stfj003 name="input.c.page7.stfj003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page7.stfj004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfj004
            #add-point:ON ACTION controlp INFIELD stfj004 name="input.c.page7.stfj004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page7.stfj005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfj005
            #add-point:ON ACTION controlp INFIELD stfj005 name="input.c.page7.stfj005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page7.stfj006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfj006
            #add-point:ON ACTION controlp INFIELD stfj006 name="input.c.page7.stfj006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page7.stfjsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfjsite
            #add-point:ON ACTION controlp INFIELD stfjsite name="input.c.page7.stfjsite"
            
            #END add-point
 
 
         #Ctrlp:input.c.page7.stfjunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfjunit
            #add-point:ON ACTION controlp INFIELD stfjunit name="input.c.page7.stfjunit"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page10 after_row name="input.body7.after_row"
            
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_stfb7_d[l_ac].* = g_stfb7_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm401_bcl10
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astm401_unlock_b("stfj_t","'10'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page10 after_row2 name="input.body7.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body7.after_input"
            
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_stfb7_d[li_reproduce_target].* = g_stfb7_d[li_reproduce].*
 
               LET g_stfb7_d[li_reproduce_target].stfjseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_stfb7_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_stfb7_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_stfb9_d FROM s_detail9.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_12)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body9.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stfb9_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL astm401_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'11',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_stfb9_d.getLength()
            #add-point:資料輸入前 name="input.body9.before_input"
            
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stfb9_d[l_ac].* TO NULL 
            INITIALIZE g_stfb9_d_t.* TO NULL 
            INITIALIZE g_stfb9_d_o.* TO NULL 
            #公用欄位給值(單身12)
            
            #自定義預設值(單身12)
                  LET g_stfb9_d[l_ac].stff006 = "0"
      LET g_stfb9_d[l_ac].stff007 = "0"
 
            #add-point:modify段before備份 name="input.body9.insert.before_bak"
            
            #end add-point
            LET g_stfb9_d_t.* = g_stfb9_d[l_ac].*     #新輸入資料
            LET g_stfb9_d_o.* = g_stfb9_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astm401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body9.insert.after_set_entry_b"
            
            #end add-point
            CALL astm401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stfb9_d[li_reproduce_target].* = g_stfb9_d[li_reproduce].*
 
               LET g_stfb9_d[li_reproduce_target].stffseq = NULL
               LET g_stfb9_d[li_reproduce_target].stff002 = NULL
               LET g_stfb9_d[li_reproduce_target].stff003 = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body9.before_insert"
            
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body9.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[12] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 12
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astm401_cl USING g_enterprise,g_stfa_m.stfa001
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm401_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astm401_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_stfb9_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stfb9_d[l_ac].stffseq IS NOT NULL
               AND g_stfb9_d[l_ac].stff002 IS NOT NULL
               AND g_stfb9_d[l_ac].stff003 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_stfb9_d_t.* = g_stfb9_d[l_ac].*  #BACKUP
               LET g_stfb9_d_o.* = g_stfb9_d[l_ac].*  #BACKUP
               CALL astm401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body9.after_set_entry_b"
               
               #end add-point  
               CALL astm401_set_no_entry_b(l_cmd)
               IF NOT astm401_lock_b("stff_t","'12'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astm401_bcl11 INTO g_stfb9_d[l_ac].stffseq,g_stfb9_d[l_ac].stff002,g_stfb9_d[l_ac].stff003, 
                      g_stfb9_d[l_ac].stff004,g_stfb9_d[l_ac].stff005,g_stfb9_d[l_ac].stff006,g_stfb9_d[l_ac].stff007, 
                      g_stfb9_d[l_ac].stff010,g_stfb9_d[l_ac].stff008,g_stfb9_d[l_ac].stff011,g_stfb9_d[l_ac].stff009, 
                      g_stfb9_d[l_ac].stffsite,g_stfb9_d[l_ac].stffunit
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stfb9_d_mask_o[l_ac].* =  g_stfb9_d[l_ac].*
                  CALL astm401_stff_t_mask()
                  LET g_stfb9_d_mask_n[l_ac].* =  g_stfb9_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astm401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body9.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body9.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body9.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身12刪除前 name="input.body9.b_delete"
               
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_stfa_m.stfa001
               LET gs_keys[gs_keys.getLength()+1] = g_stfb9_d_t.stffseq
               LET gs_keys[gs_keys.getLength()+1] = g_stfb9_d_t.stff002
               LET gs_keys[gs_keys.getLength()+1] = g_stfb9_d_t.stff003
            
               #刪除同層單身
               IF NOT astm401_delete_b('stff_t',gs_keys,"'12'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT astm401_key_delete_b(gs_keys,'stff_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身12刪除中 name="input.body9.m_delete"
               
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE astm401_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身12刪除後 name="input.body9.a_delete"
               
               #end add-point
               LET l_count = g_stfb_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body9.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stfb9_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身12新增前 name="input.body9.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stff_t 
             WHERE stffent = g_enterprise AND stff001 = g_stfa_m.stfa001
               AND stffseq = g_stfb9_d[l_ac].stffseq
               AND stff002 = g_stfb9_d[l_ac].stff002
               AND stff003 = g_stfb9_d[l_ac].stff003
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身12新增前 name="input.body9.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys[2] = g_stfb9_d[g_detail_idx].stffseq
               LET gs_keys[3] = g_stfb9_d[g_detail_idx].stff002
               LET gs_keys[4] = g_stfb9_d[g_detail_idx].stff003
               CALL astm401_insert_b('stff_t',gs_keys,"'12'")
                           
               #add-point:單身新增後12 name="input.body9.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_stfb_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stff_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astm401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body9.after_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_stfb9_d[l_ac].* = g_stfb9_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm401_bcl11
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_stfb9_d[l_ac].* = g_stfb9_d_t.*
            ELSE
               #add-point:單身page12修改前 name="input.body9.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身12)
               
               
               #將遮罩欄位還原
               CALL astm401_stff_t_mask_restore('restore_mask_o')
                              
               UPDATE stff_t SET (stff001,stffseq,stff002,stff003,stff004,stff005,stff006,stff007,stff010, 
                   stff008,stff011,stff009,stffsite,stffunit) = (g_stfa_m.stfa001,g_stfb9_d[l_ac].stffseq, 
                   g_stfb9_d[l_ac].stff002,g_stfb9_d[l_ac].stff003,g_stfb9_d[l_ac].stff004,g_stfb9_d[l_ac].stff005, 
                   g_stfb9_d[l_ac].stff006,g_stfb9_d[l_ac].stff007,g_stfb9_d[l_ac].stff010,g_stfb9_d[l_ac].stff008, 
                   g_stfb9_d[l_ac].stff011,g_stfb9_d[l_ac].stff009,g_stfb9_d[l_ac].stffsite,g_stfb9_d[l_ac].stffunit)  
                   #自訂欄位頁簽
                WHERE stffent = g_enterprise AND stff001 = g_stfa_m.stfa001
                  AND stffseq = g_stfb9_d_t.stffseq #項次 
                  AND stff002 = g_stfb9_d_t.stff002
                  AND stff003 = g_stfb9_d_t.stff003
                  
               #add-point:單身page12修改中 name="input.body9.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_stfb9_d[l_ac].* = g_stfb9_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stff_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_stfb9_d[l_ac].* = g_stfb9_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stff_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys_bak[1] = g_stfa001_t
               LET gs_keys[2] = g_stfb9_d[g_detail_idx].stffseq
               LET gs_keys_bak[2] = g_stfb9_d_t.stffseq
               LET gs_keys[3] = g_stfb9_d[g_detail_idx].stff002
               LET gs_keys_bak[3] = g_stfb9_d_t.stff002
               LET gs_keys[4] = g_stfb9_d[g_detail_idx].stff003
               LET gs_keys_bak[4] = g_stfb9_d_t.stff003
               CALL astm401_update_b('stff_t',gs_keys,gs_keys_bak,"'12'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astm401_stff_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_stfb9_d[g_detail_idx].stffseq = g_stfb9_d_t.stffseq 
                  AND g_stfb9_d[g_detail_idx].stff002 = g_stfb9_d_t.stff002 
                  AND g_stfb9_d[g_detail_idx].stff003 = g_stfb9_d_t.stff003 
                  ) THEN
                  LET gs_keys[01] = g_stfa_m.stfa001
                  LET gs_keys[gs_keys.getLength()+1] = g_stfb9_d_t.stffseq
                  LET gs_keys[gs_keys.getLength()+1] = g_stfb9_d_t.stff002
                  LET gs_keys[gs_keys.getLength()+1] = g_stfb9_d_t.stff003
                  CALL astm401_key_update_b(gs_keys,'stff_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb9_d_t)
               LET g_log2 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb9_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page12修改後 name="input.body9.a_update"
               
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stffseq
            #add-point:BEFORE FIELD stffseq name="input.b.page9.stffseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stffseq
            
            #add-point:AFTER FIELD stffseq name="input.a.page9.stffseq"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stfa_m.stfa001 IS NOT NULL AND g_stfb9_d[g_detail_idx].stffseq IS NOT NULL AND g_stfb9_d[g_detail_idx].stff002 IS NOT NULL AND g_stfb9_d[g_detail_idx].stff003 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stfa_m.stfa001 != g_stfa001_t OR g_stfb9_d[g_detail_idx].stffseq != g_stfb9_d_t.stffseq OR g_stfb9_d[g_detail_idx].stff002 != g_stfb9_d_t.stff002 OR g_stfb9_d[g_detail_idx].stff003 != g_stfb9_d_t.stff003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stff_t WHERE "||"stffent = '" ||g_enterprise|| "' AND "||"stff001 = '"||g_stfa_m.stfa001 ||"' AND "|| "stffseq = '"||g_stfb9_d[g_detail_idx].stffseq ||"' AND "|| "stff002 = '"||g_stfb9_d[g_detail_idx].stff002 ||"' AND "|| "stff003 = '"||g_stfb9_d[g_detail_idx].stff003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stffseq
            #add-point:ON CHANGE stffseq name="input.g.page9.stffseq"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stff002
            #add-point:BEFORE FIELD stff002 name="input.b.page9.stff002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stff002
            
            #add-point:AFTER FIELD stff002 name="input.a.page9.stff002"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stfa_m.stfa001 IS NOT NULL AND g_stfb9_d[g_detail_idx].stffseq IS NOT NULL AND g_stfb9_d[g_detail_idx].stff002 IS NOT NULL AND g_stfb9_d[g_detail_idx].stff003 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stfa_m.stfa001 != g_stfa001_t OR g_stfb9_d[g_detail_idx].stffseq != g_stfb9_d_t.stffseq OR g_stfb9_d[g_detail_idx].stff002 != g_stfb9_d_t.stff002 OR g_stfb9_d[g_detail_idx].stff003 != g_stfb9_d_t.stff003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stff_t WHERE "||"stffent = '" ||g_enterprise|| "' AND "||"stff001 = '"||g_stfa_m.stfa001 ||"' AND "|| "stffseq = '"||g_stfb9_d[g_detail_idx].stffseq ||"' AND "|| "stff002 = '"||g_stfb9_d[g_detail_idx].stff002 ||"' AND "|| "stff003 = '"||g_stfb9_d[g_detail_idx].stff003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stff002
            #add-point:ON CHANGE stff002 name="input.g.page9.stff002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stff003
            #add-point:BEFORE FIELD stff003 name="input.b.page9.stff003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stff003
            
            #add-point:AFTER FIELD stff003 name="input.a.page9.stff003"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stfa_m.stfa001 IS NOT NULL AND g_stfb3_d[g_detail_idx].stfeseq IS NOT NULL AND g_stfb3_d[g_detail_idx].stfe002 IS NOT NULL AND g_stfb9_d[g_detail_idx2].stff003 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stfa_m.stfa001 != g_stfa001_t OR g_stfb3_d[g_detail_idx].stfeseq != g_stfb3_d[g_detail_idx].stfeseq OR g_stfb3_d[g_detail_idx].stfe002 != g_stfb3_d[g_detail_idx].stfe002 OR g_stfb9_d[g_detail_idx2].stff003 != g_stfb9_d_t.stff003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stff_t WHERE "||"stffent = '" ||g_enterprise|| "' AND "||"stffseq = '"||g_stfa_m.stfa001 ||"' AND "|| "stff001 = '"||g_stfb3_d[g_detail_idx].stfeseq ||"' AND "|| "stff002 = '"||g_stfb3_d[g_detail_idx].stfe002 ||"' AND "|| "stff003 = '"||g_stfb9_d[g_detail_idx2].stff003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stff003
            #add-point:ON CHANGE stff003 name="input.g.page9.stff003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stff004
            #add-point:BEFORE FIELD stff004 name="input.b.page9.stff004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stff004
            
            #add-point:AFTER FIELD stff004 name="input.a.page9.stff004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stff004
            #add-point:ON CHANGE stff004 name="input.g.page9.stff004"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stff005
            
            #add-point:AFTER FIELD stff005 name="input.a.page9.stff005"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfb9_d[l_ac].stff005
            CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfb9_d[l_ac].stff005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfb9_d[l_ac].stff005_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stff005
            #add-point:BEFORE FIELD stff005 name="input.b.page9.stff005"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stff005
            #add-point:ON CHANGE stff005 name="input.g.page9.stff005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stff006
            #add-point:BEFORE FIELD stff006 name="input.b.page9.stff006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stff006
            
            #add-point:AFTER FIELD stff006 name="input.a.page9.stff006"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stff006
            #add-point:ON CHANGE stff006 name="input.g.page9.stff006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stff007
            #add-point:BEFORE FIELD stff007 name="input.b.page9.stff007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stff007
            
            #add-point:AFTER FIELD stff007 name="input.a.page9.stff007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stff007
            #add-point:ON CHANGE stff007 name="input.g.page9.stff007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stff010
            #add-point:BEFORE FIELD stff010 name="input.b.page9.stff010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stff010
            
            #add-point:AFTER FIELD stff010 name="input.a.page9.stff010"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stff010
            #add-point:ON CHANGE stff010 name="input.g.page9.stff010"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stff008
            #add-point:BEFORE FIELD stff008 name="input.b.page9.stff008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stff008
            
            #add-point:AFTER FIELD stff008 name="input.a.page9.stff008"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stff008
            #add-point:ON CHANGE stff008 name="input.g.page9.stff008"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stff011
            #add-point:BEFORE FIELD stff011 name="input.b.page9.stff011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stff011
            
            #add-point:AFTER FIELD stff011 name="input.a.page9.stff011"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stff011
            #add-point:ON CHANGE stff011 name="input.g.page9.stff011"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stff009
            #add-point:BEFORE FIELD stff009 name="input.b.page9.stff009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stff009
            
            #add-point:AFTER FIELD stff009 name="input.a.page9.stff009"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stff009
            #add-point:ON CHANGE stff009 name="input.g.page9.stff009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stffsite
            #add-point:BEFORE FIELD stffsite name="input.b.page9.stffsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stffsite
            
            #add-point:AFTER FIELD stffsite name="input.a.page9.stffsite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stffsite
            #add-point:ON CHANGE stffsite name="input.g.page9.stffsite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stffunit
            #add-point:BEFORE FIELD stffunit name="input.b.page9.stffunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stffunit
            
            #add-point:AFTER FIELD stffunit name="input.a.page9.stffunit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stffunit
            #add-point:ON CHANGE stffunit name="input.g.page9.stffunit"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page9.stffseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stffseq
            #add-point:ON ACTION controlp INFIELD stffseq name="input.c.page9.stffseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page9.stff002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stff002
            #add-point:ON ACTION controlp INFIELD stff002 name="input.c.page9.stff002"
            
            #END add-point
 
 
         #Ctrlp:input.c.page9.stff003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stff003
            #add-point:ON ACTION controlp INFIELD stff003 name="input.c.page9.stff003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page9.stff004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stff004
            #add-point:ON ACTION controlp INFIELD stff004 name="input.c.page9.stff004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page9.stff005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stff005
            #add-point:ON ACTION controlp INFIELD stff005 name="input.c.page9.stff005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page9.stff006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stff006
            #add-point:ON ACTION controlp INFIELD stff006 name="input.c.page9.stff006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page9.stff007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stff007
            #add-point:ON ACTION controlp INFIELD stff007 name="input.c.page9.stff007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page9.stff010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stff010
            #add-point:ON ACTION controlp INFIELD stff010 name="input.c.page9.stff010"
            
            #END add-point
 
 
         #Ctrlp:input.c.page9.stff008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stff008
            #add-point:ON ACTION controlp INFIELD stff008 name="input.c.page9.stff008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page9.stff011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stff011
            #add-point:ON ACTION controlp INFIELD stff011 name="input.c.page9.stff011"
            
            #END add-point
 
 
         #Ctrlp:input.c.page9.stff009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stff009
            #add-point:ON ACTION controlp INFIELD stff009 name="input.c.page9.stff009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page9.stffsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stffsite
            #add-point:ON ACTION controlp INFIELD stffsite name="input.c.page9.stffsite"
            
            #END add-point
 
 
         #Ctrlp:input.c.page9.stffunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stffunit
            #add-point:ON ACTION controlp INFIELD stffunit name="input.c.page9.stffunit"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page12 after_row name="input.body9.after_row"
            
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_stfb9_d[l_ac].* = g_stfb9_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm401_bcl11
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astm401_unlock_b("stff_t","'12'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page12 after_row2 name="input.body9.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body9.after_input"
            
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_stfb9_d[li_reproduce_target].* = g_stfb9_d[li_reproduce].*
 
               LET g_stfb9_d[li_reproduce_target].stffseq = NULL
               LET g_stfb9_d[li_reproduce_target].stff002 = NULL
               LET g_stfb9_d[li_reproduce_target].stff003 = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_stfb9_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_stfb9_d.getLength()+1
            END IF
            
      END INPUT
 
      
      INPUT ARRAY g_stfb8_d FROM s_detail8.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_11)
         
        
         BEFORE INPUT
            #先將上層單身的idx放入g_detail_idx
            LET g_detail_idx_tmp = g_detail_idx
            LET g_detail_idx = g_detail_idx_list[5]
            #檢查上層單身是否為空
            IF g_detail_idx = 0 OR g_stfb2_d.getLength() = 0 THEN
               NEXT FIELD stfcseq
            END IF
            #檢查上層單身是否有資料
            IF cl_null(g_stfb2_d[g_detail_idx].stfcseq) THEN
               NEXT FIELD stfcseq
            END IF
            #add-point:資料輸入前 name="input.body8.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_stfb8_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            #如果一直都在單身2則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'12',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_stfb8_d.getLength()
            #add-point:資料輸入前 name="input.body8.before_input"
            
            #end add-point
            
         BEFORE INSERT
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_stfb8_d[l_ac].* TO NULL 
            INITIALIZE g_stfb8_d_t.* TO NULL 
            INITIALIZE g_stfb8_d_o.* TO NULL 
            #公用欄位給值(單身11)
            
            #自定義預設值(單身11)
                  LET g_stfb8_d[l_ac].stfdseq1 = "0"
      LET g_stfb8_d[l_ac].stfd005 = "0"
      LET g_stfb8_d[l_ac].stfd008 = "0"
 
            #add-point:modify段before備份 name="input.body8.insert.before_bak"
            
            #end add-point
            LET g_stfb8_d_t.* = g_stfb8_d[l_ac].*     #新輸入資料
            LET g_stfb8_d_o.* = g_stfb8_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL astm401_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body8.insert.after_set_entry_b"
            
            #end add-point
            CALL astm401_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_stfb8_d[li_reproduce_target].* = g_stfb8_d[li_reproduce].*
 
               LET g_stfb8_d[li_reproduce_target].stfdseq1 = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body8.before_insert"
            
            #end add-point  
            
         BEFORE ROW
            #add-point:modify段before row2 name="input.body8.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx2 = l_ac
            LET g_detail_idx_list[11] = l_ac
            LET g_current_page = 11
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN astm401_cl USING g_enterprise,g_stfa_m.stfa001
            #(ver:78) ---start---
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm401_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE
               LET g_errparam.popup = TRUE 
               CLOSE astm401_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            #(ver:78) --- end ---
            OPEN astm401_bcl5 USING g_enterprise,g_stfa_m.stfa001,g_stfb2_d[g_detail_idx].stfcseq
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN astm401_bcl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE astm401_cl
               CLOSE astm401_bcl5
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_stfb8_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_stfb8_d[l_ac].stfdseq1 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_stfb8_d_t.* = g_stfb8_d[l_ac].*  #BACKUP
               LET g_stfb8_d_o.* = g_stfb8_d[l_ac].*  #BACKUP
               CALL astm401_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body8.after_set_entry_b"
               
               #end add-point  
               CALL astm401_set_no_entry_b(l_cmd)
               IF NOT astm401_lock_b("stfd_t","'11'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH astm401_bcl12 INTO g_stfb8_d[l_ac].stfdseq1,g_stfb8_d[l_ac].stfd002,g_stfb8_d[l_ac].stfd003, 
                      g_stfb8_d[l_ac].stfd004,g_stfb8_d[l_ac].stfd005,g_stfb8_d[l_ac].stfd006,g_stfb8_d[l_ac].stfd007, 
                      g_stfb8_d[l_ac].stfd008,g_stfb8_d[l_ac].stfd009,g_stfb8_d[l_ac].stfdsite,g_stfb8_d[l_ac].stfdunit 
 
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_stfb8_d_mask_o[l_ac].* =  g_stfb8_d[l_ac].*
                  CALL astm401_stfd_t_mask()
                  LET g_stfb8_d_mask_n[l_ac].* =  g_stfb8_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL astm401_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body8.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body8.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body8.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身11刪除前 name="input.body8.b_delete"
               
               #end add-point    
 
               #取得該筆資料key值
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys[2] = g_stfb2_d[g_detail_idx].stfcseq
               LET gs_keys[3] = g_stfb8_d_t.stfdseq1
 
 
               #刪除同層單身
               IF NOT astm401_delete_b('stfd_t',gs_keys,"'11'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE astm401_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身11刪除中 name="input.body8.m_delete"
               
               #end add-point   
               
               CALL s_transaction_end('Y','0')
               CLOSE astm401_bcl
                  
               LET g_rec_b = g_rec_b-1
               #add-point:單身11刪除後 name="input.body8.a_delete"
               
               #end add-point
 
               LET l_count = g_stfb_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body8.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_stfb8_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
         
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身11新增前 name="input.body8.b_a_insert"
            
            #end add-point
    
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM stfd_t 
             WHERE stfdent = g_enterprise AND stfd001 = g_stfa_m.stfa001 AND stfdseq = g_stfb2_d[g_detail_idx].stfcseq  
                 AND stfdseq1 = g_stfb8_d[g_detail_idx2].stfdseq1
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身11新增前 name="input.body8.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys[2] = g_stfb2_d[g_detail_idx].stfcseq
               LET gs_keys[3] = g_stfb8_d[g_detail_idx2].stfdseq1
               CALL astm401_insert_b('stfd_t',gs_keys,"'11'")
                           
               #add-point:單身新增後11 name="input.body8.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_stfb_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "stfd_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL astm401_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body8.after_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
            #還原g_detail_idx
            LET g_detail_idx = g_detail_idx_tmp
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_stfb8_d[l_ac].* = g_stfb8_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm401_bcl12
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_stfb8_d[l_ac].* = g_stfb8_d_t.*
            ELSE
               #add-point:單身page11修改前 name="input.body8.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身11)
               
               
               #將遮罩欄位還原
               CALL astm401_stfd_t_mask_restore('restore_mask_o')
               
               UPDATE stfd_t SET (stfd001,stfdseq,stfdseq1,stfd002,stfd003,stfd004,stfd005,stfd006,stfd007, 
                   stfd008,stfd009,stfdsite,stfdunit) = (g_stfa_m.stfa001,g_stfb2_d[g_detail_idx].stfcseq, 
                   g_stfb8_d[l_ac].stfdseq1,g_stfb8_d[l_ac].stfd002,g_stfb8_d[l_ac].stfd003,g_stfb8_d[l_ac].stfd004, 
                   g_stfb8_d[l_ac].stfd005,g_stfb8_d[l_ac].stfd006,g_stfb8_d[l_ac].stfd007,g_stfb8_d[l_ac].stfd008, 
                   g_stfb8_d[l_ac].stfd009,g_stfb8_d[l_ac].stfdsite,g_stfb8_d[l_ac].stfdunit) #自訂欄位頁簽 
 
                WHERE stfdent = g_enterprise AND stfd001 = g_stfa001_t AND stfdseq = g_stfb2_d[g_detail_idx].stfcseq  
                    AND stfdseq1 = g_stfb8_d_t.stfdseq1
                  
               #add-point:單身page11修改中 name="input.body8.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_stfb8_d[l_ac].* = g_stfb8_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfd_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_stfb8_d[l_ac].* = g_stfb8_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "stfd_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_stfa_m.stfa001
               LET gs_keys_bak[1] = g_stfa001_t
               LET gs_keys[2] = g_stfb2_d[g_detail_idx].stfcseq
               LET gs_keys_bak[2] = g_stfb2_d[g_detail_idx].stfcseq
               LET gs_keys[3] = g_stfb8_d[g_detail_idx2].stfdseq1
               LET gs_keys_bak[3] = g_stfb8_d_t.stfdseq1
               CALL astm401_update_b('stfd_t',gs_keys,gs_keys_bak,"'11'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL astm401_stfd_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb8_d_t)
               LET g_log2 = util.JSON.stringify(g_stfa_m),util.JSON.stringify(g_stfb8_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page11修改後 name="input.body8.a_update"
               
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfdseq1
            #add-point:BEFORE FIELD stfdseq1 name="input.b.page8.stfdseq1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfdseq1
            
            #add-point:AFTER FIELD stfdseq1 name="input.a.page8.stfdseq1"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_stfa_m.stfa001 IS NOT NULL AND g_stfb2_d[g_detail_idx].stfcseq IS NOT NULL  AND g_stfb8_d[g_detail_idx2].stfdseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_stfa_m.stfa001 != g_stfa001_t OR g_stfb2_d[g_detail_idx].stfcseq != g_stfb2_d[g_detail_idx].stfcseq  OR g_stfb8_d[g_detail_idx2].stfdseq1 != g_stfb8_d_t.stfdseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM stfd_t WHERE "||"stfdent = '" ||g_enterprise|| "' AND "||"stfd001 = '"||g_stfa_m.stfa001 ||"' AND "|| "stfdseq = '"||g_stfb2_d[g_detail_idx].stfcseq ||"' AND "|| "stfdseq1 = '"||g_stfb8_d[g_detail_idx2].stfdseq1 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfdseq1
            #add-point:ON CHANGE stfdseq1 name="input.g.page8.stfdseq1"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfd002
            #add-point:BEFORE FIELD stfd002 name="input.b.page8.stfd002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfd002
            
            #add-point:AFTER FIELD stfd002 name="input.a.page8.stfd002"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfd002
            #add-point:ON CHANGE stfd002 name="input.g.page8.stfd002"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfd003
            
            #add-point:AFTER FIELD stfd003 name="input.a.page8.stfd003"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfd003
            #add-point:BEFORE FIELD stfd003 name="input.b.page8.stfd003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfd003
            #add-point:ON CHANGE stfd003 name="input.g.page8.stfd003"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfd004
            
            #add-point:AFTER FIELD stfd004 name="input.a.page8.stfd004"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_stfb8_d[l_ac].stfd004
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2024' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_stfb8_d[l_ac].stfd004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_stfb8_d[l_ac].stfd004_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfd004
            #add-point:BEFORE FIELD stfd004 name="input.b.page8.stfd004"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfd004
            #add-point:ON CHANGE stfd004 name="input.g.page8.stfd004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfd005
            #add-point:BEFORE FIELD stfd005 name="input.b.page8.stfd005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfd005
            
            #add-point:AFTER FIELD stfd005 name="input.a.page8.stfd005"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfd005
            #add-point:ON CHANGE stfd005 name="input.g.page8.stfd005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfd006
            #add-point:BEFORE FIELD stfd006 name="input.b.page8.stfd006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfd006
            
            #add-point:AFTER FIELD stfd006 name="input.a.page8.stfd006"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfd006
            #add-point:ON CHANGE stfd006 name="input.g.page8.stfd006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfd007
            #add-point:BEFORE FIELD stfd007 name="input.b.page8.stfd007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfd007
            
            #add-point:AFTER FIELD stfd007 name="input.a.page8.stfd007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfd007
            #add-point:ON CHANGE stfd007 name="input.g.page8.stfd007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfd008
            #add-point:BEFORE FIELD stfd008 name="input.b.page8.stfd008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfd008
            
            #add-point:AFTER FIELD stfd008 name="input.a.page8.stfd008"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfd008
            #add-point:ON CHANGE stfd008 name="input.g.page8.stfd008"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfd009
            #add-point:BEFORE FIELD stfd009 name="input.b.page8.stfd009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfd009
            
            #add-point:AFTER FIELD stfd009 name="input.a.page8.stfd009"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfd009
            #add-point:ON CHANGE stfd009 name="input.g.page8.stfd009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfdsite
            #add-point:BEFORE FIELD stfdsite name="input.b.page8.stfdsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfdsite
            
            #add-point:AFTER FIELD stfdsite name="input.a.page8.stfdsite"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfdsite
            #add-point:ON CHANGE stfdsite name="input.g.page8.stfdsite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfdunit
            #add-point:BEFORE FIELD stfdunit name="input.b.page8.stfdunit"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfdunit
            
            #add-point:AFTER FIELD stfdunit name="input.a.page8.stfdunit"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE stfdunit
            #add-point:ON CHANGE stfdunit name="input.g.page8.stfdunit"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page8.stfdseq1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfdseq1
            #add-point:ON ACTION controlp INFIELD stfdseq1 name="input.c.page8.stfdseq1"
            
            #END add-point
 
 
         #Ctrlp:input.c.page8.stfd002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfd002
            #add-point:ON ACTION controlp INFIELD stfd002 name="input.c.page8.stfd002"
            
            #END add-point
 
 
         #Ctrlp:input.c.page8.stfd003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfd003
            #add-point:ON ACTION controlp INFIELD stfd003 name="input.c.page8.stfd003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page8.stfd004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfd004
            #add-point:ON ACTION controlp INFIELD stfd004 name="input.c.page8.stfd004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page8.stfd005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfd005
            #add-point:ON ACTION controlp INFIELD stfd005 name="input.c.page8.stfd005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page8.stfd006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfd006
            #add-point:ON ACTION controlp INFIELD stfd006 name="input.c.page8.stfd006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page8.stfd007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfd007
            #add-point:ON ACTION controlp INFIELD stfd007 name="input.c.page8.stfd007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page8.stfd008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfd008
            #add-point:ON ACTION controlp INFIELD stfd008 name="input.c.page8.stfd008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page8.stfd009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfd009
            #add-point:ON ACTION controlp INFIELD stfd009 name="input.c.page8.stfd009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page8.stfdsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfdsite
            #add-point:ON ACTION controlp INFIELD stfdsite name="input.c.page8.stfdsite"
            
            #END add-point
 
 
         #Ctrlp:input.c.page8.stfdunit
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfdunit
            #add-point:ON ACTION controlp INFIELD stfdunit name="input.c.page8.stfdunit"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page11_after_row name="input.body8.after_row"
            
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_stfb8_d[l_ac].* = g_stfb8_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE astm401_bcl12
               CLOSE astm401_bcl5
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL astm401_unlock_b("stfd_t","'11'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page11_after_row2 name="input.body8.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body8.after_input"
            
            #end add-point  
 
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_stfb8_d[li_reproduce_target].* = g_stfb8_d[li_reproduce].*
 
               LET g_stfb8_d[li_reproduce_target].stfdseq1 = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_stfb8_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_stfb8_d.getLength()+1
            END IF
        
      END INPUT
 
 
 
 
{</section>}
 
{<section id="astm401.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1',"))      
         CALL DIALOG.setCurrentRow("s_detail10",g_idx_group.getValue("'2',"))
         CALL DIALOG.setCurrentRow("s_detail11",g_idx_group.getValue("'3',"))
         CALL DIALOG.setCurrentRow("s_detail12",g_idx_group.getValue("'4',"))
         CALL DIALOG.setCurrentRow("s_detail2",g_idx_group.getValue("'5',"))
         CALL DIALOG.setCurrentRow("s_detail3",g_idx_group.getValue("'6',"))
         CALL DIALOG.setCurrentRow("s_detail4",g_idx_group.getValue("'7',"))
         CALL DIALOG.setCurrentRow("s_detail5",g_idx_group.getValue("'8',"))
         CALL DIALOG.setCurrentRow("s_detail6",g_idx_group.getValue("'9',"))
         CALL DIALOG.setCurrentRow("s_detail7",g_idx_group.getValue("'10',"))
         CALL DIALOG.setCurrentRow("s_detail8",g_idx_group.getValue("'12',"))
         CALL DIALOG.setCurrentRow("s_detail9",g_idx_group.getValue("'11',"))
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            
            #end add-point  
            NEXT FIELD stfa001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD stfbseq
               WHEN "s_detail10"
                  NEXT FIELD stfkunit
               WHEN "s_detail11"
                  NEXT FIELD stflunit
               WHEN "s_detail12"
                  NEXT FIELD stfwunit
               WHEN "s_detail2"
                  NEXT FIELD stfcseq
               WHEN "s_detail3"
                  NEXT FIELD stfe002
               WHEN "s_detail4"
                  NEXT FIELD stfgseq
               WHEN "s_detail5"
                  NEXT FIELD stfhseq
               WHEN "s_detail6"
                  NEXT FIELD stfiseq
               WHEN "s_detail7"
                  NEXT FIELD stfjseq
               WHEN "s_detail8"
                  NEXT FIELD stfdseq1
               WHEN "s_detail9"
                  NEXT FIELD stffseq
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
         LET g_detail_idx_list[4] = 1
         LET g_detail_idx_list[5] = 1
         LET g_detail_idx_list[6] = 1
         LET g_detail_idx_list[7] = 1
         LET g_detail_idx_list[8] = 1
         LET g_detail_idx_list[9] = 1
         LET g_detail_idx_list[10] = 1
         LET g_detail_idx_list[11] = 1
         LET g_detail_idx_list[12] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail10",1)
         CALL g_curr_diag.setCurrentRow("s_detail11",1)
         CALL g_curr_diag.setCurrentRow("s_detail12",1)
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
         CALL g_curr_diag.setCurrentRow("s_detail4",1)
         CALL g_curr_diag.setCurrentRow("s_detail5",1)
         CALL g_curr_diag.setCurrentRow("s_detail6",1)
         CALL g_curr_diag.setCurrentRow("s_detail7",1)
         CALL g_curr_diag.setCurrentRow("s_detail8",1)
         CALL g_curr_diag.setCurrentRow("s_detail9",1)
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
         LET g_detail_idx_list[4] = 1
         LET g_detail_idx_list[5] = 1
         LET g_detail_idx_list[6] = 1
         LET g_detail_idx_list[7] = 1
         LET g_detail_idx_list[8] = 1
         LET g_detail_idx_list[9] = 1
         LET g_detail_idx_list[10] = 1
         LET g_detail_idx_list[11] = 1
         LET g_detail_idx_list[12] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail10",1)
         CALL g_curr_diag.setCurrentRow("s_detail11",1)
         CALL g_curr_diag.setCurrentRow("s_detail12",1)
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
         CALL g_curr_diag.setCurrentRow("s_detail4",1)
         CALL g_curr_diag.setCurrentRow("s_detail5",1)
         CALL g_curr_diag.setCurrentRow("s_detail6",1)
         CALL g_curr_diag.setCurrentRow("s_detail7",1)
         CALL g_curr_diag.setCurrentRow("s_detail8",1)
         CALL g_curr_diag.setCurrentRow("s_detail9",1)
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   
   #end add-point    
 
END FUNCTION
 
{</section>}
 
{<section id="astm401.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION astm401_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   DEFINE l_sys     LIKE type_t.chr1
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   CALL cl_get_para(g_enterprise,g_stfa_m.stfasite,'S-CIR-2004') RETURNING l_sys
   IF l_sys = 'Y' THEN 
      CALL cl_set_comp_visible('stfa050',TRUE)
   ELSE
      CALL cl_set_comp_visible('stfa050',FALSE)
   END IF 
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL astm401_b_fill() #單身填充
      CALL astm401_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL astm401_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_stfa_m.stfa001
   CALL ap_ref_array2(g_ref_fields," SELECT stfal003,stfal004 FROM stfal_t WHERE stfalent = '"||g_enterprise||"' AND stfal001 = ? AND stfal002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_stfa_m.stfal003 = g_rtn_fields[1] 
   LET g_stfa_m.stfal004 = g_rtn_fields[2] 
   DISPLAY g_stfa_m.stfal003,g_stfa_m.stfal004 TO stfal003,stfal004
   
   CALL astm401_stfa033_ref()
   CALL astm401_stfa034_ref()
   
   SELECT stfj004 INTO g_stfa_m.next_b FROM ( SELECT * FROM stfj_t
   WHERE stfjent = g_enterprise AND  stfj001 = g_stfa_m.stfa001 AND stfj005= 'N' ORDER BY stfjseq) WHERE rownum = 1
 
   DISPLAY g_stfa_m.next_b TO next_b

---lanjj add on 2016-03-07
   SELECT staal003 INTO g_stfa_m.stfa036_desc
     FROM staal_t
    WHERE staalent = g_enterprise
      AND staal001 = g_stfa_m.stfa036
      AND staal002 = g_dlang
   SELECT oocql004 INTO g_stfa_m.stfa037_desc
     FROM oocql_t
    WHERE oocqlent = g_enterprise  
      AND oocql001 = '2060'
      AND oocql002 = g_stfa_m.stfa037
      AND oocql003 = g_dlang
   SELECT ooefl003 INTO g_stfa_m.stfa038_desc
     FROM ooefl_t 
    WHERE ooeflent = g_enterprise
      AND ooefl001 = g_stfa_m.stfa038
      AND ooefl002 = g_dlang
   SELECT oocql004 INTO g_stfa_m.stfa045_desc
     FROM oocql_t 
    WHERE oocqlent = g_enterprise
      AND oocql001 = '2127'
      AND oocql002 = g_stfa_m.stfa045
      AND oocql003 = g_dlang
   SELECT stagl003 INTO g_stfa_m.stfa013_desc
     FROM stagl_t 
    WHERE staglent = g_enterprise
      AND stagl001 = g_stfa_m.stfa013
      AND stagl002 = g_dlang
   SELECT ooefl003 INTO g_stfa_m.stfa014_desc
     FROM ooefl_t 
    WHERE ooeflent = g_enterprise
      AND ooefl001 = g_stfa_m.stfa014
      AND ooefl002 = g_dlang
   SELECT ooag011 INTO g_stfa_m.stfa015_desc
     FROM ooag_t
    WHERE ooagent = g_enterprise
      AND ooag001 = g_stfa_m.stfa015
   SELECT oocql004 INTO g_stfa_m.stfa006_desc
     FROM oocql_t 
    WHERE oocqlent = g_enterprise
      AND oocql001 = '2126'
      AND oocql002 = g_stfa_m.stfa006
      AND oocql003 = g_dlang
---lanjj add on 2016-03-07

   #end add-point
   
   #遮罩相關處理
   LET g_stfa_m_mask_o.* =  g_stfa_m.*
   CALL astm401_stfa_t_mask()
   LET g_stfa_m_mask_n.* =  g_stfa_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_stfa_m.stfaunit,g_stfa_m.stfaunit_desc,g_stfa_m.stfasite,g_stfa_m.stfasite_desc, 
       g_stfa_m.stfa001,g_stfa_m.stfa002,g_stfa_m.stfa003,g_stfa_m.stfa004,g_stfa_m.stfa009,g_stfa_m.stfastus, 
       g_stfa_m.stfa010,g_stfa_m.stfa010_desc,g_stfa_m.stfa010_desc_desc,g_stfa_m.stfa005,g_stfa_m.stfal003, 
       g_stfa_m.stfal004,g_stfa_m.stfa007,g_stfa_m.stfa008,g_stfa_m.stfa047,g_stfa_m.stfa047_desc,g_stfa_m.stfa048, 
       g_stfa_m.stfa048_desc,g_stfa_m.stfa044,g_stfa_m.stfa044_desc,g_stfa_m.stfa051,g_stfa_m.stfa051_desc, 
       g_stfa_m.stfa011,g_stfa_m.stfa011_desc,g_stfa_m.stfa012,g_stfa_m.stfa012_desc,g_stfa_m.stfa033, 
       g_stfa_m.stfa033_desc,g_stfa_m.stfa034,g_stfa_m.stfa034_desc,g_stfa_m.stfa036,g_stfa_m.stfa036_desc, 
       g_stfa_m.stfa037,g_stfa_m.stfa037_desc,g_stfa_m.stfa038,g_stfa_m.stfa038_desc,g_stfa_m.stfa045, 
       g_stfa_m.stfa045_desc,g_stfa_m.stfa046,g_stfa_m.stfa029,g_stfa_m.stfa030,g_stfa_m.stfa032,g_stfa_m.stfa032_desc, 
       g_stfa_m.stfa035,g_stfa_m.stfa035_desc,g_stfa_m.stfa050,g_stfa_m.stfa028,g_stfa_m.stfa057,g_stfa_m.stfa058, 
       g_stfa_m.stfa039,g_stfa_m.stfa040,g_stfa_m.stfa052,g_stfa_m.next_b,g_stfa_m.stfa013,g_stfa_m.stfa013_desc, 
       g_stfa_m.stfa014,g_stfa_m.stfa014_desc,g_stfa_m.stfa015,g_stfa_m.stfa015_desc,g_stfa_m.stfa016, 
       g_stfa_m.stfa006,g_stfa_m.stfa006_desc,g_stfa_m.stfa053,g_stfa_m.stfa055,g_stfa_m.stfa017,g_stfa_m.stfa021, 
       g_stfa_m.stfa024,g_stfa_m.stfa018,g_stfa_m.stfa022,g_stfa_m.stfa025,g_stfa_m.stfa019,g_stfa_m.stfa023, 
       g_stfa_m.stfa026,g_stfa_m.stfa020,g_stfa_m.stfa049,g_stfa_m.stfa056,g_stfa_m.stfa054,g_stfa_m.stfa027, 
       g_stfa_m.stfa031,g_stfa_m.stfa043,g_stfa_m.stfaownid,g_stfa_m.stfaownid_desc,g_stfa_m.stfaowndp, 
       g_stfa_m.stfaowndp_desc,g_stfa_m.stfacrtid,g_stfa_m.stfacrtid_desc,g_stfa_m.stfacrtdp,g_stfa_m.stfacrtdp_desc, 
       g_stfa_m.stfacrtdt,g_stfa_m.stfamodid,g_stfa_m.stfamodid_desc,g_stfa_m.stfamoddt,g_stfa_m.stfacnfid, 
       g_stfa_m.stfacnfid_desc,g_stfa_m.stfacnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_stfa_m.stfastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_stfb_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
      
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_stfb10_d.getLength()
      #add-point:show段單身reference name="show.body10.reference"
      
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_stfb11_d.getLength()
      #add-point:show段單身reference name="show.body11.reference"
      
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_stfb12_d.getLength()
      #add-point:show段單身reference name="show.body12.reference"
      
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_stfb2_d.getLength()
      #add-point:show段單身reference name="show.body2.reference"
      CALL astm401_stfc006_ref()
      CALL astm401_stfc007_ref()
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_stfb3_d.getLength()
      #add-point:show段單身reference name="show.body3.reference"
      
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_stfb4_d.getLength()
      #add-point:show段單身reference name="show.body4.reference"
      CALL astm401_stfg003_ref()
      CALL astm401_stfg002_ref() 
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_stfb5_d.getLength()
      #add-point:show段單身reference name="show.body5.reference"
      
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_stfb6_d.getLength()
      #add-point:show段單身reference name="show.body6.reference"
      
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_stfb7_d.getLength()
      #add-point:show段單身reference name="show.body7.reference"
      
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_stfb8_d.getLength()
      #add-point:show段單身reference name="show.body8.reference"
      
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_stfb9_d.getLength()
      #add-point:show段單身reference name="show.body9.reference"
      
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other name="show.other"
   
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL astm401_detail_show()
 
   #add-point:show段之後 name="show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="astm401.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION astm401_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="astm401.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION astm401_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   
   #end add-point   
   DEFINE l_newno     LIKE stfa_t.stfa001 
   DEFINE l_oldno     LIKE stfa_t.stfa001 
 
   DEFINE l_master    RECORD LIKE stfa_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE stfb_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE stfk_t.* #此變數樣板目前無使用
 
   DEFINE l_detail3    RECORD LIKE stfl_t.* #此變數樣板目前無使用
 
   DEFINE l_detail4    RECORD LIKE stfw_t.* #此變數樣板目前無使用
 
   DEFINE l_detail5    RECORD LIKE stfc_t.* #此變數樣板目前無使用
 
   DEFINE l_detail6    RECORD LIKE stfe_t.* #此變數樣板目前無使用
 
   DEFINE l_detail7    RECORD LIKE stfg_t.* #此變數樣板目前無使用
 
   DEFINE l_detail8    RECORD LIKE stfh_t.* #此變數樣板目前無使用
 
   DEFINE l_detail9    RECORD LIKE stfi_t.* #此變數樣板目前無使用
 
   DEFINE l_detail10    RECORD LIKE stfj_t.* #此變數樣板目前無使用
 
   DEFINE l_detail11    RECORD LIKE stff_t.* #此變數樣板目前無使用
 
 
   DEFINE l_detail12    RECORD LIKE stfd_t.* #此變數樣板目前無使用
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_stfa_m.stfa001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_stfa001_t = g_stfa_m.stfa001
 
    
   LET g_stfa_m.stfa001 = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_stfa_m.stfaownid = g_user
      LET g_stfa_m.stfaowndp = g_dept
      LET g_stfa_m.stfacrtid = g_user
      LET g_stfa_m.stfacrtdp = g_dept 
      LET g_stfa_m.stfacrtdt = cl_get_current()
      LET g_stfa_m.stfamodid = g_user
      LET g_stfa_m.stfamoddt = cl_get_current()
      LET g_stfa_m.stfastus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_stfa_m.stfastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
   
   
   CALL astm401_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_stfa_m.* TO NULL
      INITIALIZE g_stfb_d TO NULL
      INITIALIZE g_stfb10_d TO NULL
      INITIALIZE g_stfb11_d TO NULL
      INITIALIZE g_stfb12_d TO NULL
      INITIALIZE g_stfb2_d TO NULL
      INITIALIZE g_stfb3_d TO NULL
      INITIALIZE g_stfb4_d TO NULL
      INITIALIZE g_stfb5_d TO NULL
      INITIALIZE g_stfb6_d TO NULL
      INITIALIZE g_stfb7_d TO NULL
      INITIALIZE g_stfb8_d TO NULL
      INITIALIZE g_stfb9_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      
      #end add-point
      CALL astm401_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code = 9001 
      LET g_errparam.popup = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL astm401_set_act_visible()   
   CALL astm401_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_stfa001_t = g_stfa_m.stfa001
 
   
   #組合新增資料的條件
   LET g_add_browse = " stfaent = " ||g_enterprise|| " AND",
                      " stfa001 = '", g_stfa_m.stfa001, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL astm401_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   CALL astm401_idx_chk()
   
   LET g_data_owner = g_stfa_m.stfaownid      
   LET g_data_dept  = g_stfa_m.stfaowndp
   
   #功能已完成,通報訊息中心
   CALL astm401_msgcentre_notify('reproduce')
 
END FUNCTION
 
{</section>}
 
{<section id="astm401.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION astm401_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE stfb_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE stfk_t.* #此變數樣板目前無使用
 
   DEFINE l_detail3    RECORD LIKE stfl_t.* #此變數樣板目前無使用
 
   DEFINE l_detail4    RECORD LIKE stfw_t.* #此變數樣板目前無使用
 
   DEFINE l_detail5    RECORD LIKE stfc_t.* #此變數樣板目前無使用
 
   DEFINE l_detail6    RECORD LIKE stfe_t.* #此變數樣板目前無使用
 
   DEFINE l_detail7    RECORD LIKE stfg_t.* #此變數樣板目前無使用
 
   DEFINE l_detail8    RECORD LIKE stfh_t.* #此變數樣板目前無使用
 
   DEFINE l_detail9    RECORD LIKE stfi_t.* #此變數樣板目前無使用
 
   DEFINE l_detail10    RECORD LIKE stfj_t.* #此變數樣板目前無使用
 
   DEFINE l_detail11    RECORD LIKE stff_t.* #此變數樣板目前無使用
 
 
   DEFINE l_detail12    RECORD LIKE stfd_t.* #此變數樣板目前無使用
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE astm401_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stfb_t
    WHERE stfbent = g_enterprise AND stfb001 = g_stfa001_t
 
    INTO TEMP astm401_detail
 
   #將key修正為調整後   
   UPDATE astm401_detail 
      #更新key欄位
      SET stfb001 = g_stfa_m.stfa001
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO stfb_t SELECT * FROM astm401_detail
   
   IF SQLCA.SQLCODE THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astm401_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table2.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stfk_t 
    WHERE stfkent = g_enterprise AND stfk001 = g_stfa001_t
 
    INTO TEMP astm401_detail
 
   #將key修正為調整後   
   UPDATE astm401_detail SET stfk001 = g_stfa_m.stfa001
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table2.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO stfk_t SELECT * FROM astm401_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table2.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astm401_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table2.a_insert"
   
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table3.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stfl_t 
    WHERE stflent = g_enterprise AND stfl001 = g_stfa001_t
 
    INTO TEMP astm401_detail
 
   #將key修正為調整後   
   UPDATE astm401_detail SET stfl001 = g_stfa_m.stfa001
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table3.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO stfl_t SELECT * FROM astm401_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table3.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astm401_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table3.a_insert"
   
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table4.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stfw_t 
    WHERE stfwent = g_enterprise AND stfw001 = g_stfa001_t
 
    INTO TEMP astm401_detail
 
   #將key修正為調整後   
   UPDATE astm401_detail SET stfw001 = g_stfa_m.stfa001
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table4.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO stfw_t SELECT * FROM astm401_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table4.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astm401_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table4.a_insert"
   
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table5.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stfc_t 
    WHERE stfcent = g_enterprise AND stfc001 = g_stfa001_t
 
    INTO TEMP astm401_detail
 
   #將key修正為調整後   
   UPDATE astm401_detail SET stfc001 = g_stfa_m.stfa001
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table5.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO stfc_t SELECT * FROM astm401_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table5.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astm401_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table5.a_insert"
   
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table6.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stfe_t 
    WHERE stfeent = g_enterprise AND stfe001 = g_stfa001_t
 
    INTO TEMP astm401_detail
 
   #將key修正為調整後   
   UPDATE astm401_detail SET stfe001 = g_stfa_m.stfa001
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table6.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO stfe_t SELECT * FROM astm401_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table6.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astm401_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table6.a_insert"
   
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table7.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stfg_t 
    WHERE stfgent = g_enterprise AND stfg001 = g_stfa001_t
 
    INTO TEMP astm401_detail
 
   #將key修正為調整後   
   UPDATE astm401_detail SET stfg001 = g_stfa_m.stfa001
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table7.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO stfg_t SELECT * FROM astm401_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table7.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astm401_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table7.a_insert"
   
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table8.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stfh_t 
    WHERE stfhent = g_enterprise AND stfh001 = g_stfa001_t
 
    INTO TEMP astm401_detail
 
   #將key修正為調整後   
   UPDATE astm401_detail SET stfh001 = g_stfa_m.stfa001
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table8.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO stfh_t SELECT * FROM astm401_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table8.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astm401_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table8.a_insert"
   
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table9.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stfi_t 
    WHERE stfient = g_enterprise AND stfi001 = g_stfa001_t
 
    INTO TEMP astm401_detail
 
   #將key修正為調整後   
   UPDATE astm401_detail SET stfi001 = g_stfa_m.stfa001
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table9.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO stfi_t SELECT * FROM astm401_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table9.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astm401_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table9.a_insert"
   
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table10.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stfj_t 
    WHERE stfjent = g_enterprise AND stfj001 = g_stfa001_t
 
    INTO TEMP astm401_detail
 
   #將key修正為調整後   
   UPDATE astm401_detail SET stfj001 = g_stfa_m.stfa001
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table10.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO stfj_t SELECT * FROM astm401_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table10.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astm401_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table10.a_insert"
   
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table11.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stff_t 
    WHERE stffent = g_enterprise AND stff001 = g_stfa001_t
 
    INTO TEMP astm401_detail
 
   #將key修正為調整後   
   UPDATE astm401_detail SET stff001 = g_stfa_m.stfa001
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table11.b_update"
   
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO stff_t SELECT * FROM astm401_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table11.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astm401_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table11.a_insert"
   
   #end add-point
 
 
   
   #add-point:單身複製前 name="detail_reproduce.body.table12.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM stfd_t 
    WHERE stfdent = g_enterprise AND stfd001 = g_stfa001_t
 
    INTO TEMP astm401_detail
 
   #將key修正為調整後   
   UPDATE astm401_detail SET stfd001 = g_stfa_m.stfa001
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table12.b_update"
   
   #end add-point    
  
   #將資料塞回原table   
   INSERT INTO stfd_t SELECT * FROM astm401_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table12.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE astm401_detail
   
   LET g_data_owner = g_stfa_m.stfaownid      
   LET g_data_dept  = g_stfa_m.stfaowndp
   
   #add-point:單身複製後 name="detail_reproduce.body.table12.a_insert"
   
   #end add-point
 
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_stfa001_t = g_stfa_m.stfa001
 
   
END FUNCTION
 
{</section>}
 
{<section id="astm401.delete" >}
#+ 資料刪除
PRIVATE FUNCTION astm401_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_stfa_m.stfa001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   LET g_master_multi_table_t.stfal001 = g_stfa_m.stfa001
LET g_master_multi_table_t.stfal003 = g_stfa_m.stfal003
LET g_master_multi_table_t.stfal004 = g_stfa_m.stfal004
 
   
   CALL s_transaction_begin()
 
   OPEN astm401_cl USING g_enterprise,g_stfa_m.stfa001
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN astm401_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE astm401_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE astm401_master_referesh USING g_stfa_m.stfa001 INTO g_stfa_m.stfaunit,g_stfa_m.stfasite,g_stfa_m.stfa001, 
       g_stfa_m.stfa002,g_stfa_m.stfa003,g_stfa_m.stfa004,g_stfa_m.stfa009,g_stfa_m.stfastus,g_stfa_m.stfa010, 
       g_stfa_m.stfa005,g_stfa_m.stfa007,g_stfa_m.stfa008,g_stfa_m.stfa047,g_stfa_m.stfa048,g_stfa_m.stfa044, 
       g_stfa_m.stfa051,g_stfa_m.stfa011,g_stfa_m.stfa012,g_stfa_m.stfa033,g_stfa_m.stfa034,g_stfa_m.stfa036, 
       g_stfa_m.stfa037,g_stfa_m.stfa038,g_stfa_m.stfa045,g_stfa_m.stfa046,g_stfa_m.stfa029,g_stfa_m.stfa030, 
       g_stfa_m.stfa032,g_stfa_m.stfa035,g_stfa_m.stfa050,g_stfa_m.stfa028,g_stfa_m.stfa057,g_stfa_m.stfa058, 
       g_stfa_m.stfa039,g_stfa_m.stfa040,g_stfa_m.stfa052,g_stfa_m.stfa013,g_stfa_m.stfa014,g_stfa_m.stfa015, 
       g_stfa_m.stfa016,g_stfa_m.stfa006,g_stfa_m.stfa053,g_stfa_m.stfa055,g_stfa_m.stfa017,g_stfa_m.stfa021, 
       g_stfa_m.stfa024,g_stfa_m.stfa018,g_stfa_m.stfa022,g_stfa_m.stfa025,g_stfa_m.stfa019,g_stfa_m.stfa023, 
       g_stfa_m.stfa026,g_stfa_m.stfa020,g_stfa_m.stfa049,g_stfa_m.stfa056,g_stfa_m.stfa054,g_stfa_m.stfa027, 
       g_stfa_m.stfa031,g_stfa_m.stfa043,g_stfa_m.stfaownid,g_stfa_m.stfaowndp,g_stfa_m.stfacrtid,g_stfa_m.stfacrtdp, 
       g_stfa_m.stfacrtdt,g_stfa_m.stfamodid,g_stfa_m.stfamoddt,g_stfa_m.stfacnfid,g_stfa_m.stfacnfdt, 
       g_stfa_m.stfaunit_desc,g_stfa_m.stfasite_desc,g_stfa_m.stfa010_desc,g_stfa_m.stfa010_desc_desc, 
       g_stfa_m.stfa047_desc,g_stfa_m.stfa048_desc,g_stfa_m.stfa044_desc,g_stfa_m.stfa051_desc,g_stfa_m.stfa011_desc, 
       g_stfa_m.stfa012_desc,g_stfa_m.stfa032_desc,g_stfa_m.stfa035_desc,g_stfa_m.stfaownid_desc,g_stfa_m.stfaowndp_desc, 
       g_stfa_m.stfacrtid_desc,g_stfa_m.stfacrtdp_desc,g_stfa_m.stfamodid_desc,g_stfa_m.stfacnfid_desc 
 
   
   
   #檢查是否允許此動作
   IF NOT astm401_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_stfa_m_mask_o.* =  g_stfa_m.*
   CALL astm401_stfa_t_mask()
   LET g_stfa_m_mask_n.* =  g_stfa_m.*
   
   CALL astm401_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL astm401_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_stfa001_t = g_stfa_m.stfa001
 
 
      DELETE FROM stfa_t
       WHERE stfaent = g_enterprise AND stfa001 = g_stfa_m.stfa001
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      
      #end add-point
       
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_stfa_m.stfa001,":",SQLERRMESSAGE  
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      #end add-point
      
      DELETE FROM stfb_t
       WHERE stfbent = g_enterprise AND stfb001 = g_stfa_m.stfa001
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
      
      #end add-point
         
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfb_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      
      #end add-point
      
            
                                                               
      #add-point:單身刪除前 name="delete.body.b_delete2"
      
      #end add-point
      DELETE FROM stfk_t
       WHERE stfkent = g_enterprise AND
             stfk001 = g_stfa_m.stfa001
      #add-point:單身刪除中 name="delete.body.m_delete2"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfk_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete2"
      
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete3"
      
      #end add-point
      DELETE FROM stfl_t
       WHERE stflent = g_enterprise AND
             stfl001 = g_stfa_m.stfa001
      #add-point:單身刪除中 name="delete.body.m_delete3"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfl_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete3"
      
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete4"
      
      #end add-point
      DELETE FROM stfw_t
       WHERE stfwent = g_enterprise AND
             stfw001 = g_stfa_m.stfa001
      #add-point:單身刪除中 name="delete.body.m_delete4"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfw_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete4"
      
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete5"
      
      #end add-point
      DELETE FROM stfc_t
       WHERE stfcent = g_enterprise AND
             stfc001 = g_stfa_m.stfa001
      #add-point:單身刪除中 name="delete.body.m_delete5"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfc_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete5"
      
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete6"
      
      #end add-point
      DELETE FROM stfe_t
       WHERE stfeent = g_enterprise AND
             stfe001 = g_stfa_m.stfa001
      #add-point:單身刪除中 name="delete.body.m_delete6"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfe_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete6"
      
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete7"
      
      #end add-point
      DELETE FROM stfg_t
       WHERE stfgent = g_enterprise AND
             stfg001 = g_stfa_m.stfa001
      #add-point:單身刪除中 name="delete.body.m_delete7"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfg_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete7"
      
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete8"
      
      #end add-point
      DELETE FROM stfh_t
       WHERE stfhent = g_enterprise AND
             stfh001 = g_stfa_m.stfa001
      #add-point:單身刪除中 name="delete.body.m_delete8"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfh_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete8"
      
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete9"
      
      #end add-point
      DELETE FROM stfi_t
       WHERE stfient = g_enterprise AND
             stfi001 = g_stfa_m.stfa001
      #add-point:單身刪除中 name="delete.body.m_delete9"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfi_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete9"
      
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete10"
      
      #end add-point
      DELETE FROM stfj_t
       WHERE stfjent = g_enterprise AND
             stfj001 = g_stfa_m.stfa001
      #add-point:單身刪除中 name="delete.body.m_delete10"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfj_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete10"
      
      #end add-point
 
      #add-point:單身刪除前 name="delete.body.b_delete11"
      
      #end add-point
      DELETE FROM stff_t
       WHERE stffent = g_enterprise AND
             stff001 = g_stfa_m.stfa001
      #add-point:單身刪除中 name="delete.body.m_delete11"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfd_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete11"
      
      #end add-point
 
 
 
      #add-point:單身刪除前 name="delete.body.b_delete12"
      
      #end add-point
      DELETE FROM stfd_t
       WHERE stfdent = g_enterprise AND
             stfd001 = g_stfa_m.stfa001
      #add-point:單身刪除中 name="delete.body.m_delete12"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfd_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete12"
      
      #end add-point
 
 
      
      #修改歷程記錄(刪除)
      LET g_log1 = util.JSON.stringify(g_stfa_m)   #(ver:78)
      IF NOT cl_log_modified_record(g_log1,'') THEN    #(ver:78)
         CLOSE astm401_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_stfb_d.clear() 
      CALL g_stfb10_d.clear()       
      CALL g_stfb11_d.clear()       
      CALL g_stfb12_d.clear()       
      CALL g_stfb2_d.clear()       
      CALL g_stfb3_d.clear()       
      CALL g_stfb4_d.clear()       
      CALL g_stfb5_d.clear()       
      CALL g_stfb6_d.clear()       
      CALL g_stfb7_d.clear()       
      CALL g_stfb8_d.clear()       
      CALL g_stfb9_d.clear()       
 
     
      CALL astm401_ui_browser_refresh()  
      #CALL astm401_ui_headershow()  
      #CALL astm401_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      
      #end add-point
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_enterprise
   LET l_field_keys[01] = 'stfalent'
   LET l_var_keys_bak[02] = g_master_multi_table_t.stfal001
   LET l_field_keys[02] = 'stfal001'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'stfal_t')
 
      
      #單身多語言刪除
      
      
      
      
      
      
      
      
      
      
      
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL astm401_browser_fill("")
         CALL astm401_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE astm401_cl
 
   #功能已完成,通報訊息中心
   CALL astm401_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="astm401.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION astm401_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   DEFINE l_date     LIKE type_t.dat
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #清空第一階單身
   CALL g_stfb_d.clear()
   CALL g_stfb10_d.clear()
   CALL g_stfb11_d.clear()
   CALL g_stfb12_d.clear()
   CALL g_stfb2_d.clear()
   CALL g_stfb3_d.clear()
   CALL g_stfb4_d.clear()
   CALL g_stfb5_d.clear()
   CALL g_stfb6_d.clear()
   CALL g_stfb7_d.clear()
   CALL g_stfb9_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   
   #end add-point
   
   #判斷是否填充
   IF astm401_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stfbseq,stfb002,stfb018,stfb019,stfb003,stfb004,stfb005,stfb006, 
             stfb007,stfb020,stfb008,stfb009,stfb010,stfb011,stfb012,stfb013,stfb014,stfb026,stfb015, 
             stfb016,stfb017,stfb021,stfb022,stfb023,stfb024,stfb025,stfbsite,stfbunit ,t1.stael003 , 
             t2.stabl003 ,t3.stabl003 FROM stfb_t",   
                     " INNER JOIN stfa_t ON stfaent = " ||g_enterprise|| " AND stfa001 = stfb001 ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
                     " ",
 
 
                                    " LEFT JOIN stael_t t1 ON t1.staelent="||g_enterprise||" AND t1.stael001=stfb002 AND t1.stael002='"||g_dlang||"' ",
               " LEFT JOIN stabl_t t2 ON t2.stablent="||g_enterprise||" AND t2.stabl001=stfb008 AND t2.stabl002='"||g_dlang||"' ",
               " LEFT JOIN stabl_t t3 ON t3.stablent="||g_enterprise||" AND t3.stabl001=stfb009 AND t3.stabl002='"||g_dlang||"' ",
 
                     " WHERE stfbent=? AND stfb001=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stfb_t.stfbseq"
         
         #add-point:單身填充控制 name="b_fill.sql"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astm401_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR astm401_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
   #  OPEN b_fill_cs USING g_enterprise,g_stfa_m.stfa001   #(ver:78)
                                               
      FOREACH b_fill_cs USING g_enterprise,g_stfa_m.stfa001 INTO g_stfb_d[l_ac].stfbseq,g_stfb_d[l_ac].stfb002, 
          g_stfb_d[l_ac].stfb018,g_stfb_d[l_ac].stfb019,g_stfb_d[l_ac].stfb003,g_stfb_d[l_ac].stfb004, 
          g_stfb_d[l_ac].stfb005,g_stfb_d[l_ac].stfb006,g_stfb_d[l_ac].stfb007,g_stfb_d[l_ac].stfb020, 
          g_stfb_d[l_ac].stfb008,g_stfb_d[l_ac].stfb009,g_stfb_d[l_ac].stfb010,g_stfb_d[l_ac].stfb011, 
          g_stfb_d[l_ac].stfb012,g_stfb_d[l_ac].stfb013,g_stfb_d[l_ac].stfb014,g_stfb_d[l_ac].stfb026, 
          g_stfb_d[l_ac].stfb015,g_stfb_d[l_ac].stfb016,g_stfb_d[l_ac].stfb017,g_stfb_d[l_ac].stfb021, 
          g_stfb_d[l_ac].stfb022,g_stfb_d[l_ac].stfb023,g_stfb_d[l_ac].stfb024,g_stfb_d[l_ac].stfb025, 
          g_stfb_d[l_ac].stfbsite,g_stfb_d[l_ac].stfbunit,g_stfb_d[l_ac].stfb002_desc,g_stfb_d[l_ac].stfb008_desc, 
          g_stfb_d[l_ac].stfb009_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code = 9035 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
   #判斷是否填充
   IF astm401_fill_chk(2) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body2.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stfkunit,stfksite,stfkseq,stfk002,stfk020,stfk021,stfk003,stfk004, 
             stfk018,stfk019,stfk005,stfk006,stfk007,stfk008,stfk009,stfk010,stfk011,stfk012,stfk013, 
             stfk014,stfkacti,stfk015,stfk016,stfk017,stfk022,stfk023,stfk024,stfk025,stfk026 ,t4.stael003 , 
             t5.ooial003 ,t6.stabl003 ,t7.stabl003 FROM stfk_t",   
                     " INNER JOIN  stfa_t ON stfaent = " ||g_enterprise|| " AND stfa001 = stfk001 ",
 
                     "",
                     
                                    " LEFT JOIN stael_t t4 ON t4.staelent="||g_enterprise||" AND t4.stael001=stfk002 AND t4.stael002='"||g_dlang||"' ",
               " LEFT JOIN ooial_t t5 ON t5.ooialent="||g_enterprise||" AND t5.ooial001=stfk019 AND t5.ooial002='"||g_dlang||"' ",
               " LEFT JOIN stabl_t t6 ON t6.stablent="||g_enterprise||" AND t6.stabl001=stfk008 AND t6.stabl002='"||g_dlang||"' ",
               " LEFT JOIN stabl_t t7 ON t7.stablent="||g_enterprise||" AND t7.stabl001=stfk009 AND t7.stabl002='"||g_dlang||"' ",
 
                     " WHERE stfkent=? AND stfk001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body2.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stfk_t.stfkseq"
         
         #add-point:單身填充控制 name="b_fill.sql2"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astm401_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR astm401_pb2
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs2 USING g_enterprise,g_stfa_m.stfa001   #(ver:78)
                                               
      FOREACH b_fill_cs2 USING g_enterprise,g_stfa_m.stfa001 INTO g_stfb10_d[l_ac].stfkunit,g_stfb10_d[l_ac].stfksite, 
          g_stfb10_d[l_ac].stfkseq,g_stfb10_d[l_ac].stfk002,g_stfb10_d[l_ac].stfk020,g_stfb10_d[l_ac].stfk021, 
          g_stfb10_d[l_ac].stfk003,g_stfb10_d[l_ac].stfk004,g_stfb10_d[l_ac].stfk018,g_stfb10_d[l_ac].stfk019, 
          g_stfb10_d[l_ac].stfk005,g_stfb10_d[l_ac].stfk006,g_stfb10_d[l_ac].stfk007,g_stfb10_d[l_ac].stfk008, 
          g_stfb10_d[l_ac].stfk009,g_stfb10_d[l_ac].stfk010,g_stfb10_d[l_ac].stfk011,g_stfb10_d[l_ac].stfk012, 
          g_stfb10_d[l_ac].stfk013,g_stfb10_d[l_ac].stfk014,g_stfb10_d[l_ac].stfkacti,g_stfb10_d[l_ac].stfk015, 
          g_stfb10_d[l_ac].stfk016,g_stfb10_d[l_ac].stfk017,g_stfb10_d[l_ac].stfk022,g_stfb10_d[l_ac].stfk023, 
          g_stfb10_d[l_ac].stfk024,g_stfb10_d[l_ac].stfk025,g_stfb10_d[l_ac].stfk026,g_stfb10_d[l_ac].stfk002_desc, 
          g_stfb10_d[l_ac].stfk019_desc,g_stfb10_d[l_ac].stfk008_desc,g_stfb10_d[l_ac].stfk009_desc  
            #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill2.fill"
 
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF astm401_fill_chk(3) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body3.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stflunit,stflsite,stflacti,stflseq,stfl002,stfl003,stfl004,stfl005, 
             stfl006,stfl007,stfl008,stfl009 ,t8.stael003 FROM stfl_t",   
                     " INNER JOIN  stfa_t ON stfaent = " ||g_enterprise|| " AND stfa001 = stfl001 ",
 
                     "",
                     
                                    " LEFT JOIN stael_t t8 ON t8.staelent="||g_enterprise||" AND t8.stael001=stfl002 AND t8.stael002='"||g_dlang||"' ",
 
                     " WHERE stflent=? AND stfl001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body3.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table3) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stfl_t.stflseq"
         
         #add-point:單身填充控制 name="b_fill.sql3"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astm401_pb3 FROM g_sql
         DECLARE b_fill_cs3 CURSOR FOR astm401_pb3
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs3 USING g_enterprise,g_stfa_m.stfa001   #(ver:78)
                                               
      FOREACH b_fill_cs3 USING g_enterprise,g_stfa_m.stfa001 INTO g_stfb11_d[l_ac].stflunit,g_stfb11_d[l_ac].stflsite, 
          g_stfb11_d[l_ac].stflacti,g_stfb11_d[l_ac].stflseq,g_stfb11_d[l_ac].stfl002,g_stfb11_d[l_ac].stfl003, 
          g_stfb11_d[l_ac].stfl004,g_stfb11_d[l_ac].stfl005,g_stfb11_d[l_ac].stfl006,g_stfb11_d[l_ac].stfl007, 
          g_stfb11_d[l_ac].stfl008,g_stfb11_d[l_ac].stfl009,g_stfb11_d[l_ac].stfl002_desc   #(ver:78) 
 
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill3.fill"
         
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF astm401_fill_chk(4) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body4.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stfwunit,stfwsite,stfwseq,stfw002,stfw003,stfw004,stfw005,stfw006, 
             stfw007,stfw008,stfwacti ,t9.stael003 FROM stfw_t",   
                     " INNER JOIN  stfa_t ON stfaent = " ||g_enterprise|| " AND stfa001 = stfw001 ",
 
                     "",
                     
                                    " LEFT JOIN stael_t t9 ON t9.staelent="||g_enterprise||" AND t9.stael001=stfw004 AND t9.stael002='"||g_dlang||"' ",
 
                     " WHERE stfwent=? AND stfw001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body4.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table4) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table4 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stfw_t.stfwseq"
         
         #add-point:單身填充控制 name="b_fill.sql4"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astm401_pb4 FROM g_sql
         DECLARE b_fill_cs4 CURSOR FOR astm401_pb4
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs4 USING g_enterprise,g_stfa_m.stfa001   #(ver:78)
                                               
      FOREACH b_fill_cs4 USING g_enterprise,g_stfa_m.stfa001 INTO g_stfb12_d[l_ac].stfwunit,g_stfb12_d[l_ac].stfwsite, 
          g_stfb12_d[l_ac].stfwseq,g_stfb12_d[l_ac].stfw002,g_stfb12_d[l_ac].stfw003,g_stfb12_d[l_ac].stfw004, 
          g_stfb12_d[l_ac].stfw005,g_stfb12_d[l_ac].stfw006,g_stfb12_d[l_ac].stfw007,g_stfb12_d[l_ac].stfw008, 
          g_stfb12_d[l_ac].stfwacti,g_stfb12_d[l_ac].stfw004_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill4.fill"
         CALL astm401_stfw003_get(g_stfb12_d[l_ac].stfw002,g_stfb12_d[l_ac].stfw003) 
              RETURNING g_stfb12_d[l_ac].stfw004,g_stfb12_d[l_ac].stfw004_desc
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF astm401_fill_chk(5) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body5.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stfcseq,stfcacti,stfc024,stfc002,stfc003,stfc025,stfc004,stfc005, 
             stfc006,stfc007,stfc008,stfc009,stfc026,stfc027,stfc010,stfc011,stfc012,stfc013,stfc014, 
             stfc015,stfc016,stfc017,stfc018,stfc019,stfc020,stfc021,stfc022,stfc023,stfcsite,stfcunit , 
             t10.rtaxl003 ,t11.oocql004 ,t12.stael003 ,t13.stabl003 ,t14.stabl003 FROM stfc_t",   
                     " INNER JOIN  stfa_t ON stfaent = " ||g_enterprise|| " AND stfa001 = stfc001 ",
 
                     "",
                     " LEFT JOIN stfd_t ON stfcent = stfdent AND stfc001 = stfd001 AND stfcseq = stfdseq ",
                                    " LEFT JOIN rtaxl_t t10 ON t10.rtaxlent="||g_enterprise||" AND t10.rtaxl001=stfc004 AND t10.rtaxl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t11 ON t11.oocqlent="||g_enterprise||" AND t11.oocql001='2002' AND t11.oocql002=stfc005 AND t11.oocql003='"||g_dlang||"' ",
               " LEFT JOIN stael_t t12 ON t12.staelent="||g_enterprise||" AND t12.stael001=stfc009 AND t12.stael002='"||g_dlang||"' ",
               " LEFT JOIN stabl_t t13 ON t13.stablent="||g_enterprise||" AND t13.stabl001=stfc015 AND t13.stabl002='"||g_dlang||"' ",
               " LEFT JOIN stabl_t t14 ON t14.stablent="||g_enterprise||" AND t14.stabl001=stfc016 AND t14.stabl002='"||g_dlang||"' ",
 
                     " WHERE stfcent=? AND stfc001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body5.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table5) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table5 CLIPPED
         END IF
         
         #子單身的WC
            IF NOT cl_null(g_wc2_table12) THEN 
      LET g_sql = g_sql CLIPPED," AND ", g_wc2_table12 CLIPPED
   END IF 
 
         
         LET g_sql = g_sql, " ORDER BY stfc_t.stfcseq"
         
         #add-point:單身填充控制 name="b_fill.sql5"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astm401_pb5 FROM g_sql
         DECLARE b_fill_cs5 CURSOR FOR astm401_pb5
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs5 USING g_enterprise,g_stfa_m.stfa001   #(ver:78)
                                               
      FOREACH b_fill_cs5 USING g_enterprise,g_stfa_m.stfa001 INTO g_stfb2_d[l_ac].stfcseq,g_stfb2_d[l_ac].stfcacti, 
          g_stfb2_d[l_ac].stfc024,g_stfb2_d[l_ac].stfc002,g_stfb2_d[l_ac].stfc003,g_stfb2_d[l_ac].stfc025, 
          g_stfb2_d[l_ac].stfc004,g_stfb2_d[l_ac].stfc005,g_stfb2_d[l_ac].stfc006,g_stfb2_d[l_ac].stfc007, 
          g_stfb2_d[l_ac].stfc008,g_stfb2_d[l_ac].stfc009,g_stfb2_d[l_ac].stfc026,g_stfb2_d[l_ac].stfc027, 
          g_stfb2_d[l_ac].stfc010,g_stfb2_d[l_ac].stfc011,g_stfb2_d[l_ac].stfc012,g_stfb2_d[l_ac].stfc013, 
          g_stfb2_d[l_ac].stfc014,g_stfb2_d[l_ac].stfc015,g_stfb2_d[l_ac].stfc016,g_stfb2_d[l_ac].stfc017, 
          g_stfb2_d[l_ac].stfc018,g_stfb2_d[l_ac].stfc019,g_stfb2_d[l_ac].stfc020,g_stfb2_d[l_ac].stfc021, 
          g_stfb2_d[l_ac].stfc022,g_stfb2_d[l_ac].stfc023,g_stfb2_d[l_ac].stfcsite,g_stfb2_d[l_ac].stfcunit, 
          g_stfb2_d[l_ac].stfc004_desc,g_stfb2_d[l_ac].stfc005_desc,g_stfb2_d[l_ac].stfc009_desc,g_stfb2_d[l_ac].stfc015_desc, 
          g_stfb2_d[l_ac].stfc016_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill5.fill"
         CALL astm401_stfc006_ref()
         CALL astm401_stfc007_ref()
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF astm401_fill_chk(6) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body6.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stfe002,stfeseq,stfe003,stfe004,stfe005,stfe006,stfe012,stfe007, 
             stfe008,stfe009,stfe010,stfe011,stfesite,stfeunit ,t15.stael003 FROM stfe_t",   
                     " INNER JOIN  stfa_t ON stfaent = " ||g_enterprise|| " AND stfa001 = stfe001 ",
 
                     "",
                     
                                    " LEFT JOIN stael_t t15 ON t15.staelent="||g_enterprise||" AND t15.stael001=stfe003 AND t15.stael002='"||g_dlang||"' ",
 
                     " WHERE stfeent=? AND stfe001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body6.fill_sql"
         IF NOT cl_null(g_stfa_m.stfa019) THEN 
            LET l_date = s_date_get_date(g_stfa_m.stfa019,-2,0)
            LET g_sql = g_sql," AND stfe009 >='",l_date,"'"
         END IF 
         #end add-point
         IF NOT cl_null(g_wc2_table6) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table6 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stfe_t.stfeseq,stfe_t.stfe002"
         
         #add-point:單身填充控制 name="b_fill.sql6"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astm401_pb6 FROM g_sql
         DECLARE b_fill_cs6 CURSOR FOR astm401_pb6
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs6 USING g_enterprise,g_stfa_m.stfa001   #(ver:78)
                                               
      FOREACH b_fill_cs6 USING g_enterprise,g_stfa_m.stfa001 INTO g_stfb3_d[l_ac].stfe002,g_stfb3_d[l_ac].stfeseq, 
          g_stfb3_d[l_ac].stfe003,g_stfb3_d[l_ac].stfe004,g_stfb3_d[l_ac].stfe005,g_stfb3_d[l_ac].stfe006, 
          g_stfb3_d[l_ac].stfe012,g_stfb3_d[l_ac].stfe007,g_stfb3_d[l_ac].stfe008,g_stfb3_d[l_ac].stfe009, 
          g_stfb3_d[l_ac].stfe010,g_stfb3_d[l_ac].stfe011,g_stfb3_d[l_ac].stfesite,g_stfb3_d[l_ac].stfeunit, 
          g_stfb3_d[l_ac].stfe003_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill6.fill"
 
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF astm401_fill_chk(7) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body7.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stfgseq,stfg003,stfg002,stfg004,stfg005,stfgacti,stfgsite,stfgunit  FROM stfg_t", 
                
                     " INNER JOIN  stfa_t ON stfaent = " ||g_enterprise|| " AND stfa001 = stfg001 ",
 
                     "",
                     
                     
                     " WHERE stfgent=? AND stfg001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body7.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table7) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table7 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stfg_t.stfgseq"
         
         #add-point:單身填充控制 name="b_fill.sql7"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astm401_pb7 FROM g_sql
         DECLARE b_fill_cs7 CURSOR FOR astm401_pb7
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs7 USING g_enterprise,g_stfa_m.stfa001   #(ver:78)
                                               
      FOREACH b_fill_cs7 USING g_enterprise,g_stfa_m.stfa001 INTO g_stfb4_d[l_ac].stfgseq,g_stfb4_d[l_ac].stfg003, 
          g_stfb4_d[l_ac].stfg002,g_stfb4_d[l_ac].stfg004,g_stfb4_d[l_ac].stfg005,g_stfb4_d[l_ac].stfgacti, 
          g_stfb4_d[l_ac].stfgsite,g_stfb4_d[l_ac].stfgunit   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill7.fill"
         CALL astm401_stfg003_ref()
         CALL astm401_stfg002_ref()
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF astm401_fill_chk(8) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body8.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stfhseq,stfh002,stfh003,stfhacti,stfhsite,stfhunit  FROM stfh_t", 
                
                     " INNER JOIN  stfa_t ON stfaent = " ||g_enterprise|| " AND stfa001 = stfh001 ",
 
                     "",
                     
                     
                     " WHERE stfhent=? AND stfh001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body8.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table8) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table8 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stfh_t.stfhseq"
         
         #add-point:單身填充控制 name="b_fill.sql8"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astm401_pb8 FROM g_sql
         DECLARE b_fill_cs8 CURSOR FOR astm401_pb8
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs8 USING g_enterprise,g_stfa_m.stfa001   #(ver:78)
                                               
      FOREACH b_fill_cs8 USING g_enterprise,g_stfa_m.stfa001 INTO g_stfb5_d[l_ac].stfhseq,g_stfb5_d[l_ac].stfh002, 
          g_stfb5_d[l_ac].stfh003,g_stfb5_d[l_ac].stfhacti,g_stfb5_d[l_ac].stfhsite,g_stfb5_d[l_ac].stfhunit  
            #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill8.fill"
         
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF astm401_fill_chk(9) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body9.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stfiseq,stfi002,stfi003,stfi005,stfi006,stfi004,stfi007,stfi010, 
             stfi008,stfi009,stfiacti,stfi011,stfi012,stfisite,stfiunit ,t16.stael003 ,t17.oocql004 FROM stfi_t", 
                
                     " INNER JOIN  stfa_t ON stfaent = " ||g_enterprise|| " AND stfa001 = stfi001 ",
 
                     "",
                     
                                    " LEFT JOIN stael_t t16 ON t16.staelent="||g_enterprise||" AND t16.stael001=stfi003 AND t16.stael002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t17 ON t17.oocqlent="||g_enterprise||" AND t17.oocql001='2132' AND t17.oocql002=stfi010 AND t17.oocql003='"||g_dlang||"' ",
 
                     " WHERE stfient=? AND stfi001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body9.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table9) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table9 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stfi_t.stfiseq"
         
         #add-point:單身填充控制 name="b_fill.sql9"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astm401_pb9 FROM g_sql
         DECLARE b_fill_cs9 CURSOR FOR astm401_pb9
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs9 USING g_enterprise,g_stfa_m.stfa001   #(ver:78)
                                               
      FOREACH b_fill_cs9 USING g_enterprise,g_stfa_m.stfa001 INTO g_stfb6_d[l_ac].stfiseq,g_stfb6_d[l_ac].stfi002, 
          g_stfb6_d[l_ac].stfi003,g_stfb6_d[l_ac].stfi005,g_stfb6_d[l_ac].stfi006,g_stfb6_d[l_ac].stfi004, 
          g_stfb6_d[l_ac].stfi007,g_stfb6_d[l_ac].stfi010,g_stfb6_d[l_ac].stfi008,g_stfb6_d[l_ac].stfi009, 
          g_stfb6_d[l_ac].stfiacti,g_stfb6_d[l_ac].stfi011,g_stfb6_d[l_ac].stfi012,g_stfb6_d[l_ac].stfisite, 
          g_stfb6_d[l_ac].stfiunit,g_stfb6_d[l_ac].stfi003_desc,g_stfb6_d[l_ac].stfi010_desc   #(ver:78) 
 
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill9.fill"
         
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF astm401_fill_chk(10) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body10.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stfjseq,stfj002,stfj003,stfj004,stfj005,stfj006,stfjsite,stfjunit  FROM stfj_t", 
                
                     " INNER JOIN  stfa_t ON stfaent = " ||g_enterprise|| " AND stfa001 = stfj001 ",
 
                     "",
                     
                     
                     " WHERE stfjent=? AND stfj001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body10.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table10) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table10 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stfj_t.stfjseq"
         
         #add-point:單身填充控制 name="b_fill.sql10"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astm401_pb10 FROM g_sql
         DECLARE b_fill_cs10 CURSOR FOR astm401_pb10
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs10 USING g_enterprise,g_stfa_m.stfa001   #(ver:78)
                                               
      FOREACH b_fill_cs10 USING g_enterprise,g_stfa_m.stfa001 INTO g_stfb7_d[l_ac].stfjseq,g_stfb7_d[l_ac].stfj002, 
          g_stfb7_d[l_ac].stfj003,g_stfb7_d[l_ac].stfj004,g_stfb7_d[l_ac].stfj005,g_stfb7_d[l_ac].stfj006, 
          g_stfb7_d[l_ac].stfjsite,g_stfb7_d[l_ac].stfjunit   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill10.fill"
         
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF astm401_fill_chk(11) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body11.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT stffseq,stff002,stff003,stff004,stff005,stff006,stff007,stff010, 
             stff008,stff011,stff009,stffsite,stffunit ,t20.inayl003 FROM stff_t",   
                     " INNER JOIN  stfa_t ON stfaent = " ||g_enterprise|| " AND stfa001 = stff001 ",
 
                     "",
                     
                                    " LEFT JOIN inayl_t t20 ON t20.inaylent="||g_enterprise||" AND t20.inayl001=stff005 AND t20.inayl002='"||g_dlang||"' ",
 
                     " WHERE stffent=? AND stff001=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body11.fill_sql"
         LET g_sql = "SELECT  UNIQUE stffseq,stff002,stff003,stff004,stff005,stff006,stff007,stff010, 
             stff008,stff011,stff009,stffsite,stffunit ,t20.inayl003 FROM stfe_t,stff_t",   
                     " LEFT JOIN inayl_t t20 ON t20.inaylent='"||g_enterprise||"' AND t20.inayl001=stff005 AND t20.inayl002='"||g_dlang||"' ",
                     " WHERE stffent=? AND stff001=? ",
                     "   AND stfeent = stffent ",
                     "   AND stfe001 = stff001 ",
                     "   AND stfe002 = stff002 ",
                     "   AND stff003 = stfeseq "
         IF NOT cl_null(g_stfa_m.stfa019) THEN 
            LET l_date = s_date_get_date(g_stfa_m.stfa019,-2,0)
            LET g_sql = g_sql," AND stfe009 >='",l_date,"'"
         END IF 
         #end add-point
         IF NOT cl_null(g_wc2_table11) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table11 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY stff_t.stffseq,stff_t.stff002,stff_t.stff003"
         
         #add-point:單身填充控制 name="b_fill.sql11"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astm401_pb11 FROM g_sql
         DECLARE b_fill_cs11 CURSOR FOR astm401_pb11
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs11 USING g_enterprise,g_stfa_m.stfa001   #(ver:78)
                                               
      FOREACH b_fill_cs11 USING g_enterprise,g_stfa_m.stfa001 INTO g_stfb9_d[l_ac].stffseq,g_stfb9_d[l_ac].stff002, 
          g_stfb9_d[l_ac].stff003,g_stfb9_d[l_ac].stff004,g_stfb9_d[l_ac].stff005,g_stfb9_d[l_ac].stff006, 
          g_stfb9_d[l_ac].stff007,g_stfb9_d[l_ac].stff010,g_stfb9_d[l_ac].stff008,g_stfb9_d[l_ac].stff011, 
          g_stfb9_d[l_ac].stff009,g_stfb9_d[l_ac].stffsite,g_stfb9_d[l_ac].stffunit,g_stfb9_d[l_ac].stff005_desc  
            #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill11.fill"
         
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
 
   #end add-point
   
   CALL g_stfb_d.deleteElement(g_stfb_d.getLength())
   CALL g_stfb10_d.deleteElement(g_stfb10_d.getLength())
   CALL g_stfb11_d.deleteElement(g_stfb11_d.getLength())
   CALL g_stfb12_d.deleteElement(g_stfb12_d.getLength())
   CALL g_stfb2_d.deleteElement(g_stfb2_d.getLength())
   CALL g_stfb3_d.deleteElement(g_stfb3_d.getLength())
   CALL g_stfb4_d.deleteElement(g_stfb4_d.getLength())
   CALL g_stfb5_d.deleteElement(g_stfb5_d.getLength())
   CALL g_stfb6_d.deleteElement(g_stfb6_d.getLength())
   CALL g_stfb7_d.deleteElement(g_stfb7_d.getLength())
   CALL g_stfb9_d.deleteElement(g_stfb9_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE astm401_pb
   FREE astm401_pb2
 
   FREE astm401_pb3
 
   FREE astm401_pb4
 
   FREE astm401_pb5
 
   FREE astm401_pb6
 
   FREE astm401_pb7
 
   FREE astm401_pb8
 
   FREE astm401_pb9
 
   FREE astm401_pb10
 
   FREE astm401_pb11
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_stfb_d.getLength()
      LET g_stfb_d_mask_o[l_ac].* =  g_stfb_d[l_ac].*
      CALL astm401_stfb_t_mask()
      LET g_stfb_d_mask_n[l_ac].* =  g_stfb_d[l_ac].*
   END FOR
   
   LET g_stfb10_d_mask_o.* =  g_stfb10_d.*
   FOR l_ac = 1 TO g_stfb10_d.getLength()
      LET g_stfb10_d_mask_o[l_ac].* =  g_stfb10_d[l_ac].*
      CALL astm401_stfk_t_mask()
      LET g_stfb10_d_mask_n[l_ac].* =  g_stfb10_d[l_ac].*
   END FOR
   LET g_stfb11_d_mask_o.* =  g_stfb11_d.*
   FOR l_ac = 1 TO g_stfb11_d.getLength()
      LET g_stfb11_d_mask_o[l_ac].* =  g_stfb11_d[l_ac].*
      CALL astm401_stfl_t_mask()
      LET g_stfb11_d_mask_n[l_ac].* =  g_stfb11_d[l_ac].*
   END FOR
   LET g_stfb12_d_mask_o.* =  g_stfb12_d.*
   FOR l_ac = 1 TO g_stfb12_d.getLength()
      LET g_stfb12_d_mask_o[l_ac].* =  g_stfb12_d[l_ac].*
      CALL astm401_stfw_t_mask()
      LET g_stfb12_d_mask_n[l_ac].* =  g_stfb12_d[l_ac].*
   END FOR
   LET g_stfb2_d_mask_o.* =  g_stfb2_d.*
   FOR l_ac = 1 TO g_stfb2_d.getLength()
      LET g_stfb2_d_mask_o[l_ac].* =  g_stfb2_d[l_ac].*
      CALL astm401_stfc_t_mask()
      LET g_stfb2_d_mask_n[l_ac].* =  g_stfb2_d[l_ac].*
   END FOR
   LET g_stfb3_d_mask_o.* =  g_stfb3_d.*
   FOR l_ac = 1 TO g_stfb3_d.getLength()
      LET g_stfb3_d_mask_o[l_ac].* =  g_stfb3_d[l_ac].*
      CALL astm401_stfe_t_mask()
      LET g_stfb3_d_mask_n[l_ac].* =  g_stfb3_d[l_ac].*
   END FOR
   LET g_stfb4_d_mask_o.* =  g_stfb4_d.*
   FOR l_ac = 1 TO g_stfb4_d.getLength()
      LET g_stfb4_d_mask_o[l_ac].* =  g_stfb4_d[l_ac].*
      CALL astm401_stfg_t_mask()
      LET g_stfb4_d_mask_n[l_ac].* =  g_stfb4_d[l_ac].*
   END FOR
   LET g_stfb5_d_mask_o.* =  g_stfb5_d.*
   FOR l_ac = 1 TO g_stfb5_d.getLength()
      LET g_stfb5_d_mask_o[l_ac].* =  g_stfb5_d[l_ac].*
      CALL astm401_stfh_t_mask()
      LET g_stfb5_d_mask_n[l_ac].* =  g_stfb5_d[l_ac].*
   END FOR
   LET g_stfb6_d_mask_o.* =  g_stfb6_d.*
   FOR l_ac = 1 TO g_stfb6_d.getLength()
      LET g_stfb6_d_mask_o[l_ac].* =  g_stfb6_d[l_ac].*
      CALL astm401_stfi_t_mask()
      LET g_stfb6_d_mask_n[l_ac].* =  g_stfb6_d[l_ac].*
   END FOR
   LET g_stfb7_d_mask_o.* =  g_stfb7_d.*
   FOR l_ac = 1 TO g_stfb7_d.getLength()
      LET g_stfb7_d_mask_o[l_ac].* =  g_stfb7_d[l_ac].*
      CALL astm401_stfj_t_mask()
      LET g_stfb7_d_mask_n[l_ac].* =  g_stfb7_d[l_ac].*
   END FOR
   LET g_stfb8_d_mask_o.* =  g_stfb8_d.*
   FOR l_ac = 1 TO g_stfb8_d.getLength()
      LET g_stfb8_d_mask_o[l_ac].* =  g_stfb8_d[l_ac].*
      CALL astm401_stfd_t_mask()
      LET g_stfb8_d_mask_n[l_ac].* =  g_stfb8_d[l_ac].*
   END FOR
   LET g_stfb9_d_mask_o.* =  g_stfb9_d.*
   FOR l_ac = 1 TO g_stfb9_d.getLength()
      LET g_stfb9_d_mask_o[l_ac].* =  g_stfb9_d[l_ac].*
      CALL astm401_stff_t_mask()
      LET g_stfb9_d_mask_n[l_ac].* =  g_stfb9_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
 
{</section>}
 
{<section id="astm401.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION astm401_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      
      #end add-point    
      DELETE FROM stfb_t
       WHERE stfbent = g_enterprise AND
         stfb001 = ps_keys_bak[1] AND stfbseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_stfb_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete2"
      
      #end add-point    
      DELETE FROM stfk_t
       WHERE stfkent = g_enterprise AND
             stfk001 = ps_keys_bak[1] AND stfkseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete2"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfk_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_stfb10_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete2"
      
      #end add-point    
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete3"
      
      #end add-point    
      DELETE FROM stfl_t
       WHERE stflent = g_enterprise AND
             stfl001 = ps_keys_bak[1] AND stflseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete3"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfl_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_stfb11_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete3"
      
      #end add-point    
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete4"
      
      #end add-point    
      DELETE FROM stfw_t
       WHERE stfwent = g_enterprise AND
             stfw001 = ps_keys_bak[1] AND stfwseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete4"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfw_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_stfb12_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete4"
      
      #end add-point    
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete5"
      
      #end add-point    
      DELETE FROM stfc_t
       WHERE stfcent = g_enterprise AND
             stfc001 = ps_keys_bak[1] AND stfcseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete5"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfc_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'5'" THEN 
         CALL g_stfb2_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete5"
      
      #end add-point    
   END IF
 
   LET ls_group = "'6',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete6"
      
      #end add-point    
      DELETE FROM stfe_t
       WHERE stfeent = g_enterprise AND
             stfe001 = ps_keys_bak[1] AND stfeseq = ps_keys_bak[2] AND stfe002 = ps_keys_bak[3]
      #add-point:delete_b段刪除中 name="delete_b.m_delete6"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfe_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'6'" THEN 
         CALL g_stfb3_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete6"
      
      #end add-point    
   END IF
 
   LET ls_group = "'7',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete7"
      
      #end add-point    
      DELETE FROM stfg_t
       WHERE stfgent = g_enterprise AND
             stfg001 = ps_keys_bak[1] AND stfgseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete7"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfg_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'7'" THEN 
         CALL g_stfb4_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete7"
      
      #end add-point    
   END IF
 
   LET ls_group = "'8',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete8"
      
      #end add-point    
      DELETE FROM stfh_t
       WHERE stfhent = g_enterprise AND
             stfh001 = ps_keys_bak[1] AND stfhseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete8"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfh_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'8'" THEN 
         CALL g_stfb5_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete8"
      
      #end add-point    
   END IF
 
   LET ls_group = "'9',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete9"
      
      #end add-point    
      DELETE FROM stfi_t
       WHERE stfient = g_enterprise AND
             stfi001 = ps_keys_bak[1] AND stfiseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete9"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfi_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'9'" THEN 
         CALL g_stfb6_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete9"
      
      #end add-point    
   END IF
 
   LET ls_group = "'10',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete10"
      
      #end add-point    
      DELETE FROM stfj_t
       WHERE stfjent = g_enterprise AND
             stfj001 = ps_keys_bak[1] AND stfjseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete10"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfj_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'10'" THEN 
         CALL g_stfb7_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete10"
      
      #end add-point    
   END IF
 
   LET ls_group = "'12',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete11"
      
      #end add-point    
      DELETE FROM stff_t
       WHERE stffent = g_enterprise AND
             stff001 = ps_keys_bak[1] AND stffseq = ps_keys_bak[2] AND stff002 = ps_keys_bak[3] AND stff003 = ps_keys_bak[4]
      #add-point:delete_b段刪除中 name="delete_b.m_delete11"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stff_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'12'" THEN 
         CALL g_stfb9_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete11"
      
      #end add-point    
   END IF
 
 
   
   LET ls_group = "'11',"
   #判斷是否是同一群組的table2
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete12"
      
      #end add-point    
      DELETE FROM stfd_t
       WHERE stfdent = g_enterprise AND
             stfd001 = ps_keys_bak[1] AND stfdseq = ps_keys_bak[2] AND stfdseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中 name="delete_b.m_delete12"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfd_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
    
      LET li_idx = g_detail_idx2
      IF ps_page <> "'11'" THEN 
         CALL g_stfb8_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete12"
      
      #end add-point    
   END IF
 
 
   
   #add-point:delete_b段other name="delete_b.other"
   
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="astm401.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION astm401_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      
      #end add-point 
      INSERT INTO stfb_t
                  (stfbent,
                   stfb001,
                   stfbseq
                   ,stfb002,stfb018,stfb019,stfb003,stfb004,stfb005,stfb006,stfb007,stfb020,stfb008,stfb009,stfb010,stfb011,stfb012,stfb013,stfb014,stfb026,stfb015,stfb016,stfb017,stfb021,stfb022,stfb023,stfb024,stfb025,stfbsite,stfbunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stfb_d[g_detail_idx].stfb002,g_stfb_d[g_detail_idx].stfb018,g_stfb_d[g_detail_idx].stfb019, 
                       g_stfb_d[g_detail_idx].stfb003,g_stfb_d[g_detail_idx].stfb004,g_stfb_d[g_detail_idx].stfb005, 
                       g_stfb_d[g_detail_idx].stfb006,g_stfb_d[g_detail_idx].stfb007,g_stfb_d[g_detail_idx].stfb020, 
                       g_stfb_d[g_detail_idx].stfb008,g_stfb_d[g_detail_idx].stfb009,g_stfb_d[g_detail_idx].stfb010, 
                       g_stfb_d[g_detail_idx].stfb011,g_stfb_d[g_detail_idx].stfb012,g_stfb_d[g_detail_idx].stfb013, 
                       g_stfb_d[g_detail_idx].stfb014,g_stfb_d[g_detail_idx].stfb026,g_stfb_d[g_detail_idx].stfb015, 
                       g_stfb_d[g_detail_idx].stfb016,g_stfb_d[g_detail_idx].stfb017,g_stfb_d[g_detail_idx].stfb021, 
                       g_stfb_d[g_detail_idx].stfb022,g_stfb_d[g_detail_idx].stfb023,g_stfb_d[g_detail_idx].stfb024, 
                       g_stfb_d[g_detail_idx].stfb025,g_stfb_d[g_detail_idx].stfbsite,g_stfb_d[g_detail_idx].stfbunit) 
 
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      
      #end add-point 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfb_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_stfb_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert2"
      
      #end add-point 
      INSERT INTO stfk_t
                  (stfkent,
                   stfk001,
                   stfkseq
                   ,stfkunit,stfksite,stfk002,stfk020,stfk021,stfk003,stfk004,stfk018,stfk019,stfk005,stfk006,stfk007,stfk008,stfk009,stfk010,stfk011,stfk012,stfk013,stfk014,stfkacti,stfk015,stfk016,stfk017,stfk022,stfk023,stfk024,stfk025,stfk026) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stfb10_d[g_detail_idx].stfkunit,g_stfb10_d[g_detail_idx].stfksite,g_stfb10_d[g_detail_idx].stfk002, 
                       g_stfb10_d[g_detail_idx].stfk020,g_stfb10_d[g_detail_idx].stfk021,g_stfb10_d[g_detail_idx].stfk003, 
                       g_stfb10_d[g_detail_idx].stfk004,g_stfb10_d[g_detail_idx].stfk018,g_stfb10_d[g_detail_idx].stfk019, 
                       g_stfb10_d[g_detail_idx].stfk005,g_stfb10_d[g_detail_idx].stfk006,g_stfb10_d[g_detail_idx].stfk007, 
                       g_stfb10_d[g_detail_idx].stfk008,g_stfb10_d[g_detail_idx].stfk009,g_stfb10_d[g_detail_idx].stfk010, 
                       g_stfb10_d[g_detail_idx].stfk011,g_stfb10_d[g_detail_idx].stfk012,g_stfb10_d[g_detail_idx].stfk013, 
                       g_stfb10_d[g_detail_idx].stfk014,g_stfb10_d[g_detail_idx].stfkacti,g_stfb10_d[g_detail_idx].stfk015, 
                       g_stfb10_d[g_detail_idx].stfk016,g_stfb10_d[g_detail_idx].stfk017,g_stfb10_d[g_detail_idx].stfk022, 
                       g_stfb10_d[g_detail_idx].stfk023,g_stfb10_d[g_detail_idx].stfk024,g_stfb10_d[g_detail_idx].stfk025, 
                       g_stfb10_d[g_detail_idx].stfk026)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert2"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfk_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_stfb10_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert2"
      
      #end add-point
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert3"
      
      #end add-point 
      INSERT INTO stfl_t
                  (stflent,
                   stfl001,
                   stflseq
                   ,stflunit,stflsite,stflacti,stfl002,stfl003,stfl004,stfl005,stfl006,stfl007,stfl008,stfl009) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stfb11_d[g_detail_idx].stflunit,g_stfb11_d[g_detail_idx].stflsite,g_stfb11_d[g_detail_idx].stflacti, 
                       g_stfb11_d[g_detail_idx].stfl002,g_stfb11_d[g_detail_idx].stfl003,g_stfb11_d[g_detail_idx].stfl004, 
                       g_stfb11_d[g_detail_idx].stfl005,g_stfb11_d[g_detail_idx].stfl006,g_stfb11_d[g_detail_idx].stfl007, 
                       g_stfb11_d[g_detail_idx].stfl008,g_stfb11_d[g_detail_idx].stfl009)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert3"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfl_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_stfb11_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert3"
      
      #end add-point
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert4"
      
      #end add-point 
      INSERT INTO stfw_t
                  (stfwent,
                   stfw001,
                   stfwseq
                   ,stfwunit,stfwsite,stfw002,stfw003,stfw004,stfw005,stfw006,stfw007,stfw008,stfwacti) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stfb12_d[g_detail_idx].stfwunit,g_stfb12_d[g_detail_idx].stfwsite,g_stfb12_d[g_detail_idx].stfw002, 
                       g_stfb12_d[g_detail_idx].stfw003,g_stfb12_d[g_detail_idx].stfw004,g_stfb12_d[g_detail_idx].stfw005, 
                       g_stfb12_d[g_detail_idx].stfw006,g_stfb12_d[g_detail_idx].stfw007,g_stfb12_d[g_detail_idx].stfw008, 
                       g_stfb12_d[g_detail_idx].stfwacti)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert4"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfw_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_stfb12_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert4"
      
      #end add-point
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert5"
      
      #end add-point 
      INSERT INTO stfc_t
                  (stfcent,
                   stfc001,
                   stfcseq
                   ,stfcacti,stfc024,stfc002,stfc003,stfc025,stfc004,stfc005,stfc006,stfc007,stfc008,stfc009,stfc026,stfc027,stfc010,stfc011,stfc012,stfc013,stfc014,stfc015,stfc016,stfc017,stfc018,stfc019,stfc020,stfc021,stfc022,stfc023,stfcsite,stfcunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stfb2_d[g_detail_idx].stfcacti,g_stfb2_d[g_detail_idx].stfc024,g_stfb2_d[g_detail_idx].stfc002, 
                       g_stfb2_d[g_detail_idx].stfc003,g_stfb2_d[g_detail_idx].stfc025,g_stfb2_d[g_detail_idx].stfc004, 
                       g_stfb2_d[g_detail_idx].stfc005,g_stfb2_d[g_detail_idx].stfc006,g_stfb2_d[g_detail_idx].stfc007, 
                       g_stfb2_d[g_detail_idx].stfc008,g_stfb2_d[g_detail_idx].stfc009,g_stfb2_d[g_detail_idx].stfc026, 
                       g_stfb2_d[g_detail_idx].stfc027,g_stfb2_d[g_detail_idx].stfc010,g_stfb2_d[g_detail_idx].stfc011, 
                       g_stfb2_d[g_detail_idx].stfc012,g_stfb2_d[g_detail_idx].stfc013,g_stfb2_d[g_detail_idx].stfc014, 
                       g_stfb2_d[g_detail_idx].stfc015,g_stfb2_d[g_detail_idx].stfc016,g_stfb2_d[g_detail_idx].stfc017, 
                       g_stfb2_d[g_detail_idx].stfc018,g_stfb2_d[g_detail_idx].stfc019,g_stfb2_d[g_detail_idx].stfc020, 
                       g_stfb2_d[g_detail_idx].stfc021,g_stfb2_d[g_detail_idx].stfc022,g_stfb2_d[g_detail_idx].stfc023, 
                       g_stfb2_d[g_detail_idx].stfcsite,g_stfb2_d[g_detail_idx].stfcunit)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert5"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfc_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'5'" THEN 
         CALL g_stfb2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert5"
      
      #end add-point
   END IF
 
   LET ls_group = "'6',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert6"
      
      #end add-point 
      INSERT INTO stfe_t
                  (stfeent,
                   stfe001,
                   stfeseq,stfe002
                   ,stfe003,stfe004,stfe005,stfe006,stfe012,stfe007,stfe008,stfe009,stfe010,stfe011,stfesite,stfeunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_stfb3_d[g_detail_idx].stfe003,g_stfb3_d[g_detail_idx].stfe004,g_stfb3_d[g_detail_idx].stfe005, 
                       g_stfb3_d[g_detail_idx].stfe006,g_stfb3_d[g_detail_idx].stfe012,g_stfb3_d[g_detail_idx].stfe007, 
                       g_stfb3_d[g_detail_idx].stfe008,g_stfb3_d[g_detail_idx].stfe009,g_stfb3_d[g_detail_idx].stfe010, 
                       g_stfb3_d[g_detail_idx].stfe011,g_stfb3_d[g_detail_idx].stfesite,g_stfb3_d[g_detail_idx].stfeunit) 
 
      #add-point:insert_b段資料新增中 name="insert_b.m_insert6"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfe_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'6'" THEN 
         CALL g_stfb3_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert6"
      
      #end add-point
   END IF
 
   LET ls_group = "'7',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert7"
      
      #end add-point 
      INSERT INTO stfg_t
                  (stfgent,
                   stfg001,
                   stfgseq
                   ,stfg003,stfg002,stfg004,stfg005,stfgacti,stfgsite,stfgunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stfb4_d[g_detail_idx].stfg003,g_stfb4_d[g_detail_idx].stfg002,g_stfb4_d[g_detail_idx].stfg004, 
                       g_stfb4_d[g_detail_idx].stfg005,g_stfb4_d[g_detail_idx].stfgacti,g_stfb4_d[g_detail_idx].stfgsite, 
                       g_stfb4_d[g_detail_idx].stfgunit)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert7"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfg_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'7'" THEN 
         CALL g_stfb4_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert7"
      
      #end add-point
   END IF
 
   LET ls_group = "'8',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert8"
      
      #end add-point 
      INSERT INTO stfh_t
                  (stfhent,
                   stfh001,
                   stfhseq
                   ,stfh002,stfh003,stfhacti,stfhsite,stfhunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stfb5_d[g_detail_idx].stfh002,g_stfb5_d[g_detail_idx].stfh003,g_stfb5_d[g_detail_idx].stfhacti, 
                       g_stfb5_d[g_detail_idx].stfhsite,g_stfb5_d[g_detail_idx].stfhunit)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert8"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfh_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'8'" THEN 
         CALL g_stfb5_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert8"
      
      #end add-point
   END IF
 
   LET ls_group = "'9',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert9"
      
      #end add-point 
      INSERT INTO stfi_t
                  (stfient,
                   stfi001,
                   stfiseq
                   ,stfi002,stfi003,stfi005,stfi006,stfi004,stfi007,stfi010,stfi008,stfi009,stfiacti,stfi011,stfi012,stfisite,stfiunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stfb6_d[g_detail_idx].stfi002,g_stfb6_d[g_detail_idx].stfi003,g_stfb6_d[g_detail_idx].stfi005, 
                       g_stfb6_d[g_detail_idx].stfi006,g_stfb6_d[g_detail_idx].stfi004,g_stfb6_d[g_detail_idx].stfi007, 
                       g_stfb6_d[g_detail_idx].stfi010,g_stfb6_d[g_detail_idx].stfi008,g_stfb6_d[g_detail_idx].stfi009, 
                       g_stfb6_d[g_detail_idx].stfiacti,g_stfb6_d[g_detail_idx].stfi011,g_stfb6_d[g_detail_idx].stfi012, 
                       g_stfb6_d[g_detail_idx].stfisite,g_stfb6_d[g_detail_idx].stfiunit)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert9"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfi_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'9'" THEN 
         CALL g_stfb6_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert9"
      
      #end add-point
   END IF
 
   LET ls_group = "'10',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert10"
      
      #end add-point 
      INSERT INTO stfj_t
                  (stfjent,
                   stfj001,
                   stfjseq
                   ,stfj002,stfj003,stfj004,stfj005,stfj006,stfjsite,stfjunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_stfb7_d[g_detail_idx].stfj002,g_stfb7_d[g_detail_idx].stfj003,g_stfb7_d[g_detail_idx].stfj004, 
                       g_stfb7_d[g_detail_idx].stfj005,g_stfb7_d[g_detail_idx].stfj006,g_stfb7_d[g_detail_idx].stfjsite, 
                       g_stfb7_d[g_detail_idx].stfjunit)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert10"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfj_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'10'" THEN 
         CALL g_stfb7_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert10"
      
      #end add-point
   END IF
 
   LET ls_group = "'12',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert11"
      
      #end add-point 
      INSERT INTO stff_t
                  (stffent,
                   stff001,
                   stffseq,stff002,stff003
                   ,stff004,stff005,stff006,stff007,stff010,stff008,stff011,stff009,stffsite,stffunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
                   ,g_stfb9_d[g_detail_idx].stff004,g_stfb9_d[g_detail_idx].stff005,g_stfb9_d[g_detail_idx].stff006, 
                       g_stfb9_d[g_detail_idx].stff007,g_stfb9_d[g_detail_idx].stff010,g_stfb9_d[g_detail_idx].stff008, 
                       g_stfb9_d[g_detail_idx].stff011,g_stfb9_d[g_detail_idx].stff009,g_stfb9_d[g_detail_idx].stffsite, 
                       g_stfb9_d[g_detail_idx].stffunit)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert11"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stff_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'12'" THEN 
         CALL g_stfb9_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert11"
      
      #end add-point
   END IF
 
 
   
   LET ls_group = "'11',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert12"
      
      #end add-point 
      INSERT INTO stfd_t
                  (stfdent,
                   stfd001,stfdseq,
                   stfdseq1
                   ,stfd002,stfd003,stfd004,stfd005,stfd006,stfd007,stfd008,stfd009,stfdsite,stfdunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_stfb8_d[g_detail_idx2].stfd002,g_stfb8_d[g_detail_idx2].stfd003,g_stfb8_d[g_detail_idx2].stfd004, 
                       g_stfb8_d[g_detail_idx2].stfd005,g_stfb8_d[g_detail_idx2].stfd006,g_stfb8_d[g_detail_idx2].stfd007, 
                       g_stfb8_d[g_detail_idx2].stfd008,g_stfb8_d[g_detail_idx2].stfd009,g_stfb8_d[g_detail_idx2].stfdsite, 
                       g_stfb8_d[g_detail_idx2].stfdunit)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert12"
      
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfd_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx2
      IF ps_page <> "'11'" THEN 
         CALL g_stfb8_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert12"
      
      #end add-point
   END IF
 
 
   
   #add-point:insert_b段other name="insert_b.other"
   
   #end add-point     
   
END FUNCTION
 
{</section>}
 
{<section id="astm401.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION astm401_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stfb_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      
      #end add-point 
      
      #將遮罩欄位還原
      CALL astm401_stfb_t_mask_restore('restore_mask_o')
               
      UPDATE stfb_t 
         SET (stfb001,
              stfbseq
              ,stfb002,stfb018,stfb019,stfb003,stfb004,stfb005,stfb006,stfb007,stfb020,stfb008,stfb009,stfb010,stfb011,stfb012,stfb013,stfb014,stfb026,stfb015,stfb016,stfb017,stfb021,stfb022,stfb023,stfb024,stfb025,stfbsite,stfbunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stfb_d[g_detail_idx].stfb002,g_stfb_d[g_detail_idx].stfb018,g_stfb_d[g_detail_idx].stfb019, 
                  g_stfb_d[g_detail_idx].stfb003,g_stfb_d[g_detail_idx].stfb004,g_stfb_d[g_detail_idx].stfb005, 
                  g_stfb_d[g_detail_idx].stfb006,g_stfb_d[g_detail_idx].stfb007,g_stfb_d[g_detail_idx].stfb020, 
                  g_stfb_d[g_detail_idx].stfb008,g_stfb_d[g_detail_idx].stfb009,g_stfb_d[g_detail_idx].stfb010, 
                  g_stfb_d[g_detail_idx].stfb011,g_stfb_d[g_detail_idx].stfb012,g_stfb_d[g_detail_idx].stfb013, 
                  g_stfb_d[g_detail_idx].stfb014,g_stfb_d[g_detail_idx].stfb026,g_stfb_d[g_detail_idx].stfb015, 
                  g_stfb_d[g_detail_idx].stfb016,g_stfb_d[g_detail_idx].stfb017,g_stfb_d[g_detail_idx].stfb021, 
                  g_stfb_d[g_detail_idx].stfb022,g_stfb_d[g_detail_idx].stfb023,g_stfb_d[g_detail_idx].stfb024, 
                  g_stfb_d[g_detail_idx].stfb025,g_stfb_d[g_detail_idx].stfbsite,g_stfb_d[g_detail_idx].stfbunit)  
 
         WHERE stfbent = g_enterprise AND stfb001 = ps_keys_bak[1] AND stfbseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
      
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfb_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfb_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astm401_stfb_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stfk_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update2"
      
      #end add-point  
      
      #將遮罩欄位還原
      CALL astm401_stfk_t_mask_restore('restore_mask_o')
               
      UPDATE stfk_t 
         SET (stfk001,
              stfkseq
              ,stfkunit,stfksite,stfk002,stfk020,stfk021,stfk003,stfk004,stfk018,stfk019,stfk005,stfk006,stfk007,stfk008,stfk009,stfk010,stfk011,stfk012,stfk013,stfk014,stfkacti,stfk015,stfk016,stfk017,stfk022,stfk023,stfk024,stfk025,stfk026) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stfb10_d[g_detail_idx].stfkunit,g_stfb10_d[g_detail_idx].stfksite,g_stfb10_d[g_detail_idx].stfk002, 
                  g_stfb10_d[g_detail_idx].stfk020,g_stfb10_d[g_detail_idx].stfk021,g_stfb10_d[g_detail_idx].stfk003, 
                  g_stfb10_d[g_detail_idx].stfk004,g_stfb10_d[g_detail_idx].stfk018,g_stfb10_d[g_detail_idx].stfk019, 
                  g_stfb10_d[g_detail_idx].stfk005,g_stfb10_d[g_detail_idx].stfk006,g_stfb10_d[g_detail_idx].stfk007, 
                  g_stfb10_d[g_detail_idx].stfk008,g_stfb10_d[g_detail_idx].stfk009,g_stfb10_d[g_detail_idx].stfk010, 
                  g_stfb10_d[g_detail_idx].stfk011,g_stfb10_d[g_detail_idx].stfk012,g_stfb10_d[g_detail_idx].stfk013, 
                  g_stfb10_d[g_detail_idx].stfk014,g_stfb10_d[g_detail_idx].stfkacti,g_stfb10_d[g_detail_idx].stfk015, 
                  g_stfb10_d[g_detail_idx].stfk016,g_stfb10_d[g_detail_idx].stfk017,g_stfb10_d[g_detail_idx].stfk022, 
                  g_stfb10_d[g_detail_idx].stfk023,g_stfb10_d[g_detail_idx].stfk024,g_stfb10_d[g_detail_idx].stfk025, 
                  g_stfb10_d[g_detail_idx].stfk026) 
         WHERE stfkent = g_enterprise AND stfk001 = ps_keys_bak[1] AND stfkseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update2"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfk_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfk_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astm401_stfk_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update2"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stfl_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update3"
      
      #end add-point  
      
      #將遮罩欄位還原
      CALL astm401_stfl_t_mask_restore('restore_mask_o')
               
      UPDATE stfl_t 
         SET (stfl001,
              stflseq
              ,stflunit,stflsite,stflacti,stfl002,stfl003,stfl004,stfl005,stfl006,stfl007,stfl008,stfl009) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stfb11_d[g_detail_idx].stflunit,g_stfb11_d[g_detail_idx].stflsite,g_stfb11_d[g_detail_idx].stflacti, 
                  g_stfb11_d[g_detail_idx].stfl002,g_stfb11_d[g_detail_idx].stfl003,g_stfb11_d[g_detail_idx].stfl004, 
                  g_stfb11_d[g_detail_idx].stfl005,g_stfb11_d[g_detail_idx].stfl006,g_stfb11_d[g_detail_idx].stfl007, 
                  g_stfb11_d[g_detail_idx].stfl008,g_stfb11_d[g_detail_idx].stfl009) 
         WHERE stflent = g_enterprise AND stfl001 = ps_keys_bak[1] AND stflseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update3"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfl_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfl_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astm401_stfl_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update3"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stfw_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update4"
      
      #end add-point  
      
      #將遮罩欄位還原
      CALL astm401_stfw_t_mask_restore('restore_mask_o')
               
      UPDATE stfw_t 
         SET (stfw001,
              stfwseq
              ,stfwunit,stfwsite,stfw002,stfw003,stfw004,stfw005,stfw006,stfw007,stfw008,stfwacti) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stfb12_d[g_detail_idx].stfwunit,g_stfb12_d[g_detail_idx].stfwsite,g_stfb12_d[g_detail_idx].stfw002, 
                  g_stfb12_d[g_detail_idx].stfw003,g_stfb12_d[g_detail_idx].stfw004,g_stfb12_d[g_detail_idx].stfw005, 
                  g_stfb12_d[g_detail_idx].stfw006,g_stfb12_d[g_detail_idx].stfw007,g_stfb12_d[g_detail_idx].stfw008, 
                  g_stfb12_d[g_detail_idx].stfwacti) 
         WHERE stfwent = g_enterprise AND stfw001 = ps_keys_bak[1] AND stfwseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update4"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfw_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfw_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astm401_stfw_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update4"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stfc_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update5"
      
      #end add-point  
      
      #將遮罩欄位還原
      CALL astm401_stfc_t_mask_restore('restore_mask_o')
               
      UPDATE stfc_t 
         SET (stfc001,
              stfcseq
              ,stfcacti,stfc024,stfc002,stfc003,stfc025,stfc004,stfc005,stfc006,stfc007,stfc008,stfc009,stfc026,stfc027,stfc010,stfc011,stfc012,stfc013,stfc014,stfc015,stfc016,stfc017,stfc018,stfc019,stfc020,stfc021,stfc022,stfc023,stfcsite,stfcunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stfb2_d[g_detail_idx].stfcacti,g_stfb2_d[g_detail_idx].stfc024,g_stfb2_d[g_detail_idx].stfc002, 
                  g_stfb2_d[g_detail_idx].stfc003,g_stfb2_d[g_detail_idx].stfc025,g_stfb2_d[g_detail_idx].stfc004, 
                  g_stfb2_d[g_detail_idx].stfc005,g_stfb2_d[g_detail_idx].stfc006,g_stfb2_d[g_detail_idx].stfc007, 
                  g_stfb2_d[g_detail_idx].stfc008,g_stfb2_d[g_detail_idx].stfc009,g_stfb2_d[g_detail_idx].stfc026, 
                  g_stfb2_d[g_detail_idx].stfc027,g_stfb2_d[g_detail_idx].stfc010,g_stfb2_d[g_detail_idx].stfc011, 
                  g_stfb2_d[g_detail_idx].stfc012,g_stfb2_d[g_detail_idx].stfc013,g_stfb2_d[g_detail_idx].stfc014, 
                  g_stfb2_d[g_detail_idx].stfc015,g_stfb2_d[g_detail_idx].stfc016,g_stfb2_d[g_detail_idx].stfc017, 
                  g_stfb2_d[g_detail_idx].stfc018,g_stfb2_d[g_detail_idx].stfc019,g_stfb2_d[g_detail_idx].stfc020, 
                  g_stfb2_d[g_detail_idx].stfc021,g_stfb2_d[g_detail_idx].stfc022,g_stfb2_d[g_detail_idx].stfc023, 
                  g_stfb2_d[g_detail_idx].stfcsite,g_stfb2_d[g_detail_idx].stfcunit) 
         WHERE stfcent = g_enterprise AND stfc001 = ps_keys_bak[1] AND stfcseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update5"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfc_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfc_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astm401_stfc_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update5"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'6',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stfe_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update6"
      
      #end add-point  
      
      #將遮罩欄位還原
      CALL astm401_stfe_t_mask_restore('restore_mask_o')
               
      UPDATE stfe_t 
         SET (stfe001,
              stfeseq,stfe002
              ,stfe003,stfe004,stfe005,stfe006,stfe012,stfe007,stfe008,stfe009,stfe010,stfe011,stfesite,stfeunit) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_stfb3_d[g_detail_idx].stfe003,g_stfb3_d[g_detail_idx].stfe004,g_stfb3_d[g_detail_idx].stfe005, 
                  g_stfb3_d[g_detail_idx].stfe006,g_stfb3_d[g_detail_idx].stfe012,g_stfb3_d[g_detail_idx].stfe007, 
                  g_stfb3_d[g_detail_idx].stfe008,g_stfb3_d[g_detail_idx].stfe009,g_stfb3_d[g_detail_idx].stfe010, 
                  g_stfb3_d[g_detail_idx].stfe011,g_stfb3_d[g_detail_idx].stfesite,g_stfb3_d[g_detail_idx].stfeunit)  
 
         WHERE stfeent = g_enterprise AND stfe001 = ps_keys_bak[1] AND stfeseq = ps_keys_bak[2] AND stfe002 = ps_keys_bak[3]
      #add-point:update_b段修改中 name="update_b.m_update6"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfe_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfe_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astm401_stfe_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update6"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'7',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stfg_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update7"
      
      #end add-point  
      
      #將遮罩欄位還原
      CALL astm401_stfg_t_mask_restore('restore_mask_o')
               
      UPDATE stfg_t 
         SET (stfg001,
              stfgseq
              ,stfg003,stfg002,stfg004,stfg005,stfgacti,stfgsite,stfgunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stfb4_d[g_detail_idx].stfg003,g_stfb4_d[g_detail_idx].stfg002,g_stfb4_d[g_detail_idx].stfg004, 
                  g_stfb4_d[g_detail_idx].stfg005,g_stfb4_d[g_detail_idx].stfgacti,g_stfb4_d[g_detail_idx].stfgsite, 
                  g_stfb4_d[g_detail_idx].stfgunit) 
         WHERE stfgent = g_enterprise AND stfg001 = ps_keys_bak[1] AND stfgseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update7"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfg_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfg_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astm401_stfg_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update7"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'8',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stfh_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update8"
      
      #end add-point  
      
      #將遮罩欄位還原
      CALL astm401_stfh_t_mask_restore('restore_mask_o')
               
      UPDATE stfh_t 
         SET (stfh001,
              stfhseq
              ,stfh002,stfh003,stfhacti,stfhsite,stfhunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stfb5_d[g_detail_idx].stfh002,g_stfb5_d[g_detail_idx].stfh003,g_stfb5_d[g_detail_idx].stfhacti, 
                  g_stfb5_d[g_detail_idx].stfhsite,g_stfb5_d[g_detail_idx].stfhunit) 
         WHERE stfhent = g_enterprise AND stfh001 = ps_keys_bak[1] AND stfhseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update8"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfh_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfh_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astm401_stfh_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update8"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'9',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stfi_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update9"
      
      #end add-point  
      
      #將遮罩欄位還原
      CALL astm401_stfi_t_mask_restore('restore_mask_o')
               
      UPDATE stfi_t 
         SET (stfi001,
              stfiseq
              ,stfi002,stfi003,stfi005,stfi006,stfi004,stfi007,stfi010,stfi008,stfi009,stfiacti,stfi011,stfi012,stfisite,stfiunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stfb6_d[g_detail_idx].stfi002,g_stfb6_d[g_detail_idx].stfi003,g_stfb6_d[g_detail_idx].stfi005, 
                  g_stfb6_d[g_detail_idx].stfi006,g_stfb6_d[g_detail_idx].stfi004,g_stfb6_d[g_detail_idx].stfi007, 
                  g_stfb6_d[g_detail_idx].stfi010,g_stfb6_d[g_detail_idx].stfi008,g_stfb6_d[g_detail_idx].stfi009, 
                  g_stfb6_d[g_detail_idx].stfiacti,g_stfb6_d[g_detail_idx].stfi011,g_stfb6_d[g_detail_idx].stfi012, 
                  g_stfb6_d[g_detail_idx].stfisite,g_stfb6_d[g_detail_idx].stfiunit) 
         WHERE stfient = g_enterprise AND stfi001 = ps_keys_bak[1] AND stfiseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update9"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfi_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfi_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astm401_stfi_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update9"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'10',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stfj_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update10"
      
      #end add-point  
      
      #將遮罩欄位還原
      CALL astm401_stfj_t_mask_restore('restore_mask_o')
               
      UPDATE stfj_t 
         SET (stfj001,
              stfjseq
              ,stfj002,stfj003,stfj004,stfj005,stfj006,stfjsite,stfjunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_stfb7_d[g_detail_idx].stfj002,g_stfb7_d[g_detail_idx].stfj003,g_stfb7_d[g_detail_idx].stfj004, 
                  g_stfb7_d[g_detail_idx].stfj005,g_stfb7_d[g_detail_idx].stfj006,g_stfb7_d[g_detail_idx].stfjsite, 
                  g_stfb7_d[g_detail_idx].stfjunit) 
         WHERE stfjent = g_enterprise AND stfj001 = ps_keys_bak[1] AND stfjseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update10"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfj_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfj_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astm401_stfj_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update10"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
   LET ls_group = "'12',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stff_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update11"
      
      #end add-point  
      
      #將遮罩欄位還原
      CALL astm401_stff_t_mask_restore('restore_mask_o')
               
      UPDATE stff_t 
         SET (stff001,
              stffseq,stff002,stff003
              ,stff004,stff005,stff006,stff007,stff010,stff008,stff011,stff009,stffsite,stffunit) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
              ,g_stfb9_d[g_detail_idx].stff004,g_stfb9_d[g_detail_idx].stff005,g_stfb9_d[g_detail_idx].stff006, 
                  g_stfb9_d[g_detail_idx].stff007,g_stfb9_d[g_detail_idx].stff010,g_stfb9_d[g_detail_idx].stff008, 
                  g_stfb9_d[g_detail_idx].stff011,g_stfb9_d[g_detail_idx].stff009,g_stfb9_d[g_detail_idx].stffsite, 
                  g_stfb9_d[g_detail_idx].stffunit) 
         WHERE stffent = g_enterprise AND stff001 = ps_keys_bak[1] AND stffseq = ps_keys_bak[2] AND stff002 = ps_keys_bak[3] AND stff003 = ps_keys_bak[4]
      #add-point:update_b段修改中 name="update_b.m_update11"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stff_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stff_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astm401_stff_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update11"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
 
   
   LET ls_group = "'11',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "stfd_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update12"
      
      #end add-point
      
      #將遮罩欄位還原
      CALL astm401_stfd_t_mask_restore('restore_mask_o')
               
      UPDATE stfd_t 
         SET (stfd001,stfdseq,
              stfdseq1
              ,stfd002,stfd003,stfd004,stfd005,stfd006,stfd007,stfd008,stfd009,stfdsite,stfdunit) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_stfb8_d[g_detail_idx2].stfd002,g_stfb8_d[g_detail_idx2].stfd003,g_stfb8_d[g_detail_idx2].stfd004, 
                  g_stfb8_d[g_detail_idx2].stfd005,g_stfb8_d[g_detail_idx2].stfd006,g_stfb8_d[g_detail_idx2].stfd007, 
                  g_stfb8_d[g_detail_idx2].stfd008,g_stfb8_d[g_detail_idx2].stfd009,g_stfb8_d[g_detail_idx2].stfdsite, 
                  g_stfb8_d[g_detail_idx2].stfdunit) 
         WHERE stfdent = g_enterprise AND stfd001 = ps_keys_bak[1] AND stfdseq = ps_keys_bak[2] AND stfdseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中 name="update_b.m_update12"
      
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfd_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfd_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL astm401_stfd_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update12"
      
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
 
   
   #add-point:update_b段other name="update_b.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="astm401.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION astm401_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
   #如果是上層單身則進行update
   IF ps_table = 'stfc_t' THEN
      #add-point:update_b段修改前 name="key_update_b.before_update12"
      
      #end add-point
      
      UPDATE stfd_t 
         SET (stfd001,stfdseq) 
              = 
             (g_stfa_m.stfa001,g_stfb2_d[g_detail_idx].stfcseq) 
         WHERE stfdent = g_enterprise AND
               stfd001 = ps_keys_bak[1] AND stfdseq = ps_keys_bak[2]
 
      #add-point:update_b段修改中 name="key_update_b.m_update12"
      
      #end add-point
              
      CASE
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfd_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
            #若有多語言table資料一同更新
            
      END CASE
      
      #add-point:update_b段修改後 name="key_update_b.after_update12"
      
      #end add-point
   END IF
 
 
   
END FUNCTION
 
{</section>}
 
{<section id="astm401.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION astm401_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
   #如果是上層單身則進行delete
   IF ps_table = 'stfc_t' THEN
      #add-point:delete_b段修改前 name="key_delete_b.before_delete12"
      
      #end add-point
      
      DELETE FROM stfd_t 
            WHERE stfdent = g_enterprise AND
                  stfd001 = ps_keys_bak[1] AND stfdseq = ps_keys_bak[2]
 
      #add-point:delete_b段修改中 name="key_delete_b.m_delete12"
      
      #end add-point
              
      CASE
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfd_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            RETURN FALSE
         OTHERWISE
      END CASE
 
       
 
      #add-point:delete_b段修改後 name="key_delete_b.after_delete12"
      
      #end add-point
   END IF
 
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="astm401.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION astm401_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
    
   #先刷新資料
   #CALL astm401_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "stfb_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN astm401_bcl USING g_enterprise,
                                       g_stfa_m.stfa001,g_stfb_d[g_detail_idx].stfbseq     
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astm401_bcl:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "stfk_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astm401_bcl2 USING g_enterprise,
                                             g_stfa_m.stfa001,g_stfb10_d[g_detail_idx].stfkseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astm401_bcl2:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "stfl_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astm401_bcl3 USING g_enterprise,
                                             g_stfa_m.stfa001,g_stfb11_d[g_detail_idx].stflseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astm401_bcl3:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'4',"
   #僅鎖定自身table
   LET ls_group = "stfw_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astm401_bcl4 USING g_enterprise,
                                             g_stfa_m.stfa001,g_stfb12_d[g_detail_idx].stfwseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astm401_bcl4:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'5',"
   #僅鎖定自身table
   LET ls_group = "stfc_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astm401_bcl5 USING g_enterprise,
                                             g_stfa_m.stfa001,g_stfb2_d[g_detail_idx].stfcseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astm401_bcl5:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'6',"
   #僅鎖定自身table
   LET ls_group = "stfe_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astm401_bcl6 USING g_enterprise,
                                             g_stfa_m.stfa001,g_stfb3_d[g_detail_idx].stfeseq,g_stfb3_d[g_detail_idx].stfe002 
 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astm401_bcl6:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'7',"
   #僅鎖定自身table
   LET ls_group = "stfg_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astm401_bcl7 USING g_enterprise,
                                             g_stfa_m.stfa001,g_stfb4_d[g_detail_idx].stfgseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astm401_bcl7:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'8',"
   #僅鎖定自身table
   LET ls_group = "stfh_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astm401_bcl8 USING g_enterprise,
                                             g_stfa_m.stfa001,g_stfb5_d[g_detail_idx].stfhseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astm401_bcl8:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'9',"
   #僅鎖定自身table
   LET ls_group = "stfi_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astm401_bcl9 USING g_enterprise,
                                             g_stfa_m.stfa001,g_stfb6_d[g_detail_idx].stfiseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astm401_bcl9:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'10',"
   #僅鎖定自身table
   LET ls_group = "stfj_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astm401_bcl10 USING g_enterprise,
                                             g_stfa_m.stfa001,g_stfb7_d[g_detail_idx].stfjseq
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astm401_bcl10:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'12',"
   #僅鎖定自身table
   LET ls_group = "stff_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astm401_bcl11 USING g_enterprise,
                                             g_stfa_m.stfa001,g_stfb9_d[g_detail_idx].stffseq,g_stfb9_d[g_detail_idx].stff002, 
                                                 g_stfb9_d[g_detail_idx].stff003
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astm401_bcl11:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
   #鎖定整組table
   #LET ls_group = "'11',"
   #僅鎖定自身table
   LET ls_group = "stfd_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN astm401_bcl12 USING g_enterprise,
                                             g_stfa_m.stfa001,g_stfb2_d[g_detail_idx].stfcseq,
                                             g_stfb8_d[g_detail_idx2].stfdseq1
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "astm401_bcl12:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
   #add-point:lock_b段other name="lock_b.other"
   
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="astm401.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION astm401_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astm401_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astm401_bcl2
   END IF
 
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astm401_bcl3
   END IF
 
   LET ls_group = "'4',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astm401_bcl4
   END IF
 
   LET ls_group = "'5',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astm401_bcl5
   END IF
 
   LET ls_group = "'6',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astm401_bcl6
   END IF
 
   LET ls_group = "'7',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astm401_bcl7
   END IF
 
   LET ls_group = "'8',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astm401_bcl8
   END IF
 
   LET ls_group = "'9',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astm401_bcl9
   END IF
 
   LET ls_group = "'10',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astm401_bcl10
   END IF
 
   LET ls_group = "'12',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astm401_bcl11
   END IF
 
 
   
   LET ls_group = "'11',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE astm401_bcl12
   END IF
 
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="astm401.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION astm401_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   CALL cl_set_comp_entry("",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("stfa001",TRUE)
      CALL cl_set_comp_entry("",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="astm401.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION astm401_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("stfa001",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("",FALSE)
   END IF 
 
#  IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正) #(ver:78)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("",FALSE)
      END IF
#  END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="astm401.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION astm401_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   #lanjj add on 2016-10-29 start
   IF p_cmd = 'J' THEN
      CALL cl_set_comp_entry("stfjseq",TRUE)
      CALL cl_set_comp_entry("stfj002",TRUE)
      CALL cl_set_comp_entry("stfj003",TRUE)
      CALL cl_set_comp_entry("stfj004",TRUE)
      CALL cl_set_comp_entry("stfj005",TRUE)
      CALL cl_set_comp_entry("stfj006",TRUE)
   END IF 
   #lanjj add on 2016-10-29 end
   #end add-point  
END FUNCTION
 
{</section>}
 
{<section id="astm401.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION astm401_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   #lanjj add on 2016-10-29 start
   IF p_cmd = 'J' THEN
      CALL cl_set_comp_entry("stfjseq",FALSE)
      CALL cl_set_comp_entry("stfj002",FALSE)
      CALL cl_set_comp_entry("stfj003",FALSE)
      CALL cl_set_comp_entry("stfj004",FALSE)
      CALL cl_set_comp_entry("stfj005",TRUE)
      CALL cl_set_comp_entry("stfj006",FALSE)
   END IF 
   #lanjj add on 2016-10-29 end
   #end add-point     
END FUNCTION
 
{</section>}
 
{<section id="astm401.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION astm401_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="astm401.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION astm401_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="astm401.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION astm401_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="astm401.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION astm401_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="astm401.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION astm401_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " stfa001 = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
         INITIALIZE g_wc2_table2 TO NULL
 
         INITIALIZE g_wc2_table3 TO NULL
 
         INITIALIZE g_wc2_table4 TO NULL
 
         INITIALIZE g_wc2_table5 TO NULL
 
         INITIALIZE g_wc2_table6 TO NULL
 
         INITIALIZE g_wc2_table7 TO NULL
 
         INITIALIZE g_wc2_table8 TO NULL
 
         INITIALIZE g_wc2_table9 TO NULL
 
         INITIALIZE g_wc2_table10 TO NULL
 
         INITIALIZE g_wc2_table11 TO NULL
 
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "stfa_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "stfb_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "stfk_t" 
                  LET g_wc2_table2 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "stfl_t" 
                  LET g_wc2_table3 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "stfw_t" 
                  LET g_wc2_table4 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "stfc_t" 
                  LET g_wc2_table5 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "stfe_t" 
                  LET g_wc2_table6 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "stfg_t" 
                  LET g_wc2_table7 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "stfh_t" 
                  LET g_wc2_table8 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "stfi_t" 
                  LET g_wc2_table9 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "stfj_t" 
                  LET g_wc2_table10 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "stff_t" 
                  LET g_wc2_table11 = la_wc[li_idx].wc
 
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
            OR NOT cl_null(g_wc2_table2)
 
            OR NOT cl_null(g_wc2_table3)
 
            OR NOT cl_null(g_wc2_table4)
 
            OR NOT cl_null(g_wc2_table5)
 
            OR NOT cl_null(g_wc2_table6)
 
            OR NOT cl_null(g_wc2_table7)
 
            OR NOT cl_null(g_wc2_table8)
 
            OR NOT cl_null(g_wc2_table9)
 
            OR NOT cl_null(g_wc2_table10)
 
            OR NOT cl_null(g_wc2_table11)
 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
            IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
            END IF
 
            IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
            END IF
 
            IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
            END IF
 
            IF g_wc2_table5 <> " 1=1" AND NOT cl_null(g_wc2_table5) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table5
            END IF
 
            IF g_wc2_table6 <> " 1=1" AND NOT cl_null(g_wc2_table6) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table6
            END IF
 
            IF g_wc2_table7 <> " 1=1" AND NOT cl_null(g_wc2_table7) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table7
            END IF
 
            IF g_wc2_table8 <> " 1=1" AND NOT cl_null(g_wc2_table8) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table8
            END IF
 
            IF g_wc2_table9 <> " 1=1" AND NOT cl_null(g_wc2_table9) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table9
            END IF
 
            IF g_wc2_table10 <> " 1=1" AND NOT cl_null(g_wc2_table10) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table10
            END IF
 
            IF g_wc2_table11 <> " 1=1" AND NOT cl_null(g_wc2_table11) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table11
            END IF
 
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
 
{</section>}
 
{<section id="astm401.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION astm401_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   RETURN 
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_stfa_m.stfa001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN astm401_cl USING g_enterprise,g_stfa_m.stfa001
   IF STATUS THEN
      CLOSE astm401_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN astm401_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE astm401_master_referesh USING g_stfa_m.stfa001 INTO g_stfa_m.stfaunit,g_stfa_m.stfasite,g_stfa_m.stfa001, 
       g_stfa_m.stfa002,g_stfa_m.stfa003,g_stfa_m.stfa004,g_stfa_m.stfa009,g_stfa_m.stfastus,g_stfa_m.stfa010, 
       g_stfa_m.stfa005,g_stfa_m.stfa007,g_stfa_m.stfa008,g_stfa_m.stfa047,g_stfa_m.stfa048,g_stfa_m.stfa044, 
       g_stfa_m.stfa051,g_stfa_m.stfa011,g_stfa_m.stfa012,g_stfa_m.stfa033,g_stfa_m.stfa034,g_stfa_m.stfa036, 
       g_stfa_m.stfa037,g_stfa_m.stfa038,g_stfa_m.stfa045,g_stfa_m.stfa046,g_stfa_m.stfa029,g_stfa_m.stfa030, 
       g_stfa_m.stfa032,g_stfa_m.stfa035,g_stfa_m.stfa050,g_stfa_m.stfa028,g_stfa_m.stfa057,g_stfa_m.stfa058, 
       g_stfa_m.stfa039,g_stfa_m.stfa040,g_stfa_m.stfa052,g_stfa_m.stfa013,g_stfa_m.stfa014,g_stfa_m.stfa015, 
       g_stfa_m.stfa016,g_stfa_m.stfa006,g_stfa_m.stfa053,g_stfa_m.stfa055,g_stfa_m.stfa017,g_stfa_m.stfa021, 
       g_stfa_m.stfa024,g_stfa_m.stfa018,g_stfa_m.stfa022,g_stfa_m.stfa025,g_stfa_m.stfa019,g_stfa_m.stfa023, 
       g_stfa_m.stfa026,g_stfa_m.stfa020,g_stfa_m.stfa049,g_stfa_m.stfa056,g_stfa_m.stfa054,g_stfa_m.stfa027, 
       g_stfa_m.stfa031,g_stfa_m.stfa043,g_stfa_m.stfaownid,g_stfa_m.stfaowndp,g_stfa_m.stfacrtid,g_stfa_m.stfacrtdp, 
       g_stfa_m.stfacrtdt,g_stfa_m.stfamodid,g_stfa_m.stfamoddt,g_stfa_m.stfacnfid,g_stfa_m.stfacnfdt, 
       g_stfa_m.stfaunit_desc,g_stfa_m.stfasite_desc,g_stfa_m.stfa010_desc,g_stfa_m.stfa010_desc_desc, 
       g_stfa_m.stfa047_desc,g_stfa_m.stfa048_desc,g_stfa_m.stfa044_desc,g_stfa_m.stfa051_desc,g_stfa_m.stfa011_desc, 
       g_stfa_m.stfa012_desc,g_stfa_m.stfa032_desc,g_stfa_m.stfa035_desc,g_stfa_m.stfaownid_desc,g_stfa_m.stfaowndp_desc, 
       g_stfa_m.stfacrtid_desc,g_stfa_m.stfacrtdp_desc,g_stfa_m.stfamodid_desc,g_stfa_m.stfacnfid_desc 
 
   
 
   #檢查是否允許此動作
   IF NOT astm401_action_chk() THEN
      CLOSE astm401_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_stfa_m.stfaunit,g_stfa_m.stfaunit_desc,g_stfa_m.stfasite,g_stfa_m.stfasite_desc, 
       g_stfa_m.stfa001,g_stfa_m.stfa002,g_stfa_m.stfa003,g_stfa_m.stfa004,g_stfa_m.stfa009,g_stfa_m.stfastus, 
       g_stfa_m.stfa010,g_stfa_m.stfa010_desc,g_stfa_m.stfa010_desc_desc,g_stfa_m.stfa005,g_stfa_m.stfal003, 
       g_stfa_m.stfal004,g_stfa_m.stfa007,g_stfa_m.stfa008,g_stfa_m.stfa047,g_stfa_m.stfa047_desc,g_stfa_m.stfa048, 
       g_stfa_m.stfa048_desc,g_stfa_m.stfa044,g_stfa_m.stfa044_desc,g_stfa_m.stfa051,g_stfa_m.stfa051_desc, 
       g_stfa_m.stfa011,g_stfa_m.stfa011_desc,g_stfa_m.stfa012,g_stfa_m.stfa012_desc,g_stfa_m.stfa033, 
       g_stfa_m.stfa033_desc,g_stfa_m.stfa034,g_stfa_m.stfa034_desc,g_stfa_m.stfa036,g_stfa_m.stfa036_desc, 
       g_stfa_m.stfa037,g_stfa_m.stfa037_desc,g_stfa_m.stfa038,g_stfa_m.stfa038_desc,g_stfa_m.stfa045, 
       g_stfa_m.stfa045_desc,g_stfa_m.stfa046,g_stfa_m.stfa029,g_stfa_m.stfa030,g_stfa_m.stfa032,g_stfa_m.stfa032_desc, 
       g_stfa_m.stfa035,g_stfa_m.stfa035_desc,g_stfa_m.stfa050,g_stfa_m.stfa028,g_stfa_m.stfa057,g_stfa_m.stfa058, 
       g_stfa_m.stfa039,g_stfa_m.stfa040,g_stfa_m.stfa052,g_stfa_m.next_b,g_stfa_m.stfa013,g_stfa_m.stfa013_desc, 
       g_stfa_m.stfa014,g_stfa_m.stfa014_desc,g_stfa_m.stfa015,g_stfa_m.stfa015_desc,g_stfa_m.stfa016, 
       g_stfa_m.stfa006,g_stfa_m.stfa006_desc,g_stfa_m.stfa053,g_stfa_m.stfa055,g_stfa_m.stfa017,g_stfa_m.stfa021, 
       g_stfa_m.stfa024,g_stfa_m.stfa018,g_stfa_m.stfa022,g_stfa_m.stfa025,g_stfa_m.stfa019,g_stfa_m.stfa023, 
       g_stfa_m.stfa026,g_stfa_m.stfa020,g_stfa_m.stfa049,g_stfa_m.stfa056,g_stfa_m.stfa054,g_stfa_m.stfa027, 
       g_stfa_m.stfa031,g_stfa_m.stfa043,g_stfa_m.stfaownid,g_stfa_m.stfaownid_desc,g_stfa_m.stfaowndp, 
       g_stfa_m.stfaowndp_desc,g_stfa_m.stfacrtid,g_stfa_m.stfacrtid_desc,g_stfa_m.stfacrtdp,g_stfa_m.stfacrtdp_desc, 
       g_stfa_m.stfacrtdt,g_stfa_m.stfamodid,g_stfa_m.stfamodid_desc,g_stfa_m.stfamoddt,g_stfa_m.stfacnfid, 
       g_stfa_m.stfacnfid_desc,g_stfa_m.stfacnfdt
 
   CASE g_stfa_m.stfastus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_stfa_m.stfastus
            
            WHEN "N"
               HIDE OPTION "open"
            WHEN "Y"
               HIDE OPTION "valid"
            WHEN "X"
               HIDE OPTION "void"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      
      #end add-point
      
      
	  
      ON ACTION open
         IF cl_auth_chk_act("open") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.open"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION valid
         IF cl_auth_chk_act("valid") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.valid"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION void
         IF cl_auth_chk_act("void") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.void"
            
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "X"
      ) OR 
      g_stfa_m.stfastus = lc_state OR cl_null(lc_state) THEN
      CLOSE astm401_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   
   #end add-point
   
   LET g_stfa_m.stfamodid = g_user
   LET g_stfa_m.stfamoddt = cl_get_current()
   LET g_stfa_m.stfastus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE stfa_t 
      SET (stfastus,stfamodid,stfamoddt) 
        = (g_stfa_m.stfastus,g_stfa_m.stfamodid,g_stfa_m.stfamoddt)     
    WHERE stfaent = g_enterprise AND stfa001 = g_stfa_m.stfa001
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE astm401_master_referesh USING g_stfa_m.stfa001 INTO g_stfa_m.stfaunit,g_stfa_m.stfasite, 
          g_stfa_m.stfa001,g_stfa_m.stfa002,g_stfa_m.stfa003,g_stfa_m.stfa004,g_stfa_m.stfa009,g_stfa_m.stfastus, 
          g_stfa_m.stfa010,g_stfa_m.stfa005,g_stfa_m.stfa007,g_stfa_m.stfa008,g_stfa_m.stfa047,g_stfa_m.stfa048, 
          g_stfa_m.stfa044,g_stfa_m.stfa051,g_stfa_m.stfa011,g_stfa_m.stfa012,g_stfa_m.stfa033,g_stfa_m.stfa034, 
          g_stfa_m.stfa036,g_stfa_m.stfa037,g_stfa_m.stfa038,g_stfa_m.stfa045,g_stfa_m.stfa046,g_stfa_m.stfa029, 
          g_stfa_m.stfa030,g_stfa_m.stfa032,g_stfa_m.stfa035,g_stfa_m.stfa050,g_stfa_m.stfa028,g_stfa_m.stfa057, 
          g_stfa_m.stfa058,g_stfa_m.stfa039,g_stfa_m.stfa040,g_stfa_m.stfa052,g_stfa_m.stfa013,g_stfa_m.stfa014, 
          g_stfa_m.stfa015,g_stfa_m.stfa016,g_stfa_m.stfa006,g_stfa_m.stfa053,g_stfa_m.stfa055,g_stfa_m.stfa017, 
          g_stfa_m.stfa021,g_stfa_m.stfa024,g_stfa_m.stfa018,g_stfa_m.stfa022,g_stfa_m.stfa025,g_stfa_m.stfa019, 
          g_stfa_m.stfa023,g_stfa_m.stfa026,g_stfa_m.stfa020,g_stfa_m.stfa049,g_stfa_m.stfa056,g_stfa_m.stfa054, 
          g_stfa_m.stfa027,g_stfa_m.stfa031,g_stfa_m.stfa043,g_stfa_m.stfaownid,g_stfa_m.stfaowndp,g_stfa_m.stfacrtid, 
          g_stfa_m.stfacrtdp,g_stfa_m.stfacrtdt,g_stfa_m.stfamodid,g_stfa_m.stfamoddt,g_stfa_m.stfacnfid, 
          g_stfa_m.stfacnfdt,g_stfa_m.stfaunit_desc,g_stfa_m.stfasite_desc,g_stfa_m.stfa010_desc,g_stfa_m.stfa010_desc_desc, 
          g_stfa_m.stfa047_desc,g_stfa_m.stfa048_desc,g_stfa_m.stfa044_desc,g_stfa_m.stfa051_desc,g_stfa_m.stfa011_desc, 
          g_stfa_m.stfa012_desc,g_stfa_m.stfa032_desc,g_stfa_m.stfa035_desc,g_stfa_m.stfaownid_desc, 
          g_stfa_m.stfaowndp_desc,g_stfa_m.stfacrtid_desc,g_stfa_m.stfacrtdp_desc,g_stfa_m.stfamodid_desc, 
          g_stfa_m.stfacnfid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_stfa_m.stfaunit,g_stfa_m.stfaunit_desc,g_stfa_m.stfasite,g_stfa_m.stfasite_desc, 
          g_stfa_m.stfa001,g_stfa_m.stfa002,g_stfa_m.stfa003,g_stfa_m.stfa004,g_stfa_m.stfa009,g_stfa_m.stfastus, 
          g_stfa_m.stfa010,g_stfa_m.stfa010_desc,g_stfa_m.stfa010_desc_desc,g_stfa_m.stfa005,g_stfa_m.stfal003, 
          g_stfa_m.stfal004,g_stfa_m.stfa007,g_stfa_m.stfa008,g_stfa_m.stfa047,g_stfa_m.stfa047_desc, 
          g_stfa_m.stfa048,g_stfa_m.stfa048_desc,g_stfa_m.stfa044,g_stfa_m.stfa044_desc,g_stfa_m.stfa051, 
          g_stfa_m.stfa051_desc,g_stfa_m.stfa011,g_stfa_m.stfa011_desc,g_stfa_m.stfa012,g_stfa_m.stfa012_desc, 
          g_stfa_m.stfa033,g_stfa_m.stfa033_desc,g_stfa_m.stfa034,g_stfa_m.stfa034_desc,g_stfa_m.stfa036, 
          g_stfa_m.stfa036_desc,g_stfa_m.stfa037,g_stfa_m.stfa037_desc,g_stfa_m.stfa038,g_stfa_m.stfa038_desc, 
          g_stfa_m.stfa045,g_stfa_m.stfa045_desc,g_stfa_m.stfa046,g_stfa_m.stfa029,g_stfa_m.stfa030, 
          g_stfa_m.stfa032,g_stfa_m.stfa032_desc,g_stfa_m.stfa035,g_stfa_m.stfa035_desc,g_stfa_m.stfa050, 
          g_stfa_m.stfa028,g_stfa_m.stfa057,g_stfa_m.stfa058,g_stfa_m.stfa039,g_stfa_m.stfa040,g_stfa_m.stfa052, 
          g_stfa_m.next_b,g_stfa_m.stfa013,g_stfa_m.stfa013_desc,g_stfa_m.stfa014,g_stfa_m.stfa014_desc, 
          g_stfa_m.stfa015,g_stfa_m.stfa015_desc,g_stfa_m.stfa016,g_stfa_m.stfa006,g_stfa_m.stfa006_desc, 
          g_stfa_m.stfa053,g_stfa_m.stfa055,g_stfa_m.stfa017,g_stfa_m.stfa021,g_stfa_m.stfa024,g_stfa_m.stfa018, 
          g_stfa_m.stfa022,g_stfa_m.stfa025,g_stfa_m.stfa019,g_stfa_m.stfa023,g_stfa_m.stfa026,g_stfa_m.stfa020, 
          g_stfa_m.stfa049,g_stfa_m.stfa056,g_stfa_m.stfa054,g_stfa_m.stfa027,g_stfa_m.stfa031,g_stfa_m.stfa043, 
          g_stfa_m.stfaownid,g_stfa_m.stfaownid_desc,g_stfa_m.stfaowndp,g_stfa_m.stfaowndp_desc,g_stfa_m.stfacrtid, 
          g_stfa_m.stfacrtid_desc,g_stfa_m.stfacrtdp,g_stfa_m.stfacrtdp_desc,g_stfa_m.stfacrtdt,g_stfa_m.stfamodid, 
          g_stfa_m.stfamodid_desc,g_stfa_m.stfamoddt,g_stfa_m.stfacnfid,g_stfa_m.stfacnfid_desc,g_stfa_m.stfacnfdt 
 
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   
   #end add-point  
 
   CLOSE astm401_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL astm401_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="astm401.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION astm401_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_stfb_d.getLength() THEN
         LET g_detail_idx = g_stfb_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stfb_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stfb_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail10")
      IF g_detail_idx > g_stfb10_d.getLength() THEN
         LET g_detail_idx = g_stfb10_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stfb10_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stfb10_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail11")
      IF g_detail_idx > g_stfb11_d.getLength() THEN
         LET g_detail_idx = g_stfb11_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stfb11_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stfb11_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 4 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail12")
      IF g_detail_idx > g_stfb12_d.getLength() THEN
         LET g_detail_idx = g_stfb12_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stfb12_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stfb12_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 5 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_stfb2_d.getLength() THEN
         LET g_detail_idx = g_stfb2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stfb2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stfb2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 6 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_stfb3_d.getLength() THEN
         LET g_detail_idx = g_stfb3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stfb3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stfb3_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 7 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail4")
      IF g_detail_idx > g_stfb4_d.getLength() THEN
         LET g_detail_idx = g_stfb4_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stfb4_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stfb4_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 8 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail5")
      IF g_detail_idx > g_stfb5_d.getLength() THEN
         LET g_detail_idx = g_stfb5_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stfb5_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stfb5_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 9 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail6")
      IF g_detail_idx > g_stfb6_d.getLength() THEN
         LET g_detail_idx = g_stfb6_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stfb6_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stfb6_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 10 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail7")
      IF g_detail_idx > g_stfb7_d.getLength() THEN
         LET g_detail_idx = g_stfb7_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stfb7_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stfb7_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 11 THEN
      LET g_detail_idx2 = g_curr_diag.getCurrentRow("s_detail8")
      IF g_detail_idx2 > g_stfb8_d.getLength() THEN
         LET g_detail_idx2 = g_stfb8_d.getLength()
      END IF
      IF g_detail_idx2 = 0 AND g_stfb8_d.getLength() <> 0 THEN
         LET g_detail_idx2 = 1
      END IF
      DISPLAY g_detail_idx2 TO FORMONLY.idx
      DISPLAY g_stfb8_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 12 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail9")
      IF g_detail_idx > g_stfb9_d.getLength() THEN
         LET g_detail_idx = g_stfb9_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_stfb9_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_stfb9_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="astm401.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION astm401_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
   IF astm401_fill_chk(12) THEN
      IF (pi_idx = 12 OR pi_idx = 0 ) AND g_stfb2_d.getLength() > 0 THEN
               CALL g_stfb8_d.clear()
 
         
         #取得該單身上階單身的idx
         LET g_detail_idx = g_detail_idx_list[5]
         
         LET g_sql = "SELECT  DISTINCT stfdseq1,stfd002,stfd003,stfd004,stfd005,stfd006,stfd007,stfd008, 
             stfd009,stfdsite,stfdunit ,t18.inayl003 ,t19.oocql004 FROM stfd_t",    
                     "",
                                    " LEFT JOIN inayl_t t18 ON t18.inaylent="||g_enterprise||" AND t18.inayl001=stfd003 AND t18.inayl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t19 ON t19.oocqlent="||g_enterprise||" AND t19.oocql001='2024' AND t19.oocql002=stfd004 AND t19.oocql003='"||g_dlang||"' ",
 
                     " WHERE stfdent=? AND stfd001=? AND stfdseq=?"
         
         IF NOT cl_null(g_wc2_table12) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table12 CLIPPED
         END IF
         
         LET g_sql = g_sql, " ORDER BY  stfd_t.stfdseq1" 
                            
         #add-point:單身填充前 name="b_fill2.before_fill12"
         
         #end add-point
         
         #先清空資料
               CALL g_stfb8_d.clear()
 
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE astm401_pb12 FROM g_sql
         DECLARE b_fill_curs12 CURSOR FOR astm401_pb12
         
      #  OPEN b_fill_curs12 USING g_enterprise,g_stfa_m.stfa001,g_stfb2_d[g_detail_idx].stfcseq   #(ver:78) 
 
         LET l_ac = 1
         FOREACH b_fill_curs12 USING g_enterprise,g_stfa_m.stfa001,g_stfb2_d[g_detail_idx].stfcseq INTO g_stfb8_d[l_ac].stfdseq1, 
             g_stfb8_d[l_ac].stfd002,g_stfb8_d[l_ac].stfd003,g_stfb8_d[l_ac].stfd004,g_stfb8_d[l_ac].stfd005, 
             g_stfb8_d[l_ac].stfd006,g_stfb8_d[l_ac].stfd007,g_stfb8_d[l_ac].stfd008,g_stfb8_d[l_ac].stfd009, 
             g_stfb8_d[l_ac].stfdsite,g_stfb8_d[l_ac].stfdunit,g_stfb8_d[l_ac].stfd003_desc,g_stfb8_d[l_ac].stfd004_desc  
               #(ver:78)
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               EXIT FOREACH
            END IF
            
            #add-point:b_fill段資料填充 name="b_fill2.fill12"
            
            #end add-point
           
            IF l_ac > g_max_rec THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code = 9035 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               EXIT FOREACH
            END IF
            
            LET l_ac = l_ac + 1
            
         END FOREACH
               CALL g_stfb8_d.deleteElement(g_stfb8_d.getLength())
 
      END IF
   END IF
 
 
      
   LET g_stfb8_d_mask_o.* =  g_stfb8_d.*
   FOR l_ac = 1 TO g_stfb8_d.getLength()
      LET g_stfb8_d_mask_o[l_ac].* =  g_stfb8_d[l_ac].*
      CALL astm401_stfd_t_mask()
      LET g_stfb8_d_mask_n[l_ac].* =  g_stfb8_d[l_ac].*
   END FOR
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
    
   LET l_ac = li_ac
   
   CALL astm401_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
 
{</section>}
 
{<section id="astm401.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION astm401_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1')  AND 
      (cl_null(g_wc2_table4) OR g_wc2_table4.trim() = '1=1')  AND 
      (cl_null(g_wc2_table5) OR g_wc2_table5.trim() = '1=1')  AND 
      (cl_null(g_wc2_table6) OR g_wc2_table6.trim() = '1=1')  AND 
      (cl_null(g_wc2_table7) OR g_wc2_table7.trim() = '1=1')  AND 
      (cl_null(g_wc2_table8) OR g_wc2_table8.trim() = '1=1')  AND 
      (cl_null(g_wc2_table9) OR g_wc2_table9.trim() = '1=1')  AND 
      (cl_null(g_wc2_table10) OR g_wc2_table10.trim() = '1=1')  AND 
      (cl_null(g_wc2_table11) OR g_wc2_table11.trim() = '1=1')  AND 
      (cl_null(g_wc2_table12) OR g_wc2_table12.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="astm401.status_show" >}
PRIVATE FUNCTION astm401_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="astm401.mask_functions" >}
&include "erp/ast/astm401_mask.4gl"
 
{</section>}
 
{<section id="astm401.signature" >}
   
 
{</section>}
 
{<section id="astm401.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION astm401_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_stfa_m.stfa001
   LET g_pk_array[1].column = 'stfa001'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="astm401.other_dialog" readonly="Y" >}
   
 
{</section>}
 
{<section id="astm401.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION astm401_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL astm401_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_stfa_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="astm401.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION astm401_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="astm401.other_function" readonly="Y" >}

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astm401_stfa033_ref()
   SELECT oodbl004 INTO g_stfa_m.stfa033_desc
    FROM oodbl_t,ooef_t
   WHERE oodblent = g_enterprise
    AND oodbl001 = ooef019 
    AND oodbl002 = g_stfa_m.stfa033
    AND oodbl003 = g_dlang
    AND ooefent = g_enterprise
    AND ooef001 = g_stfa_m.stfasite  
   DISPLAY BY NAME g_stfa_m.stfa033_desc
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astm401_stfa034_ref()
   SELECT oodbl004 INTO g_stfa_m.stfa034_desc
    FROM oodbl_t,ooef_t
   WHERE oodblent = g_enterprise
    AND oodbl001 = ooef019 
    AND oodbl002 = g_stfa_m.stfa034
    AND oodbl003 = g_dlang
    AND ooefent = g_enterprise
    AND ooef001 = g_stfa_m.stfasite  
   DISPLAY BY NAME g_stfa_m.stfa034_desc
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astm401_stfc006_ref()
  SELECT oodbl004 INTO g_stfb2_d[l_ac].stfc006_desc
    FROM oodbl_t,ooef_t
   WHERE oodblent = g_enterprise
    AND oodbl001 = ooef019 
    AND oodbl002 = g_stfb2_d[l_ac].stfc006
    AND oodbl003 = g_dlang
    AND ooefent = g_enterprise
    AND ooef001 = g_stfa_m.stfasite  
   DISPLAY BY NAME g_stfb2_d[l_ac].stfc006_desc
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astm401_stfc007_ref()
  SELECT oodbl004 INTO g_stfb2_d[l_ac].stfc007_desc
    FROM oodbl_t,ooef_t
   WHERE oodblent = g_enterprise
    AND oodbl001 = ooef019 
    AND oodbl002 = g_stfb2_d[l_ac].stfc007
    AND oodbl003 = g_dlang
    AND ooefent = g_enterprise
    AND ooef001 = g_stfa_m.stfasite  
   DISPLAY BY NAME g_stfb2_d[l_ac].stfc007_desc
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astm401_stfg003_ref()
   SELECT mhacl005 INTO  g_stfb4_d[l_ac].stfg003_desc FROM mhacl_t
    WHERE mhaclent = g_enterprise AND mhacl001 = g_stfa_m.stfa047
      AND mhacl002 =  g_stfa_m.stfa048 AND mhacl003 = g_stfb4_d[l_ac].stfg003 
      AND mhacl004 = g_dlang
 
   DISPLAY BY NAME g_stfb4_d[l_ac].stfg003_desc  
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION astm401_stfg002_ref()
   SELECT mhadl006 INTO  g_stfb4_d[l_ac].stfg002_desc FROM mhadl_t
   WHERE mhadlent = g_enterprise AND mhadl001 = g_stfa_m.stfa047
     AND mhadl002 = g_stfa_m.stfa048 AND mhadl003 = g_stfb4_d[l_ac].stfg003 
     AND mhadl004 = g_stfb4_d[l_ac].stfg002 AND mhadl005 = g_dlang
   
   DISPLAY BY NAME g_stfb4_d[l_ac].stfg002_desc
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL astm401_01_input()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2015/07/28 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION astm401_01_input()
DEFINE l_flag   LIKE type_t.chr1
DEFINE  l_dt    LIKE stea_t.steacrtdt
DEFINE l_n      LIKE type_t.num5

   IF cl_null(g_stfa_m.stfa001) THEN 
      RETURN 
   END IF 
   LET l_flag = 'N'
   INPUT BY NAME g_stfa_m.stfa017 ATTRIBUTE(WITHOUT DEFAULTS)
      
       AFTER FIELD stfa017
          IF NOT cl_null(g_stfa_m.stfa017) AND NOT cl_null(g_stfa_m.stfa019) THEN 
             #IF g_stfa_m.stfa017 < g_stfa_m.stfa019 THEN 
             IF g_stfa_m.stfa017 < g_today THEN #lanjj add on 2016-03-22 进场日期与生效日期不进行比较，只与今天日期相比较 顾问刘鑫
                LET g_stfa_m.stfa017 = g_stfa_m_t.stfa017
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = 'ast-00384'
                LET g_errparam.extend = '进场日期不可小于今天'
                LET g_errparam.popup = TRUE
                CALL cl_err()
                NEXT FIELD stfa017
             END IF 
          END IF 

         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            LET l_flag = 'N' #lanjj add on 2016-03-22
            EXIT INPUT
          
         ON ACTION exit
            LET g_action_choice = "exit"
            LET l_flag = 'N' #lanjj add on 2016-03-22
            EXIT INPUT
         
         ON ACTION cancel
            LET g_action_choice = "exit"
            LET l_flag = 'N' #lanjj add on 2016-03-22
            EXIT INPUT
    
         ON ACTION accept
            LET l_flag = 'Y'
            ACCEPT INPUT
   END INPUT 
   IF l_flag = 'Y' THEN 
      CALL s_transaction_begin()
      LET l_dt = cl_get_current()
      UPDATE stfa_t SET stfa017 = g_stfa_m.stfa017,
                        stfamodid = g_user,
                        stfamoddt = l_dt
       WHERE stfaent = g_enterprise
         AND stfa001 = g_stfa_m.stfa001
      IF SQLCA.sqlcode THEN 
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "stfa_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         LET g_stfa_m.stfa017 = g_stfa_m_t.stfa017
         DISPLAY BY NAME g_stfa_m.stfa017
         CALL s_transaction_end('N','0')
         RETURN 
       END IF 
       LET l_n = 0
       #检查帐期资料是否有已结算的帐期
       SELECT COUNT(*) INTO l_n
         FROM stfj_t
        WHERE stfjent = g_enterprise
          AND stfj001 = g_stfa_m.stfa001
          AND stfj005 = 'Y'
       #如果没有重新产生帐期
       IF l_n = 0 THEN 
          IF NOT astm401_cal_period(g_stfa_m.stfa001,g_stfa_m.stfa017,g_stfa_m.stfa020,g_stfa_m.stfa036,g_stfa_m.stfasite,g_stfa_m.stfaunit) THEN 
             CALL s_transaction_end('N','0')
             RETURN              
          END IF 
          CALL astm401_b_fill()
       END IF 
       CALL s_transaction_end('Y','0')
      LET g_stfa_m.stfamodid = g_user
      LET g_stfa_m.stfamoddt = l_dt
      DISPLAY BY NAME g_stfa_m.stfa018,g_stfa_m.stfamodid,g_stfa_m.stfamoddt
   ELSE
      LET g_stfa_m.stfa018 = g_stfa_m_t.stfa018
      LET g_stfa_m.stfamodid = g_stfa_m_t.stfamodid
      LET g_stfa_m.stfamoddt = g_stfa_m_t.stfamoddt
      DISPLAY BY NAME g_stfa_m.stfa018,g_stfa_m.stfamodid,g_stfa_m.stfamoddt
   END IF 

   #更新进场日期，当日期小于等于今天，时更新相门店商品清单中的商品可售否为Y lanjj add on 2016-03-22 ---start---
   IF l_flag = 'Y' THEN 
      IF g_stfa_m.stfa017 <= g_today THEN
         CALL s_transaction_begin()   
            UPDATE rtdx_t SET rtdx025 = 'Y'
             WHERE rtdxent = g_enterprise
               AND EXISTS (SELECT 1 FROM stfc_t 
                            WHERE stfcent = g_enterprise
                              AND rtdxsite = stfcunit
                              AND rtdxent = stfcent
                              AND rtdx001 = stfc002
                              AND stfc024 IN ('1','3')
                              AND stfcacti = 'Y'
                              AND stfc001 = g_stfa_m.stfa001)
         IF SQLCA.sqlcode THEN 
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "update rtdx025" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
            RETURN 
          END IF 
         CALL s_transaction_end('Y','0')
         LET g_stfa_m.stfamodid = g_user
         LET g_stfa_m.stfamoddt = l_dt
         DISPLAY BY NAME g_stfa_m.stfa018,g_stfa_m.stfamodid,g_stfa_m.stfamoddt
      END IF 
   END IF
   #更新进场日期，当日期小于等于今天，时更新相门店商品清单中的商品可售否为Y lanjj add on 2016-03-22 ----end----

END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL astm401_02_input()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2015/07/28 By yangxf
# Modify.........: 2016-04-28 BY LANJJ
################################################################################
PRIVATE FUNCTION astm401_02_input()
DEFINE l_flag   LIKE type_t.chr1
DEFINE  l_dt    LIKE stea_t.steacrtdt
DEFINE l_sql_1  STRING #LANJJ ADD
DEFINE l_sql_2  STRING #LANJJ ADD
DEFINE l_sql_3  STRING #LANJJ ADD
DEFINE max_deba002 DATE #lanjj add on 2016-09-12

   IF cl_null(g_stfa_m.stfa001) THEN 
      RETURN 
   END IF 
   LET l_flag = 'N'
   INPUT BY NAME g_stfa_m.stfa024 ATTRIBUTE(WITHOUT DEFAULTS)

         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT INPUT
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT INPUT
         
         ON ACTION cancel
            LET g_action_choice = "exit"
            EXIT INPUT
    
         ON ACTION accept
                  
               ACCEPT INPUT
            
         AFTER INPUT 
            IF NOT cl_null(g_stfa_m.stfa024) THEN 
               SELECT max(deba002) INTO max_deba002
                 FROM deba_t 
                WHERE debaent = g_enterprise
                  AND debasite = g_stfa_m.stfasite
                  AND deba017 = g_stfa_m.stfa005
                  AND deba047 >= 0 #lanjj add on 2016-12-08 只考虑销售情况 不考虑退货情况
               IF g_stfa_m.stfa024 < max_deba002 THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "清退日期不允许小于该合同有销售的最大日期。 (",max_deba002,")"
                  LET g_errparam.code   = "adz-00482"
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err() 
                  NEXT FIELD stfa024
               END IF 
               LET l_flag = 'Y'
            ELSE
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "请录入清退日期～" 
               LET g_errparam.code   = "adz-00482"
               LET g_errparam.popup  = TRUE 
               CALL cl_err() 
               LET l_flag = 'N'
               NEXT FIELD stfa024
            END IF 
   END INPUT 
   IF l_flag = 'Y' THEN 
      CALL s_transaction_begin()
      LET l_dt = cl_get_current()
      IF g_stfa_m.stfa024 < g_today THEN #LANJJ ADD ON 2016-04-28 当请退日期小于今天才更新合同状态 顾问 刘鑫
         UPDATE stfa_t SET stfa024 = g_stfa_m.stfa024,
                           stfa004 = '6',
                           stfamodid = g_user,
                           stfamoddt = l_dt
          WHERE stfaent = g_enterprise
            AND stfa001 = g_stfa_m.stfa001
         IF SQLCA.sqlcode THEN 
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfa_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            LET g_stfa_m.stfa024 = g_stfa_m_t.stfa024
            DISPLAY BY NAME g_stfa_m.stfa024
            CALL s_transaction_end('N','0')
            RETURN 
         END IF 
        
         #lanjj add on 2016-04-28 start  -----       
          LET l_sql_1 = "SELECT DISTINCT rtei002 ",
                      "  FROM rtei_t,stfc_t,stfa_t ",
                      " WHERE rtei001 = stfc002 ",
                      "   AND rteient = stfcent ",
                      "   AND rteiacti = 'Y' ",    
                      "   AND stfa001 = stfc001 ", 
                      "   AND stfaent = stfcent ", 
                      "   AND stfa004 = '6' ",     #状态为6.合同清退中
                      "   AND stfa024 <= to_date('",g_today,"','yy/mm/dd')-1 ",
                      "   AND stfaent = '",g_enterprise,"' ",
                      "   AND stfasite = '",g_stfa_m.stfasite,"'",
                      "   AND stfa001 = '",g_stfa_m.stfa001,"' "
         #将清退日期小于今天的商品可售否更新为N
         LET l_sql_2 = "UPDATE rtdx_t SET rtdx025 = 'N' WHERE rtdx001 IN (",l_sql_1,") AND rtdxent = '",g_enterprise,"' AND rtdxsite = '",g_stfa_m.stfasite,"' "
         PREPARE astm401_upd_pre4 FROM l_sql_2
         EXECUTE astm401_upd_pre4
         IF SQLCA.SQLcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'Upd rtdx025'
            LET g_errparam.popup = TRUE
            CALL cl_err()
            LET g_stfa_m.stfa024 = g_stfa_m_t.stfa024
            DISPLAY BY NAME g_stfa_m.stfa024
            CALL s_transaction_end('N','0')
            RETURN 
         END IF
         #将清退日期小于今天的商品库区关系资料可首否更新为N
         LET l_sql_3 = "UPDATE rtei_t SET rtei005 = 'N' WHERE rtei002 IN (",l_sql_1,")  AND rteient = '",g_enterprise,"' "
         PREPARE astm401_upd_pre4_2 FROM l_sql_3
         EXECUTE astm401_upd_pre4_2
         IF SQLCA.SQLcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'Upd rteiacti'
            LET g_errparam.popup = TRUE
            CALL cl_err()
            LET g_stfa_m.stfa024 = g_stfa_m_t.stfa024
            DISPLAY BY NAME g_stfa_m.stfa024
            CALL s_transaction_end('N','0')
            RETURN 
         END IF
        
         #lanjj add on 2016-11-16 更新场地基本资料中的使用状态 0-未使用 start
         UPDATE mhad_t SET mhad008 = '0'
          WHERE mhadent = g_enterprise
            AND mhad001 = g_stfa_m.stfa047
            AND mhad002 = g_stfa_m.stfa048
            AND EXISTS ( SELECT 1 FROM stfg_t 
                          WHERE stfgent = mhadent
                            AND stfg001 = g_stfa_m.stfa001
                            AND stfg003 = mhad003
                            AND stfg002 = mhad004 )
         IF SQLCA.sqlcode THEN 
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "UPDATE mhad_t SET mhad008 = 0" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            LET g_stfa_m.stfa024 = g_stfa_m_t.stfa024
            DISPLAY BY NAME g_stfa_m.stfa024
            CALL s_transaction_end('N','0')
            RETURN 
         END IF 
         #lanjj add on 2016-11-16 更新场地基本资料中的使用状态 0-未使用，1-已使用  end 
      ELSE 
         UPDATE stfa_t SET stfa024 = g_stfa_m.stfa024, #LANJJ ADD ON 2016-04-28 当请退日期小于今天才更新合同状态 顾问 刘鑫
                           stfamodid = g_user,
                           stfamoddt = l_dt
          WHERE stfaent = g_enterprise
            AND stfa001 = g_stfa_m.stfa001
         IF SQLCA.sqlcode THEN 
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "stfa_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            LET g_stfa_m.stfa024 = g_stfa_m_t.stfa024
            DISPLAY BY NAME g_stfa_m.stfa024
            CALL s_transaction_end('N','0')
            RETURN 
         END IF 
      END IF
     #lanjj add on 2016-04-28 end  -----
       
      CALL s_transaction_end('Y','0')
      IF g_stfa_m.stfa024 < g_today THEN #LANJJ ADD ON 2016-04-28 当请退日期小于今天才更新合同状态 顾问 刘鑫
         LET g_stfa_m.stfa004 = '6'
      END IF
      LET g_stfa_m.stfamodid = g_user
      LET g_stfa_m.stfamoddt = l_dt
      DISPLAY BY NAME g_stfa_m.stfa004,g_stfa_m.stfa024,g_stfa_m.stfamodid,g_stfa_m.stfamoddt
   ELSE
      LET g_stfa_m.stfa004 = g_stfa_m_t.stfa004
      LET g_stfa_m.stfa024 = g_stfa_m_t.stfa024
      LET g_stfa_m.stfamodid = g_stfa_m_t.stfamodid
      LET g_stfa_m.stfamoddt = g_stfa_m_t.stfamoddt
      DISPLAY BY NAME g_stfa_m.stfa004,g_stfa_m.stfa024,g_stfa_m.stfamodid,g_stfa_m.stfamoddt
   END IF 

END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL astt401_stfw003_get(p_stfw002,p_stfw003)
# Input parameter: p_stfw002      递增类型
#                : p_stfw003      递增项次
# Return code....: r_stfw004      递增编号
#                : r_stfw004_desc 编号名称
# Date & Author..: 2015/09/09 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION astm401_stfw003_get(p_stfw002,p_stfw003)
DEFINE p_stfw002   LIKE stfw_t.stfw002
DEFINE p_stfw003   LIKE stfw_t.stfw003
DEFINE r_stfw004   LIKE stfw_t.stfw004
DEFINE r_stfw004_desc   LIKE type_t.chr50

   LET r_stfw004 = ''
   LET r_stfw004_desc = ''
   #费用明细
   IF p_stfw002 = '1' THEN 
      SELECT stfb002 INTO r_stfw004
        FROM stfb_t
       WHERE stfbent = g_enterprise
         AND stfb001 = g_stfa_m.stfa001
         AND stfbseq = p_stfw003
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = r_stfw004
      CALL ap_ref_array2(g_ref_fields,"SELECT stael003 FROM stael_t WHERE staelent='"||g_enterprise||"' AND stael001=? AND stael002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET r_stfw004_desc = g_rtn_fields[1]
   END IF 
   #库区明细
   IF p_stfw002 = '2' THEN 
      SELECT stfc002,stfc003 INTO r_stfw004,r_stfw004_desc
        FROM stfc_t
       WHERE stfcent = g_enterprise
         AND stfc001 = g_stfa_m.stfa001
         AND stfcseq = p_stfw003
         #AND stfc024 = '1' #lanjj mark on 2016年3月10日 不限定常规库区 顾问 刘鑫
   END IF 
   RETURN r_stfw004,r_stfw004_desc
END FUNCTION

################################################################################
# Descriptions...: 更新盖章否
# Memo...........:
# Usage..........: CALL astm401_03()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2015/10/15 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION astm401_03()
   IF g_stfa_m.stfa027 = 'Y' THEN 
      RETURN 
   END IF 
   INPUT BY NAME g_stfa_m.stfa027
         ATTRIBUTE(WITHOUT DEFAULTS)
         
      ON ACTION accept
         ACCEPT INPUT
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT INPUT 
         
      AFTER INPUT 
         UPDATE stfa_t SET stfa027 = g_stfa_m.stfa027
          WHERE stfaent = g_enterprise
            AND stfa001 = g_stfa_m.stfa001
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'upd stfa_t'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         RETURN 
      END IF
   END INPUT
   IF INT_FLAG THEN 
      LET g_stfa_m.stfa027 = g_stfa_m_t.stfa027
   END IF 
   DISPLAY BY NAME g_stfa_m.stfa027
END FUNCTION

################################################################################
# Descriptions...: 重新计算帐期
# Memo...........:
# Usage..........: CALL astm401_cal_period(p_stfa001,p_bdate,p_edate,p_stfa036,p_site,p_unit)
# Input parameter: p_stfa001      合同编号
#                : p_bdate        开始日期
#                : p_edate        结束日期
#                : p_stfa036      结算方式
#                : p_site         据点
#                : p_unit         应用组织
# Return code....: 无
# Date & Author..: 2015/10/15 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION astm401_cal_period(p_stfa001,p_bdate,p_edate,p_stfa036,p_site,p_unit)
DEFINE p_stfa001  LIKE stfa_t.stfa001
DEFINE p_bdate    LIKE type_t.dat
DEFINE p_edate    LIKE type_t.dat
DEFINE p_stfa036  LIKE stfa_t.stfa036
DEFINE l_next_b   LIKE type_t.dat
DEFINE p_site     LIKE stfj_t.stfjsite
DEFINE p_unit     LIKE stfj_t.stfjunit
DEFINE l_staa002  LIKE staa_t.staa002
DEFINE l_staa003  LIKE staa_t.staa003
DEFINE l_staa004  LIKE staa_t.staa004
DEFINE l_staa005  LIKE staa_t.staa005
DEFINE l_n        LIKE type_t.num5
DEFINE l_cnt      LIKE type_t.num5
DEFINE l_date     LIKE type_t.dat
DEFINE l_c        LIKE type_t.num5

   WHENEVER ERROR CONTINUE
   
   LET l_c = 0
   LET l_n = 1
   
   DELETE FROM stfj_t WHERE stfjent = g_enterprise AND stfj001 = p_stfa001 
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN FALSE
   END IF
   
   #根据结算方式抓取出加月数和加天数（结算方式只能设置加天或者加月）
   #加月按照自然月计算，不区分残月；加天按照时间天数算
   SELECT staa002,staa003,staa004,staa005 INTO l_staa002,l_staa003,l_staa004,l_staa005 FROM staa_t
    WHERE staaent = g_enterprise AND staa001 = p_stfa036
   IF cl_null(l_staa002) THEN LET l_staa002 = 0 END IF
   IF cl_null(l_staa003) THEN LET l_staa003 = 0 END IF
   IF l_staa002 = 0 AND l_staa003 = 0 THEN RETURN FALSE END IF
      LET l_date = p_bdate
      IF l_staa002 > 0 THEN
         IF l_staa004 = '1' THEN     #标准结算
            LET l_next_b = s_date_get_date(p_bdate,l_staa002,0)
         ELSE                        #月底结算
            LET l_next_b = s_date_get_date(p_bdate,l_staa002-1,0)
         END IF
         LET l_date = l_next_b        
      END IF
      IF l_staa004 = '1' THEN
         LET l_next_b = s_date_get_date(l_date,0,l_staa003-1)
      ELSE
         IF l_staa003 > 0 THEN
            IF l_staa005 >0 THEN
               CALL s_astt301_cal_nextb(l_date,l_staa003,l_staa005) RETURNING l_date,l_next_b,l_c
            ELSE
               LET l_next_b = s_date_get_date(l_date,0,l_staa003-1)
            END IF            
         END IF
      END IF
      
      IF l_staa004 = '2' AND l_staa005 = 0  THEN        #1.标准结算 2.月底结算
         LET l_next_b = s_date_get_last_date(l_next_b)
      END IF
      
      IF l_next_b >= p_edate THEN
         LET l_next_b = p_edate
      END IF
   #计算剩余账期
   WHILE TRUE
       
      LET l_c = l_c+1
      #插入第l_n期别的账期
      INSERT INTO stfj_t (stfjent,stfjsite,stfjunit,stfjseq,stfj001,stfj002,stfj003,stfj004,stfj005,stfj006)
       VALUES (g_enterprise,p_site,p_unit,l_n,p_stfa001,p_bdate,l_next_b,l_next_b,'N','') 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.popup = TRUE
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET p_bdate = l_next_b + 1
      IF p_bdate > p_edate THEN
         EXIT WHILE 
      END IF

      LET l_date = p_bdate
      IF l_staa002 > 0 THEN
         IF l_staa004 = '1' THEN     #标准结算
            LET l_next_b = s_date_get_date(p_bdate,l_staa002,0)
         ELSE                        #月底结算
            LET l_next_b = s_date_get_date(p_bdate,l_staa002-1,0)
         END IF
 
         LET l_date = l_next_b        
      END IF
      IF l_staa004 = '1' THEN
         LET l_next_b = s_date_get_date(l_date,0,l_staa003-1)
      ELSE
         IF l_staa003 > 0 THEN
            IF l_staa005 >0 THEN
               #加入月拆分期的计算
               #例:加天为7 月拆分为4   2月1-28 最后一期为2月22-2月28 最后一期7天
               #例:加天为7 月拆分为4   8月1-31 最后一期为8月22-8月31 最后一期10天
               IF l_c MOD l_staa005 = 0 THEN   #月拆分最后一期。如果上期结束日期小于月底，则该期账期是 上期结束+1 到 该月月底
                  LET l_next_b = s_date_get_last_date(l_date)
                  LET l_c = 0
               ELSE
                  CALL s_astt301_cal_nextb(l_date,l_staa003,l_staa005) RETURNING l_date,l_next_b,l_c
                  #例:开始日6月12日。第一期6月12-6月21 第二期 6月22日 到月底 此时l_c =2 mod 4 <> 0                  
                  #LET l_next_b = s_date_get_date(l_date,0,l_staa003-1)
                  #IF l_next_b >= s_date_get_last_date(l_date) THEN  #下一期账期 预计 跨月了。则取当月月底
                  #   LET l_next_b = s_date_get_last_date(l_date)
                  #   LET l_c = 0          #初始化为0
                  #END IF
               END IF
            ELSE
               LET l_next_b = s_date_get_date(l_date,0,l_staa003-1)
            END IF            
         END IF
      END IF
      
      IF l_staa004 = '2' AND l_staa005 = 0  THEN        #1.标准结算 2.月底结算
         LET l_next_b = s_date_get_last_date(l_next_b)
      END IF
      
      IF l_next_b >= p_edate THEN
         LET l_next_b = p_edate
      END IF
      LET l_n = l_n + 1
   
   END WHILE
   
   RETURN TRUE
END FUNCTION

################################################################################
# Descriptions...: 取消清退
# Memo...........:
# Usage..........: CALL astm401_04()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2015/11/09 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION astm401_04()

   IF cl_null(g_stfa_m.stfa001) THEN 
      RETURN 
   END IF 
   IF NOT cl_ask_confirm('ast-00499') THEN 
      RETURN 
   END IF 
   CALL s_transaction_begin()
   #将合同更新到正常合同状态，清空清退日期。
   UPDATE stfa_t SET stfa004 = '3',
                     stfa024 = ''
    WHERE stfaent = g_enterprise
      AND stfa001 = g_stfa_m.stfa001
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CALL s_transaction_end('N','0')
      RETURN 
   END IF
   #更新专柜对应的常规库区、多级扣率库区对应的商品库区关系表的商品有效否、状态码为Y
   UPDATE rtei_t SET rtei005 = 'Y',
                     rteiacti ='Y'
    WHERE rteient = g_enterprise
      AND EXISTS(SELECT 1 FROM stfc_t
                  WHERE stfcent = g_enterprise
                    AND stfc024 IN ('1','3')
                    AND rtei001 = stfc002
                    AND rtei002 = stfc002
                    AND rteient = stfcent
                    AND stfc001 = g_stfa_m.stfa001)
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CALL s_transaction_end('N','0')
      RETURN 
   END IF
   #门店商品清单的商品可售否为Y，可退否为Y。
   UPDATE rtdx_t SET rtdx025 = 'Y',
                     rtdx026 = 'Y'
    WHERE rtdxent = g_enterprise
      AND EXISTS(SELECT 1 FROM stfc_t
                  WHERE stfcent = g_enterprise
                    AND stfc024 IN ('1','3')
                    AND rtdx001 = stfc002
                    AND rtdxsite = g_stfa_m.stfasite
                    AND rtdxent = stfcent
                    AND stfc001 = g_stfa_m.stfa001)
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CALL s_transaction_end('N','0')
      RETURN 
   END IF
   #如果“库区商品化=Y”，那么当前日期在aprm310中存在促销的库区，
   #则将商品库区关系表的商品有效否、状态码为Y
   UPDATE rtei_t SET rtei005 = 'Y',
                     rteiacti ='Y'
    WHERE rteient = g_enterprise
      AND EXISTS(SELECT 1 FROM stfc_t,prei_t,preg_t,preh_t
                  WHERE stfcent = g_enterprise
                    AND stfc024 = '2'
                    AND rtei001 = stfc002
                    AND rtei002 = stfc002
                    AND rteient = stfcent
                    AND stfc001 = g_stfa_m.stfa001
                    AND stfcent = pregent
                    AND pregent = preient
                    AND preg001 = prei001
                    AND prei003 = stfc002
                    AND prehent = pregent
                    AND preh001 = preg001
                    AND preh003 <= g_today
                    AND preh004 >= g_today)
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CALL s_transaction_end('N','0')
      RETURN 
   END IF
   #门店商品清单的商品可售否为Y，可退否为Y。
   UPDATE rtdx_t SET rtdx025 = 'Y',
                     rtdx026 = 'Y'
    WHERE rtdxent = g_enterprise
      AND EXISTS(SELECT 1 FROM stfc_t,prei_t,preg_t,preh_t
                  WHERE stfcent = g_enterprise
                    AND stfc024 = '2'
                    AND rtdx001 = stfc002
                    AND rtdxsite = g_stfa_m.stfasite
                    AND rtdxent = stfcent
                    AND stfc001 = g_stfa_m.stfa001
                    AND stfcent = pregent
                    AND pregent = preient
                    AND preg001 = prei001
                    AND prei003 = stfc002
                    AND prehent = pregent
                    AND preh001 = preg001
                    AND preh003 <= g_today
                    AND preh004 >= g_today)
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CALL s_transaction_end('N','0')
      RETURN 
   END IF
   
   #lanjj add on 2016-11-16 更新场地基本资料中的使用状态 0-未使用，1-已使用 start
   UPDATE mhad_t SET mhad008 = '1'
    WHERE mhadent = g_enterprise
      AND mhad001 = g_stfa_m.stfa047
      AND mhad002 = g_stfa_m.stfa048
      AND EXISTS ( SELECT 1 FROM stfg_t 
                    WHERE stfgent = mhadent
                      AND stfg001 = g_stfa_m.stfa001
                      AND stfg003 = mhad003
                      AND stfg002 = mhad004 )
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = 'UPDATE mhad_t SET mhad008 = 1'
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CALL s_transaction_end('N','0')
      RETURN 
   END IF
   #lanjj add on 2016-11-16 更新场地基本资料中的使用状态 0-未使用，1-已使用  end 
   
   CALL s_transaction_end('Y','0')
   SELECT stfa004,stfa024 INTO g_stfa_m.stfa004,g_stfa_m.stfa024
     FROM stfa_t
    WHERE stfaent = g_enterprise
      AND stfa001 = g_stfa_m.stfa001
   DISPLAY BY NAME g_stfa_m.stfa004,g_stfa_m.stfa024
END FUNCTION

################################################################################
# Descriptions...: 填充单身
# Memo...........:
# Usage..........: CALL astm401_b_fill3()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2015/12/17 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION astm401_b_fill3()
   CALL g_stfb9_d.clear()
   IF g_stfb3_d.getLength() <= 0 THEN 
      RETURN 
   END IF 
   IF l_ac = 0 OR cl_null(l_ac) THEN 
      LET l_ac = 1
   END IF 
   LET g_sql = "SELECT  UNIQUE stffseq,stff002,stff003,stff004,stff005,stff006,stff007, 
                               stff010,stff008,stff011,stff009,stffsite,stffunit,t20.inayl003  FROM stff_t",   
               " INNER JOIN stfa_t ON stfa001 = stff001 ",               
               " LEFT JOIN inayl_t t20 ON t20.inaylent='"||g_enterprise||"' AND t20.inayl001=stff005 AND t20.inayl002='"||g_dlang||"' ",
               " WHERE stffent=? AND stff001=? AND stff002 = ? AND stff003 = ? ",   
               " ORDER BY stff_t.stffseq,stff_t.stff002,stff_t.stff003"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE sel_stff_pre FROM g_sql
   DECLARE sel_stff_cs CURSOR FOR sel_stff_pre
   OPEN sel_stff_cs USING g_enterprise,g_stfa_m.stfa001,g_stfb3_d[l_ac].stfe002,g_stfb3_d[l_ac].stfeseq
   FOREACH sel_stff_cs INTO g_stfb9_d[l_ac].stffseq,g_stfb9_d[l_ac].stff002, 
       g_stfb9_d[l_ac].stff003,g_stfb9_d[l_ac].stff004,g_stfb9_d[l_ac].stff005,g_stfb9_d[l_ac].stff006, 
       g_stfb9_d[l_ac].stff007,g_stfb9_d[l_ac].stff010,g_stfb9_d[l_ac].stff008,g_stfb9_d[l_ac].stff011, 
       g_stfb9_d[l_ac].stff009,g_stfb9_d[l_ac].stffsite,g_stfb9_d[l_ac].stffunit,g_stfb9_d[l_ac].stff005_desc
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
     
      #add-point:b_fill段資料填充

      #end add-point
   
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = l_ac
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
      
   END FOREACH
   CALL g_stfb9_d.deleteElement(g_stfb9_d.getLength())
END FUNCTION

################################################################################
# Descriptions...: 刷新单身
# Memo...........:
# Usage..........: CALL astm401_b9_refresh()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2015/12/15 By yangxf
# Modify.........:
################################################################################
PRIVATE FUNCTION astm401_b9_refresh()
   DISPLAY ARRAY g_stfb9_d TO s_detail9.* ATTRIBUTES(COUNT=g_rec_b)   
         
      BEFORE DISPLAY
         EXIT DISPLAY 
    
   END DISPLAY
END FUNCTION

################################################################################
# Descriptions...: 合同审核/取消审核
# Memo...........:
# Usage..........: CALL astm401_cancel_or_not(behaviour)
#                  RETURNING l_success
# Input parameter: behaviour 按钮动作（cancel     合同作废
#                :                    uncancel   合同取消作废 ）
# Return code....: success    成功否
# Date & Author..: 2016-07-20 by lanjj
# Modify.........:
################################################################################
PRIVATE FUNCTION astm401_cancel_or_not(behaviour)

DEFINE behaviour     LIKE type_t.chr10
DEFINE l_stfa043     LIKE stfa_t.stfa043
DEFINE l_dt          LIKE stfa_t.stfamoddt

   LET l_dt = cl_get_current()
   
   WHILE TRUE 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)


         INPUT l_stfa043 FROM stfa043  ATTRIBUTE(WITHOUT DEFAULTS)
            
            AFTER INPUT
               IF INT_FLAG THEN
                  EXIT DIALOG
               END IF
         END INPUT

            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
         
         ON ACTION cancel
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         ON ACTION accept

            CALL s_transaction_begin()
            CALL cl_err_collect_init()
            
            IF behaviour = 'cancel' THEN #作废
               IF NOT cl_ask_confirm('aim-00109') THEN #是否执行作废
                  CALL s_transaction_end('N','0')
                  CALL cl_err_collect_show()
                  RETURN
               ELSE
                  UPDATE stfa_t SET stfa043 = l_stfa043,#更新备注,状态
                                    stfastus = 'X',
                                    stfa004 = '7', #合同状态 更新为失效 #lanjj add on 2016-11-16
                                    stfamodid = g_user,
                                    stfamoddt = l_dt  
                   WHERE stfaent = g_enterprise 
                     AND stfa001 = g_stfa_m.stfa001
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = 'upd stfastus X'
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     CALL cl_err_collect_show() 
                     RETURN 
                  END IF
                  LET g_stfa_m.stfa043 = l_stfa043
                  LET g_stfa_m.stfastus = 'X'
                  
                  UPDATE rtdx_t SET rtdx025 = 'N' #更新库区可售否
                   WHERE rtdxent = g_enterprise
                     AND rtdxsite = g_stfa_m.stfasite
                     AND EXISTS ( SELECT 1 FROM stfc_t 
                                   WHERE stfcent = g_enterprise
                                     AND stfcunit = rtdxsite
                                     AND stfc002 = rtdx001
                                     AND stfc001 = g_stfa_m.stfa001 )
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = 'upd rtdx025'
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     CALL cl_err_collect_show() 
                     RETURN 
                  END IF
                  
                  #lanjj add on 2016-11-16 更新场地基本资料中的使用状态 0-未使用 start
                  UPDATE mhad_t SET mhad008 = '0'
                   WHERE mhadent = g_enterprise
                     AND mhad001 = g_stfa_m.stfa047
                     AND mhad002 = g_stfa_m.stfa048
                     AND EXISTS ( SELECT 1 FROM stfg_t 
                                   WHERE stfgent = mhadent
                                     AND stfg001 = g_stfa_m.stfa001
                                     AND stfg003 = mhad003
                                     AND stfg002 = mhad004 )
                  IF SQLCA.sqlcode THEN 
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "UPDATE mhad_t SET mhad008 = 0" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     CALL cl_err_collect_show() 
                     RETURN 
                  END IF 
                  #lanjj add on 2016-11-16 更新场地基本资料中的使用状态 0-未使用  end 
               END IF
            ELSE #取消作废
               IF NOT cl_ask_confirm('aim-00129') THEN #是否执行作废
                  CALL s_transaction_end('N','0')
                  CALL cl_err_collect_show()
                  RETURN
               ELSE
                  UPDATE stfa_t SET stfa043 = l_stfa043,#更新备注,状态
                                    stfastus = 'Y',
                                    stfa004 = '3', #合同状态 更新为生效中 #lanjj add on 2016-11-16
                                    stfamodid = g_user,
                                    stfamoddt = l_dt  
                   WHERE stfaent = g_enterprise 
                     AND stfa001 = g_stfa_m.stfa001
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = 'upd stfastus Y'
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     CALL cl_err_collect_show() 
                     RETURN 
                  END IF
                  LET g_stfa_m.stfa043 = l_stfa043
                  LET g_stfa_m.stfastus = 'Y'

                  IF g_stfa_m.stfa019 <= g_today AND g_stfa_m.stfa004 < 6 THEN 
                     #更新常规库区多级扣率库区有效的  可售否
                     UPDATE rtdx_t SET rtdx025 = 'Y'
                      WHERE rtdxent = g_enterprise
                        AND EXISTS (SELECT 1 FROM stfc_t 
                                     WHERE stfcent = g_enterprise
                                       AND rtdxsite = stfcunit
                                       AND rtdxent = stfcent
                                       AND rtdx001 = stfc002
                                       AND stfc024 IN ('1','3')
                                       AND stfcacti = 'Y'
                                       AND stfc001 = g_stfa_m.stfa001 )
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'sub-00034'
                        LET g_errparam.extend = 'UPDATE rtdx025 = Y '
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        CALL s_transaction_end('N','0')
                        CALL cl_err_collect_show() 
                        RETURN 
                     END IF     
                     #lanjj add on 2016-11-16 更新场地基本资料中的使用状态 0-未使用，1-已使用 start
                     UPDATE mhad_t SET mhad008 = '1'
                      WHERE mhadent = g_enterprise
                        AND mhad001 = g_stfa_m.stfa047
                        AND mhad002 = g_stfa_m.stfa048
                        AND EXISTS ( SELECT 1 FROM stfg_t 
                                      WHERE stfgent = mhadent
                                        AND stfg001 = g_stfa_m.stfa001
                                        AND stfg003 = mhad003
                                        AND stfg002 = mhad004 )
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'sub-00034'
                        LET g_errparam.extend = 'UPDATE mhad_t SET mhad008 = 1'
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        CALL s_transaction_end('N','0')
                        CALL cl_err_collect_show() 
                        RETURN 
                     END IF
                     #lanjj add on 2016-11-16 更新场地基本资料中的使用状态 0-未使用，1-已使用  end                      
                  END IF  
               END IF
            END IF 
            
            CALL cl_err_collect_show()
            CALL s_transaction_end('Y','1')    
            DISPLAY BY NAME g_stfa_m.stfa043,g_stfa_m.stfastus   
            CASE g_stfa_m.stfastus
               WHEN "Y"
                  CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
               WHEN "X"
                  CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
            END CASE
            
         BEFORE DIALOG 
            LET l_stfa043 = g_stfa_m.stfa043
            DISPLAY BY NAME g_stfa_m.stfa043
            
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
      IF g_action_choice = "exit" THEN
         EXIT WHILE
      END IF
    
   END WHILE
END FUNCTION

################################################################################
# Descriptions...: 更新账单状态
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 2016-10-17 by lanjj
# Modify.........:
################################################################################
PRIVATE FUNCTION astm401_upd_stfj()

DEFINE l_current_idx    LIKE type_t.num5
DEFINE l_stfj005_t      LIKE stfj_t.stfj005
DEFINE l_stfj006_t      LIKE stfj_t.stfj006

   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      INPUT ARRAY g_stfb7_d FROM s_detail7.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = FALSE, 
                 DELETE ROW = FALSE,
                 APPEND ROW = FALSE)
                 
         BEFORE ROW
            LET l_current_idx = DIALOG.getCurrentRow("s_detail7")
            CALL astm401_set_entry_b("J")
            CALL astm401_set_no_entry_b("J")
            CALL cl_set_comp_required("stfj005",TRUE)
            
            SELECT stfj005,stfj006 INTO l_stfj005_t,l_stfj006_t
              FROM stfj_t
             WHERE stfjent = g_enterprise
               AND stfj001 = g_stfa_m.stfa001
               AND stfjseq = g_stfb7_d[l_current_idx].stfjseq
           
            ON CHANGE stfj005
               IF l_stfj005_t != 'Y' OR NOT cl_null(l_stfj006_t) THEN
                  LET g_stfb7_d[l_current_idx].stfj005 = l_stfj005_t
                  --DISPLAY BY NAME stfj005
               END IF
               
         AFTER ROW
            IF g_stfb7_d[l_current_idx].stfj005 != l_stfj005_t THEN 
               UPDATE stfj_t 
                  SET stfj005 = g_stfb7_d[l_current_idx].stfj005
                WHERE stfjent = g_enterprise
                  AND stfj001 = g_stfa_m.stfa001
                  AND stfjseq = g_stfb7_d[l_current_idx].stfjseq
               
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "UPDATE stfj_t :",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  RETURN FALSE
               END IF
            END IF
      END INPUT
      
               
      ON ACTION close
         RETURN FALSE
         EXIT DIALOG
       
      ON ACTION exit
         RETURN FALSE
         EXIT DIALOG
      
      ON ACTION cancel
         RETURN FALSE
         EXIT DIALOG
       
      ON ACTION accept
         
         ACCEPT DIALOG
          
   END DIALOG
      
   RETURN TRUE  
END FUNCTION

 
{</section>}
 
