#該程式未解開Section, 採用最新樣板產出!
{<section id="astp560.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0003(2016-04-19 14:56:10), PR版次:0003(2016-04-19 15:15:16)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000053
#+ Filename...: astp560
#+ Description: 專櫃成本審批單批次產生作業
#+ Creator....: 06189(2015-08-28 15:21:43)
#+ Modifier...: 06815 -SD/PR- 06815
 
{</section>}
 
{<section id="astp560.global" >}
#應用 p01 樣板自動產生(Version:18)
#add-point:填寫註解說明
#Memos
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_schedule
#add-point:增加匯入項目

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
   DEFINE g_chk_jobid          LIKE type_t.num5
END GLOBALS
 
PRIVATE TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
   
   #end add-point
        wc               STRING
                     END RECORD
 
DEFINE g_sql             STRING        #組 sql 用
DEFINE g_forupd_sql      STRING        #SELECT ... FOR UPDATE  SQL
DEFINE g_error_show      LIKE type_t.num5
DEFINE g_jobid           STRING
DEFINE g_wc              STRING
 
PRIVATE TYPE type_master RECORD
       stfasite LIKE type_t.chr10, 
   stfa038 LIKE type_t.chr10, 
   stfa005 LIKE type_t.chr20, 
   stfa036 LIKE type_t.chr10, 
   stfa051 LIKE type_t.chr10, 
   stfa010 LIKE type_t.chr10, 
   stfa003 LIKE type_t.chr10, 
   stfa045 LIKE type_t.chr10, 
   stfa046 LIKE type_t.chr10, 
   l_bdate LIKE type_t.chr500, 
   checkbox_1 LIKE type_t.chr500, 
   stagenow LIKE type_t.chr80,
       wc               STRING
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_master type_master
 
#add-point:自定義模組變數(Module Variable)

#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)

#end add-point
 
#add-point:傳入參數說明

#end add-point
 
{</section>}
 
{<section id="astp560.main" >}
MAIN
   #add-point:main段define (客製用)
   
   #end add-point 
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter  
   #add-point:main段define 
   DEFINE l_success LIKE type_t.num5 
   #end add-point 
  
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:初始化前定義
   
   #end add-point
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ast","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   
   #end add-point
 
   #背景(Y) 或半背景(T) 時不做主畫面開窗
   IF g_bgjob = "Y" OR g_bgjob = "T" THEN
      #排程參數由01開始，若不是1開始，表示有保留參數
      LET ls_js = g_argv[01]
     #CALL util.JSON.parse(ls_js,g_master)   #p類主要使用l_param,此處不解析
      #add-point:Service Call
      
      #end add-point
      CALL astp560_process(ls_js)
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_astp560 WITH FORM cl_ap_formpath("ast",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL astp560_init()
 
      #進入選單 Menu (="N")
      CALL astp560_ui_dialog()
 
      #add-point:畫面關閉前
      
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_astp560
   END IF
 
   #add-point:作業離開前
   CALL s_aooi500_drop_temp() RETURNING l_success 
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
{</section>}
 
{<section id="astp560.init" >}
#+ 初始化作業
PRIVATE FUNCTION astp560_init()
 
   #add-point:init段define (客製用)
   
   #end add-point
   #add-point:ui_dialog段define 
   DEFINE l_success LIKE type_t.num5 
   #end add-point
 
   LET g_error_show = 1
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #add-point:畫面資料初始化
   #CALL cl_set_combo_scc('stfa003','6014')             #add by dengdd 15/9/16 #mark by geza 20160322
   CALL cl_set_combo_scc_part('stfa003','6013','4,5')   #add by geza 20160322
   CALL s_aooi500_create_temp() RETURNING l_success    #150308-00001#5  By benson 150309
   #add by geza 20150812(E)
   CALL cl_set_combo_scc_part('stfa046','6201','2') #151214-00017#24  add by dengdd 160201
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="astp560.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION astp560_ui_dialog()
 
   #add-point:ui_dialog段define (客製用)
   
   #end add-point
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx   LIKE type_t.num10
   DEFINE ls_js    STRING
   DEFINE ls_wc    STRING
   DEFINE l_dialog ui.DIALOG
   DEFINE lc_param type_parameter
   #add-point:ui_dialog段define 

   DEFINE       l_ooef017  LIKE ooef_t.ooef017
   DEFINE       l_glaa003  LIKE glaa_t.glaa003
   DEFINE       l_flag      LIKE    type_t.chr1
   DEFINE       l_errno      LIKE    type_t.chr100 
   DEFINE       l_glav005    LIKE  glav_t.glav005
   DEFINE       l_sdate_s    LIKE  type_t.chr500
   DEFINE        l_sdate_e   LIKE   type_t.chr500
   DEFINE       l_pdate_s    LIKE   type_t.chr500
   DEFINE       l_pdate_e    LIKE    type_t.chr500
   DEFINE       l_glav007    LIKE  glav_t.glav007
   DEFINE       l_wdate_s    LIKE type_t.chr500
   DEFINE       l_wdate_e    LIKE  type_t.chr500
   DEFINE       l_glav002_1  LIKE  glav_t.glav002
   DEFINE       l_glav002    LIKE  glav_t.glav002
   DEFINE       l_glav006_1  LIKE  glav_t.glav006
   DEFINE       l_glav006   LIKE   glav_t.glav006
   #end add-point
   
   #add-point:ui_dialog段before dialog
   #mark by geza 20150902(S)
#   #查询資料  ---会计期别
#   #抓取法人對應會計週期參照表
#   LET l_ooef017 = NULL
#   LET l_glaa003 = NULL     
#   
#   #法人     
#   SELECT ooef017 INTO l_ooef017           
#     FROM ooef_t
#    WHERE ooefent = g_enterprise
#      AND ooef001 = g_site
#      
#   #依据法人+运营组织+主账套--------会计周期参照表号
#   SELECT glaa003 INTO l_glaa003
#     FROM glaa_t
#    WHERE glaaent = g_enterprise
#      AND glaacomp = l_ooef017
#      AND glaa014 = 'Y'
#      
#   #取得會計週期資料
#   CALL s_get_accdate(l_glaa003,g_today,'','')
#      RETURNING l_flag,l_errno,l_glav002,l_glav005,l_sdate_s,l_sdate_e,
#                l_glav006,l_pdate_s,l_pdate_e,l_glav007,l_wdate_s,l_wdate_e
#   IF l_flag = 'Y' THEN
#      LET l_glav002_1 = l_glav002           #年度glav002,会计期glav006
#      LET l_glav006_1 = l_glav006 - 1       #取上一会计期       
#      IF l_glav006_1 = 0 THEN               #若为第一个会计期，则去上一年会计期别最大的（即上一年最后一期）
#         LET l_glav002_1 = l_glav002 - 1
#         SELECT DISTINCT MAX(glav006) INTO l_glav006_1
#           FROM glav_t
#          WHERE glavent = g_enterprise
#            AND glav001 = l_glaa003
#            AND glav002 = l_glav002_1
#      END IF        
#      #抓取当前日期上一会计期的起讫日期l_pdate_s和l_pdate_e
#      CALL s_get_accdate(l_glaa003,'',l_glav002_1,l_glav006_1)
#         RETURNING l_flag,l_errno,l_glav002,l_glav005,l_sdate_s,l_sdate_e,
#                   l_glav006,l_pdate_s,l_pdate_e,l_glav007,l_wdate_s,l_wdate_e                      
#      LET g_master.l_bdate = l_pdate_s
#      LET g_master.l_edate= l_pdate_e
#   END IF
   #mark by geza 20150902(E)
   #add by geza 20150902(S)
   LET g_master.l_bdate = g_today
   #add by geza 20150902(E)
   #end add-point
 
   WHILE TRUE
      #add-point:ui_dialog段before dialog2
      
      #end add-point
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #應用 a57 樣板自動產生(Version:3)
         INPUT BY NAME g_master.l_bdate,g_master.checkbox_1 
            ATTRIBUTE(WITHOUT DEFAULTS)
            
            #自訂ACTION(master_input)
            
         
            BEFORE INPUT
               #add-point:資料輸入前 name="input.m.before_input"
               
               #end add-point
         
                     #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD l_bdate
            #add-point:BEFORE FIELD l_bdate name="input.b.l_bdate"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD l_bdate
            
            #add-point:AFTER FIELD l_bdate name="input.a.l_bdate"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE l_bdate
            #add-point:ON CHANGE l_bdate name="input.g.l_bdate"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD checkbox_1
            #add-point:BEFORE FIELD checkbox_1 name="input.b.checkbox_1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD checkbox_1
            
            #add-point:AFTER FIELD checkbox_1 name="input.a.checkbox_1"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE checkbox_1
            #add-point:ON CHANGE checkbox_1 name="input.g.checkbox_1"
            
            #END add-point 
 
 
 
                     #Ctrlp:input.c.l_bdate
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD l_bdate
            #add-point:ON ACTION controlp INFIELD l_bdate name="input.c.l_bdate"
            
            #END add-point
 
 
         #Ctrlp:input.c.checkbox_1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD checkbox_1
            #add-point:ON ACTION controlp INFIELD checkbox_1 name="input.c.checkbox_1"
            
            #END add-point
 
 
 
               
            AFTER INPUT
               #add-point:資料輸入後 name="input.m.after_input"
               
               #end add-point
               
            #add-point:其他管控(on row change, etc...) name="input.other"
            
            #end add-point
         END INPUT
 
 
 
         
         #應用 a58 樣板自動產生(Version:3)
         CONSTRUCT BY NAME g_master.wc ON stfasite,stfa038,stfa005,stfa036,stfa051,stfa010,stfa003,stfa045, 
             stfa046,stagenow
            BEFORE CONSTRUCT
               #add-point:cs段before_construct name="cs.head.before_construct"
               
               #end add-point 
         
            #公用欄位開窗相關處理
            
               
            #一般欄位開窗相關處理    
                     #Ctrlp:construct.c.stfasite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfasite
            #add-point:ON ACTION controlp INFIELD stfasite name="construct.c.stfasite"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'stfasite',g_site,'c')
            CALL q_ooef001_24()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfasite  #顯示到畫面上
            NEXT FIELD stfasite                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfasite
            #add-point:BEFORE FIELD stfasite name="construct.b.stfasite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfasite
            
            #add-point:AFTER FIELD stfasite name="construct.a.stfasite"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa038
            #add-point:BEFORE FIELD stfa038 name="construct.b.stfa038"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa038
            
            #add-point:AFTER FIELD stfa038 name="construct.a.stfa038"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa038
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa038
            #add-point:ON ACTION controlp INFIELD stfa038 name="construct.c.stfa038"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            IF s_aooi500_setpoint(g_prog,'stfa038') THEN
               LET g_qryparam.where = s_aooi500_q_where(g_prog,'stfa038',g_site,'c')   
               CALL q_ooef001_24() 
            ELSE
               LET g_qryparam.where="ooefstus='Y'"
               CALL q_ooef001_23()  
            END IF
            DISPLAY g_qryparam.return1 TO stfa038  #顯示到畫面上
            NEXT FIELD stfa038                     #返回原欄位
            #END add-point
 
 
         #Ctrlp:construct.c.stfa005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa005
            #add-point:ON ACTION controlp INFIELD stfa005 name="construct.c.stfa005"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            CALL q_mhae001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa005  #顯示到畫面上
            NEXT FIELD stfa005                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa005
            #add-point:BEFORE FIELD stfa005 name="construct.b.stfa005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa005
            
            #add-point:AFTER FIELD stfa005 name="construct.a.stfa005"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa036
            #add-point:BEFORE FIELD stfa036 name="construct.b.stfa036"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa036
            
            #add-point:AFTER FIELD stfa036 name="construct.a.stfa036"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa036
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa036
            #add-point:ON ACTION controlp INFIELD stfa036 name="construct.c.stfa036"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_staa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa036  #顯示到畫面上
            NEXT FIELD stfa036                     #返回原欄位
    
            #END add-point
 
 
         #Ctrlp:construct.c.stfa051
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa051
            #add-point:ON ACTION controlp INFIELD stfa051 name="construct.c.stfa051"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_rtax001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa051  #顯示到畫面上
            NEXT FIELD stfa051                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa051
            #add-point:BEFORE FIELD stfa051 name="construct.b.stfa051"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa051
            
            #add-point:AFTER FIELD stfa051 name="construct.a.stfa051"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa010
            #add-point:ON ACTION controlp INFIELD stfa010 name="construct.c.stfa010"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "('1','3')"
            CALL q_pmaa001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa010  #顯示到畫面上
            NEXT FIELD stfa010                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa010
            #add-point:BEFORE FIELD stfa010 name="construct.b.stfa010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa010
            
            #add-point:AFTER FIELD stfa010 name="construct.a.stfa010"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa003
            #add-point:BEFORE FIELD stfa003 name="construct.b.stfa003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa003
            
            #add-point:AFTER FIELD stfa003 name="construct.a.stfa003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa003
            #add-point:ON ACTION controlp INFIELD stfa003 name="construct.c.stfa003"
            
            #END add-point
 
 
         #Ctrlp:construct.c.stfa045
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa045
            #add-point:ON ACTION controlp INFIELD stfa045 name="construct.c.stfa045"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002_2127()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO stfa045  #顯示到畫面上
            NEXT FIELD stfa045                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa045
            #add-point:BEFORE FIELD stfa045 name="construct.b.stfa045"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa045
            
            #add-point:AFTER FIELD stfa045 name="construct.a.stfa045"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stfa046
            #add-point:BEFORE FIELD stfa046 name="construct.b.stfa046"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stfa046
            
            #add-point:AFTER FIELD stfa046 name="construct.a.stfa046"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stfa046
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stfa046
            #add-point:ON ACTION controlp INFIELD stfa046 name="construct.c.stfa046"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD stagenow
            #add-point:BEFORE FIELD stagenow name="construct.b.stagenow"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD stagenow
            
            #add-point:AFTER FIELD stagenow name="construct.a.stagenow"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.stagenow
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD stagenow
            #add-point:ON ACTION controlp INFIELD stagenow name="construct.c.stagenow"
            
            #END add-point
 
 
 
            
            #add-point:其他管控 name="cs.other"
            
            #end add-point
            
         END CONSTRUCT
 
 
 
      
         #add-point:ui_dialog段construct
         
         #end add-point
         #add-point:ui_dialog段input
         
         #end add-point
         #add-point:ui_dialog段自定義display array
         
         #end add-point
 
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
 
         BEFORE DIALOG
            LET l_dialog = ui.DIALOG.getCurrent()
            CALL astp560_get_buffer(l_dialog)
            #add-point:ui_dialog段before dialog
            LET g_master.checkbox_1 = 'N'
            DISPLAY g_site TO stfasite  #add by geza 20151102
            #end add-point
 
         ON ACTION batch_execute
            LET g_action_choice = "batch_execute"
            ACCEPT DIALOG
 
         #add-point:ui_dialog段before_qbeclear
         
         #end add-point
 
         ON ACTION qbeclear         
            CLEAR FORM
            INITIALIZE g_master.* TO NULL   #畫面變數清空
            INITIALIZE lc_param.* TO NULL   #傳遞參數變數清空
            #add-point:ui_dialog段qbeclear
            
            #end add-point
 
         ON ACTION history_fill
            CALL cl_schedule_history_fill()
 
         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT DIALOG
         
         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT DIALOG
 
         #add-point:ui_dialog段action
         
         #end add-point
 
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM   
         INITIALIZE g_master.* TO NULL
         LET g_wc  = ' 1=2'
         LET g_action_choice = ""
         CALL astp560_init()
         CONTINUE WHILE
      END IF
 
      #檢查批次設定是否有錯(或未設定完成)
      IF NOT cl_schedule_exec_check() THEN
         CONTINUE WHILE
      END IF
      
      LET lc_param.wc = g_master.wc    #把畫面上的wc傳遞到參數變數
      #請在下方的add-point內進行把畫面的輸入資料(g_master)轉換到傳遞參數變數(lc_param)的動作
      #add-point:ui_dialog段exit dialog
      
      #end add-point
 
      LET ls_js = util.JSON.stringify(lc_param)  #r類使用g_master/p類使用lc_param
 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      ELSE
         IF g_chk_jobid THEN 
            LET g_jobid = g_schedule.gzpa001
         ELSE 
            LET g_jobid = cl_schedule_get_jobid(g_prog)
         END IF 
 
         #依照指定模式執行報表列印
         CASE 
            WHEN g_schedule.gzpa003 = "0"
                 CALL astp560_process(ls_js)
 
            WHEN g_schedule.gzpa003 = "1"
                 LET ls_js = astp560_transfer_argv(ls_js)
                 CALL cl_cmdrun(ls_js)
 
            WHEN g_schedule.gzpa003 = "2"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
 
            WHEN g_schedule.gzpa003 = "3"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
         END CASE  
 
         IF g_schedule.gzpa003 = "2" OR g_schedule.gzpa003 = "3" THEN 
            CALL cl_ask_confirm3("std-00014","") #設定完成
         END IF    
         LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
 
         #add-point:ui_dialog段after schedule
         
         #end add-point
 
         #欄位初始資訊 
         CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
         LET gi_hiden_asign = FALSE 
         LET gi_hiden_exec = FALSE 
         LET gi_hiden_spec = FALSE 
         LET gi_hiden_exec_end = FALSE 
         CALL cl_schedule_hidden()
      END IF
   END WHILE
 
END FUNCTION
 
{</section>}
 
{<section id="astp560.transfer_argv" >}
#+ 轉換本地參數至cmdrun參數內,準備進入背景執行
PRIVATE FUNCTION astp560_transfer_argv(ls_js)
 
   #add-point:transfer_agrv段define (客製用)
   
   #end add-point
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog       STRING,
             actionid   STRING,
             background LIKE type_t.chr1,
             param      DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter
   #add-point:transfer_agrv段define 
   
   #end add-point
 
   LET la_cmdrun.prog = g_prog
   LET la_cmdrun.background = "Y"
   LET la_cmdrun.param[1] = ls_js
 
   #add-point:transfer.argv段程式內容
   
   #end add-point
 
   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION
 
{</section>}
 
{<section id="astp560.process" >}
#+ 資料處理   (r類使用g_master為主處理/p類使用l_param為主)
PRIVATE FUNCTION astp560_process(ls_js)
 
   #add-point:process段define (客製用)
   
   #end add-point
   DEFINE ls_js         STRING
   DEFINE lc_param      type_parameter
   DEFINE li_stus       LIKE type_t.num5
   DEFINE li_count      LIKE type_t.num10  #progressbar計量
   DEFINE ls_sql        STRING             #主SQL
   DEFINE li_p01_status LIKE type_t.num5
   #add-point:process段define 
   DEFINE l_success    LIKE type_t.num5
   DEFINE l_string     STRING 
   DEFINE l_string1    STRING
   DEFINE l_msg        LIKE type_t.chr100   #160225-00040#18 2016/04/13 s983961--add
   #end add-point
 
  #INITIALIZE lc_param TO NULL           #p類不可以清空
   CALL util.JSON.parse(ls_js,lc_param)  #r類作業被t類呼叫時使用, p類主要解開參數處
   LET li_p01_status = 1
 
  #IF lc_param.wc IS NOT NULL THEN
  #   LET g_bgjob = "T"       #特殊情況,此為t類作業鬆耦合串入報表主程式使用
  #END IF
 
   #add-point:process段前處理
   IF NOT cl_ask_confirm("lib-012") THEN
      RETURN
   END IF
   #end add-point
 
   #預先計算progressbar迴圈次數
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress
      CALL cl_progress_bar_no_window(2)   #160225-00040#18 2016/04/13 s983961--add  
      #end add-point
   END IF
 
   #主SQL及相關FOREACH前置處理
#  DECLARE astp560_process_cs CURSOR FROM ls_sql
#  FOREACH astp560_process_cs INTO
   #add-point:process段process
   CALL cl_err_collect_init()
   #160225-00040#18 2016/04/13 s983961--add(s)
   LET l_msg = cl_getmsg('ast-00330',g_lang)   
   CALL cl_progress_no_window_ing(l_msg)
   #160225-00040#18 2016/04/13 s983961--add(e)
   CALL s_transaction_begin()
  
   #call astp560_insert(g_master.wc,g_master.l_bdate,g_master.l_edate)  RETURNING l_success,l_string
   CALL s_astp560_insert(g_master.wc,g_master.l_bdate,g_master.checkbox_1)  RETURNING l_success,l_string  
   IF NOT l_success THEN
      CALL s_transaction_end('N','0')
   ELSE
      CALL s_transaction_end('Y','0')
   END IF
  
   IF cl_null(l_string)  THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = ""
      LET g_errparam.code = 'ast-00437'
      LET g_errparam.popup = TRUE
      CALL cl_err()   
   END IF 
   CALL cl_err_collect_show()
   #160225-00040#18 2016/04/13 s983961--add(s)
   LET l_msg = cl_getmsg('std-00012',g_lang)
   CALL cl_progress_no_window_ing(l_msg)  
   #160225-00040#18 2016/04/13 s983961--add(e)   
   #end add-point
#  END FOREACH
 
   IF g_bgjob = "N" THEN
      #前景作業完成處理
      #add-point:process段foreground完成處理
#      IF l_success THEN        
#         CALL s_astp560_insert_show(l_string)     #add by geza 20150624 
#      END IF
      #end add-point
      CALL cl_ask_confirm3("std-00012","")
   ELSE
      #背景作業完成處理
      #add-point:process段background完成處理
      
      #end add-point
      CALL cl_schedule_exec_call(li_p01_status)
   END IF
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL astp560_msgcentre_notify()
 
END FUNCTION
 
{</section>}
 
{<section id="astp560.get_buffer" >}
PRIVATE FUNCTION astp560_get_buffer(p_dialog)
 
   #add-point:process段define (客製用)
   
   #end add-point
   DEFINE p_dialog   ui.DIALOG
   #add-point:process段define
   
   #end add-point
 
   
   LET g_master.l_bdate = p_dialog.getFieldBuffer('l_bdate')
   LET g_master.checkbox_1 = p_dialog.getFieldBuffer('checkbox_1')
 
   CALL cl_schedule_get_buffer(p_dialog)
 
   #add-point:get_buffer段其他欄位處理
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="astp560.msgcentre_notify" >}
PRIVATE FUNCTION astp560_msgcentre_notify()
 
   #add-point:process段define (客製用)
   
   #end add-point
   DEFINE lc_state LIKE type_t.chr5
   #add-point:process段define
   
   #end add-point
 
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = "process"
 
   #add-point:msgcentre其他通知
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
{</section>}
 
{<section id="astp560.other_function" readonly="Y" >}
#add-point:自定義元件(Function)

#end add-point
 
{</section>}
 
