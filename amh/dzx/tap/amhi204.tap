<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="amhi204" std_prog="amhi204" erpver="1.0" module="AMH" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="construct.c.mhad001" order="0" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mhaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mhad001  #顯示到畫面上

            NEXT FIELD mhad001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mhad002" order="0" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mhab002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mhad002  #顯示到畫面上

            NEXT FIELD mhad002                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mhad003" order="0" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mhac003()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mhad003  #顯示到畫面上

            NEXT FIELD mhad003                     #返回原欄位

]]>
  </point>
  <point name="construct.c.mhadunit" order="0" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooed004()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mhadunit  #顯示到畫面上

            NEXT FIELD mhadunit                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.mhad004" order="0" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mhad001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mhad004  #顯示到畫面上

            NEXT FIELD mhad004                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.mhadcrtdp" order="0" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mhadcrtdp  #顯示到畫面上

            NEXT FIELD mhadcrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.mhadcrtid" order="0" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mhadcrtid  #顯示到畫面上

            NEXT FIELD mhadcrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.mhadmodid" order="0" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mhadmodid  #顯示到畫面上

            NEXT FIELD mhadmodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.mhadowndp" order="0" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mhadowndp  #顯示到畫面上

            NEXT FIELD mhadowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.mhadownid" order="0" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mhadownid  #顯示到畫面上

            NEXT FIELD mhadownid                     #返回原欄位

]]>
  </point>
  <point name="input.a.mhad001" order="0" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            LET g_mhad_m.mhad001_desc = NULL
            DISPLAY BY NAME g_mhad_m.mhad001_desc
            IF  NOT cl_null(g_mhad_m.mhad001) AND NOT cl_null(g_mhad_m.mhad002) AND g_mhad_m.mhad003 IS NOT NULL THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_mhad_m.mhad001 != g_mhad001_t  OR g_mhad_m.mhad002 != g_mhad002_t  OR g_mhad_m.mhad003 != g_mhad003_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mhad_t WHERE "||"mhadent = '" ||g_enterprise|| "' AND "||"mhad001 = '"||g_mhad_m.mhad001 ||"' AND "|| "mhad002 = '"||g_mhad_m.mhad002 ||"' AND "|| "mhad003 = '"||g_mhad_m.mhad003 ||"'",'std-00004',0) THEN 
                     LET g_mhad_m.mhad001 = g_mhad_m_t.mhad001
                     CALL amhi204_mhad001_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            IF NOT cl_null(g_mhad_m.mhad001) THEN 
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_mhad_m.mhad001
               LET g_chkparam.arg2 = g_mhad_m.mhadsite
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_mhaa001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_mhad_m.mhad001 = g_mhad_m_t.mhad001
                  CALL amhi204_mhad001_ref()
                  NEXT FIELD CURRENT
               END IF

            END IF 
            IF NOT cl_null(g_mhad_m.mhad002) THEN 
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_mhad_m.mhad002
               LET g_chkparam.arg2 = g_mhad_m.mhad001

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_mhab002") THEN

               ELSE
                  #檢查失敗時後續處理
                  LET g_mhad_m.mhad001 = g_mhad_m_t.mhad001
                  CALL amhi204_mhad001_ref()
                  NEXT FIELD CURRENT
               END IF
            END IF
            IF NOT cl_null(g_mhad_m.mhad003) THEN 
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_mhad_m.mhad003
               LET g_chkparam.arg2 = g_mhad_m.mhad001
               LET g_chkparam.arg3 = g_mhad_m.mhad002
 
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_mhac003") THEN

               ELSE
                  #檢查失敗時後續處理
                  LET g_mhad_m.mhad001 = g_mhad_m_t.mhad001
                  CALL amhi204_mhad001_ref()
                  NEXT FIELD CURRENT
               END IF
            END IF
            CALL amhi204_mhad001_ref()
]]>
  </point>
  <point name="input.a.mhad002" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            LET g_mhad_m.mhad002_desc = null
            DISPLAY BY NAME g_mhad_m.mhad002_desc
            
            IF  NOT cl_null(g_mhad_m.mhad001) AND NOT cl_null(g_mhad_m.mhad002) AND g_mhad_m.mhad003 IS NOT NULL THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_mhad_m.mhad001 != g_mhad001_t  OR g_mhad_m.mhad002 != g_mhad002_t  OR g_mhad_m.mhad003 != g_mhad003_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mhad_t WHERE "||"mhadent = '" ||g_enterprise|| "' AND "||"mhad001 = '"||g_mhad_m.mhad001 ||"' AND "|| "mhad002 = '"||g_mhad_m.mhad002 ||"' AND "|| "mhad003 = '"||g_mhad_m.mhad003 ||"'",'std-00004',0) THEN 
                     LET g_mhad_m.mhad002 = g_mhad_m_t.mhad002
                     CALL amhi204_mhad002_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_mhad_m.mhad002) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_mhad_m.mhad002
               LET g_chkparam.arg2 = g_mhad_m.mhad001

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_mhab002") THEN

               ELSE
                  #檢查失敗時後續處理
                  LET g_mhad_m.mhad002 = g_mhad_m_t.mhad002
                  CALL amhi204_mhad002_ref()
                  NEXT FIELD CURRENT
               END IF
            END IF
            IF NOT cl_null(g_mhad_m.mhad003) THEN 
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_mhad_m.mhad003
               LET g_chkparam.arg2 = g_mhad_m.mhad001
               LET g_chkparam.arg3 = g_mhad_m.mhad002

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_mhac003") THEN

               ELSE
                  #檢查失敗時後續處理
                  LET g_mhad_m.mhad002 = g_mhad_m_t.mhad002
                  CALL amhi204_mhad002_ref()
                  NEXT FIELD CURRENT
               END IF
            END IF
            CALL amhi204_mhad002_ref()            
]]>
  </point>
  <point name="input.a.mhad003" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            LET g_mhad_m.mhad003_desc =null
            DISPLAY BY NAME g_mhad_m.mhad003_desc
            IF  NOT cl_null(g_mhad_m.mhad001) AND NOT cl_null(g_mhad_m.mhad002) AND g_mhad_m.mhad003 IS NOT NULL THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_mhad_m.mhad001 != g_mhad001_t  OR g_mhad_m.mhad002 != g_mhad002_t  OR g_mhad_m.mhad003 != g_mhad003_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mhad_t WHERE "||"mhadent = '" ||g_enterprise|| "' AND "||"mhad001 = '"||g_mhad_m.mhad001 ||"' AND "|| "mhad002 = '"||g_mhad_m.mhad002 ||"' AND "|| "mhad003 = '"||g_mhad_m.mhad003 ||"'",'std-00004',0) THEN 
                     LET g_mhad_m.mhad003 = g_mhad_m_t.mhad003
                     CALL amhi204_mhad003_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_mhad_m.mhad003) THEN 
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_mhad_m.mhad003
               LET g_chkparam.arg2 = g_mhad_m.mhad001
               LET g_chkparam.arg3 = g_mhad_m.mhad002

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_mhac003") THEN

               ELSE
                  #檢查失敗時後續處理
                  LET g_mhad_m.mhad003 = g_mhad_m_t.mhad003
                  CALL amhi204_mhad003_ref()
                  NEXT FIELD CURRENT
               END IF
            END IF
            IF g_mhad_m.mhad003 IS NULL THEN
               LET g_mhad_m.mhad003=' '
            END IF 
            CALL amhi204_mhad003_ref()  
]]>
  </point>
  <point name="input.a.mhadsite" order="0" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_mhad_m.mhadsite_desc = NULL
            DISPLAY BY NAME g_mhad_m.mhadsite_desc
            IF NOT cl_null(g_mhad_m.mhadsite) THEN
            IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_mhad_m.mhadsite != g_mhad_m_t.mhadsite or g_mhad_m_t.mhadsite is null )) THEN   
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_mhad_m.mhadsite
               LET g_chkparam.arg2 = '2'
               LET g_chkparam.arg3 = g_site


               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooed004") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME

               ELSE
                  #檢查失敗時後續處理
                  LET g_mhad_m.mhadsite = g_mhad_m_t.mhadsite
                  CALL amhi204_mhadsite_ref()
                  NEXT FIELD CURRENT
               END IF
               IF NOT cl_null(g_mhad_m.mhad001) THEN 
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_mhad_m.mhad001
                  LET g_chkparam.arg2 = g_mhad_m.mhadsite
                  
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_mhaa001") THEN

                  ELSE
                     #檢查失敗時後續處理
                     LET g_mhad_m.mhadsite = g_mhad_m_t.mhadsite
                     CALL amhi204_mhadsite_ref()
                     NEXT FIELD CURRENT
                  END IF

               END IF
            END IF
            end if
            CALL amhi204_mhadsite_ref() 
]]>
  </point>
  <point name="input.a.mhadunit" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_mhad_m.mhadunit_desc = NULL
            DISPLAY BY NAME g_mhad_m.mhadunit_desc
            IF NOT cl_null(g_mhad_m.mhadunit) THEN
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_mhad_m.mhadunit
               LET g_chkparam.arg2 = '2'
               LET g_chkparam.arg3 = g_site


               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooed004") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME

               ELSE
                  #檢查失敗時後續處理
                  LET g_mhad_m.mhadunit = g_mhad_m_t.mhadunit
                  CALL amhi204_mhadunit_ref()
                  NEXT FIELD CURRENT
               END IF
            END IF
            CALL amhi204_mhadunit_ref()
]]>
  </point>
  <point name="input.a.page1.mhad004" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_mhad_m.mhad001 IS NOT NULL AND g_mhad_m.mhad002 IS NOT NULL AND g_mhad_m.mhad003 IS NOT NULL AND g_mhad_d[g_detail_idx].mhad004 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mhad_m.mhad001 != g_mhad001_t OR g_mhad_m.mhad002 != g_mhad002_t OR g_mhad_m.mhad003 != g_mhad003_t OR g_mhad_d[g_detail_idx].mhad004 != g_mhad_d_t.mhad004)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mhad_t WHERE "||"mhadent = '" ||g_enterprise|| "' AND "||"mhad001 = '"||g_mhad_m.mhad001 ||"' AND "|| "mhad002 = '"||g_mhad_m.mhad002 ||"' AND "|| "mhad003 = '"||g_mhad_m.mhad003 ||"' AND "|| "mhad004 = '"||g_mhad_d[g_detail_idx].mhad004 ||"'",'std-00004',0) THEN 
                     LET g_mhad_d[l_ac].mhad004 = g_mhad_d_t.mhad004
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.mhad004_2" order="0" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_mhad_m.mhad001 IS NOT NULL AND g_mhad_m.mhad002 IS NOT NULL AND g_mhad_m.mhad003 IS NOT NULL AND g_mhad2_d[g_detail_idx].mhad004 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mhad_m.mhad001 != g_mhad001_t OR g_mhad_m.mhad002 != g_mhad002_t OR g_mhad_m.mhad003 != g_mhad003_t OR g_mhad2_d[g_detail_idx].mhad004 != g_mhad2_d_t.mhad004)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mhad_t WHERE "||"mhadent = '" ||g_enterprise|| "' AND "||"mhad001 = '"||g_mhad_m.mhad001 ||"' AND "|| "mhad002 = '"||g_mhad_m.mhad002 ||"' AND "|| "mhad003 = '"||g_mhad_m.mhad003 ||"' AND "|| "mhad004 = '"||g_mhad2_d[g_detail_idx].mhad004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.c.mhad001" order="0" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mhad_m.mhad001             #給予default值
            LET g_qryparam.where = "mhaasite='",g_mhad_m.mhadsite,"' "
            #給予arg

            CALL q_mhaa001()                                #呼叫開窗

            LET g_mhad_m.mhad001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mhad_m.mhad001 TO mhad001              #顯示到畫面上
            CALL amhi204_mhad001_ref()  
            NEXT FIELD mhad001                          #返回原欄位

]]>
  </point>
  <point name="input.c.mhad002" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mhad_m.mhad002             #給予default值
            LET g_qryparam.where = "mhab001='",g_mhad_m.mhad001,"' "
            #給予arg

            CALL q_mhab002()                                #呼叫開窗

            LET g_mhad_m.mhad002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mhad_m.mhad002 TO mhad002              #顯示到畫面上
            CALL amhi204_mhad002_ref() 
            NEXT FIELD mhad002                          #返回原欄位

]]>
  </point>
  <point name="input.c.mhad003" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mhad_m.mhad003             #給予default值
            LET g_qryparam.where = "mhac001='",g_mhad_m.mhad001,"' AND mhac002='",g_mhad_m.mhad002,"' "
            #給予arg

            CALL q_mhac003()                                #呼叫開窗

            LET g_mhad_m.mhad003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mhad_m.mhad003 TO mhad003              #顯示到畫面上
            CALL amhi204_mhad003_ref() 
            NEXT FIELD mhad003                          #返回原欄位

]]>
  </point>
  <point name="input.c.mhadunit" order="0" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mhad_m.mhadunit             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_site #
            LET g_qryparam.arg2 = "2" #

            CALL q_ooed004()                                #呼叫開窗

            LET g_mhad_m.mhadunit = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mhad_m.mhadunit TO mhadunit              #顯示到畫面上
            CALL amhi204_mhadunit_ref()  
            NEXT FIELD mhadunit                          #返回原欄位

]]>
  </point>
  <point name="ref_show.body.reference" order="0" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   call amhi204_mhadunit_ref()
   INITIALIZE g_ref_fields TO NULL 
   LET g_ref_fields[1] = g_mhad_m.mhad001
   LET g_ref_fields[2] = g_mhad_m.mhad002
   LET g_ref_fields[3] = g_mhad_m.mhad003
   LET g_ref_fields[4] = g_mhad_d[l_ac].mhad004
   CALL ap_ref_array2(g_ref_fields," SELECT mhadl006 FROM mhadl_t WHERE mhadlent = '"||g_enterprise||"' AND mhadl001 = ? AND mhadl002 = ? AND mhadl003 = ? AND mhadl004 = ? AND mhadl005 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_mhad_d[l_ac].mhadl006 = g_rtn_fields[1] 
   DISPLAY BY NAME g_mhad_d[l_ac].mhadl006
   
      INITIALIZE g_ref_fields TO NULL 
      LET g_ref_fields[1] = g_mhad_m.mhad001
      LET g_ref_fields[2] = g_mhad_m.mhad002
      LET g_ref_fields[3] = g_mhad_m.mhad003
      LET g_ref_fields[4] = g_mhad_d[l_ac].mhad004
      CALL ap_ref_array2(g_ref_fields," SELECT mhadl007 FROM mhadl_t WHERE mhadlent = '"||g_enterprise||"' AND mhadl001 = ? AND mhadl002 = ? AND mhadl003 = ? AND mhadl004 = ? AND mhadl005 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
      LET g_mhad_d[l_ac].mhadl007 = g_rtn_fields[1] 
      DISPLAY BY NAME g_mhad_d[l_ac].mhadl007]]>
  </point>
  <point name="ref_show.body2.reference" order="0" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mhad2_d[l_ac].mhadownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_mhad2_d[l_ac].mhadownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mhad2_d[l_ac].mhadownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mhad2_d[l_ac].mhadowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mhad2_d[l_ac].mhadowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mhad2_d[l_ac].mhadowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mhad2_d[l_ac].mhadcrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_mhad2_d[l_ac].mhadcrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mhad2_d[l_ac].mhadcrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mhad2_d[l_ac].mhadcrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mhad2_d[l_ac].mhadcrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mhad2_d[l_ac].mhadcrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mhad2_d[l_ac].mhadmodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_mhad2_d[l_ac].mhadmodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mhad2_d[l_ac].mhadmodid_desc
]]>
  </point>
  <point name="ref_show.head.reference" order="0" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mhad_m.mhadsite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mhad_m.mhadsite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mhad_m.mhadsite_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mhad_m.mhad001
            CALL ap_ref_array2(g_ref_fields,"SELECT mhaal003 FROM mhaal_t WHERE mhaalent='"||g_enterprise||"' AND mhaal001=? AND mhaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mhad_m.mhad001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mhad_m.mhad001_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mhad_m.mhad001
            LET g_ref_fields[2] = g_mhad_m.mhad002
            CALL ap_ref_array2(g_ref_fields,"SELECT mhabl004 FROM mhabl_t WHERE mhablent='"||g_enterprise||"' AND mhabl001=? AND mhabl002=? AND mhabl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mhad_m.mhad002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mhad_m.mhad002_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mhad_m.mhad001
            LET g_ref_fields[2] = g_mhad_m.mhad002
            LET g_ref_fields[3] = g_mhad_m.mhad003
            CALL ap_ref_array2(g_ref_fields,"SELECT mhacl005 FROM mhacl_t WHERE mhaclent='"||g_enterprise||"' AND mhacl001=? AND mhacl002=? AND mhacl003=? AND mhacl004='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mhad_m.mhad003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mhad_m.mhad003_desc
]]>
  </point>
  <point name="function.amhi204_mhadunit_ref" order="1" ver="1" cite_std="" cite_ver="" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#display mhadunit
PRIVATE FUNCTION amhi204_mhadunit_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mhad_d[l_ac].mhadunit
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mhad_d[l_ac].mhadunit_desc = '', g_rtn_fields[1] , ''
   DISPLAY  g_mhad_d[l_ac].mhadunit_desc to s_detail1[l_ac].mhadunit_desc
END FUNCTION]]>
  </point>
  <point name="function.amhi204_mhadsite_ref" order="2" ver="1" cite_std="N" cite_ver="" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#display mhadsite
PRIVATE FUNCTION amhi204_mhadsite_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mhad_m.mhadsite
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mhad_m.mhadsite_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mhad_m.mhadsite_desc
END FUNCTION]]>
  </point>
  <point name="function.amhi204_mhad001_ref" order="3" ver="1" cite_std="N" cite_ver="" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#display mhad001
PRIVATE FUNCTION amhi204_mhad001_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mhad_m.mhad001
   CALL ap_ref_array2(g_ref_fields,"SELECT mhaal003 FROM mhaal_t WHERE mhaalent='"||g_enterprise||"' AND mhaal001=? AND mhaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mhad_m.mhad001_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mhad_m.mhad001_desc
END FUNCTION]]>
  </point>
  <point name="function.amhi204_mhad003_ref" order="4" ver="1" cite_std="N" cite_ver="" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#display mhad003
PRIVATE FUNCTION amhi204_mhad003_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mhad_m.mhad001
   LET g_ref_fields[2] = g_mhad_m.mhad002
   LET g_ref_fields[3] = g_mhad_m.mhad003
   CALL ap_ref_array2(g_ref_fields,"SELECT mhacl005 FROM mhacl_t WHERE mhaclent='"||g_enterprise||"' AND mhacl001=? AND mhacl002=? AND mhacl003=? AND mhacl004='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mhad_m.mhad003_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mhad_m.mhad003_desc
END FUNCTION]]>
  </point>
  <point name="function.amhi204_mhad002_ref" order="5" ver="1" cite_std="N" cite_ver="" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#display mhad002
PRIVATE FUNCTION amhi204_mhad002_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mhad_m.mhad001
   LET g_ref_fields[2] = g_mhad_m.mhad002
   CALL ap_ref_array2(g_ref_fields,"SELECT mhabl004 FROM mhabl_t WHERE mhablent='"||g_enterprise||"' AND mhabl001=? AND mhabl002=? AND mhabl003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mhad_m.mhad002_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mhad_m.mhad002_desc
END FUNCTION]]>
  </point>
  <point name="function.amhi204_sum" order="6" ver="1" cite_std="" cite_ver="" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#求和
PRIVATE FUNCTION amhi204_sum()
   DEFINE l_mhad005   LIKE mhad_t.mhad005
   DEFINE l_mhad006   LIKE mhad_t.mhad006
   DEFINE l_mhad007   LIKE mhad_t.mhad007
   DEFINE l_success   LIKE type_t.num5
   DEFINE l_mhab007   LIKE mhab_t.mhab007
   DEFINE l_mhab006   LIKE mhab_t.mhab006
   DEFINE l_mhaa005   LIKE mhaa_t.mhaa005
   DEFINE l_mhaa006   LIKE mhaa_t.mhaa006
   DEFINE l_sql       STRING
   
   LET l_mhad005=0
   LET l_mhad006=0
   LET l_mhad007=0
   let l_mhab006=0
   let l_mhab007=0
   let l_mhaa005 = 0
   let l_mhaa006 = 0
   LET l_success = true
   let g_errno = null
   IF NOT cl_null(g_mhad_m.mhad003) THEN
      SELECT SUM(mhad005),sum(mhad006),sum(mhad007) INTO l_mhad005,l_mhad006,l_mhad007
        FROM mhad_t
       WHERE mhad001 = g_mhad_m.mhad001 AND  mhad002 = g_mhad_m.mhad002 AND mhad003 = g_mhad_m.mhad003
         AND mhadent = g_enterprise AND mhadstus='Y' 
      LET l_sql = "SELECT mhacunit,'',mhacsite,'',mhac001,mhac002,mhac003 FROM mhac_t WHERE mhacent= ? AND mhac001=? AND mhac002=? AND mhac003=? FOR UPDATE NOWAIT "
      LET l_sql = cl_sql_forupd(l_sql)
      DECLARE amhi204_mhac_cl CURSOR FROM l_sql
      OPEN amhi204_mhac_cl USING g_enterprise,g_mhad_m.mhad001,g_mhad_m.mhad002,g_mhad_m.mhad003
      IF STATUS THEN
         LET g_errno=status
         LET l_success = FALSE
         CLOSE amhi204_mhac_cl
         RETURN l_success
      END IF
      UPDATE mhac_t SET mhac004=l_mhad005,
                     mhac005=l_mhad006,
                     mhac006=l_mhad007
       WHERE mhac001 = g_mhad_m.mhad001 AND  mhac002 = g_mhad_m.mhad002 AND mhac003 = g_mhad_m.mhad003
         AND mhacent=g_enterprise
      IF SQLCA.sqlcode THEN
         let g_errno=SQLCA.sqlcode
         LET l_success = false
         RETURN l_success
      END IF
      CLOSE amhi204_mhac_cl      
   END IF      
   LET l_mhad005=0
   LET l_mhad006=0
   LET l_mhad007=0
   IF NOT cl_null(g_mhad_m.mhad002) THEN
      SELECT SUM(mhad005),sum(mhad006),sum(mhad007) INTO l_mhad005,l_mhad006,l_mhad007
        FROM mhad_t
       WHERE mhad001 = g_mhad_m.mhad001 AND  mhad002 = g_mhad_m.mhad002
         AND mhadent = g_enterprise AND mhadstus='Y'
      SELECT mhab006,mhab007 INTO l_mhab006,l_mhab007 FROM mhab_t
       WHERE mhab001 =  g_mhad_m.mhad001 AND mhab002 = g_mhad_m.mhad002
         AND mhabent = g_enterprise
      IF l_mhab006 < l_mhad005 THEN
         LET g_errno="amh-00009"
         LET l_success = FALSE
         RETURN l_success
      END IF
      IF l_mhab007 < l_mhad006 THEN
         LET g_errno="amh-00010"
         LET l_success = FALSE
         RETURN l_success
      END IF
      LET l_sql = "SELECT mhabunit,mhabsite,mhab001,mhab002 FROM mhab_t WHERE mhabent= ? AND mhab001=? AND mhab002=? FOR UPDATE NOWAIT "
      LET l_sql = cl_sql_forupd(l_sql)
      DECLARE amhi204_mhab_cl CURSOR FROM l_sql
      OPEN amhi204_mhab_cl USING g_enterprise,g_mhad_m.mhad001,g_mhad_m.mhad002
      IF STATUS THEN
         LET g_errno=status
         LET l_success = FALSE
         CLOSE amhi204_mhab_cl
         RETURN l_success
      END IF      
      UPDATE mhab_t SET mhab003=l_mhad005,
                     mhab004=l_mhad006,
                     mhab005=l_mhad007
       WHERE mhab001 = g_mhad_m.mhad001 AND  mhab002 = g_mhad_m.mhad002 
         AND mhabent=g_enterprise
      IF sqlca.sqlcode THEN
         let g_errno=SQLCA.sqlcode
         LET l_success = false
         RETURN l_success
      END IF
      CLOSE amhi204_mhab_cl      
   END IF
   LET l_mhad005=0
   LET l_mhad006=0
   LET l_mhad007=0
   IF NOT cl_null(g_mhad_m.mhad001) THEN
      SELECT SUM(mhad005),sum(mhad006),sum(mhad007) INTO l_mhad005,l_mhad006,l_mhad007
        FROM mhad_t
       WHERE mhad001 = g_mhad_m.mhad001
         AND mhadent = g_enterprise AND mhadstus='Y'
      SELECT mhaa005,mhaa006 INTO l_mhaa005,l_mhaa006 FROM mhaa_t
       WHERE mhaa001 =  g_mhad_m.mhad001
         AND mhaaent = g_enterprise
      IF l_mhaa005 < l_mhad005 THEN
         LET g_errno="amh-00011"
         LET l_success = FALSE
         RETURN l_success
      END IF
      IF l_mhaa006 < l_mhad006 THEN
         LET g_errno="amh-00012"
         LET l_success = FALSE
         RETURN l_success
      END IF
      LET l_sql = "SELECT mhaaunit,mhaasite,mhaa001 FROM mhaa_t WHERE mhaaent= ? AND mhaa001=? FOR UPDATE NOWAIT "
      LET l_sql = cl_sql_forupd(l_sql)
      DECLARE amhi204_mhaa_cl CURSOR FROM l_sql
      OPEN amhi204_mhaa_cl USING g_enterprise,g_mhad_m.mhad001
      IF STATUS THEN
         LET g_errno=status
         LET l_success = FALSE
         CLOSE amhi204_mhaa_cl
         RETURN l_success
      END IF
     
      UPDATE mhaa_t SET mhaa002=l_mhad005,
                        mhaa003=l_mhad006,
                        mhaa004=l_mhad007
       WHERE mhaa001 = g_mhad_m.mhad001
         AND mhaaent=g_enterprise
      IF sqlca.sqlcode THEN
         let g_errno=SQLCA.sqlcode
         LET l_success = false
         RETURN l_success
      END IF
      CLOSE amhi204_mhaa_cl      
   END IF
   RETURN l_success
END FUNCTION]]>
  </point>
  <point name="function.amhi204_count_mhad005" order="7" ver="1" cite_std="N" cite_ver="" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#计算建筑面积
PRIVATE FUNCTION amhi204_count_mhad005()
   DEFINE  l_mhab008  LIKE mhab_t.mhab008
   define  l_mhab009  like mhab_t.mhab009
   
   SELECT mhab008,mhab009 INTO l_mhab008,l_mhab009 FROM mhab_t
    WHERE mhabent= g_enterprise AND mhab001 = g_mhad_m.mhad001
      AND mhab002 = g_mhad_m.mhad002
      
   IF cl_null(l_mhab008) THEN
      LET l_mhab008 = 0
   END IF 
   IF cl_null(l_mhab009) THEN
      LET l_mhab009 = 0
   END IF 
   LET g_mhad_d[l_ac].mhad005 = g_mhad_d[l_ac].mhad006*(1+l_mhab008/100)
   let g_mhad_d[l_ac].mhad007 = g_mhad_d[l_ac].mhad006*l_mhab009
   DISPLAY  g_mhad_d[l_ac].mhad005 TO s_detail1[l_ac].mhad005
   DISPLAY  g_mhad_d[l_ac].mhad006 TO s_detail1[l_ac].mhad006
END FUNCTION]]>
  </point>
  <point name="function.amhi204_count_mhad007" order="8" ver="1" cite_std="N" cite_ver="" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#计算建筑面积，测量面积
PRIVATE FUNCTION amhi204_count_mhad007()
   DEFINE  l_mhab008  LIKE mhab_t.mhab008
   define  l_mhab009  like mhab_t.mhab009
   
   SELECT mhab008,mhab009 INTO l_mhab008,l_mhab009 FROM mhab_t
    WHERE mhabent= g_enterprise AND mhab001 = g_mhad_m.mhad001
      AND mhab002 = g_mhad_m.mhad002
      
   IF cl_null(l_mhab008) THEN
      LET l_mhab008 = 0
   END IF 
   IF cl_null(l_mhab009) THEN
      LET l_mhab009 = 0
   END IF
   let g_mhad_d[l_ac].mhad006 = g_mhad_d[l_ac].mhad007/l_mhab009   
   LET g_mhad_d[l_ac].mhad005 = g_mhad_d[l_ac].mhad006*(1+l_mhab008/100)
   
   DISPLAY  g_mhad_d[l_ac].mhad005 TO s_detail1[l_ac].mhad005
   DISPLAY  g_mhad_d[l_ac].mhad006 TO s_detail1[l_ac].mhad006
END FUNCTION]]>
  </point>
  <point name="function.amhi204_chk_mhad006" order="9" ver="1" cite_std="" cite_ver="" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#chk mhad006
PRIVATE FUNCTION amhi204_chk_mhad006()
   DEFINE l_mhad005   LIKE mhad_t.mhad005
   DEFINE l_mhad006   LIKE mhad_t.mhad006
   DEFINE l_mhad007   LIKE mhad_t.mhad007
   DEFINE l_success   LIKE type_t.num5
   define l_mhab007   like mhab_t.mhab007
   define l_mhab006   like mhab_t.mhab006
   define l_mhaa005   like mhaa_t.mhaa005
   define l_mhaa006   like mhaa_t.mhaa006
   
   LET l_mhad005=0
   LET l_mhad006=0
   LET l_mhad007=0
   let l_mhab006=0
   let l_mhab007=0
   let l_mhaa005 = 0
   let l_mhaa006 = 0
   LET l_success = true
   let g_errno = null
         
   LET l_mhad005=0
   LET l_mhad006=0
   LET l_mhad007=0
   IF NOT cl_null(g_mhad_m.mhad002) THEN
      if not cl_null(g_mhad_d_t.mhad004) then
         SELECT SUM(mhad005),sum(mhad006),sum(mhad007) INTO l_mhad005,l_mhad006,l_mhad007
           FROM mhad_t
          WHERE mhad001 = g_mhad_m.mhad001 AND  mhad002 = g_mhad_m.mhad002
            AND mhadent = g_enterprise and mhad004<> g_mhad_d_t.mhad004 and mhadstus='Y'
      else
         SELECT SUM(mhad005),sum(mhad006),sum(mhad007) INTO l_mhad005,l_mhad006,l_mhad007
           FROM mhad_t
          WHERE mhad001 = g_mhad_m.mhad001 AND  mhad002 = g_mhad_m.mhad002
            AND mhadent = g_enterprise AND mhadstus='Y'
      end if
      if cl_null(l_mhad005) then
         LET l_mhad005=0
      end if
      if cl_null(l_mhad006) then
         LET l_mhad006=0
      end if
      if cl_null(l_mhad007) then
         LET l_mhad007=0
      end if
      let l_mhad005=l_mhad005+g_mhad_d[l_ac].mhad005
      let l_mhad006=l_mhad006+g_mhad_d[l_ac].mhad006
      let l_mhad007=l_mhad007+g_mhad_d[l_ac].mhad007      
      SELECT mhab006,mhab007 INTO l_mhab006,l_mhab007 FROM mhab_t
       WHERE mhab001 =  g_mhad_m.mhad001 AND mhab002 = g_mhad_m.mhad002
         AND mhabent = g_enterprise 
      if not cl_null(l_mhab006) then
        
         IF l_mhab006 < l_mhad005 THEN
            LET g_errno="amh-00009"
            LET l_success = FALSE
            RETURN l_success
         END IF
      end if
      if not cl_null(l_mhab007) then      
         IF l_mhab007 < l_mhad006 THEN
            LET g_errno="amh-00010"
            LET l_success = FALSE
            RETURN l_success
         END IF  
      end if    
   END IF
   LET l_mhad005=0
   LET l_mhad006=0
   LET l_mhad007=0
   IF NOT cl_null(g_mhad_m.mhad001) THEN
      IF NOT cl_null(g_mhad_d_t.mhad004) THEN
         SELECT SUM(mhad005),sum(mhad006),sum(mhad007) INTO l_mhad005,l_mhad006,l_mhad007
           FROM mhad_t
          WHERE mhad001 = g_mhad_m.mhad001 AND mhad004<> g_mhad_d_t.mhad004
            AND mhadent = g_enterprise AND mhadstus='Y'  
      ELSE 
         SELECT SUM(mhad005),sum(mhad006),sum(mhad007) INTO l_mhad005,l_mhad006,l_mhad007
           FROM mhad_t
          WHERE mhad001 = g_mhad_m.mhad001
            AND mhadent = g_enterprise and mhadstus='Y'
      END IF 
      if cl_null(l_mhad005) then
         LET l_mhad005=0
      end if  
      if cl_null(l_mhad006) then
         LET l_mhad006=0
      end if
      if cl_null(l_mhad007) then
         LET l_mhad007=0
      end if      
      let l_mhad005=l_mhad005+g_mhad_d[l_ac].mhad005
      let l_mhad006=l_mhad006+g_mhad_d[l_ac].mhad006
      let l_mhad007=l_mhad007+g_mhad_d[l_ac].mhad007
      
      SELECT mhaa005,mhaa006 INTO l_mhaa005,l_mhaa006 FROM mhaa_t
       WHERE mhaa001 =  g_mhad_m.mhad001
         AND mhaaent = g_enterprise
      if not cl_null(l_mhaa005) then         
         IF l_mhaa005 < l_mhad005 THEN
            LET g_errno="amh-00011"
            LET l_success = FALSE
            RETURN l_success
         END IF
      end if
      if not cl_null(l_mhaa006) then      
         IF l_mhaa006 < l_mhad006 THEN
            LET g_errno="amh-00012"
            LET l_success = FALSE
            RETURN l_success
         END IF 
      end if         
   END IF
   RETURN l_success
END FUNCTION]]>
  </point>
  <point name="function.amhi204_chk_sum" order="10" ver="1" cite_std="" cite_ver="" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#chk sum
PRIVATE FUNCTION amhi204_chk_sum()
   DEFINE l_mhad005   LIKE mhad_t.mhad005
   DEFINE l_mhad006   LIKE mhad_t.mhad006
   DEFINE l_mhad007   LIKE mhad_t.mhad007
   DEFINE l_success   LIKE type_t.num5
   define l_mhab007   like mhab_t.mhab007
   define l_mhab006   like mhab_t.mhab006
   define l_mhaa005   like mhaa_t.mhaa005
   define l_mhaa006   like mhaa_t.mhaa006
   
   LET l_mhad005=0
   LET l_mhad006=0
   LET l_mhad007=0
   let l_mhab006=0
   let l_mhab007=0
   let l_mhaa005 = 0
   let l_mhaa006 = 0
   LET l_success = true
   let g_errno = null
         
   LET l_mhad005=0
   LET l_mhad006=0
   LET l_mhad007=0
   IF NOT cl_null(g_mhad_m.mhad002) THEN
      SELECT SUM(mhad005),sum(mhad006),sum(mhad007) INTO l_mhad005,l_mhad006,l_mhad007
        FROM mhad_t
       WHERE mhad001 = g_mhad001_t AND  mhad002 = g_mhad002_t
         AND mhadent = g_enterprise AND mhadstus='Y'
      
      SELECT mhab006,mhab007 INTO l_mhab006,l_mhab007 FROM mhab_t
       WHERE mhab001 =  g_mhad_m.mhad001 AND mhab002 = g_mhad_m.mhad002
         AND mhabent = g_enterprise
      IF l_mhab006 < l_mhad005 THEN
         LET g_errno="amh-00009"
         LET l_success = FALSE
         RETURN l_success
      END IF
      IF l_mhab007 < l_mhad006 THEN
         LET g_errno="amh-00010"
         LET l_success = FALSE
         RETURN l_success
      END IF  
   END IF
   LET l_mhad005=0
   LET l_mhad006=0
   LET l_mhad007=0
   IF NOT cl_null(g_mhad_m.mhad001) THEN
 
      SELECT SUM(mhad005),sum(mhad006),sum(mhad007) INTO l_mhad005,l_mhad006,l_mhad007
        FROM mhad_t
       WHERE mhad001 = g_mhad001_t
         AND mhadent = g_enterprise AND mhadstus='Y'
      
      SELECT mhaa005,mhaa006 INTO l_mhaa005,l_mhaa006 FROM mhaa_t
       WHERE mhaa001 =  g_mhad_m.mhad001
         AND mhaaent = g_enterprise
      IF l_mhaa005 < l_mhad005 THEN
         LET g_errno="amh-00011"
         LET l_success = FALSE
         RETURN l_success
      END IF
      IF l_mhaa006 < l_mhad006 THEN
         LET g_errno="amh-00012"
         LET l_success = FALSE
         RETURN l_success
      END IF   
   END IF
   RETURN l_success  
END FUNCTION]]>
  </point>
  <point name="function.amhi204_mhadstus" order="11" ver="1" cite_std="" cite_ver="" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#chk mhadstus
PRIVATE FUNCTION amhi204_mhadstus()
   DEFINE  l_cnt   like type_t.num5
   DEFINE  l_cnt1  LIKE type_t.num5
   DEFINE  l_success  LIKE type_t.num5
   DEFINE  l_errno    STRING
   DEFINE  l_mhad005 LIKE mhad_t.mhad005
   DEFINE  l_mhad006 LIKE mhad_t.mhad006
   DEFINE  l_mhad007 LIKE mhad_t.mhad007
   DEFINE  l_mhab003 LIKE mhab_t.mhab003
   DEFINE  l_mhab004 LIKE mhab_t.mhab004
   DEFINE  l_mhab005 LIKE mhab_t.mhab005
   DEFINE  l_mhab006 LIKE mhab_t.mhab006
   DEFINE  l_mhab007 LIKE mhab_t.mhab007
   LET l_cnt = 0
   LET l_cnt1 = 0
   LET l_success = TRUE
   LET l_errno = NULL
   IF g_mhad_d[l_ac].mhadstus='Y' THEN
      LET l_cnt=0
      LET l_cnt1=0
      if cl_null(g_mhad_m.mhad003) then
         SELECT count(*) INTO l_cnt FROM mhab_t WHERE mhab001=g_mhad_m.mhad001
            AND mhab002 = g_mhad_m.mhad002 AND mhabent = g_enterprise 
            AND mhabsite = g_mhad_m.mhadsite AND mhabstus='Y'
      else
         SELECT count(*) INTO l_cnt FROM mhac_t WHERE mhac001=g_mhad_m.mhad001
            AND mhac002 = g_mhad_m.mhad002 AND mhacent = g_enterprise
            and mhac003 = g_mhad_m.mhad003            
            AND mhacsite = g_mhad_m.mhadsite AND mhacstus='Y'
      end if      
      IF l_cnt<=0 THEN
         LET l_errno = "amh-00019"
         LET l_success = FALSE
         RETURN l_success,l_errno
      END IF 
       
         SELECT sum(mhad005),sum(mhad006),sum(mhad007) 
           INTO l_mhad005,l_mhad006,l_mhad007
           FROM mhad_t
          WHERE mhadent = g_enterprise AND mhad001=g_mhad_m.mhad001
            AND mhad002 = g_mhad_m.mhad002   AND mhadstus='Y' AND mhadsite=g_mhad_m.mhadsite
         SELECT sum(mhab006),sum(mhab007)
           INTO l_mhab006,l_mhab007
           FROM mhab_t
          WHERE mhab001 = g_mhad_m.mhad001 AND mhab002 = g_mhad_m.mhad002
            AND mhabstus = 'Y' AND mhabent = g_enterprise  AND mhabsite=g_mhad_m.mhadsite
            
         IF cl_null(l_mhad005) THEN
            LET l_mhad005 = 0
         END IF
         IF cl_null(l_mhad006) THEN
            LET l_mhad006 = 0
         END IF
         IF cl_null(l_mhad007) THEN
            LET l_mhad007 = 0
         END IF
         IF cl_null(l_mhab006) THEN
            LET l_mhab006 = 0
         END IF
         IF cl_null(l_mhab007) THEN
            LET l_mhab007 = 0
         END IF

         IF cl_null(g_mhad_d[l_ac].mhad005) THEN
            LET g_mhad_d[l_ac].mhad005 = 0
         END IF
         IF cl_null(g_mhad_d[l_ac].mhad006) THEN
            LET g_mhad_d[l_ac].mhad006 = 0
         END IF
         IF cl_null(g_mhad_d[l_ac].mhad007) THEN
            LET g_mhad_d[l_ac].mhad007 = 0
         END IF      
         LET l_mhad006=l_mhad006+g_mhad_d[l_ac].mhad006
         LET l_mhad007=l_mhad007+g_mhad_d[l_ac].mhad007
         LET l_mhad005=l_mhad005+g_mhad_d[l_ac].mhad005
      
         IF l_mhab006< l_mhad005 THEN
            LET l_errno = "amh-00009"
            LET l_success = FALSE
            RETURN l_success,l_errno
         END IF
         IF l_mhab007< l_mhad006 THEN
            LET l_errno = "amh-00010"
            LET l_success = FALSE
            RETURN l_success,l_errno
         END IF  
   END IF
   RETURN l_success,l_errno
END FUNCTION]]>
  </point>
  <point name="function.amhi204_update_ooef" order="12" ver="1" cite_std="" cite_ver="" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#update ooef111,ooef112,ooef113
PRIVATE FUNCTION amhi204_update_ooef()
DEFINE l_mhad005   LIKE ooef_t.ooef111
DEFINE l_mhad006   LIKE ooef_t.ooef112
DEFINE l_mhad007   LIKE ooef_t.ooef113
DEFINE l_success   LIKE type_t.num5

   LET l_success=true

   SELECT sum(mhad005),sum(mhad006),sum(mhad007)
     INTO l_mhad005,l_mhad006,l_mhad007
     FROM mhad_t
    WHERE mhadsite=g_mhad_m.mhadsite AND mhadstus='Y'
   UPDATE ooef_t SET ooef111=l_mhad005,
                     ooef112=l_mhad006,
                     ooef113=l_mhad007
    WHERE ooefent=g_enterprise AND ooef001=g_mhad_m.mhadsite
   IF SQLCA.sqlcode THEN
      CALL cl_err("mhad_t",SQLCA.sqlcode,1)
      LET l_success=false 
      RETURN l_success 
   END IF
   RETURN l_success    
END FUNCTION]]>
  </point>
  <point name="b_fill.fill" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         let g_mhad2_d[l_ac].mhad004 = g_mhad_d[l_ac].mhad004]]>
  </point>
  <point name="before_delete.define" order="" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_success  LIKE type_t.num5]]>
  </point>
  <point name="construct.c.mhadsite" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg2 = '2'
            CALL q_ooed004()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mhadsite  #顯示到畫面上

            NEXT FIELD mhadsite                     #返回原欄位]]>
  </point>
  <point name="construct.c.page1.mhadunit" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg2 = '2'
            CALL q_ooed004()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mhadunit  #顯示到畫面上

            NEXT FIELD mhadunit                     #返回原欄位

]]>
  </point>
  <point name="delete.body.b_delete" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      
      DELETE FROM mhadl_t WHERE mhadlent = g_enterprise AND mhadl001 = g_mhad_m.mhad001
                                                               AND mhadl002 = g_mhad_m.mhad002

                                                               AND mhadl003 = g_mhad_m.mhad003
      IF SQLCA.sqlcode THEN
         CALL cl_err("mhadl_t",SQLCA.sqlcode,0)
         CALL s_transaction_end('N','0')
         return
      END IF 
           ]]>
  </point>
  <point name="delete.body.b_single_delete" order="" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="delete.body.m_delete" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      IF SQLCA.sqlcode THEN
         CALL cl_err("mhad_t",SQLCA.sqlcode,0)
         CALL s_transaction_end('N','0')
      ELSE
         LET SQLCA.sqlcode = NULL
         CALL amhi204_sum() RETURNING l_success
         IF l_success=FALSE THEN
            CALL cl_err("update",g_errno,0)
            CALL s_transaction_end('N','0')
         END IF
         CALL amhi204_update_ooef() returning l_success
         IF l_success=FALSE THEN
            CALL s_transaction_end('N','0')
         END IF          
      END IF]]>
  </point>
  <point name="delete.body.m_single_delete" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF SQLCA.sqlcode THEN
      CALL cl_err("mhad_t",SQLCA.sqlcode,1)
      RETURN FALSE 
   END IF
   CALL amhi204_sum() returning l_success
   IF l_success=FALSE THEN
      CALL cl_err("update:", g_errno, 1)
      RETURN FALSE 
   END IF
   CALL amhi204_update_ooef() returning l_success
   IF l_success=FALSE THEN
      RETURN FALSE 
   END IF
   DELETE FROM mhadl_t
    WHERE mhadlent = g_enterprise AND mhadl001 = g_mhad_m.mhad001 AND
          mhadl002 = g_mhad_m.mhad002 AND
          mhadl003 = g_mhad_m.mhad003 AND
          mhadl004 = g_mhad_d_t.mhad004]]>
  </point>
  <point name="delete.define" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE  l_success       like type_t.num5
   define  l_cnt           like type_t.num5]]>
  </point>
  <point name="detail_reproduce.define" order="" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_success   like type_t.num5
   let l_success = true]]>
  </point>
  <point name="detail_reproduce.lang0.table1.a_insert" order="" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   call amhi204_sum() returning l_success
   IF l_success=false THEN
      CALL cl_err("update",g_errno,1)
      CALL s_transaction_end('N','0')
      RETURN
   END IF]]>
  </point>
  <point name="input.a.page1.mhad006" order="" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF  g_mhad_d[l_ac].mhad006 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( g_mhad_d[l_ac].mhad006 != g_mhad_d_t.mhad006 OR g_mhad_d_t.mhad006 IS null)) THEN 
                  CALL amhi204_count_mhad005()
                  CALL amhi204_chk_mhad006() RETURNING l_success
                  IF l_success=false THEN
                     CALL cl_err(g_mhad_d[l_ac].mhad006,g_errno,1)
                     let g_mhad_d[l_ac].mhad006=g_mhad_d_t.mhad006
                     CALL amhi204_count_mhad005()
                     NEXT FIELD mhad006
                  END IF
               END IF
               
            END IF]]>
  </point>
  <point name="input.a.page1.mhad007" order="" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF  g_mhad_d[l_ac].mhad007 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( g_mhad_d[l_ac].mhad007 != g_mhad_d_t.mhad007 OR g_mhad_d_t.mhad007 IS null)) THEN 
                  CALL amhi204_count_mhad007()
                  CALL amhi204_chk_mhad006() RETURNING l_success
                  IF l_success=false THEN
                     CALL cl_err(g_mhad_d[l_ac].mhad007,g_errno,1)
                     let g_mhad_d[l_ac].mhad007=g_mhad_d_t.mhad007
                     CALL amhi204_count_mhad007()
                     NEXT FIELD mhad007
                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.a.page1.mhadstus" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF  g_mhad_d[l_ac].mhadstus IS NOT NULL THEN 
               IF l_cmd='a' or ( l_cmd = 'u' AND (g_mhad_d[l_ac].mhadstus != g_mhad_d_t.mhadstus OR g_mhad_d_t.mhadstus IS NULL )) THEN 
                  
                  CALL amhi204_mhadstus()
                  RETURNING g_success,g_errno
                  IF g_success THEN

                  ELSE
                     call cl_err(g_mhad_d[l_ac].mhadstus,g_errno,1)
                     LET g_mhad_d[l_ac].mhadstus = g_mhad_d_t.mhadstus
                     NEXT FIELD mhadstus                      
                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.a.page1.mhadunit" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_mhad_d[l_ac].mhadunit_desc = NULL
            DISPLAY  g_mhad_d[l_ac].mhadunit_desc to s_detail1[l_ac].mhadunit_desc
            IF NOT cl_null(g_mhad_d[l_ac].mhadunit) THEN
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_mhad_d[l_ac].mhadunit
               LET g_chkparam.arg2 = '2'
               LET g_chkparam.arg3 = g_site


               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooed004") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME

               ELSE
                  #檢查失敗時後續處理
                  LET g_mhad_d[l_ac].mhadunit = g_mhad_d_t.mhadunit
                  CALL amhi204_mhadunit_ref()
                  NEXT FIELD CURRENT
               END IF
            END IF
            CALL amhi204_mhadunit_ref()
]]>
  </point>
  <point name="input.after_set_no_entry" order="" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="input.before_input" order="" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   let l_success = TRUE]]>
  </point>
  <point name="input.body.a_insert" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL amhi204_sum() RETURNING l_success
               IF l_success=FALSE THEN
                  CALL cl_err("update:", g_errno, 1)
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
               call amhi204_update_ooef() RETURNING l_success
               IF l_success=FALSE THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF]]>
  </point>
  <point name="input.body.after_input" order="" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#            CALL amhi204_chk_mhad006() RETURNING l_success
#            IF l_success=false THEN
#               CALL cl_err('',g_errno,1)
#               NEXT FIELD CURRENT
#            END IF]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_mhad_d[l_ac].mhadunit = g_site
            CALL amhi204_mhadunit_ref()
            if cl_null(g_mhad_m.mhad003) then
               SELECT count(*) INTO l_cnt FROM mhab_t WHERE mhab001=g_mhad_m.mhad001
                  AND mhab002 = g_mhad_m.mhad002 AND mhabent = g_enterprise 
                  AND mhabsite = g_mhad_m.mhadsite AND mhabstus='Y'
            else
               SELECT count(*) INTO l_cnt FROM mhac_t WHERE mhac001=g_mhad_m.mhad001
                  AND mhac002 = g_mhad_m.mhad002 AND mhacent = g_enterprise
                  and mhac003 = g_mhad_m.mhad003            
                  AND mhacsite = g_mhad_m.mhadsite AND mhacstus='Y'
            end if      
            IF l_cnt<=0 THEN
               LET g_mhad_d[l_ac].mhadstus = "N" 
            end if
            LET g_mhad_d_t.mhadstus=g_mhad_d[l_ac].mhadstus            ]]>
  </point>
  <point name="input.body.m_update" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF SQLCA.sqlerrd[3] = 0 OR SQLCA.sqlcode THEN
                  CALL cl_err("mhad_t","std-00009",1)
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  LET SQLCA.sqlerrd[3] =null
                  LET SQLCA.sqlcode = NULL
                  CALL amhi204_sum() RETURNING l_success
                  IF l_success=false THEN
                     IF SQLCA.sqlcode THEN
                        CALL cl_err("update",SQLCA.sqlcode,1)
                        CALL s_transaction_end('N','0')
                        RETURN
                     ELSE
                        CALL cl_err("update",g_errno,1)
                        NEXT FIELD CURRENT
                     END IF                      
                  END IF
                  call amhi204_update_ooef() RETURNING l_success
                  IF l_success=false THEN
                     IF SQLCA.sqlcode THEN
                        CALL s_transaction_end('N','0')
                        RETURN
                     ELSE
                        NEXT FIELD CURRENT
                     END IF                      
                  END IF
               END IF
               LET SQLCA.sqlerrd[3] =null
               LET SQLCA.sqlcode = NULL]]>
  </point>
  <point name="input.c.mhadsite" order="" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[          
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mhad_m.mhadsite             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_site #
            LET g_qryparam.arg2 = "2" #

            CALL q_ooed004()                                #呼叫開窗

            LET g_mhad_m.mhadsite = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mhad_m.mhadsite TO mhadsite              #顯示到畫面上
            CALL amhi204_mhadsite_ref()  
            NEXT FIELD mhadsite         ]]>
  </point>
  <point name="input.c.page1.mhadunit" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mhad_d[l_ac].mhadunit             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_site #
            LET g_qryparam.arg2 = "2" #

            CALL q_ooed004()                                #呼叫開窗

            LET g_mhad_d[l_ac].mhadunit = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mhad_d[l_ac].mhadunit TO mhadunit              #顯示到畫面上
            call amhi204_mhadunit_ref()
            NEXT FIELD mhadunit                          #返回原欄位

]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE  l_success       LIKE type_t.num5]]>
  </point>
  <point name="input.detail_input.page1.update_item" order="" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               #add-point:ON ACTION update_item
               IF NOT cl_null(g_mhad_d[l_ac].mhad004)  THEN
                  CALL n_mhadl(g_mhad_m.mhad001,g_mhad_m.mhad002,g_mhad_m.mhad003,g_mhad_d[l_ac].mhad004)
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_mhad_m.mhad001
                  LET g_ref_fields[2] = g_mhad_m.mhad002
                  LET g_ref_fields[3] = g_mhad_m.mhad003
                  LET g_ref_fields[4] = g_mhad_d[l_ac].mhad004

                  CALL ap_ref_array2(g_ref_fields," SELECT mhadl006,mhadl007 FROM mhadl_t WHERE mhadlent = '"
                      ||g_enterprise||"' AND mhadl001 = ?  AND mhadl002 = ?  AND mhadl003 = ?  AND mhadl004 = ? AND mhadl005 = '"||g_dlang||"'","") RETURNING g_rtn_fields
                  LET g_mhad_d[l_ac].mhadl006 = g_rtn_fields[1]
                  LET g_mhad_d[l_ac].mhadl007 = g_rtn_fields[2]

                  DISPLAY BY NAME g_mhad_d[l_ac].mhadl006
                  DISPLAY BY NAME g_mhad_d[l_ac].mhadl007
               END IF
            END IF]]>
  </point>
  <point name="input.head.a_insert" order="" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF g_mhad_m.mhad003 IS NULL THEN
                  LET g_mhad_m.mhad003 = ' '
               END IF]]>
  </point>
  <point name="input.head.a_update" order="" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                     CALL amhi204_sum() RETURNING l_success
                     IF l_success=FALSE THEN
                        CALL cl_err("update:", g_errno, 1)
                        CALL s_transaction_end('N','0')
                     END IF]]>
  </point>
  <point name="input.head.b_input" order="" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF l_cmd_t = 'r' THEN
            else
               CALL amhi204_set_entry(p_cmd)
               CALL amhi204_set_no_entry(p_cmd)            
            END IF]]>
  </point>
  <point name="input.head.b_update" order="" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      LET g_mhad_m.mhadsite = g_site
      CALL amhi204_mhadsite_ref()
      LET g_mhad_m_t.* = g_mhad_m.*]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="1" cite_std="N" cite_ver="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_mhad_m.mhad001_desc = ''
   DISPLAY BY NAME g_mhad_m.mhad001_desc
   LET g_mhad_m.mhad002_desc = ''
   DISPLAY BY NAME g_mhad_m.mhad002_desc
   LET g_mhad_m.mhad003_desc = ''
   DISPLAY BY NAME g_mhad_m.mhad003_desc]]>
  </point>
  <section id="amhi204.b_fill" ver="1" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION amhi204_b_fill(p_wc2)
   {<Local define>}
   DEFINE p_wc2      STRING
   {</Local define>}
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   #先清空單身變數內容
   CALL g_mhad_d.clear()
   CALL g_mhad2_d.clear()
 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
      LET g_sql = "SELECT  UNIQUE mhadstus,mhadunit,'',mhad004,'','',mhad005,mhad006,mhad007,mhad008, 
          '',mhadownid,'',mhadowndp,'',mhadcrtid,'',mhadcrtdp,'',mhadcrtdt,mhadmodid,'',mhadmoddt FROM mhad_t", 
             
                  " LEFT JOIN mhadl_t ON mhad001 = mhadl001 AND mhad002 = mhadl002 AND mhad003 = mhadl003 AND mhad004 = mhadl004 AND mhadl005 = '",g_lang,"'",
                  
                  " WHERE mhadent= ? AND mhad001=? AND mhad002=? AND mhad003=?"  
                  
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table1 CLIPPED
   END IF
   
   #add-point:b_fill段sql_after
   {<point name="b_fill.sql_after"/>}
   #end add-point
   
   #子單身的WC
   
   
   #判斷是否填充
   IF amhi204_fill_chk(1) THEN
      LET g_sql = g_sql, " ORDER BY mhad_t.mhad004"
      
      PREPARE amhi204_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR amhi204_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_mhad_m.mhad001
                                               ,g_mhad_m.mhad002
 
                                               ,g_mhad_m.mhad003
 
 
                                               
      FOREACH b_fill_cs INTO g_mhad_d[l_ac].mhadstus,g_mhad_d[l_ac].mhadunit,g_mhad_d[l_ac].mhadunit_desc, 
          g_mhad_d[l_ac].mhad004,g_mhad_d[l_ac].mhadl006,g_mhad_d[l_ac].mhadl007,g_mhad_d[l_ac].mhad005, 
          g_mhad_d[l_ac].mhad006,g_mhad_d[l_ac].mhad007,g_mhad_d[l_ac].mhad008,g_mhad2_d[l_ac].mhad004, 
          g_mhad2_d[l_ac].mhadownid,g_mhad2_d[l_ac].mhadownid_desc,g_mhad2_d[l_ac].mhadowndp,g_mhad2_d[l_ac].mhadowndp_desc, 
          g_mhad2_d[l_ac].mhadcrtid,g_mhad2_d[l_ac].mhadcrtid_desc,g_mhad2_d[l_ac].mhadcrtdp,g_mhad2_d[l_ac].mhadcrtdp_desc, 
          g_mhad2_d[l_ac].mhadcrtdt,g_mhad2_d[l_ac].mhadmodid,g_mhad2_d[l_ac].mhadmodid_desc,g_mhad2_d[l_ac].mhadmoddt 

                             ,g_mhad_d[l_ac].mhadstus,g_mhad_d[l_ac].mhadunit,g_mhad_d[l_ac].mhadunit_desc, 
                                 g_mhad_d[l_ac].mhad004,g_mhad_d[l_ac].mhadl006,g_mhad_d[l_ac].mhadl007, 
                                 g_mhad_d[l_ac].mhad005,g_mhad_d[l_ac].mhad006,g_mhad_d[l_ac].mhad007, 
                                 g_mhad_d[l_ac].mhad008,g_mhad2_d[l_ac].mhad004,g_mhad2_d[l_ac].mhadownid, 
                                 g_mhad2_d[l_ac].mhadownid_desc,g_mhad2_d[l_ac].mhadowndp,g_mhad2_d[l_ac].mhadowndp_desc, 
                                 g_mhad2_d[l_ac].mhadcrtid,g_mhad2_d[l_ac].mhadcrtid_desc,g_mhad2_d[l_ac].mhadcrtdp, 
                                 g_mhad2_d[l_ac].mhadcrtdp_desc,g_mhad2_d[l_ac].mhadcrtdt,g_mhad2_d[l_ac].mhadmodid, 
                                 g_mhad2_d[l_ac].mhadmodid_desc,g_mhad2_d[l_ac].mhadmoddt
 
 
                             
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
                           
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         #帶出公用欄位reference值
         
         
         #此段落由子樣板a12產生
      #LET g_mhad2_d[l_ac].mhadownid_desc = cl_get_username(g_mhad2_d[l_ac].mhadownid)
      #LET g_mhad2_d[l_ac].mhadowndp_desc = cl_get_deptname(g_mhad2_d[l_ac].mhadowndp)
      #LET g_mhad2_d[l_ac].mhadcrtid_desc = cl_get_username(g_mhad2_d[l_ac].mhadcrtid)
      #LET g_mhad2_d[l_ac].mhadcrtdp_desc = cl_get_deptname(g_mhad2_d[l_ac].mhadcrtdp)
      #LET g_mhad2_d[l_ac].mhadmodid_desc = cl_get_username(g_mhad2_d[l_ac].mhadmodid)
      ##LET g_mhad_d[l_ac].mhadcnfid_desc = cl_get_deptname(g_mhad_d[l_ac].mhadcnfid)
      ##LET g_mhad_d[l_ac].mhadpstid_desc = cl_get_deptname(g_mhad_d[l_ac].mhadpstid)
      
 
 
 
 
        
         #add-point:單身資料抓取
         {<point name="bfill.foreach"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      
            CALL g_mhad_d.deleteElement(g_mhad_d.getLength())
      CALL g_mhad2_d.deleteElement(g_mhad2_d.getLength())
 
   END IF
   
   #add-point:b_fill段more
   {<point name="b_fill.more"/>}
   #end add-point
   
   LET g_rec_b=l_ac-1
   DISPLAY g_rec_b TO FORMONLY.cnt  
   LET l_ac = g_cnt
   LET g_cnt = 0 
 
   FREE amhi204_pb   
   
END FUNCTION
]]>
  </section>
  <section id="amhi204.b_fill2" ver="1" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION amhi204_b_fill2(pi_idx)
   {<Local define>}
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   {</Local define>}
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
END FUNCTION
]]>
  </section>
  <section id="amhi204.before_delete" ver="1" status="" src="s">
    <![CDATA[#+ 單身db資料刪除
PRIVATE FUNCTION amhi204_before_delete()
   #add-point:before_delete段define
   {<point name="before_delete.define"/>}
   #end add-point 
   
   #add-point:單筆刪除前
   {<point name="delete.body.b_single_delete" mark="Y"/>}
   #end add-point
   
   DELETE FROM mhad_t
    WHERE mhadent = g_enterprise AND mhad001 = g_mhad_m.mhad001 AND
                              mhad002 = g_mhad_m.mhad002 AND
 
                              mhad003 = g_mhad_m.mhad003 AND
 
 
          mhad004 = g_mhad_d_t.mhad004
 
      
   #add-point:單筆刪除中
   {<point name="delete.body.m_single_delete"/>}
   #end add-point
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("mhad_t",SQLCA.sqlcode,1)
      RETURN FALSE 
   END IF
   
   #add-point:單筆刪除後
   {<point name="delete.body.a_single_delete"/>}
   #end add-point
 
   LET g_rec_b = g_rec_b-1
   DISPLAY g_rec_b TO FORMONLY.cnt
 
   RETURN TRUE
    
END FUNCTION
]]>
  </section>
  <section id="amhi204.browser_fill" ver="1" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION amhi204_browser_fill(ps_page_action)
   {<Local define>}
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   {</Local define>}
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point    
   
   CALL g_browser.clear()
 
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "mhad001"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      RETURN
   END IF
   
   IF g_wc2 <> " 1=1" OR NOT cl_null(g_wc2) THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE mhad001 ",
                      ", mhad002 ",
 
                      ", mhad003 ",
 
 
                      " FROM mhad_t ",
                      " ",
                      " LEFT JOIN mhadl_t ON mhad001 = mhadl001 AND mhad002 = mhadl002 AND mhad003 = mhadl003 AND mhad004 = mhadl004 AND mhadl005 = '",g_lang,"' ",
 
                      " WHERE mhadent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2 
 
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE mhad001 ",
                      ", mhad002 ",
 
                      ", mhad003 ",
 
 
                      " FROM mhad_t ",
                      " ",
                      " LEFT JOIN mhadl_t ON mhad001 = mhadl001 AND mhad002 = mhadl002 AND mhad003 = mhadl003 AND mhad004 = mhadl004 AND mhadl005 = '",g_lang,"' ",
                      " WHERE mhadent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED
 
   END IF 
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
 
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
   
   #若超過最大顯示筆數
   LET g_error_show = 0
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #LET g_page_action = ps_page_action          # Keep Action
   IF ps_page_action = "first" OR              
      ps_page_action = "prev"  OR
      ps_page_action = "next"  OR
      ps_page_action = "last"  THEN
      LET g_page_action = ps_page_action        #g_page_action 這個會影響 browser 下面四個button 的判斷 
   END IF
   
   CASE ps_page_action
      WHEN "F" 
         LET g_pagestart = 1
          
      WHEN "P"  
         LET g_pagestart = g_pagestart - g_max_browse
         IF g_pagestart < 1 THEN
             LET g_pagestart = 1
         END IF
          
      WHEN "N"  
         LET g_pagestart = g_pagestart + g_max_browse
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
            WHILE g_pagestart > g_browser_cnt 
               LET g_pagestart = g_pagestart - g_max_browse
            END WHILE
         END IF
      
      WHEN "L"  
         LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
         WHILE g_pagestart > g_browser_cnt 
            LET g_pagestart = g_pagestart - g_max_browse
         END WHILE
 
      OTHERWISE
         LET g_pagestart = 1
         
   END CASE
   
   #單身有輸入查詢條件且非null
   IF g_wc2 <> " 1=1" AND NOT cl_null(g_wc2) THEN 
 
      #依照mhad001,mhad002,mhad003 Browser欄位定義(取代原本bs_sql功能)
      LET l_sub_sql  = "SELECT DISTINCT mhad001,mhad002,mhad003 ",
                       " FROM mhad_t ",
 
                       " ",
                       " WHERE mhadent = '" ||g_enterprise|| "' AND ", g_wc," AND ",g_wc2
 
   ELSE
      #單身無輸入資料
      LET l_sub_sql  = "SELECT DISTINCT mhad001,mhad002,mhad003 ",
                       " FROM mhad_t ",
                       " WHERE mhadent = '" ||g_enterprise|| "' AND ", g_wc
                 
   END IF
   
   LET l_sql_rank = "SELECT mhad001,mhad002,mhad003,DENSE_RANK() OVER(ORDER BY mhad001 ",g_order,") AS RANK ", 

                    " FROM (",l_sub_sql,") "
                       
   #定義翻頁CURSOR
   LET g_sql= " SELECT mhad001,mhad002,mhad003 FROM (",l_sql_rank,") WHERE RANK>=",g_pagestart,
              " AND RANK<",g_pagestart+g_max_browse,
              " ORDER BY ",l_searchcol," ",g_order
                
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_mhad001,g_browser[g_cnt].b_mhad002,g_browser[g_cnt].b_mhad003  
          
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      
      
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point    
      
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         EXIT FOREACH
      END IF
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   IF g_browser.getLength() = 0 AND g_wc THEN
      INITIALIZE g_mhad_m.* TO NULL
      CALL g_mhad_d.clear()
      CALL g_mhad2_d.clear()
 
 
      CLEAR FORM
   END IF
   
   LET g_header_cnt = g_browser.getLength()
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="amhi204.browser_search" ver="1" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION amhi204_browser_search(p_type)
   {<Local define>}
   DEFINE p_type LIKE type_t.chr10
   {</Local define>}
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1"
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY mhad001"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL amhi204_browser_fill("F")
   CALL ui.Interface.refresh()
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="amhi204.construct" ver="1" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION amhi204_construct()
 
   {<Local define>}
   DEFINE lc_qbe_sn   LIKE type_t.num10
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   {</Local define>}
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面上相關資料
   CLEAR FORM                 
   INITIALIZE g_mhad_m.* TO NULL
   CALL g_mhad_d.clear()
   CALL g_mhad2_d.clear()
 
 
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   LET g_action_choice = ""
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段construct外
   {<point name="cs.head.before"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON mhadsite,mhad001,mhad002,mhad003
 
         BEFORE CONSTRUCT
#saki            CALL cl_qbe_init()
            #add-point:cs段more_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
        #---------------------------<  Master  >---------------------------
         #----<<mhadsite>>----
         #Ctrlp:construct.c.mhadsite
         ON ACTION controlp INFIELD mhadsite
            #add-point:ON ACTION controlp INFIELD mhadsite
            {<point name="construct.c.mhadsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mhadsite
            #add-point:BEFORE FIELD mhadsite
            {<point name="construct.b.mhadsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mhadsite
            
            #add-point:AFTER FIELD mhadsite
            {<point name="construct.a.mhadsite" />}
            #END add-point
            
 
         #----<<mhad001>>----
         #Ctrlp:construct.c.mhad001
         ON ACTION controlp INFIELD mhad001
            #add-point:ON ACTION controlp INFIELD mhad001
            {<point name="construct.c.mhad001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mhad001
            #add-point:BEFORE FIELD mhad001
            {<point name="construct.b.mhad001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mhad001
            
            #add-point:AFTER FIELD mhad001
            {<point name="construct.a.mhad001" />}
            #END add-point
            
 
         #----<<mhad002>>----
         #Ctrlp:construct.c.mhad002
         ON ACTION controlp INFIELD mhad002
            #add-point:ON ACTION controlp INFIELD mhad002
            {<point name="construct.c.mhad002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mhad002
            #add-point:BEFORE FIELD mhad002
            {<point name="construct.b.mhad002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mhad002
            
            #add-point:AFTER FIELD mhad002
            {<point name="construct.a.mhad002" />}
            #END add-point
            
 
         #----<<mhad003>>----
         #Ctrlp:construct.c.mhad003
         ON ACTION controlp INFIELD mhad003
            #add-point:ON ACTION controlp INFIELD mhad003
            {<point name="construct.c.mhad003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mhad003
            #add-point:BEFORE FIELD mhad003
            {<point name="construct.b.mhad003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mhad003
            
            #add-point:AFTER FIELD mhad003
            {<point name="construct.a.mhad003" />}
            #END add-point
            
 
 
         
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table1 ON mhadstus,mhadunit,mhad004,mhadl006,mhadl007,mhad005,mhad006,mhad007, 
          mhad008,mhadownid,mhadowndp,mhadcrtid,mhadcrtdp,mhadcrtdt,mhadmodid,mhadmoddt
           FROM s_detail1[1].mhadstus,s_detail1[1].mhadunit,s_detail1[1].mhad004,s_detail1[1].mhadl006, 
               s_detail1[1].mhadl007,s_detail1[1].mhad005,s_detail1[1].mhad006,s_detail1[1].mhad007, 
               s_detail1[1].mhad008,s_detail2[1].mhadownid,s_detail2[1].mhadowndp,s_detail2[1].mhadcrtid, 
               s_detail2[1].mhadcrtdp,s_detail2[1].mhadcrtdt,s_detail2[1].mhadmodid,s_detail2[1].mhadmoddt 

                      
         BEFORE CONSTRUCT
#saki            CALL cl_qbe_display_condition(lc_qbe_sn)
            #add-point:cs段more_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
         #單身公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<mhadownid>>----
         #ON ACTION controlp INFIELD mhadownid
         #   CALL q_common('mhad_t','mhadownid',TRUE,FALSE,g_mhad2_d[1].mhadownid) RETURNING ls_return
         #   DISPLAY ls_return TO mhadownid
         #   NEXT FIELD mhadownid  
         #
         ##----<<mhadowndp>>----
         #ON ACTION controlp INFIELD mhadowndp
         #   CALL q_common('mhad_t','mhadowndp',TRUE,FALSE,g_mhad2_d[1].mhadowndp) RETURNING ls_return
         #   DISPLAY ls_return TO mhadowndp
         #   NEXT FIELD mhadowndp
         #
         ##----<<mhadcrtid>>----
         #ON ACTION controlp INFIELD mhadcrtid
         #   CALL q_common('mhad_t','mhadcrtid',TRUE,FALSE,g_mhad2_d[1].mhadcrtid) RETURNING ls_return
         #   DISPLAY ls_return TO mhadcrtid
         #   NEXT FIELD mhadcrtid
         #
         ##----<<mhadcrtdp>>----
         #ON ACTION controlp INFIELD mhadcrtdp
         #   CALL q_common('mhad_t','mhadcrtdp',TRUE,FALSE,g_mhad2_d[1].mhadcrtdp) RETURNING ls_return
         #   DISPLAY ls_return TO mhadcrtdp
         #   NEXT FIELD mhadcrtdp
         #
         ##----<<mhadmodid>>----
         #ON ACTION controlp INFIELD mhadmodid
         #   CALL q_common('mhad_t','mhadmodid',TRUE,FALSE,g_mhad2_d[1].mhadmodid) RETURNING ls_return
         #   DISPLAY ls_return TO mhadmodid
         #   NEXT FIELD mhadmodid
         #
         ##----<<mhadcnfid>>----
         ##ON ACTION controlp INFIELD mhadcnfid
         ##   CALL q_common('mhad_t','mhadcnfid',TRUE,FALSE,g_mhad_d[1].mhadcnfid) RETURNING ls_return
         ##   DISPLAY ls_return TO mhadcnfid
         ##   NEXT FIELD mhadcnfid
         #
         ##----<<mhadpstid>>----
         ##ON ACTION controlp INFIELD mhadpstid
         ##   CALL q_common('mhad_t','mhadpstid',TRUE,FALSE,g_mhad_d[1].mhadpstid) RETURNING ls_return
         ##   DISPLAY ls_return TO mhadpstid
         ##   NEXT FIELD mhadpstid
         
         ##----<<mhadcrtdt>>----
         AFTER FIELD mhadcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mhadmoddt>>----
         AFTER FIELD mhadmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mhadcnfdt>>----
         #AFTER FIELD mhadcnfdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mhadpstdt>>----
         #AFTER FIELD mhadpstdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
           
         #單身一般欄位開窗相關處理
         #---------------------<  Detail: page1  >---------------------
         #----<<mhadstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mhadstus
            #add-point:BEFORE FIELD mhadstus
            {<point name="construct.b.page1.mhadstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mhadstus
            
            #add-point:AFTER FIELD mhadstus
            {<point name="construct.a.page1.mhadstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mhadstus
         ON ACTION controlp INFIELD mhadstus
            #add-point:ON ACTION controlp INFIELD mhadstus
            {<point name="construct.c.page1.mhadstus" />}
            #END add-point
 
         #----<<mhadunit>>----
         #Ctrlp:construct.c.page1.mhadunit
         ON ACTION controlp INFIELD mhadunit
            #add-point:ON ACTION controlp INFIELD mhadunit
            {<point name="construct.c.page1.mhadunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mhadunit
            #add-point:BEFORE FIELD mhadunit
            {<point name="construct.b.page1.mhadunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mhadunit
            
            #add-point:AFTER FIELD mhadunit
            {<point name="construct.a.page1.mhadunit" />}
            #END add-point
            
 
         #----<<mhad004>>----
         #Ctrlp:construct.c.page1.mhad004
         ON ACTION controlp INFIELD mhad004
            #add-point:ON ACTION controlp INFIELD mhad004
            {<point name="construct.c.page1.mhad004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD mhad004
            #add-point:BEFORE FIELD mhad004
            {<point name="construct.b.page1.mhad004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mhad004
            
            #add-point:AFTER FIELD mhad004
            {<point name="construct.a.page1.mhad004" />}
            #END add-point
            
 
         #----<<mhadl006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mhadl006
            #add-point:BEFORE FIELD mhadl006
            {<point name="construct.b.page1.mhadl006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mhadl006
            
            #add-point:AFTER FIELD mhadl006
            {<point name="construct.a.page1.mhadl006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mhadl006
         ON ACTION controlp INFIELD mhadl006
            #add-point:ON ACTION controlp INFIELD mhadl006
            {<point name="construct.c.page1.mhadl006" />}
            #END add-point
 
         #----<<mhadl007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mhadl007
            #add-point:BEFORE FIELD mhadl007
            {<point name="construct.b.page1.mhadl007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mhadl007
            
            #add-point:AFTER FIELD mhadl007
            {<point name="construct.a.page1.mhadl007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mhadl007
         ON ACTION controlp INFIELD mhadl007
            #add-point:ON ACTION controlp INFIELD mhadl007
            {<point name="construct.c.page1.mhadl007" />}
            #END add-point
 
         #----<<mhad005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mhad005
            #add-point:BEFORE FIELD mhad005
            {<point name="construct.b.page1.mhad005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mhad005
            
            #add-point:AFTER FIELD mhad005
            {<point name="construct.a.page1.mhad005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mhad005
         ON ACTION controlp INFIELD mhad005
            #add-point:ON ACTION controlp INFIELD mhad005
            {<point name="construct.c.page1.mhad005" />}
            #END add-point
 
         #----<<mhad006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mhad006
            #add-point:BEFORE FIELD mhad006
            {<point name="construct.b.page1.mhad006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mhad006
            
            #add-point:AFTER FIELD mhad006
            {<point name="construct.a.page1.mhad006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mhad006
         ON ACTION controlp INFIELD mhad006
            #add-point:ON ACTION controlp INFIELD mhad006
            {<point name="construct.c.page1.mhad006" />}
            #END add-point
 
         #----<<mhad007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mhad007
            #add-point:BEFORE FIELD mhad007
            {<point name="construct.b.page1.mhad007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mhad007
            
            #add-point:AFTER FIELD mhad007
            {<point name="construct.a.page1.mhad007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mhad007
         ON ACTION controlp INFIELD mhad007
            #add-point:ON ACTION controlp INFIELD mhad007
            {<point name="construct.c.page1.mhad007" />}
            #END add-point
 
         #----<<mhad008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mhad008
            #add-point:BEFORE FIELD mhad008
            {<point name="construct.b.page1.mhad008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mhad008
            
            #add-point:AFTER FIELD mhad008
            {<point name="construct.a.page1.mhad008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.mhad008
         ON ACTION controlp INFIELD mhad008
            #add-point:ON ACTION controlp INFIELD mhad008
            {<point name="construct.c.page1.mhad008" />}
            #END add-point
 
#---------------------<  Detail: page2  >---------------------
   
       
      END CONSTRUCT
  
 
  
      #add-point:cs段more_construct
      {<point name="cs.more_construct"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:ui_dialog段b_dialog
         {<point name="cs.before_dialog"/>}
         #end add-point
      
      ON ACTION qbe_select     #條件查詢
#saki         CALL cl_qbe_list() RETURNING lc_qbe_sn
#saki         CALL cl_qbe_display_condition(lc_qbe_sn)
 
      ON ACTION qbe_save       #條件儲存
#saki         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
   
   #add-point:cs段after_construct
   {<point name="cs.after_construct"/>}
   #end add-point
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   LET g_current_row = 1
 
   IF INT_FLAG THEN
      RETURN
   END IF
   
   LET g_wc_filter = ""
 
END FUNCTION
]]>
  </section>
  <section id="amhi204.default_search" ver="1" status="" src="s">
    <![CDATA[#+ 外部參數搜尋, 施工中
PRIVATE FUNCTION amhi204_default_search()
   {<Local define>}
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   {</Local define>}
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " mhad001 = '", g_argv[1], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " mhad002 = '", g_argv[02], "' AND "
   END IF
 
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " mhad003 = '", g_argv[03], "' AND "
   END IF
 
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
   ELSE
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="amhi204.delete" ver="1" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION amhi204_delete()
   {<Local define>}
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_mhad_m.mhad001 IS NULL
   OR g_mhad_m.mhad002 IS NULL
 
   OR g_mhad_m.mhad003 IS NULL
 
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
    SELECT UNIQUE mhadsite,mhad001,mhad002,mhad003
 INTO g_mhad_m.mhadsite,g_mhad_m.mhad001,g_mhad_m.mhad002,g_mhad_m.mhad003
 FROM mhad_t
 WHERE mhadent = g_enterprise AND mhad001 = g_mhad_m.mhad001 AND mhad002 = g_mhad_m.mhad002 AND mhad003 = g_mhad_m.mhad003
   
   CALL amhi204_show()
   
   CALL s_transaction_begin()
   
   
 
   OPEN amhi204_cl USING g_enterprise,g_mhad_m.mhad001
                                                       ,g_mhad_m.mhad002
 
                                                       ,g_mhad_m.mhad003
 
 
   IF STATUS THEN
      CALL cl_err("OPEN amhi204_cl:", STATUS, 1)
      CLOSE amhi204_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH amhi204_cl INTO g_mhad_m.mhadsite,g_mhad_m.mhadsite_desc,g_mhad_m.mhad001,g_mhad_m.mhad001_desc, 
       g_mhad_m.mhad002,g_mhad_m.mhad002_desc,g_mhad_m.mhad003,g_mhad_m.mhad003_desc
   
   #若資料已被他人LOCK
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_mhad_m.mhad001,SQLCA.sqlcode,0)
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #IF NOT cl_ask_delete() THEN             #確認一下
   IF cl_ask_del_master() THEN              #確認一下
      INITIALIZE g_doc.* TO NULL         
      LET g_doc.column1 = "mhad001"       
      LET g_doc.value1 = g_mhad_m.mhad001     
      CALL cl_del_doc()    
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM mhad_t WHERE mhadent = g_enterprise AND mhad001 = g_mhad_m.mhad001
                                                               AND mhad002 = g_mhad_m.mhad002
 
                                                               AND mhad003 = g_mhad_m.mhad003
 
 
                                                               
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
      
      IF SQLCA.sqlcode THEN
         CALL cl_err("mhad_t",SQLCA.sqlcode,0)
         CALL s_transaction_end('N','0')
      END IF
 
      
  
      #add-point:單身刪除後 
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
 
      
      CLEAR FORM
      CALL g_mhad_d.clear() 
      CALL g_mhad2_d.clear()       
 
 
     
      CALL amhi204_ui_browser_refresh()  
      CALL amhi204_ui_headershow()  
      CALL amhi204_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL amhi204_fetch('P')
      ELSE
         LET g_wc = " 1=1"
         LET g_wc2 = " 1=1"
         CALL amhi204_browser_fill("F")
      END IF
       
   END IF
 
   CLOSE amhi204_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_mhad_m.mhad001,'D')
    
END FUNCTION
]]>
  </section>
  <section id="amhi204.delete_b" ver="1" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION amhi204_delete_b(ps_table,ps_keys_bak,ps_page)
   {<Local define>}
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
 
   
END FUNCTION
]]>
  </section>
  <section id="amhi204.description" ver="1" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(版次:1) Build-000134
#+ 
#+ Filename...: amhi204
#+ Description: 場地基本資料維護作業
#+ Creator....: 02296(2014/01/03)
#+ Modifier...: 02296(2014/02/08)
#+ Buildtype..: 應用 i07 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="amhi204.detail_reproduce" ver="1" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION amhi204_detail_reproduce()
   {<Local define>}
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE mhad_t.*
 
 
   {</Local define>}
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE amhi204_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE amhi204_detail AS ",
                "SELECT * FROM mhad_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO amhi204_detail SELECT * FROM mhad_t 
                                         WHERE mhadent = g_enterprise AND mhad001 = g_mhad001_t
                                         AND mhad002 = g_mhad002_t
 
                                         AND mhad003 = g_mhad003_t
 
 
   
   #將key修正為調整後   
   UPDATE amhi204_detail 
      #更新key欄位
      SET mhad001 = g_mhad_m.mhad001
          , mhad002 = g_mhad_m.mhad002
 
          , mhad003 = g_mhad_m.mhad003
 
 
      #更新共用欄位
      #此段落由子樣板a13產生
       , mhadownid = g_user
       , mhadowndp = g_dept
       , mhadcrtid = g_user
       , mhadcrtdp = g_dept 
       , mhadcrtdt = ld_date
       , mhadmodid = "" 
       , mhadmoddt = "" 
      #, mhadstus = "Y"
 
 
                                       
  
   #將資料塞回原table   
   INSERT INTO mhad_t SELECT * FROM amhi204_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE amhi204_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
      #此段落由子樣板a38產生
   DROP TABLE amhi204_detail_lang
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.lang0.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE amhi204_detail_lang AS ",
                "SELECT * FROM mhadl_t "
   PREPARE repro_mhadl_t FROM ls_sql
   EXECUTE repro_mhadl_t
   FREE repro_mhadl_t
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO amhi204_detail_lang SELECT * FROM mhadl_t 
                                             WHERE mhadlent = g_enterprise AND mhadl001 = g_mhad001_t
                                             AND mhadl002 = g_mhad002_t
                                             AND mhadl003 = g_mhad003_t
 
   
   #將key修正為調整後   
   UPDATE amhi204_detail_lang 
      #更新key欄位
      SET mhadl001 = g_mhad_m.mhad001
          , mhadl002 = g_mhad_m.mhad002
          , mhadl003 = g_mhad_m.mhad003
 
  
   #將資料塞回原table   
   INSERT INTO mhadl_t SELECT * FROM amhi204_detail_lang
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.lang0.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE amhi204_detail_lang
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.lang0.table1.a_insert"/>}
   #end add-point
 
 
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_mhad001_t = g_mhad_m.mhad001
   LET g_mhad002_t = g_mhad_m.mhad002
 
   LET g_mhad003_t = g_mhad_m.mhad003
 
 
   
   DROP TABLE amhi204_detail
   
END FUNCTION
]]>
  </section>
  <section id="amhi204.fetch" ver="1" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION amhi204_fetch(p_flag)
   {<Local define>}
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   {</Local define>}
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   #add-point:fetch段動作開始前
   {<point name="fetch.before_fetch"/>}
   #end add-point    
 
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,': ' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF
            
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
            LET g_current_idx = g_jump
         END IF
 
         LET g_no_ask = FALSE  
   END CASE    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   CALL amhi204_browser_fill(p_flag)
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身筆數顯示
   DISPLAY g_detail_cnt TO FORMONLY.cnt                      #設定page 總筆數 
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數
   
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_mhad_m.mhad001 = g_browser[g_current_idx].b_mhad001
   LET g_mhad_m.mhad002 = g_browser[g_current_idx].b_mhad002
 
   LET g_mhad_m.mhad003 = g_browser[g_current_idx].b_mhad003
 
 
   
   #重讀DB,因TEMP有不被更新特性
    SELECT UNIQUE mhadsite,mhad001,mhad002,mhad003
 INTO g_mhad_m.mhadsite,g_mhad_m.mhad001,g_mhad_m.mhad002,g_mhad_m.mhad003
 FROM mhad_t
 WHERE mhadent = g_enterprise AND mhad001 = g_mhad_m.mhad001 AND mhad002 = g_mhad_m.mhad002 AND mhad003 = g_mhad_m.mhad003
   IF SQLCA.sqlcode THEN
      CALL cl_err("mhad_t",SQLCA.sqlcode,1)
      INITIALIZE g_mhad_m.* TO NULL
      RETURN
   END IF
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL amhi204_show()
 
END FUNCTION
]]>
  </section>
  <section id="amhi204.fill_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION amhi204_fill_chk(ps_idx)
   {<Local define>}
   DEFINE ps_idx        LIKE type_t.chr10
   DEFINE lst_token     base.StringTokenizer
   DEFINE ls_token      STRING
   {</Local define>}
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   
   #add-point:fill_chk段other
   {<point name="fill_chk.other"/>}
   #end add-point
   
   RETURN FALSE
 
END FUNCTION
]]>
  </section>
  <section id="amhi204.filter" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION amhi204_filter()
 
 
 
 
 
 
 
 
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
 
 
 
   
 
 
END FUNCTION
]]>
  </section>
  <section id="amhi204.filter_parser" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION amhi204_filter_parser(ps_field)
   {<Local define>}
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   {</Local define>}
 
 
 
 
END FUNCTION
]]>
  </section>
  <section id="amhi204.global" ver="1" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
{<Module define>}
 
#單頭 type 宣告
PRIVATE type type_g_mhad_m        RECORD
       mhadsite LIKE mhad_t.mhadsite, 
   mhadsite_desc LIKE type_t.chr80, 
   mhad001 LIKE mhad_t.mhad001, 
   mhad001_desc LIKE type_t.chr80, 
   mhad002 LIKE mhad_t.mhad002, 
   mhad002_desc LIKE type_t.chr80, 
   mhad003 LIKE mhad_t.mhad003, 
   mhad003_desc LIKE type_t.chr80
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_mhad_d        RECORD
       mhadstus LIKE mhad_t.mhadstus, 
   mhadunit LIKE mhad_t.mhadunit, 
   mhadunit_desc LIKE type_t.chr500, 
   mhad004 LIKE mhad_t.mhad004, 
   mhadl006 LIKE mhadl_t.mhadl006, 
   mhadl007 LIKE mhadl_t.mhadl007, 
   mhad005 LIKE mhad_t.mhad005, 
   mhad006 LIKE mhad_t.mhad006, 
   mhad007 LIKE mhad_t.mhad007, 
   mhad008 LIKE mhad_t.mhad008
       END RECORD
PRIVATE TYPE type_g_mhad2_d RECORD
       mhad004 LIKE mhad_t.mhad004, 
   mhadownid LIKE mhad_t.mhadownid, 
   mhadownid_desc LIKE type_t.chr500, 
   mhadowndp LIKE mhad_t.mhadowndp, 
   mhadowndp_desc LIKE type_t.chr500, 
   mhadcrtid LIKE mhad_t.mhadcrtid, 
   mhadcrtid_desc LIKE type_t.chr500, 
   mhadcrtdp LIKE mhad_t.mhadcrtdp, 
   mhadcrtdp_desc LIKE type_t.chr500, 
   mhadcrtdt DATETIME YEAR TO SECOND, 
   mhadmodid LIKE mhad_t.mhadmodid, 
   mhadmodid_desc LIKE type_t.chr500, 
   mhadmoddt DATETIME YEAR TO SECOND
       END RECORD
 
 
 
#無單頭append欄位定義
DEFINE g_detail_multi_table_t    RECORD
      mhadl001 LIKE mhadl_t.mhadl001,
      mhadl002 LIKE mhadl_t.mhadl002,
      mhadl003 LIKE mhadl_t.mhadl003,
      mhadl004 LIKE mhadl_t.mhadl004,
      mhadl005 LIKE mhadl_t.mhadl005,
      mhadl006 LIKE mhadl_t.mhadl006,
      mhadl007 LIKE mhadl_t.mhadl007
      END RECORD
 
#模組變數(Module Variables)
DEFINE g_mhad_m          type_g_mhad_m
DEFINE g_mhad_m_t        type_g_mhad_m
 
   DEFINE g_mhad001_t LIKE mhad_t.mhad001
DEFINE g_mhad002_t LIKE mhad_t.mhad002
DEFINE g_mhad003_t LIKE mhad_t.mhad003
 
 
DEFINE g_mhad_d          DYNAMIC ARRAY OF type_g_mhad_d
DEFINE g_mhad_d_t        type_g_mhad_d
DEFINE g_mhad2_d   DYNAMIC ARRAY OF type_g_mhad2_d
DEFINE g_mhad2_d_t type_g_mhad2_d
 
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位  
       b_statepic     LIKE type_t.chr50,
          b_mhad001 LIKE mhad_t.mhad001,
      b_mhad002 LIKE mhad_t.mhad002,
      b_mhad003 LIKE mhad_t.mhad003
       #,rank           LIKE type_t.num10
      END RECORD 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
 
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
DEFINE g_state               STRING                        
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page                    
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_aw                  STRING                        #確定當下點擊的單身
{</Module define>}
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="amhi204.init" ver="1" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION amhi204_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
  
   LET g_bfill = "Y"
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
      CALL cl_set_combo_scc('mhad008','6020') 
 
   LET g_error_show = 1
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL amhi204_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="amhi204.input" ver="1" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION amhi204_input(p_cmd)
   {<Local define>}
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   {</Local define>}
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point    
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF  
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT mhadstus,mhadunit,'',mhad004,'','',mhad005,mhad006,mhad007,mhad008,'', 
       mhadownid,'',mhadowndp,'',mhadcrtid,'',mhadcrtdp,'',mhadcrtdt,mhadmodid,'',mhadmoddt FROM mhad_t  
       WHERE mhadent=? AND mhad001=? AND mhad002=? AND mhad003=? AND mhad004=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE amhi204_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
 
 
   
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL amhi204_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL amhi204_set_no_entry(p_cmd)
   #add-point:set_no_entry後
   {<point name="input.after_set_no_entry"/>}
   #end add-point
 
   DISPLAY BY NAME g_mhad_m.mhadsite,g_mhad_m.mhad001,g_mhad_m.mhad002,g_mhad_m.mhad003
   
   LET lb_reproduce = FALSE
   
   #add-point:進入修改段前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="amhi204.input.body" ver="1" status="" src="s">
    <![CDATA[      #Page1 預設值產生於此處
      INPUT ARRAY g_mhad_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂單身ACTION
         
 
 
         ON ACTION update_item
            #add-point:ON ACTION update_item
            {<point name="input.detail_input.page1.update_item" />}
            #END add-point
 
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mhad_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL amhi204_b_fill(g_wc2) 
            IF g_rec_b != 0 THEN
               CALL fgl_set_arr_curr(l_ac)
            END IF
            #add-point:資料輸入前
            {<point name="input.body.before_input"/>}
            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN amhi204_cl USING g_enterprise,
                                               g_mhad_m.mhad001
                                               ,g_mhad_m.mhad002
 
                                               ,g_mhad_m.mhad003
 
 
                                               
               IF STATUS THEN
                  CALL cl_err("OPEN amhi204_cl:", STATUS, 1)
                  CLOSE amhi204_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            
            IF g_rec_b >= l_ac 
               AND g_mhad_d[l_ac].mhad004 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_mhad_d_t.* = g_mhad_d[l_ac].*  #BACKUP
               CALL amhi204_set_entry_b(l_cmd)
               CALL amhi204_set_no_entry_b(l_cmd)
               OPEN amhi204_bcl USING g_enterprise,g_mhad_m.mhad001,
                                                g_mhad_m.mhad002,
 
                                                g_mhad_m.mhad003,
 
 
                                                g_mhad_d_t.mhad004
 
               IF STATUS THEN
                  CALL cl_err("OPEN amhi204_bcl:", STATUS, 1)
                  LET l_lock_sw='Y'
               ELSE
                  FETCH amhi204_bcl INTO g_mhad_d[l_ac].mhadstus,g_mhad_d[l_ac].mhadunit,g_mhad_d[l_ac].mhadunit_desc, 
                      g_mhad_d[l_ac].mhad004,g_mhad_d[l_ac].mhadl006,g_mhad_d[l_ac].mhadl007,g_mhad_d[l_ac].mhad005, 
                      g_mhad_d[l_ac].mhad006,g_mhad_d[l_ac].mhad007,g_mhad_d[l_ac].mhad008,g_mhad2_d[l_ac].mhad004, 
                      g_mhad2_d[l_ac].mhadownid,g_mhad2_d[l_ac].mhadownid_desc,g_mhad2_d[l_ac].mhadowndp, 
                      g_mhad2_d[l_ac].mhadowndp_desc,g_mhad2_d[l_ac].mhadcrtid,g_mhad2_d[l_ac].mhadcrtid_desc, 
                      g_mhad2_d[l_ac].mhadcrtdp,g_mhad2_d[l_ac].mhadcrtdp_desc,g_mhad2_d[l_ac].mhadcrtdt, 
                      g_mhad2_d[l_ac].mhadmodid,g_mhad2_d[l_ac].mhadmodid_desc,g_mhad2_d[l_ac].mhadmoddt 

                  IF SQLCA.sqlcode THEN
                      CALL cl_err(g_mhad_d_t.mhad004,SQLCA.sqlcode,1)
                      LET l_lock_sw = "Y"
                  END IF
                  
                  CALL amhi204_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            LET g_detail_multi_table_t.mhadl001 = g_mhad_m.mhad001
LET g_detail_multi_table_t.mhadl002 = g_mhad_m.mhad002
LET g_detail_multi_table_t.mhadl003 = g_mhad_m.mhad003
LET g_detail_multi_table_t.mhadl004 = g_mhad_d[l_ac].mhad004
LET g_detail_multi_table_t.mhadl005 = g_dlang
LET g_detail_multi_table_t.mhadl006 = g_mhad_d[l_ac].mhadl006
LET g_detail_multi_table_t.mhadl007 = g_mhad_d[l_ac].mhadl007
 
        
         BEFORE INSERT
            
            INITIALIZE g_mhad_d_t.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mhad_d[l_ac].* TO NULL
            
            #公用欄位預設值
            #此段落由子樣板a14產生    
      LET g_mhad2_d[l_ac].mhadownid = g_user
      LET g_mhad2_d[l_ac].mhadowndp = g_dept
      LET g_mhad2_d[l_ac].mhadcrtid = g_user
      LET g_mhad2_d[l_ac].mhadcrtdp = g_dept 
      LET g_mhad2_d[l_ac].mhadcrtdt = cl_get_current()
      LET g_mhad2_d[l_ac].mhadmodid = ""
      LET g_mhad2_d[l_ac].mhadmoddt = ""
      #LET g_mhad_d[l_ac].mhadstus = ""
 
  
            
            #一般欄位預設值
                  LET g_mhad_d[l_ac].mhadstus = "Y"
      LET g_mhad_d[l_ac].mhad008 = "0"
 
 
            
            
            LET g_mhad_d_t.* = g_mhad_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL amhi204_set_entry_b(l_cmd)
            CALL amhi204_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mhad_d[li_reproduce_target].* = g_mhad_d[li_reproduce].*
               LET g_mhad2_d[li_reproduce_target].* = g_mhad2_d[li_reproduce].*
 
               LET g_mhad_d[g_mhad_d.getLength()].mhad004 = NULL
 
            END IF
            LET g_detail_multi_table_t.mhadl001 = g_mhad_m.mhad001
LET g_detail_multi_table_t.mhadl002 = g_mhad_m.mhad002
LET g_detail_multi_table_t.mhadl003 = g_mhad_m.mhad003
LET g_detail_multi_table_t.mhadl004 = g_mhad_d[l_ac].mhad004
LET g_detail_multi_table_t.mhadl005 = g_dlang
LET g_detail_multi_table_t.mhadl006 = g_mhad_d[l_ac].mhadl006
LET g_detail_multi_table_t.mhadl007 = g_mhad_d[l_ac].mhadl007
 
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM mhad_t 
             WHERE mhadent = g_enterprise AND mhad001 = g_mhad_m.mhad001
               AND mhad002 = g_mhad_m.mhad002
 
               AND mhad003 = g_mhad_m.mhad003
 
 
               AND mhad004 = g_mhad_d[l_ac].mhad004
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               #add-point:單身新增前
               {<point name="input.body.b_insert" mark="Y"/>}
               #end add-point
               INSERT INTO mhad_t
                           (mhadent,
                            mhadsite,mhad001,mhad002,mhad003,
                            mhad004
                            ,mhadstus,mhadunit,mhad005,mhad006,mhad007,mhad008,mhadownid,mhadowndp,mhadcrtid,mhadcrtdp,mhadcrtdt,mhadmodid,mhadmoddt) 
                     VALUES(g_enterprise,
                            g_mhad_m.mhadsite,g_mhad_m.mhad001,g_mhad_m.mhad002,g_mhad_m.mhad003,
                            g_mhad_d[l_ac].mhad004
                            ,g_mhad_d[l_ac].mhadstus,g_mhad_d[l_ac].mhadunit,g_mhad_d[l_ac].mhad005, 
                                g_mhad_d[l_ac].mhad006,g_mhad_d[l_ac].mhad007,g_mhad_d[l_ac].mhad008, 
                                g_mhad2_d[l_ac].mhadownid,g_mhad2_d[l_ac].mhadowndp,g_mhad2_d[l_ac].mhadcrtid, 
                                g_mhad2_d[l_ac].mhadcrtdp,g_mhad2_d[l_ac].mhadcrtdt,g_mhad2_d[l_ac].mhadmodid, 
                                g_mhad2_d[l_ac].mhadmoddt)
               #add-point:單身新增中
               {<point name="input.body.m_insert"/>}
               #end add-point
               LET p_cmd = 'u'
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_mhad_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("mhad_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #資料多語言用-增/改
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_mhad_m.mhad001 = g_detail_multi_table_t.mhadl001 AND
         g_mhad_m.mhad002 = g_detail_multi_table_t.mhadl002 AND
         g_mhad_m.mhad003 = g_detail_multi_table_t.mhadl003 AND
         g_mhad_d[l_ac].mhad004 = g_detail_multi_table_t.mhadl004 AND
         g_mhad_d[l_ac].mhadl006 = g_detail_multi_table_t.mhadl006 AND
         g_mhad_d[l_ac].mhadl007 = g_detail_multi_table_t.mhadl007 THEN
         ELSE 
            LET l_var_keys[01] = g_mhad_m.mhad001
            LET l_field_keys[01] = 'mhadl001'
            LET l_var_keys[02] = g_mhad_m.mhad002
            LET l_field_keys[02] = 'mhadl002'
            LET l_var_keys[03] = g_mhad_m.mhad003
            LET l_field_keys[03] = 'mhadl003'
            LET l_var_keys[04] = g_mhad_d[l_ac].mhad004
            LET l_field_keys[04] = 'mhadl004'
            LET l_var_keys[05] = g_dlang
            LET l_field_keys[05] = 'mhadl005'
            LET l_vars[01] = g_mhad_d[l_ac].mhadl006
            LET l_fields[01] = 'mhadl006'
            LET l_vars[02] = g_mhad_d[l_ac].mhadl007
            LET l_fields[02] = 'mhadl007'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'mhadlent'
            LET l_var_keys_bak[01] = g_detail_multi_table_t.mhadl001
            LET l_var_keys_bak[02] = g_detail_multi_table_t.mhadl002
            LET l_var_keys_bak[03] = g_detail_multi_table_t.mhadl003
            LET l_var_keys_bak[04] = g_detail_multi_table_t.mhadl004
            LET l_var_keys_bak[05] = g_detail_multi_table_t.mhadl005
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'mhadl_t')
         END IF 
 
               #add-point:input段-after_insert
               {<point name="input.body.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR "INSERT O.K"
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
            END IF
            
            #add-point:單身新增後
            {<point name="input.body.after_insert"/>}
            #end add-point
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_mhad_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_mhad_d.deleteElement(l_ac)
               NEXT FIELD mhad004
            END IF
            IF g_mhad_d_t.mhad004 IS NOT NULL
 
               THEN
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete"/>}
               #end add-point
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               IF amhi204_before_delete() THEN 
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE amhi204_bcl
               LET l_count = g_mhad_d.getLength()
            END IF 
            
            #add-point:單身刪除後
            {<point name="input.body.a_delete"/>}
            #end add-point
              
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body.after_delete"/>}
            #end add-point
 
         #---------------------<  Detail: page1  >---------------------
         #----<<mhadstus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mhadstus
            #add-point:BEFORE FIELD mhadstus
            {<point name="input.b.page1.mhadstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mhadstus
            
            #add-point:AFTER FIELD mhadstus
            {<point name="input.a.page1.mhadstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mhadstus
            #add-point:ON CHANGE mhadstus
            {<point name="input.g.page1.mhadstus" />}
            #END add-point
 
         #----<<mhadunit>>----
         #此段落由子樣板a02產生
         AFTER FIELD mhadunit
            
            #add-point:AFTER FIELD mhadunit
            {<point name="input.a.page1.mhadunit" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mhadunit
            #add-point:BEFORE FIELD mhadunit
            {<point name="input.b.page1.mhadunit" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mhadunit
            #add-point:ON CHANGE mhadunit
            {<point name="input.g.page1.mhadunit" />}
            #END add-point
 
         #----<<mhad004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mhad004
            #add-point:BEFORE FIELD mhad004
            {<point name="input.b.page1.mhad004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mhad004
            
            #add-point:AFTER FIELD mhad004
            {<point name="input.a.page1.mhad004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mhad004
            #add-point:ON CHANGE mhad004
            {<point name="input.g.page1.mhad004" />}
            #END add-point
 
         #----<<mhadl006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mhadl006
            #add-point:BEFORE FIELD mhadl006
            {<point name="input.b.page1.mhadl006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mhadl006
            
            #add-point:AFTER FIELD mhadl006
            {<point name="input.a.page1.mhadl006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mhadl006
            #add-point:ON CHANGE mhadl006
            {<point name="input.g.page1.mhadl006" />}
            #END add-point
 
         #----<<mhadl007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mhadl007
            #add-point:BEFORE FIELD mhadl007
            {<point name="input.b.page1.mhadl007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mhadl007
            
            #add-point:AFTER FIELD mhadl007
            {<point name="input.a.page1.mhadl007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mhadl007
            #add-point:ON CHANGE mhadl007
            {<point name="input.g.page1.mhadl007" />}
            #END add-point
 
         #----<<mhad005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mhad005
            #add-point:BEFORE FIELD mhad005
            {<point name="input.b.page1.mhad005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mhad005
            
            #add-point:AFTER FIELD mhad005
            {<point name="input.a.page1.mhad005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mhad005
            #add-point:ON CHANGE mhad005
            {<point name="input.g.page1.mhad005" />}
            #END add-point
 
         #----<<mhad006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mhad006
            #add-point:BEFORE FIELD mhad006
            {<point name="input.b.page1.mhad006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mhad006
            
            #add-point:AFTER FIELD mhad006
            {<point name="input.a.page1.mhad006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mhad006
            #add-point:ON CHANGE mhad006
            {<point name="input.g.page1.mhad006" />}
            #END add-point
 
         #----<<mhad007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mhad007
            #add-point:BEFORE FIELD mhad007
            {<point name="input.b.page1.mhad007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mhad007
            
            #add-point:AFTER FIELD mhad007
            {<point name="input.a.page1.mhad007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mhad007
            #add-point:ON CHANGE mhad007
            {<point name="input.g.page1.mhad007" />}
            #END add-point
 
         #----<<mhad008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD mhad008
            #add-point:BEFORE FIELD mhad008
            {<point name="input.b.page1.mhad008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD mhad008
            
            #add-point:AFTER FIELD mhad008
            {<point name="input.a.page1.mhad008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE mhad008
            #add-point:ON CHANGE mhad008
            {<point name="input.g.page1.mhad008" />}
            #END add-point
 
 
         #---------------------<  Detail: page1  >---------------------
         #----<<mhadstus>>----
         #Ctrlp:input.c.page1.mhadstus
         ON ACTION controlp INFIELD mhadstus
            #add-point:ON ACTION controlp INFIELD mhadstus
            {<point name="input.c.page1.mhadstus" />}
            #END add-point
 
         #----<<mhadunit>>----
         #Ctrlp:input.c.page1.mhadunit
         ON ACTION controlp INFIELD mhadunit
            #add-point:ON ACTION controlp INFIELD mhadunit
            {<point name="input.c.page1.mhadunit" />}
            #END add-point
 
         #----<<mhad004>>----
         #Ctrlp:input.c.page1.mhad004
         ON ACTION controlp INFIELD mhad004
            #add-point:ON ACTION controlp INFIELD mhad004
            {<point name="input.c.page1.mhad004" />}
            #END add-point
 
         #----<<mhadl006>>----
         #Ctrlp:input.c.page1.mhadl006
         ON ACTION controlp INFIELD mhadl006
            #add-point:ON ACTION controlp INFIELD mhadl006
            {<point name="input.c.page1.mhadl006" />}
            #END add-point
 
         #----<<mhadl007>>----
         #Ctrlp:input.c.page1.mhadl007
         ON ACTION controlp INFIELD mhadl007
            #add-point:ON ACTION controlp INFIELD mhadl007
            {<point name="input.c.page1.mhadl007" />}
            #END add-point
 
         #----<<mhad005>>----
         #Ctrlp:input.c.page1.mhad005
         ON ACTION controlp INFIELD mhad005
            #add-point:ON ACTION controlp INFIELD mhad005
            {<point name="input.c.page1.mhad005" />}
            #END add-point
 
         #----<<mhad006>>----
         #Ctrlp:input.c.page1.mhad006
         ON ACTION controlp INFIELD mhad006
            #add-point:ON ACTION controlp INFIELD mhad006
            {<point name="input.c.page1.mhad006" />}
            #END add-point
 
         #----<<mhad007>>----
         #Ctrlp:input.c.page1.mhad007
         ON ACTION controlp INFIELD mhad007
            #add-point:ON ACTION controlp INFIELD mhad007
            {<point name="input.c.page1.mhad007" />}
            #END add-point
 
         #----<<mhad008>>----
         #Ctrlp:input.c.page1.mhad008
         ON ACTION controlp INFIELD mhad008
            #add-point:ON ACTION controlp INFIELD mhad008
            {<point name="input.c.page1.mhad008" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_mhad_d[l_ac].* = g_mhad_d_t.*
               CLOSE amhi204_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_mhad_d[l_ac].mhad004,-263,1)
               LET g_mhad_d[l_ac].* = g_mhad_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               LET g_mhad2_d[l_ac].mhadmodid = g_user 
LET g_mhad2_d[l_ac].mhadmoddt = cl_get_current()
 
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
         
               UPDATE mhad_t SET (mhad001,mhad002,mhad003,mhadstus,mhadunit,mhad004,mhad005,mhad006, 
                   mhad007,mhad008,mhadownid,mhadowndp,mhadcrtid,mhadcrtdp,mhadcrtdt,mhadmodid,mhadmoddt) = (g_mhad_m.mhad001, 
                   g_mhad_m.mhad002,g_mhad_m.mhad003,g_mhad_d[l_ac].mhadstus,g_mhad_d[l_ac].mhadunit, 
                   g_mhad_d[l_ac].mhad004,g_mhad_d[l_ac].mhad005,g_mhad_d[l_ac].mhad006,g_mhad_d[l_ac].mhad007, 
                   g_mhad_d[l_ac].mhad008,g_mhad2_d[l_ac].mhadownid,g_mhad2_d[l_ac].mhadowndp,g_mhad2_d[l_ac].mhadcrtid, 
                   g_mhad2_d[l_ac].mhadcrtdp,g_mhad2_d[l_ac].mhadcrtdt,g_mhad2_d[l_ac].mhadmodid,g_mhad2_d[l_ac].mhadmoddt) 

                WHERE mhadent = g_enterprise AND mhad001 = g_mhad_m.mhad001 
                 AND mhad002 = g_mhad_m.mhad002 
 
                 AND mhad003 = g_mhad_m.mhad003 
 
 
                 AND mhad004 = g_mhad_d_t.mhad004 #項次   
 
                 
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("mhad_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   CALL cl_err("mhad_t",SQLCA.sqlcode,1)  
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mhad_m.mhad001
               LET gs_keys_bak[1] = g_mhad001_t
               LET gs_keys[2] = g_mhad_m.mhad002
               LET gs_keys_bak[2] = g_mhad002_t
               LET gs_keys[3] = g_mhad_m.mhad003
               LET gs_keys_bak[3] = g_mhad003_t
               LET gs_keys[4] = g_mhad_d[g_detail_idx].mhad004
               LET gs_keys_bak[4] = g_mhad_d_t.mhad004
               CALL amhi204_update_b('mhad_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                              INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_mhad_m.mhad001 = g_detail_multi_table_t.mhadl001 AND
         g_mhad_m.mhad002 = g_detail_multi_table_t.mhadl002 AND
         g_mhad_m.mhad003 = g_detail_multi_table_t.mhadl003 AND
         g_mhad_d[l_ac].mhad004 = g_detail_multi_table_t.mhadl004 AND
         g_mhad_d[l_ac].mhadl006 = g_detail_multi_table_t.mhadl006 AND
         g_mhad_d[l_ac].mhadl007 = g_detail_multi_table_t.mhadl007 THEN
         ELSE 
            LET l_var_keys[01] = g_mhad_m.mhad001
            LET l_field_keys[01] = 'mhadl001'
            LET l_var_keys[02] = g_mhad_m.mhad002
            LET l_field_keys[02] = 'mhadl002'
            LET l_var_keys[03] = g_mhad_m.mhad003
            LET l_field_keys[03] = 'mhadl003'
            LET l_var_keys[04] = g_mhad_d[l_ac].mhad004
            LET l_field_keys[04] = 'mhadl004'
            LET l_var_keys[05] = g_dlang
            LET l_field_keys[05] = 'mhadl005'
            LET l_vars[01] = g_mhad_d[l_ac].mhadl006
            LET l_fields[01] = 'mhadl006'
            LET l_vars[02] = g_mhad_d[l_ac].mhadl007
            LET l_fields[02] = 'mhadl007'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'mhadlent'
            LET l_var_keys_bak[01] = g_detail_multi_table_t.mhadl001
            LET l_var_keys_bak[02] = g_detail_multi_table_t.mhadl002
            LET l_var_keys_bak[03] = g_detail_multi_table_t.mhadl003
            LET l_var_keys_bak[04] = g_detail_multi_table_t.mhadl004
            LET l_var_keys_bak[05] = g_detail_multi_table_t.mhadl005
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'mhadl_t')
         END IF 
 
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
            END IF
 
         AFTER INPUT
            #若單身還沒有輸入資料, 強制切換至單身
            IF cl_null(g_mhad_d[1].mhad004) THEN
               CALL g_mhad_d.deleteElement(1)
               NEXT FIELD mhad004
            END IF
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point    
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_mhad_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_mhad_d.getLength()+1
            
      END INPUT
 
 
      
      DISPLAY ARRAY g_mhad2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
      
         BEFORE ROW
            CALL amhi204_b_fill(g_wc2) 
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = g_detail_idx
            DISPLAY g_detail_idx TO FORMONLY.idx
            CALL amhi204_ui_detailshow()
        
         BEFORE DISPLAY 
            CALL FGL_SET_ARR_CURR(g_detail_idx)      
         
         #add-point:page2自定義行為
         {<point name="input.body2.action"/>}
         #end add-point
         
      END DISPLAY
 
 
      
 
      
      #add-point:input段more_input
      {<point name="input.more_inputarray"/>}
      #end add-point    
      
      BEFORE DIALOG
         #add-point:input段before_dialog
         {<point name="input.before_dialog"/>}
         #end add-point 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD mhad001
	     ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD mhadstus
               WHEN "s_detail2"
                  NEXT FIELD mhad004_2
 
 
            END CASE
         END IF
   
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         CALL cl_set_head_visible("","AUTO")
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
   
   #add-point:input段after_input
   {<point name="input.after_input"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="amhi204.input.head" ver="1" status="" src="s">
    <![CDATA[   
      #單頭段
      INPUT BY NAME g_mhad_m.mhadsite,g_mhad_m.mhad001,g_mhad_m.mhad002,g_mhad_m.mhad003 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
         
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:單頭input前
            {<point name="input.head.b_input"/>}
            #end add-point
          
         #---------------------------<  Master  >---------------------------
         #----<<mhadsite>>----
         #此段落由子樣板a02產生
         AFTER FIELD mhadsite
            
            #add-point:AFTER FIELD mhadsite
            {<point name="input.a.mhadsite" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mhadsite
            #add-point:BEFORE FIELD mhadsite
            {<point name="input.b.mhadsite" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mhadsite
            #add-point:ON CHANGE mhadsite
            {<point name="input.g.mhadsite" />}
            #END add-point
 
         #----<<mhad001>>----
         #此段落由子樣板a02產生
         AFTER FIELD mhad001
            
            #add-point:AFTER FIELD mhad001
            {<point name="input.a.mhad001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mhad001
            #add-point:BEFORE FIELD mhad001
            {<point name="input.b.mhad001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mhad001
            #add-point:ON CHANGE mhad001
            {<point name="input.g.mhad001" />}
            #END add-point
 
         #----<<mhad002>>----
         #此段落由子樣板a02產生
         AFTER FIELD mhad002
            
            #add-point:AFTER FIELD mhad002
            {<point name="input.a.mhad002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mhad002
            #add-point:BEFORE FIELD mhad002
            {<point name="input.b.mhad002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mhad002
            #add-point:ON CHANGE mhad002
            {<point name="input.g.mhad002" />}
            #END add-point
 
         #----<<mhad003>>----
         #此段落由子樣板a02產生
         AFTER FIELD mhad003
            
            #add-point:AFTER FIELD mhad003
            {<point name="input.a.mhad003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD mhad003
            #add-point:BEFORE FIELD mhad003
            {<point name="input.b.mhad003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE mhad003
            #add-point:ON CHANGE mhad003
            {<point name="input.g.mhad003" />}
            #END add-point
 
 #欄位檢查
         #---------------------------<  Master  >---------------------------
         #----<<mhadsite>>----
         #Ctrlp:input.c.mhadsite
         ON ACTION controlp INFIELD mhadsite
            #add-point:ON ACTION controlp INFIELD mhadsite
            {<point name="input.c.mhadsite" />}
            #END add-point
 
         #----<<mhad001>>----
         #Ctrlp:input.c.mhad001
         ON ACTION controlp INFIELD mhad001
            #add-point:ON ACTION controlp INFIELD mhad001
            {<point name="input.c.mhad001" />}
            #END add-point
 
         #----<<mhad002>>----
         #Ctrlp:input.c.mhad002
         ON ACTION controlp INFIELD mhad002
            #add-point:ON ACTION controlp INFIELD mhad002
            {<point name="input.c.mhad002" />}
            #END add-point
 
         #----<<mhad003>>----
         #Ctrlp:input.c.mhad003
         ON ACTION controlp INFIELD mhad003
            #add-point:ON ACTION controlp INFIELD mhad003
            {<point name="input.c.mhad003" />}
            #END add-point
 
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            
            IF s_transaction_chk("N",0) THEN
                CALL s_transaction_begin()
            END IF
 
            #多語言處理
            
                
            CALL cl_showmsg()
            DISPLAY BY NAME g_mhad_m.mhad001             
                            ,g_mhad_m.mhad002   
 
                            ,g_mhad_m.mhad003   
 
 
 
            IF p_cmd = 'u' THEN
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
            
               UPDATE mhad_t SET (mhadsite,mhad001,mhad002,mhad003) = (g_mhad_m.mhadsite,g_mhad_m.mhad001, 
                   g_mhad_m.mhad002,g_mhad_m.mhad003)
                WHERE mhadent = g_enterprise AND mhad001 = g_mhad001_t
                  AND mhad002 = g_mhad002_t
 
                  AND mhad003 = g_mhad003_t
 
 
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("mhad_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("mhad_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                     #資料多語言用-增/改
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mhad_m.mhad001
               LET gs_keys_bak[1] = g_mhad001_t
               LET gs_keys[2] = g_mhad_m.mhad002
               LET gs_keys_bak[2] = g_mhad002_t
               LET gs_keys[3] = g_mhad_m.mhad003
               LET gs_keys_bak[3] = g_mhad003_t
               LET gs_keys[4] = g_mhad_d[g_detail_idx].mhad004
               LET gs_keys_bak[4] = g_mhad_d_t.mhad004
               CALL amhi204_update_b('mhad_t',gs_keys,gs_keys_bak,"'1'")
                     
                     LET g_mhad001_t = g_mhad_m.mhad001
                     LET g_mhad002_t = g_mhad_m.mhad002
 
                     LET g_mhad003_t = g_mhad_m.mhad003
 
 
                     #add-point:單頭修改後
                     {<point name="input.head.a_update"/>}
                     #end add-point
                     CALL s_transaction_end('Y','0')
               END CASE
            
            ELSE    
               #add-point:單頭新增
               {<point name="input.head.a_insert"/>}
               #end add-point
                                 
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL amhi204_detail_reproduce()
               END IF
            END IF
           #controlp
                     
           LET g_mhad001_t = g_mhad_m.mhad001
           LET g_mhad002_t = g_mhad_m.mhad002
 
           LET g_mhad003_t = g_mhad_m.mhad003
 
 
           
           #若單身還沒有輸入資料, 強制切換至單身
           IF cl_null(g_mhad_d[1].mhad004) THEN
              CALL g_mhad_d.deleteElement(1)
              NEXT FIELD mhad004
           END IF
 
      END INPUT
]]>
  </section>
  <section id="amhi204.insert" ver="1" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION amhi204_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   #清除相關資料
   CLEAR FORM                    
   CALL g_mhad_d.clear()
   CALL g_mhad2_d.clear()
 
 
 
   INITIALIZE g_mhad_m.* LIKE mhad_t.*             #DEFAULT 設定
   LET g_mhad001_t = NULL
   LET g_mhad002_t = NULL
 
   LET g_mhad003_t = NULL
 
 
   CALL s_transaction_begin()
   WHILE TRUE
     
      #單頭預設值
      
     
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
 
      CALL amhi204_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_mhad_m.* = g_mhad_m_t.*
         CALL amhi204_show()
         CALL cl_err('',9001,0)
         EXIT WHILE
      END IF
      
      CALL g_mhad_d.clear()
      CALL g_mhad2_d.clear()
 
 
      
      #add-point:單頭輸入後2
      {<point name="insert.after_insert2"/>}
      #end add-point
 
      LET g_rec_b = 0
      EXIT WHILE
      
   END WHILE
   
   LET g_state = "Y"
   
   LET g_mhad001_t = g_mhad_m.mhad001
   LET g_mhad002_t = g_mhad_m.mhad002
 
   LET g_mhad003_t = g_mhad_m.mhad003
 
 
   
   LET g_wc = g_wc,  
              " OR ( mhadent = '" ||g_enterprise|| "' AND ",
              " mhad001 = '", g_mhad_m.mhad001 CLIPPED, "' "
              ," AND mhad002 = '", g_mhad_m.mhad002 CLIPPED, "' "
 
              ," AND mhad003 = '", g_mhad_m.mhad003 CLIPPED, "' "
 
 
              , ") "
   
END FUNCTION
]]>
  </section>
  <section id="amhi204.insert_b" ver="1" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION amhi204_insert_b(ps_table,ps_keys,ps_page)
   {<Local define>}
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   {</Local define>}
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
 
   
END FUNCTION
]]>
  </section>
  <section id="amhi204.lock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION amhi204_lock_b(ps_table,ps_page)
   {<Local define>}
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL amhi204_b_fill()
   
 
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="amhi204.main" ver="1" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("amh","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = "SELECT mhadsite,'',mhad001,'',mhad002,'',mhad003,'' FROM mhad_t WHERE mhadent=  
       ? AND mhad001=? AND mhad002=? AND mhad003=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   DECLARE amhi204_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_amhi204 WITH FORM cl_ap_formpath("amh",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL amhi204_init()   
 
      #進入選單 Menu (="N")
      CALL amhi204_ui_dialog() 
	  
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_amhi204
      
   END IF 
   
   CLOSE amhi204_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="amhi204.modify" ver="1" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION amhi204_modify()
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_mhad_m.mhad001 IS NULL
   OR g_mhad_m.mhad002 IS NULL
 
   OR g_mhad_m.mhad003 IS NULL
 
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
    SELECT UNIQUE mhadsite,mhad001,mhad002,mhad003
 INTO g_mhad_m.mhadsite,g_mhad_m.mhad001,g_mhad_m.mhad002,g_mhad_m.mhad003
 FROM mhad_t
 WHERE mhadent = g_enterprise AND mhad001 = g_mhad_m.mhad001 AND mhad002 = g_mhad_m.mhad002 AND mhad003 = g_mhad_m.mhad003
 
   ERROR ""
  
   LET g_mhad001_t = g_mhad_m.mhad001
   LET g_mhad002_t = g_mhad_m.mhad002
 
   LET g_mhad003_t = g_mhad_m.mhad003
 
 
   CALL s_transaction_begin()
   
   OPEN amhi204_cl USING g_enterprise,g_mhad_m.mhad001
                                                       ,g_mhad_m.mhad002
 
                                                       ,g_mhad_m.mhad003
 
 
   IF STATUS THEN
      CALL cl_err("OPEN amhi204_cl:", STATUS, 1)
      CLOSE amhi204_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH amhi204_cl INTO g_mhad_m.mhadsite,g_mhad_m.mhadsite_desc,g_mhad_m.mhad001,g_mhad_m.mhad001_desc, 
       g_mhad_m.mhad002,g_mhad_m.mhad002_desc,g_mhad_m.mhad003,g_mhad_m.mhad003_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_mhad_m.mhad001,SQLCA.sqlcode,0)
      CLOSE amhi204_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   CALL s_transaction_end('Y','0')
 
   CALL amhi204_show()
   WHILE TRUE
      LET g_mhad001_t = g_mhad_m.mhad001
      LET g_mhad002_t = g_mhad_m.mhad002
 
      LET g_mhad003_t = g_mhad_m.mhad003
 
 
 
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      CALL amhi204_input("u")     #欄位更改
      
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_mhad_m.* = g_mhad_m_t.*
         CALL amhi204_show()
         CALL cl_err('',9001,0)
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更
      IF g_mhad_m.mhad001 != g_mhad001_t 
      OR g_mhad_m.mhad002 != g_mhad002_t 
 
      OR g_mhad_m.mhad003 != g_mhad003_t 
 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單頭(偽)修改前
         {<point name="modify.b_key_update" mark="Y"/>}
         #end add-point
         
         #更新單頭key值
         UPDATE mhad_t SET mhad001 = g_mhad_m.mhad001
                                       , mhad002 = g_mhad_m.mhad002
 
                                       , mhad003 = g_mhad_m.mhad003
 
 
          WHERE mhadent = g_enterprise AND mhad001 = g_mhad001_t
            AND mhad002 = g_mhad002_t
 
            AND mhad003 = g_mhad003_t
 
 
         #add-point:單頭(偽)修改中
         {<point name="modify.m_key_update"/>}
         #end add-point
         
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("mhad_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("mhad_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
 
 
         
         #add-point:單頭(偽)修改後
         {<point name="modify.a_key_update"/>}
         #end add-point
         
      END IF
      
      EXIT WHILE
      
   END WHILE
 
   #修改歷程記錄
   IF NOT cl_log_modified_record(g_mhad_m.mhad001,g_site) THEN 
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE amhi204_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_mhad_m.mhad001,'U')
 
   CALL amhi204_b_fill("1=1")
   
END FUNCTION   
]]>
  </section>
  <section id="amhi204.modify_detail_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身輸入判定
PRIVATE FUNCTION amhi204_modify_detail_chk(ps_record)
   {<Local define>}
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   {</Local define>}
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "mhadstus"
      WHEN "s_detail2"
         LET ls_return = "mhad004_2"
 
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
]]>
  </section>
  <section id="amhi204.other_function" ver="1" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="amhi204.query" ver="1" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION amhi204_query()
   {<Local define>}
   DEFINE ls_wc STRING
   {</Local define>}
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #add-point:query開始前
   {<point name="query.befroe_query"/>}
   #end add-point 
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
   
   LET ls_wc = g_wc
 
   LET INT_FLAG = 0    
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_mhad_d.clear()
   CALL g_mhad2_d.clear()
 
 
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL amhi204_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL amhi204_browser_fill(g_wc)
      CALL amhi204_fetch("")
      RETURN
   END IF
   
   LET l_ac = 1
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   LET g_error_show = 1
   CALL amhi204_browser_fill("F")
   
   #備份搜尋條件
   LET ls_wc = g_wc
   
   #第一層模糊搜尋
   IF g_browser_cnt = 0 THEN
      LET g_wc = cl_wc_parser(ls_wc)
      LET g_error_show = 1
      CALL amhi204_browser_fill("F")
   END IF
   
   #第二層助記碼搜尋
   IF g_browser_cnt = 0 THEN
 
      
      
      IF NOT cl_null(g_wc) THEN
         LET g_error_show = 1
         CALL amhi204_browser_fill("F")
      END IF
      
   END IF
   
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
      CLEAR FORM
   ELSE
      CALL amhi204_fetch("F") 
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="amhi204.ref_show" ver="1" status="" src="s">
    <![CDATA[#+ 帶出reference資料
PRIVATE FUNCTION amhi204_ref_show()
   {<Local define>}
   DEFINE l_ac_t LIKE type_t.num10 #l_ac暫存用
   {</Local define>}
   #add-point:ref_show段define
   {<point name="ref_show.define"/>}
   #end add-point
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:ref_show段m_reference
   {<point name="ref_show.head.reference"/>}
   #end add-point
 
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_mhad_d.getLength()
      #add-point:ref_show段d_reference
      {<point name="ref_show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_mhad2_d.getLength()
      #add-point:ref_show段d2_reference
      {<point name="ref_show.body2.reference"/>}
      #end add-point
   END FOR
 
 
   
   LET l_ac = l_ac_t
 
END FUNCTION
]]>
  </section>
  <section id="amhi204.reproduce" ver="1" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION amhi204_reproduce()
   {<Local define>}
   DEFINE l_newno     LIKE mhad_t.mhad001 
   DEFINE l_oldno     LIKE mhad_t.mhad001 
   DEFINE l_newno02     LIKE mhad_t.mhad002 
   DEFINE l_oldno02     LIKE mhad_t.mhad002 
 
   DEFINE l_newno03     LIKE mhad_t.mhad003 
   DEFINE l_oldno03     LIKE mhad_t.mhad003 
 
 
   DEFINE l_master    RECORD LIKE mhad_t.*
   DEFINE l_detail    RECORD LIKE mhad_t.*
 
   DEFINE l_cnt       LIKE type_t.num5
   {</Local define>}
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
 
   IF g_mhad_m.mhad001 IS NULL
      OR g_mhad_m.mhad002 IS NULL
 
      OR g_mhad_m.mhad003 IS NULL
 
 
      THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   LET g_mhad001_t = g_mhad_m.mhad001
   LET g_mhad002_t = g_mhad_m.mhad002
 
   LET g_mhad003_t = g_mhad_m.mhad003
 
 
   
   LET g_mhad_m.mhad001 = ""
   LET g_mhad_m.mhad002 = ""
 
   LET g_mhad_m.mhad003 = ""
 
 
    
   CALL amhi204_set_entry('a')
   CALL amhi204_set_no_entry('a')
   
   CALL cl_set_head_visible("","YES")
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL amhi204_input("r")
   
      LET g_mhad_m.mhad001_desc = ''
   DISPLAY BY NAME g_mhad_m.mhad001_desc
   LET g_mhad_m.mhad002_desc = ''
   DISPLAY BY NAME g_mhad_m.mhad002_desc
   LET g_mhad_m.mhad003_desc = ''
   DISPLAY BY NAME g_mhad_m.mhad003_desc
 
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
   
   LET g_state = "Y"
   
   LET g_wc = g_wc,  
              " OR (",
              " mhad001 = '", l_newno CLIPPED, "' "
              ," AND mhad002 = '", l_newno02 CLIPPED, "' "
 
              ," AND mhad003 = '", l_newno03 CLIPPED, "' "
 
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="amhi204.set_entry" ver="1" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION amhi204_set_entry(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1  
   {</Local define>}
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("mhad001,mhad002,mhad003",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="amhi204.set_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION amhi204_set_entry_b(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1   
   {</Local define>}
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="amhi204.set_no_entry" ver="1" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION amhi204_set_no_entry(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1   
   {</Local define>}
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("mhad001,mhad002,mhad003",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="amhi204.set_no_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION amhi204_set_no_entry_b(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1   
   {</Local define>}
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b段"/>}
   #end add-point 
   
END FUNCTION
]]>
  </section>
  <section id="amhi204.show" ver="1" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION amhi204_show()
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   IF g_bfill = "Y" THEN
      CALL amhi204_b_fill(g_wc2) #單身填充
      CALL amhi204_b_fill2('0') #單身填充
   END IF
   
   
 
   LET g_mhad_m_t.* = g_mhad_m.*      #保存單頭舊值
   
   DISPLAY BY NAME g_mhad_m.mhadsite,g_mhad_m.mhadsite_desc,g_mhad_m.mhad001,g_mhad_m.mhad001_desc,g_mhad_m.mhad002, 
       g_mhad_m.mhad002_desc,g_mhad_m.mhad003,g_mhad_m.mhad003_desc
   CALL amhi204_b_fill(g_wc2_table1)                 #單身
   CALL amhi204_b_fill2('0') #單身填充
 
   CALL amhi204_ref_show()
 
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()  
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point   
   
END FUNCTION
]]>
  </section>
  <section id="amhi204.state_change" ver="1" status="" src="s">
    <![CDATA[    
]]>
  </section>
  <section id="amhi204.ui_browser_refresh" ver="1" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION amhi204_ui_browser_refresh()
   {<Local define>}
   DEFINE l_i  LIKE type_t.num10
   {</Local define>}
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_mhad001 = g_mhad_m.mhad001 
         AND g_browser[l_i].b_mhad002 = g_mhad_m.mhad002 
 
         AND g_browser[l_i].b_mhad003 = g_mhad_m.mhad003 
 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="amhi204.ui_detailshow" ver="1" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION amhi204_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point  
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
 
      #add-point:ui_detailshow段more
      {<point name="ui_detailshow.more"/>}
      #end add-point 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point 
   
END FUNCTION
]]>
  </section>
  <section id="amhi204.ui_dialog" ver="1" status="" src="s">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION amhi204_ui_dialog()
   {<Local define>}
   DEFINE li_idx   LIKE type_t.num5
   {</Local define>}
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point  
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      CALL amhi204_browser_fill("")
 
      
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_mhad001 = g_mhad001_t
               AND g_browser[li_idx].b_mhad002 = g_mhad002_t
 
               AND g_browser[li_idx].b_mhad003 = g_mhad003_t
 
 
               THEN
               LET g_current_row = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
      
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
        
         DISPLAY ARRAY g_mhad_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL amhi204_ui_detailshow()
               
               #add-point:page1自定義行為
               {<point name="ui_dialog.body.before_row"/>}
               #end add-point
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               
               #控制stus哪個按鈕可以按
               
               
            
 
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_mhad2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
         
            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL amhi204_ui_detailshow()
               
               #add-point:page1自定義行為
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)      
            
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
 
 
         
         #add-point:ui_dialog段define
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL g_curr_diag.setSelectionMode("s_detail1",1)         
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LET g_current_idx = g_browser.getLength()
            END IF 
            
            IF g_current_idx = 0 AND g_browser.getLength() > 0 THEN
               LET g_current_idx = 1 
            END IF
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL amhi204_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL amhi204_ui_detailshow() #Setting the current row 
            
            #add-point:ui_dialog段before dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #ACTION表單列
         
         ON ACTION first
            CALL amhi204_fetch('F')
            LET g_current_row = g_current_idx         
          
         ON ACTION previous
            CALL amhi204_fetch('P')
            LET g_current_row = g_current_idx
          
         ON ACTION jump
            CALL amhi204_fetch('/')
            LET g_current_row = g_current_idx
        
         ON ACTION next
            CALL amhi204_fetch('N')
            LET g_current_row = g_current_idx
         
         ON ACTION last
            CALL amhi204_fetch('L')
            LET g_current_row = g_current_idx
          
         ON ACTION close
            LET INT_FLAG=FALSE        
            LET g_action_choice = "exit"
            EXIT DIALOG     
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
          
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
                CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("worksheet_detail",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("worksheet_detail",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
 
         
 
         ON ACTION delete
 
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN 
               CALL amhi204_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
            END IF
 
 
         ON ACTION insert
 
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN 
               CALL amhi204_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION modify
 
            LET g_aw = ''
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN 
               CALL amhi204_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION modify_detail
 
            LET g_aw = g_curr_diag.getCurrentItem()
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN 
               CALL amhi204_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION output
 
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN 
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION query
 
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN 
               CALL amhi204_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
            END IF
 
         
         
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
   
   CALL cl_set_act_visible("accept,cancel", TRUE)
   
END FUNCTION
]]>
  </section>
  <section id="amhi204.ui_headershow" ver="1" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION amhi204_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_mhad_m.mhad001 = g_browser[g_current_idx].b_mhad001   
   LET g_mhad_m.mhad002 = g_browser[g_current_idx].b_mhad002   
 
   LET g_mhad_m.mhad003 = g_browser[g_current_idx].b_mhad003   
 
 
    SELECT UNIQUE mhadsite,mhad001,mhad002,mhad003
 INTO g_mhad_m.mhadsite,g_mhad_m.mhad001,g_mhad_m.mhad002,g_mhad_m.mhad003
 FROM mhad_t
 WHERE mhadent = g_enterprise AND mhad001 = g_mhad_m.mhad001 AND mhad002 = g_mhad_m.mhad002 AND mhad003 = g_mhad_m.mhad003
   CALL amhi204_show()
   
END FUNCTION
]]>
  </section>
  <section id="amhi204.unlock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION amhi204_unlock_b(ps_table,ps_page)
   {<Local define>}
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
 
 
END FUNCTION
]]>
  </section>
  <section id="amhi204.update_b" ver="1" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION amhi204_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   {<Local define>}
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
 
   
 
   
END FUNCTION
]]>
  </section>
</add_points>
