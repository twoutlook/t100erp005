#該程式已解開Section, 不再透過樣板產出!
{<section id="amhi204.description" >}
#應用 a00 樣板自動產生(Version:2)
#+ Version..: T100-ERP-1.01.00(SD版次:6,PR版次:6) Build-000202
#+ 
#+ Filename...: amhi204
#+ Description: 場地基本資料維護作業
#+ Creator....: 02296(2014-01-03 17:14:42)
#+ Modifier...: 06815(2016-03-07 14:35:47) -SD/PR- 00000
 
{</section>}
 
{<section id="amhi204.global" >}
#應用 i07 樣板自動產生(Version:36)
#add-point:填寫註解說明 name="global.memo"

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_mhad_m        RECORD
       mhadsite LIKE mhad_t.mhadsite, 
   mhadsite_desc LIKE type_t.chr80, 
   mhad001 LIKE mhad_t.mhad001, 
   mhad001_desc LIKE type_t.chr80, 
   mhad002 LIKE mhad_t.mhad002, 
   mhad002_desc LIKE type_t.chr80, 
   mhad003 LIKE mhad_t.mhad003, 
   mhad003_desc LIKE type_t.chr80
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_mhad_d        RECORD
       mhadstus LIKE mhad_t.mhadstus, 
   mhadunit LIKE mhad_t.mhadunit, 
   mhadunit_desc LIKE type_t.chr500, 
   mhad004 LIKE mhad_t.mhad004, 
   mhad009 LIKE mhad_t.mhad009, 
   mhadl006 LIKE mhadl_t.mhadl006, 
   mhadl007 LIKE mhadl_t.mhadl007, 
   mhad010 LIKE mhad_t.mhad010,       #160506-00009#3 20160510 add by beckxie
   mhad010_desc LIKE type_t.chr500,   #160506-00009#3 20160510 add by beckxie
   mhad005 LIKE mhad_t.mhad005, 
   mhad006 LIKE mhad_t.mhad006, 
   mhad007 LIKE mhad_t.mhad007, 
   mhad008 LIKE mhad_t.mhad008
       END RECORD
PRIVATE TYPE type_g_mhad2_d RECORD
       mhad004 LIKE mhad_t.mhad004, 
   mhadownid LIKE mhad_t.mhadownid, 
   mhadownid_desc LIKE type_t.chr500, 
   mhadowndp LIKE mhad_t.mhadowndp, 
   mhadowndp_desc LIKE type_t.chr500, 
   mhadcrtid LIKE mhad_t.mhadcrtid, 
   mhadcrtid_desc LIKE type_t.chr500, 
   mhadcrtdp LIKE mhad_t.mhadcrtdp, 
   mhadcrtdp_desc LIKE type_t.chr500, 
   mhadcrtdt DATETIME YEAR TO SECOND, 
   mhadmodid LIKE mhad_t.mhadmodid, 
   mhadmodid_desc LIKE type_t.chr500, 
   mhadmoddt DATETIME YEAR TO SECOND
       END RECORD
 
 
#add-point:自定義模組變數(Module Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"

#end add-point
 
DEFINE g_detail_multi_table_t    RECORD
      mhadl001 LIKE mhadl_t.mhadl001,
      mhadl002 LIKE mhadl_t.mhadl002,
      mhadl003 LIKE mhadl_t.mhadl003,
      mhadl004 LIKE mhadl_t.mhadl004,
      mhadl005 LIKE mhadl_t.mhadl005,
      mhadl006 LIKE mhadl_t.mhadl006,
      mhadl007 LIKE mhadl_t.mhadl007
      END RECORD
 
#模組變數(Module Variables)
DEFINE g_mhad_m          type_g_mhad_m
DEFINE g_mhad_m_t        type_g_mhad_m
DEFINE g_mhad_m_o        type_g_mhad_m
DEFINE g_mhad_m_mask_o   type_g_mhad_m #轉換遮罩前資料
DEFINE g_mhad_m_mask_n   type_g_mhad_m #轉換遮罩後資料
 
   DEFINE g_mhad001_t LIKE mhad_t.mhad001
DEFINE g_mhad002_t LIKE mhad_t.mhad002
DEFINE g_mhad003_t LIKE mhad_t.mhad003
 
 
DEFINE g_mhad_d          DYNAMIC ARRAY OF type_g_mhad_d
DEFINE g_mhad_d_t        type_g_mhad_d
DEFINE g_mhad_d_o        type_g_mhad_d
DEFINE g_mhad_d_mask_o   DYNAMIC ARRAY OF type_g_mhad_d #轉換遮罩前資料
DEFINE g_mhad_d_mask_n   DYNAMIC ARRAY OF type_g_mhad_d #轉換遮罩後資料
DEFINE g_mhad2_d   DYNAMIC ARRAY OF type_g_mhad2_d
DEFINE g_mhad2_d_t type_g_mhad2_d
DEFINE g_mhad2_d_o type_g_mhad2_d
DEFINE g_mhad2_d_mask_o   DYNAMIC ARRAY OF type_g_mhad2_d #轉換遮罩前資料
DEFINE g_mhad2_d_mask_n   DYNAMIC ARRAY OF type_g_mhad2_d #轉換遮罩後資料
 
 
DEFINE g_browser      DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位  
       b_statepic     LIKE type_t.chr50,
       b_mhadsite     LIKE mhad_t.mhadsite,      #160307-00010#1 160328 By pomelo add
          b_mhad001 LIKE mhad_t.mhad001,
      b_mhad002 LIKE mhad_t.mhad002,
      b_mhad003 LIKE mhad_t.mhad003
       #,rank           LIKE type_t.num10
      END RECORD 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
 
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
 
DEFINE g_detail_cnt          LIKE type_t.num10             #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10             #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10             #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10             #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10             #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10             #Browser目前所在筆數(暫存用)
DEFINE g_current_page        LIKE type_t.num10             #目前所在頁數
DEFINE g_order               STRING                        #查詢排序欄位
DEFINE g_state               STRING                        
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page                    
DEFINE g_current_row         LIKE type_t.num10             #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入(僅用於三階)
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="amhi204.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"

   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   DEFINE l_success LIKE type_t.num5   #150308-00001#3 150309 pomelo add
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("amh","")
 
   #add-point:作業初始化 name="main.init"

   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"

   #end add-point
   LET g_forupd_sql = " SELECT mhadsite,'',mhad001,'',mhad002,'',mhad003,''", 
                      " FROM mhad_t",
                      " WHERE mhadent= ? AND mhad001=? AND mhad002=? AND mhad003=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"

   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE amhi204_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.mhadsite,t0.mhad001,t0.mhad002,t0.mhad003,t1.ooefl003 ,t2.mhaal003 , 
       t3.mhabl004 ,t4.mhacl005",
               " FROM mhad_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=t0.mhadsite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN mhaal_t t2 ON t2.mhaalent='"||g_enterprise||"' AND t2.mhaal001=t0.mhad001 AND t2.mhaal002='"||g_dlang||"' ",
               " LEFT JOIN mhabl_t t3 ON t3.mhablent='"||g_enterprise||"' AND t3.mhabl001=t0.mhad001 AND t3.mhabl002=t0.mhad002 AND t3.mhabl003='"||g_dlang||"' ",
               " LEFT JOIN mhacl_t t4 ON t4.mhaclent='"||g_enterprise||"' AND t4.mhacl001=t0.mhad001 AND t4.mhacl002=t0.mhad002 AND t4.mhacl003=t0.mhad003 AND t4.mhacl004='"||g_dlang||"' ",
 
               " WHERE t0.mhadent = '" ||g_enterprise|| "' AND t0.mhad001 = ? AND t0.mhad002 = ? AND t0.mhad003 = ?",
               "   AND t0.mhadsite = ?"   #160307-00010#1 160328 By pomelo add
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"

   #end add-point
   PREPARE amhi204_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"

      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_amhi204 WITH FORM cl_ap_formpath("amh",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL amhi204_init()   
 
      #進入選單 Menu (="N")
      CALL amhi204_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"

      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_amhi204
      
   END IF 
   
   CLOSE amhi204_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   CALL s_aooi500_drop_temp() RETURNING l_success   #150308-00001#3 150309 pomelo add
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="amhi204.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION amhi204_init()
   #add-point:init段define name="init.define_customerization"
   
   #end add-point   
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   DEFINE l_success LIKE type_t.num5   #150308-00001#3 150309 pomelo add
   #end add-point
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill = "Y"
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
      CALL cl_set_combo_scc('mhad008','6020') 
 
   LET g_error_show = 1
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #add-point:畫面資料初始化 name="init.init"
   CALL s_aooi500_create_temp() RETURNING l_success   #150308-00001#3 150309 pomelo add
   #160421-00013#3 160428 by sakura add(S)
   CALL s_asti800_set_comp_format("mhad005",g_mhad_m.mhadsite,'2')
   CALL s_asti800_set_comp_format("mhad006",g_mhad_m.mhadsite,'2')
   CALL s_asti800_set_comp_format("mhad007",g_mhad_m.mhadsite,'2')   
   #160421-00013#3 160428 by sakura add(E)
   #end add-point
   
   CALL amhi204_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="amhi204.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION amhi204_ui_dialog()
   #add-point:ui_dialog段define name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE la_param  RECORD
          prog                  STRING,
          actionid              STRING,
          background            LIKE type_t.chr1,
          param                 DYNAMIC ARRAY OF STRING
                                END RECORD
   DEFINE ls_js                 STRING
   DEFINE li_idx                LIKE type_t.num10
   DEFINE ls_wc                 STRING
   DEFINE lb_first              BOOLEAN
   DEFINE l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
  
   #end add-point
   
   LET lb_first = TRUE
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE
      
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_mhad_m.* TO NULL
         CALL g_mhad_d.clear()
         CALL g_mhad2_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL amhi204_init()
      END IF
 
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
        
         DISPLAY ARRAY g_mhad_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               #顯示單身筆數
               CALL amhi204_idx_chk()
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               CALL amhi204_ui_detailshow()
               
               #add-point:page1自定義行為 name="ui_dialog.body.before_row"
               
               #end add-point
            
            BEFORE DISPLAY 
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
    
               #控制stus哪個按鈕可以按
               
               
            
 
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_mhad2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
         
            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               LET g_curr_diag = ui.DIALOG.getCurrent()
               CALL amhi204_idx_chk()
               CALL amhi204_ui_detailshow()
               
               #add-point:page1自定義行為 name="ui_dialog.body2.before_row"
               
               #end add-point
            
            BEFORE DISPLAY 
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'     
               LET g_current_page = 2
            
            
         
            #add-point:page2自定義行為 name="ui_dialog.body2.action"
            
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         #end add-point
         
         
         BEFORE DIALOG
            #先填充browser資料
            CALL amhi204_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL g_curr_diag.setSelectionMode("s_detail1",1)         
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LET g_current_idx = g_browser.getLength()
            END IF 
            
            IF g_current_idx = 0 AND g_browser.getLength() > 0 THEN
               LET g_current_idx = 1 
            END IF
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL amhi204_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL amhi204_ui_detailshow() #Setting the current row 
            
            #add-point:ui_dialog段before dialog2 name="ui_dialog.before_dialog2"
            CALL cl_set_act_visible("insert", FALSE)   #160229-00001#6 20160303 s983961     
            #end add-point
 
         
    
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL amhi204_fetch('F')
            LET g_current_row = g_current_idx         
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL amhi204_idx_chk()
			LET g_action_choice = ""
          
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL amhi204_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL amhi204_idx_chk()
			LET g_action_choice = ""
          
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL amhi204_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL amhi204_idx_chk()
			LET g_action_choice = ""
        
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL amhi204_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL amhi204_idx_chk()
			LET g_action_choice = ""
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL amhi204_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL amhi204_idx_chk()
			LET g_action_choice = ""
            
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_mhad_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_mhad2_d)
                  LET g_export_id[2]   = "s_detail2"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
          
         ON ACTION close
            LET INT_FLAG=FALSE        
            LET g_action_choice = "exit"
            EXIT DIALOG     
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
          
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
                CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD mhad004
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
            
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL amhi204_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL amhi204_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = "-100" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CLEAR FORM
               ELSE
                  CALL amhi204_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
               
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL amhi204_modify()
               #add-point:ON ACTION modify name="menu.modify"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL amhi204_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL amhi204_delete()
               #add-point:ON ACTION delete name="menu.delete"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL amhi204_insert()
               #add-point:ON ACTION insert name="menu.insert"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL amhi204_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
 
 
 
            END IF
 
 
 
 
         
         
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL amhi204_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL amhi204_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL amhi204_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow('')
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
         CONTINUE DIALOG
            
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
   
   CALL cl_set_act_visible("accept,cancel", TRUE)
   
END FUNCTION
 
{</section>}
 
{<section id="amhi204.browser_search" >}
#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION amhi204_browser_search(p_type)
   #add-point:browser_search段define name="browser_search.define_customerization"
   
   #end add-point   
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_search.define"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="amhi204.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION amhi204_browser_fill(ps_page_action)
   #add-point:browser_fill段define name="browser_fill.define_customerization"

   #end add-point   
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   DEFINE l_where           STRING
   #end add-point
   
   #add-point:Function前置處理  name="browser_fill.before_browser_fill"
   CALL s_aooi500_sql_where(g_prog,'mhadsite') RETURNING l_where
   #end add-point    
 
   LET l_searchcol = "mhad001,mhad002,mhad003"
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      LET l_wc = " 1=1"
   END IF
   IF cl_null(l_wc2) THEN  #p_wc 查詢條件
      LET l_wc2 = " 1=1"
   END IF
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT mhad001 ",
                      ", mhad002 ",
                      ", mhad003 ",
 
                      " FROM mhad_t ",
                      " ",
                      " LEFT JOIN mhadl_t ON mhadlent = '"||g_enterprise||"' AND mhad001 = mhadl001 AND mhad002 = mhadl002 AND mhad003 = mhadl003 AND mhad004 = mhadl004 AND mhadl005 = '",g_dlang,"' ",
 
                      " WHERE mhadent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("mhad_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT mhad001 ",
                      ", mhad002 ",
                      ", mhad003 ",
 
                      " FROM mhad_t ",
                      " ",
                      " LEFT JOIN mhadl_t ON mhadlent = '"||g_enterprise||"' AND mhad001 = mhadl001 AND mhad002 = mhadl002 AND mhad003 = mhadl003 AND mhad004 = mhadl004 AND mhadl005 = '",g_dlang,"' ",
                      " WHERE mhadent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("mhad_t")
   END IF 
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
 
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   LET l_sub_sql = l_sub_sql," AND ",l_where
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   #end add-point
   
   IF g_sql.getIndexOf("1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
   
   #若超過最大顯示筆數
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt 
         LET g_errparam.code   = 9035
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   LET g_error_show = 0
 
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_mhad_m.* TO NULL
      CALL g_mhad_d.clear()        
      CALL g_mhad2_d.clear() 
 
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.mhad001,t0.mhad002,t0.mhad003 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql  = "SELECT DISTINCT t0.mhad001,t0.mhad002,t0.mhad003,t0.mhadsite",   #160307-00010#1 160328 By pomelo add t0.mhadsite
                " FROM mhad_t t0",
                #" ",
                " LEFT JOIN mhadl_t ON mhadlent = '"||g_enterprise||"' AND mhad001 = mhadl001 AND mhad002 = mhadl002 AND mhad003 = mhadl003 AND mhad004 = mhadl004 AND mhadl005 = '",g_dlang,"' ",
 
                
                " WHERE t0.mhadent = '" ||g_enterprise|| "' AND ", l_wc," AND ",l_wc2, cl_sql_add_filter("mhad_t")
 
   #add-point:browser_fill,sql_rank前 name="browser_fill.before_sql_rank"
   LET g_sql = g_sql," AND ",l_where
   #end add-point
    
   #定義browser_fill sql
   LET g_sql= g_sql, " ORDER BY ",l_searchcol, " ", g_order
                
   #add-point:browser_fill,pre前 name="browser_fill.before_pre"

   #end add-point
   
   #LET g_sql = cl_sql_add_tabid(g_sql,"mhad_t")             #WC重組
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   
   IF g_sql.getIndexOf("1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_mhad001,g_browser[g_cnt].b_mhad002,g_browser[g_cnt].b_mhad003,g_browser[g_cnt].b_mhadsite  #160307-00010#1 160328 By pomelo add b_mhadsite  
 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
         
         
         #add-point:browser_fill段reference name="browser_fill.reference"

         #end add-point  
      
         
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
      END FOREACH
      FREE browse_pre
   END IF
 
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_mhad001) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   IF g_browser.getLength() = 0 AND l_wc THEN
      INITIALIZE g_mhad_m.* TO NULL
      CALL g_mhad_d.clear()
      CALL g_mhad2_d.clear()
 
      #add-point:browser_fill段after_clear name="browser_fill.after_clear"

      #end add-point 
      CLEAR FORM
   END IF
   
   LET g_header_cnt = g_browser.getLength()
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   LET g_browser_cnt = g_browser.getLength()
   CALL amhi204_fetch('')
   
   #筆數顯示
   LET g_browser_idx = g_current_idx 
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
 
   #add-point:browser_fill段結束前 name="browser_fill.after"

   #end add-point   
   
END FUNCTION
 
{</section>}
 
{<section id="amhi204.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION amhi204_ui_headershow()
   #add-point:ui_headershow段define name="ui_headershow.define_customerization"

   #end add-point    
   #add-point:ui_headershow段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"

   #end add-point  
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"

   #end add-point
   
   LET g_mhad_m.mhad001 = g_browser[g_current_idx].b_mhad001   
   LET g_mhad_m.mhad002 = g_browser[g_current_idx].b_mhad002   
   LET g_mhad_m.mhad003 = g_browser[g_current_idx].b_mhad003   
   LET g_mhad_m.mhadsite = g_browser[g_current_idx].b_mhadsite  #160307-00010#1 160328 By pomelo add
 
   EXECUTE amhi204_master_referesh USING g_mhad_m.mhad001,g_mhad_m.mhad002,g_mhad_m.mhad003,g_mhad_m.mhadsite   #160307-00010#1 160328 By pomelo add mhadsite
      INTO g_mhad_m.mhadsite, 
       g_mhad_m.mhad001,g_mhad_m.mhad002,g_mhad_m.mhad003,g_mhad_m.mhadsite_desc,g_mhad_m.mhad001_desc, 
       g_mhad_m.mhad002_desc,g_mhad_m.mhad003_desc
   CALL amhi204_show()
   
END FUNCTION
 
{</section>}
 
{<section id="amhi204.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION amhi204_ui_detailshow()
   #add-point:ui_detailshow段define name="ui_detailshow.define_customerization"
   
   #end add-point
   #add-point:ui_detailshow段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_detailshow.before"
   
   #end add-point  
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
      #add-point:ui_detailshow段more name="ui_detailshow.more"
      
      #end add-point 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   
   #end add-point 
   
END FUNCTION
 
{</section>}
 
{<section id="amhi204.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION amhi204_ui_browser_refresh()
   #add-point:ui_browser_refresh段define name="ui_browser_refresh.define_customerization"
   
   #end add-point   
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_mhad001 = g_mhad_m.mhad001 
         AND g_browser[l_i].b_mhad002 = g_mhad_m.mhad002 
         AND g_browser[l_i].b_mhad003 = g_mhad_m.mhad003 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數的顯示
   
END FUNCTION
 
{</section>}
 
{<section id="amhi204.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION amhi204_construct()
   #add-point:cs段define name="cs.define_customerization"

   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"

   #end add-point 
   
   #add-point:Function前置處理  name="cs.pre_function"

   #end add-point
   
   #清除畫面上相關資料
   CLEAR FORM                 
   INITIALIZE g_mhad_m.* TO NULL
   CALL g_mhad_d.clear()
   CALL g_mhad2_d.clear()
 
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   LET g_action_choice = ""
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段construct外 name="cs.head.before"

   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON mhadsite,mhad001,mhad002,mhad003
 
         BEFORE CONSTRUCT
            #add-point:cs段more_construct name="cs.head.before_construct"

            #end add-point 
            
                 #Ctrlp:construct.c.mhadsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhadsite
            #add-point:ON ACTION controlp INFIELD mhadsite name="construct.c.mhadsite"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
#			LET g_qryparam.arg2 = '8'
#            CALL q_ooed004()                           #呼叫開窗
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'mhadsite',g_site,'c') #150308-00001#3 150309 pomelo add 'c'
            CALL q_ooef001_24()
            DISPLAY g_qryparam.return1 TO mhadsite  #顯示到畫面上

            NEXT FIELD mhadsite                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhadsite
            #add-point:BEFORE FIELD mhadsite name="construct.b.mhadsite"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mhadsite
            
            #add-point:AFTER FIELD mhadsite name="construct.a.mhadsite"

            #END add-point
            
 
 
         #Ctrlp:construct.c.mhad001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhad001
            #add-point:ON ACTION controlp INFIELD mhad001 name="construct.c.mhad001"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mhaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mhad001  #顯示到畫面上

            NEXT FIELD mhad001                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhad001
            #add-point:BEFORE FIELD mhad001 name="construct.b.mhad001"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mhad001
            
            #add-point:AFTER FIELD mhad001 name="construct.a.mhad001"

            #END add-point
            
 
 
         #Ctrlp:construct.c.mhad002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhad002
            #add-point:ON ACTION controlp INFIELD mhad002 name="construct.c.mhad002"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mhab002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mhad002  #顯示到畫面上

            NEXT FIELD mhad002                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhad002
            #add-point:BEFORE FIELD mhad002 name="construct.b.mhad002"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mhad002
            
            #add-point:AFTER FIELD mhad002 name="construct.a.mhad002"

            #END add-point
            
 
 
         #Ctrlp:construct.c.mhad003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhad003
            #add-point:ON ACTION controlp INFIELD mhad003 name="construct.c.mhad003"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mhac003()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mhad003  #顯示到畫面上

            NEXT FIELD mhad003                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhad003
            #add-point:BEFORE FIELD mhad003 name="construct.b.mhad003"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mhad003
            
            #add-point:AFTER FIELD mhad003 name="construct.a.mhad003"

            #END add-point
            
 
 
 
         
      END CONSTRUCT
      #160506-00009#3 20160510 mark by beckxie---S
      #CONSTRUCT g_wc2_table1 ON mhadstus,mhadunit,mhad004,mhad009,mhadl006,mhadl007,mhad005,mhad006, 
      #    mhad007,mhad008,mhadownid,mhadowndp,mhadcrtid,mhadcrtdp,mhadcrtdt,mhadmodid,mhadmoddt
      #     FROM s_detail1[1].mhadstus,s_detail1[1].mhadunit,s_detail1[1].mhad004,s_detail1[1].mhad009, 
      #         s_detail1[1].mhadl006,s_detail1[1].mhadl007,s_detail1[1].mhad005,s_detail1[1].mhad006, 
      #         s_detail1[1].mhad007,s_detail1[1].mhad008,s_detail2[1].mhadownid,s_detail2[1].mhadowndp, 
      #         s_detail2[1].mhadcrtid,s_detail2[1].mhadcrtdp,s_detail2[1].mhadcrtdt,s_detail2[1].mhadmodid, 
      #         s_detail2[1].mhadmoddt
      #160506-00009#3 20160510 mark by beckxie---E                
      #160506-00009#3 20160510 add by beckxie---S
      CONSTRUCT g_wc2_table1 ON mhadstus,mhadunit,mhad004,mhad009,mhadl006,mhadl007,mhad010,mhad005,mhad006, 
          mhad007,mhad008,mhadownid,mhadowndp,mhadcrtid,mhadcrtdp,mhadcrtdt,mhadmodid,mhadmoddt
           FROM s_detail1[1].mhadstus,s_detail1[1].mhadunit,s_detail1[1].mhad004,s_detail1[1].mhad009, 
               s_detail1[1].mhadl006,s_detail1[1].mhadl007,s_detail1[1].mhad010,s_detail1[1].mhad005,s_detail1[1].mhad006, 
               s_detail1[1].mhad007,s_detail1[1].mhad008,s_detail2[1].mhadownid,s_detail2[1].mhadowndp, 
               s_detail2[1].mhadcrtid,s_detail2[1].mhadcrtdp,s_detail2[1].mhadcrtdt,s_detail2[1].mhadmodid, 
               s_detail2[1].mhadmoddt
      #160506-00009#3 20160510 add by beckxie---E                
         BEFORE CONSTRUCT
            #add-point:cs段more_construct name="cs.body.before_construct"

            #end add-point 
            
         #單身公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<mhadcrtdt>>----
         AFTER FIELD mhadcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<mhadmoddt>>----
         AFTER FIELD mhadmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<mhadcnfdt>>----
         
         #----<<mhadpstdt>>----
 
 
 
           
         #單身一般欄位開窗相關處理
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhadstus
            #add-point:BEFORE FIELD mhadstus name="construct.b.page1.mhadstus"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mhadstus
            
            #add-point:AFTER FIELD mhadstus name="construct.a.page1.mhadstus"

            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mhadstus
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhadstus
            #add-point:ON ACTION controlp INFIELD mhadstus name="construct.c.page1.mhadstus"

            #END add-point
 
 
         #Ctrlp:construct.c.page1.mhadunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhadunit
            #add-point:ON ACTION controlp INFIELD mhadunit name="construct.c.page1.mhadunit"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
#			LET g_qryparam.arg2 = '8'
#            CALL q_ooed004()                           #呼叫開窗
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'mhadunit',g_site,'c') #150308-00001#3 150309 pomelo add 'c'
            CALL q_ooef001_24()
            DISPLAY g_qryparam.return1 TO mhadunit  #顯示到畫面上

            NEXT FIELD mhadunit                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhadunit
            #add-point:BEFORE FIELD mhadunit name="construct.b.page1.mhadunit"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mhadunit
            
            #add-point:AFTER FIELD mhadunit name="construct.a.page1.mhadunit"

            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mhad004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhad004
            #add-point:ON ACTION controlp INFIELD mhad004 name="construct.c.page1.mhad004"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_mhad001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mhad004  #顯示到畫面上

            NEXT FIELD mhad004                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhad004
            #add-point:BEFORE FIELD mhad004 name="construct.b.page1.mhad004"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mhad004
            
            #add-point:AFTER FIELD mhad004 name="construct.a.page1.mhad004"

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhad009
            #add-point:BEFORE FIELD mhad009 name="construct.b.page1.mhad009"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mhad009
            
            #add-point:AFTER FIELD mhad009 name="construct.a.page1.mhad009"

            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mhad009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhad009
            #add-point:ON ACTION controlp INFIELD mhad009 name="construct.c.page1.mhad009"

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhadl006
            #add-point:BEFORE FIELD mhadl006 name="construct.b.page1.mhadl006"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mhadl006
            
            #add-point:AFTER FIELD mhadl006 name="construct.a.page1.mhadl006"

            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mhadl006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhadl006
            #add-point:ON ACTION controlp INFIELD mhadl006 name="construct.c.page1.mhadl006"

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhadl007
            #add-point:BEFORE FIELD mhadl007 name="construct.b.page1.mhadl007"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mhadl007
            
            #add-point:AFTER FIELD mhadl007 name="construct.a.page1.mhadl007"

            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mhadl007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhadl007
            #add-point:ON ACTION controlp INFIELD mhadl007 name="construct.c.page1.mhadl007"

            #END add-point
         #160506-00009#3 20160510 add by beckxie---S
         #Ctrlp:construct.c.page1.mhad010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhad010
            #add-point:ON ACTION controlp INFIELD mhad010 name="construct.c.page1.mhad010"
            #此段落由子樣板a08產生
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.arg1 = '2145'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mhad010  #顯示到畫面上
 
            NEXT FIELD mhad010                     #返回原欄位
 
 
            #END add-point
         #160506-00009#3 20160510 add by beckxie---E
            
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhad005
            #add-point:BEFORE FIELD mhad005 name="construct.b.page1.mhad005"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mhad005
            
            #add-point:AFTER FIELD mhad005 name="construct.a.page1.mhad005"

            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mhad005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhad005
            #add-point:ON ACTION controlp INFIELD mhad005 name="construct.c.page1.mhad005"

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhad006
            #add-point:BEFORE FIELD mhad006 name="construct.b.page1.mhad006"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mhad006
            
            #add-point:AFTER FIELD mhad006 name="construct.a.page1.mhad006"

            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mhad006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhad006
            #add-point:ON ACTION controlp INFIELD mhad006 name="construct.c.page1.mhad006"

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhad007
            #add-point:BEFORE FIELD mhad007 name="construct.b.page1.mhad007"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mhad007
            
            #add-point:AFTER FIELD mhad007 name="construct.a.page1.mhad007"

            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mhad007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhad007
            #add-point:ON ACTION controlp INFIELD mhad007 name="construct.c.page1.mhad007"

            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhad008
            #add-point:BEFORE FIELD mhad008 name="construct.b.page1.mhad008"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mhad008
            
            #add-point:AFTER FIELD mhad008 name="construct.a.page1.mhad008"

            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.mhad008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhad008
            #add-point:ON ACTION controlp INFIELD mhad008 name="construct.c.page1.mhad008"

            #END add-point
 
 
         #Ctrlp:construct.c.page2.mhadownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhadownid
            #add-point:ON ACTION controlp INFIELD mhadownid name="construct.c.page2.mhadownid"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mhadownid  #顯示到畫面上

            NEXT FIELD mhadownid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhadownid
            #add-point:BEFORE FIELD mhadownid name="construct.b.page2.mhadownid"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mhadownid
            
            #add-point:AFTER FIELD mhadownid name="construct.a.page2.mhadownid"

            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.mhadowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhadowndp
            #add-point:ON ACTION controlp INFIELD mhadowndp name="construct.c.page2.mhadowndp"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mhadowndp  #顯示到畫面上

            NEXT FIELD mhadowndp                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhadowndp
            #add-point:BEFORE FIELD mhadowndp name="construct.b.page2.mhadowndp"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mhadowndp
            
            #add-point:AFTER FIELD mhadowndp name="construct.a.page2.mhadowndp"

            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.mhadcrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhadcrtid
            #add-point:ON ACTION controlp INFIELD mhadcrtid name="construct.c.page2.mhadcrtid"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mhadcrtid  #顯示到畫面上

            NEXT FIELD mhadcrtid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhadcrtid
            #add-point:BEFORE FIELD mhadcrtid name="construct.b.page2.mhadcrtid"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mhadcrtid
            
            #add-point:AFTER FIELD mhadcrtid name="construct.a.page2.mhadcrtid"

            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.mhadcrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhadcrtdp
            #add-point:ON ACTION controlp INFIELD mhadcrtdp name="construct.c.page2.mhadcrtdp"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mhadcrtdp  #顯示到畫面上

            NEXT FIELD mhadcrtdp                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhadcrtdp
            #add-point:BEFORE FIELD mhadcrtdp name="construct.b.page2.mhadcrtdp"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mhadcrtdp
            
            #add-point:AFTER FIELD mhadcrtdp name="construct.a.page2.mhadcrtdp"

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhadcrtdt
            #add-point:BEFORE FIELD mhadcrtdt name="construct.b.page2.mhadcrtdt"

            #END add-point
 
 
         #Ctrlp:construct.c.page2.mhadmodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhadmodid
            #add-point:ON ACTION controlp INFIELD mhadmodid name="construct.c.page2.mhadmodid"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO mhadmodid  #顯示到畫面上

            NEXT FIELD mhadmodid                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhadmodid
            #add-point:BEFORE FIELD mhadmodid name="construct.b.page2.mhadmodid"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mhadmodid
            
            #add-point:AFTER FIELD mhadmodid name="construct.a.page2.mhadmodid"

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhadmoddt
            #add-point:BEFORE FIELD mhadmoddt name="construct.b.page2.mhadmoddt"

            #END add-point
 
 
   
       
      END CONSTRUCT
  
 
  
      #add-point:cs段more_construct name="cs.more_construct"

      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:ui_dialog段b_dialog name="cs.before_dialog"

         #end add-point
      
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
   
   #add-point:cs段after_construct name="cs.after_construct"

   #end add-point
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   LET g_current_row = 1
 
   IF INT_FLAG THEN
      RETURN
   END IF
   
   LET g_wc_filter = ""
 
END FUNCTION
 
{</section>}
 
{<section id="amhi204.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION amhi204_query()
   #add-point:query段define name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="query.befroe_query"
   
   #end add-point 
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
   
   LET ls_wc = g_wc
 
   LET INT_FLAG = 0    
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_mhad_d.clear()
   CALL g_mhad2_d.clear()
 
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL amhi204_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL amhi204_browser_fill(g_wc)
      CALL amhi204_fetch("")
      RETURN
   END IF
   
   LET l_ac = 1
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   LET g_error_show = 1
   CALL amhi204_browser_fill("F")
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||")")
   
   #備份搜尋條件
   LET ls_wc = g_wc
   
   IF g_browser.getLength() = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL amhi204_fetch("F") 
   END IF
   
   CALL amhi204_idx_chk()
   
   LET g_wc_filter = ""
   
END FUNCTION
 
{</section>}
 
{<section id="amhi204.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION amhi204_fetch(p_flag)
   #add-point:fetch段define name="fetch.define_customerization"

   #end add-point   
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"

   #end add-point
   
   #add-point:Function前置處理  name="fetch.before_fetch"

   #end add-point    
 
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L' 
         LET g_current_idx = g_header_cnt
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,': ' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF
            
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
            LET g_current_idx = g_jump
         END IF
 
         LET g_no_ask = FALSE  
   END CASE    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   #CALL amhi204_browser_fill(p_flag)
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身筆數顯示
   DISPLAY g_detail_cnt TO FORMONLY.cnt                      #設定page 總筆數 
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart + g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數
   
   CALL cl_navigator_setting(g_current_idx,g_detail_cnt)
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_mhad_m.mhad001 = g_browser[g_current_idx].b_mhad001
   LET g_mhad_m.mhad002 = g_browser[g_current_idx].b_mhad002
   LET g_mhad_m.mhad003 = g_browser[g_current_idx].b_mhad003
   LET g_mhad_m.mhadsite = g_browser[g_current_idx].b_mhadsite  #160307-00010#1 160328 By pomelo add
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE amhi204_master_referesh USING g_mhad_m.mhad001,g_mhad_m.mhad002,g_mhad_m.mhad003,g_mhad_m.mhadsite   #160307-00010#1 160328 By pomelo add mhadsite
   INTO g_mhad_m.mhadsite, 
       g_mhad_m.mhad001,g_mhad_m.mhad002,g_mhad_m.mhad003,g_mhad_m.mhadsite_desc,g_mhad_m.mhad001_desc, 
       g_mhad_m.mhad002_desc,g_mhad_m.mhad003_desc
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "mhad_t:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      INITIALIZE g_mhad_m.* TO NULL
      RETURN
   END IF
 
   #遮罩相關處理
   LET g_mhad_m_mask_o.* =  g_mhad_m.*
   CALL amhi204_mhad_t_mask()
   LET g_mhad_m_mask_n.* =  g_mhad_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL amhi204_set_act_visible()
   CALL amhi204_set_act_no_visible()
 
   #保存單頭舊值
   LET g_mhad_m_t.* = g_mhad_m.*
   LET g_mhad_m_o.* = g_mhad_m.*
   
   #重新顯示   
   CALL amhi204_show()
 
   
 
END FUNCTION
 
{</section>}
 
{<section id="amhi204.insert" >}
#+ 資料新增
PRIVATE FUNCTION amhi204_insert()
   #add-point:insert段define name="insert.define_customerization"
   
   #end add-point   
   #add-point:insert段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   DEFINE l_insert      LIKE type_t.num5
   #end add-point
   
   #add-point:Function前置處理  name="insert.before"
   
   #end add-point    
   
   #清除相關資料
   CLEAR FORM                    
   CALL g_mhad_d.clear()
   CALL g_mhad2_d.clear()
 
 
   INITIALIZE g_mhad_m.* LIKE mhad_t.*             #DEFAULT 設定
   LET g_mhad001_t = NULL
   LET g_mhad002_t = NULL
   LET g_mhad003_t = NULL
 
   LET g_master_insert = FALSE
   CALL s_transaction_begin()
   WHILE TRUE
     
      #單頭預設值
      
     
      #add-point:單頭預設值 name="insert.default"
#      LET g_mhad_m.mhadsite = g_site
      CALL s_aooi500_default(g_prog,'mhadsite',g_mhad_m.mhadsite) RETURNING l_insert,g_mhad_m.mhadsite
      IF NOT l_insert THEN
         RETURN
      END IF
      CALL amhi204_mhadsite_ref()
      LET g_mhad_m_t.* = g_mhad_m.*
      #end add-point 
 
      CALL amhi204_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG AND NOT g_master_insert THEN
         LET INT_FLAG = 0
         LET g_mhad_m.* = g_mhad_m_t.*
         CALL amhi204_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_mhad_m.* TO NULL
         INITIALIZE g_mhad_d TO NULL
         INITIALIZE g_mhad2_d TO NULL
 
         CALL amhi204_show()
         RETURN
      END IF
    
      #CALL g_mhad_d.clear()
      #CALL g_mhad2_d.clear()
 
      
      #add-point:單頭輸入後2 name="insert.after_insert2"
      
      #end add-point
 
      LET g_rec_b = 0
      EXIT WHILE
      
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL amhi204_set_act_visible()
   CALL amhi204_set_act_no_visible()
 
   #將新增的資料併入搜尋條件中
   LET g_state = "insert"
   
   LET g_mhad001_t = g_mhad_m.mhad001
   LET g_mhad002_t = g_mhad_m.mhad002
   LET g_mhad003_t = g_mhad_m.mhad003
 
   
   #組合新增資料的條件
   LET g_add_browse = " mhadent = '" ||g_enterprise|| "' AND",
                      " mhad001 = '", g_mhad_m.mhad001, "' "
                      ," AND mhad002 = '", g_mhad_m.mhad002, "' "
                      ," AND mhad003 = '", g_mhad_m.mhad003, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL amhi204_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CALL amhi204_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE amhi204_master_referesh USING g_mhad_m.mhad001,g_mhad_m.mhad002,g_mhad_m.mhad003 INTO g_mhad_m.mhadsite, 
       g_mhad_m.mhad001,g_mhad_m.mhad002,g_mhad_m.mhad003,g_mhad_m.mhadsite_desc,g_mhad_m.mhad001_desc, 
       g_mhad_m.mhad002_desc,g_mhad_m.mhad003_desc
   
   #遮罩相關處理
   LET g_mhad_m_mask_o.* =  g_mhad_m.*
   CALL amhi204_mhad_t_mask()
   LET g_mhad_m_mask_n.* =  g_mhad_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_mhad_m.mhadsite,g_mhad_m.mhadsite_desc,g_mhad_m.mhad001,g_mhad_m.mhad001_desc,g_mhad_m.mhad002, 
       g_mhad_m.mhad002_desc,g_mhad_m.mhad003,g_mhad_m.mhad003_desc
   
   #功能已完成,通報訊息中心
   CALL amhi204_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="amhi204.modify" >}
#+ 資料修改
PRIVATE FUNCTION amhi204_modify()
   #add-point:modify段define name="modify.define_customerization"
   
   #end add-point    
   #add-point:modify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   IF g_mhad_m.mhad001 IS NULL
   OR g_mhad_m.mhad002 IS NULL
   OR g_mhad_m.mhad003 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
   LET g_mhad001_t = g_mhad_m.mhad001
   LET g_mhad002_t = g_mhad_m.mhad002
   LET g_mhad003_t = g_mhad_m.mhad003
 
   CALL s_transaction_begin()
   
   OPEN amhi204_cl USING g_enterprise,g_mhad_m.mhad001,g_mhad_m.mhad002,g_mhad_m.mhad003
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN amhi204_cl:" 
      LET g_errparam.code   =  STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE amhi204_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE amhi204_master_referesh USING g_mhad_m.mhad001,g_mhad_m.mhad002,g_mhad_m.mhad003 INTO g_mhad_m.mhadsite, 
       g_mhad_m.mhad001,g_mhad_m.mhad002,g_mhad_m.mhad003,g_mhad_m.mhadsite_desc,g_mhad_m.mhad001_desc, 
       g_mhad_m.mhad002_desc,g_mhad_m.mhad003_desc
   
   #遮罩相關處理
   LET g_mhad_m_mask_o.* =  g_mhad_m.*
   CALL amhi204_mhad_t_mask()
   LET g_mhad_m_mask_n.* =  g_mhad_m.*
   
   CALL s_transaction_end('Y','0')
 
   CALL amhi204_show()
   WHILE TRUE
      LET g_mhad001_t = g_mhad_m.mhad001
      LET g_mhad002_t = g_mhad_m.mhad002
      LET g_mhad003_t = g_mhad_m.mhad003
 
 
      #add-point:modify段修改前 name="modify.before_input"
      
      #end add-point
      
      CALL amhi204_input("u")     #欄位更改
      
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_mhad_m.* = g_mhad_m_t.*
         CALL amhi204_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更(更新單身table的key欄位值)
      IF g_mhad_m.mhad001 != g_mhad001_t 
      OR g_mhad_m.mhad002 != g_mhad002_t 
      OR g_mhad_m.mhad003 != g_mhad003_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單頭(偽)修改前 name="modify.b_key_update"
         
         #end add-point
         
         #add-point:單頭(偽)修改中 name="modify.m_key_update"
         
         #end add-point
         
 
         
         #add-point:單頭(偽)修改後 name="modify.a_key_update"
         
         #end add-point
         
      END IF
      
      EXIT WHILE
      
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL amhi204_set_act_visible()
   CALL amhi204_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " mhadent = '" ||g_enterprise|| "' AND",
                      " mhad001 = '", g_mhad_m.mhad001, "' "
                      ," AND mhad002 = '", g_mhad_m.mhad002, "' "
                      ," AND mhad003 = '", g_mhad_m.mhad003, "' "
 
   #填到對應位置
   CALL amhi204_browser_fill("")
 
   CALL amhi204_idx_chk()
 
   CLOSE amhi204_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL amhi204_msgcentre_notify('modify')
   
END FUNCTION   
 
{</section>}
 
{<section id="amhi204.input" >}
#+ 資料輸入
PRIVATE FUNCTION amhi204_input(p_cmd)
   #add-point:input段define name="input.define_customerization"
   
   #end add-point   
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num10               #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num10               #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10               #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE  l_success       LIKE type_t.num5
   DEFINE  l_errno         LIKE type_t.chr10
   #end add-point
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_mhad_m.mhadsite,g_mhad_m.mhadsite_desc,g_mhad_m.mhad001,g_mhad_m.mhad001_desc,g_mhad_m.mhad002, 
       g_mhad_m.mhad002_desc,g_mhad_m.mhad003,g_mhad_m.mhad003_desc
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF  
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT mhadstus,mhadunit,mhad004,mhad009,mhad005,mhad006,mhad007,mhad008,mhad004, 
       mhadownid,mhadowndp,mhadcrtid,mhadcrtdp,mhadcrtdt,mhadmodid,mhadmoddt FROM mhad_t WHERE mhadent=?  
       AND mhad001=? AND mhad002=? AND mhad003=? AND mhad004=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE amhi204_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
 
 
   
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL amhi204_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL amhi204_set_no_entry(p_cmd)
   #add-point:set_no_entry後 name="input.after_set_no_entry"
   
   #end add-point
 
   DISPLAY BY NAME g_mhad_m.mhadsite,g_mhad_m.mhad001,g_mhad_m.mhad002,g_mhad_m.mhad003
   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:進入修改段前 name="input.before_input"
   let l_success = TRUE
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="amhi204.input.head" >}
   
      #單頭段
      INPUT BY NAME g_mhad_m.mhadsite,g_mhad_m.mhad001,g_mhad_m.mhad002,g_mhad_m.mhad003 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
         
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:單頭input前 name="input.head.b_input"
            IF l_cmd_t = 'r' THEN
            else
               CALL amhi204_set_entry(p_cmd)
               CALL amhi204_set_no_entry(p_cmd)            
            END IF
            #end add-point
          
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mhadsite
            
            #add-point:AFTER FIELD mhadsite name="input.a.mhadsite"
            LET g_mhad_m.mhadsite_desc = NULL
            DISPLAY BY NAME g_mhad_m.mhadsite_desc
            IF NOT cl_null(g_mhad_m.mhadsite) THEN
            IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_mhad_m.mhadsite != g_mhad_m_t.mhadsite or g_mhad_m_t.mhadsite is null )) THEN   
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

#               #設定g_chkparam.*的參數
#               LET g_chkparam.arg1 = g_mhad_m.mhadsite
#               LET g_chkparam.arg2 = '8'
#               LET g_chkparam.arg3 = g_site
#
#
#               #呼叫檢查存在並帶值的library
#               IF cl_chk_exist("v_ooed004") THEN
#                  #檢查成功時後續處理
#                  #LET  = g_chkparam.return1
#                  #DISPLAY BY NAME
#
#               ELSE
#                  #檢查失敗時後續處理
#                  LET g_mhad_m.mhadsite = g_mhad_m_t.mhadsite
#                  CALL amhi204_mhadsite_ref()
#                  NEXT FIELD CURRENT
#               END IF
               CALL s_aooi500_chk(g_prog,'mhadsite',g_mhad_m.mhadsite,g_mhad_m.mhadsite) RETURNING l_success,l_errno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = ''
                  LET g_errparam.code   = l_errno
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
               
                  LET g_mhad_m.mhadsite = g_mhad_m_t.mhadsite
                  CALL amhi204_mhadsite_ref()
                  NEXT FIELD CURRENT
               END IF
               IF NOT cl_null(g_mhad_m.mhad001) THEN 
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_mhad_m.mhad001
                  LET g_chkparam.arg2 = g_mhad_m.mhadsite
                  
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_mhaa001") THEN

                  ELSE
                     #檢查失敗時後續處理
                     LET g_mhad_m.mhadsite = g_mhad_m_t.mhadsite
                     CALL amhi204_mhadsite_ref()
                     NEXT FIELD CURRENT
                  END IF

               END IF
            END IF
            end if
            CALL amhi204_mhadsite_ref() 

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhadsite
            #add-point:BEFORE FIELD mhadsite name="input.b.mhadsite"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mhadsite
            #add-point:ON CHANGE mhadsite name="input.g.mhadsite"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mhad001
            
            #add-point:AFTER FIELD mhad001 name="input.a.mhad001"
            #此段落由子樣板a05產生
            LET g_mhad_m.mhad001_desc = NULL
            DISPLAY BY NAME g_mhad_m.mhad001_desc
            IF  NOT cl_null(g_mhad_m.mhad001) AND NOT cl_null(g_mhad_m.mhad002) AND g_mhad_m.mhad003 IS NOT NULL THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_mhad_m.mhad001 != g_mhad001_t  OR g_mhad_m.mhad002 != g_mhad002_t  OR g_mhad_m.mhad003 != g_mhad003_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mhad_t WHERE "||"mhadent = '" ||g_enterprise|| "' AND "||"mhad001 = '"||g_mhad_m.mhad001 ||"' AND "|| "mhad002 = '"||g_mhad_m.mhad002 ||"' AND "|| "mhad003 = '"||g_mhad_m.mhad003 ||"'",'std-00004',0) THEN 
                     LET g_mhad_m.mhad001 = g_mhad_m_t.mhad001
                     CALL amhi204_mhad001_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            IF NOT cl_null(g_mhad_m.mhad001) THEN 
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_mhad_m.mhad001
               LET g_chkparam.arg2 = g_mhad_m.mhadsite
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_mhaa001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 

               ELSE
                  #檢查失敗時後續處理
                  LET g_mhad_m.mhad001 = g_mhad_m_t.mhad001
                  CALL amhi204_mhad001_ref()
                  NEXT FIELD CURRENT
               END IF

            END IF 
            IF NOT cl_null(g_mhad_m.mhad002) THEN 
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_mhad_m.mhad002
               LET g_chkparam.arg2 = g_mhad_m.mhad001

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_mhab002") THEN

               ELSE
                  #檢查失敗時後續處理
                  LET g_mhad_m.mhad001 = g_mhad_m_t.mhad001
                  CALL amhi204_mhad001_ref()
                  NEXT FIELD CURRENT
               END IF
            END IF
            IF NOT cl_null(g_mhad_m.mhad003) THEN 
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_mhad_m.mhad003
               LET g_chkparam.arg2 = g_mhad_m.mhad001
               LET g_chkparam.arg3 = g_mhad_m.mhad002
 
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_mhac003") THEN

               ELSE
                  #檢查失敗時後續處理
                  LET g_mhad_m.mhad001 = g_mhad_m_t.mhad001
                  CALL amhi204_mhad001_ref()
                  NEXT FIELD CURRENT
               END IF
            END IF
            CALL amhi204_mhad001_ref()

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhad001
            #add-point:BEFORE FIELD mhad001 name="input.b.mhad001"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mhad001
            #add-point:ON CHANGE mhad001 name="input.g.mhad001"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mhad002
            
            #add-point:AFTER FIELD mhad002 name="input.a.mhad002"
            #此段落由子樣板a05產生
            LET g_mhad_m.mhad002_desc = null
            DISPLAY BY NAME g_mhad_m.mhad002_desc
            
            IF  NOT cl_null(g_mhad_m.mhad001) AND NOT cl_null(g_mhad_m.mhad002) AND g_mhad_m.mhad003 IS NOT NULL THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_mhad_m.mhad001 != g_mhad001_t  OR g_mhad_m.mhad002 != g_mhad002_t  OR g_mhad_m.mhad003 != g_mhad003_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mhad_t WHERE "||"mhadent = '" ||g_enterprise|| "' AND "||"mhad001 = '"||g_mhad_m.mhad001 ||"' AND "|| "mhad002 = '"||g_mhad_m.mhad002 ||"' AND "|| "mhad003 = '"||g_mhad_m.mhad003 ||"'",'std-00004',0) THEN 
                     LET g_mhad_m.mhad002 = g_mhad_m_t.mhad002
                     CALL amhi204_mhad002_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_mhad_m.mhad002) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_mhad_m.mhad002
               LET g_chkparam.arg2 = g_mhad_m.mhad001

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_mhab002") THEN

               ELSE
                  #檢查失敗時後續處理
                  LET g_mhad_m.mhad002 = g_mhad_m_t.mhad002
                  CALL amhi204_mhad002_ref()
                  NEXT FIELD CURRENT
               END IF
            END IF
            IF NOT cl_null(g_mhad_m.mhad003) THEN 
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_mhad_m.mhad003
               LET g_chkparam.arg2 = g_mhad_m.mhad001
               LET g_chkparam.arg3 = g_mhad_m.mhad002

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_mhac003") THEN

               ELSE
                  #檢查失敗時後續處理
                  LET g_mhad_m.mhad002 = g_mhad_m_t.mhad002
                  CALL amhi204_mhad002_ref()
                  NEXT FIELD CURRENT
               END IF
            END IF
            CALL amhi204_mhad002_ref()            

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhad002
            #add-point:BEFORE FIELD mhad002 name="input.b.mhad002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mhad002
            #add-point:ON CHANGE mhad002 name="input.g.mhad002"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mhad003
            
            #add-point:AFTER FIELD mhad003 name="input.a.mhad003"
            #此段落由子樣板a05產生
            LET g_mhad_m.mhad003_desc =null
            DISPLAY BY NAME g_mhad_m.mhad003_desc
            IF  NOT cl_null(g_mhad_m.mhad001) AND NOT cl_null(g_mhad_m.mhad002) AND g_mhad_m.mhad003 IS NOT NULL THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_mhad_m.mhad001 != g_mhad001_t  OR g_mhad_m.mhad002 != g_mhad002_t  OR g_mhad_m.mhad003 != g_mhad003_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mhad_t WHERE "||"mhadent = '" ||g_enterprise|| "' AND "||"mhad001 = '"||g_mhad_m.mhad001 ||"' AND "|| "mhad002 = '"||g_mhad_m.mhad002 ||"' AND "|| "mhad003 = '"||g_mhad_m.mhad003 ||"'",'std-00004',0) THEN 
                     LET g_mhad_m.mhad003 = g_mhad_m_t.mhad003
                     CALL amhi204_mhad003_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_mhad_m.mhad003) THEN 
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_mhad_m.mhad003
               LET g_chkparam.arg2 = g_mhad_m.mhad001
               LET g_chkparam.arg3 = g_mhad_m.mhad002

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_mhac003") THEN

               ELSE
                  #檢查失敗時後續處理
                  LET g_mhad_m.mhad003 = g_mhad_m_t.mhad003
                  CALL amhi204_mhad003_ref()
                  NEXT FIELD CURRENT
               END IF
            END IF
            IF g_mhad_m.mhad003 IS NULL THEN
               LET g_mhad_m.mhad003=' '
            END IF 
            CALL amhi204_mhad003_ref()  

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhad003
            #add-point:BEFORE FIELD mhad003 name="input.b.mhad003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mhad003
            #add-point:ON CHANGE mhad003 name="input.g.mhad003"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.mhadsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhadsite
            #add-point:ON ACTION controlp INFIELD mhadsite name="input.c.mhadsite"
          
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mhad_m.mhadsite             #給予default值

            #給予arg
#            LET g_qryparam.arg1 = g_site #
#            LET g_qryparam.arg2 = "8" #
#
#            CALL q_ooed004()                                #呼叫開窗
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'mhadsite',g_mhad_m.mhadsite,'i') #150308-00001#3 150309 pomelo add 'i'
            CALL q_ooef001_24()

            LET g_mhad_m.mhadsite = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mhad_m.mhadsite TO mhadsite              #顯示到畫面上
            CALL amhi204_mhadsite_ref()  
            NEXT FIELD mhadsite         
            #END add-point
 
 
         #Ctrlp:input.c.mhad001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhad001
            #add-point:ON ACTION controlp INFIELD mhad001 name="input.c.mhad001"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mhad_m.mhad001             #給予default值
            LET g_qryparam.where = "mhaasite='",g_mhad_m.mhadsite,"' "
            #給予arg

            CALL q_mhaa001()                                #呼叫開窗

            LET g_mhad_m.mhad001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mhad_m.mhad001 TO mhad001              #顯示到畫面上
            CALL amhi204_mhad001_ref()  
            NEXT FIELD mhad001                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.mhad002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhad002
            #add-point:ON ACTION controlp INFIELD mhad002 name="input.c.mhad002"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mhad_m.mhad002             #給予default值
            LET g_qryparam.where = "mhab001='",g_mhad_m.mhad001,"' "
            #給予arg

            CALL q_mhab002()                                #呼叫開窗

            LET g_mhad_m.mhad002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mhad_m.mhad002 TO mhad002              #顯示到畫面上
            CALL amhi204_mhad002_ref() 
            NEXT FIELD mhad002                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.mhad003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhad003
            #add-point:ON ACTION controlp INFIELD mhad003 name="input.c.mhad003"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mhad_m.mhad003             #給予default值
            LET g_qryparam.where = "mhac001='",g_mhad_m.mhad001,"' AND mhac002='",g_mhad_m.mhad002,"' "
            #給予arg

            CALL q_mhac003()                                #呼叫開窗

            LET g_mhad_m.mhad003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mhad_m.mhad003 TO mhad003              #顯示到畫面上
            CALL amhi204_mhad003_ref() 
            NEXT FIELD mhad003                          #返回原欄位


            #END add-point
 
 
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            
            IF s_transaction_chk("N",0) THEN
                CALL s_transaction_begin()
            END IF
            
            #錯誤訊息統整顯示
            #CALL cl_err_collect_show()
            #CALL cl_showmsg()
            DISPLAY BY NAME g_mhad_m.mhad001             
                            ,g_mhad_m.mhad002   
                            ,g_mhad_m.mhad003   
 
 
            IF p_cmd = 'u' THEN
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
            
               #將遮罩欄位還原
               CALL amhi204_mhad_t_mask_restore('restore_mask_o')
            
               UPDATE mhad_t SET (mhadsite,mhad001,mhad002,mhad003) = (g_mhad_m.mhadsite,g_mhad_m.mhad001, 
                   g_mhad_m.mhad002,g_mhad_m.mhad003)
                WHERE mhadent = g_enterprise AND mhad001 = g_mhad001_t
                  AND mhad002 = g_mhad002_t
                  AND mhad003 = g_mhad003_t
 
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "mhad_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "mhad_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                     #資料多語言用-增/改
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mhad_m.mhad001
               LET gs_keys_bak[1] = g_mhad001_t
               LET gs_keys[2] = g_mhad_m.mhad002
               LET gs_keys_bak[2] = g_mhad002_t
               LET gs_keys[3] = g_mhad_m.mhad003
               LET gs_keys_bak[3] = g_mhad003_t
               LET gs_keys[4] = g_mhad_d[g_detail_idx].mhad004
               LET gs_keys_bak[4] = g_mhad_d_t.mhad004
               CALL amhi204_update_b('mhad_t',gs_keys,gs_keys_bak,"'1'")
                     
 
                     #add-point:單頭修改後 name="input.head.a_update"
                     CALL amhi204_sum() RETURNING l_success
                     IF l_success=FALSE THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code =  g_errno
                        LET g_errparam.extend = "update:"
                        LET g_errparam.popup = TRUE
                        CALL cl_err()

                        CALL s_transaction_end('N','0')
                     END IF
                     #end add-point
    
                     #頭先不紀錄
                     #LET g_log1 = util.JSON.stringify(g_mhad_m_t)
                     #LET g_log2 = util.JSON.stringify(g_mhad_m)
                     #IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                     #   CALL s_transaction_end('N','0')
                     #ELSE
                        CALL s_transaction_end('Y','0')
                     #END IF
               END CASE
            
               #將遮罩欄位進行遮蔽
               CALL amhi204_mhad_t_mask_restore('restore_mask_n')
            
            ELSE    
               #add-point:單頭新增 name="input.head.a_insert"
               IF g_mhad_m.mhad003 IS NULL THEN
                  LET g_mhad_m.mhad003 = ' '
               END IF
               #end add-point
               
               #多語言處理
               
                         
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL amhi204_detail_reproduce()
               END IF
            END IF
 
           LET g_mhad001_t = g_mhad_m.mhad001
           LET g_mhad002_t = g_mhad_m.mhad002
           LET g_mhad003_t = g_mhad_m.mhad003
 
           
           IF g_mhad_d.getLength() = 0 THEN
              NEXT FIELD mhad004
           END IF
 
      END INPUT
 
{</section>}
 
{<section id="amhi204.input.body" >}
      #Page1 預設值產生於此處
      INPUT ARRAY g_mhad_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂單身ACTION
         
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item name="input.detail_input.page1.update_item"
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               #add-point:ON ACTION update_item
               IF NOT cl_null(g_mhad_d[l_ac].mhad004)  THEN
                  CALL n_mhadl(g_mhad_m.mhad001,g_mhad_m.mhad002,g_mhad_m.mhad003,g_mhad_d[l_ac].mhad004)
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_mhad_m.mhad001
                  LET g_ref_fields[2] = g_mhad_m.mhad002
                  LET g_ref_fields[3] = g_mhad_m.mhad003
                  LET g_ref_fields[4] = g_mhad_d[l_ac].mhad004

                  CALL ap_ref_array2(g_ref_fields," SELECT mhadl006,mhadl007 FROM mhadl_t WHERE mhadlent = '"
                      ||g_enterprise||"' AND mhadl001 = ?  AND mhadl002 = ?  AND mhadl003 = ?  AND mhadl004 = ? AND mhadl005 = '"||g_dlang||"'","") RETURNING g_rtn_fields
                  LET g_mhad_d[l_ac].mhadl006 = g_rtn_fields[1]
                  LET g_mhad_d[l_ac].mhadl007 = g_rtn_fields[2]

                  DISPLAY BY NAME g_mhad_d[l_ac].mhadl006
                  DISPLAY BY NAME g_mhad_d[l_ac].mhadl007
               END IF
            END IF
               #END add-point
            END IF
 
 
 
 
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_mhad_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL amhi204_b_fill(g_wc2) #test 
            #如果一直都在單頭則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm' 
            #add-point:資料輸入前 name="input.body.before_input"

            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row name="input.body.before_row2"

            #end add-point  
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL amhi204_idx_chk()
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN amhi204_cl USING g_enterprise,g_mhad_m.mhad001,g_mhad_m.mhad002,g_mhad_m.mhad003                          
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN amhi204_cl:" 
                  LET g_errparam.code   =  STATUS 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CLOSE amhi204_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            IF g_rec_b >= l_ac 
               AND g_mhad_d[l_ac].mhad004 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_mhad_d_t.* = g_mhad_d[l_ac].*  #BACKUP
               LET g_mhad_d_o.* = g_mhad_d[l_ac].*  #BACKUP
               CALL amhi204_set_entry_b(l_cmd)
               #add-point:set_entry_b後 name="input.body.before_row.set_entry_b"

               #end add-point
               CALL amhi204_set_no_entry_b(l_cmd)
               OPEN amhi204_bcl USING g_enterprise,g_mhad_m.mhad001,
                                                g_mhad_m.mhad002,
                                                g_mhad_m.mhad003,
 
                                                g_mhad_d_t.mhad004
 
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN amhi204_bcl:" 
                  LET g_errparam.code   =  STATUS 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  LET l_lock_sw='Y'
               ELSE
                  FETCH amhi204_bcl INTO g_mhad_d[l_ac].mhadstus,g_mhad_d[l_ac].mhadunit,g_mhad_d[l_ac].mhad004, 
                      g_mhad_d[l_ac].mhad009,g_mhad_d[l_ac].mhad005,g_mhad_d[l_ac].mhad006,g_mhad_d[l_ac].mhad007, 
                      g_mhad_d[l_ac].mhad008,g_mhad2_d[l_ac].mhad004,g_mhad2_d[l_ac].mhadownid,g_mhad2_d[l_ac].mhadowndp, 
                      g_mhad2_d[l_ac].mhadcrtid,g_mhad2_d[l_ac].mhadcrtdp,g_mhad2_d[l_ac].mhadcrtdt, 
                      g_mhad2_d[l_ac].mhadmodid,g_mhad2_d[l_ac].mhadmoddt
                  IF SQLCA.sqlcode THEN
                      INITIALIZE g_errparam TO NULL 
                      LET g_errparam.extend = g_mhad_d_t.mhad004,":",SQLERRMESSAGE 
                      LET g_errparam.code   = SQLCA.sqlcode 
                      LET g_errparam.popup  = TRUE 
                      CALL cl_err()
                      LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_mhad_d_mask_o[l_ac].* =  g_mhad_d[l_ac].*
                  CALL amhi204_mhad_t_mask()
                  LET g_mhad_d_mask_n[l_ac].* =  g_mhad_d[l_ac].*
                  
                  CALL amhi204_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"

            #end add-point  
            LET g_detail_multi_table_t.mhadl001 = g_mhad_m.mhad001
LET g_detail_multi_table_t.mhadl002 = g_mhad_m.mhad002
LET g_detail_multi_table_t.mhadl003 = g_mhad_m.mhad003
LET g_detail_multi_table_t.mhadl004 = g_mhad_d[l_ac].mhad004
LET g_detail_multi_table_t.mhadl005 = g_dlang
LET g_detail_multi_table_t.mhadl006 = g_mhad_d[l_ac].mhadl006
LET g_detail_multi_table_t.mhadl007 = g_mhad_d[l_ac].mhadl007
 
        
         BEFORE INSERT
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            INITIALIZE g_mhad_d_t.* TO NULL
            INITIALIZE g_mhad_d_o.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_mhad_d[l_ac].* TO NULL
            #公用欄位預設值
            #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_mhad2_d[l_ac].mhadownid = g_user
      LET g_mhad2_d[l_ac].mhadowndp = g_dept
      LET g_mhad2_d[l_ac].mhadcrtid = g_user
      LET g_mhad2_d[l_ac].mhadcrtdp = g_dept 
      LET g_mhad2_d[l_ac].mhadcrtdt = cl_get_current()
      LET g_mhad2_d[l_ac].mhadmodid = g_user
      LET g_mhad2_d[l_ac].mhadmoddt = cl_get_current()
      LET g_mhad_d[l_ac].mhadstus = ''
 
 
  
            #一般欄位預設值
                  LET g_mhad_d[l_ac].mhadstus = "Y"
      LET g_mhad_d[l_ac].mhad005 = "0"
      LET g_mhad_d[l_ac].mhad006 = "0"
      LET g_mhad_d[l_ac].mhad007 = "0"
      LET g_mhad_d[l_ac].mhad008 = "0"
 
            
            #add-point:modify段before備份 name="input.body.before_insert.before_bak"

            #end add-point
            LET g_mhad_d_t.* = g_mhad_d[l_ac].*     #新輸入資料
            LET g_mhad_d_o.* = g_mhad_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL amhi204_set_entry_b(l_cmd)
            #add-point:set_entry_b後 name="input.body.before_insert.set_entry_b"

            #end add-point
            CALL amhi204_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_mhad_d[li_reproduce_target].* = g_mhad_d[li_reproduce].*
               LET g_mhad2_d[li_reproduce_target].* = g_mhad2_d[li_reproduce].*
 
               LET g_mhad_d[g_mhad_d.getLength()].mhad004 = NULL
 
            END IF
            LET g_detail_multi_table_t.mhadl001 = g_mhad_m.mhad001
LET g_detail_multi_table_t.mhadl002 = g_mhad_m.mhad002
LET g_detail_multi_table_t.mhadl003 = g_mhad_m.mhad003
LET g_detail_multi_table_t.mhadl004 = g_mhad_d[l_ac].mhad004
LET g_detail_multi_table_t.mhadl005 = g_dlang
LET g_detail_multi_table_t.mhadl006 = g_mhad_d[l_ac].mhadl006
LET g_detail_multi_table_t.mhadl007 = g_mhad_d[l_ac].mhadl007
 
            #add-point:modify段before insert name="input.body.before_insert"
            LET g_mhad_d[l_ac].mhadunit = g_site
            CALL amhi204_mhadunit_ref()
            if cl_null(g_mhad_m.mhad003) then
               SELECT count(*) INTO l_cnt FROM mhab_t WHERE mhab001=g_mhad_m.mhad001
                  AND mhab002 = g_mhad_m.mhad002 AND mhabent = g_enterprise 
                  AND mhabsite = g_mhad_m.mhadsite AND mhabstus='Y'
            else
               SELECT count(*) INTO l_cnt FROM mhac_t WHERE mhac001=g_mhad_m.mhad001
                  AND mhac002 = g_mhad_m.mhad002 AND mhacent = g_enterprise
                  and mhac003 = g_mhad_m.mhad003            
                  AND mhacsite = g_mhad_m.mhadsite AND mhacstus='Y'
            end if      
            IF l_cnt<=0 THEN
               LET g_mhad_d[l_ac].mhadstus = "N" 
            end if
            LET g_mhad_d_t.mhadstus=g_mhad_d[l_ac].mhadstus            
            #end add-point  
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM mhad_t 
             WHERE mhadent = g_enterprise AND mhad001 = g_mhad_m.mhad001
               AND mhad002 = g_mhad_m.mhad002
               AND mhad003 = g_mhad_m.mhad003
 
               AND mhad004 = g_mhad_d[l_ac].mhad004
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               #add-point:單身新增前 name="input.body.b_insert"

               #end add-point
               INSERT INTO mhad_t
                           (mhadent,
                            mhadsite,mhad001,mhad002,mhad003,
                            mhad004
                            ,mhadstus,mhadunit,mhad009,mhad005,mhad006,mhad007,mhad008,mhadownid,mhadowndp,mhadcrtid,mhadcrtdp,mhadcrtdt,mhadmodid,mhadmoddt) 
                     VALUES(g_enterprise,
                            g_mhad_m.mhadsite,g_mhad_m.mhad001,g_mhad_m.mhad002,g_mhad_m.mhad003,
                            g_mhad_d[l_ac].mhad004
                            ,g_mhad_d[l_ac].mhadstus,g_mhad_d[l_ac].mhadunit,g_mhad_d[l_ac].mhad009, 
                                g_mhad_d[l_ac].mhad005,g_mhad_d[l_ac].mhad006,g_mhad_d[l_ac].mhad007, 
                                g_mhad_d[l_ac].mhad008,g_mhad2_d[l_ac].mhadownid,g_mhad2_d[l_ac].mhadowndp, 
                                g_mhad2_d[l_ac].mhadcrtid,g_mhad2_d[l_ac].mhadcrtdp,g_mhad2_d[l_ac].mhadcrtdt, 
                                g_mhad2_d[l_ac].mhadmodid,g_mhad2_d[l_ac].mhadmoddt)
               #add-point:單身新增中 name="input.body.m_insert"

               #end add-point
               LET p_cmd = 'u'
               LET g_master_insert = TRUE
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_mhad_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "mhad_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #資料多語言用-增/改
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_mhad_m.mhad001 = g_detail_multi_table_t.mhadl001 AND
         g_mhad_m.mhad002 = g_detail_multi_table_t.mhadl002 AND
         g_mhad_m.mhad003 = g_detail_multi_table_t.mhadl003 AND
         g_mhad_d[l_ac].mhad004 = g_detail_multi_table_t.mhadl004 AND
         g_mhad_d[l_ac].mhadl006 = g_detail_multi_table_t.mhadl006 AND
         g_mhad_d[l_ac].mhadl007 = g_detail_multi_table_t.mhadl007 THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'mhadlent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_mhad_m.mhad001
            LET l_field_keys[02] = 'mhadl001'
            LET l_var_keys_bak[02] = g_detail_multi_table_t.mhadl001
            LET l_var_keys[03] = g_mhad_m.mhad002
            LET l_field_keys[03] = 'mhadl002'
            LET l_var_keys_bak[03] = g_detail_multi_table_t.mhadl002
            LET l_var_keys[04] = g_mhad_m.mhad003
            LET l_field_keys[04] = 'mhadl003'
            LET l_var_keys_bak[04] = g_detail_multi_table_t.mhadl003
            LET l_var_keys[05] = g_mhad_d[l_ac].mhad004
            LET l_field_keys[05] = 'mhadl004'
            LET l_var_keys_bak[05] = g_detail_multi_table_t.mhadl004
            LET l_var_keys[06] = g_dlang
            LET l_field_keys[06] = 'mhadl005'
            LET l_var_keys_bak[06] = g_detail_multi_table_t.mhadl005
            LET l_vars[01] = g_mhad_d[l_ac].mhadl006
            LET l_fields[01] = 'mhadl006'
            LET l_vars[02] = g_mhad_d[l_ac].mhadl007
            LET l_fields[02] = 'mhadl007'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'mhadl_t')
         END IF 
 
               #add-point:input段-after_insert name="input.body.a_insert"
               CALL amhi204_sum() RETURNING l_success
               IF l_success=FALSE THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  g_errno
                  LET g_errparam.extend = "update:"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
               call amhi204_update_ooef() RETURNING l_success
               IF l_success=FALSE THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
            END IF
            
            #add-point:單身新增後 name="input.body.after_insert"

            #end add-point
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete"

               #end add-point
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   =  -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               IF amhi204_before_delete() THEN 
                  INITIALIZE l_var_keys_bak TO NULL 
                  INITIALIZE l_field_keys TO NULL 
                  LET l_field_keys[01] = 'mhadlent'
                  LET l_var_keys_bak[01] = g_enterprise
                  LET l_field_keys[02] = 'mhadl001'
                  LET l_var_keys_bak[02] = g_detail_multi_table_t.mhadl001
                  LET l_field_keys[03] = 'mhadl002'
                  LET l_var_keys_bak[03] = g_detail_multi_table_t.mhadl002
                  LET l_field_keys[04] = 'mhadl003'
                  LET l_var_keys_bak[04] = g_detail_multi_table_t.mhadl003
                  LET l_field_keys[05] = 'mhadl004'
                  LET l_var_keys_bak[05] = g_detail_multi_table_t.mhadl004
                  CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'mhadl_t')
 
				  
                  #取得該筆資料key值
                  INITIALIZE gs_keys TO NULL
                  LET gs_keys[01] = g_mhad_m.mhad001
                  LET gs_keys[gs_keys.getLength()+1] = g_mhad_m.mhad002
                  LET gs_keys[gs_keys.getLength()+1] = g_mhad_m.mhad003
 
                  LET gs_keys[gs_keys.getLength()+1] = g_mhad_d_t.mhad004
 
			   
                  #刪除下層單身
                  IF NOT amhi204_key_delete_b(gs_keys,'mhad_t') THEN
                     CALL s_transaction_end('N','0')
                     CLOSE amhi204_bcl
                     CANCEL DELETE
                  END IF
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE amhi204_bcl
               LET l_count = g_mhad_d.getLength()
            END IF 
            
            #add-point:單身刪除後 name="input.body.a_delete"

            #end add-point
              
         AFTER DELETE 
            IF l_cmd <> 'd' THEN
               #add-point:單身AFTER DELETE  name="input.body.after_delete"

               #end add-point
            END IF
            #如果是最後一筆
            IF l_ac = (g_mhad_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
            
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhadstus
            #add-point:BEFORE FIELD mhadstus name="input.b.page1.mhadstus"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mhadstus
            
            #add-point:AFTER FIELD mhadstus name="input.a.page1.mhadstus"
#            IF  g_mhad_d[l_ac].mhadstus IS NOT NULL THEN 
#               IF l_cmd='a' or ( l_cmd = 'u' AND (g_mhad_d[l_ac].mhadstus != g_mhad_d_t.mhadstus OR g_mhad_d_t.mhadstus IS NULL )) THEN 
#                  
#                  CALL amhi204_mhadstus()
#                  RETURNING g_success,g_errno
#                  IF g_success THEN
#
#                  ELSE
#                     INITIALIZE g_errparam TO NULL
#                     LET g_errparam.code = g_errno
#                     LET g_errparam.extend = g_mhad_d[l_ac].mhadstus
#                     LET g_errparam.popup = TRUE
#                     CALL cl_err()
#
#                     LET g_mhad_d[l_ac].mhadstus = g_mhad_d_t.mhadstus
#                     NEXT FIELD mhadstus                      
#                  END IF
#               END IF
#            END IF
#   MARKED BY LANJJ 2015-10-28 顾问：刘鑫
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mhadstus
            #add-point:ON CHANGE mhadstus name="input.g.page1.mhadstus"

            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mhadunit
            
            #add-point:AFTER FIELD mhadunit name="input.a.page1.mhadunit"
            LET g_mhad_d[l_ac].mhadunit_desc = NULL
            DISPLAY  g_mhad_d[l_ac].mhadunit_desc to s_detail1[l_ac].mhadunit_desc
            IF NOT cl_null(g_mhad_d[l_ac].mhadunit) THEN
#此段落由子樣板a19產生
#               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
#               INITIALIZE g_chkparam.* TO NULL
#
#               #設定g_chkparam.*的參數
#               LET g_chkparam.arg1 = g_mhad_d[l_ac].mhadunit
#               LET g_chkparam.arg2 = '8'
#               LET g_chkparam.arg3 = g_site
#
#
#               #呼叫檢查存在並帶值的library
#               IF cl_chk_exist("v_ooed004") THEN
#                  #檢查成功時後續處理
#                  #LET  = g_chkparam.return1
#                  #DISPLAY BY NAME
#
#               ELSE
#                  #檢查失敗時後續處理
#                  LET g_mhad_d[l_ac].mhadunit = g_mhad_d_t.mhadunit
#                  CALL amhi204_mhadunit_ref()
#                  NEXT FIELD CURRENT
#               END IF
               CALL s_aooi500_chk(g_prog,'mhadunit',g_mhad_d[l_ac].mhadunit,g_mhad_m.mhadsite) RETURNING l_success,l_errno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = ''
                  LET g_errparam.code   = l_errno
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
               
                  LET g_mhad_m.mhadsite = g_mhad_m_t.mhadsite
                  CALL amhi204_mhadsite_ref()
                  NEXT FIELD CURRENT
               END IF
            END IF
            CALL amhi204_mhadunit_ref()

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhadunit
            #add-point:BEFORE FIELD mhadunit name="input.b.page1.mhadunit"

            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mhadunit
            #add-point:ON CHANGE mhadunit name="input.g.page1.mhadunit"

            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhad004
            #add-point:BEFORE FIELD mhad004 name="input.b.page1.mhad004"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mhad004
            
            #add-point:AFTER FIELD mhad004 name="input.a.page1.mhad004"
            #此段落由子樣板a05產生
            IF  g_mhad_m.mhad001 IS NOT NULL AND g_mhad_m.mhad002 IS NOT NULL AND g_mhad_m.mhad003 IS NOT NULL AND g_mhad_d[g_detail_idx].mhad004 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_mhad_m.mhad001 != g_mhad001_t OR g_mhad_m.mhad002 != g_mhad002_t OR g_mhad_m.mhad003 != g_mhad003_t OR g_mhad_d[g_detail_idx].mhad004 != g_mhad_d_t.mhad004)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM mhad_t WHERE "||"mhadent = '" ||g_enterprise|| "' AND "||"mhad001 = '"||g_mhad_m.mhad001 ||"' AND "|| "mhad002 = '"||g_mhad_m.mhad002 ||"' AND "|| "mhad003 = '"||g_mhad_m.mhad003 ||"' AND "|| "mhad004 = '"||g_mhad_d[g_detail_idx].mhad004 ||"'",'std-00004',0) THEN 
                     LET g_mhad_d[l_ac].mhad004 = g_mhad_d_t.mhad004
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mhad004
            #add-point:ON CHANGE mhad004 name="input.g.page1.mhad004"

            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhad009
            #add-point:BEFORE FIELD mhad009 name="input.b.page1.mhad009"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mhad009
            
            #add-point:AFTER FIELD mhad009 name="input.a.page1.mhad009"

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mhad009
            #add-point:ON CHANGE mhad009 name="input.g.page1.mhad009"

            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhadl006
            #add-point:BEFORE FIELD mhadl006 name="input.b.page1.mhadl006"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mhadl006
            
            #add-point:AFTER FIELD mhadl006 name="input.a.page1.mhadl006"

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mhadl006
            #add-point:ON CHANGE mhadl006 name="input.g.page1.mhadl006"

            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhadl007
            #add-point:BEFORE FIELD mhadl007 name="input.b.page1.mhadl007"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mhadl007
            
            #add-point:AFTER FIELD mhadl007 name="input.a.page1.mhadl007"

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mhadl007
            #add-point:ON CHANGE mhadl007 name="input.g.page1.mhadl007"

            #END add-point 
         #160506-00009#3 20160510 add by beckxie---S
         AFTER FIELD mhad010
            
            #add-point:AFTER FIELD mhad010 name="input.a.page1.mhad010"
            IF NOT cl_null(g_mhad_d[l_ac].mhad010) THEN 
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_mhad_d[l_ac].mhad010 != g_mhad_d_o.mhad010 OR g_mhad_d_o.mhad010 IS NULL )) THEN
                  #應用 a17 樣板自動產生(Version:3)
                  #欄位存在檢查
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  IF NOT s_azzi650_chk_exist('2145',g_mhad_d[l_ac].mhad010) THEN
                     LET g_mhad_d[l_ac].mhad010 = g_mhad_d_o.mhad010         
                     CALL s_desc_get_acc_desc('2145',g_mhad_d[l_ac].mhad010)  RETURNING g_mhad_d[l_ac].mhad010_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF   
            END IF 
            CALL s_desc_get_acc_desc('2145',g_mhad_d[l_ac].mhad010)  RETURNING g_mhad_d[l_ac].mhad010_desc
            DISPLAY BY NAME g_mhad_d[l_ac].mhad010_desc
            LET g_mhad_d_o.mhad010 = g_mhad_d[l_ac].mhad010
            #END add-point
         #160506-00009#3 20160510 add by beckxie---E
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhad005
            #add-point:BEFORE FIELD mhad005 name="input.b.page1.mhad005"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mhad005
            
            #add-point:AFTER FIELD mhad005 name="input.a.page1.mhad005"

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mhad005
            #add-point:ON CHANGE mhad005 name="input.g.page1.mhad005"

            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mhad006
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_mhad_d[l_ac].mhad006,"0","1","","","azz-00079",1) THEN
               NEXT FIELD mhad006
            END IF 
 
 
 
            #add-point:AFTER FIELD mhad006 name="input.a.page1.mhad006"
            IF  g_mhad_d[l_ac].mhad006 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( g_mhad_d[l_ac].mhad006 != g_mhad_d_t.mhad006 OR g_mhad_d_t.mhad006 IS null)) THEN 
                  CALL amhi204_count_mhad005()
                  CALL amhi204_chk_mhad006() RETURNING l_success
                  IF l_success=false THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_mhad_d[l_ac].mhad006
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     let g_mhad_d[l_ac].mhad006=g_mhad_d_t.mhad006
                     CALL amhi204_count_mhad005()
                     NEXT FIELD mhad006
                  END IF
               END IF
               
            END IF
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhad006
            #add-point:BEFORE FIELD mhad006 name="input.b.page1.mhad006"

            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mhad006
            #add-point:ON CHANGE mhad006 name="input.g.page1.mhad006"

            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mhad007
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_mhad_d[l_ac].mhad007,"0","1","","","azz-00079",1) THEN
               NEXT FIELD mhad007
            END IF 
 
 
 
            #add-point:AFTER FIELD mhad007 name="input.a.page1.mhad007"
            IF  g_mhad_d[l_ac].mhad007 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( g_mhad_d[l_ac].mhad007 != g_mhad_d_t.mhad007 OR g_mhad_d_t.mhad007 IS null)) THEN 
                  CALL amhi204_count_mhad007()
                  CALL amhi204_chk_mhad006() RETURNING l_success
                  IF l_success=false THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_mhad_d[l_ac].mhad007
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     let g_mhad_d[l_ac].mhad007=g_mhad_d_t.mhad007
                     CALL amhi204_count_mhad007()
                     NEXT FIELD mhad007
                  END IF
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhad007
            #add-point:BEFORE FIELD mhad007 name="input.b.page1.mhad007"

            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mhad007
            #add-point:ON CHANGE mhad007 name="input.g.page1.mhad007"

            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD mhad008
            #add-point:BEFORE FIELD mhad008 name="input.b.page1.mhad008"

            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD mhad008
            
            #add-point:AFTER FIELD mhad008 name="input.a.page1.mhad008"

            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE mhad008
            #add-point:ON CHANGE mhad008 name="input.g.page1.mhad008"

            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.mhadstus
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhadstus
            #add-point:ON ACTION controlp INFIELD mhadstus name="input.c.page1.mhadstus"

            #END add-point
 
 
         #Ctrlp:input.c.page1.mhadunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhadunit
            #add-point:ON ACTION controlp INFIELD mhadunit name="input.c.page1.mhadunit"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_mhad_d[l_ac].mhadunit             #給予default值

            #給予arg
#            LET g_qryparam.arg1 = g_site #
#            LET g_qryparam.arg2 = "8" #
#
#            CALL q_ooed004()                                #呼叫開窗
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'mhadunit',g_mhad_m.mhadsite,'i') #150308-00001#3 150309 pomelo add 'i'
            CALL q_ooef001_24()

            LET g_mhad_d[l_ac].mhadunit = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_mhad_d[l_ac].mhadunit TO mhadunit              #顯示到畫面上
            call amhi204_mhadunit_ref()
            NEXT FIELD mhadunit                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.mhad004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhad004
            #add-point:ON ACTION controlp INFIELD mhad004 name="input.c.page1.mhad004"

            #END add-point
 
 
         #Ctrlp:input.c.page1.mhad009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhad009
            #add-point:ON ACTION controlp INFIELD mhad009 name="input.c.page1.mhad009"

            #END add-point
 
 
         #Ctrlp:input.c.page1.mhadl006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhadl006
            #add-point:ON ACTION controlp INFIELD mhadl006 name="input.c.page1.mhadl006"

            #END add-point
 
 
         #Ctrlp:input.c.page1.mhadl007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhadl007
            #add-point:ON ACTION controlp INFIELD mhadl007 name="input.c.page1.mhadl007"

            #END add-point
         #160506-00009#3 20160510 add by beckxie---S
         #Ctrlp:input.c.page1.mhad010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhad010
            #add-point:ON ACTION controlp INFIELD mhad010 name="input.c.page1.mhad010"
            #應用 a07 樣板自動產生(Version:3)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
 
            LET g_qryparam.default1 = g_mhad_d[l_ac].mhad010             #給予default值
            #給予arg
            LET g_qryparam.arg1 = "2145" #s
 
 
            CALL q_oocq002()                                #呼叫開窗
 
            LET g_mhad_d[l_ac].mhad010 = g_qryparam.return1              
            #LET g_mhbc_m.oocq002 = g_qryparam.return2 
            DISPLAY g_mhad_d[l_ac].mhad010 TO mhad010             #
            CALL s_desc_get_acc_desc('2145',g_mhad_d[l_ac].mhad010) RETURNING g_mhad_d[l_ac].mhad010_desc
            DISPLAY BY NAME g_mhad_d[l_ac].mhad010_desc          
            NEXT FIELD mhad010                          #返回原欄位
            #END add-point
         #160506-00009#3 20160510 add by beckxie---E
         
         #Ctrlp:input.c.page1.mhad005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhad005
            #add-point:ON ACTION controlp INFIELD mhad005 name="input.c.page1.mhad005"

            #END add-point
 
 
         #Ctrlp:input.c.page1.mhad006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhad006
            #add-point:ON ACTION controlp INFIELD mhad006 name="input.c.page1.mhad006"

            #END add-point
 
 
         #Ctrlp:input.c.page1.mhad007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhad007
            #add-point:ON ACTION controlp INFIELD mhad007 name="input.c.page1.mhad007"

            #END add-point
 
 
         #Ctrlp:input.c.page1.mhad008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD mhad008
            #add-point:ON ACTION controlp INFIELD mhad008 name="input.c.page1.mhad008"

            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_mhad_d[l_ac].* = g_mhad_d_t.*
               CLOSE amhi204_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_mhad_d[l_ac].mhad004 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_mhad_d[l_ac].* = g_mhad_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               LET g_mhad2_d[l_ac].mhadmodid = g_user 
LET g_mhad2_d[l_ac].mhadmoddt = cl_get_current()
LET g_mhad2_d[l_ac].mhadmodid_desc = cl_get_username(g_mhad2_d[l_ac].mhadmodid)
            
               #add-point:單身修改前 name="input.body.b_update"

               #end add-point
         
               #將遮罩欄位還原
               CALL amhi204_mhad_t_mask_restore('restore_mask_o')
         
               UPDATE mhad_t SET (mhad001,mhad002,mhad003,mhadstus,mhadunit,mhad004,mhad009,mhad005, 
                   mhad006,mhad007,mhad008,mhadownid,mhadowndp,mhadcrtid,mhadcrtdp,mhadcrtdt,mhadmodid, 
                   mhadmoddt) = (g_mhad_m.mhad001,g_mhad_m.mhad002,g_mhad_m.mhad003,g_mhad_d[l_ac].mhadstus, 
                   g_mhad_d[l_ac].mhadunit,g_mhad_d[l_ac].mhad004,g_mhad_d[l_ac].mhad009,g_mhad_d[l_ac].mhad005, 
                   g_mhad_d[l_ac].mhad006,g_mhad_d[l_ac].mhad007,g_mhad_d[l_ac].mhad008,g_mhad2_d[l_ac].mhadownid, 
                   g_mhad2_d[l_ac].mhadowndp,g_mhad2_d[l_ac].mhadcrtid,g_mhad2_d[l_ac].mhadcrtdp,g_mhad2_d[l_ac].mhadcrtdt, 
                   g_mhad2_d[l_ac].mhadmodid,g_mhad2_d[l_ac].mhadmoddt)
                WHERE mhadent = g_enterprise AND mhad001 = g_mhad_m.mhad001 
                 AND mhad002 = g_mhad_m.mhad002 
                 AND mhad003 = g_mhad_m.mhad003 
 
                 AND mhad004 = g_mhad_d_t.mhad004 #項次   
 
                 
               #add-point:單身修改中 name="input.body.m_update"
               IF SQLCA.sqlerrd[3] = 0 OR SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "std-00009"
                  LET g_errparam.extend = "mhad_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  LET SQLCA.sqlerrd[3] =null
                  LET SQLCA.sqlcode = NULL
                  CALL amhi204_sum() RETURNING l_success
                  IF l_success=false THEN
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = "update"
                        LET g_errparam.popup = TRUE
                        CALL cl_err()

                        CALL s_transaction_end('N','0')
                        RETURN
                     ELSE
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = g_errno
                        LET g_errparam.extend = "update"
                        LET g_errparam.popup = TRUE
                        CALL cl_err()

                        NEXT FIELD CURRENT
                     END IF                      
                  END IF
                  call amhi204_update_ooef() RETURNING l_success
                  IF l_success=false THEN
                     IF SQLCA.sqlcode THEN
                        CALL s_transaction_end('N','0')
                        RETURN
                     ELSE
                        NEXT FIELD CURRENT
                     END IF                      
                  END IF
               END IF
               LET SQLCA.sqlerrd[3] =null
               LET SQLCA.sqlcode = NULL
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "mhad_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   INITIALIZE g_errparam TO NULL 
                  #   LET g_errparam.extend = "mhad_t" 
                  #   LET g_errparam.code   = SQLCA.sqlcode 
                  #   LET g_errparam.popup  = TRUE 
                  #   CALL cl_err()
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_mhad_m.mhad001
               LET gs_keys_bak[1] = g_mhad001_t
               LET gs_keys[2] = g_mhad_m.mhad002
               LET gs_keys_bak[2] = g_mhad002_t
               LET gs_keys[3] = g_mhad_m.mhad003
               LET gs_keys_bak[3] = g_mhad003_t
               LET gs_keys[4] = g_mhad_d[g_detail_idx].mhad004
               LET gs_keys_bak[4] = g_mhad_d_t.mhad004
               CALL amhi204_update_b('mhad_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                              INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_mhad_m.mhad001 = g_detail_multi_table_t.mhadl001 AND
         g_mhad_m.mhad002 = g_detail_multi_table_t.mhadl002 AND
         g_mhad_m.mhad003 = g_detail_multi_table_t.mhadl003 AND
         g_mhad_d[l_ac].mhad004 = g_detail_multi_table_t.mhadl004 AND
         g_mhad_d[l_ac].mhadl006 = g_detail_multi_table_t.mhadl006 AND
         g_mhad_d[l_ac].mhadl007 = g_detail_multi_table_t.mhadl007 THEN
         ELSE 
            LET l_var_keys[01] = g_enterprise
            LET l_field_keys[01] = 'mhadlent'
            LET l_var_keys_bak[01] = g_enterprise
            LET l_var_keys[02] = g_mhad_m.mhad001
            LET l_field_keys[02] = 'mhadl001'
            LET l_var_keys_bak[02] = g_detail_multi_table_t.mhadl001
            LET l_var_keys[03] = g_mhad_m.mhad002
            LET l_field_keys[03] = 'mhadl002'
            LET l_var_keys_bak[03] = g_detail_multi_table_t.mhadl002
            LET l_var_keys[04] = g_mhad_m.mhad003
            LET l_field_keys[04] = 'mhadl003'
            LET l_var_keys_bak[04] = g_detail_multi_table_t.mhadl003
            LET l_var_keys[05] = g_mhad_d[l_ac].mhad004
            LET l_field_keys[05] = 'mhadl004'
            LET l_var_keys_bak[05] = g_detail_multi_table_t.mhadl004
            LET l_var_keys[06] = g_dlang
            LET l_field_keys[06] = 'mhadl005'
            LET l_var_keys_bak[06] = g_detail_multi_table_t.mhadl005
            LET l_vars[01] = g_mhad_d[l_ac].mhadl006
            LET l_fields[01] = 'mhadl006'
            LET l_vars[02] = g_mhad_d[l_ac].mhadl007
            LET l_fields[02] = 'mhadl007'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'mhadl_t')
         END IF 
 
                     #修改歷程記錄(單身修改)
                     LET g_log1 = util.JSON.stringify(g_mhad_m),util.JSON.stringify(g_mhad_d_t)
                     LET g_log2 = util.JSON.stringify(g_mhad_m),util.JSON.stringify(g_mhad_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL amhi204_mhad_t_mask_restore('restore_mask_n')
               
               #若Key欄位有變動
               LET ls_keys[01] = g_mhad_m.mhad001
               LET ls_keys[ls_keys.getLength()+1] = g_mhad_m.mhad002
               LET ls_keys[ls_keys.getLength()+1] = g_mhad_m.mhad003
 
               LET ls_keys[ls_keys.getLength()+1] = g_mhad_d_t.mhad004
 
               CALL amhi204_key_update_b(ls_keys)
               
               #add-point:單身修改後 name="input.body.a_update"

               #end add-point
            END IF
 
         AFTER ROW
            #add-point:input段after row name="input.body.after_row"

            #end add-point  
            LET l_ac = ARR_CURR()
            LET l_ac_t = l_ac
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_mhad_d[l_ac].* = g_mhad_d_t.*
               END IF
               CLOSE amhi204_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
 
            CLOSE amhi204_bcl
            CALL s_transaction_end('Y','0')
 
         AFTER INPUT
            #若單身還沒有輸入資料, 強制切換至單身
            IF g_mhad_d.getLength() = 0 THEN
               NEXT FIELD mhad004
            END IF
            #add-point:input段after input  name="input.body.after_input"
#            CALL amhi204_chk_mhad006() RETURNING l_success
#            IF l_success=false THEN
#               CALL cl_err('',g_errno,1)
#               NEXT FIELD CURRENT
#            END IF
            #end add-point    
            
         ON ACTION controlo   
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_mhad_d[li_reproduce_target].* = g_mhad_d[li_reproduce].*
               LET g_mhad2_d[li_reproduce_target].* = g_mhad2_d[li_reproduce].*
 
               LET g_mhad_d[li_reproduce_target].mhad004 = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_mhad_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_mhad_d.getLength()+1
            END IF
            
      END INPUT
 
 
      
      DISPLAY ARRAY g_mhad2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
      
         BEFORE ROW
            CALL amhi204_b_fill(g_wc2) #test 
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = g_detail_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_page = 2
            CALL amhi204_idx_chk()
            CALL amhi204_ui_detailshow()
        
         BEFORE DISPLAY 
            CALL FGL_SET_ARR_CURR(g_detail_idx)      
         
         #add-point:page2自定義行為 name="input.body2.action"

         #end add-point
         
      END DISPLAY
 
      
 
      
 
    
      #add-point:input段more_input name="input.more_inputarray"

      #end add-point    
      
      BEFORE DIALOG
         #CALL cl_err_collect_init()    
         #add-point:input段before_dialog name="input.before_dialog"
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
         CALL DIALOG.setCurrentRow("s_detail2",g_detail_idx)
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD mhadsite
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD mhadstus
               WHEN "s_detail2"
                  NEXT FIELD mhad004_2
 
            END CASE
         END IF
         #end add-point 
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
         CALL DIALOG.setCurrentRow("s_detail2",g_detail_idx)
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD mhad001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD mhadstus
               WHEN "s_detail2"
                  NEXT FIELD mhad004_2
 
            END CASE
         END IF
   
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
   
   #將畫面指標同步到當下指定的位置上
   CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)
   CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
 
   
   #add-point:input段after_input name="input.after_input"

   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="amhi204.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION amhi204_show()
   #add-point:show段define name="show.define_customerization"
   
   #end add-point
   #add-point:show段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="show.before"
   
   #end add-point
   
   IF g_bfill = "Y" THEN
      CALL amhi204_b_fill(g_wc2) #第一階單身填充
      CALL amhi204_b_fill2('0')  #第二階單身填充
   END IF
   
   
 
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL amhi204_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   DISPLAY BY NAME g_mhad_m.mhadsite,g_mhad_m.mhadsite_desc,g_mhad_m.mhad001,g_mhad_m.mhad001_desc,g_mhad_m.mhad002, 
       g_mhad_m.mhad002_desc,g_mhad_m.mhad003,g_mhad_m.mhad003_desc
 
   CALL amhi204_ref_show()
 
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()  
 
   #add-point:show段之後 name="show.after"
   
   #end add-point   
   
END FUNCTION
 
{</section>}
 
{<section id="amhi204.ref_show" >}
#+ 帶出reference資料
PRIVATE FUNCTION amhi204_ref_show()
   #add-point:ref_show段define name="ref_show.define_customerization"
   
   #end add-point 
   DEFINE l_ac_t LIKE type_t.num10 #l_ac暫存用
   #add-point:ref_show段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ref_show.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="ref_show.pre_function"
   
   #end add-point
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:ref_show段m_reference name="ref_show.head.reference"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mhad_m.mhadsite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mhad_m.mhadsite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mhad_m.mhadsite_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mhad_m.mhad001
            CALL ap_ref_array2(g_ref_fields,"SELECT mhaal003 FROM mhaal_t WHERE mhaalent='"||g_enterprise||"' AND mhaal001=? AND mhaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mhad_m.mhad001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mhad_m.mhad001_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mhad_m.mhad001
            LET g_ref_fields[2] = g_mhad_m.mhad002
            CALL ap_ref_array2(g_ref_fields,"SELECT mhabl004 FROM mhabl_t WHERE mhablent='"||g_enterprise||"' AND mhabl001=? AND mhabl002=? AND mhabl003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mhad_m.mhad002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mhad_m.mhad002_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mhad_m.mhad001
            LET g_ref_fields[2] = g_mhad_m.mhad002
            LET g_ref_fields[3] = g_mhad_m.mhad003
            CALL ap_ref_array2(g_ref_fields,"SELECT mhacl005 FROM mhacl_t WHERE mhaclent='"||g_enterprise||"' AND mhacl001=? AND mhacl002=? AND mhacl003=? AND mhacl004='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mhad_m.mhad003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mhad_m.mhad003_desc

   #end add-point
 
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_mhad_d.getLength()
      #add-point:ref_show段d_reference name="ref_show.body.reference"
   call amhi204_mhadunit_ref()
   INITIALIZE g_ref_fields TO NULL 
   LET g_ref_fields[1] = g_mhad_m.mhad001
   LET g_ref_fields[2] = g_mhad_m.mhad002
   LET g_ref_fields[3] = g_mhad_m.mhad003
   LET g_ref_fields[4] = g_mhad_d[l_ac].mhad004
   CALL ap_ref_array2(g_ref_fields," SELECT mhadl006 FROM mhadl_t WHERE mhadlent = '"||g_enterprise||"' AND mhadl001 = ? AND mhadl002 = ? AND mhadl003 = ? AND mhadl004 = ? AND mhadl005 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_mhad_d[l_ac].mhadl006 = g_rtn_fields[1] 
   DISPLAY BY NAME g_mhad_d[l_ac].mhadl006
   
      INITIALIZE g_ref_fields TO NULL 
      LET g_ref_fields[1] = g_mhad_m.mhad001
      LET g_ref_fields[2] = g_mhad_m.mhad002
      LET g_ref_fields[3] = g_mhad_m.mhad003
      LET g_ref_fields[4] = g_mhad_d[l_ac].mhad004
      CALL ap_ref_array2(g_ref_fields," SELECT mhadl007 FROM mhadl_t WHERE mhadlent = '"||g_enterprise||"' AND mhadl001 = ? AND mhadl002 = ? AND mhadl003 = ? AND mhadl004 = ? AND mhadl005 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
      LET g_mhad_d[l_ac].mhadl007 = g_rtn_fields[1] 
      DISPLAY BY NAME g_mhad_d[l_ac].mhadl007
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_mhad2_d.getLength()
      #add-point:ref_show段d2_reference name="ref_show.body2.reference"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mhad2_d[l_ac].mhadownid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_mhad2_d[l_ac].mhadownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mhad2_d[l_ac].mhadownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mhad2_d[l_ac].mhadowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mhad2_d[l_ac].mhadowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mhad2_d[l_ac].mhadowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mhad2_d[l_ac].mhadcrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_mhad2_d[l_ac].mhadcrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mhad2_d[l_ac].mhadcrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mhad2_d[l_ac].mhadcrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_mhad2_d[l_ac].mhadcrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mhad2_d[l_ac].mhadcrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_mhad2_d[l_ac].mhadmodid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_mhad2_d[l_ac].mhadmodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_mhad2_d[l_ac].mhadmodid_desc

      #end add-point
   END FOR
 
   
   #add-point:ref_show段自訂 name="ref_show.other_reference"
   
   #end add-point
   
   LET l_ac = l_ac_t
 
END FUNCTION
 
{</section>}
 
{<section id="amhi204.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION amhi204_reproduce()
   #add-point:reproduce段define name="reproduce.define_customerization"
   
   #end add-point
   DEFINE l_newno     LIKE mhad_t.mhad001 
   DEFINE l_oldno     LIKE mhad_t.mhad001 
   DEFINE l_newno02     LIKE mhad_t.mhad002 
   DEFINE l_oldno02     LIKE mhad_t.mhad002 
   DEFINE l_newno03     LIKE mhad_t.mhad003 
   DEFINE l_oldno03     LIKE mhad_t.mhad003 
 
   DEFINE l_master    RECORD LIKE mhad_t.*
   DEFINE l_detail    RECORD LIKE mhad_t.*
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
 
   IF g_mhad_m.mhad001 IS NULL
      OR g_mhad_m.mhad002 IS NULL
      OR g_mhad_m.mhad003 IS NULL
 
      THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   LET g_mhad001_t = g_mhad_m.mhad001
   LET g_mhad002_t = g_mhad_m.mhad002
   LET g_mhad003_t = g_mhad_m.mhad003
 
   
   LET g_mhad_m.mhad001 = ""
   LET g_mhad_m.mhad002 = ""
   LET g_mhad_m.mhad003 = ""
 
   LET g_master_insert = FALSE
   CALL amhi204_set_entry('a')
   CALL amhi204_set_no_entry('a')
   
   CALL cl_set_head_visible("","YES")
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   LET g_mhad_m.mhad001_desc = ''
   DISPLAY BY NAME g_mhad_m.mhad001_desc
   LET g_mhad_m.mhad002_desc = ''
   DISPLAY BY NAME g_mhad_m.mhad002_desc
   LET g_mhad_m.mhad003_desc = ''
   DISPLAY BY NAME g_mhad_m.mhad003_desc
   #end add-point
   
   #清空key欄位的desc
      LET g_mhad_m.mhad001_desc = ''
   DISPLAY BY NAME g_mhad_m.mhad001_desc
   LET g_mhad_m.mhad002_desc = ''
   DISPLAY BY NAME g_mhad_m.mhad002_desc
   LET g_mhad_m.mhad003_desc = ''
   DISPLAY BY NAME g_mhad_m.mhad003_desc
 
   
   CALL amhi204_input("r")
    
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      INITIALIZE g_mhad_m.* TO NULL
      INITIALIZE g_mhad_d TO NULL
      INITIALIZE g_mhad2_d TO NULL
 
      CALL amhi204_show()
      LET INT_FLAG = 0
      RETURN 
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL amhi204_set_act_visible()
   CALL amhi204_set_act_no_visible()
 
   #將新增的資料併入搜尋條件中
   LET g_state = "insert"
   
   LET g_mhad001_t = g_mhad_m.mhad001
   LET g_mhad002_t = g_mhad_m.mhad002
   LET g_mhad003_t = g_mhad_m.mhad003
 
   
   #組合新增資料的條件
   LET g_add_browse = " mhadent = '" ||g_enterprise|| "' AND",
                      " mhad001 = '", g_mhad_m.mhad001, "' "
                      ," AND mhad002 = '", g_mhad_m.mhad002, "' "
                      ," AND mhad003 = '", g_mhad_m.mhad003, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL amhi204_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   LET g_curr_diag = ui.DIALOG.getCurrent()
   CALL amhi204_idx_chk()
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   #功能已完成,通報訊息中心
   CALL amhi204_msgcentre_notify('reproduce')
   
END FUNCTION
 
{</section>}
 
{<section id="amhi204.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION amhi204_detail_reproduce()
   #add-point:delete段define name="detail_reproduce.define_customerization"
   
   #end add-point 
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE mhad_t.*
 
 
   #add-point:delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   DEFINE l_success   like type_t.num5
   let l_success = true
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE amhi204_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM mhad_t
    WHERE mhadent = g_enterprise AND mhad001 = g_mhad001_t
    AND mhad002 = g_mhad002_t
    AND mhad003 = g_mhad003_t
 
       INTO TEMP amhi204_detail
   
   #將key修正為調整後   
   UPDATE amhi204_detail 
      #更新key欄位
      SET mhad001 = g_mhad_m.mhad001
          , mhad002 = g_mhad_m.mhad002
          , mhad003 = g_mhad_m.mhad003
 
      #更新共用欄位
      #應用 a13 樣板自動產生(Version:4)
       , mhadownid = g_user 
       , mhadowndp = g_dept
       , mhadcrtid = g_user
       , mhadcrtdp = g_dept 
       , mhadcrtdt = ld_date
       , mhadmodid = g_user
       , mhadmoddt = ld_date
      #, mhadstus = "Y" 
 
 
 
                                       
   #將資料塞回原table   
   INSERT INTO mhad_t SELECT * FROM amhi204_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE amhi204_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
      #應用 a38 樣板自動產生(Version:4)
   #單身多語言複製
   DROP TABLE amhi204_detail_lang
   
   #add-point:單身複製前1 name="detail_reproduce.body.lang0.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE & INSERT 
   SELECT * FROM mhadl_t 
    WHERE mhadlent = g_enterprise AND mhadl001 = g_mhad001_t
      AND mhadl002 = g_mhad002_t      AND mhadl003 = g_mhad003_t
     INTO TEMP amhi204_detail_lang
 
   #將key修正為調整後   
   UPDATE amhi204_detail_lang 
      #更新key欄位
      SET mhadl001 = g_mhad_m.mhad001
          , mhadl002 = g_mhad_m.mhad002          , mhadl003 = g_mhad_m.mhad003
  
   #將資料塞回原table   
   INSERT INTO mhadl_t SELECT * FROM amhi204_detail_lang
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.lang0.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE amhi204_detail_lang
   
   #add-point:單身複製後1 name="detail_reproduce.lang0.table1.a_insert"
   call amhi204_sum() returning l_success
   IF l_success=false THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = g_errno
      LET g_errparam.extend = "update"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CALL s_transaction_end('N','0')
      RETURN
   END IF
   #end add-point
 
 
 
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_mhad001_t = g_mhad_m.mhad001
   LET g_mhad002_t = g_mhad_m.mhad002
   LET g_mhad003_t = g_mhad_m.mhad003
 
   
   DROP TABLE amhi204_detail
   
END FUNCTION
 
{</section>}
 
{<section id="amhi204.delete" >}
#+ 資料刪除
PRIVATE FUNCTION amhi204_delete()
   #add-point:delete段define name="delete.define_customerization"
   
   #end add-point
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   DEFINE  l_success       like type_t.num5
   define  l_cnt           like type_t.num5
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_mhad_m.mhad001 IS NULL
   OR g_mhad_m.mhad002 IS NULL
   OR g_mhad_m.mhad003 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   
 
   OPEN amhi204_cl USING g_enterprise,g_mhad_m.mhad001,g_mhad_m.mhad002,g_mhad_m.mhad003
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN amhi204_cl:" 
      LET g_errparam.code   =  STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE amhi204_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE amhi204_master_referesh USING g_mhad_m.mhad001,g_mhad_m.mhad002,g_mhad_m.mhad003 INTO g_mhad_m.mhadsite, 
       g_mhad_m.mhad001,g_mhad_m.mhad002,g_mhad_m.mhad003,g_mhad_m.mhadsite_desc,g_mhad_m.mhad001_desc, 
       g_mhad_m.mhad002_desc,g_mhad_m.mhad003_desc
   
   #遮罩相關處理
   LET g_mhad_m_mask_o.* =  g_mhad_m.*
   CALL amhi204_mhad_t_mask()
   LET g_mhad_m_mask_n.* =  g_mhad_m.*
   
   CALL amhi204_show()
 
   #單頭多語言資料備份
   
   
   IF cl_ask_del_master() THEN              #確認一下
      #應用 a47 樣板自動產生(Version:3)
      #刪除相關文件
      CALL amhi204_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
 
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      DELETE FROM mhadl_t WHERE mhadlent = g_enterprise AND mhadl001 = g_mhad_m.mhad001
                                                               AND mhadl002 = g_mhad_m.mhad002

                                                               AND mhadl003 = g_mhad_m.mhad003
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "mhadl_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

         CALL s_transaction_end('N','0')
         return
      END IF 
           
      #end add-point
      
      DELETE FROM mhad_t WHERE mhadent = g_enterprise AND mhad001 = g_mhad_m.mhad001
                                                               AND mhad002 = g_mhad_m.mhad002
                                                               AND mhad003 = g_mhad_m.mhad003
 
                                                               
      #add-point:單身刪除中 name="delete.body.m_delete"
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "mhad_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

         CALL s_transaction_end('N','0')
      ELSE
         LET SQLCA.sqlcode = NULL
         CALL amhi204_sum() RETURNING l_success
         IF l_success=FALSE THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = g_errno
            LET g_errparam.extend = "update"
            LET g_errparam.popup = FALSE
            CALL cl_err()

            CALL s_transaction_end('N','0')
         END IF
         CALL amhi204_update_ooef() returning l_success
         IF l_success=FALSE THEN
            CALL s_transaction_end('N','0')
         END IF          
      END IF
      #end add-point
      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "mhad_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
      END IF
 
      
  
      #add-point:單身刪除後  name="delete.body.a_delete"
      
      #end add-point
      
 
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
         INITIALIZE l_field_keys TO NULL 
         LET l_field_keys[01] = 'mhadlent'
         LET l_var_keys_bak[01] = g_enterprise
         LET l_field_keys[02] = 'mhadl001'
         LET l_var_keys_bak[02] = g_detail_multi_table_t.mhadl001
         LET l_field_keys[02] = 'mhadl002'
         LET l_var_keys_bak[02] = g_detail_multi_table_t.mhadl002
         LET l_field_keys[02] = 'mhadl003'
         LET l_var_keys_bak[02] = g_detail_multi_table_t.mhadl003
         CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'mhadl_t')
 
 
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      #頭先不紀錄
      #IF NOT cl_log_modified_record('','') THEN 
      #   CLOSE amhi204_cl
      #   CALL s_transaction_end('N','0')
      #   RETURN 
      #END IF
      
      CLEAR FORM
      CALL g_mhad_d.clear() 
      CALL g_mhad2_d.clear()       
 
     
      CALL amhi204_ui_browser_refresh()  
      #CALL amhi204_ui_headershow()  
      #CALL amhi204_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL amhi204_fetch('P')
      ELSE
         #LET g_wc = " 1=1"
         #LET g_wc2 = " 1=1"
         #CALL amhi204_browser_fill("F")
         CLEAR FORM
      END IF
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')   
   END IF
 
   CLOSE amhi204_cl
 
   #功能已完成,通報訊息中心
   CALL amhi204_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="amhi204.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION amhi204_b_fill(p_wc2)
   #add-point:b_fill段define name="b_fill.define_customerization"

   #end add-point
   DEFINE p_wc2      STRING
   #add-point:b_fill段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"

   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"

   #end add-point
   
   #先清空單身變數內容
   CALL g_mhad_d.clear()
   CALL g_mhad2_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"

   #end add-point
   
   LET g_sql = "SELECT  DISTINCT mhadstus,mhadunit,mhad004,mhad009,mhad005,mhad006,mhad007,mhad008,mhad004, 
       mhadownid,mhadowndp,mhadcrtid,mhadcrtdp,mhadcrtdt,mhadmodid,mhadmoddt,t1.ooefl003 ,t2.ooag011 , 
       t3.ooefl003 ,t4.ooag011 ,t5.ooefl003 ,t6.ooag011 FROM mhad_t",   
               " LEFT JOIN mhadl_t ON mhadlent = '"||g_enterprise||"' AND mhad001 = mhadl001 AND mhad002 = mhadl002 AND mhad003 = mhadl003 AND mhad004 = mhadl004 AND mhadl005 = '",g_dlang,"'",
               
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=mhadunit AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent='"||g_enterprise||"' AND t2.ooag001=mhadownid  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=mhadowndp AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent='"||g_enterprise||"' AND t4.ooag001=mhadcrtid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=mhadcrtdp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent='"||g_enterprise||"' AND t6.ooag001=mhadmodid  ",
 
               " WHERE mhadent= ? AND mhad001=? AND mhad002=? AND mhad003=?"  
 
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table1 CLIPPED, cl_sql_add_filter("mhad_t")
   END IF
   
   #add-point:b_fill段sql_after name="b_fill.sql_after"
   #160506-00009#3 20160510 add by beckxie---S
   LET g_sql = "SELECT  DISTINCT mhadstus,mhadunit,mhad004,mhad009,mhad010,t7.oocql004,mhad005,mhad006,mhad007,mhad008,mhad004, 
       mhadownid,mhadowndp,mhadcrtid,mhadcrtdp,mhadcrtdt,mhadmodid,mhadmoddt,t1.ooefl003 ,t2.ooag011 , 
       t3.ooefl003 ,t4.ooag011 ,t5.ooefl003 ,t6.ooag011 FROM mhad_t",   
               " LEFT JOIN mhadl_t ON mhadlent = '"||g_enterprise||"' AND mhad001 = mhadl001 AND mhad002 = mhadl002 AND mhad003 = mhadl003 AND mhad004 = mhadl004 AND mhadl005 = '",g_dlang,"'",
               
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=mhadunit AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent='"||g_enterprise||"' AND t2.ooag001=mhadownid  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=mhadowndp AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent='"||g_enterprise||"' AND t4.ooag001=mhadcrtid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=mhadcrtdp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent='"||g_enterprise||"' AND t6.ooag001=mhadmodid  ",
               " LEFT JOIN oocql_t t7 ON t7.oocqlent = '"||g_enterprise||"' AND t7.oocql001 = '2145' AND t7.oocql002 = mhad010 AND t7.oocql003 ='"||g_dlang||"' ",
               " WHERE mhadent= ? AND mhad001=? AND mhad002=? AND mhad003=?"  
 
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table1 CLIPPED, cl_sql_add_filter("mhad_t")
   END IF
   #160506-00009#3 20160510 add by beckxie---E
   #end add-point
   
   #子單身的WC
   
   
   #判斷是否填充
   IF amhi204_fill_chk(1) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = g_sql, " ORDER BY mhad_t.mhad004"
         #add-point:b_fill段fill_before name="b_fill.fill_before"

         #end add-point
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE amhi204_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR amhi204_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_mhad_m.mhad001,g_mhad_m.mhad002,g_mhad_m.mhad003
      #160506-00009#3 20160510 mark by beckxie---S                       
      #FOREACH b_fill_cs INTO g_mhad_d[l_ac].mhadstus,g_mhad_d[l_ac].mhadunit,g_mhad_d[l_ac].mhad004, 
      #    g_mhad_d[l_ac].mhad009,g_mhad_d[l_ac].mhad005,g_mhad_d[l_ac].mhad006,g_mhad_d[l_ac].mhad007, 
      #    g_mhad_d[l_ac].mhad008,g_mhad2_d[l_ac].mhad004,g_mhad2_d[l_ac].mhadownid,g_mhad2_d[l_ac].mhadowndp, 
      #    g_mhad2_d[l_ac].mhadcrtid,g_mhad2_d[l_ac].mhadcrtdp,g_mhad2_d[l_ac].mhadcrtdt,g_mhad2_d[l_ac].mhadmodid, 
      #    g_mhad2_d[l_ac].mhadmoddt,g_mhad_d[l_ac].mhadunit_desc,g_mhad2_d[l_ac].mhadownid_desc,g_mhad2_d[l_ac].mhadowndp_desc, 
      #    g_mhad2_d[l_ac].mhadcrtid_desc,g_mhad2_d[l_ac].mhadcrtdp_desc,g_mhad2_d[l_ac].mhadmodid_desc 
      #160506-00009#3 20160510 mark by beckxie---E
      #160506-00009#3 20160510 add by beckxie---S
      FOREACH b_fill_cs INTO g_mhad_d[l_ac].mhadstus,g_mhad_d[l_ac].mhadunit,g_mhad_d[l_ac].mhad004, 
          g_mhad_d[l_ac].mhad009,g_mhad_d[l_ac].mhad010,g_mhad_d[l_ac].mhad010_desc,g_mhad_d[l_ac].mhad005,g_mhad_d[l_ac].mhad006,g_mhad_d[l_ac].mhad007, 
          g_mhad_d[l_ac].mhad008,g_mhad2_d[l_ac].mhad004,g_mhad2_d[l_ac].mhadownid,g_mhad2_d[l_ac].mhadowndp, 
          g_mhad2_d[l_ac].mhadcrtid,g_mhad2_d[l_ac].mhadcrtdp,g_mhad2_d[l_ac].mhadcrtdt,g_mhad2_d[l_ac].mhadmodid, 
          g_mhad2_d[l_ac].mhadmoddt,g_mhad_d[l_ac].mhadunit_desc,g_mhad2_d[l_ac].mhadownid_desc,g_mhad2_d[l_ac].mhadowndp_desc, 
          g_mhad2_d[l_ac].mhadcrtid_desc,g_mhad2_d[l_ac].mhadcrtdp_desc,g_mhad2_d[l_ac].mhadmodid_desc 
      #160506-00009#3 20160510 add by beckxie---E
                             
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
                           
         #add-point:b_fill段資料填充 name="b_fill.fill"
         let g_mhad2_d[l_ac].mhad004 = g_mhad_d[l_ac].mhad004
         #end add-point
      
         #帶出公用欄位reference值
         
         
         #應用 a12 樣板自動產生(Version:4)
 
 
 
 
        
         #add-point:單身資料抓取 name="bfill.foreach"

         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF 
            EXIT FOREACH
         END IF
      
         LET l_ac = l_ac + 1
         
      END FOREACH
 
            CALL g_mhad_d.deleteElement(g_mhad_d.getLength())
      CALL g_mhad2_d.deleteElement(g_mhad2_d.getLength())
 
      
   END IF
   
   #add-point:b_fill段more name="b_fill.more"

   #end add-point
   
   LET g_rec_b=l_ac-1
   DISPLAY g_rec_b TO FORMONLY.cnt  
   LET l_ac = g_cnt
   LET g_cnt = 0 
 
   #遮罩相關處理
   FOR l_ac = 1 TO g_mhad_d.getLength()
      LET g_mhad_d_mask_o[l_ac].* =  g_mhad_d[l_ac].*
      CALL amhi204_mhad_t_mask()
      LET g_mhad_d_mask_n[l_ac].* =  g_mhad_d[l_ac].*
   END FOR
   
   LET g_mhad2_d_mask_o.* =  g_mhad2_d.*
   FOR l_ac = 1 TO g_mhad2_d.getLength()
      LET g_mhad2_d_mask_o[l_ac].* =  g_mhad2_d[l_ac].*
      CALL amhi204_mhad_t_mask()
      LET g_mhad2_d_mask_n[l_ac].* =  g_mhad2_d[l_ac].*
   END FOR
 
 
   FREE amhi204_pb   
   
END FUNCTION
 
{</section>}
 
{<section id="amhi204.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION amhi204_idx_chk()
   #add-point:idx_chk段define name="idx_chk.define_customerization"
   
   #end add-point
   #add-point:idx_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   #判定目前選擇的頁面
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      #確保當下指標的位置未超過上限
      IF g_detail_idx > g_mhad_d.getLength() THEN
         LET g_detail_idx = g_mhad_d.getLength()
      END IF
      #確保資料位置不小於1
      IF g_detail_idx = 0 AND g_mhad_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      #將筆數資料顯示到畫面上
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mhad_d.getLength() TO FORMONLY.cnt
      #將位置顯示到正確筆數上
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)
   END IF
    
   #同第一個page的做法進行其他頁面的處理
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_mhad2_d.getLength() THEN
         LET g_detail_idx = g_mhad2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_mhad2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_mhad2_d.getLength() TO FORMONLY.cnt
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
   END IF
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="amhi204.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION amhi204_b_fill2(pi_idx)
   #add-point:b_fill2段define name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   #add-point:b_fill2段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_mhad_d.getLength() <= 0 THEN
      RETURN
   END IF
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
    
   LET l_ac = li_ac
   
END FUNCTION
 
{</section>}
 
{<section id="amhi204.before_delete" >}
#+ 單身db資料刪除
PRIVATE FUNCTION amhi204_before_delete()
   #add-point:before_delete段define name="before_delete.define_customerization"
   
   #end add-point 
   #add-point:before_delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="before_delete.define"
   DEFINE l_success  LIKE type_t.num5
   #end add-point 
   
   #add-point:Function前置處理  name="delete.body.b_single_delete"
   
   #end add-point
   
   DELETE FROM mhad_t
    WHERE mhadent = g_enterprise AND mhad001 = g_mhad_m.mhad001 AND
                              mhad002 = g_mhad_m.mhad002 AND
                              mhad003 = g_mhad_m.mhad003 AND
 
          mhad004 = g_mhad_d_t.mhad004
 
      
   #add-point:單筆刪除中 name="delete.body.m_single_delete"
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "mhad_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE 
   END IF
   CALL amhi204_sum() returning l_success
   IF l_success=FALSE THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code =  g_errno
      LET g_errparam.extend = "update:"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE 
   END IF
   CALL amhi204_update_ooef() returning l_success
   IF l_success=FALSE THEN
      RETURN FALSE 
   END IF
   DELETE FROM mhadl_t
    WHERE mhadlent = g_enterprise AND mhadl001 = g_mhad_m.mhad001 AND
          mhadl002 = g_mhad_m.mhad002 AND
          mhadl003 = g_mhad_m.mhad003 AND
          mhadl004 = g_mhad_d_t.mhad004
   #end add-point
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "mhad_t:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN FALSE 
   END IF
   
   #add-point:單筆刪除後 name="delete.body.a_single_delete"
   
   #end add-point
 
   LET g_rec_b = g_rec_b-1
   DISPLAY g_rec_b TO FORMONLY.cnt
 
   RETURN TRUE
    
END FUNCTION
 
{</section>}
 
{<section id="amhi204.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION amhi204_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define name="delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="amhi204.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION amhi204_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define name="insert_b.define_customerization"
   
   #end add-point
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="amhi204.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION amhi204_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define name="update_b.define_customerization"
   
   #end add-point 
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="amhi204.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正其他單身key欄位
PRIVATE FUNCTION amhi204_key_update_b(ps_keys_bak)
   #add-point:update_b段define name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:update_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
   #判斷key是否有改變, 若無改變則返回
   IF g_mhad_d[l_ac].mhad004 = g_mhad_d_t.mhad004 
 
      THEN
      RETURN
   END IF
    
 
   
END FUNCTION
 
{</section>}
 
{<section id="amhi204.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION amhi204_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="amhi204.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION amhi204_lock_b(ps_table,ps_page)
   #add-point:lock_b段define name="lock_b.define_customerization"
   
   #end add-point
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
   
   #先刷新資料
   #CALL amhi204_b_fill()
   
 
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="amhi204.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION amhi204_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define name="unlock_b.define_customerization"
   
   #end add-point
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
   
 
 
END FUNCTION
 
{</section>}
 
{<section id="amhi204.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION amhi204_set_entry(p_cmd)
   #add-point:set_entry段define name="set_entry.define_customerization"
   
   #end add-point 
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("mhad001,mhad002,mhad003",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="amhi204.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION amhi204_set_no_entry(p_cmd)
   #add-point:set_no_entry段define name="set_no_entry.define_customerization"
   
   #end add-point
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("mhad001,mhad002,mhad003",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="amhi204.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION amhi204_set_entry_b(p_cmd)
   #add-point:set_entry_b段define name="set_entry_b.define_customerization"
   
   #end add-point 
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point     
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="amhi204.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION amhi204_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define name="set_no_entry_b.define_customerization"
   
   #end add-point
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   
   #end add-point    
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b段"
   
   #end add-point 
   
END FUNCTION
 
{</section>}
 
{<section id="amhi204.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION amhi204_set_act_visible()
   #add-point:set_act_visible段define name="set_act_visible.define_customerization"
   
   #end add-point
   #add-point:set_act_visible段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point
   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="amhi204.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION amhi204_set_act_no_visible()
   #add-point:set_act_no_visible段define name="set_act_no_visible.define_customerization"
   
   #end add-point
   #add-point:set_act_no_visible段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce,mainhidden,insert", FALSE)   #160229-00001#6 20160303 s983961       
   #end add-point
   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="amhi204.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION amhi204_set_act_visible_b()
   #add-point:set_act_visible_b段define name="set_act_visible_b.define_customerization"
   
   #end add-point
   #add-point:set_act_visible_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point
   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="amhi204.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION amhi204_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define name="set_act_no_visible_b.define_customerization"
   
   #end add-point
   #add-point:set_act_no_visible_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point
   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="amhi204.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION amhi204_default_search()
   #add-point:default_search段define name="default_search.define_customerization"
   
   #end add-point    
   DEFINE li_idx  LIKE type_t.num10
   DEFINE li_cnt  LIKE type_t.num10
   DEFINE ls_wc   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="default_search.pre_function"
   
   #end add-point
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   #add-point:default_search段開始前 name="default_search.before"
   
   #end add-point  
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " mhad001 = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " mhad002 = '", g_argv[02], "' AND "
   END IF
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " mhad003 = '", g_argv[03], "' AND "
   END IF
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="amhi204.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION amhi204_fill_chk(ps_idx)
   #add-point:fill_chk段define name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   DEFINE lst_token     base.StringTokenizer
   DEFINE ls_token      STRING
   #add-point:fill_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="fill_chk.pre_function"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
   
   #add-point:fill_chk段other name="fill_chk.other"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="amhi204.modify_detail_chk" >}
#+ 單身輸入判定
PRIVATE FUNCTION amhi204_modify_detail_chk(ps_record)
   #add-point:modify_detail_chk段define name="modify_detail_chk.define_customerization"
   
   #end add-point
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify_detail_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="modify_detail_chk.before"
   
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "mhadstus"
      WHEN "s_detail2"
         LET ls_return = "mhad004_2"
 
      #add-point:modify_detail_chk段自訂page控制 name="modify_detail_chk.page_control"
      
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前 name="modify_detail_chk.after"
   
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
 
{</section>}
 
{<section id="amhi204.mask_functions" >}
&include "erp/amh/amhi204_mask.4gl"
 
{</section>}
 
{<section id="amhi204.state_change" >}
    
 
{</section>}
 
{<section id="amhi204.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION amhi204_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_mhad_m.mhad001
   LET g_pk_array[1].column = 'mhad001'
   LET g_pk_array[2].values = g_mhad_m.mhad002
   LET g_pk_array[2].column = 'mhad002'
   LET g_pk_array[3].values = g_mhad_m.mhad003
   LET g_pk_array[3].column = 'mhad003'
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="amhi204.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION amhi204_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL amhi204_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_mhad_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="amhi204.other_function" readonly="Y" >}
#display mhadunit
PRIVATE FUNCTION amhi204_mhadunit_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mhad_d[l_ac].mhadunit
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mhad_d[l_ac].mhadunit_desc = '', g_rtn_fields[1] , ''
   DISPLAY  g_mhad_d[l_ac].mhadunit_desc to s_detail1[l_ac].mhadunit_desc
END FUNCTION
#display mhadsite
PRIVATE FUNCTION amhi204_mhadsite_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mhad_m.mhadsite
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mhad_m.mhadsite_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mhad_m.mhadsite_desc
END FUNCTION
#display mhad001
PRIVATE FUNCTION amhi204_mhad001_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mhad_m.mhad001
   CALL ap_ref_array2(g_ref_fields,"SELECT mhaal003 FROM mhaal_t WHERE mhaalent='"||g_enterprise||"' AND mhaal001=? AND mhaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mhad_m.mhad001_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mhad_m.mhad001_desc
END FUNCTION
#display mhad003
PRIVATE FUNCTION amhi204_mhad003_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mhad_m.mhad001
   LET g_ref_fields[2] = g_mhad_m.mhad002
   LET g_ref_fields[3] = g_mhad_m.mhad003
   CALL ap_ref_array2(g_ref_fields,"SELECT mhacl005 FROM mhacl_t WHERE mhaclent='"||g_enterprise||"' AND mhacl001=? AND mhacl002=? AND mhacl003=? AND mhacl004='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mhad_m.mhad003_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mhad_m.mhad003_desc
END FUNCTION
#display mhad002
PRIVATE FUNCTION amhi204_mhad002_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_mhad_m.mhad001
   LET g_ref_fields[2] = g_mhad_m.mhad002
   CALL ap_ref_array2(g_ref_fields,"SELECT mhabl004 FROM mhabl_t WHERE mhablent='"||g_enterprise||"' AND mhabl001=? AND mhabl002=? AND mhabl003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_mhad_m.mhad002_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_mhad_m.mhad002_desc
END FUNCTION
#求和
PRIVATE FUNCTION amhi204_sum()
   DEFINE l_mhad005   LIKE mhad_t.mhad005
   DEFINE l_mhad006   LIKE mhad_t.mhad006
   DEFINE l_mhad007   LIKE mhad_t.mhad007
   DEFINE l_success   LIKE type_t.num5
   DEFINE l_mhab007   LIKE mhab_t.mhab007
   DEFINE l_mhab006   LIKE mhab_t.mhab006
   DEFINE l_mhaa005   LIKE mhaa_t.mhaa005
   DEFINE l_mhaa006   LIKE mhaa_t.mhaa006
   DEFINE l_sql       STRING
   
   LET l_mhad005=0
   LET l_mhad006=0
   LET l_mhad007=0
   let l_mhab006=0
   let l_mhab007=0
   let l_mhaa005 = 0
   let l_mhaa006 = 0
   LET l_success = true
   let g_errno = null
   IF NOT cl_null(g_mhad_m.mhad003) THEN
      SELECT SUM(mhad005),sum(mhad006),sum(mhad007) INTO l_mhad005,l_mhad006,l_mhad007
        FROM mhad_t
       WHERE mhad001 = g_mhad_m.mhad001 AND  mhad002 = g_mhad_m.mhad002 AND mhad003 = g_mhad_m.mhad003
         AND mhadent = g_enterprise AND mhadstus='Y' 
      LET l_sql = "SELECT mhacunit,'',mhacsite,'',mhac001,mhac002,mhac003 FROM mhac_t WHERE mhacent= ? AND mhac001=? AND mhac002=? AND mhac003=? FOR UPDATE NOWAIT "
      LET l_sql = cl_sql_forupd(l_sql)
      DECLARE amhi204_mhac_cl CURSOR FROM l_sql
      OPEN amhi204_mhac_cl USING g_enterprise,g_mhad_m.mhad001,g_mhad_m.mhad002,g_mhad_m.mhad003
      IF STATUS THEN
         LET g_errno=status
         LET l_success = FALSE
         CLOSE amhi204_mhac_cl
         RETURN l_success
      END IF
      UPDATE mhac_t SET mhac004=l_mhad005,
                     mhac005=l_mhad006,
                     mhac006=l_mhad007
       WHERE mhac001 = g_mhad_m.mhad001 AND  mhac002 = g_mhad_m.mhad002 AND mhac003 = g_mhad_m.mhad003
         AND mhacent=g_enterprise
      IF SQLCA.sqlcode THEN
         let g_errno=SQLCA.sqlcode
         LET l_success = false
         RETURN l_success
      END IF
      CLOSE amhi204_mhac_cl      
   END IF      
   LET l_mhad005=0
   LET l_mhad006=0
   LET l_mhad007=0
   IF NOT cl_null(g_mhad_m.mhad002) THEN
      SELECT SUM(mhad005),sum(mhad006),sum(mhad007) INTO l_mhad005,l_mhad006,l_mhad007
        FROM mhad_t
       WHERE mhad001 = g_mhad_m.mhad001 AND  mhad002 = g_mhad_m.mhad002
         AND mhadent = g_enterprise AND mhadstus='Y'
      SELECT mhab006,mhab007 INTO l_mhab006,l_mhab007 FROM mhab_t
       WHERE mhab001 =  g_mhad_m.mhad001 AND mhab002 = g_mhad_m.mhad002
         AND mhabent = g_enterprise
      IF l_mhab006 < l_mhad005 THEN
         LET g_errno="amh-00009"
         LET l_success = FALSE
         RETURN l_success
      END IF
      IF l_mhab007 < l_mhad006 THEN
         LET g_errno="amh-00010"
         LET l_success = FALSE
         RETURN l_success
      END IF
      LET l_sql = "SELECT mhabunit,mhabsite,mhab001,mhab002 FROM mhab_t WHERE mhabent= ? AND mhab001=? AND mhab002=? FOR UPDATE NOWAIT "
      LET l_sql = cl_sql_forupd(l_sql)
      DECLARE amhi204_mhab_cl CURSOR FROM l_sql
      OPEN amhi204_mhab_cl USING g_enterprise,g_mhad_m.mhad001,g_mhad_m.mhad002
      IF STATUS THEN
         LET g_errno=status
         LET l_success = FALSE
         CLOSE amhi204_mhab_cl
         RETURN l_success
      END IF      
      UPDATE mhab_t SET mhab003=l_mhad005,
                     mhab004=l_mhad006,
                     mhab005=l_mhad007
       WHERE mhab001 = g_mhad_m.mhad001 AND  mhab002 = g_mhad_m.mhad002 
         AND mhabent=g_enterprise
      IF sqlca.sqlcode THEN
         let g_errno=SQLCA.sqlcode
         LET l_success = false
         RETURN l_success
      END IF
      CLOSE amhi204_mhab_cl      
   END IF
   LET l_mhad005=0
   LET l_mhad006=0
   LET l_mhad007=0
   IF NOT cl_null(g_mhad_m.mhad001) THEN
      SELECT SUM(mhad005),sum(mhad006),sum(mhad007) INTO l_mhad005,l_mhad006,l_mhad007
        FROM mhad_t
       WHERE mhad001 = g_mhad_m.mhad001
         AND mhadent = g_enterprise AND mhadstus='Y'
      SELECT mhaa005,mhaa006 INTO l_mhaa005,l_mhaa006 FROM mhaa_t
       WHERE mhaa001 =  g_mhad_m.mhad001
         AND mhaaent = g_enterprise
      IF l_mhaa005 < l_mhad005 THEN
         LET g_errno="amh-00011"
         LET l_success = FALSE
         RETURN l_success
      END IF
      IF l_mhaa006 < l_mhad006 THEN
         LET g_errno="amh-00012"
         LET l_success = FALSE
         RETURN l_success
      END IF
      LET l_sql = "SELECT mhaaunit,mhaasite,mhaa001 FROM mhaa_t WHERE mhaaent= ? AND mhaa001=? FOR UPDATE NOWAIT "
      LET l_sql = cl_sql_forupd(l_sql)
      DECLARE amhi204_mhaa_cl CURSOR FROM l_sql
      OPEN amhi204_mhaa_cl USING g_enterprise,g_mhad_m.mhad001
      IF STATUS THEN
         LET g_errno=status
         LET l_success = FALSE
         CLOSE amhi204_mhaa_cl
         RETURN l_success
      END IF
     
      UPDATE mhaa_t SET mhaa002=l_mhad005,
                        mhaa003=l_mhad006,
                        mhaa004=l_mhad007
       WHERE mhaa001 = g_mhad_m.mhad001
         AND mhaaent=g_enterprise
      IF sqlca.sqlcode THEN
         let g_errno=SQLCA.sqlcode
         LET l_success = false
         RETURN l_success
      END IF
      CLOSE amhi204_mhaa_cl      
   END IF
   RETURN l_success
END FUNCTION
#计算建筑面积
PRIVATE FUNCTION amhi204_count_mhad005()
   DEFINE  l_mhab008  LIKE mhab_t.mhab008
   define  l_mhab009  like mhab_t.mhab009
   
   SELECT mhab008,mhab009 INTO l_mhab008,l_mhab009 FROM mhab_t
    WHERE mhabent= g_enterprise AND mhab001 = g_mhad_m.mhad001
      AND mhab002 = g_mhad_m.mhad002
      
   IF cl_null(l_mhab008) THEN
      LET l_mhab008 = 0
   END IF 
   IF cl_null(l_mhab009) THEN
      LET l_mhab009 = 0
   END IF 
   LET g_mhad_d[l_ac].mhad005 = g_mhad_d[l_ac].mhad006*(1+l_mhab008/100)
   let g_mhad_d[l_ac].mhad007 = g_mhad_d[l_ac].mhad006*l_mhab009
   DISPLAY  g_mhad_d[l_ac].mhad005 TO s_detail1[l_ac].mhad005
   DISPLAY  g_mhad_d[l_ac].mhad006 TO s_detail1[l_ac].mhad006
END FUNCTION
#计算建筑面积，测量面积
PRIVATE FUNCTION amhi204_count_mhad007()
   DEFINE  l_mhab008  LIKE mhab_t.mhab008
   define  l_mhab009  like mhab_t.mhab009
   
   SELECT mhab008,mhab009 INTO l_mhab008,l_mhab009 FROM mhab_t
    WHERE mhabent= g_enterprise AND mhab001 = g_mhad_m.mhad001
      AND mhab002 = g_mhad_m.mhad002
      
   IF cl_null(l_mhab008) THEN
      LET l_mhab008 = 0
   END IF 
   IF cl_null(l_mhab009) THEN
      LET l_mhab009 = 0
   END IF
   let g_mhad_d[l_ac].mhad006 = g_mhad_d[l_ac].mhad007/l_mhab009   
   LET g_mhad_d[l_ac].mhad005 = g_mhad_d[l_ac].mhad006*(1+l_mhab008/100)
   
   DISPLAY  g_mhad_d[l_ac].mhad005 TO s_detail1[l_ac].mhad005
   DISPLAY  g_mhad_d[l_ac].mhad006 TO s_detail1[l_ac].mhad006
END FUNCTION
#chk mhad006
PRIVATE FUNCTION amhi204_chk_mhad006()
   DEFINE l_mhad005   LIKE mhad_t.mhad005
   DEFINE l_mhad006   LIKE mhad_t.mhad006
   DEFINE l_mhad007   LIKE mhad_t.mhad007
   DEFINE l_success   LIKE type_t.num5
   define l_mhab007   like mhab_t.mhab007
   define l_mhab006   like mhab_t.mhab006
   define l_mhaa005   like mhaa_t.mhaa005
   define l_mhaa006   like mhaa_t.mhaa006
   
   LET l_mhad005=0
   LET l_mhad006=0
   LET l_mhad007=0
   let l_mhab006=0
   let l_mhab007=0
   let l_mhaa005 = 0
   let l_mhaa006 = 0
   LET l_success = true
   let g_errno = null
         
   LET l_mhad005=0
   LET l_mhad006=0
   LET l_mhad007=0
   IF NOT cl_null(g_mhad_m.mhad002) THEN
      if not cl_null(g_mhad_d_t.mhad004) then
         SELECT SUM(mhad005),sum(mhad006),sum(mhad007) INTO l_mhad005,l_mhad006,l_mhad007
           FROM mhad_t
          WHERE mhad001 = g_mhad_m.mhad001 AND  mhad002 = g_mhad_m.mhad002
            AND mhadent = g_enterprise and mhad004<> g_mhad_d_t.mhad004 and mhadstus='Y'
      else
         SELECT SUM(mhad005),sum(mhad006),sum(mhad007) INTO l_mhad005,l_mhad006,l_mhad007
           FROM mhad_t
          WHERE mhad001 = g_mhad_m.mhad001 AND  mhad002 = g_mhad_m.mhad002
            AND mhadent = g_enterprise AND mhadstus='Y'
      end if
      if cl_null(l_mhad005) then
         LET l_mhad005=0
      end if
      if cl_null(l_mhad006) then
         LET l_mhad006=0
      end if
      if cl_null(l_mhad007) then
         LET l_mhad007=0
      end if
      let l_mhad005=l_mhad005+g_mhad_d[l_ac].mhad005
      let l_mhad006=l_mhad006+g_mhad_d[l_ac].mhad006
      let l_mhad007=l_mhad007+g_mhad_d[l_ac].mhad007      
      SELECT mhab006,mhab007 INTO l_mhab006,l_mhab007 FROM mhab_t
       WHERE mhab001 =  g_mhad_m.mhad001 AND mhab002 = g_mhad_m.mhad002
         AND mhabent = g_enterprise 
      if not cl_null(l_mhab006) then
        
         IF l_mhab006 < l_mhad005 THEN
            LET g_errno="amh-00009"
            LET l_success = FALSE
            RETURN l_success
         END IF
      end if
      if not cl_null(l_mhab007) then      
         IF l_mhab007 < l_mhad006 THEN
            LET g_errno="amh-00010"
            LET l_success = FALSE
            RETURN l_success
         END IF  
      end if    
   END IF
   LET l_mhad005=0
   LET l_mhad006=0
   LET l_mhad007=0
   IF NOT cl_null(g_mhad_m.mhad001) THEN
      IF NOT cl_null(g_mhad_d_t.mhad004) THEN
         SELECT SUM(mhad005),sum(mhad006),sum(mhad007) INTO l_mhad005,l_mhad006,l_mhad007
           FROM mhad_t
          WHERE mhad001 = g_mhad_m.mhad001 AND mhad004<> g_mhad_d_t.mhad004
            AND mhadent = g_enterprise AND mhadstus='Y'  
      ELSE 
         SELECT SUM(mhad005),sum(mhad006),sum(mhad007) INTO l_mhad005,l_mhad006,l_mhad007
           FROM mhad_t
          WHERE mhad001 = g_mhad_m.mhad001
            AND mhadent = g_enterprise and mhadstus='Y'
      END IF 
      if cl_null(l_mhad005) then
         LET l_mhad005=0
      end if  
      if cl_null(l_mhad006) then
         LET l_mhad006=0
      end if
      if cl_null(l_mhad007) then
         LET l_mhad007=0
      end if      
      let l_mhad005=l_mhad005+g_mhad_d[l_ac].mhad005
      let l_mhad006=l_mhad006+g_mhad_d[l_ac].mhad006
      let l_mhad007=l_mhad007+g_mhad_d[l_ac].mhad007
      
      SELECT mhaa005,mhaa006 INTO l_mhaa005,l_mhaa006 FROM mhaa_t
       WHERE mhaa001 =  g_mhad_m.mhad001
         AND mhaaent = g_enterprise
      if not cl_null(l_mhaa005) then         
         IF l_mhaa005 < l_mhad005 THEN
            LET g_errno="amh-00011"
            LET l_success = FALSE
            RETURN l_success
         END IF
      end if
      if not cl_null(l_mhaa006) then      
         IF l_mhaa006 < l_mhad006 THEN
            LET g_errno="amh-00012"
            LET l_success = FALSE
            RETURN l_success
         END IF 
      end if         
   END IF
   RETURN l_success
END FUNCTION
#chk sum
PRIVATE FUNCTION amhi204_chk_sum()
   DEFINE l_mhad005   LIKE mhad_t.mhad005
   DEFINE l_mhad006   LIKE mhad_t.mhad006
   DEFINE l_mhad007   LIKE mhad_t.mhad007
   DEFINE l_success   LIKE type_t.num5
   define l_mhab007   like mhab_t.mhab007
   define l_mhab006   like mhab_t.mhab006
   define l_mhaa005   like mhaa_t.mhaa005
   define l_mhaa006   like mhaa_t.mhaa006
   
   LET l_mhad005=0
   LET l_mhad006=0
   LET l_mhad007=0
   let l_mhab006=0
   let l_mhab007=0
   let l_mhaa005 = 0
   let l_mhaa006 = 0
   LET l_success = true
   let g_errno = null
         
   LET l_mhad005=0
   LET l_mhad006=0
   LET l_mhad007=0
   IF NOT cl_null(g_mhad_m.mhad002) THEN
      SELECT SUM(mhad005),sum(mhad006),sum(mhad007) INTO l_mhad005,l_mhad006,l_mhad007
        FROM mhad_t
       WHERE mhad001 = g_mhad001_t AND  mhad002 = g_mhad002_t
         AND mhadent = g_enterprise AND mhadstus='Y'
      
      SELECT mhab006,mhab007 INTO l_mhab006,l_mhab007 FROM mhab_t
       WHERE mhab001 =  g_mhad_m.mhad001 AND mhab002 = g_mhad_m.mhad002
         AND mhabent = g_enterprise
      IF l_mhab006 < l_mhad005 THEN
         LET g_errno="amh-00009"
         LET l_success = FALSE
         RETURN l_success
      END IF
      IF l_mhab007 < l_mhad006 THEN
         LET g_errno="amh-00010"
         LET l_success = FALSE
         RETURN l_success
      END IF  
   END IF
   LET l_mhad005=0
   LET l_mhad006=0
   LET l_mhad007=0
   IF NOT cl_null(g_mhad_m.mhad001) THEN
 
      SELECT SUM(mhad005),sum(mhad006),sum(mhad007) INTO l_mhad005,l_mhad006,l_mhad007
        FROM mhad_t
       WHERE mhad001 = g_mhad001_t
         AND mhadent = g_enterprise AND mhadstus='Y'
      
      SELECT mhaa005,mhaa006 INTO l_mhaa005,l_mhaa006 FROM mhaa_t
       WHERE mhaa001 =  g_mhad_m.mhad001
         AND mhaaent = g_enterprise
      IF l_mhaa005 < l_mhad005 THEN
         LET g_errno="amh-00011"
         LET l_success = FALSE
         RETURN l_success
      END IF
      IF l_mhaa006 < l_mhad006 THEN
         LET g_errno="amh-00012"
         LET l_success = FALSE
         RETURN l_success
      END IF   
   END IF
   RETURN l_success  
END FUNCTION
#chk mhadstus
PRIVATE FUNCTION amhi204_mhadstus()
   DEFINE  l_cnt   like type_t.num5
   DEFINE  l_cnt1  LIKE type_t.num5
   DEFINE  l_success  LIKE type_t.num5
   DEFINE  l_errno    STRING
   DEFINE  l_mhad005 LIKE mhad_t.mhad005
   DEFINE  l_mhad006 LIKE mhad_t.mhad006
   DEFINE  l_mhad007 LIKE mhad_t.mhad007
   DEFINE  l_mhab003 LIKE mhab_t.mhab003
   DEFINE  l_mhab004 LIKE mhab_t.mhab004
   DEFINE  l_mhab005 LIKE mhab_t.mhab005
   DEFINE  l_mhab006 LIKE mhab_t.mhab006
   DEFINE  l_mhab007 LIKE mhab_t.mhab007
   LET l_cnt = 0
   LET l_cnt1 = 0
   LET l_success = TRUE
   LET l_errno = NULL
   IF g_mhad_d[l_ac].mhadstus='Y' THEN
      LET l_cnt=0
      LET l_cnt1=0
      if cl_null(g_mhad_m.mhad003) then
         SELECT count(*) INTO l_cnt FROM mhab_t WHERE mhab001=g_mhad_m.mhad001
            AND mhab002 = g_mhad_m.mhad002 AND mhabent = g_enterprise 
            AND mhabsite = g_mhad_m.mhadsite AND mhabstus='Y'
      else
         SELECT count(*) INTO l_cnt FROM mhac_t WHERE mhac001=g_mhad_m.mhad001
            AND mhac002 = g_mhad_m.mhad002 AND mhacent = g_enterprise
            and mhac003 = g_mhad_m.mhad003            
            AND mhacsite = g_mhad_m.mhadsite AND mhacstus='Y'
      end if      
      IF l_cnt<=0 THEN
         LET l_errno = "amh-00019"
         LET l_success = FALSE
         RETURN l_success,l_errno
      END IF 
       
         SELECT sum(mhad005),sum(mhad006),sum(mhad007) 
           INTO l_mhad005,l_mhad006,l_mhad007
           FROM mhad_t
          WHERE mhadent = g_enterprise AND mhad001=g_mhad_m.mhad001
            AND mhad002 = g_mhad_m.mhad002   AND mhadstus='Y' AND mhadsite=g_mhad_m.mhadsite
         SELECT sum(mhab006),sum(mhab007)
           INTO l_mhab006,l_mhab007
           FROM mhab_t
          WHERE mhab001 = g_mhad_m.mhad001 AND mhab002 = g_mhad_m.mhad002
            AND mhabstus = 'Y' AND mhabent = g_enterprise  AND mhabsite=g_mhad_m.mhadsite
            
         IF cl_null(l_mhad005) THEN
            LET l_mhad005 = 0
         END IF
         IF cl_null(l_mhad006) THEN
            LET l_mhad006 = 0
         END IF
         IF cl_null(l_mhad007) THEN
            LET l_mhad007 = 0
         END IF
         IF cl_null(l_mhab006) THEN
            LET l_mhab006 = 0
         END IF
         IF cl_null(l_mhab007) THEN
            LET l_mhab007 = 0
         END IF

         IF cl_null(g_mhad_d[l_ac].mhad005) THEN
            LET g_mhad_d[l_ac].mhad005 = 0
         END IF
         IF cl_null(g_mhad_d[l_ac].mhad006) THEN
            LET g_mhad_d[l_ac].mhad006 = 0
         END IF
         IF cl_null(g_mhad_d[l_ac].mhad007) THEN
            LET g_mhad_d[l_ac].mhad007 = 0
         END IF      
         LET l_mhad006=l_mhad006+g_mhad_d[l_ac].mhad006
         LET l_mhad007=l_mhad007+g_mhad_d[l_ac].mhad007
         LET l_mhad005=l_mhad005+g_mhad_d[l_ac].mhad005
      
         IF l_mhab006< l_mhad005 THEN
            LET l_errno = "amh-00009"
            LET l_success = FALSE
            RETURN l_success,l_errno
         END IF
         IF l_mhab007< l_mhad006 THEN
            LET l_errno = "amh-00010"
            LET l_success = FALSE
            RETURN l_success,l_errno
         END IF  
   END IF
   RETURN l_success,l_errno
END FUNCTION
#update ooef111,ooef112,ooef113
PRIVATE FUNCTION amhi204_update_ooef()
DEFINE l_mhad005   LIKE ooef_t.ooef111
DEFINE l_mhad006   LIKE ooef_t.ooef112
DEFINE l_mhad007   LIKE ooef_t.ooef113
DEFINE l_success   LIKE type_t.num5

   LET l_success=true

   SELECT sum(mhad005),sum(mhad006),sum(mhad007)
     INTO l_mhad005,l_mhad006,l_mhad007
     FROM mhad_t
    WHERE mhadsite=g_mhad_m.mhadsite AND mhadstus='Y'
   UPDATE ooef_t SET ooef111=l_mhad005,
                     ooef112=l_mhad006,
                     ooef113=l_mhad007
    WHERE ooefent=g_enterprise AND ooef001=g_mhad_m.mhadsite
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "mhad_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      LET l_success=false 
      RETURN l_success 
   END IF
   RETURN l_success    
END FUNCTION

 
{</section>}
 
