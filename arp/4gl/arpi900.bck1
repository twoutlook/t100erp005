#該程式未解開Section, 採用最新樣板產出!
{<section id="arpi900.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0003(2016-02-18 16:09:45), PR版次:0003(2016-11-29 10:21:16)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000033
#+ Filename...: arpi900
#+ Description: APP整體基本資料設定
#+ Creator....: 01856(2016-02-18 16:09:45)
#+ Modifier...: 01856 -SD/PR- 04543
 
{</section>}
 
{<section id="arpi900.global" >}
#應用 t01 樣板自動產生(Version:79)
#add-point:填寫註解說明 name="global.memo" 
#Memos
#161028-00045#12   161129 earl     取消rpzz001與rpde002的命名規範
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_rpzz_m        RECORD
       rpzz001 LIKE rpzz_t.rpzz001, 
   rpzz004 LIKE rpzz_t.rpzz004, 
   rpzzl003 LIKE rpzzl_t.rpzzl003, 
   rpzz005 LIKE rpzz_t.rpzz005, 
   rpzz003 LIKE rpzz_t.rpzz003, 
   rpzz006 LIKE rpzz_t.rpzz006, 
   rpzz002 LIKE rpzz_t.rpzz002, 
   rpzzstus LIKE rpzz_t.rpzzstus, 
   rpzzownid LIKE rpzz_t.rpzzownid, 
   rpzzownid_desc LIKE type_t.chr80, 
   rpzzowndp LIKE rpzz_t.rpzzowndp, 
   rpzzowndp_desc LIKE type_t.chr80, 
   rpzzcrtid LIKE rpzz_t.rpzzcrtid, 
   rpzzcrtid_desc LIKE type_t.chr80, 
   rpzzcrtdp LIKE rpzz_t.rpzzcrtdp, 
   rpzzcrtdp_desc LIKE type_t.chr80, 
   rpzzcrtdt LIKE rpzz_t.rpzzcrtdt, 
   rpzzmodid LIKE rpzz_t.rpzzmodid, 
   rpzzmodid_desc LIKE type_t.chr80, 
   rpzzmoddt LIKE rpzz_t.rpzzmoddt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_rpde_d        RECORD
       rpde002 LIKE rpde_t.rpde002, 
   rpdel004 LIKE rpdel_t.rpdel004, 
   rpde004 LIKE rpde_t.rpde004, 
   rpde003 LIKE rpde_t.rpde003, 
   rpdestus LIKE rpde_t.rpdestus
       END RECORD
PRIVATE TYPE type_g_rpde2_d RECORD
       rpde002 LIKE rpde_t.rpde002, 
   rpdeownid LIKE rpde_t.rpdeownid, 
   rpdeownid_desc LIKE type_t.chr500, 
   rpdeowndp LIKE rpde_t.rpdeowndp, 
   rpdeowndp_desc LIKE type_t.chr500, 
   rpdecrtid LIKE rpde_t.rpdecrtid, 
   rpdecrtid_desc LIKE type_t.chr500, 
   rpdecrtdp LIKE rpde_t.rpdecrtdp, 
   rpdecrtdp_desc LIKE type_t.chr500, 
   rpdecrtdt DATETIME YEAR TO SECOND, 
   rpdemodid LIKE rpde_t.rpdemodid, 
   rpdemodid_desc LIKE type_t.chr500, 
   rpdemoddt DATETIME YEAR TO SECOND
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_rpzz001 LIKE rpzz_t.rpzz001,
   b_rpzz001_desc LIKE type_t.chr80,
      b_rpzz005 LIKE rpzz_t.rpzz005,
   b_rpzz005_desc LIKE type_t.chr80
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"

#end add-point
       
#模組變數(Module Variables)
DEFINE g_rpzz_m          type_g_rpzz_m
DEFINE g_rpzz_m_t        type_g_rpzz_m
DEFINE g_rpzz_m_o        type_g_rpzz_m
DEFINE g_rpzz_m_mask_o   type_g_rpzz_m #轉換遮罩前資料
DEFINE g_rpzz_m_mask_n   type_g_rpzz_m #轉換遮罩後資料
 
   DEFINE g_rpzz001_t LIKE rpzz_t.rpzz001
 
 
DEFINE g_rpde_d          DYNAMIC ARRAY OF type_g_rpde_d
DEFINE g_rpde_d_t        type_g_rpde_d
DEFINE g_rpde_d_o        type_g_rpde_d
DEFINE g_rpde_d_mask_o   DYNAMIC ARRAY OF type_g_rpde_d #轉換遮罩前資料
DEFINE g_rpde_d_mask_n   DYNAMIC ARRAY OF type_g_rpde_d #轉換遮罩後資料
DEFINE g_rpde2_d          DYNAMIC ARRAY OF type_g_rpde2_d
DEFINE g_rpde2_d_t        type_g_rpde2_d
DEFINE g_rpde2_d_o        type_g_rpde2_d
DEFINE g_rpde2_d_mask_o   DYNAMIC ARRAY OF type_g_rpde2_d #轉換遮罩前資料
DEFINE g_rpde2_d_mask_n   DYNAMIC ARRAY OF type_g_rpde2_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
DEFINE g_master_multi_table_t    RECORD
      rpzzl001 LIKE rpzzl_t.rpzzl001,
      rpzzl003 LIKE rpzzl_t.rpzzl003
      END RECORD
DEFINE g_detail_multi_table_t    RECORD
      rpdel001 LIKE rpdel_t.rpdel001,
      rpdel002 LIKE rpdel_t.rpdel002,
      rpdel003 LIKE rpdel_t.rpdel003,
      rpdel004 LIKE rpdel_t.rpdel004
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="arpi900.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("arp","")
 
   #add-point:作業初始化 name="main.init"
   
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT rpzz001,rpzz004,'',rpzz005,rpzz003,rpzz006,rpzz002,rpzzstus,rpzzownid, 
       '',rpzzowndp,'',rpzzcrtid,'',rpzzcrtdp,'',rpzzcrtdt,rpzzmodid,'',rpzzmoddt", 
                      " FROM rpzz_t",
                      " WHERE rpzz001=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE arpi900_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.rpzz001,t0.rpzz004,t0.rpzz005,t0.rpzz003,t0.rpzz006,t0.rpzz002,t0.rpzzstus, 
       t0.rpzzownid,t0.rpzzowndp,t0.rpzzcrtid,t0.rpzzcrtdp,t0.rpzzcrtdt,t0.rpzzmodid,t0.rpzzmoddt,t1.ooag011 , 
       t2.ooefl003 ,t3.ooag011 ,t4.ooefl003 ,t5.ooag011",
               " FROM rpzz_t t0",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent="||g_enterprise||" AND t1.ooag001=t0.rpzzownid  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=t0.rpzzowndp AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent="||g_enterprise||" AND t3.ooag001=t0.rpzzcrtid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent="||g_enterprise||" AND t4.ooefl001=t0.rpzzcrtdp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent="||g_enterprise||" AND t5.ooag001=t0.rpzzmodid  ",
 
               " WHERE  t0.rpzz001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE arpi900_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_arpi900 WITH FORM cl_ap_formpath("arp",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL arpi900_init()   
 
      #進入選單 Menu (="N")
      CALL arpi900_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_arpi900
      
   END IF 
   
   CLOSE arpi900_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="arpi900.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION arpi900_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
   LET g_detail_idx_list[2] = 1
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('rpzzstus','17','N,Y')
 
      CALL cl_set_combo_scc('rpzz006','217') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1','2',","1")
   CALL g_idx_group.addAttribute("","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   IF FGL_GETENV("DGENV") = "s" THEN
      CALL cl_set_combo_module_reg("rpzz004",1)
   ELSE   
      CALL cl_set_combo_module("rpzz004",1)
   END IF
   CALL cl_set_combo_industry("rpzz005")
   #end add-point
   
   #初始化搜尋條件
   CALL arpi900_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="arpi900.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION arpi900_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL arpi900_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_rpzz_m.* TO NULL
         CALL g_rpde_d.clear()
         CALL g_rpde2_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL arpi900_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL arpi900_fetch('') # reload data
               LET l_ac = 1
               CALL arpi900_ui_detailshow() #Setting the current row 
         
               CALL arpi900_idx_chk()
               #NEXT FIELD rpde002
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_rpde_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL arpi900_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1','2',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1','2',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL arpi900_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_rpde2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL arpi900_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[2] = l_ac
               CALL g_idx_group.addAttribute("",l_ac)
               
               #add-point:page2, before row動作 name="ui_dialog.body2.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue(""))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL arpi900_idx_chk()
               #add-point:page2自定義行為 name="ui_dialog.body2.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為 name="ui_dialog.body2.action"
            
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL arpi900_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL arpi900_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL arpi900_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL arpi900_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL arpi900_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL arpi900_set_act_visible()   
            CALL arpi900_set_act_no_visible()
            IF NOT (g_rpzz_m.rpzz001 IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " ",
                                  " rpzz001 = '", g_rpzz_m.rpzz001, "' "
 
               #填到對應位置
               CALL arpi900_browser_fill("")
            END IF
         
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "rpzz_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rpde_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL arpi900_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "rpzz_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rpde_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL arpi900_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code = "-100" 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL arpi900_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               
               #end add-point
               CALL arpi900_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL arpi900_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL arpi900_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL arpi900_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL arpi900_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL arpi900_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL arpi900_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL arpi900_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL arpi900_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL arpi900_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL arpi900_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_rpde_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_rpde2_d)
                  LET g_export_id[2]   = "s_detail2"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD rpde002
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL arpi900_modify()
               #add-point:ON ACTION modify name="menu.modify"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL arpi900_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL arpi900_delete()
               #add-point:ON ACTION delete name="menu.delete"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL arpi900_insert()
               #add-point:ON ACTION insert name="menu.insert"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION quickprint
            LET g_action_choice="quickprint"
            IF cl_auth_chk_act("quickprint") THEN
               
               #add-point:ON ACTION quickprint name="menu.quickprint"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL arpi900_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL arpi900_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
 
 
 
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL arpi900_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL arpi900_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL arpi900_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow('')
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
 
      #(ver:79) ---add start---
      #add-point:ui_dialog段 after dialog name="ui_dialog.exit_dialog"
      
      #end add-point
      #(ver:79) --- add end ---
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
 
{</section>}
 
{<section id="arpi900.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION arpi900_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT rpzz001 ",
                      " FROM rpzz_t ",
                      " ",
                      " LEFT JOIN rpde_t ON rpzz001 = rpde001 ", "  ",
                      #add-point:browser_fill段sql(rpde_t1) name="browser_fill.cnt.join.}"
                      
                      #end add-point
 
 
                      " LEFT JOIN rpzzl_t ON rpzz001 = rpzzl001 AND rpzzl002 = '",g_dlang,"' ", 
                      " LEFT JOIN rpdel_t ON rpzz001 = rpdel001 AND rpde002 = rpdel002 AND rpdel003 = '",g_dlang,"' ", 
 
 
                      " WHERE   ",l_wc, " AND ", l_wc2, cl_sql_add_filter("rpzz_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT rpzz001 ",
                      " FROM rpzz_t ", 
                      "  ",
                      "  LEFT JOIN rpzzl_t ON rpzz001 = rpzzl001 AND rpzzl002 = '",g_dlang,"' ",
                      " WHERE  ",l_wc CLIPPED, cl_sql_add_filter("rpzz_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code = 9035 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_rpzz_m.* TO NULL
      CALL g_rpde_d.clear()        
      CALL g_rpde2_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.rpzz001,t0.rpzz005 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.rpzzstus,t0.rpzz001,t0.rpzz005,t1.rpzzl003 ,t2.gzoi002 ",
                  " FROM rpzz_t t0",
                  "  ",
                  "  LEFT JOIN rpde_t ON rpzz001 = rpde001 ", "  ", 
                  #add-point:browser_fill段sql(rpde_t1) name="browser_fill.join.rpde_t1"
                  
                  #end add-point
 
 
                  " LEFT JOIN rpdel_t ON rpzz001 = rpdel001 AND rpde002 = rpdel002 AND rpdel003 = '",g_dlang,"' ", 
 
 
                                 " LEFT JOIN rpzzl_t t1 ON t1.rpzzl001=t0.rpzz001 AND t1.rpzzl002='"||g_dlang||"' ",
               " LEFT JOIN gzoi_t t2 ON t2.gzoi001=t0.rpzz005  ",
 
                  " WHERE  ",l_wc," AND ",l_wc2, cl_sql_add_filter("rpzz_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.rpzzstus,t0.rpzz001,t0.rpzz005,t1.rpzzl003 ,t2.gzoi002 ",
                  " FROM rpzz_t t0",
                  "  ",
                                 " LEFT JOIN rpzzl_t t1 ON t1.rpzzl001=t0.rpzz001 AND t1.rpzzl002='"||g_dlang||"' ",
               " LEFT JOIN gzoi_t t2 ON t2.gzoi001=t0.rpzz005  ",
 
                  " WHERE  ",l_wc, cl_sql_add_filter("rpzz_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   
   #end add-point
   LET g_sql = g_sql, " ORDER BY rpzz001 ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"rpzz_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_rpzz001,g_browser[g_cnt].b_rpzz005, 
          g_browser[g_cnt].b_rpzz001_desc,g_browser[g_cnt].b_rpzz005_desc
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         
         #end add-point
      
         #遮罩相關處理
         CALL arpi900_browser_mask()
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/inactive.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/active.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_rpzz001) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
 
END FUNCTION
 
{</section>}
 
{<section id="arpi900.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION arpi900_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_rpzz_m.rpzz001 = g_browser[g_current_idx].b_rpzz001   
 
   EXECUTE arpi900_master_referesh USING g_rpzz_m.rpzz001 INTO g_rpzz_m.rpzz001,g_rpzz_m.rpzz004,g_rpzz_m.rpzz005, 
       g_rpzz_m.rpzz003,g_rpzz_m.rpzz006,g_rpzz_m.rpzz002,g_rpzz_m.rpzzstus,g_rpzz_m.rpzzownid,g_rpzz_m.rpzzowndp, 
       g_rpzz_m.rpzzcrtid,g_rpzz_m.rpzzcrtdp,g_rpzz_m.rpzzcrtdt,g_rpzz_m.rpzzmodid,g_rpzz_m.rpzzmoddt, 
       g_rpzz_m.rpzzownid_desc,g_rpzz_m.rpzzowndp_desc,g_rpzz_m.rpzzcrtid_desc,g_rpzz_m.rpzzcrtdp_desc, 
       g_rpzz_m.rpzzmodid_desc
   
   CALL arpi900_rpzz_t_mask()
   CALL arpi900_show()
      
END FUNCTION
 
{</section>}
 
{<section id="arpi900.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION arpi900_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="arpi900.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION arpi900_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_rpzz001 = g_rpzz_m.rpzz001 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="arpi900.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION arpi900_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_rpzz_m.* TO NULL
   CALL g_rpde_d.clear()        
   CALL g_rpde2_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON rpzz001,rpzz004,rpzzl003,rpzz005,rpzz003,rpzz006,rpzz002,rpzzstus,rpzzownid, 
          rpzzowndp,rpzzcrtid,rpzzcrtdp,rpzzcrtdt,rpzzmodid,rpzzmoddt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<rpzzcrtdt>>----
         AFTER FIELD rpzzcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<rpzzmoddt>>----
         AFTER FIELD rpzzmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rpzzcnfdt>>----
         
         #----<<rpzzpstdt>>----
 
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.rpzz001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpzz001
            #add-point:ON ACTION controlp INFIELD rpzz001 name="construct.c.rpzz001"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_rpzz001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rpzz001  #顯示到畫面上
            NEXT FIELD rpzz001                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpzz001
            #add-point:BEFORE FIELD rpzz001 name="construct.b.rpzz001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpzz001
            
            #add-point:AFTER FIELD rpzz001 name="construct.a.rpzz001"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpzz004
            #add-point:BEFORE FIELD rpzz004 name="construct.b.rpzz004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpzz004
            
            #add-point:AFTER FIELD rpzz004 name="construct.a.rpzz004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rpzz004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpzz004
            #add-point:ON ACTION controlp INFIELD rpzz004 name="construct.c.rpzz004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpzzl003
            #add-point:BEFORE FIELD rpzzl003 name="construct.b.rpzzl003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpzzl003
            
            #add-point:AFTER FIELD rpzzl003 name="construct.a.rpzzl003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rpzzl003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpzzl003
            #add-point:ON ACTION controlp INFIELD rpzzl003 name="construct.c.rpzzl003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpzz005
            #add-point:BEFORE FIELD rpzz005 name="construct.b.rpzz005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpzz005
            
            #add-point:AFTER FIELD rpzz005 name="construct.a.rpzz005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rpzz005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpzz005
            #add-point:ON ACTION controlp INFIELD rpzz005 name="construct.c.rpzz005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpzz003
            #add-point:BEFORE FIELD rpzz003 name="construct.b.rpzz003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpzz003
            
            #add-point:AFTER FIELD rpzz003 name="construct.a.rpzz003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rpzz003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpzz003
            #add-point:ON ACTION controlp INFIELD rpzz003 name="construct.c.rpzz003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpzz006
            #add-point:BEFORE FIELD rpzz006 name="construct.b.rpzz006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpzz006
            
            #add-point:AFTER FIELD rpzz006 name="construct.a.rpzz006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rpzz006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpzz006
            #add-point:ON ACTION controlp INFIELD rpzz006 name="construct.c.rpzz006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpzz002
            #add-point:BEFORE FIELD rpzz002 name="construct.b.rpzz002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpzz002
            
            #add-point:AFTER FIELD rpzz002 name="construct.a.rpzz002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rpzz002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpzz002
            #add-point:ON ACTION controlp INFIELD rpzz002 name="construct.c.rpzz002"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpzzstus
            #add-point:BEFORE FIELD rpzzstus name="construct.b.rpzzstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpzzstus
            
            #add-point:AFTER FIELD rpzzstus name="construct.a.rpzzstus"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rpzzstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpzzstus
            #add-point:ON ACTION controlp INFIELD rpzzstus name="construct.c.rpzzstus"
            
            #END add-point
 
 
         #Ctrlp:construct.c.rpzzownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpzzownid
            #add-point:ON ACTION controlp INFIELD rpzzownid name="construct.c.rpzzownid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rpzzownid  #顯示到畫面上
            NEXT FIELD rpzzownid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpzzownid
            #add-point:BEFORE FIELD rpzzownid name="construct.b.rpzzownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpzzownid
            
            #add-point:AFTER FIELD rpzzownid name="construct.a.rpzzownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rpzzowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpzzowndp
            #add-point:ON ACTION controlp INFIELD rpzzowndp name="construct.c.rpzzowndp"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rpzzowndp  #顯示到畫面上
            NEXT FIELD rpzzowndp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpzzowndp
            #add-point:BEFORE FIELD rpzzowndp name="construct.b.rpzzowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpzzowndp
            
            #add-point:AFTER FIELD rpzzowndp name="construct.a.rpzzowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rpzzcrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpzzcrtid
            #add-point:ON ACTION controlp INFIELD rpzzcrtid name="construct.c.rpzzcrtid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rpzzcrtid  #顯示到畫面上
            NEXT FIELD rpzzcrtid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpzzcrtid
            #add-point:BEFORE FIELD rpzzcrtid name="construct.b.rpzzcrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpzzcrtid
            
            #add-point:AFTER FIELD rpzzcrtid name="construct.a.rpzzcrtid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.rpzzcrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpzzcrtdp
            #add-point:ON ACTION controlp INFIELD rpzzcrtdp name="construct.c.rpzzcrtdp"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rpzzcrtdp  #顯示到畫面上
            NEXT FIELD rpzzcrtdp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpzzcrtdp
            #add-point:BEFORE FIELD rpzzcrtdp name="construct.b.rpzzcrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpzzcrtdp
            
            #add-point:AFTER FIELD rpzzcrtdp name="construct.a.rpzzcrtdp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpzzcrtdt
            #add-point:BEFORE FIELD rpzzcrtdt name="construct.b.rpzzcrtdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.rpzzmodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpzzmodid
            #add-point:ON ACTION controlp INFIELD rpzzmodid name="construct.c.rpzzmodid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rpzzmodid  #顯示到畫面上
            NEXT FIELD rpzzmodid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpzzmodid
            #add-point:BEFORE FIELD rpzzmodid name="construct.b.rpzzmodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpzzmodid
            
            #add-point:AFTER FIELD rpzzmodid name="construct.a.rpzzmodid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpzzmoddt
            #add-point:BEFORE FIELD rpzzmoddt name="construct.b.rpzzmoddt"
            
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON rpde002,rpdel004,rpde004,rpde003,rpdestus,rpdeownid,rpdeowndp,rpdecrtid, 
          rpdecrtdp,rpdecrtdt,rpdemodid,rpdemoddt
           FROM s_detail1[1].rpde002,s_detail1[1].rpdel004,s_detail1[1].rpde004,s_detail1[1].rpde003, 
               s_detail1[1].rpdestus,s_detail2[1].rpdeownid,s_detail2[1].rpdeowndp,s_detail2[1].rpdecrtid, 
               s_detail2[1].rpdecrtdp,s_detail2[1].rpdecrtdt,s_detail2[1].rpdemodid,s_detail2[1].rpdemoddt 
 
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理
       #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<rpdecrtdt>>----
         AFTER FIELD rpdecrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<rpdemoddt>>----
         AFTER FIELD rpdemoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rpdecnfdt>>----
         
         #----<<rpdepstdt>>----
 
 
 
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpde002
            #add-point:BEFORE FIELD rpde002 name="construct.b.page1.rpde002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpde002
            
            #add-point:AFTER FIELD rpde002 name="construct.a.page1.rpde002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rpde002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpde002
            #add-point:ON ACTION controlp INFIELD rpde002 name="construct.c.page1.rpde002"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpdel004
            #add-point:BEFORE FIELD rpdel004 name="construct.b.page1.rpdel004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpdel004
            
            #add-point:AFTER FIELD rpdel004 name="construct.a.page1.rpdel004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rpdel004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpdel004
            #add-point:ON ACTION controlp INFIELD rpdel004 name="construct.c.page1.rpdel004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpde004
            #add-point:BEFORE FIELD rpde004 name="construct.b.page1.rpde004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpde004
            
            #add-point:AFTER FIELD rpde004 name="construct.a.page1.rpde004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rpde004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpde004
            #add-point:ON ACTION controlp INFIELD rpde004 name="construct.c.page1.rpde004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpde003
            #add-point:BEFORE FIELD rpde003 name="construct.b.page1.rpde003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpde003
            
            #add-point:AFTER FIELD rpde003 name="construct.a.page1.rpde003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rpde003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpde003
            #add-point:ON ACTION controlp INFIELD rpde003 name="construct.c.page1.rpde003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpdestus
            #add-point:BEFORE FIELD rpdestus name="construct.b.page1.rpdestus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpdestus
            
            #add-point:AFTER FIELD rpdestus name="construct.a.page1.rpdestus"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rpdestus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpdestus
            #add-point:ON ACTION controlp INFIELD rpdestus name="construct.c.page1.rpdestus"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.rpdeownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpdeownid
            #add-point:ON ACTION controlp INFIELD rpdeownid name="construct.c.page2.rpdeownid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rpdeownid  #顯示到畫面上
            NEXT FIELD rpdeownid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpdeownid
            #add-point:BEFORE FIELD rpdeownid name="construct.b.page2.rpdeownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpdeownid
            
            #add-point:AFTER FIELD rpdeownid name="construct.a.page2.rpdeownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rpdeowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpdeowndp
            #add-point:ON ACTION controlp INFIELD rpdeowndp name="construct.c.page2.rpdeowndp"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rpdeowndp  #顯示到畫面上
            NEXT FIELD rpdeowndp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpdeowndp
            #add-point:BEFORE FIELD rpdeowndp name="construct.b.page2.rpdeowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpdeowndp
            
            #add-point:AFTER FIELD rpdeowndp name="construct.a.page2.rpdeowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rpdecrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpdecrtid
            #add-point:ON ACTION controlp INFIELD rpdecrtid name="construct.c.page2.rpdecrtid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rpdecrtid  #顯示到畫面上
            NEXT FIELD rpdecrtid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpdecrtid
            #add-point:BEFORE FIELD rpdecrtid name="construct.b.page2.rpdecrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpdecrtid
            
            #add-point:AFTER FIELD rpdecrtid name="construct.a.page2.rpdecrtid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.rpdecrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpdecrtdp
            #add-point:ON ACTION controlp INFIELD rpdecrtdp name="construct.c.page2.rpdecrtdp"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rpdecrtdp  #顯示到畫面上
            NEXT FIELD rpdecrtdp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpdecrtdp
            #add-point:BEFORE FIELD rpdecrtdp name="construct.b.page2.rpdecrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpdecrtdp
            
            #add-point:AFTER FIELD rpdecrtdp name="construct.a.page2.rpdecrtdp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpdecrtdt
            #add-point:BEFORE FIELD rpdecrtdt name="construct.b.page2.rpdecrtdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.rpdemodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpdemodid
            #add-point:ON ACTION controlp INFIELD rpdemodid name="construct.c.page2.rpdemodid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rpdemodid  #顯示到畫面上
            NEXT FIELD rpdemodid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpdemodid
            #add-point:BEFORE FIELD rpdemodid name="construct.b.page2.rpdemodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpdemodid
            
            #add-point:AFTER FIELD rpdemodid name="construct.a.page2.rpdemodid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpdemoddt
            #add-point:BEFORE FIELD rpdemoddt name="construct.b.page2.rpdemoddt"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "rpzz_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "rpde_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="arpi900.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION arpi900_filter()
   #add-point:filter段define name="filter.define_customerization"
   
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON rpzz001,rpzz005
                          FROM s_browse[1].b_rpzz001,s_browse[1].b_rpzz005
 
         BEFORE CONSTRUCT
               DISPLAY arpi900_filter_parser('rpzz001') TO s_browse[1].b_rpzz001
            DISPLAY arpi900_filter_parser('rpzz005') TO s_browse[1].b_rpzz005
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL arpi900_filter_show('rpzz001')
   CALL arpi900_filter_show('rpzz005')
 
END FUNCTION
 
{</section>}
 
{<section id="arpi900.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION arpi900_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="arpi900.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION arpi900_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = arpi900_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="arpi900.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION arpi900_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_rpde_d.clear()
   CALL g_rpde2_d.clear()
 
   
   #add-point:query段other name="query.other"
   
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL arpi900_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL arpi900_browser_fill("")
      CALL arpi900_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
   LET g_detail_idx_list[2] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL arpi900_filter_show('rpzz001')
   CALL arpi900_filter_show('rpzz005')
   CALL arpi900_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "-100" 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
   ELSE
      CALL arpi900_fetch("F") 
      #顯示單身筆數
      CALL arpi900_idx_chk()
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="arpi900.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION arpi900_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_rpzz_m.rpzz001 = g_browser[g_current_idx].b_rpzz001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE arpi900_master_referesh USING g_rpzz_m.rpzz001 INTO g_rpzz_m.rpzz001,g_rpzz_m.rpzz004,g_rpzz_m.rpzz005, 
       g_rpzz_m.rpzz003,g_rpzz_m.rpzz006,g_rpzz_m.rpzz002,g_rpzz_m.rpzzstus,g_rpzz_m.rpzzownid,g_rpzz_m.rpzzowndp, 
       g_rpzz_m.rpzzcrtid,g_rpzz_m.rpzzcrtdp,g_rpzz_m.rpzzcrtdt,g_rpzz_m.rpzzmodid,g_rpzz_m.rpzzmoddt, 
       g_rpzz_m.rpzzownid_desc,g_rpzz_m.rpzzowndp_desc,g_rpzz_m.rpzzcrtid_desc,g_rpzz_m.rpzzcrtdp_desc, 
       g_rpzz_m.rpzzmodid_desc
   
   #遮罩相關處理
   LET g_rpzz_m_mask_o.* =  g_rpzz_m.*
   CALL arpi900_rpzz_t_mask()
   LET g_rpzz_m_mask_n.* =  g_rpzz_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL arpi900_set_act_visible()   
   CALL arpi900_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
   
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
   
   #保存單頭舊值
   LET g_rpzz_m_t.* = g_rpzz_m.*
   LET g_rpzz_m_o.* = g_rpzz_m.*
   
   LET g_data_owner = g_rpzz_m.rpzzownid      
   LET g_data_dept  = g_rpzz_m.rpzzowndp
   
   #重新顯示   
   CALL arpi900_show()
 
   
 
END FUNCTION
 
{</section>}
 
{<section id="arpi900.insert" >}
#+ 資料新增
PRIVATE FUNCTION arpi900_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_rpde_d.clear()   
   CALL g_rpde2_d.clear()  
 
 
   INITIALIZE g_rpzz_m.* TO NULL             #DEFAULT 設定
   
   LET g_rpzz001_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_rpzz_m.rpzzownid = g_user
      LET g_rpzz_m.rpzzowndp = g_dept
      LET g_rpzz_m.rpzzcrtid = g_user
      LET g_rpzz_m.rpzzcrtdp = g_dept 
      LET g_rpzz_m.rpzzcrtdt = cl_get_current()
      LET g_rpzz_m.rpzzmodid = g_user
      LET g_rpzz_m.rpzzmoddt = cl_get_current()
      LET g_rpzz_m.rpzzstus = 'Y'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_rpzz_m.rpzz005 = "sd"
      LET g_rpzz_m.rpzz006 = "2"
 
  
      #add-point:單頭預設值 name="insert.default"
      LET g_rpzz_m.rpzz002 = FGL_GETENV("DGENV")
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_rpzz_m_t.* = g_rpzz_m.*
      LET g_rpzz_m_o.* = g_rpzz_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_rpzz_m.rpzzstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
 
    
      CALL arpi900_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_rpzz_m.* TO NULL
         INITIALIZE g_rpde_d TO NULL
         INITIALIZE g_rpde2_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         
         #end add-point 
         CALL arpi900_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_rpde_d.clear()
      #CALL g_rpde2_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL arpi900_set_act_visible()   
   CALL arpi900_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_rpzz001_t = g_rpzz_m.rpzz001
 
   
   #組合新增資料的條件
   LET g_add_browse = " ",
                      " rpzz001 = '", g_rpzz_m.rpzz001, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL arpi900_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE arpi900_cl
   
   CALL arpi900_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE arpi900_master_referesh USING g_rpzz_m.rpzz001 INTO g_rpzz_m.rpzz001,g_rpzz_m.rpzz004,g_rpzz_m.rpzz005, 
       g_rpzz_m.rpzz003,g_rpzz_m.rpzz006,g_rpzz_m.rpzz002,g_rpzz_m.rpzzstus,g_rpzz_m.rpzzownid,g_rpzz_m.rpzzowndp, 
       g_rpzz_m.rpzzcrtid,g_rpzz_m.rpzzcrtdp,g_rpzz_m.rpzzcrtdt,g_rpzz_m.rpzzmodid,g_rpzz_m.rpzzmoddt, 
       g_rpzz_m.rpzzownid_desc,g_rpzz_m.rpzzowndp_desc,g_rpzz_m.rpzzcrtid_desc,g_rpzz_m.rpzzcrtdp_desc, 
       g_rpzz_m.rpzzmodid_desc
   
   
   #遮罩相關處理
   LET g_rpzz_m_mask_o.* =  g_rpzz_m.*
   CALL arpi900_rpzz_t_mask()
   LET g_rpzz_m_mask_n.* =  g_rpzz_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_rpzz_m.rpzz001,g_rpzz_m.rpzz004,g_rpzz_m.rpzzl003,g_rpzz_m.rpzz005,g_rpzz_m.rpzz003, 
       g_rpzz_m.rpzz006,g_rpzz_m.rpzz002,g_rpzz_m.rpzzstus,g_rpzz_m.rpzzownid,g_rpzz_m.rpzzownid_desc, 
       g_rpzz_m.rpzzowndp,g_rpzz_m.rpzzowndp_desc,g_rpzz_m.rpzzcrtid,g_rpzz_m.rpzzcrtid_desc,g_rpzz_m.rpzzcrtdp, 
       g_rpzz_m.rpzzcrtdp_desc,g_rpzz_m.rpzzcrtdt,g_rpzz_m.rpzzmodid,g_rpzz_m.rpzzmodid_desc,g_rpzz_m.rpzzmoddt 
 
   
   #add-point:新增結束後 name="insert.after"
   
   #end add-point 
   
   LET g_data_owner = g_rpzz_m.rpzzownid      
   LET g_data_dept  = g_rpzz_m.rpzzowndp
   
   #功能已完成,通報訊息中心
   CALL arpi900_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="arpi900.modify" >}
#+ 資料修改
PRIVATE FUNCTION arpi900_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   #保存單頭舊值
   LET g_rpzz_m_t.* = g_rpzz_m.*
   LET g_rpzz_m_o.* = g_rpzz_m.*
   
   IF g_rpzz_m.rpzz001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_rpzz001_t = g_rpzz_m.rpzz001
 
   CALL s_transaction_begin()
   
   OPEN arpi900_cl USING g_rpzz_m.rpzz001
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN arpi900_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE arpi900_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE arpi900_master_referesh USING g_rpzz_m.rpzz001 INTO g_rpzz_m.rpzz001,g_rpzz_m.rpzz004,g_rpzz_m.rpzz005, 
       g_rpzz_m.rpzz003,g_rpzz_m.rpzz006,g_rpzz_m.rpzz002,g_rpzz_m.rpzzstus,g_rpzz_m.rpzzownid,g_rpzz_m.rpzzowndp, 
       g_rpzz_m.rpzzcrtid,g_rpzz_m.rpzzcrtdp,g_rpzz_m.rpzzcrtdt,g_rpzz_m.rpzzmodid,g_rpzz_m.rpzzmoddt, 
       g_rpzz_m.rpzzownid_desc,g_rpzz_m.rpzzowndp_desc,g_rpzz_m.rpzzcrtid_desc,g_rpzz_m.rpzzcrtdp_desc, 
       g_rpzz_m.rpzzmodid_desc
   
   #檢查是否允許此動作
   IF NOT arpi900_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_rpzz_m_mask_o.* =  g_rpzz_m.*
   CALL arpi900_rpzz_t_mask()
   LET g_rpzz_m_mask_n.* =  g_rpzz_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
 
   
   CALL arpi900_show()
   #add-point:modify段show之後 name="modify.after_show"
   
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
 
    
   WHILE TRUE
      LET g_rpzz001_t = g_rpzz_m.rpzz001
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_rpzz_m.rpzzmodid = g_user 
LET g_rpzz_m.rpzzmoddt = cl_get_current()
LET g_rpzz_m.rpzzmodid_desc = cl_get_username(g_rpzz_m.rpzzmodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL arpi900_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE rpzz_t SET (rpzzmodid,rpzzmoddt) = (g_rpzz_m.rpzzmodid,g_rpzz_m.rpzzmoddt)
          WHERE  rpzz001 = g_rpzz001_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_rpzz_m.* = g_rpzz_m_t.*
            CALL arpi900_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_rpzz_m.rpzz001 != g_rpzz_m_t.rpzz001
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         
         #end add-point
         
         #更新單身key值
         UPDATE rpde_t SET rpde001 = g_rpzz_m.rpzz001
 
          WHERE  rpde001 = g_rpzz_m_t.rpzz001
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "rpde_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rpde_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         LET l_new_key[01] = g_rpzz_m.rpzz001
LET l_old_key[01] = g_rpzz001_t
LET l_field_key[01] = 'rpdel001'
CALL cl_multitable_key_upd(l_new_key, l_old_key, l_field_key, 'rpdel_t')
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL arpi900_set_act_visible()   
   CALL arpi900_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " ",
                      " rpzz001 = '", g_rpzz_m.rpzz001, "' "
 
   #填到對應位置
   CALL arpi900_browser_fill("")
 
   CLOSE arpi900_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL arpi900_msgcentre_notify('modify')
 
END FUNCTION 
 
{</section>}
 
{<section id="arpi900.input" >}
#+ 資料輸入
PRIVATE FUNCTION arpi900_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE li_chk_flag           LIKE type_t.num5
   DEFINE li_result             LIKE type_t.num5
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   LET li_chk_flag = 0 
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_rpzz_m.rpzz001,g_rpzz_m.rpzz004,g_rpzz_m.rpzzl003,g_rpzz_m.rpzz005,g_rpzz_m.rpzz003, 
       g_rpzz_m.rpzz006,g_rpzz_m.rpzz002,g_rpzz_m.rpzzstus,g_rpzz_m.rpzzownid,g_rpzz_m.rpzzownid_desc, 
       g_rpzz_m.rpzzowndp,g_rpzz_m.rpzzowndp_desc,g_rpzz_m.rpzzcrtid,g_rpzz_m.rpzzcrtid_desc,g_rpzz_m.rpzzcrtdp, 
       g_rpzz_m.rpzzcrtdp_desc,g_rpzz_m.rpzzcrtdt,g_rpzz_m.rpzzmodid,g_rpzz_m.rpzzmodid_desc,g_rpzz_m.rpzzmoddt 
 
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT rpde002,rpde004,rpde003,rpdestus,rpde002,rpdeownid,rpdeowndp,rpdecrtid, 
       rpdecrtdp,rpdecrtdt,rpdemodid,rpdemoddt FROM rpde_t WHERE rpde001=? AND rpde002=? FOR UPDATE" 
 
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE arpi900_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
   
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL arpi900_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL arpi900_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_rpzz_m.rpzz001,g_rpzz_m.rpzz004,g_rpzz_m.rpzzl003,g_rpzz_m.rpzz005,g_rpzz_m.rpzz003, 
       g_rpzz_m.rpzz006,g_rpzz_m.rpzz002,g_rpzz_m.rpzzstus
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="arpi900.input.head" >}
      #單頭段
      INPUT BY NAME g_rpzz_m.rpzz001,g_rpzz_m.rpzz004,g_rpzz_m.rpzzl003,g_rpzz_m.rpzz005,g_rpzz_m.rpzz003, 
          g_rpzz_m.rpzz006,g_rpzz_m.rpzz002,g_rpzz_m.rpzzstus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item name="input.master_input.update_item"
               IF NOT cl_null(g_rpzz_m.rpzz001) THEN
                  CALL n_rpzzl(g_rpzz_m.rpzz001) 
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_rpzz_m.rpzz001
                  CALL ap_ref_array2(g_ref_fields," SELECT rpzzl003 FROM rpzzl_t WHERE rpzzl001 = ? AND rpzzl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
                  LET g_rpzz_m.rpzzl003 = g_rtn_fields[1]
                  #DISPLAY BY NAME g_rpzz_m.rpzzl003
               END IF 
               #END add-point
            END IF
 
 
 
 
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN arpi900_cl USING g_rpzz_m.rpzz001
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN arpi900_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE arpi900_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            LET g_master_multi_table_t.rpzzl001 = g_rpzz_m.rpzz001
LET g_master_multi_table_t.rpzzl003 = g_rpzz_m.rpzzl003
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.rpzzl001 = ''
LET g_master_multi_table_t.rpzzl003 = ''
 
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL arpi900_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            
            #end add-point
            CALL arpi900_set_no_entry(p_cmd)
    
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpzz001
            #add-point:BEFORE FIELD rpzz001 name="input.b.rpzz001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpzz001
            
            #add-point:AFTER FIELD rpzz001 name="input.a.rpzz001"
            #應用 a05 樣板自動產生(Version:2)
            LET g_rpzz_m.rpzz001 = DOWNSHIFT(g_rpzz_m.rpzz001)
            #確認資料無重複
            IF  NOT cl_null(g_rpzz_m.rpzz001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_rpzz_m.rpzz001 != g_rpzz001_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rpzz_t WHERE "||"rpzz001 = '"||g_rpzz_m.rpzz001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
                  
                  #161028-00045#12   161129 earl mod s
#                  IF NOT arpi900_chk_rpzz001() THEN
#                     NEXT FIELD rpzz001
#                  END IF                  
                  #161028-00045#12   161129 earl mod e
               END IF
            END IF



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rpzz001
            #add-point:ON CHANGE rpzz001 name="input.g.rpzz001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpzz004
            #add-point:BEFORE FIELD rpzz004 name="input.b.rpzz004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpzz004
            
            #add-point:AFTER FIELD rpzz004 name="input.a.rpzz004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rpzz004
            #add-point:ON CHANGE rpzz004 name="input.g.rpzz004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpzzl003
            #add-point:BEFORE FIELD rpzzl003 name="input.b.rpzzl003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpzzl003
            
            #add-point:AFTER FIELD rpzzl003 name="input.a.rpzzl003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rpzzl003
            #add-point:ON CHANGE rpzzl003 name="input.g.rpzzl003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpzz005
            #add-point:BEFORE FIELD rpzz005 name="input.b.rpzz005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpzz005
            
            #add-point:AFTER FIELD rpzz005 name="input.a.rpzz005"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rpzz005
            #add-point:ON CHANGE rpzz005 name="input.g.rpzz005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpzz003
            #add-point:BEFORE FIELD rpzz003 name="input.b.rpzz003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpzz003
            
            #add-point:AFTER FIELD rpzz003 name="input.a.rpzz003"
            IF NOT arpi900_chk_rpzz003(g_rpzz_m.rpzz003) THEN
               NEXT FIELD rpzz003
            END IF 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rpzz003
            #add-point:ON CHANGE rpzz003 name="input.g.rpzz003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpzz006
            #add-point:BEFORE FIELD rpzz006 name="input.b.rpzz006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpzz006
            
            #add-point:AFTER FIELD rpzz006 name="input.a.rpzz006"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rpzz006
            #add-point:ON CHANGE rpzz006 name="input.g.rpzz006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpzz002
            #add-point:BEFORE FIELD rpzz002 name="input.b.rpzz002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpzz002
            
            #add-point:AFTER FIELD rpzz002 name="input.a.rpzz002"
            CALL arpi900_chk_rpzz002() RETURNING li_chk_flag,li_result
            IF NOT li_result THEN 
               LET g_rpzz_m.rpzz002 = g_rpzz_m_t.rpzz002
               NEXT FIELD rpzz002
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rpzz002
            #add-point:ON CHANGE rpzz002 name="input.g.rpzz002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpzzstus
            #add-point:BEFORE FIELD rpzzstus name="input.b.rpzzstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpzzstus
            
            #add-point:AFTER FIELD rpzzstus name="input.a.rpzzstus"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rpzzstus
            #add-point:ON CHANGE rpzzstus name="input.g.rpzzstus"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.rpzz001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpzz001
            #add-point:ON ACTION controlp INFIELD rpzz001 name="input.c.rpzz001"
            
            #END add-point
 
 
         #Ctrlp:input.c.rpzz004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpzz004
            #add-point:ON ACTION controlp INFIELD rpzz004 name="input.c.rpzz004"
            
            #END add-point
 
 
         #Ctrlp:input.c.rpzzl003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpzzl003
            #add-point:ON ACTION controlp INFIELD rpzzl003 name="input.c.rpzzl003"
            
            #END add-point
 
 
         #Ctrlp:input.c.rpzz005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpzz005
            #add-point:ON ACTION controlp INFIELD rpzz005 name="input.c.rpzz005"
            
            #END add-point
 
 
         #Ctrlp:input.c.rpzz003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpzz003
            #add-point:ON ACTION controlp INFIELD rpzz003 name="input.c.rpzz003"
            
            #END add-point
 
 
         #Ctrlp:input.c.rpzz006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpzz006
            #add-point:ON ACTION controlp INFIELD rpzz006 name="input.c.rpzz006"
            
            #END add-point
 
 
         #Ctrlp:input.c.rpzz002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpzz002
            #add-point:ON ACTION controlp INFIELD rpzz002 name="input.c.rpzz002"
            
            #END add-point
 
 
         #Ctrlp:input.c.rpzzstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpzzstus
            #add-point:ON ACTION controlp INFIELD rpzzstus name="input.c.rpzzstus"
            
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_rpzz_m.rpzz001
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               
               #end add-point
               
               INSERT INTO rpzz_t (rpzz001,rpzz004,rpzz005,rpzz003,rpzz006,rpzz002,rpzzstus,rpzzownid, 
                   rpzzowndp,rpzzcrtid,rpzzcrtdp,rpzzcrtdt,rpzzmodid,rpzzmoddt)
               VALUES (g_rpzz_m.rpzz001,g_rpzz_m.rpzz004,g_rpzz_m.rpzz005,g_rpzz_m.rpzz003,g_rpzz_m.rpzz006, 
                   g_rpzz_m.rpzz002,g_rpzz_m.rpzzstus,g_rpzz_m.rpzzownid,g_rpzz_m.rpzzowndp,g_rpzz_m.rpzzcrtid, 
                   g_rpzz_m.rpzzcrtdp,g_rpzz_m.rpzzcrtdt,g_rpzz_m.rpzzmodid,g_rpzz_m.rpzzmoddt) 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_rpzz_m:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_rpzz_m.rpzz001 = g_master_multi_table_t.rpzzl001 AND
         g_rpzz_m.rpzzl003 = g_master_multi_table_t.rpzzl003  THEN
         ELSE 
            LET l_var_keys[01] = g_rpzz_m.rpzz001
            LET l_field_keys[01] = 'rpzzl001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.rpzzl001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'rpzzl002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_rpzz_m.rpzzl003
            LET l_fields[01] = 'rpzzl003'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'rpzzl_t')
         END IF 
 
               
               #add-point:單頭新增後 name="input.head.a_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL arpi900_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL arpi900_b_fill()
                  CALL arpi900_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               #當rpzz002 勾選起來是c 時，將APP內含功能、畫面轉為客製開發＂，
	            #並將rpde_t、rpdf_t內所有資料改為客製
               CASE  

                  WHEN li_chk_flag = 1
                        
                     UPDATE rpde_t SET (rpde003,rpdemodid,rpdemoddt) = (g_rpzz_m.rpzz002,g_rpzz_m.rpzzmodid,g_rpzz_m.rpzzmoddt)
                      WHERE rpde001 = g_rpzz001_t  

               END CASE
               #end add-point
               
               #將遮罩欄位還原
               CALL arpi900_rpzz_t_mask_restore('restore_mask_o')
               
               UPDATE rpzz_t SET (rpzz001,rpzz004,rpzz005,rpzz003,rpzz006,rpzz002,rpzzstus,rpzzownid, 
                   rpzzowndp,rpzzcrtid,rpzzcrtdp,rpzzcrtdt,rpzzmodid,rpzzmoddt) = (g_rpzz_m.rpzz001, 
                   g_rpzz_m.rpzz004,g_rpzz_m.rpzz005,g_rpzz_m.rpzz003,g_rpzz_m.rpzz006,g_rpzz_m.rpzz002, 
                   g_rpzz_m.rpzzstus,g_rpzz_m.rpzzownid,g_rpzz_m.rpzzowndp,g_rpzz_m.rpzzcrtid,g_rpzz_m.rpzzcrtdp, 
                   g_rpzz_m.rpzzcrtdt,g_rpzz_m.rpzzmodid,g_rpzz_m.rpzzmoddt)
                WHERE  rpzz001 = g_rpzz001_t
 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "rpzz_t:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_rpzz_m.rpzz001 = g_master_multi_table_t.rpzzl001 AND
         g_rpzz_m.rpzzl003 = g_master_multi_table_t.rpzzl003  THEN
         ELSE 
            LET l_var_keys[01] = g_rpzz_m.rpzz001
            LET l_field_keys[01] = 'rpzzl001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.rpzzl001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'rpzzl002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_rpzz_m.rpzzl003
            LET l_fields[01] = 'rpzzl003'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'rpzzl_t')
         END IF 
 
               
               #將遮罩欄位進行遮蔽
               CALL arpi900_rpzz_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_rpzz_m_t)
               LET g_log2 = util.JSON.stringify(g_rpzz_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_rpzz001_t = g_rpzz_m.rpzz001
 
            
      END INPUT
   
 
{</section>}
 
{<section id="arpi900.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_rpde_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item name="input.detail_input.page1.update_item"
               IF NOT cl_null(g_rpzz_m.rpzz001) AND NOT cl_null(g_rpde_d[l_ac].rpde002) THEN
                  CALL n_rpdel(g_rpzz_m.rpzz001,g_rpde_d[l_ac].rpde002) 
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_rpzz_m.rpzz001
                  LET g_ref_fields[2] = g_rpde_d[l_ac].rpde002
                  CALL ap_ref_array2(g_ref_fields," SELECT rpdel004 FROM rpdel_t WHERE rpdel001 = ? AND rpdel002 = ? AND rpdel003 = '"||g_dlang||"'","") RETURNING g_rtn_fields
                  LET g_rpde_d[l_ac].rpdel004 = g_rtn_fields[1]
                  #DISPLAY BY NAME g_rpde_d[l_ac].rpdel004
               END IF 
               #END add-point
            END IF
 
 
 
 
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_rpde_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL arpi900_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1','2',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_rpde_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN arpi900_cl USING g_rpzz_m.rpzz001
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN arpi900_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE arpi900_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_rpde_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_rpde_d[l_ac].rpde002 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_rpde_d_t.* = g_rpde_d[l_ac].*  #BACKUP
               LET g_rpde_d_o.* = g_rpde_d[l_ac].*  #BACKUP
               CALL arpi900_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               
               #end add-point  
               CALL arpi900_set_no_entry_b(l_cmd)
               IF NOT arpi900_lock_b("rpde_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH arpi900_bcl INTO g_rpde_d[l_ac].rpde002,g_rpde_d[l_ac].rpde004,g_rpde_d[l_ac].rpde003, 
                      g_rpde_d[l_ac].rpdestus,g_rpde2_d[l_ac].rpde002,g_rpde2_d[l_ac].rpdeownid,g_rpde2_d[l_ac].rpdeowndp, 
                      g_rpde2_d[l_ac].rpdecrtid,g_rpde2_d[l_ac].rpdecrtdp,g_rpde2_d[l_ac].rpdecrtdt, 
                      g_rpde2_d[l_ac].rpdemodid,g_rpde2_d[l_ac].rpdemoddt
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_rpde_d_t.rpde002,":",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_rpde_d_mask_o[l_ac].* =  g_rpde_d[l_ac].*
                  CALL arpi900_rpde_t_mask()
                  LET g_rpde_d_mask_n[l_ac].* =  g_rpde_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL arpi900_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
LET g_detail_multi_table_t.rpdel001 = g_rpzz_m.rpzz001
LET g_detail_multi_table_t.rpdel002 = g_rpde_d[l_ac].rpde002
LET g_detail_multi_table_t.rpdel003 = g_dlang
LET g_detail_multi_table_t.rpdel004 = g_rpde_d[l_ac].rpdel004
 
 
            #其他table進行lock
            
            INITIALIZE l_var_keys TO NULL 
            INITIALIZE l_field_keys TO NULL 
            LET l_field_keys[01] = 'rpdel001'
            LET l_var_keys[01] = g_rpzz_m.rpzz001
            LET l_field_keys[02] = 'rpdel002'
            LET l_var_keys[02] = g_rpde_d[l_ac].rpde002
            LET l_field_keys[03] = 'rpdel003'
            LET l_var_keys[03] = g_dlang
            IF NOT cl_multitable_lock(l_var_keys,l_field_keys,'rpdel_t') THEN
               RETURN 
            END IF 
 
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_rpde_d[l_ac].* TO NULL 
            INITIALIZE g_rpde_d_t.* TO NULL 
            INITIALIZE g_rpde_d_o.* TO NULL 
            #公用欄位給值(單身)
            #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_rpde2_d[l_ac].rpdeownid = g_user
      LET g_rpde2_d[l_ac].rpdeowndp = g_dept
      LET g_rpde2_d[l_ac].rpdecrtid = g_user
      LET g_rpde2_d[l_ac].rpdecrtdp = g_dept 
      LET g_rpde2_d[l_ac].rpdecrtdt = cl_get_current()
      LET g_rpde2_d[l_ac].rpdemodid = g_user
      LET g_rpde2_d[l_ac].rpdemoddt = cl_get_current()
      LET g_rpde_d[l_ac].rpdestus = 'Y'
 
 
 
            #自定義預設值
            
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            
            #end add-point
            LET g_rpde_d_t.* = g_rpde_d[l_ac].*     #新輸入資料
            LET g_rpde_d_o.* = g_rpde_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL arpi900_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
#            LET g_rpde_d[l_ac].rpde002 = arpi900_get_rpde002_serial()    #161028-00045#12   161129 earl mark
            LET g_rpde_d[l_ac].rpde003 = FGL_GETENV("DGENV")
            #end add-point
            CALL arpi900_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_rpde_d[li_reproduce_target].* = g_rpde_d[li_reproduce].*
               LET g_rpde2_d[li_reproduce_target].* = g_rpde2_d[li_reproduce].*
 
               LET g_rpde_d[li_reproduce_target].rpde002 = NULL
 
            END IF
            
LET g_detail_multi_table_t.rpdel001 = g_rpzz_m.rpzz001
LET g_detail_multi_table_t.rpdel002 = g_rpde_d[l_ac].rpde002
LET g_detail_multi_table_t.rpdel003 = g_dlang
LET g_detail_multi_table_t.rpdel004 = g_rpde_d[l_ac].rpdel004
 
 
            #add-point:modify段before insert name="input.body.before_insert"
            
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM rpde_t 
             WHERE  rpde001 = g_rpzz_m.rpzz001
 
               AND rpde002 = g_rpde_d[l_ac].rpde002
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rpzz_m.rpzz001
               LET gs_keys[2] = g_rpde_d[g_detail_idx].rpde002
               CALL arpi900_insert_b('rpde_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               INITIALIZE g_rpde_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rpde_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL arpi900_b_fill()
               #資料多語言用-增/改
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_rpzz_m.rpzz001 = g_detail_multi_table_t.rpdel001 AND
         g_rpde_d[l_ac].rpde002 = g_detail_multi_table_t.rpdel002 AND
         g_rpde_d[l_ac].rpdel004 = g_detail_multi_table_t.rpdel004 THEN
         ELSE 
            LET l_var_keys[01] = g_rpzz_m.rpzz001
            LET l_field_keys[01] = 'rpdel001'
            LET l_var_keys_bak[01] = g_detail_multi_table_t.rpdel001
            LET l_var_keys[02] = g_rpde_d[l_ac].rpde002
            LET l_field_keys[02] = 'rpdel002'
            LET l_var_keys_bak[02] = g_detail_multi_table_t.rpdel002
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'rpdel003'
            LET l_var_keys_bak[03] = g_detail_multi_table_t.rpdel003
            LET l_vars[01] = g_rpde_d[l_ac].rpdel004
            LET l_fields[01] = 'rpdel004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'rpdel_t')
         END IF 
 
               #add-point:input段-after_insert name="input.body.a_insert2"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               #判斷arpi800 是否有資料
               IF arpi900_chk_pre_del_arpi800(g_rpzz_m.rpzz001,g_rpde_d_t.rpde002) THEN 
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = "arp-00009" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF 
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_rpzz_m.rpzz001
 
               LET gs_keys[gs_keys.getLength()+1] = g_rpde_d_t.rpde002
 
            
               #刪除同層單身
               IF NOT arpi900_delete_b('rpde_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE arpi900_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT arpi900_key_delete_b(gs_keys,'rpde_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE arpi900_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
INITIALIZE l_var_keys_bak TO NULL 
                  INITIALIZE l_field_keys TO NULL 
                  LET l_field_keys[01] = 'rpdel001'
                  LET l_var_keys_bak[01] = g_detail_multi_table_t.rpdel001
                  LET l_field_keys[02] = 'rpdel002'
                  LET l_var_keys_bak[02] = g_detail_multi_table_t.rpdel002
                  CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'rpdel_t')
 
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
               
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE arpi900_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               
               #end add-point
               LET l_count = g_rpde_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_rpde_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpde002
            #add-point:BEFORE FIELD rpde002 name="input.b.page1.rpde002"
            CALL DIALOG.setFieldTouched("s_detail1.rpde002",TRUE)
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpde002
            
            #add-point:AFTER FIELD rpde002 name="input.a.page1.rpde002"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            LET g_rpde_d[g_detail_idx].rpde002 = DOWNSHIFT(g_rpde_d[l_ac].rpde002)
            IF  g_rpzz_m.rpzz001 IS NOT NULL AND g_rpde_d[g_detail_idx].rpde002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_rpzz_m.rpzz001 != g_rpzz001_t OR g_rpde_d[g_detail_idx].rpde002 != g_rpde_d_t.rpde002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rpde_t WHERE "||"rpde001 = '"||g_rpzz_m.rpzz001 ||"' AND "|| "rpde002 = '"||g_rpde_d[g_detail_idx].rpde002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
                  
                  #161028-00045#12   161129 earl mod s
#                  IF NOT arpi900_chk_rpde002(g_rpde_d[g_detail_idx].rpde002) THEN  
#                     NEXT FIELD rpde002
#                  END IF  
                  #161028-00045#12   161129 earl mod e
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rpde002
            #add-point:ON CHANGE rpde002 name="input.g.page1.rpde002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpdel004
            #add-point:BEFORE FIELD rpdel004 name="input.b.page1.rpdel004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpdel004
            
            #add-point:AFTER FIELD rpdel004 name="input.a.page1.rpdel004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rpdel004
            #add-point:ON CHANGE rpdel004 name="input.g.page1.rpdel004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpde004
            #add-point:BEFORE FIELD rpde004 name="input.b.page1.rpde004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpde004
            
            #add-point:AFTER FIELD rpde004 name="input.a.page1.rpde004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rpde004
            #add-point:ON CHANGE rpde004 name="input.g.page1.rpde004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpde003
            #add-point:BEFORE FIELD rpde003 name="input.b.page1.rpde003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpde003
            
            #add-point:AFTER FIELD rpde003 name="input.a.page1.rpde003"
            IF NOT arpi900_chk_dgenv(g_rpde_d[g_detail_idx].rpde003,g_rpde_d[g_detail_idx].rpde002) THEN  
               LET g_rpde_d[g_detail_idx].rpde003 = g_rpde_d_t.rpde003
               NEXT FIELD rpde003
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rpde003
            #add-point:ON CHANGE rpde003 name="input.g.page1.rpde003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rpdestus
            #add-point:BEFORE FIELD rpdestus name="input.b.page1.rpdestus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rpdestus
            
            #add-point:AFTER FIELD rpdestus name="input.a.page1.rpdestus"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rpdestus
            #add-point:ON CHANGE rpdestus name="input.g.page1.rpdestus"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.rpde002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpde002
            #add-point:ON ACTION controlp INFIELD rpde002 name="input.c.page1.rpde002"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.rpdel004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpdel004
            #add-point:ON ACTION controlp INFIELD rpdel004 name="input.c.page1.rpdel004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.rpde004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpde004
            #add-point:ON ACTION controlp INFIELD rpde004 name="input.c.page1.rpde004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.rpde003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpde003
            #add-point:ON ACTION controlp INFIELD rpde003 name="input.c.page1.rpde003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.rpdestus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rpdestus
            #add-point:ON ACTION controlp INFIELD rpdestus name="input.c.page1.rpdestus"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_rpde_d[l_ac].* = g_rpde_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE arpi900_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_rpde_d[l_ac].rpde002 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_rpde_d[l_ac].* = g_rpde_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               LET g_rpde2_d[l_ac].rpdemodid = g_user 
LET g_rpde2_d[l_ac].rpdemoddt = cl_get_current()
LET g_rpde2_d[l_ac].rpdemodid_desc = cl_get_username(g_rpde2_d[l_ac].rpdemodid)
      
               #將遮罩欄位還原
               CALL arpi900_rpde_t_mask_restore('restore_mask_o')
      
               UPDATE rpde_t SET (rpde001,rpde002,rpde004,rpde003,rpdestus,rpdeownid,rpdeowndp,rpdecrtid, 
                   rpdecrtdp,rpdecrtdt,rpdemodid,rpdemoddt) = (g_rpzz_m.rpzz001,g_rpde_d[l_ac].rpde002, 
                   g_rpde_d[l_ac].rpde004,g_rpde_d[l_ac].rpde003,g_rpde_d[l_ac].rpdestus,g_rpde2_d[l_ac].rpdeownid, 
                   g_rpde2_d[l_ac].rpdeowndp,g_rpde2_d[l_ac].rpdecrtid,g_rpde2_d[l_ac].rpdecrtdp,g_rpde2_d[l_ac].rpdecrtdt, 
                   g_rpde2_d[l_ac].rpdemodid,g_rpde2_d[l_ac].rpdemoddt)
                WHERE  rpde001 = g_rpzz_m.rpzz001 
 
                  AND rpde002 = g_rpde_d_t.rpde002 #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_rpde_d[l_ac].* = g_rpde_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rpde_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_rpde_d[l_ac].* = g_rpde_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rpde_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                              INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         INITIALIZE l_var_keys_bak TO NULL 
         IF g_rpzz_m.rpzz001 = g_detail_multi_table_t.rpdel001 AND
         g_rpde_d[l_ac].rpde002 = g_detail_multi_table_t.rpdel002 AND
         g_rpde_d[l_ac].rpdel004 = g_detail_multi_table_t.rpdel004 THEN
         ELSE 
            LET l_var_keys[01] = g_rpzz_m.rpzz001
            LET l_field_keys[01] = 'rpdel001'
            LET l_var_keys_bak[01] = g_detail_multi_table_t.rpdel001
            LET l_var_keys[02] = g_rpde_d[l_ac].rpde002
            LET l_field_keys[02] = 'rpdel002'
            LET l_var_keys_bak[02] = g_detail_multi_table_t.rpdel002
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'rpdel003'
            LET l_var_keys_bak[03] = g_detail_multi_table_t.rpdel003
            LET l_vars[01] = g_rpde_d[l_ac].rpdel004
            LET l_fields[01] = 'rpdel004'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'rpdel_t')
         END IF 
 
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rpzz_m.rpzz001
               LET gs_keys_bak[1] = g_rpzz001_t
               LET gs_keys[2] = g_rpde_d[g_detail_idx].rpde002
               LET gs_keys_bak[2] = g_rpde_d_t.rpde002
               CALL arpi900_update_b('rpde_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL arpi900_rpde_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_rpde_d[g_detail_idx].rpde002 = g_rpde_d_t.rpde002 
 
                  ) THEN
                  LET gs_keys[01] = g_rpzz_m.rpzz001
 
                  LET gs_keys[gs_keys.getLength()+1] = g_rpde_d_t.rpde002
 
                  CALL arpi900_key_update_b(gs_keys,'rpde_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_rpzz_m),util.JSON.stringify(g_rpde_d_t)
               LET g_log2 = util.JSON.stringify(g_rpzz_m),util.JSON.stringify(g_rpde_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            
            #end add-point
            CALL arpi900_unlock_b("rpde_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_rpde_d[li_reproduce_target].* = g_rpde_d[li_reproduce].*
               LET g_rpde2_d[li_reproduce_target].* = g_rpde2_d[li_reproduce].*
 
               LET g_rpde_d[li_reproduce_target].rpde002 = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_rpde_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_rpde_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      DISPLAY ARRAY g_rpde2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL arpi900_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail2")
            LET g_detail_idx = l_ac
            
            #add-point:page2, before row動作 name="input.body2.before_row"
            
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue(""))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail2")
            CALL arpi900_idx_chk()
            LET g_current_page = 2
      
         #add-point:page2自定義行為 name="input.body2.action"
         
         #end add-point
      
      END DISPLAY
 
 
 
{</section>}
 
{<section id="arpi900.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1','2',"))      
         CALL DIALOG.setCurrentRow("s_detail2",g_idx_group.getValue(""))
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            
            #end add-point  
            NEXT FIELD rpzz001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD rpde002
               WHEN "s_detail2"
                  NEXT FIELD rpde002_2
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   IF li_chk_flag = 1 THEN 
      CALL arpi900_show() #單身填充
   END IF 
   #end add-point    
 
END FUNCTION
 
{</section>}
 
{<section id="arpi900.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION arpi900_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL arpi900_b_fill() #單身填充
      CALL arpi900_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL arpi900_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_rpzz_m.rpzz001
   CALL ap_ref_array2(g_ref_fields," SELECT rpzzl003 FROM rpzzl_t WHERE rpzzl001 = ? AND rpzzl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_rpzz_m.rpzzl003 = g_rtn_fields[1] 
   DISPLAY g_rpzz_m.rpzzl003 TO rpzzl003
   #end add-point
   
   #遮罩相關處理
   LET g_rpzz_m_mask_o.* =  g_rpzz_m.*
   CALL arpi900_rpzz_t_mask()
   LET g_rpzz_m_mask_n.* =  g_rpzz_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_rpzz_m.rpzz001,g_rpzz_m.rpzz004,g_rpzz_m.rpzzl003,g_rpzz_m.rpzz005,g_rpzz_m.rpzz003, 
       g_rpzz_m.rpzz006,g_rpzz_m.rpzz002,g_rpzz_m.rpzzstus,g_rpzz_m.rpzzownid,g_rpzz_m.rpzzownid_desc, 
       g_rpzz_m.rpzzowndp,g_rpzz_m.rpzzowndp_desc,g_rpzz_m.rpzzcrtid,g_rpzz_m.rpzzcrtid_desc,g_rpzz_m.rpzzcrtdp, 
       g_rpzz_m.rpzzcrtdp_desc,g_rpzz_m.rpzzcrtdt,g_rpzz_m.rpzzmodid,g_rpzz_m.rpzzmodid_desc,g_rpzz_m.rpzzmoddt 
 
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_rpzz_m.rpzzstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_rpde_d.getLength()
      #add-point:show段單身reference name="show.body.reference"

   INITIALIZE g_ref_fields TO NULL 
   LET g_ref_fields[1] = g_rpzz_m.rpzz001
   LET g_ref_fields[2] = g_rpde_d[l_ac].rpde002
   CALL ap_ref_array2(g_ref_fields," SELECT rpdel004 FROM rpdel_t WHERE rpdel001 = ? AND rpdel002 = ? AND rpdel003 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_rpde_d[l_ac].rpdel004 = g_rtn_fields[1] 
   DISPLAY BY NAME g_rpde_d[l_ac].rpdel004
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_rpde2_d.getLength()
      #add-point:show段單身reference name="show.body2.reference"
      
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other name="show.other"
   
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL arpi900_detail_show()
 
   #add-point:show段之後 name="show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="arpi900.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION arpi900_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="arpi900.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION arpi900_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   
   #end add-point   
   DEFINE l_newno     LIKE rpzz_t.rpzz001 
   DEFINE l_oldno     LIKE rpzz_t.rpzz001 
 
   DEFINE l_master    RECORD LIKE rpzz_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE rpde_t.* #此變數樣板目前無使用
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_rpzz_m.rpzz001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_rpzz001_t = g_rpzz_m.rpzz001
 
    
   LET g_rpzz_m.rpzz001 = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_rpzz_m.rpzzownid = g_user
      LET g_rpzz_m.rpzzowndp = g_dept
      LET g_rpzz_m.rpzzcrtid = g_user
      LET g_rpzz_m.rpzzcrtdp = g_dept 
      LET g_rpzz_m.rpzzcrtdt = cl_get_current()
      LET g_rpzz_m.rpzzmodid = g_user
      LET g_rpzz_m.rpzzmoddt = cl_get_current()
      LET g_rpzz_m.rpzzstus = 'Y'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_rpzz_m.rpzzstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
   
   
   CALL arpi900_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_rpzz_m.* TO NULL
      INITIALIZE g_rpde_d TO NULL
      INITIALIZE g_rpde2_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      
      #end add-point
      CALL arpi900_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code = 9001 
      LET g_errparam.popup = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL arpi900_set_act_visible()   
   CALL arpi900_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_rpzz001_t = g_rpzz_m.rpzz001
 
   
   #組合新增資料的條件
   LET g_add_browse = " ",
                      " rpzz001 = '", g_rpzz_m.rpzz001, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL arpi900_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   CALL arpi900_idx_chk()
   
   LET g_data_owner = g_rpzz_m.rpzzownid      
   LET g_data_dept  = g_rpzz_m.rpzzowndp
   
   #功能已完成,通報訊息中心
   CALL arpi900_msgcentre_notify('reproduce')
 
END FUNCTION
 
{</section>}
 
{<section id="arpi900.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION arpi900_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE rpde_t.* #此變數樣板目前無使用
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE arpi900_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM rpde_t
    WHERE  rpde001 = g_rpzz001_t
 
    INTO TEMP arpi900_detail
 
   #將key修正為調整後   
   UPDATE arpi900_detail 
      #更新key欄位
      SET rpde001 = g_rpzz_m.rpzz001
 
      #更新共用欄位
      #應用 a13 樣板自動產生(Version:4)
       , rpdeownid = g_user 
       , rpdeowndp = g_dept
       , rpdecrtid = g_user
       , rpdecrtdp = g_dept 
       , rpdecrtdt = ld_date
       , rpdemodid = g_user
       , rpdemoddt = ld_date
      #, rpdestus = "Y" 
 
 
 
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO rpde_t SELECT * FROM arpi900_detail
   
   IF SQLCA.SQLCODE THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE arpi900_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
      #應用 a38 樣板自動產生(Version:6)
   #單身多語言複製
   DROP TABLE arpi900_detail_lang
   
   #add-point:單身複製前1 name="detail_reproduce.body.lang0.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE & INSERT 
   SELECT * FROM rpdel_t 
    WHERE  rpdel001 = g_rpzz001_t
 
     INTO TEMP arpi900_detail_lang
 
   #將key修正為調整後   
   UPDATE arpi900_detail_lang 
      #更新key欄位
      SET rpdel001 = g_rpzz_m.rpzz001
 
  
   #add-point:單身修改前 name="detail_reproduce.body.lang0.b_update"
   
   #end add-point   
  
   #將資料塞回原table   
   INSERT INTO rpdel_t SELECT * FROM arpi900_detail_lang
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.lang0.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE arpi900_detail_lang
   
   #add-point:單身複製後1 name="detail_reproduce.lang0.table1.a_insert"
   
   #end add-point
 
 
 
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_rpzz001_t = g_rpzz_m.rpzz001
 
   
END FUNCTION
 
{</section>}
 
{<section id="arpi900.delete" >}
#+ 資料刪除
PRIVATE FUNCTION arpi900_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_rpzz_m.rpzz001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   LET g_master_multi_table_t.rpzzl001 = g_rpzz_m.rpzz001
LET g_master_multi_table_t.rpzzl003 = g_rpzz_m.rpzzl003
 
   
   CALL s_transaction_begin()
 
   OPEN arpi900_cl USING g_rpzz_m.rpzz001
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN arpi900_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE arpi900_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE arpi900_master_referesh USING g_rpzz_m.rpzz001 INTO g_rpzz_m.rpzz001,g_rpzz_m.rpzz004,g_rpzz_m.rpzz005, 
       g_rpzz_m.rpzz003,g_rpzz_m.rpzz006,g_rpzz_m.rpzz002,g_rpzz_m.rpzzstus,g_rpzz_m.rpzzownid,g_rpzz_m.rpzzowndp, 
       g_rpzz_m.rpzzcrtid,g_rpzz_m.rpzzcrtdp,g_rpzz_m.rpzzcrtdt,g_rpzz_m.rpzzmodid,g_rpzz_m.rpzzmoddt, 
       g_rpzz_m.rpzzownid_desc,g_rpzz_m.rpzzowndp_desc,g_rpzz_m.rpzzcrtid_desc,g_rpzz_m.rpzzcrtdp_desc, 
       g_rpzz_m.rpzzmodid_desc
   
   
   #檢查是否允許此動作
   IF NOT arpi900_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_rpzz_m_mask_o.* =  g_rpzz_m.*
   CALL arpi900_rpzz_t_mask()
   LET g_rpzz_m_mask_n.* =  g_rpzz_m.*
   
   CALL arpi900_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL arpi900_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_rpzz001_t = g_rpzz_m.rpzz001
 
 
      DELETE FROM rpzz_t
       WHERE  rpzz001 = g_rpzz_m.rpzz001
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      
      #end add-point
       
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_rpzz_m.rpzz001,":",SQLERRMESSAGE  
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      #end add-point
      
      DELETE FROM rpde_t
       WHERE  rpde001 = g_rpzz_m.rpzz001
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
      
      #end add-point
         
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rpde_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      
      #end add-point
      
            
                                                               
 
 
 
      
      #修改歷程記錄(刪除)
      LET g_log1 = util.JSON.stringify(g_rpzz_m)   #(ver:78)
      IF NOT cl_log_modified_record(g_log1,'') THEN    #(ver:78)
         CLOSE arpi900_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_rpde_d.clear() 
      CALL g_rpde2_d.clear()       
 
     
      CALL arpi900_ui_browser_refresh()  
      #CALL arpi900_ui_headershow()  
      #CALL arpi900_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      
      #end add-point
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_master_multi_table_t.rpzzl001
   LET l_field_keys[01] = 'rpzzl001'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'rpzzl_t')
 
      
      #單身多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
         INITIALIZE l_field_keys TO NULL 
         LET l_field_keys[01] = 'rpdel001'
         LET l_var_keys_bak[01] = g_rpzz_m.rpzz001
         CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'rpdel_t')
 
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL arpi900_browser_fill("")
         CALL arpi900_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE arpi900_cl
 
   #功能已完成,通報訊息中心
   CALL arpi900_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="arpi900.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION arpi900_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #清空第一階單身
   CALL g_rpde_d.clear()
   CALL g_rpde2_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   
   #end add-point
   
   #判斷是否填充
   IF arpi900_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT rpde002,rpde004,rpde003,rpdestus,rpde002,rpdeownid,rpdeowndp, 
             rpdecrtid,rpdecrtdp,rpdecrtdt,rpdemodid,rpdemoddt ,t1.ooag011 ,t2.ooefl003 ,t3.ooag011 , 
             t4.ooefl003 ,t5.ooag011 FROM rpde_t",   
                     " INNER JOIN rpzz_t ON  rpzz001 = rpde001 ",
 
                     #" LEFT JOIN rpdel_t ON rpzz001 = rpdel001 AND rpde002 = rpdel002 AND rpdel003 = '",g_dlang,"'",
                     
                     " LEFT JOIN rpdel_t ON rpzz001 = rpdel001 AND rpde002 = rpdel002 AND rpdel003 = '",g_dlang,"'",
                     #下層單身所需的join條件
 
                                    " LEFT JOIN ooag_t t1 ON t1.ooagent="||g_enterprise||" AND t1.ooag001=rpdeownid  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=rpdeowndp AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent="||g_enterprise||" AND t3.ooag001=rpdecrtid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent="||g_enterprise||" AND t4.ooefl001=rpdecrtdp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent="||g_enterprise||" AND t5.ooag001=rpdemodid  ",
 
                     " WHERE rpde001=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY rpde_t.rpde002"
         
         #add-point:單身填充控制 name="b_fill.sql"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE arpi900_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR arpi900_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
   #  OPEN b_fill_cs USING g_rpzz_m.rpzz001   #(ver:78)
                                               
      FOREACH b_fill_cs USING g_rpzz_m.rpzz001 INTO g_rpde_d[l_ac].rpde002,g_rpde_d[l_ac].rpde004,g_rpde_d[l_ac].rpde003, 
          g_rpde_d[l_ac].rpdestus,g_rpde2_d[l_ac].rpde002,g_rpde2_d[l_ac].rpdeownid,g_rpde2_d[l_ac].rpdeowndp, 
          g_rpde2_d[l_ac].rpdecrtid,g_rpde2_d[l_ac].rpdecrtdp,g_rpde2_d[l_ac].rpdecrtdt,g_rpde2_d[l_ac].rpdemodid, 
          g_rpde2_d[l_ac].rpdemoddt,g_rpde2_d[l_ac].rpdeownid_desc,g_rpde2_d[l_ac].rpdeowndp_desc,g_rpde2_d[l_ac].rpdecrtid_desc, 
          g_rpde2_d[l_ac].rpdecrtdp_desc,g_rpde2_d[l_ac].rpdemodid_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code = 9035 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   
   #end add-point
   
   CALL g_rpde_d.deleteElement(g_rpde_d.getLength())
   CALL g_rpde2_d.deleteElement(g_rpde2_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE arpi900_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_rpde_d.getLength()
      LET g_rpde_d_mask_o[l_ac].* =  g_rpde_d[l_ac].*
      CALL arpi900_rpde_t_mask()
      LET g_rpde_d_mask_n[l_ac].* =  g_rpde_d[l_ac].*
   END FOR
   
   LET g_rpde2_d_mask_o.* =  g_rpde2_d.*
   FOR l_ac = 1 TO g_rpde2_d.getLength()
      LET g_rpde2_d_mask_o[l_ac].* =  g_rpde2_d[l_ac].*
      CALL arpi900_rpde_t_mask()
      LET g_rpde2_d_mask_n[l_ac].* =  g_rpde2_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
 
{</section>}
 
{<section id="arpi900.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION arpi900_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      
      #end add-point    
      DELETE FROM rpde_t
       WHERE 
         rpde001 = ps_keys_bak[1] AND rpde002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_rpde_d.deleteElement(li_idx) 
      END IF 
      IF ps_page <> "'2'" THEN 
         CALL g_rpde2_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
   
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="arpi900.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION arpi900_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      
      #end add-point 
      INSERT INTO rpde_t
                  (
                   rpde001,
                   rpde002
                   ,rpde004,rpde003,rpdestus,rpdeownid,rpdeowndp,rpdecrtid,rpdecrtdp,rpdecrtdt,rpdemodid,rpdemoddt) 
            VALUES(
                   ps_keys[1],ps_keys[2]
                   ,g_rpde_d[g_detail_idx].rpde004,g_rpde_d[g_detail_idx].rpde003,g_rpde_d[g_detail_idx].rpdestus, 
                       g_rpde2_d[g_detail_idx].rpdeownid,g_rpde2_d[g_detail_idx].rpdeowndp,g_rpde2_d[g_detail_idx].rpdecrtid, 
                       g_rpde2_d[g_detail_idx].rpdecrtdp,g_rpde2_d[g_detail_idx].rpdecrtdt,g_rpde2_d[g_detail_idx].rpdemodid, 
                       g_rpde2_d[g_detail_idx].rpdemoddt)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      
      #end add-point 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rpde_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_rpde_d.insertElement(li_idx) 
      END IF 
      IF ps_page <> "'2'" THEN 
         CALL g_rpde2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
   
   #end add-point     
   
END FUNCTION
 
{</section>}
 
{<section id="arpi900.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION arpi900_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rpde_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      
      #end add-point 
      
      #將遮罩欄位還原
      CALL arpi900_rpde_t_mask_restore('restore_mask_o')
               
      UPDATE rpde_t 
         SET (rpde001,
              rpde002
              ,rpde004,rpde003,rpdestus,rpdeownid,rpdeowndp,rpdecrtid,rpdecrtdp,rpdecrtdt,rpdemodid,rpdemoddt) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_rpde_d[g_detail_idx].rpde004,g_rpde_d[g_detail_idx].rpde003,g_rpde_d[g_detail_idx].rpdestus, 
                  g_rpde2_d[g_detail_idx].rpdeownid,g_rpde2_d[g_detail_idx].rpdeowndp,g_rpde2_d[g_detail_idx].rpdecrtid, 
                  g_rpde2_d[g_detail_idx].rpdecrtdp,g_rpde2_d[g_detail_idx].rpdecrtdt,g_rpde2_d[g_detail_idx].rpdemodid, 
                  g_rpde2_d[g_detail_idx].rpdemoddt) 
         WHERE  rpde001 = ps_keys_bak[1] AND rpde002 = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
      
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rpde_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rpde_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL arpi900_rpde_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      LET l_new_key[01] = ps_keys[1] 
LET l_old_key[01] = ps_keys_bak[1] 
LET l_field_key[01] = 'rpdel001'
LET l_new_key[02] = ps_keys[2] 
LET l_old_key[02] = ps_keys_bak[2] 
LET l_field_key[02] = 'rpdel002'
LET l_new_key[03] = g_dlang 
LET l_old_key[03] = g_dlang 
LET l_field_key[03] = 'rpdel003'
CALL cl_multitable_key_upd(l_new_key, l_old_key, l_field_key, 'rpdel_t')
   END IF
   
   
 
   
 
   
   #add-point:update_b段other name="update_b.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="arpi900.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION arpi900_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="arpi900.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION arpi900_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="arpi900.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION arpi900_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
    
   #先刷新資料
   #CALL arpi900_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1','2',"
   #僅鎖定自身table
   LET ls_group = "rpde_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN arpi900_bcl USING 
                                       g_rpzz_m.rpzz001,g_rpde_d[g_detail_idx].rpde002     
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "arpi900_bcl:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
   
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="arpi900.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION arpi900_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
    
   LET ls_group = "'1','2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE arpi900_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="arpi900.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION arpi900_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   CALL cl_set_comp_entry("",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("rpzz001",TRUE)
      CALL cl_set_comp_entry("",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="arpi900.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION arpi900_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("rpzz001",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      IF p_cmd = 'u' THEN 
         CALL cl_set_comp_entry("rpzz004",FALSE) 
      END IF 
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("",FALSE)
   END IF 
 
#  IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正) #(ver:78)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("",FALSE)
      END IF
#  END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="arpi900.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION arpi900_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   
   #end add-point  
END FUNCTION
 
{</section>}
 
{<section id="arpi900.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION arpi900_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   
   #end add-point     
END FUNCTION
 
{</section>}
 
{<section id="arpi900.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION arpi900_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="arpi900.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION arpi900_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="arpi900.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION arpi900_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="arpi900.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION arpi900_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="arpi900.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION arpi900_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " rpzz001 = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "rpzz_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "rpde_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
 
{</section>}
 
{<section id="arpi900.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION arpi900_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_rpzz_m.rpzz001 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN arpi900_cl USING g_rpzz_m.rpzz001
   IF STATUS THEN
      CLOSE arpi900_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN arpi900_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE arpi900_master_referesh USING g_rpzz_m.rpzz001 INTO g_rpzz_m.rpzz001,g_rpzz_m.rpzz004,g_rpzz_m.rpzz005, 
       g_rpzz_m.rpzz003,g_rpzz_m.rpzz006,g_rpzz_m.rpzz002,g_rpzz_m.rpzzstus,g_rpzz_m.rpzzownid,g_rpzz_m.rpzzowndp, 
       g_rpzz_m.rpzzcrtid,g_rpzz_m.rpzzcrtdp,g_rpzz_m.rpzzcrtdt,g_rpzz_m.rpzzmodid,g_rpzz_m.rpzzmoddt, 
       g_rpzz_m.rpzzownid_desc,g_rpzz_m.rpzzowndp_desc,g_rpzz_m.rpzzcrtid_desc,g_rpzz_m.rpzzcrtdp_desc, 
       g_rpzz_m.rpzzmodid_desc
   
 
   #檢查是否允許此動作
   IF NOT arpi900_action_chk() THEN
      CLOSE arpi900_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_rpzz_m.rpzz001,g_rpzz_m.rpzz004,g_rpzz_m.rpzzl003,g_rpzz_m.rpzz005,g_rpzz_m.rpzz003, 
       g_rpzz_m.rpzz006,g_rpzz_m.rpzz002,g_rpzz_m.rpzzstus,g_rpzz_m.rpzzownid,g_rpzz_m.rpzzownid_desc, 
       g_rpzz_m.rpzzowndp,g_rpzz_m.rpzzowndp_desc,g_rpzz_m.rpzzcrtid,g_rpzz_m.rpzzcrtid_desc,g_rpzz_m.rpzzcrtdp, 
       g_rpzz_m.rpzzcrtdp_desc,g_rpzz_m.rpzzcrtdt,g_rpzz_m.rpzzmodid,g_rpzz_m.rpzzmodid_desc,g_rpzz_m.rpzzmoddt 
 
 
   CASE g_rpzz_m.rpzzstus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_rpzz_m.rpzzstus
            
            WHEN "N"
               HIDE OPTION "inactive"
            WHEN "Y"
               HIDE OPTION "active"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      
      #end add-point
      
      
	  
      ON ACTION inactive
         IF cl_auth_chk_act("inactive") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.inactive"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION active
         IF cl_auth_chk_act("active") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.active"
            
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      ) OR 
      g_rpzz_m.rpzzstus = lc_state OR cl_null(lc_state) THEN
      CLOSE arpi900_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   
   #end add-point
   
   LET g_rpzz_m.rpzzmodid = g_user
   LET g_rpzz_m.rpzzmoddt = cl_get_current()
   LET g_rpzz_m.rpzzstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE rpzz_t 
      SET (rpzzstus,rpzzmodid,rpzzmoddt) 
        = (g_rpzz_m.rpzzstus,g_rpzz_m.rpzzmodid,g_rpzz_m.rpzzmoddt)     
    WHERE  rpzz001 = g_rpzz_m.rpzz001
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE arpi900_master_referesh USING g_rpzz_m.rpzz001 INTO g_rpzz_m.rpzz001,g_rpzz_m.rpzz004, 
          g_rpzz_m.rpzz005,g_rpzz_m.rpzz003,g_rpzz_m.rpzz006,g_rpzz_m.rpzz002,g_rpzz_m.rpzzstus,g_rpzz_m.rpzzownid, 
          g_rpzz_m.rpzzowndp,g_rpzz_m.rpzzcrtid,g_rpzz_m.rpzzcrtdp,g_rpzz_m.rpzzcrtdt,g_rpzz_m.rpzzmodid, 
          g_rpzz_m.rpzzmoddt,g_rpzz_m.rpzzownid_desc,g_rpzz_m.rpzzowndp_desc,g_rpzz_m.rpzzcrtid_desc, 
          g_rpzz_m.rpzzcrtdp_desc,g_rpzz_m.rpzzmodid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_rpzz_m.rpzz001,g_rpzz_m.rpzz004,g_rpzz_m.rpzzl003,g_rpzz_m.rpzz005,g_rpzz_m.rpzz003, 
          g_rpzz_m.rpzz006,g_rpzz_m.rpzz002,g_rpzz_m.rpzzstus,g_rpzz_m.rpzzownid,g_rpzz_m.rpzzownid_desc, 
          g_rpzz_m.rpzzowndp,g_rpzz_m.rpzzowndp_desc,g_rpzz_m.rpzzcrtid,g_rpzz_m.rpzzcrtid_desc,g_rpzz_m.rpzzcrtdp, 
          g_rpzz_m.rpzzcrtdp_desc,g_rpzz_m.rpzzcrtdt,g_rpzz_m.rpzzmodid,g_rpzz_m.rpzzmodid_desc,g_rpzz_m.rpzzmoddt 
 
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   
   #end add-point  
 
   CLOSE arpi900_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL arpi900_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="arpi900.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION arpi900_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_rpde_d.getLength() THEN
         LET g_detail_idx = g_rpde_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_rpde_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_rpde_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_rpde2_d.getLength() THEN
         LET g_detail_idx = g_rpde2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_rpde2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_rpde2_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="arpi900.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION arpi900_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
    
   LET l_ac = li_ac
   
   CALL arpi900_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
 
{</section>}
 
{<section id="arpi900.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION arpi900_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="arpi900.status_show" >}
PRIVATE FUNCTION arpi900_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="arpi900.mask_functions" >}
&include "erp/arp/arpi900_mask.4gl"
 
{</section>}
 
{<section id="arpi900.signature" >}
   
 
{</section>}
 
{<section id="arpi900.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION arpi900_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_rpzz_m.rpzz001
   LET g_pk_array[1].column = 'rpzz001'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="arpi900.other_dialog" readonly="Y" >}
   
 
{</section>}
 
{<section id="arpi900.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION arpi900_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL arpi900_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_rpzz_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="arpi900.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION arpi900_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="arpi900.other_function" readonly="Y" >}

################################################################################
# Descriptions...: 命名原則：前三碼依照歸屬模組，第四碼固定為＂b＂（代表移動APP，為了避免與azzi900資料重複），後面為流水號
# Memo...........:
# Usage..........: CALL arpi900_chk_rpzz001()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
# Return code....: 回传参数变量1   回传参数变量说明1
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION arpi900_chk_rpzz001()
   DEFINE ls_prog        STRING 
   DEFINE ls_module      STRING 
   DEFINE ls_progtype    STRING 
   DEFINE ls_serial_num  STRING
   DEFINE ls_i           LIKE type_t.num5
   DEFINE lc_first_code  LIKE type_t.chr1
   DEFINE li_chk         LIKE type_t.num5
   DEFINE lc_industry    LIKE type_t.chr3  #截出來的行業編號
   DEFINE ls_environment STRING

   LET ls_prog = g_rpzz_m.rpzz001
   LET ls_prog = ls_prog.trim()
   LET g_rpzz_m.rpzz001 = ls_prog
   LET lc_first_code = ls_prog.subString(1,1)

   #先檢查程式名稱長度
   IF ls_prog.getLength() < 7 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "azz-00001" #作業名稱不符合命名規則
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()
      RETURN FALSE
   END IF

   #gzza001 已經存在於 gzzz001 ，則不可給予新增，要顯示錯誤訊息：
   IF NOT s_azzi900_chk_gzzz001(ls_prog) THEN 
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "azz-00154" #『此編號已經使用於作業編號內 (gzzz001)，請重新選擇編號』
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()
      RETURN FALSE 
   END IF 

   #若 DGENV = s ，則在新增時編號首碼只能輸入 abm, 否則顯示錯誤訊息『標準開發環境下，不可以建置客製程式 (%1)』
   IF FGL_GETENV("DGENV") = "s" THEN 
      IF NOT lc_first_code MATCHES "[abm]" THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = "azz-00180"
         LET g_errparam.extend = ""
         LET g_errparam.popup = TRUE
         LET g_errparam.replace[1] = ls_prog
         CALL cl_err()
         #標準開發環境下，不可以建置客製程式 (%1)
         RETURN FALSE
      END IF 
   ELSE 
      #若 DGENV = c ，在新增時檢查首碼只能輸入 c/d/e/n ，修改時若本欄位沒有異動則不檢查
      IF NOT lc_first_code MATCHES "[cden]" THEN 
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = "azz-00176"
         LET g_errparam.extend = ""
         LET g_errparam.popup = TRUE
         LET g_errparam.replace[1] = ls_prog
         CALL cl_err()
         #客製開發環境下，不可以建置標準程式 (%1)
         IF g_t100azg0d IS NULL OR g_t100azg0d <> "9" THEN
            RETURN FALSE
         ELSE
            RETURN TRUE
         END IF
      END IF 
   END IF

   #行業判斷
   IF ls_prog.getLength() > 7 THEN
      #判定是否是行業程式
      IF ls_prog.subString(8,8) = "_" THEN
         LET lc_industry = ls_prog.subString(9,ls_prog.getLength())

         #檢查行業代碼是否存在
         IF s_azzi900_chk_industry(lc_industry) THEN 
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = "azz-00172" #行業代碼 (%1) 不存在，請先檢視行業別設定
            LET g_errparam.extend = NULL
            LET g_errparam.popup = TRUE
            LET g_errparam.replace[1] = ls_prog              
            CALL cl_err()           
            RETURN FALSE
         END IF

         #檢查行業代碼不可以為sd
         IF ls_prog.subString(9,ls_prog.getLength()) = "sd" THEN 
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = "azz-00179"
            LET g_errparam.extend = ""               
            LET g_errparam.popup = FALSE
            CALL cl_err()
            RETURN FALSE  
         END IF

         #檢查在指定區域才可以設置指定的行業編號 
         IF NOT cl_chk_in_industry(lc_industry) THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = "azz-00378"
            LET g_errparam.extend = ""
            LET g_errparam.replace[1] = lc_industry
            LET g_errparam.replace[2] = FGL_GETENV("TOPIND")
            LET g_errparam.popup = TRUE
            CALL cl_err()
            RETURN FALSE
         END IF

         #存在；則認定為行業程式
         #LET g_gzza_m.gzza015 = ls_prog.subString(9,ls_prog.getLength())

         #引用的檢查
#         CASE 
#            #如果程式碼開頭為 a，取用_(underline)前面的字段，
#            #檢查是否有程式存在 => 存在則通過檢查/不存在 => 顯示錯誤訊息
#            WHEN lc_first_code = "a"
#               IF NOT s_azzi900_chk_gzza001(ls_prog.subString(1,7)) THEN 
#                  INITIALIZE g_errparam TO NULL
#                  LET g_errparam.code = "azz-00173" #編號(%1)為行業 %2 引用程式使用，但查無主程式，建議編號修改為%3
#                  LET g_errparam.extend = NULL
#                  LET g_errparam.popup = TRUE
#                  LET g_errparam.replace[1] = ls_prog
#                  LET g_errparam.replace[2] = ls_prog.subString(9,ls_prog.getLength()) 
#                  LET g_errparam.replace[3] = 'b'||ls_prog.subString(2,ls_prog.getLength())                   
#                  CALL cl_err()                             
#                  #LET g_gzza_m.gzza015 = NULL
#                  RETURN FALSE
#               END IF
#
#            #程式碼開頭為e => 顯示錯誤訊息 (因為客戶家的客製不歸類為行業包)
#            WHEN lc_first_code = "e"
#               INITIALIZE g_errparam TO NULL
#               LET g_errparam.code = "azz-00174" #客製程式 %1 歸屬於自訂模組，不需要使用行業編號規則，建議修改為 %2
#               LET g_errparam.extend = NULL
#               LET g_errparam.popup = TRUE
#               LET g_errparam.replace[1] = ls_prog
#               LET g_errparam.replace[2] = ls_prog.subString(1,7)                  
#               CALL cl_err() 
#               #LET g_gzza_m.gzza015 = NULL
#               RETURN FALSE          
#         END CASE 

      #超過7碼,但卻不存在 under-line,肯定是打錯了
      ELSE
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = "azz-00001"
         LET g_errparam.extend = ""
         LET g_errparam.popup = FALSE
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF

   #長度為7則認定為一般程式
   IF ls_prog.getLength() = 7 THEN 
      #程式碼開頭為b/d,一定為行業程式,增加額外管制
      IF lc_first_code MATCHES "[bd]" THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = "azz-00175" #程式%1 行業程式，需要使用行業編號規則，建議修改為 %2
         LET g_errparam.extend = ""
         LET g_errparam.popup = TRUE
         LET g_errparam.replace[1] = ls_prog
         LET g_errparam.replace[2] = ls_prog,"_",cl_getmsg("azz-00287",g_dlang)
         CALL cl_err()
         RETURN FALSE
         #如果為a/c/e 開頭，不一定是行業程式,不做檢查
      END IF
      #行業的開發環境,不可以讓他建立標準程式
      IF FGL_GETENV("TOPIND") IS NOT NULL AND FGL_GETENV("TOPIND") <> "sd" THEN
         IF FGL_GETENV("DGENV") IS NOT NULL AND FGL_GETENV("DGENV") = "s" THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = "azz-00378"
            LET g_errparam.extend = ""
            LET g_errparam.replace[1] = "sd"
            LET g_errparam.replace[2] = FGL_GETENV("TOPIND")
            LET g_errparam.popup = TRUE
            CALL cl_err()
            RETURN FALSE
         END IF
      END IF
      #T100 light 平台
      IF FGL_GETENV("ERPID") IS NOT NULL AND FGL_GETENV("ERPID") = "T100EXT" THEN
         IF FGL_GETENV("DGENV") IS NOT NULL AND FGL_GETENV("DGENV") = "s" THEN
            #不可以註冊a開頭標準程式
            IF lc_first_code MATCHES "[a]" THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "azz-00381"
               LET g_errparam.extend = ""
               LET g_errparam.popup = TRUE
               CALL cl_err()
               RETURN FALSE
            END IF
         END IF
      END IF
   END IF

   LET ls_module =  ls_prog.subString(1,3)
   #檢查是否存在 gzzj
   IF NOT s_azzi900_chk_gzzj(UPSHIFT(ls_module)) THEN
      LET li_chk = FALSE 
      IF lc_first_code = "b" THEN 
         LET ls_module =  "a",ls_prog.subString(2,3)
         LET li_chk = s_azzi900_chk_gzzj(UPSHIFT(ls_module))  
      END IF 
      IF NOT li_chk THEN 
         #則顯示錯誤訊息：『程式編號 (%1) 無法確認歸屬模組，請重新確認』
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = "azz-00171"
         LET g_errparam.extend = ""
         LET g_errparam.popup = TRUE
         LET g_errparam.replace[1] = ls_prog
         CALL cl_err()
         RETURN FALSE    
      END IF 
   END IF

   #模組編號
   LET g_rpzz_m.rpzz004 = UPSHIFT(ls_module)

   #第四碼固定為"b"
   LET ls_progtype = ls_prog.subString(4,4)
   IF ls_progtype <> 'b' THEN 
      #則顯示錯誤訊息：『程式編號 (%1) 無法確認歸屬模組，請重新確認』
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "arp-00004" #第四碼固定為"b"
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      LET g_errparam.replace[1] = ls_prog
      CALL cl_err()
      RETURN FALSE
   END IF

   #5-7碼要數字 ex azzi900
   LET ls_serial_num = ls_prog.subString(5,7)  
   IF NOT ls_serial_num MATCHES '[01-9][01-9][01-9]' THEN
      INITIALIZE g_errparam TO NULL
         LET g_errparam.code = "azz-00001"
         LET g_errparam.extend = ""
         LET g_errparam.popup = FALSE
         CALL cl_err()
      RETURN FALSE 
   END IF  

   RETURN TRUE 
END FUNCTION

################################################################################
# Descriptions...: 勾選為客製時，顯示警告視窗＂將APP內含功能、畫面轉為客製開發＂，
#                  並將rpde_t、rpdf_t內所有資料改為客製
# Memo...........:
# Usage..........: CALL arpi900_chk_rpzz002()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION arpi900_chk_rpzz002()
   DEFINE li_chk LIKE type_t.num5
   DEFINE li_res LIKE type_t.num5
   
   LET li_chk = 0
   CALL arpi900_chk_dgenv(g_rpzz_m.rpzz002,g_rpzz_m.rpzz001) RETURNING li_res

   IF li_res THEN 
      #判斷是否客制
      IF g_rpzz_m.rpzz002 = 'c' THEN 
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = "arp-00002"  #將APP內含功能、畫面轉為客製開發
         LET g_errparam.extend = ""
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         LET li_chk = 1 #客制
      ELSE 
         LET li_chk = 2 #標準
      END IF
   END IF 
 
         
   RETURN li_chk,li_res 
END FUNCTION

################################################################################
# Descriptions...: APP 專案名稱不可有空格符號
# Memo...........:
# Usage..........: CALL arpi900_chk_rpzz003(ps_rpzz003)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
# Return code....: 回传参数变量1   回传参数变量说明1
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION arpi900_chk_rpzz003(ps_rpzz003)
   DEFINE ps_rpzz003   STRING 
   DEFINE li_pos       LIKE type_t.num5
   DEFINE li_chk       LIKE type_t.num5

   LET ps_rpzz003 = ps_rpzz003.trim()
 
   LET li_chk = TRUE  
   FOR li_pos = 1 TO ps_rpzz003.getLength()
      CASE ps_rpzz003.subString(li_pos,li_pos)
         WHEN ASCII(32)  
            LET li_chk = FALSE 
            EXIT FOR 
      END CASE
   END FOR

   IF NOT li_chk THEN 
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "arp-00006"  #APP 專案名稱不可有空格符號
      LET g_errparam.extend = ps_rpzz003
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN FALSE 
   END IF 

   LET g_rpzz_m.rpzz003 = ps_rpzz003
   RETURN TRUE 
END FUNCTION

################################################################################
# Descriptions...: 命名原則：前置字串必須為APP編號_，後接2位流水號，
#                  新增時預設帶出"APP編號_2位流水號"。
# Memo...........:
# Usage..........: CALL arpi900_get_rpde002_serial()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION arpi900_get_rpde002_serial()
   DEFINE ls_str     STRING 
   DEFINE ls_sql     STRING
   DEFINE lc_rpde002 LIKE type_t.num10
   DEFINE li_num     LIKE type_t.num5
   DEFINE ls_num     STRING 
   
   #161028-00045#12   161129 earl mod s
   LET ls_str = "" 
   LET ls_sql = "SELECT MAX(rpde002) + 1 FROM rpde_t " ,
                " WHERE rpde001 = '",g_rpzz_m.rpzz001,"'"

#   LET ls_str = g_rpzz_m.rpzz001,"_" 
#   LET ls_sql = "SELECT MAX(rpde002) FROM rpde_t " ,
#                " WHERE rpde001 = '",g_rpzz_m.rpzz001,"'",
#                "  AND  rpde002 LIKE '",ls_str,"%'" ,
#                " ORDER BY rpde001 "
   #161028-00045#12   161129 earl mod e
   
   PREPARE arpi900_get_max_pre FROM ls_sql
   EXECUTE arpi900_get_max_pre INTO lc_rpde002
   FREE arpi900_get_max_pre

   IF cl_null(lc_rpde002) THEN
      #161028-00045#12   161129 earl mod s
      LET ls_str = "1"
      
#      LET ls_str = g_rpzz_m.rpzz001,"_01"
      #161028-00045#12   161129 earl mod e
   ELSE
      #161028-00045#12   161129 earl mod s
      LET ls_str = lc_rpde002
      
#      LET ls_str = lc_rpde002  
#      LET li_num = ls_str.subString(ls_str.getIndexOf("_",7)+1,ls_str.getLength()) + 1
#      LET ls_num = li_num USING "&&"   #補零
#      LET ls_str = g_rpzz_m.rpzz001,"_",ls_num
      #161028-00045#12   161129 earl mod e
   END IF

   RETURN ls_str
END FUNCTION

################################################################################
# Descriptions...: 前置字串必須為APP編號_，後接2位流水號，
#                  新增時預設帶出"APP編號_2位流水號"。
# Memo...........:
# Usage..........: CALL arpi900_chk_rpde002(ps_rpde002)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION arpi900_chk_rpde002(ps_rpde002)
   DEFINE ps_rpde002     STRING 
   DEFINE ls_sql     STRING
   DEFINE ls_num     STRING 
   DEFINE li_chk     LIKE type_t.num5
   DEFINE ls_temp    STRING 
   
   LET li_chk = TRUE 
   IF ps_rpde002.getIndexOf("_",1) THEN 
      LET ls_num = ps_rpde002.subString(ps_rpde002.getIndexOf("_",1)+1,ps_rpde002.getLength())
      #比對兩碼流水號
      IF NOT cl_chk_num(ls_num,"N") OR ls_num.getLength() <> 2 THEN
         LET li_chk = FALSE   
      END IF

      LET ls_temp = ps_rpde002.subString(1,ps_rpde002.getIndexOf("_",1)-1)
      #比對底線前APP編號是否一樣
      IF ls_temp <> g_rpzz_m.rpzz001 THEN 
         LET li_chk = FALSE   
      END IF 
   ELSE 
      LET li_chk = FALSE 
   END IF 

   IF NOT li_chk THEN 
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "arp-00005"  #功能編號必須為APP編號_，後接2位流水號
      LET g_errparam.extend = ps_rpde002
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN FALSE 
   END IF 
   RETURN TRUE 
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL arpi900_chk_dgenv(ps_flag,ps_prog)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION arpi900_chk_dgenv(ps_flag,ps_prog)
   DEFINE ps_flag    STRING 
   DEFINE ps_prog    STRING 
   
   #若 DGENV = s 『標準開發環境下，不可以建置客製程式 (%1)』
   IF FGL_GETENV("DGENV") = 's' THEN 
      IF ps_flag = 'c' THEN 
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = "azz-00180"
         LET g_errparam.extend = ""
         LET g_errparam.popup = TRUE
         LET g_errparam.replace[1] = ps_prog
         CALL cl_err()
         RETURN FALSE
      END IF 
   ELSE 
      IF ps_flag = 's' THEN 
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = "azz-00176"
         LET g_errparam.extend = ""
         LET g_errparam.popup = TRUE
         LET g_errparam.replace[1] = ps_prog
         CALL cl_err()
         RETURN FALSE
      END IF 
   END IF
   RETURN TRUE  
END FUNCTION

################################################################################
# Descriptions...: 刪除前檢查，判斷arpi800是否有資料
# Memo...........:
# Usage..........: CALL arpi900_chk_pre_del_arpi800(pc_rpzz001,pc_rpde002)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
# Return code....: 回传参数变量1   回传参数变量说明1
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION arpi900_chk_pre_del_arpi800(pc_rpzz001,pc_rpde002)
   DEFINE pc_rpzz001 LIKE rpzz_t.rpzz001
   DEFINE pc_rpde002 LIKE rpde_t.rpde002
   DEFINE li_cnt     LIKE type_t.num5 

   LET li_cnt = 0
   SELECT COUNT(*) INTO li_cnt FROM rpxb_t
    WHERE  rpxb002 = pc_rpzz001
     AND rpxb004 = pc_rpde002
     AND rpxbent = g_enterprise  

   IF li_cnt > 0 THEN 
      RETURN TRUE 
   END IF
   RETURN FALSE   
END FUNCTION

 
{</section>}
 
